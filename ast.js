/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3439329284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552551 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552567 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3422552566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3422552568 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3221226150 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582848 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007841 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007838 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254786106 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271560943 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671275 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448264 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448263 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448262 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448261 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818586210 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818586256 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254782673 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783441 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783511 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782726 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783396 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783344 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783356 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783268 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783280 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254783059 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782860 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782816 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782794 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782772 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254782693 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919187 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250756 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3254779940 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254785384 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568640 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969574382 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017879 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017878 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017877 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017876 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017875 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516584388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582915 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850607 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849420 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068448 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489661021 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3489661020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660998 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489661006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489661003 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3489661015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660970 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660974 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660964 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660954 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3489660953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660952 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3489660946 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3489660940 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3489660939 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291856014 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291856021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856019 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856027 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780001 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780016 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780013 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780010 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779941 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779999 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779983 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568656 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017872 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017871 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017862 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854642 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848508 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271562310 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271562157 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929938 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254779980 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3254779979 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779978 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779964 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3254779963 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779962 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779946 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779937 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3254779943 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779938 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779945 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557244 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557241 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557139 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3254779944 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568634 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568636 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2969568633 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568628 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568612 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2281701394 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701391 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2281701388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701380 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592522 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141891 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2399141901 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141893 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3254780079 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254786068 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254780000 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254786256 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3254779908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271562483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254780158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321889106 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889513 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889601 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889529 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889554 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889179 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889260 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889445 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889386 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889398 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889332 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889344 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321889120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111577 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111573 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3305111576 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111574 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305112120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338665997 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271560531 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271560184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338665996 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271560406 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271560656 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338666387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271560818 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3338665993 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2785017861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3338665992 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3338665995 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271557155 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557249 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557157 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557154 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557153 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557152 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557151 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557150 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557149 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557148 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557228 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557225 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557216 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557213 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557210 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557202 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121885 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121882 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121879 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557173 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557170 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557159 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557136 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557197 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557194 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557191 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557183 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557137 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557201 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557199 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557138 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557147 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557130 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557133 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271557156 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3338665994 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3271561603 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557250 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3271557164 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557163 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271560378 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271560359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271560340 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557146 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557126 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3271557127 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557145 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3271557125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557144 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3271557142 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3271557129 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3271560326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969578283 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007897 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969577319 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818585760 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671047 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671304 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671067 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3187671074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671071 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671069 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671066 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671065 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671064 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671048 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671043 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671063 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969569466 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121804 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572566 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473552 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582423 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582450 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582405 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2113929231 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2113929230 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929228 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2415919108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815299 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2214592519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2214592515 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929221 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554447 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI2785017880 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240742 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240741 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919122 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2415919121 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240704 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240659 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473554 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592520 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592516 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815306 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815300 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969572495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969572490 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969571585 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568637 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568638 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448274 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003123002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568481 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568484 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969572196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007811 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969569217 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898974 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339604 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137341025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340922 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137340550 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3137340486 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339575 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2164261152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007844 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087009002 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019900729 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154117637 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019931331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008732 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008719 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008716 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019909216 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019930420 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008194 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676328 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898897 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898884 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008909 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019907400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008055 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121671 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3036676235 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI3036676200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898919 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676206 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019898900 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898888 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676203 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3036676201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676204 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899118 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818585704 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818585703 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584215 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2147483653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583494 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578557 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576685 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473676 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473596 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576075 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818579318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576430 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818576104 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572629 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572640 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2113929251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554435, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2382364676 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2382364676.node = NNI2382364676;
var NNI2365587460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587460.node = NNI2365587460;
NTI2365587460.base = NTI33555171;
NTI2382364676.base = NTI2365587460;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2113929251 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929251.node = NNI2113929251;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2449473546 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2449473546.node = NNI2449473546;
var NNI2449473548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2449473548.node = NNI2449473548;
NTI2449473556.base = NTI2449473548;
NTI2818572694.base = NTI2449473556;
NTI2818572821.base = NTI2449473548;
NTI2818572640.base = NTI2449473548;
NTI2818572629.base = NTI2449473548;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2449473548;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2449473548, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2449473546, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818576104.base = NTI2818572292;
NTI2818576430.base = NTI2449473548;
NTI2818579318.base = NTI2449473548;
NTI2818576075.base = NTI2449473548;
NTI2818579834.base = NTI2449473548;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2449473596.base = NTI2449473548;
NTI2449473676.base = NTI2449473548;
NTI2449473667.base = NTI2449473548;
NTI2818576685.base = NTI2449473548;
var NNI2818576690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576685, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576690.node = NNI2818576690;
NTI2818576615.base = NTI2449473548;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2449473548;
var NNI2818578483 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578483.node = NNI2818578483;
var NNI2818578525 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578525.node = NNI2818578525;
var NNI2818578557 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473546, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818578557.node = NNI2818578557;
var NNI2348810261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2348810261.node = NNI2348810261;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572615.base = NTI2449473548;
NTI2818583494.base = NTI2449473548;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2449473546, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2147483653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2147483653.node = NNI2147483653;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818584215.base = NTI2919235630;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI2818585704 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818585704.node = NNI2818585704;
var NNI2818585703 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818585704, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473546, name: "Field1", sons: null}]};
NTI2818585703.node = NNI2818585703;
var NNI3036676201 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3036676201.node = NNI3036676201;
var NNI3036676204 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3036676201, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676203, name: "Field1", sons: null}]};
NTI3036676204.node = NNI3036676204;
NTI3019898908.base = NTI3036676204;
NTI3019899118.base = NTI3019898908;
NTI3003122753.base = NTI33554435;
var NNI3019898883 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3019898883.node = NNI3019898883;
NTI3019898888.base = NTI3019898883;
var NNI3019898900 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898888, name: "Field2", sons: null}]};
NTI3019898900.node = NNI3019898900;
var NNI3036676206 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3036676206, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3036676206, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3036676206, name: "Green", len: 0, sons: null}}};
NTI3036676206.node = NNI3036676206;
var NNI3019898919 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}]};
NTI3019898919.node = NNI3019898919;
NTI3036676200.base = NTI33554439;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
NTI3036676235.base = NTI3036676204;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI3003121667 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121667, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121667, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121667, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3003121667, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3003121667, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3003121667, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3003121667, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3003121667, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3003121667, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3003121667, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3003121667, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3003121667, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3003121667, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3003121667, name: "Assignment", len: 0, sons: null}}};
NTI3003121667.node = NNI3003121667;
NTI3003121671.base = NTI3003121668;
var NNI3003121670 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI3003121667, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3003121671, name: "children", sons: null}]};
NTI3003121670.node = NNI3003121670;
NTI3003121668.base = NTI3003121670;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]}]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008055.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3019907400 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3019907400.node = NNI3019907400;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008909 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008909.node = NNI3087008909;
NTI3019898985.base = NTI2046820355;
NTI3019898897.base = NTI3019898900;
var NNI3019898894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898897, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898894.node = NNI3019898894;
var NNI3019898884 = {kind: 1, offset: "queries", len: 0, typ: NTI3019898894, name: "queries", sons: null};
NTI3019898884.node = NNI3019898884;
var NNI3019898997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898985, name: "Field2", sons: null}]};
NTI3019898997.node = NNI3019898997;
NTI3087008200.base = NTI33554439;
NTI3036676328.base = NTI33554439;
NTI3087008194.base = NTI33554439;
NTI3019930420.base = NTI3087007751;
var NNI3019909216 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3019909216.node = NNI3019909216;
NTI2013268507.base = NTI33554439;
NTI3087008384.base = NTI33554439;
NTI3087008654.base = NTI33554439;
var NNI3087008719 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008719.node = NNI3087008719;
NTI3087008716.base = NTI3087008719;
var NNI3087008713 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008716, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008713.node = NNI3087008713;
var NNI3003121783 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121783.node = NNI3003121783;
var NNI3087008732 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008732.node = NNI3087008732;
var NNI3019931331 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3019931331.node = NNI3019931331;
NTI3154117637.base = NTI3087007751;
NTI3019900729.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2516582403 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2516582403, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2516582403, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2516582403, name: "Bold", len: 0, sons: null}}};
NTI2516582403.node = NNI2516582403;
NTI3087007783.base = NTI2516582403;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI2164261152 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2164261152.node = NNI2164261152;
var NNI2785017869 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2164261152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2785017869.node = NNI2785017869;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
var NNI2785017868 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2785017859, name: "parent", sons: null}, 
{kind: 1, offset: "anchor", len: 0, typ: NTI2785017869, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2164261152, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2147483653, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2785017868.node = NNI2785017868;
NTI2785017868.base = NTI33555171;
NTI2785017859.base = NTI2785017868;
var NNI3087007778 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mhash", len: 0, typ: NTI1325400067, name: "mhash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007844, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}, 
{kind: 1, offset: "widgetTemplate", len: 0, typ: NTI2785017859, name: "widgetTemplate", sons: null}, 
{kind: 1, offset: "cloneWidget", len: 0, typ: NTI33554466, name: "cloneWidget", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
NTI3087009002.base = NTI3087007773;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
NTI3137339575.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3137340486.base = NTI33554449;
NTI3137340550.base = NTI2516582403;
NTI3137340452.base = NTI33554449;
var NNI3137340922 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137340922.node = NNI3137340922;
var NNI3137341025 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137341025.node = NNI3137341025;
NTI3137339604.base = NTI33554449;
NTI3019900968.base = NTI33554439;
var NNI3019898980 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898884, name: "Field2", sons: null}]};
NTI3019898980.node = NNI3019898980;
NTI3019898977.base = NTI3019898980;
var NNI3019898974 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898977, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898974.node = NNI3019898974;
NTI3019898994.base = NTI3019898997;
var NNI3019898991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898994, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898991.node = NNI3019898991;
NTI2969569217.base = NTI3003121668;
var NNI3087007825 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007825.node = NNI3087007825;
NTI3087007822.base = NTI3087007825;
var NNI3087007819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007822, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007819.node = NNI3087007819;
var NNI3087007811 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007819, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}]};
NTI3087007811.node = NNI3087007811;
NTI3087007775.base = NTI3087007811;
var NNI2969568663 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2969568663.node = NNI2969568663;
var NNI2969568481 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568481, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568481, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969568481, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969568481, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969568481, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2969568481.node = NNI2969568481;
var NNI2969568484 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2969568481, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2969568484.node = NNI2969568484;
NTI2969568482.base = NTI2969568484;
NTI2969572196.base = NTI2969568482;
var NNI2969568631 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI2969568631.node = NNI2969568631;
var NNI3003123002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI3003123002.node = NNI3003123002;
NTI2818572428.base = NTI33554449;
var NNI2969568637 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568637, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568637, name: "AstCompletion", len: 0, sons: null}}};
NTI2969568637.node = NNI2969568637;
var NNI2969568638 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2969568637, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI3003121667, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2969568638.node = NNI2969568638;
NTI3204448274.base = NTI2969568638;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2969571585.base = NTI2969568638;
var NNI2969572490 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121668, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2969572490.node = NNI2969572490;
var NNI2969572495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969572490, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2969572495.node = NNI2969572495;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2214592520 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2214592520.node = NNI2214592520;
NTI2214592520.base = NTI33555171;
NTI2214592516.base = NTI2214592520;
var NNI2197815306 = {kind: 1, offset: "val", len: 0, typ: NTI2214592516, name: "val", sons: null};
NTI2197815306.node = NNI2197815306;
var NNI2197815300 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2197815306, name: "workspace", sons: null}]};
NTI2197815300.node = NNI2197815300;
NTI2197815300.base = NTI33555171;
NTI2818572427.base = NTI2197815300;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2449473554 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473554, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473554, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473554, name: "browser", len: 0, sons: null}}};
NTI2449473554.node = NNI2449473554;
var NNI2768240658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240659, name: "Field1", sons: null}]};
NTI2768240658.node = NNI2768240658;
NTI2768240657.base = NTI2768240658;
var NNI2768240651 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240657, name: "handlers", sons: null};
NTI2768240651.node = NNI2768240651;
var NNI2768240683 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240684, name: "Field1", sons: null}]};
NTI2768240683.node = NNI2768240683;
NTI2768240682.base = NTI2768240683;
var NNI2768240676 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240682, name: "handlers", sons: null};
NTI2768240676.node = NNI2768240676;
var NNI2768240705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240706, name: "Field1", sons: null}]};
NTI2768240705.node = NNI2768240705;
NTI2768240704.base = NTI2768240705;
var NNI2768240698 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240704, name: "handlers", sons: null};
NTI2768240698.node = NNI2768240698;
var NNI2768240722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240723, name: "Field1", sons: null}]};
NTI2768240722.node = NNI2768240722;
NTI2768240721.base = NTI2768240722;
var NNI2768240715 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240721, name: "handlers", sons: null};
NTI2768240715.node = NNI2768240715;
var NNI2415919121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919122, name: "Field1", sons: null}]};
NTI2415919121.node = NNI2415919121;
NTI2415919120.base = NTI2415919121;
var NNI2415919114 = {kind: 1, offset: "handlers", len: 0, typ: NTI2415919120, name: "handlers", sons: null};
NTI2415919114.node = NNI2415919114;
var NNI2768240742 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240743, name: "Field1", sons: null}]};
NTI2768240742.node = NNI2768240742;
NTI2768240741.base = NTI2768240742;
var NNI2768240735 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240741, name: "handlers", sons: null};
NTI2768240735.node = NNI2768240735;
var NNI2785017867 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2785017880, name: "getTextBounds", sons: null};
NTI2785017867.node = NNI2785017867;
var NNI2768240644 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2768240651, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2768240651, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2768240651, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2768240676, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2768240676, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2768240698, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2768240715, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2415919114, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2768240735, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2785017867, name: "layoutOptions", sons: null}]};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2113929222 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2113929222.node = NNI2113929222;
NTI2113929221.base = NTI2113929222;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2113929221, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2214592519.base = NTI2214592516;
var NNI2214592518 = {kind: 1, offset: "folders", len: 0, typ: NTI2214592519, name: "folders", sons: null};
NTI2214592518.node = NNI2214592518;
NTI2214592515.base = NTI2214592518;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463428.base = NTI33555171;
NTI2751463427.base = NTI2751463428;
NTI2197815299.base = NTI2197815300;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2113929229 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2113929221, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2113929230, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2113929231, name: "handleInput", sons: null}]};
NTI2113929229.node = NNI2113929229;
NTI2113929228.base = NTI2113929229;
var NNI2415919108 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2415919108.node = NNI2415919108;
NTI2415919108.base = NTI33555171;
NTI2415919107.base = NTI2415919108;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2197815299, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2415919107, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2516582438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2516582438.node = NNI2516582438;
NTI2516582435.base = NTI2516582438;
var NNI2516582432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582435, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582432.node = NNI2516582432;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582423.base = NTI2516582403;
var NNI2516582404 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2516582412, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2516582412, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2516582423, name: "fontStyle", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI2516582453 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2516582404, name: "Field2", sons: null}]};
NTI2516582453.node = NNI2516582453;
NTI2516582450.base = NTI2516582453;
var NNI2516582447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582450, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582447.node = NNI2516582447;
var NNI2516582424 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2516582432, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2516582447, name: "tokenColors", sons: null}]};
NTI2516582424.node = NNI2516582424;
NTI2516582405.base = NTI2516582424;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473539, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2415919107, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2483027972 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2483027972.node = NNI2483027972;
NTI2483027972.base = NTI33555171;
NTI2483027971.base = NTI2483027972;
NTI1291845718.base = NTI2483027971;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2415919107;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2449473554, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2768240643, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI33554447, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI33554447, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI33554447, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2785017859, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2214592515, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2751463427, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2516582405, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2415919107, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2113929228, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2449473556;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2449473552 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473552, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473552, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473552, name: "relative", len: 0, sons: null}}};
NTI2449473552.node = NNI2449473552;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473552, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572567 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2818572567.node = NNI2818572567;
NTI2818572566.base = NTI2818572567;
var NNI2818572510 = {kind: 2, len: 29, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2449473556, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2113929228, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "disableScrolling", len: 0, typ: NTI33554466, name: "disableScrolling", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "disableCompletions", len: 0, typ: NTI33554466, name: "disableCompletions", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "lastCompletionWidgets", len: 0, typ: NTI2818572566, name: "lastCompletionWidgets", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2415919108;
var NNI3003121804 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121804.node = NNI3003121804;
var NNI2969569466 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI2969569466.node = NNI2969569466;
NTI2818572509.base = NTI2818572510;
var NNI3187671048 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3187671048.node = NNI3187671048;
NTI3187671048.base = NTI33555171;
NTI3187671043.base = NTI3187671048;
NTI3187671063.base = NTI3187671043;
var NNI3187671068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3187671068.node = NNI3187671068;
NTI3187671067.base = NTI3187671068;
var NNI2499805188 = {kind: 1, offset: "canceled", len: 0, typ: NTI33554466, name: "canceled", sons: null};
NTI2499805188.node = NNI2499805188;
NTI2499805187.base = NTI2499805188;
var NNI3187671062 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3187671063, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3187671064, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3187671065, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3187671066, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3187671069, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3187671071, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3187671074, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3187671067, name: "lastItems", sons: null}, 
{kind: 1, offset: "cancellationToken", len: 0, typ: NTI2499805187, name: "cancellationToken", sons: null}]};
NTI3187671062.node = NNI3187671062;
NTI3187671062.base = NTI2483027972;
NTI3187671080.base = NTI3187671043;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
NTI3187671047.base = NTI3187671062;
var NNI3187671304 = {kind: 1, offset: "val", len: 0, typ: NTI3187671047, name: "val", sons: null};
NTI3187671304.node = NNI3187671304;
var NNI1291848451 = {kind: 1, offset: "val", len: 0, typ: NTI2483027971, name: "val", sons: null};
NTI1291848451.node = NNI1291848451;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2818585760 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818585760.node = NNI2818585760;
NTI1979711564.base = NTI33554449;
var NNI2969577319 = {kind: 1, offset: "completion", len: 0, typ: NTI2969568638, name: "completion", sons: null};
NTI2969577319.node = NNI2969577319;
NTI2969577319.base = NTI3187671048;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3087007968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007968.node = NNI3087007968;
var NNI3087007897 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007897.node = NNI3087007897;
var NNI2969578283 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2969578283.node = NNI2969578283;
NTI3271557143.base = NTI3271557129;
var NNI3271557123 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3271557123, name: "Int", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3271557123, name: "String", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3271557123, name: "Bool", len: 0, sons: null}}};
NTI3271557123.node = NNI3271557123;
var NNI3271557125 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI3271557123, name: "typ", sons: null}]};
NTI3271557125.node = NNI3271557125;
NTI3271557144.base = NTI3271557125;
var NNI3271557126 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI3271557126, name: "1", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3271557126, name: "1..n", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3271557126, name: "0..1", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3271557126, name: "0..n", len: 0, sons: null}}};
NTI3271557126.node = NNI3271557126;
var NNI3271557127 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI3271557126, name: "count", sons: null}]};
NTI3271557127.node = NNI3271557127;
NTI3271557145.base = NTI3271557127;
var NNI3271557128 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI33554449, name: "role", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}]};
NTI3271557128.node = NNI3271557128;
NTI3271557146.base = NTI3271557128;
var NNI3271557142 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "alias", len: 0, typ: NTI33554449, name: "alias", sons: null}, 
{kind: 1, offset: "base", len: 0, typ: NTI3271557129, name: "base", sons: null}, 
{kind: 1, offset: "interfaces", len: 0, typ: NTI3271557143, name: "interfaces", sons: null}, 
{kind: 1, offset: "isAbstract", len: 0, typ: NTI33554466, name: "isAbstract", sons: null}, 
{kind: 1, offset: "isInterface", len: 0, typ: NTI33554466, name: "isInterface", sons: null}, 
{kind: 1, offset: "properties", len: 0, typ: NTI3271557144, name: "properties", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3271557145, name: "children", sons: null}, 
{kind: 1, offset: "references", len: 0, typ: NTI3271557146, name: "references", sons: null}]};
NTI3271557142.node = NNI3271557142;
NTI3271557129.base = NTI3271557142;
NTI3271560326.base = NTI3271557129;
NTI3271560340.base = NTI3271557125;
NTI3271560359.base = NTI3271557127;
NTI3271560378.base = NTI3271557128;
var NNI3271557164 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557250, name: "Field1", sons: null}]};
NTI3271557164.node = NNI3271557164;
NTI3271557163.base = NTI3271557164;
var NNI3271561603 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557250, name: "Field1", sons: null}]};
NTI3271561603.node = NNI3271561603;
var NNI3338665994 = {kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null};
NTI3338665994.node = NNI3338665994;
NTI3271557133.base = NTI3271557156;
NTI3271557200.base = NTI3271557130;
var NNI3271557197 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557129, name: "Field2", sons: null}]};
NTI3271557197.node = NNI3271557197;
NTI3271557194.base = NTI3271557197;
var NNI3271557191 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557194, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557191.node = NNI3271557191;
var NNI3271557176 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557163, name: "Field2", sons: null}]};
NTI3271557176.node = NNI3271557176;
NTI3271557173.base = NTI3271557176;
var NNI3271557170 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557173, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557170.node = NNI3271557170;
var NNI3003121885 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820355, name: "Field2", sons: null}]};
NTI3003121885.node = NNI3003121885;
NTI3003121882.base = NTI3003121885;
var NNI3003121879 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121882, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121879.node = NNI3003121879;
var NNI3271557159 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "builders", len: 0, typ: NTI3271557170, name: "builders", sons: null}, 
{kind: 1, offset: "preferredBuilders", len: 0, typ: NTI3003121879, name: "preferredBuilders", sons: null}]};
NTI3271557159.node = NNI3271557159;
NTI3271557136.base = NTI3271557159;
var NNI3271557183 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "classes", len: 0, typ: NTI3271557191, name: "classes", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557136, name: "builder", sons: null}]};
NTI3271557183.node = NNI3271557183;
NTI3271557137.base = NTI3271557183;
NTI3271557201.base = NTI3271557137;
NTI3271557202.base = NTI3271557138;
var NNI3271557216 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557137, name: "Field2", sons: null}]};
NTI3271557216.node = NNI3271557216;
NTI3271557213.base = NTI3271557216;
var NNI3271557210 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557213, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557210.node = NNI3271557210;
var NNI3271557231 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557130, name: "Field2", sons: null}]};
NTI3271557231.node = NNI3271557231;
NTI3271557228.base = NTI3271557231;
var NNI3271557225 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557228, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557225.node = NNI3271557225;
var NNI3271557199 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "rootNodes", len: 0, typ: NTI3271557200, name: "rootNodes", sons: null}, 
{kind: 1, offset: "languages", len: 0, typ: NTI3271557201, name: "languages", sons: null}, 
{kind: 1, offset: "importedModels", len: 0, typ: NTI3271557202, name: "importedModels", sons: null}, 
{kind: 1, offset: "classesToLanguages", len: 0, typ: NTI3271557210, name: "classesToLanguages", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI3271557225, name: "nodes", sons: null}]};
NTI3271557199.node = NNI3271557199;
NTI3271557138.base = NTI3271557199;
var NNI3271557124 = {kind: 3, offset: "kind", len: 3, typ: NTI3271557123, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(1), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(2), {kind: 1, offset: "boolValue", len: 0, typ: NTI33554466, name: "boolValue", sons: null}]]};
NTI3271557124.node = NNI3271557124;
var NNI3271557149 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557124, name: "Field1", sons: null}]};
NTI3271557149.node = NNI3271557149;
NTI3271557148.base = NTI3271557149;
var NNI3271557151 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3271557151.node = NNI3271557151;
NTI3271557150.base = NTI3271557151;
NTI3271557154.base = NTI3271557130;
var NNI3271557153 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557154, name: "Field1", sons: null}]};
NTI3271557153.node = NNI3271557153;
NTI3271557152.base = NTI3271557153;
var NNI3271557147 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI2046820355, name: "class", sons: null}, 
{kind: 1, offset: "model", len: 0, typ: NTI3271557138, name: "model", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557130, name: "parent", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI2046820355, name: "role", sons: null}, 
{kind: 1, offset: "properties", len: 0, typ: NTI3271557148, name: "properties", sons: null}, 
{kind: 1, offset: "references", len: 0, typ: NTI3271557150, name: "references", sons: null}, 
{kind: 1, offset: "childLists", len: 0, typ: NTI3271557152, name: "childLists", sons: null}]};
NTI3271557147.node = NNI3271557147;
NTI3271557130.base = NTI3271557147;
var NNI3271557155 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onNewLine", len: 0, typ: NTI33554466, name: "onNewLine", sons: null}, 
{kind: 1, offset: "addNewlineAfter", len: 0, typ: NTI33554466, name: "addNewlineAfter", sons: null}, 
{kind: 1, offset: "indentChildren", len: 0, typ: NTI33554466, name: "indentChildren", sons: null}, 
{kind: 1, offset: "noSpaceLeft", len: 0, typ: NTI33554466, name: "noSpaceLeft", sons: null}, 
{kind: 1, offset: "noSpaceRight", len: 0, typ: NTI33554466, name: "noSpaceRight", sons: null}]};
NTI3271557155.node = NNI3271557155;
NTI3271557132.base = NTI3271557155;
var NNI3271557156 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557133, name: "parent", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "fillChildren", len: 0, typ: NTI3271557157, name: "fillChildren", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI33554466, name: "filled", sons: null}, 
{kind: 1, offset: "isVisible", len: 0, typ: NTI3271557249, name: "isVisible", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI3271557132, name: "style", sons: null}, 
{kind: 1, offset: "disableSelection", len: 0, typ: NTI33554466, name: "disableSelection", sons: null}, 
{kind: 1, offset: "increaseIndentBefore", len: 0, typ: NTI33554466, name: "increaseIndentBefore", sons: null}, 
{kind: 1, offset: "decreaseIndentBefore", len: 0, typ: NTI33554466, name: "decreaseIndentBefore", sons: null}, 
{kind: 1, offset: "increaseIndentAfter", len: 0, typ: NTI33554466, name: "increaseIndentAfter", sons: null}, 
{kind: 1, offset: "decreaseIndentAfter", len: 0, typ: NTI33554466, name: "decreaseIndentAfter", sons: null}]};
NTI3271557156.node = NNI3271557156;
NTI3271557156.base = NTI33555171;
NTI3338665994.base = NTI3271557156;
var NNI3338665995 = {kind: 1, offset: "property", len: 0, typ: NTI2046820355, name: "property", sons: null};
NTI3338665995.node = NNI3338665995;
NTI3338665995.base = NTI3271557156;
var NNI2785017860 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2785017860, name: "Absolute", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2785017860, name: "Horizontal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2785017860, name: "Vertical", len: 0, sons: null}}};
NTI2785017860.node = NNI2785017860;
var NNI2785017861 = {kind: 3, offset: "kind", len: 3, typ: NTI2785017860, name: "kind", sons: [[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]};
NTI2785017861.node = NNI2785017861;
NTI3338665993.base = NTI3271557133;
var NNI3338665992 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "layout", len: 0, typ: NTI2785017861, name: "layout", sons: null}, 
{kind: 1, offset: "inline", len: 0, typ: NTI33554466, name: "inline", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3338665993, name: "children", sons: null}]};
NTI3338665992.node = NNI3338665992;
NTI3338665992.base = NTI3271557156;
NTI3271560818.base = NTI3271557130;
var NNI3271557158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3271557158.node = NNI3271557158;
NTI3271557158.base = NTI3271557156;
var NNI3338666387 = {kind: 1, offset: "val", len: 0, typ: NTI3271557250, name: "val", sons: null};
NTI3338666387.node = NNI3338666387;
var NNI3271560656 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557125, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271560656.node = NNI3271560656;
var NNI3271560406 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557128, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271560406.node = NNI3271560406;
var NNI3338665996 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "reference", len: 0, typ: NTI2046820355, name: "reference", sons: null}, 
{kind: 1, offset: "property", len: 0, typ: NTI2046820355, name: "property", sons: null}, 
{kind: 1, offset: "child", len: 0, typ: NTI3271557133, name: "child", sons: null}]};
NTI3338665996.node = NNI3338665996;
NTI3338665996.base = NTI3271557156;
var NNI3271560184 = {kind: 1, offset: "val", len: 0, typ: NTI3271557130, name: "val", sons: null};
NTI3271560184.node = NNI3271560184;
var NNI3271560531 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557127, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271560531.node = NNI3271560531;
var NNI3338665997 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3338665997.node = NNI3338665997;
NTI3338665997.base = NTI3271557156;
var NNI3305111573 = {kind: 2, offset: 0, typ: null, name: null, len: 19, sons: {"0": {kind: 1, offset: 0, typ: NTI3305111573, name: "nkSupport", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3305111573, name: "nkTopLevel", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3305111573, name: "nkName", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3305111573, name: "nkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3305111573, name: "nkProc", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3305111573, name: "nkType", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3305111573, name: "nkString", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3305111573, name: "nkChar", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3305111573, name: "nkBool", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3305111573, name: "nkPointer", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3305111573, name: "nkSeq", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3305111573, name: "nkArray", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3305111573, name: "nkTuple", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3305111573, name: "nkTable", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI3305111573, name: "nkObject", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI3305111573, name: "nkTopPair", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI3305111573, name: "nkFieldPair", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI3305111573, name: "nkNil", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI3305111573, name: "nkRepeat", len: 0, sons: null}}};
NTI3305111573.node = NNI3305111573;
NTI3305111577.base = NTI3305111574;
var NNI3305111576 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI3305111573, name: "kind", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554449, name: "value", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI3305111577, name: "nodes", sons: null}]};
NTI3305111576.node = NNI3305111576;
NTI3305111574.base = NTI3305111576;
NTI3305112120.base = NTI3305111574;
NTI3321889120.base = NTI3305111574;
NTI3321889295.base = NTI3305111574;
NTI3321889344.base = NTI3305111574;
NTI3321889332.base = NTI3305111574;
NTI3321889398.base = NTI3305111574;
NTI3321889386.base = NTI3305111574;
NTI3321889457.base = NTI3305111574;
NTI3321889445.base = NTI3305111574;
NTI3321889260.base = NTI3305111574;
NTI3321889179.base = NTI3305111574;
NTI3321889554.base = NTI3305111574;
NTI3321889542.base = NTI3305111574;
NTI3321889529.base = NTI3305111574;
NTI3321889601.base = NTI3305111574;
NTI3321889513.base = NTI3305111574;
NTI3321889106.base = NTI3305111574;
var NNI3254780158 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3271557129, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3254780158.node = NNI3254780158;
var NNI3271562483 = {kind: 1, offset: "val", len: 0, typ: NTI3271557133, name: "val", sons: null};
NTI3271562483.node = NNI3271562483;
NTI3254779908.base = NTI33554435;
NTI3254786256.base = NTI33554435;
var NNI3254779907 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "firstIndex", len: 0, typ: NTI33554435, name: "firstIndex", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI33554435, name: "lastIndex", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI3254779908, name: "path", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "cell", len: 0, typ: NTI3271557133, name: "cell", sons: null}]};
NTI3254779907.node = NNI3254779907;
NTI3254780000.base = NTI3271557133;
NTI3254786068.base = NTI33554435;
var NNI3254780079 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3254779907, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3254780079.node = NNI3254780079;
var NNI2264924164 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI2214592520;
NTI2214592521.base = NTI33554449;
NTI2214592522.base = NTI33554449;
var NNI2214592517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2214592521, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2214592522, name: "folders", sons: null}]};
NTI2214592517.node = NNI2214592517;
var NNI2399141891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "done", len: 0, typ: NTI33554466, name: "done", sons: null}, 
{kind: 1, offset: "listing", len: 0, typ: NTI2214592517, name: "listing", sons: null}]};
NTI2399141891.node = NNI2399141891;
var NNI2399141907 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2399141891, name: "Field2", sons: null}]};
NTI2399141907.node = NNI2399141907;
NTI2399141904.base = NTI2399141907;
var NNI2399141901 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2399141904, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2399141901.node = NNI2399141901;
var NNI2399141893 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2399141901, name: "cachedDirectoryListings", sons: null}]};
NTI2399141893.node = NNI2399141893;
NTI2399141893.base = NTI2214592520;
var NNI2281701394 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2214592517, name: "Field2", sons: null}]};
NTI2281701394.node = NNI2281701394;
NTI2281701391.base = NTI2281701394;
var NNI2281701388 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2281701391, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2281701388.node = NNI2281701388;
var NNI2281701380 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2281701388, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2281701380.node = NNI2281701380;
NTI2281701380.base = NTI2214592520;
NTI2969568628.base = NTI2969568631;
var NNI2969568625 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568628, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2969568625.node = NNI2969568625;
NTI2969568633.base = NTI2969568636;
NTI2969568634.base = NTI2969568482;
NTI2969568635.base = NTI2969568482;
var NNI2969568612 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008713, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI3003121668, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2969568625, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2969568633, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2969568634, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2969568635, name: "redoOps", sons: null}]};
NTI2969568612.node = NNI2969568612;
NTI2969568612.base = NTI2197815300;
var NNI3271557247 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557138, name: "Field2", sons: null}]};
NTI3271557247.node = NNI3271557247;
NTI3271557244.base = NTI3271557247;
var NNI3271557241 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3271557244, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3271557241.node = NNI3271557241;
var NNI3271557233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "models", len: 0, typ: NTI3271557241, name: "models", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557136, name: "builder", sons: null}]};
NTI3271557233.node = NNI3271557233;
NTI3271557139.base = NTI3271557233;
var NNI3254779937 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3254779937, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3254779937, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3254779937, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3254779937, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3254779937, name: "SymbolNameChange", len: 0, sons: null}}};
NTI3254779937.node = NNI3254779937;
var NNI3254779943 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI3254779937, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3271557130, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3271557130, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI3254779943.node = NNI3254779943;
NTI3254779938.base = NTI3254779943;
NTI3254779945.base = NTI3254779938;
NTI3254779946.base = NTI3254779938;
var NNI3254779963 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3254779964, name: "Field1", sons: null}]};
NTI3254779963.node = NNI3254779963;
NTI3254779962.base = NTI3254779963;
var NNI3254779956 = {kind: 1, offset: "handlers", len: 0, typ: NTI3254779962, name: "handlers", sons: null};
NTI3254779956.node = NNI3254779956;
var NNI3254779979 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3254779980, name: "Field1", sons: null}]};
NTI3254779979.node = NNI3254779979;
NTI3254779978.base = NTI3254779979;
var NNI3254779972 = {kind: 1, offset: "handlers", len: 0, typ: NTI3254779978, name: "handlers", sons: null};
NTI3254779972.node = NNI3254779972;
var NNI3254779944 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "model", len: 0, typ: NTI3271557138, name: "model", sons: null}, 
{kind: 1, offset: "project", len: 0, typ: NTI3271557139, name: "project", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI3254779945, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI3254779946, name: "redoOps", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI3254779956, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "onChanged", len: 0, typ: NTI3254779972, name: "onChanged", sons: null}, 
{kind: 1, offset: "builder", len: 0, typ: NTI3271557136, name: "builder", sons: null}]};
NTI3254779944.node = NNI3254779944;
NTI3254779944.base = NTI2197815300;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2113929938 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929938.node = NNI2113929938;
var NNI3271562157 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3271557163, name: "Field1", sons: null}]};
NTI3271562157.node = NNI3271562157;
var NNI3271562310 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}]};
NTI3271562310.node = NNI3271562310;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848506.node = NNI1291848506;
NTI1291848506.base = NTI3187671048;
var NNI1291848508 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2197815306, name: "workspaceFolder", sons: null}]};
NTI1291848508.node = NNI1291848508;
NTI1291848508.base = NTI3187671048;
NTI1291854642.base = NTI2449473539;
var NNI1291848319 = {kind: 1, offset: "val", len: 0, typ: NTI2415919107, name: "val", sons: null};
NTI1291848319.node = NNI1291848319;
NTI2969568611.base = NTI2969568612;
NTI2969568649.base = NTI3003121668;
var NNI2969568647 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568649, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2969568647.node = NNI2969568647;
NTI2785017872.base = NTI2785017859;
var NNI2785017871 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI2785017861, name: "layout", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2785017872, name: "children", sons: null}]};
NTI2785017871.node = NNI2785017871;
NTI2785017871.base = NTI2785017868;
NTI2785017862.base = NTI2785017871;
NTI2969568656.base = NTI2969568638;
var NNI2969568658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2969568658.node = NNI2969568658;
NTI2969568657.base = NTI2969568658;
NTI2969568662.base = NTI2969568663;
var NNI2969568664 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568664.node = NNI2969568664;
var NNI2969568665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568665.node = NNI2969568665;
var NNI2969568666 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568666.node = NNI2969568666;
var NNI2969568667 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568667.node = NNI2969568667;
var NNI2969568641 = {kind: 2, len: 31, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI3003121668, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2969568647, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2969568647, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI3003121783, name: "deletedNode", sons: null}, 
{kind: 1, offset: "lastRootNode", len: 0, typ: NTI3003121668, name: "lastRootNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI3003121668, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2113929228, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "textEditorWidget", len: 0, typ: NTI2785017862, name: "textEditorWidget", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2969568656, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2969568657, name: "lastItems", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2969568662, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2969568664, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2969568665, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2969568666, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2969568667, name: "lastCommand", sons: null}]};
NTI2969568641.node = NNI2969568641;
NTI2969568641.base = NTI2415919108;
NTI3254779939.base = NTI3254779944;
var NNI3254779997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3271557133, name: "Field2", sons: null}]};
NTI3254779997.node = NNI3254779997;
NTI3254779994.base = NTI3254779997;
var NNI3254779991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3254779994, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3254779991.node = NNI3254779991;
NTI3254779999.base = NTI3254780000;
var NNI3254780016 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017859, name: "Field2", sons: null}]};
NTI3254780016.node = NNI3254780016;
NTI3254780013.base = NTI3254780016;
var NNI3254780010 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3254780013, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3254780010.node = NNI3254780010;
var NNI3254780002 = {kind: 1, offset: "cellToWidget", len: 0, typ: NTI3254780010, name: "cellToWidget", sons: null};
NTI3254780002.node = NNI3254780002;
NTI3254779941.base = NTI3254780002;
NTI3254780001.base = NTI33554435;
var NNI3254779983 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI3254779939, name: "document", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "nodeToCell", len: 0, typ: NTI3254779991, name: "nodeToCell", sons: null}, 
{kind: 1, offset: "logicalLines", len: 0, typ: NTI3254779999, name: "logicalLines", sons: null}, 
{kind: 1, offset: "cellWidgetContext", len: 0, typ: NTI3254779941, name: "cellWidgetContext", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI3254779907, name: "cursor", sons: null}, 
{kind: 1, offset: "useDefaultCellBuilder", len: 0, typ: NTI33554466, name: "useDefaultCellBuilder", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI3254780001, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}]};
NTI3254779983.node = NNI3254779983;
NTI3254779983.base = NTI2415919108;
var NNI1291856020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856020.node = NNI1291856020;
var NNI1291856021 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856021.node = NNI1291856021;
var NNI1291856019 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291856020, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291856021, name: "Field1", sons: null}]};
NTI1291856019.node = NNI1291856019;
NTI1291856027.base = NTI1291856019;
NTI1291856014.base = NTI2449473548;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3489660940.base = NTI2147483653;
var NNI3489660953 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3489660954, name: "Field1", sons: null}]};
NTI3489660953.node = NNI3489660953;
NTI3489660952.base = NTI3489660953;
var NNI3489660946 = {kind: 1, offset: "handlers", len: 0, typ: NTI3489660952, name: "handlers", sons: null};
NTI3489660946.node = NNI3489660946;
var NNI3489660970 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3489660970.node = NNI3489660970;
var NNI3489660977 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3489660974, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3489660974, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3489660970, name: "value", sons: null}]};
NTI3489660977.node = NNI3489660977;
NTI3489660974.base = NTI3489660977;
var NNI3489660988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3489660974, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3489660974, name: "tail", sons: null}]};
NTI3489660988.node = NNI3489660988;
NTI3489660998.base = NTI3489660977;
var NNI3489661006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3489660998, name: "Field2", sons: null}]};
NTI3489661006.node = NNI3489661006;
NTI3489661003.base = NTI3489661006;
var NNI3489661015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3489661003, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3489661015.node = NNI3489661015;
var NNI2818584226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818584226.node = NNI2818584226;
NTI2818584223.base = NTI2818584226;
var NNI2818584220 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818584223, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818584220.node = NNI2818584220;
var NNI3489660965 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3489660988, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3489661015, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI2818584220, name: "removedKeys", sons: null}]};
NTI3489660965.node = NNI3489660965;
NTI3489660964.base = NTI3489660965;
NTI3489661020.base = NTI3489661021;
var NNI1275068561 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1275068432, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1275068432, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1275068561.node = NNI1275068561;
NTI1275068561.base = NTI33555171;
NTI1275068448.base = NTI1275068561;
var NNI3489660939 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3489660940, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3489660946, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3489660964, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3489661020, name: "domUpdates", sons: null}, 
{kind: 1, offset: "currentEvent", len: 0, typ: NTI1275068448, name: "currentEvent", sons: null}]};
NTI3489660939.node = NNI3489660939;
NTI3489660939.base = NTI2768240644;
NTI2466250766.base = NTI2113929228;
NTI1291849420.base = NTI2415919108;
NTI1291849426.base = NTI1291849420;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850607 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850607.node = NNI1291850607;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2751463428;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2516582915.base = NTI2516582403;
var NNI2516584388 = {kind: 1, offset: "val", len: 0, typ: NTI2516582405, name: "val", sons: null};
NTI2516584388.node = NNI2516584388;
NTI2785017874.base = NTI2785017859;
var NNI2785017873 = {kind: 1, offset: "children", len: 0, typ: NTI2785017874, name: "children", sons: null};
NTI2785017873.node = NNI2785017873;
NTI2785017873.base = NTI2785017868;
NTI2785017876.base = NTI2785017859;
var NNI2785017875 = {kind: 1, offset: "children", len: 0, typ: NTI2785017876, name: "children", sons: null};
NTI2785017875.node = NNI2785017875;
NTI2785017875.base = NTI2785017868;
NTI2785017878.base = NTI2785017859;
var NNI2785017877 = {kind: 1, offset: "children", len: 0, typ: NTI2785017878, name: "children", sons: null};
NTI2785017877.node = NNI2785017877;
NTI2785017877.base = NTI2785017868;
var NNI2785017879 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2516582404, name: "style", sons: null}]};
NTI2785017879.node = NNI2785017879;
NTI2785017879.base = NTI2785017868;
var NNI2818578635 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578635.node = NNI2818578635;
NTI2969568640.base = NTI2969568641;
var NNI2969574382 = {kind: 1, offset: "val", len: 0, typ: NTI2969568640, name: "val", sons: null};
NTI2969574382.node = NNI2969574382;
NTI3254779940.base = NTI3254779983;
var NNI3254785384 = {kind: 1, offset: "val", len: 0, typ: NTI3254779940, name: "val", sons: null};
NTI3254785384.node = NNI3254785384;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2466250756 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250756.node = NNI2466250756;
NTI2466250756.base = NTI2415919108;
NTI2415919187.base = NTI2113929228;
NTI3254782693.base = NTI3305111574;
NTI3254782772.base = NTI3305111574;
NTI3254782794.base = NTI3305111574;
NTI3254782816.base = NTI3305111574;
NTI3254782860.base = NTI3305111574;
NTI3254783059.base = NTI3305111574;
NTI3254782757.base = NTI3305111574;
NTI3254783295.base = NTI3305111574;
NTI3254783280.base = NTI3305111574;
NTI3254783268.base = NTI3305111574;
NTI3254783356.base = NTI3305111574;
NTI3254783344.base = NTI3305111574;
NTI3254783396.base = NTI3305111574;
NTI3254783384.base = NTI3305111574;
NTI3254782726.base = NTI3305111574;
NTI3254783511.base = NTI3305111574;
NTI3254783441.base = NTI3305111574;
NTI3254782673.base = NTI3305111574;
var NNI2818586256 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818586256.node = NNI2818586256;
var NNI2818586210 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473546, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818586210.node = NNI2818586210;
NTI3204448261.base = NTI2969568638;
var NNI3204448264 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3204448264.node = NNI3204448264;
NTI3204448263.base = NTI3204448264;
var NNI3204448260 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3204448261, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3204448262, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3204448263, name: "lastItems", sons: null}]};
NTI3204448260.node = NNI3204448260;
NTI3204448260.base = NTI2483027972;
NTI3187671275.base = NTI2113929228;
var NNI3204448400 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969568638, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3204448400.node = NNI3204448400;
var NNI3187671186 = {kind: 1, offset: "val", len: 0, typ: NTI3187671043, name: "val", sons: null};
NTI3187671186.node = NNI3187671186;
var NNI2785018404 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2147483653, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785018404.node = NNI2785018404;
NTI1291847200.base = NTI2147483653;
var NNI2130706435 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2130706435, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2130706435, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2130706435, name: "Percent", len: 0, sons: null}}};
NTI2130706435.node = NNI2130706435;
var NNI2130706436 = {kind: 3, offset: "kind", len: 3, typ: NTI2130706435, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2130706436.node = NNI2130706436;
var NNI2130706495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2147483653, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2130706495.node = NNI2130706495;
NTI1291846989.base = NTI2147483653;
var NNI3271560943 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3271557124, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3271560943.node = NNI3271560943;
NTI3254786106.base = NTI33554435;
var NNI3087007841 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007841.node = NNI3087007841;
NTI3087007838.base = NTI3087007841;
var NNI3087007835 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007838, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007835.node = NNI3087007835;
NTI2516582848.base = NTI2516582403;
var NNI3221226150 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007774, name: "Field1", sons: null}]};
NTI3221226150.node = NNI3221226150;
NTI3422552568.base = NTI2516582403;
NTI3422552567.base = NTI33554449;
var NNI3422552566 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI3422552567, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554449, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI33554449, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI3422552568, name: "Field6", sons: null}]};
NTI3422552566.node = NNI3422552566;
var NNI3422552551 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI3422552551.node = NNI3422552551;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3439329284 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3439329284.node = NNI3439329284;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet59 = setConstr([65, 90], [97, 122]);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_3003123684 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet60 = setConstr([48, 57]);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr(4);
var ConstSet63 = setConstr(4);
var ConstSet64 = setConstr(5);
var ConstSet65 = setConstr(2);
var ConstSet66 = setConstr(3);
var ConstSet67 = setConstr(5);
var ConstSet68 = setConstr(6);
var ConstSet69 = setConstr(6);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(4);
var ConstSet74 = setConstr(4);
var ConstSet75 = setConstr(5);
var ConstSet76 = setConstr(5);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(4);
var ConstSet85 = setConstr(4);
var ConstSet86 = setConstr(6);
var ConstSet87 = setConstr(6);
var ConstSet88 = setConstr(0);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(0);
var ConstSet92 = setConstr(4);
var ConstSet93 = setConstr(4);
var ConstSet94 = setConstr(5);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(3);
var ConstSet98 = setConstr(2);
var ConstSet99 = setConstr(5);
var ConstSet100 = setConstr(4);
var ConstSet101 = setConstr(4);
var ConstSet102 = setConstr(5);
var ConstSet103 = setConstr(6);
var ConstSet104 = setConstr(3);
var ConstSet105 = setConstr(3);
var ConstSet106 = setConstr(2);
var ConstSet107 = setConstr(2);
var ConstSet108 = setConstr(4);
var ConstSet109 = setConstr(4);
var ConstSet110 = setConstr(5);
var ConstSet111 = setConstr(5);
var ConstSet112 = setConstr(6);
var ConstSet113 = setConstr(6);
var ConstSet114 = setConstr(5);
var ConstSet115 = setConstr(5);
var ConstSet116 = setConstr(3);
var ConstSet117 = setConstr(2);
var ConstSet118 = setConstr(5);
var ConstSet119 = setConstr(5);
var ConstSet120 = setConstr(6);
var ConstSet121 = setConstr(0);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(4);
var ConstSet127 = setConstr(0);
var ConstSet128 = setConstr(1);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(3);
var ConstSet132 = setConstr(3);
var ConstSet133 = setConstr(4);
var ConstSet134 = setConstr(5);
var ConstSet135 = setConstr(4);
var ConstSet136 = setConstr(10, 9, 7);
var ConstSet137 = setConstr(8);
var ConstSet138 = setConstr(1);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(0);
var ConstSet141 = setConstr(0);
var ConstSet142 = setConstr(0);
var ConstSet143 = setConstr();
var ConstSet144 = setConstr(0);
var ConstSet145 = setConstr(0);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(2);
var ConstSet148 = setConstr(1);
var ConstSet149 = setConstr();
var ConstSet150 = setConstr(1);
var ConstSet151 = setConstr(1);
var ConstSet152 = setConstr(1);
var ConstSet153 = setConstr(3);
var ConstSet154 = setConstr(3);
var ConstSet155 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet156 = setConstr(2);
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(0);
var ConstSet161 = setConstr(0);
var ConstSet162 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet163 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet164 = setConstr([48, 57]);
var ConstSet165 = setConstr([48, 57]);
var ConstSet166 = setConstr(101, 69);
var ConstSet167 = setConstr([48, 57]);
var ConstSet168 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet162[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet163[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet164[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet165[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet166[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet167[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet168[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet169 = setConstr(0);
var ConstSet170 = setConstr(0);
var ConstSet171 = setConstr(0);
var ConstSet172 = setConstr(0);
var ConstSet173 = setConstr(1);
var ConstSet174 = setConstr(4);
var ConstSet175 = setConstr(4);
var ConstSet176 = setConstr(4);
var ConstSet177 = setConstr(4);
var ConstSet178 = setConstr(1);
var ConstSet179 = setConstr(4);
var ConstSet180 = setConstr(0);
var ConstSet181 = setConstr(13, 10);
var ConstSet182 = setConstr(0);
var ConstSet183 = setConstr(1);
var ConstSet184 = setConstr(13, 10);
var ConstSet185 = setConstr([48, 57]);
var ConstSet186 = setConstr([48, 57]);
var ConstSet187 = setConstr(69, 101);
var ConstSet188 = setConstr(43, 45);
var ConstSet189 = setConstr([48, 57]);
var ConstSet190 = setConstr(46, 101, 69);
var ConstSet191 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet192 = setConstr([97, 122], [65, 90], 95);
var ConstSet193 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet194 = setConstr(4);
var ConstSet195 = setConstr([48, 57]);
var ConstSet196 = setConstr(0, 125);
var ConstSet197 = setConstr([48, 57]);
var ConstSet198 = setConstr([65, 90]);
var ConstSet199 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet200 = setConstr(6);
var ConstSet201 = setConstr(4);
var ConstSet202 = setConstr(4);
var ConstSet203 = setConstr(2);
var ConstSet204 = setConstr(2);
var ConstSet205 = setConstr(3);
var ConstSet206 = setConstr(3);
var ConstSet207 = setConstr(1);
var ConstSet208 = setConstr(1);
var ConstSet209 = setConstr(6);
var ConstSet210 = setConstr(6);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(5);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(6);
var ConstSet217 = setConstr(5);
var ConstSet218 = setConstr(6);
var ConstSet219 = setConstr(5);
var ConstSet220 = setConstr(4);
var ConstSet221 = setConstr(4);
var ConstSet222 = setConstr(2);
var ConstSet223 = setConstr(3);
var ConstSet224 = setConstr(1);
var ConstSet225 = setConstr(2);
var ConstSet226 = setConstr(2);
var ConstSet227 = setConstr(2);
var ConstSet228 = setConstr(6);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet229 = setConstr(0);
var ConstSet230 = setConstr(0);
var ConstSet231 = setConstr(46, 44);
var ConstSet232 = setConstr([65, 90]);
var ConstSet233 = setConstr([97, 122]);
var ConstSet234 = setConstr(4);
var ConstSet235 = setConstr(13, 10);
var ConstSet236 = setConstr([65, 90]);
    var names_1291854663 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet237 = setConstr(4);
var ConstSet238 = setConstr(2);
var ConstSet239 = setConstr(3);
var ConstSet240 = setConstr(1);
var ConstSet241 = setConstr(5);
var ConstSet242 = setConstr(5);
var ConstSet243 = setConstr(6);
var ConstSet244 = setConstr(6);
    var names_1291854797 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet245 = setConstr(4);
var ConstSet246 = setConstr(2);
var ConstSet247 = setConstr(3);
var ConstSet248 = setConstr(1);
var ConstSet249 = setConstr(5);
var ConstSet250 = setConstr(6);
var ConstSet251 = setConstr(5);
var ConstSet252 = setConstr(5);
var ConstSet253 = setConstr(2);
var ConstSet254 = setConstr(3);
var ConstSet255 = setConstr(1);
var ConstSet256 = setConstr(6);
var ConstSet257 = setConstr(6);
var ConstSet258 = setConstr(6);
var ConstSet259 = setConstr(2);
var ConstSet260 = setConstr(0);
var ConstSet261 = setConstr(1);
var ConstSet262 = setConstr(47, 47);
var ConstSet263 = setConstr(47, 47);
var ConstSet264 = setConstr(47, 47);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(47, 47);
var ConstSet271 = setConstr(47, 47);
var ConstSet272 = setConstr(47, 47);
var ConstSet273 = setConstr(47, 47);
var ConstSet274 = setConstr(47, 47);
var ConstSet275 = setConstr(2, 3);
var ConstSet276 = setConstr(2);
var ConstSet277 = setConstr(0);
var ConstSet278 = setConstr(1);
var ConstSet279 = setConstr(1);
var ConstSet280 = setConstr();
var ConstSet281 = setConstr();
var ConstSet282 = setConstr();
var ConstSet283 = setConstr();
var ConstSet284 = setConstr();
var ConstSet285 = setConstr(120, 88);
var ConstSet286 = setConstr(0);
    var names_1291854229 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet287 = setConstr(1);
var ConstSet288 = setConstr(1);
var ConstSet289 = setConstr(1);
var ConstSet290 = setConstr(4, 0);
var ConstSet291 = setConstr(4, 0);
var ConstSet292 = setConstr(4);
var ConstSet293 = setConstr(4);
var ConstSet294 = setConstr(4);
var ConstSet295 = setConstr(2, 3);
var ConstSet296 = setConstr(2, 3);
var ConstSet297 = setConstr(3);
var ConstSet298 = setConstr(2);
var ConstSet299 = setConstr(6);
var ConstSet300 = setConstr(4);
var ConstSet301 = setConstr(4);
var ConstSet302 = setConstr(2, 3);
var ConstSet303 = setConstr(2, 3);
var ConstSet304 = setConstr(3);
var ConstSet305 = setConstr(2);
var ConstSet306 = setConstr(2);
var ConstSet307 = setConstr(6);
var ConstSet308 = setConstr(5);
var ConstSet309 = setConstr(4);
var ConstSet310 = setConstr(6);
var ConstSet311 = setConstr(4);
var ConstSet312 = setConstr(6);
var ConstSet313 = setConstr(4);
var ConstSet314 = setConstr();
var ConstSet315 = setConstr(4);
var ConstSet316 = setConstr(6);
var ConstSet317 = setConstr([97, 122], [65, 90], [48, 57], 95);
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet318 = setConstr(10, 13, 32, 61);
var ConstSet319 = setConstr(10, 13, 32);
          var decodeTable_2315256293 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet320 = setConstr(6);
var ConstSet321 = setConstr(6);
var ConstSet322 = setConstr(6);
var ConstSet323 = setConstr(4);
var ConstSet324 = setConstr(4);
var ConstSet325 = setConstr(6);
var ConstSet326 = setConstr(6);
var ConstSet327 = setConstr(0);
var ConstSet328 = setConstr(1);
var ConstSet329 = setConstr(2);
var ConstSet330 = setConstr(6);
var ConstSet331 = setConstr(0);
var ConstSet332 = setConstr(1);
var ConstSet333 = setConstr(2);
var ConstSet334 = setConstr(0);
var ConstSet335 = setConstr(0);
var ConstSet336 = setConstr(1);
var ConstSet337 = setConstr(2);
var ConstSet338 = setConstr(0);
var ConstSet339 = setConstr(1);
var ConstSet340 = setConstr(0);
var ConstSet341 = setConstr(2);
var ConstSet342 = setConstr([65, 90]);
var ConstSet343 = setConstr(1);
var ConstSet344 = setConstr(0);
var ConstSet345 = setConstr(2);
var ConstSet346 = setConstr();
var ConstSet347 = setConstr(0);
var ConstSet348 = setConstr(0);
var ConstSet349 = setConstr(0);
var ConstSet350 = setConstr(0);
var ConstSet351 = setConstr();
var ConstSet352 = setConstr(1);
var ConstSet353 = setConstr(1);
var ConstSet354 = setConstr();
var ConstSet355 = setConstr(0);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function toCString(oid_2046820500) {
            var Temporary4;

  var result_2046820501 = null;

    Label1: {
      var i_2046820510 = 0;
      var i_2046820523 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820523 < 12)) break Label3;
            i_2046820510 = i_2046820523;
            if ((i_2046820510 < 4)) {
            Temporary4 = oid_2046820500.time;
            }
            else {
            if ((i_2046820510 < 8)) {
            Temporary4 = oid_2046820500.fuzz;
            }
            else {
            Temporary4 = oid_2046820500.count;
            }
            }
            var value_2046820511 = Temporary4;
            var byteOffset_2046820512 = modInt(i_2046820510, 4);
            var b_2046820517 = (value_2046820511 >> mulInt(byteOffset_2046820512, 8));
            result_2046820501 += "0123456789abcdef"[((((b_2046820517 & 240) >> 4)) | 0)];;
            result_2046820501 += "0123456789abcdef"[(((b_2046820517 & 15)) | 0)];;
            i_2046820523 = addInt(i_2046820523, 1);
          }
      };
    };

  return result_2046820501;

}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820547 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820547 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820547;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820547 = addInt(i_2046820547, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820541 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820541 <= 1)) break Label3;
            i_2063597633 = res_2046820541;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820539 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820539 < 64)) break Label6;
                    b_2063597638 = i_2046820539;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820539 = addInt(i_2046820539, 1);
                  }
              };
            };
            res_2046820541 = addInt(res_2046820541, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820525 = Date.now();
var seed_2046820526 = [initRand_2063597797(t_2046820525)];
var incr_2046820531 = [rand_2063597668(seed_2046820526[0], 2147483647)];
var fuzz_2046820536 = rand_2063597668(seed_2046820526[0], 2147483647);

function HEX24_2046820478(oid_2046820479) {
            var Temporary4;

  var result_2046820480 = [];

    if (result_2046820480.length < 24) { for (var i = result_2046820480.length; i < 24; ++i) result_2046820480.push(0); }
         else {result_2046820480.length = 24; };
    Label1: {
      var i_2046820486 = 0;
      var i_2046820624 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820624 < 12)) break Label3;
            i_2046820486 = i_2046820624;
            if ((i_2046820486 < 4)) {
            Temporary4 = oid_2046820479.time;
            }
            else {
            if ((i_2046820486 < 8)) {
            Temporary4 = oid_2046820479.fuzz;
            }
            else {
            Temporary4 = oid_2046820479.count;
            }
            }
            var value_2046820487 = Temporary4;
            var byteOffset_2046820488 = modInt(i_2046820486, 4);
            var b_2046820493 = (value_2046820487 >> mulInt(byteOffset_2046820488, 8));
            result_2046820480[chckIndx(mulInt(2, i_2046820486), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820493 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820480[chckIndx(addInt(mulInt(2, i_2046820486), 1), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820493 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2046820624 = addInt(i_2046820624, 1);
          }
      };
    };

  return result_2046820480;

}

function idToString(id_2046820621) {
  var result_2046820622 = null;

  BeforeRet: {
    result_2046820622 = toJSStr(HEX24_2046820478(id_2046820621));
    break BeforeRet;
  };

  return result_2046820622;

}

function idNone_2046820633() {
  var result_2046820634 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820634 = nimCopy(result_2046820634, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820634;

}
var null_2046820646 = idNone_2046820633();
var cb64_2315255812 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2315255813 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2382364694 = [initTable_1795162117(32)];

function new_2365587482() {
  var result_2365587485 = null;

  BeforeRet: {
    var r_2365587487 = null;
    r_2365587487 = ({m_type: NTI2382364676});
    result_2365587485 = r_2365587487;
    break BeforeRet;
  };

  return result_2365587485;

}
var fs_2365587509 = new_2365587482();
var nextEditorId_2449473853 = [0];
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2684355216 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2684355216 < L_855639328)) break Label3;
            i_855639333 = i_2684355216;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2684355216 = addInt(i_2684355216, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818584402 = 0;
      colontmp__2818584402 = subInt(count_855639134, 1);
      var res_2818584403 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584403 <= colontmp__2818584402)) break Label3;
            i_855639140 = res_2818584403;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818584403 = addInt(res_2818584403, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849221(t_1291849224, key_1291849225, hc_1291849226, hc_1291849226_Idx) {
  var result_1291849227 = 0;

  BeforeRet: {
    hc_1291849226[hc_1291849226_Idx] = hash_1325400491(key_1291849225);
    if ((hc_1291849226[hc_1291849226_Idx] == 0)) {
    hc_1291849226[hc_1291849226_Idx] = 314159265;
    }
    
    if (((t_1291849224.data).length == 0)) {
    result_1291849227 = -1;
    break BeforeRet;
    }
    
    var h_1291849279 = (hc_1291849226[hc_1291849226_Idx] & (t_1291849224.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0)) break Label2;
          if (((t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0 == hc_1291849226[hc_1291849226_Idx]) && eqStrings(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field1, key_1291849225))) {
          result_1291849227 = h_1291849279;
          break BeforeRet;
          }
          
          h_1291849279 = nextTry_1308622883(h_1291849279, (t_1291849224.data).length - 1);
        }
    };
    result_1291849227 = subInt(-1, h_1291849279);
  };

  return result_1291849227;

}

function hasKey_1291849214(t_1291849217, key_1291849218) {
  var result_1291849219 = false;

    var hc_1291849220 = [0];
    result_1291849219 = (0 <= rawGet_1291849221(t_1291849217, key_1291849218, hc_1291849220, 0));

  return result_1291849219;

}

function contains_1291849208(t_1291849211, key_1291849212) {
  var result_1291849213 = false;

  BeforeRet: {
    result_1291849213 = hasKey_1291849214(t_1291849211, key_1291849212);
    break BeforeRet;
  };

  return result_1291849213;

}

function mustRehash_1291849673(t_1291849675) {
  var result_1291849676 = false;

    if (!((t_1291849675.counter < (t_1291849675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849676 = ((mulInt((t_1291849675.data).length, 2) < mulInt(t_1291849675.counter, 3)) || (subInt((t_1291849675.data).length, t_1291849675.counter) < 4));

  return result_1291849676;

}

function rawInsert_1291850122(t_1291850126, data_1291850127, data_1291850127_Idx, key_1291850128, val_1291850129, hc_1291850130, h_1291850131) {
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850128, NTI33554449);
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field2 = val_1291850129;
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field0 = hc_1291850130;

  
}

function enlarge_1291849828(t_1291849831) {
    var n_1291849834 = [];
    n_1291849834 = new Array(chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647) ; ++i) { n_1291849834[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849831.data; t_1291849831.data = n_1291849834; n_1291849834 = Temporary1;    Label2: {
      var i_1291849898 = 0;
      var colontmp__2818584411 = 0;
      colontmp__2818584411 = (n_1291849834).length - 1;
      var res_2818584413 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584413 <= colontmp__2818584411)) break Label4;
            i_1291849898 = res_2818584413;
            var eh_1291849952 = n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849952)) {
            var j_1291849956 = (eh_1291849952 & (t_1291849831.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849831.data[chckIndx(j_1291849956, 0, (t_1291849831.data).length - 1)].Field0)) break Label6;
                  j_1291849956 = nextTry_1308622883(j_1291849956, (t_1291849831.data).length - 1);
                }
            };
            rawInsert_1291850122(t_1291849831, t_1291849831, "data", n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field1, n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field2, eh_1291849952, j_1291849956);
            }
            
            res_2818584413 = addInt(res_2818584413, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850291(t_1291850294, key_1291850295, hc_1291850296) {
  var result_1291850297 = 0;

  BeforeRet: {
    if (((t_1291850294.data).length == 0)) {
    result_1291850297 = -1;
    break BeforeRet;
    }
    
    var h_1291850348 = (hc_1291850296 & (t_1291850294.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0)) break Label2;
          if (((t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0 == hc_1291850296) && eqStrings(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field1, key_1291850295))) {
          result_1291850297 = h_1291850348;
          break BeforeRet;
          }
          
          h_1291850348 = nextTry_1308622883(h_1291850348, (t_1291850294.data).length - 1);
        }
    };
    result_1291850297 = subInt(-1, h_1291850348);
  };

  return result_1291850297;

}

function HEX5BHEX5DHEX3D_1291849500(t_1291849503, key_1291849504, val_1291849505) {
    if (((t_1291849503.data).length == 0)) {
    var correctSizeHEX60gensym36_1291849554 = slotsNeeded_1308622891(32);
    t_1291849503.counter = 0;
    t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849559 = [0];
    var index_1291849566 = rawGet_1291849221(t_1291849503, key_1291849504, hc_1291849559, 0);
    if ((0 <= index_1291849566)) {
    t_1291849503.data[chckIndx(index_1291849566, 0, (t_1291849503.data).length - 1)].Field2 = val_1291849505;
    }
    else {
      if (((t_1291849503.data).length == 0)) {
      var correctSizeHEX60gensym39_1291849668 = slotsNeeded_1308622891(32);
      t_1291849503.counter = 0;
      t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849673(t_1291849503)) {
      enlarge_1291849828(t_1291849503);
      index_1291849566 = rawGetKnownHC_1291850291(t_1291849503, key_1291849504, hc_1291849559[0]);
      }
      
      index_1291849566 = subInt(-1, index_1291849566);
      rawInsert_1291850122(t_1291849503, t_1291849503, "data", key_1291849504, val_1291849505, hc_1291849559[0], index_1291849566);
      t_1291849503.counter = addInt(t_1291849503.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2113929255(context_2113929256) {
  var result_2113929257 = null;

    result_2113929257 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2113929257.handleActions = true;
    result_2113929257.handleInputs = false;
    result_2113929257.context = nimCopy(null, context_2113929256, NTI33554449);

  return result_2113929257;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850582(t_1291850585, key_1291850586) {
  var result_1291850587 = null;
  var result_1291850587_Idx = 0;

    var hcHEX60gensym22_1291850588 = [0];
    var indexHEX60gensym22_1291850595 = rawGet_1291849221(t_1291850585, key_1291850586, hcHEX60gensym22_1291850588, 0);
    if ((0 <= indexHEX60gensym22_1291850595)) {
    result_1291850587 = t_1291850585.data[chckIndx(indexHEX60gensym22_1291850595, 0, (t_1291850585.data).length - 1)]; result_1291850587_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850586);
    }
    

  return [result_1291850587, result_1291850587_Idx];

}

function getEventHandlerConfig_1291849162(self_1291849163, context_1291849164) {
    var Temporary1;

  var result_1291849165 = null;

  BeforeRet: {
    if (!(contains_1291849208(self_1291849163.eventHandlerConfigs, context_1291849164))) {
    HEX5BHEX5DHEX3D_1291849500(self_1291849163.eventHandlerConfigs, context_1291849164, newEventHandlerConfig_2113929255(context_1291849164));
    }
    
    result_1291849165 = (Temporary1 = HEX5BHEX5D_1291850582(self_1291849163.eventHandlerConfigs, context_1291849164), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849165;

}

function getModeConfig_2818584034(self_2818584035, mode_2818584036) {
  var result_2818584037 = null;

  BeforeRet: {
    result_2818584037 = getEventHandlerConfig_1291849162(self_2818584035.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818584036 || []));
    break BeforeRet;
  };

  return result_2818584037;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818584443 = 0;
      var result_2818584444 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584443 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818584444 = chckRange(s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 2))) {
            result_2818584444 = chckRange((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 2);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 3))) {
            result_2818584444 = chckRange(((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 3);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 4))) {
            result_2818584444 = chckRange((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 4);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 5))) {
            result_2818584444 = chckRange(((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 5);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 6))) {
            result_2818584444 = chckRange((((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 6);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
              result_2818584444 = chckRange(s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818584443 = addInt(i_2818584443, 1);
            }
            }}}}}
            r_788533347 = result_2818584444;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818584450 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584450 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818584450, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818584450, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818584450 = addInt(i_2818584450, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818584453 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584453 <= 3)) break Label3;
            if ((x_2013267026[i_2818584453] != undefined)) {
            value_2013267035 = i_2818584453;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818584453 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818584457 = 0;
      colontmp__2818584457 = (n_2013268694).length - 1;
      var res_2818584458 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584458 <= colontmp__2818584457)) break Label4;
            i_2013268758 = res_2818584458;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818584458 = addInt(res_2818584458, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818584463 = 0;
      colontmp__2818584463 = (n_2013267558).length - 1;
      var res_2818584464 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584464 <= colontmp__2818584463)) break Label4;
            i_2013267622 = res_2818584464;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818584464 = addInt(res_2818584464, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818584438 = 0;
      colontmp__2818584438 = (input_2013269802).length;
      var i_2818584439 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584439 < colontmp__2818584438)) break Label3;
            i_2013269829 = i_2818584439;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818584435 = 0;
                  var L_2818584436 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818584435 < L_2818584436)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818584435, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818584435 = addInt(i_2818584435, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818584436))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818584439 = addInt(i_2818584439, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818584429 = 0;
      var L_2818584430 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584429 < L_2818584430)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818584429, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818584429 = addInt(i_2818584429, 1);
            if (!(((commands_2013269906).length == L_2818584430))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2113929330(t_2113929333) {
  var result_2113929334 = 0;

    result_2113929334 = t_2113929333.counter;

  return result_2113929334;

}

function buildDFA_2113929279(config_2113929280) {
  var result_2113929281 = null;

  BeforeRet: {
    var resultHEX60gensym2_2113929561 = [];
    Label1: {
      var xHEX60gensym2_2113929562 = {Field0: [], Field1: []};
      var L_2818584421 = len_2113929330(config_2113929280.commands);
      Label2: {
        var h_2818584423 = 0;
        var colontmp__2818584424 = 0;
        colontmp__2818584424 = (config_2113929280.commands.data).length - 1;
        var res_2818584425 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818584425 <= colontmp__2818584424)) break Label4;
              h_2818584423 = res_2818584425;
              if (isFilled_1308622880(config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2113929562 = nimCopy(xHEX60gensym2_2113929562, {Field0: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field2, NTI33554449)}, NTI2113929251);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2113929562, NTI2113929251);
              resultHEX60gensym2_2113929561.push(Temporary5);;
              if (!((len_2113929330(config_2113929280.commands) == L_2818584421))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818584425 = addInt(res_2818584425, 1);
            }
        };
      };
    };
    result_2113929281 = buildDFA_2013269905(resultHEX60gensym2_2113929561);
    break BeforeRet;
  };

  return result_2113929281;

}

function invoke_2415919167(event_2415919169) {
    Label1: {
      var h_2415919192 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584470 = 0;
      var L_2818584471 = (event_2415919169.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584470 < L_2818584471)) break Label3;
            h_2415919192 = event_2415919169.handlers[chckIndx(i_2818584470, 0, (event_2415919169.handlers).length - 1)];
            h_2415919192.Field1();
            i_2818584470 = addInt(i_2818584470, 1);
            if (!(((event_2415919169.handlers).length == L_2818584471))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2415919143(self_2415919144) {
    if (!(self_2415919144.mDirty)) {
    invoke_2415919167(self_2415919144.onMarkedDirty);
    }
    
    self_2415919144.mDirty = true;

  
}

function setMode_2818584223(self_2818584224, mode_2818584225) {
        
function HEX3Aanonymous_2818584251(actionHEX60gensym189HEX60gensym190_2818584252, argHEX60gensym189HEX60gensym190_2818584253) {
          var result_2818584254 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584239.config.handleActions) {
            var action_2818584255 = nimCopy(null, actionHEX60gensym189HEX60gensym190_2818584252, NTI33554449);
            var arg_2818584256 = nimCopy(null, argHEX60gensym189HEX60gensym190_2818584253, NTI33554449);
            var responseHEX60gensym189HEX60gensym190_2818584257 = handleAction_2818572655(self_2818584224, action_2818584255, arg_2818584256);
            if (handlerHEX60gensym189_2818584239.config.consumeAllActions) {
            result_2818584254 = 3;
            break BeforeRet;
            }
            
            result_2818584254 = responseHEX60gensym189HEX60gensym190_2818584257;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym189_2818584239.config.consumeAllActions) {
            result_2818584254 = 3;
            break BeforeRet;
            }
            else {
              result_2818584254 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818584254;

        }
        
function HEX3Aanonymous_2818584259(inputHEX60gensym189HEX60gensym191_2818584260) {
          var result_2818584261 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584239.config.handleInputs) {
            var input_2818584262 = nimCopy(null, inputHEX60gensym189HEX60gensym191_2818584260, NTI33554449);
            result_2818584261 = handleInput_2818572663(self_2818584224, input_2818584262);
            break BeforeRet;
            }
            else {
              result_2818584261 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818584261;

        }

  BeforeRet: {
    if (eqStrings(mode_2818584225, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818584230 = [mnewString(0)];
    fmtRes_2818584230[0].push.apply(fmtRes_2818584230[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818584230, 0, mode_2818584225, []);
    fmtRes_2818584230[0].push.apply(fmtRes_2818584230[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818584230[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818584225).length == 0)) {
    self_2818584224.modeEventHandler = null;
    }
    else {
      var config_2818584231 = getModeConfig_2818584034(self_2818584224, mode_2818584225);
      Label1: {
        var handlerHEX60gensym189_2818584239 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym189_2818584239.config = config_2818584231;
        handlerHEX60gensym189_2818584239.dfaInternal = buildDFA_2113929279(config_2818584231);
        handlerHEX60gensym189_2818584239.handleAction = HEX3Aanonymous_2818584251;
        handlerHEX60gensym189_2818584239.handleInput = HEX3Aanonymous_2818584259;
      };
      self_2818584224.modeEventHandler = handlerHEX60gensym189_2818584239;
    }
    
    self_2818584224.currentMode = nimCopy(null, mode_2818584225, NTI33554449);
    markDirty_2415919143(self_2818584224);
  };

  
}

function setModeJsWrapper_2818584184(self_2818584348, mode_2818584349) {
    setMode_2818584223(self_2818584348, mode_2818584349);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818584184(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818584479(self_2818584480) {
  var result_2818584481 = [];

  BeforeRet: {
    result_2818584481 = nimCopy(null, self_2818584480.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818584481;

}

function modeJsWrapper_2818584475(self_2818584510) {
  var result_2818584511 = [];

    result_2818584511 = nimCopy(null, mode_2818584479(self_2818584510), NTI33554449);

  return result_2818584511;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818584475(this));};

function getContextWithMode_2818583609(self_2818583610, context_2818583611) {
  var result_2818584539 = [];

  BeforeRet: {
    result_2818584539 = nimCopy(null, (context_2818583611 || []).concat([46] || [],self_2818583610.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818584539;

}

function getContextWithModeJsWrapper_2818584532(self_2818584569, context_2818584570) {
  var result_2818584571 = [];

    result_2818584571 = nimCopy(null, getContextWithMode_2818583609(self_2818584569, context_2818584570), NTI33554449);

  return result_2818584571;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818584532(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818583669(s_2818583671, default_2818583672) {
    var Temporary1;

  var result_2818583673 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583671))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818583672;
      break;
    }
    result_2818583673 = Temporary1;

  return result_2818583673;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818584700 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584700 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818584700, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818584700 = addInt(i_2818584700, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2684355097 = 0;
      colontmp__2684355097 = subInt(L_33557827, 1);
      var res_2684355098 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355098 <= colontmp__2684355097)) break Label3;
            i_33557832 = res_2684355098;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2684355098 = addInt(res_2684355098, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818584706 = 0;
      var splitsHEX60gensym40_2818584707 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818584706 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818584709 = lastHEX60gensym40_2818584706;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818584706 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818584706, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818584706 = addInt(lastHEX60gensym40_2818584706, 1);
                }
            };
            if ((splitsHEX60gensym40_2818584707 == 0)) {
            lastHEX60gensym40_2818584706 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818584709, subInt(lastHEX60gensym40_2818584706, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818584707 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818584707 = subInt(splitsHEX60gensym40_2818584707, 1);
            lastHEX60gensym40_2818584706 = addInt(lastHEX60gensym40_2818584706, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818583643(editor_2818583645, path_2818583646, default_2818583647) {
  var result_2818583653 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583645 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2818583665 = HEX7BHEX7D_1627393316(editor_2818583645.options, nsuSplitString(path_2818583646, [46], -1));
      if ((nodeHEX60gensym166_2818583665 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
    };
    result_2818583653 = parseEnum_2818583669(getStr_1627390106(nodeHEX60gensym166_2818583665, []), default_2818583647);
    break BeforeRet;
  };

  return result_2818583653;

}

function selection_2818572805(self_2818572806) {
  var result_2818572807 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572807 = nimCopy(result_2818572807, self_2818572806.selectionsInternal[chckIndx((self_2818572806.selectionsInternal).length - 1, 0, (self_2818572806.selectionsInternal).length - 1)], NTI2449473548);

  return result_2818572807;

}

function getCursor_2818583639(self_2818583640, cursor_2818583641) {
  var result_2818583642 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818583641) {
    case 0:
      var configCursor_2818583703 = getOption_2818583643(self_2818583640.editor, getContextWithMode_2818583609(self_2818583640, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818583642 = nimCopy(result_2818583642, getCursor_2818583639(self_2818583640, configCursor_2818583703), NTI2449473546);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field1, NTI2449473546);
      break BeforeRet;
      break;
    case 2:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field0, NTI2449473546);
      break BeforeRet;
      break;
    }
  };

  return result_2818583642;

}

function updateTargetColumn_2818584601(self_2818584602, cursor_2818584603) {
    self_2818584602.targetColumn = getCursor_2818583639(self_2818584602, cursor_2818584603).Field1;

  
}

function updateTargetColumnJsWrapper_2818584597(self_2818584632, cursor_2818584633) {
    updateTargetColumn_2818584601(self_2818584632, cursor_2818584633);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818584597(this, cursor_));};

function HEX3DHEX3D_2449473612(x_2449473614, y_2449473615) {
  var result_2449473616 = false;

  BeforeRet: {
    if (!((x_2449473614["Field0"] == y_2449473615["Field0"]))) {
    result_2449473616 = false;
    break BeforeRet;
    }
    
    if (!((x_2449473614["Field1"] == y_2449473615["Field1"]))) {
    result_2449473616 = false;
    break BeforeRet;
    }
    
    result_2449473616 = true;
    break BeforeRet;
  };

  return result_2449473616;

}

function HEX3DHEX3D_2449473602(x_2449473604, y_2449473605) {
  var result_2449473606 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2449473612(x_2449473604["Field0"], y_2449473605["Field0"]))) {
    result_2449473606 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2449473612(x_2449473604["Field1"], y_2449473605["Field1"]))) {
    result_2449473606 = false;
    break BeforeRet;
    }
    
    result_2449473606 = true;
    break BeforeRet;
  };

  return result_2449473606;

}

function newSeq_2818572845(len_2818572847) {
  var result_2818572848 = [];

    result_2818572848 = new Array(len_2818572847); for (var i = 0 ; i < len_2818572847 ; ++i) { result_2818572848[i] = []; }
  return result_2818572848;

}

function expandIfNeeded_2818572835(deq_2818572837) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572837.mask == 0)) {
    var correctSizeHEX60gensym9_2818572839 = nextPowerOfTwo_872415437(4);
    deq_2818572837.mask = subInt(correctSizeHEX60gensym9_2818572839, 1);
    deq_2818572837.data = new Array(chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647) ; ++i) { deq_2818572837.data[i] = []; }    }
    
    var cap_2818572844 = addInt(deq_2818572837.mask, 1);
    if ((cap_2818572844 <= deq_2818572837.count)) {
    var n_2818572862 = newSeq_2818572845(chckRange(mulInt(cap_2818572844, 2), 0, 2147483647));
    var i_2818572863 = 0;
    Label1: {
      var x_2818572873 = null;
      var x_2818572873_Idx = 0;
      var i_2818584766 = deq_2818572837.head;
      Label2: {
        var c_2818584768 = 0;
        var i_2818584769 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584769 < deq_2818572837.count)) break Label4;
              c_2818584768 = i_2818584769;
              x_2818572873 = deq_2818572837.data; x_2818572873_Idx = chckIndx(i_2818584766, 0, (deq_2818572837.data).length - 1);
              Temporary5 = x_2818572873[x_2818572873_Idx];
              x_2818572873[x_2818572873_Idx] = genericReset(x_2818572873[x_2818572873_Idx], NTI2449473556);
              n_2818572862[chckIndx(i_2818572863, 0, (n_2818572862).length - 1)] = nimCopy(null, Temporary5, NTI2449473556);
              i_2818572863 = addInt(i_2818572863, 1);
              i_2818584766 = (addInt(i_2818584766, 1) & deq_2818572837.mask);
              i_2818584769 = addInt(i_2818584769, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572862;
    n_2818572862 = genericReset(n_2818572862, NTI2818572694);
    deq_2818572837.data = nimCopy(null, Temporary6, NTI2818572694);
    deq_2818572837.mask = subInt(mulInt(cap_2818572844, 2), 1);
    deq_2818572837.tail = deq_2818572837.count;
    deq_2818572837.head = 0;
    }
    

  
}

function addLast_2818572826(deq_2818572828, item_2818572829) {
    expandIfNeeded_2818572835(deq_2818572828);
    deq_2818572828.count = addInt(deq_2818572828.count, 1);
    deq_2818572828.data[chckIndx(deq_2818572828.tail, 0, (deq_2818572828.data).length - 1)] = nimCopy(null, item_2818572829, NTI2449473556);
    deq_2818572828.tail = (addInt(deq_2818572828.tail, 1) & deq_2818572828.mask);

  
}

function len_2818572976(deq_2818572978) {
  var result_2818572979 = 0;

    result_2818572979 = deq_2818572978.count;

  return result_2818572979;

}

function popFirst_2818573048(deq_2818573050) {
    var Temporary1;

  var result_2818573051 = [];

    if ((deq_2818573050.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573050.count = subInt(deq_2818573050.count, 1);
    Temporary1 = deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)];
    deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)] = genericReset(deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)], NTI2449473556);
    result_2818573051 = nimCopy(null, Temporary1, NTI2449473556);
    deq_2818573050.head = (addInt(deq_2818573050.head, 1) & deq_2818573050.mask);

  return result_2818573051;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572673(self_2818572674, line_2818572675) {
  var result_2818572676 = 0;

  BeforeRet: {
    if ((line_2818572675 < (self_2818572674.lines).length)) {
    result_2818572676 = (self_2818572674.lines[chckIndx(line_2818572675, 0, (self_2818572674.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572676 = 0;
    break BeforeRet;
  };

  return result_2818572676;

}

function clampCursor_2818572687(self_2818572688, cursor_2818572689) {
  var result_2818572690 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572691 = nimCopy(null, cursor_2818572689, NTI2449473546);
    if (((self_2818572688.lines).length == 0)) {
    var colontmp__2818584773 = 0;
    var colontmp__2818584774 = 0;
    result_2818572690 = nimCopy(result_2818572690, {Field0: colontmp__2818584773, Field1: colontmp__2818584774}, NTI2449473546);
    break BeforeRet;
    }
    
    cursor_2818572691.Field0 = clamp_1660945119(cursor_2818572691.Field0, 0, subInt((self_2818572688.lines).length, 1));
    cursor_2818572691.Field1 = clamp_1660945119(cursor_2818572691.Field1, 0, lineLength_2818572673(self_2818572688, cursor_2818572691.Field0));
    result_2818572690 = nimCopy(result_2818572690, cursor_2818572691, NTI2449473546);
    break BeforeRet;
  };

  return result_2818572690;

}

function clampSelection_2818572712(self_2818572713, selection_2818572714) {
  var result_2818572715 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584771 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field0);
    var colontmp__2818584772 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field1);
    result_2818572715 = nimCopy(result_2818572715, {Field0: nimCopy(null, colontmp__2818584771, NTI2449473546), Field1: nimCopy(null, colontmp__2818584772, NTI2449473546)}, NTI2449473548);

  return result_2818572715;

}

function clampSelection_2818572716(self_2818572717, selection_2818572718) {
  var result_2818572719 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572719 = nimCopy(result_2818572719, clampSelection_2818572712(self_2818572717.document, selection_2818572718), NTI2449473548);

  return result_2818572719;

}

function selectionHEX3D_2818572811(self_2818572812, selection_2818572813) {
  BeforeRet: {
    if ((((self_2818572812.selectionsInternal).length == 1) && HEX3DHEX3D_2449473602(self_2818572812.selectionsInternal[chckIndx(0, 0, (self_2818572812.selectionsInternal).length - 1)], selection_2818572813))) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818572812.selectionHistory, self_2818572812.selectionsInternal);
    if ((100 < len_2818572976(self_2818572812.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818572812.selectionHistory);
    }
    
    self_2818572812.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572716(self_2818572812, selection_2818572813), NTI2449473548)], NTI2818572821);
    markDirty_2415919143(self_2818572812);
  };

  
}

function invertSelection_2818584718(self_2818584719) {
    selectionHEX3D_2818572811(self_2818584719, {Field0: nimCopy(null, selection_2818572805(self_2818584719).Field1, NTI2449473546), Field1: nimCopy(null, selection_2818572805(self_2818584719).Field0, NTI2449473546)});

  
}

function invertSelectionJsWrapper_2818584714(self_2818584747) {
    invertSelection_2818584718(self_2818584747);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818584714(this));};

function any_2449473972(s_2449473974, pred_2449473976) {
  var result_2449473977 = false;

  BeforeRet: {
    Label1: {
      var i_2449473990 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585220 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585220 < (s_2449473974).length)) break Label3;
            i_2449473990 = s_2449473974[chckIndx(i_2818585220, 0, (s_2449473974).length - 1)];
            if (pred_2449473976(i_2449473990)) {
            result_2449473977 = true;
            break BeforeRet;
            }
            
            i_2818585220 = addInt(i_2818585220, 1);
          }
      };
    };
    result_2449473977 = false;
  };

  return result_2449473977;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2449473882(x_2449473884, y_2449473885) {
  var result_2449473886 = false;

  BeforeRet: {
    var c_2449473896 = cmp_33557727(x_2449473884["Field0"], y_2449473885["Field0"]);
    if ((c_2449473896 < 0)) {
    result_2449473886 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473896)) {
    result_2449473886 = false;
    break BeforeRet;
    }
    
    var c_2449473901 = cmp_33557727(x_2449473884["Field1"], y_2449473885["Field1"]);
    if ((c_2449473901 < 0)) {
    result_2449473886 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473901)) {
    result_2449473886 = false;
    break BeforeRet;
    }
    
    result_2449473886 = true;
    break BeforeRet;
  };

  return result_2449473886;

}

function contains_2449473930(selection_2449473931, other_2449473932) {
  var result_2449473933 = false;

    result_2449473933 = (HEX3CHEX3D_2449473882(selection_2449473931.Field0, other_2449473932.Field0) && HEX3CHEX3D_2449473882(other_2449473932.Field1, selection_2449473931.Field1));

  return result_2449473933;

}

function contains_2449474009(self_2449474010, other_2449474011) {
    other_2449474011 = nimCopy(null, other_2449474011, NTI2449473548);
    
function HEX3Aanonymous_2449474013(s_2449474016) {
      var result_2449474019 = false;

        result_2449474019 = contains_2449473930(s_2449474016, other_2449474011);

      return result_2449474019;

    }

  var result_2449474012 = false;

    result_2449474012 = any_2449473972(self_2449474010, HEX3Aanonymous_2449474013);

  return result_2449474012;

}

function deduplicate_2818572757(s_2818572759, isSorted_2818572760) {
  var result_2818572761 = [];

    result_2818572761 = nimCopy(null, [], NTI2818572640);
    if ((0 < (s_2818572759).length)) {
    if (isSorted_2818572760) {
    var prev_2818572769 = nimCopy(null, s_2818572759[chckIndx(0, 0, (s_2818572759).length - 1)], NTI2449473548);
    var Temporary1 = nimCopy(null, prev_2818572769, NTI2449473548);
    result_2818572761.push(Temporary1);;
    Label2: {
      var i_2818572781 = 0;
      var colontmp__2818585212 = 0;
      colontmp__2818585212 = (s_2818572759).length - 1;
      var res_2818585213 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585213 <= colontmp__2818585212)) break Label4;
            i_2818572781 = res_2818585213;
            if (!(HEX3DHEX3D_2449473602(s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], prev_2818572769))) {
            prev_2818572769 = nimCopy(prev_2818572769, s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], NTI2449473548);
            var Temporary5 = nimCopy(null, prev_2818572769, NTI2449473548);
            result_2818572761.push(Temporary5);;
            }
            
            res_2818585213 = addInt(res_2818585213, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572793 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818585217 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818585217 < (s_2818572759).length)) break Label8;
              itm_2818572793 = s_2818572759[chckIndx(i_2818585217, 0, (s_2818572759).length - 1)];
              if (!(contains_2449474009(result_2818572761, itm_2818572793))) {
              var Temporary9 = nimCopy(null, itm_2818572793, NTI2449473548);
              result_2818572761.push(Temporary9);;
              }
              
              i_2818585217 = addInt(i_2818585217, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572761;

}

function map_2818572735(s_2818572738, op_2818572740) {
  var result_2818572741 = [];

    result_2818572741 = new Array(chckRange((s_2818572738).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572738).length, 0, 2147483647) ; ++i) { result_2818572741[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572756 = 0;
      var colontmp__2818585223 = 0;
      colontmp__2818585223 = (s_2818572738).length;
      var i_2818585224 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585224 < colontmp__2818585223)) break Label3;
            i_2818572756 = i_2818585224;
            result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)] = nimCopy(result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)], op_2818572740(s_2818572738[chckIndx(i_2818572756, 0, (s_2818572738).length - 1)]), NTI2449473548);
            i_2818585224 = addInt(i_2818585224, 1);
          }
      };
    };

  return result_2818572741;

}

function clampAndMergeSelections_2818572720(self_2818572721, selections_2818572722) {
    
function HEX3Aanonymous_2818572724(s_2818572731) {
      var result_2818572734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572734 = nimCopy(result_2818572734, clampSelection_2818572712(self_2818572721, s_2818572731), NTI2449473548);

      return result_2818572734;

    }

  var result_2818572723 = [];

    result_2818572723 = nimCopy(null, deduplicate_2818572757(map_2818572735(selections_2818572722, HEX3Aanonymous_2818572724), false), NTI2818572629);

  return result_2818572723;

}

function HEX40_2818579363(a_2818579365) {
  var result_2818579366 = [];

    result_2818579366 = new Array(chckRange((a_2818579365).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818579365).length, 0, 2147483647) ; ++i) { result_2818579366[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818579381 = 0;
      var colontmp__2818585227 = 0;
      colontmp__2818585227 = subInt((a_2818579365).length, 1);
      var res_2818585228 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585228 <= colontmp__2818585227)) break Label3;
            i_2818579381 = res_2818585228;
            result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)] = nimCopy(result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)], a_2818579365[chckIndx(i_2818579381, 0, (a_2818579365).length - 1)], NTI2449473548);
            res_2818585228 = addInt(res_2818585228, 1);
          }
      };
    };

  return result_2818579366;

}

function byteOffset_2818579343(self_2818579344, cursor_2818579345) {
  var result_2818579346 = 0;

    result_2818579346 = cursor_2818579345.Field1;
    Label1: {
      var i_2818579351 = 0;
      var i_2818585231 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585231 < cursor_2818579345.Field0)) break Label3;
            i_2818579351 = i_2818585231;
            result_2818579346 = addInt(result_2818579346, addInt((self_2818579344.lines[chckIndx(i_2818579351, 0, (self_2818579344.lines).length - 1)]).length, 1));
            i_2818585231 = addInt(i_2818585231, 1);
          }
      };
    };

  return result_2818579346;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818584212 = 0;
      colontmp__2818584212 = start_855639700;
      var res_2818584213 = colontmp__2818584212;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584213 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818584213;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818584213 = addInt(res_2818584213, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818585234 = 0;
      colontmp__2818585234 = subInt(m_855639633, 1);
      var i_2818585235 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585235 < colontmp__2818585234)) break Label3;
            i_855639653 = i_2818585235;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818585235 = addInt(i_2818585235, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579918(x_2818579920, x_2818579920_Idx, item_2818579921, i_2818579922) {
    var it_2818579942 = [];
    x_2818579920[x_2818579920_Idx] = x_2818579920[x_2818579920_Idx] || []; x_2818579920[x_2818579920_Idx].splice(i_2818579922, 0, it_2818579942);
    x_2818579920[x_2818579920_Idx][chckIndx(i_2818579922, 0, (x_2818579920[x_2818579920_Idx]).length - 1)] = nimCopy(null, item_2818579921, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2449474032(cursor_2449474033) {
  var result_2449474034 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585244 = nimCopy(null, cursor_2449474033, NTI2449473546);
    var colontmp__2818585245 = nimCopy(null, cursor_2449474033, NTI2449473546);
    result_2449474034 = nimCopy(result_2449474034, {Field0: nimCopy(null, colontmp__2818585244, NTI2449473546), Field1: nimCopy(null, colontmp__2818585245, NTI2449473546)}, NTI2449473548);

  return result_2449474034;

}

function add_2449474056(cursor_2449474057, selection_2449474058) {
  var result_2449474059 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(cursor_2449474057, selection_2449474058.Field0)) {
    result_2449474059 = nimCopy(result_2449474059, cursor_2449474057, NTI2449473546);
    break BeforeRet;
    }
    
    if ((selection_2449474058.Field0.Field0 == selection_2449474058.Field1.Field0)) {
    if ((cursor_2449474057.Field0 == selection_2449474058.Field0.Field0)) {
    var colontmp__2818585248 = cursor_2449474057.Field0;
    var colontmp__2818585249 = addInt(cursor_2449474057.Field1, subInt(selection_2449474058.Field1.Field1, selection_2449474058.Field0.Field1));
    result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585248, Field1: colontmp__2818585249}, NTI2449473546);
    break BeforeRet;
    }
    else {
      result_2449474059 = nimCopy(result_2449474059, cursor_2449474057, NTI2449473546);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2449474057.Field0 == selection_2449474058.Field0.Field0)) {
    var colontmp__2818585250 = selection_2449474058.Field1.Field0;
    var colontmp__2818585251 = addInt(selection_2449474058.Field1.Field1, subInt(cursor_2449474057.Field1, selection_2449474058.Field0.Field1));
    result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585250, Field1: colontmp__2818585251}, NTI2449473546);
    break BeforeRet;
    }
    else {
      var colontmp__2818585252 = addInt(cursor_2449474057.Field0, subInt(selection_2449474058.Field1.Field0, selection_2449474058.Field0.Field0));
      var colontmp__2818585253 = cursor_2449474057.Field1;
      result_2449474059 = nimCopy(result_2449474059, {Field0: colontmp__2818585252, Field1: colontmp__2818585253}, NTI2449473546);
      break BeforeRet;
    }
    }
  };

  return result_2449474059;

}

function add_2449474064(self_2449474065, other_2449474066) {
  var result_2449474067 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585246 = add_2449474056(self_2449474065.Field0, other_2449474066);
    var colontmp__2818585247 = add_2449474056(self_2449474065.Field1, other_2449474066);
    result_2449474067 = nimCopy(result_2449474067, {Field0: nimCopy(null, colontmp__2818585246, NTI2449473546), Field1: nimCopy(null, colontmp__2818585247, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474067;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818585255 = 0;
      colontmp__2818585255 = (a_855639591).length - 1;
      var res_2818585256 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585256 <= colontmp__2818585255)) break Label3;
            i_855639608 = res_2818585256;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818585256 = addInt(res_2818585256, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818585259 = 0;
      colontmp__2818585259 = (a_855639591).length - 1;
      var res_2818585260 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585260 <= colontmp__2818585259)) break Label6;
            i_855639621 = res_2818585260;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818585260 = addInt(res_2818585260, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818579537(val_2818579539) {
  var result_2818579540 = ({val: null});

    if (!(!((val_2818579539 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818579540.val = val_2818579539;

  return result_2818579540;

}

function invoke_2818580009(event_2818580011, arg_2818580012) {
    Label1: {
      var h_2818580035 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585264 = 0;
      var L_2818585265 = (event_2818580011.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585264 < L_2818585265)) break Label3;
            h_2818580035 = event_2818580011.handlers[chckIndx(i_2818585264, 0, (event_2818580011.handlers).length - 1)];
            h_2818580035.Field1(arg_2818580012);
            i_2818585264 = addInt(i_2818585264, 1);
            if (!(((event_2818580011.handlers).length == L_2818585265))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573292(event_2818573294, arg_2818573295) {
    Label1: {
      var h_2818573318 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585269 = 0;
      var L_2818585270 = (event_2818573294.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585269 < L_2818585270)) break Label3;
            h_2818573318 = event_2818573294.handlers[chckIndx(i_2818585269, 0, (event_2818573294.handlers).length - 1)];
            h_2818573318.Field1(arg_2818573295);
            i_2818585269 = addInt(i_2818585269, 1);
            if (!(((event_2818573294.handlers).length == L_2818585270))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573395(t_2818573398) {
    Label1: {
      var i_2818573467 = 0;
      var colontmp__2818585273 = 0;
      colontmp__2818585273 = (t_2818573398.data).length;
      var i_2818585274 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585274 < colontmp__2818585273)) break Label3;
            i_2818573467 = i_2818585274;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field0 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field1 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field2 = null;
            i_2818585274 = addInt(i_2818585274, 1);
          }
      };
    };
    t_2818573398.counter = 0;

  
}

function notifyTextChanged_2818573268(self_2818573269) {
    invoke_2818573292(self_2818573269.textChanged, self_2818573269);
    clear_2818573395(self_2818573269.styledTextCache);

  
}

function insert_2818579853(self_2818579854, selections_2818579855, oldSelection_2818579856, text_2818579857, notify_2818579858, record_2818579859, autoIndent_2818579860) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579861 = [];

    var newEmptyLines_2818579862 = [];
    result_2818579861 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579854, selections_2818579855), NTI2449473556);
    var undoOp_2818579870 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579856), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579876 = 0;
      var selection_2818579877 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585208 = 0;
      var L_2818585209 = (result_2818579861).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585208 < L_2818585209)) break Label3;
            i_2818579876 = i_2818585208;
            selection_2818579877 = nimCopy(selection_2818579877, result_2818579861[chckIndx(i_2818585208, 0, (result_2818579861).length - 1)], NTI2449473548);
            var oldCursor_2818579878 = nimCopy(null, selection_2818579877.Field1, NTI2449473546);
            var cursor_2818579879 = nimCopy(null, selection_2818579877.Field1, NTI2449473546);
            var startByte_2818579880 = byteOffset_2818579343(self_2818579854, cursor_2818579879);
            var lineCounter_2818579881 = 0;
            if (self_2818579854.singleLine) {
            var text_2818579882 = nsuReplaceStr(text_2818579857, [10], [32]);
            if (((self_2818579854.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579882, NTI33554449);
            self_2818579854.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579854.lines, chckIndx(0, 0, (self_2818579854.lines).length - 1), text_2818579882, chckRange(cursor_2818579879.Field1, 0, 2147483647));
            }
            
            cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (text_2818579882).length);
            }
            else {
              Label5: {
                var line_2818579894 = [];
                var first_2818585197 = 0;
                var last_2818585198 = 0;
                var eolpos_2818585199 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818585198 < (text_2818579857).length) && !((ConstSet23[text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)]] != undefined)))) break Label9;
                            last_2818585198 = addInt(last_2818585198, 1);
                          }
                      };
                      eolpos_2818585199 = last_2818585198;
                      if ((last_2818585198 < (text_2818579857).length)) {
                      if ((text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 10)) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      }
                      else {
                      if ((text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 13)) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      if (((last_2818585198 < (text_2818579857).length) && (text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 10))) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818585198, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818585199, 1);
                      }
                      
                      line_2818579894 = substr_33557821(text_2818579857, first_2818585197, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579881)) {
                      insert_2818579918(self_2818579854, "lines", HEX5BHEX5D_855639319(self_2818579854.lines[chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579879.Field1, 1)), chckRange(addInt(cursor_2818579879.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579862.push(addInt(cursor_2818579879.Field0, 1));;
                      if ((cursor_2818579879.Field1 < lineLength_2818572673(self_2818579854, cursor_2818579879.Field0))) {
                      delete_855639365(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579879.Field1, subInt(lineLength_2818572673(self_2818579854, cursor_2818579879.Field0), 1)));
                      }
                      
                      var colontmp__2818585193 = addInt(cursor_2818579879.Field0, 1);
                      var colontmp__2818585194 = 0;
                      cursor_2818579879 = nimCopy(cursor_2818579879, {Field0: colontmp__2818585193, Field1: colontmp__2818585194}, NTI2449473546);
                      }
                      
                      if ((0 < (line_2818579894).length)) {
                      insert_33557745(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), line_2818579894, chckRange(cursor_2818579879.Field1, 0, 2147483647));
                      cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (line_2818579894).length);
                      }
                      
                      if ((eolpos_2818585199 == last_2818585198)) {
                      break Label6;
                      }
                      
                      first_2818585197 = last_2818585198;
                      } finally {
                      lineCounter_2818579881 = addInt(lineCounter_2818579881, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)], toSelection_2449474032(cursor_2818579879), NTI2449473548);
            Label12: {
              var k_2818579969 = 0;
              var colontmp__2818585203 = 0;
              var colontmp__2818585204 = 0;
              colontmp__2818585203 = addInt(i_2818579876, 1);
              colontmp__2818585204 = (result_2818579861).length - 1;
              var res_2818585205 = colontmp__2818585203;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818585205 <= colontmp__2818585204)) break Label14;
                    k_2818579969 = res_2818585205;
                    result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], add_2449474064(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field1: nimCopy(null, cursor_2818579879, NTI2449473546)}), NTI2449473548);
                    res_2818585205 = addInt(res_2818585205, 1);
                  }
              };
            };
            if (!((self_2818579854.tsParser == null))) {
            var edit_2818579973 = {startIndex: startByte_2818579880, oldEndIndex: startByte_2818579880, newEndIndex: addInt(startByte_2818579880, (text_2818579857).length), startPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579879.Field0, column: cursor_2818579879.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579854.currentTree.edit(edit_2818579973);
            var strValue_2818579974 = nsuJoinSep(self_2818579854.lines, [10]);
            self_2818579854.currentTree = parseString_2885681211(self_2818579854.tsParser, strValue_2818579974, some_2818579537(self_2818579854.currentTree));
            }
            
            self_2818579854.version = addInt(self_2818579854.version, 1);
            if (record_2818579859) {
            var Temporary15 = undoOp_2818579870;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field1: nimCopy(null, cursor_2818579879, NTI2449473546)}, NTI2449473548), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579858) {
            invoke_2818580009(self_2818579854.textInserted, {Field0: self_2818579854, Field1: nimCopy(null, oldCursor_2818579878, NTI2449473546), Field2: nimCopy(null, text_2818579857, NTI33554449)});
            }
            
            i_2818585208 = addInt(i_2818585208, 1);
            if (!(((result_2818579861).length == L_2818585209))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579858) {
    notifyTextChanged_2818573268(self_2818579854);
    }
    
      if (!record_2818579859) Temporary16 = false; else {        var Temporary17 = undoOp_2818579870;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579854.undoOps.push(undoOp_2818579870);;
    self_2818579854.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579861;

}

function selections_2818572802(self_2818572803) {
  var result_2818572804 = [];

    result_2818572804 = nimCopy(null, self_2818572803.selectionsInternal, NTI2449473556);

  return result_2818572804;

}

function insert_2818584781(self_2818584782, selections_2818584783, text_2818584784, notify_2818584785, record_2818584786, autoIndent_2818584787) {
  var result_2818584788 = [];

  BeforeRet: {
    result_2818584788 = nimCopy(null, insert_2818579853(self_2818584782.document, selections_2818584783, selections_2818572802(self_2818584782), text_2818584784, notify_2818584785, record_2818584786, autoIndent_2818584787), NTI2818576430);
    break BeforeRet;
  };

  return result_2818584788;

}

function insertJsWrapper_2818584777(self_2818584822, selections_2818584823, text_2818584824, notify_2818584825, record_2818584826, autoIndent_2818584827) {
  var result_2818584828 = [];

    result_2818584828 = nimCopy(null, insert_2818584781(self_2818584822, selections_2818584823, text_2818584824, notify_2818584825, record_2818584826, autoIndent_2818584827), NTI2818579318);

  return result_2818584828;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818584777(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2449473911(selection_2449473912) {
  var result_2449473913 = false;

    result_2449473913 = HEX3DHEX3D_2449473612(selection_2449473912.Field0, selection_2449473912.Field1);

  return result_2449473913;

}

function HEX3E_2449473870(a_2449473871, b_2449473872) {
  var result_2449473873 = false;

  BeforeRet: {
    if ((b_2449473872.Field0 < a_2449473871.Field0)) {
    result_2449473873 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473871.Field0 == b_2449473872.Field0) && (b_2449473872.Field1 < a_2449473871.Field1))) {
    result_2449473873 = true;
    break BeforeRet;
    }
    else {
      result_2449473873 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473873;

}

function isBackwards_2449473902(selection_2449473903) {
  var result_2449473904 = false;

  BeforeRet: {
    result_2449473904 = HEX3E_2449473870(selection_2449473903.Field0, selection_2449473903.Field1);
    break BeforeRet;
  };

  return result_2449473904;

}

function normalized_2449473905(selection_2449473906) {
  var result_2449473907 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2449473902(selection_2449473906)) {
    var colontmp__2818585367 = nimCopy(null, selection_2449473906.Field1, NTI2449473546);
    var colontmp__2818585368 = nimCopy(null, selection_2449473906.Field0, NTI2449473546);
    result_2449473907 = nimCopy(result_2449473907, {Field0: nimCopy(null, colontmp__2818585367, NTI2449473546), Field1: nimCopy(null, colontmp__2818585368, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    }
    else {
      result_2449473907 = nimCopy(result_2449473907, selection_2449473906, NTI2449473548);
      break BeforeRet;
    }
    
  };

  return result_2449473907;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818585375 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585375 < L_855639300)) break Label3;
            i_855639305 = i_2818585375;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818585375 = addInt(i_2818585375, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818574091(self_2818574092, selection_2818574093) {
  var result_2818574094 = [];

  BeforeRet: {
    var colontmp__2818585373 = normalized_2449473905(selection_2818574093);
    var first_2818574095 = nimCopy(null, colontmp__2818585373["Field0"], NTI2449473546);
    var last_2818574096 = nimCopy(null, colontmp__2818585373["Field1"], NTI2449473546);
    if ((first_2818574095.Field0 == last_2818574096.Field0)) {
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(first_2818574095.Field1, subInt(last_2818574096.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639319(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818574095.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574143 = 0;
      var colontmp__2818585370 = 0;
      colontmp__2818585370 = addInt(first_2818574095.Field0, 1);
      var i_2818585371 = colontmp__2818585370;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585371 < last_2818574096.Field0)) break Label3;
            i_2818574143 = i_2818585371;
            result_2818574094.push.apply(result_2818574094, [10]);;
            result_2818574094.push.apply(result_2818574094, self_2818574092.lines[chckIndx(i_2818574143, 0, (self_2818574092.lines).length - 1)]);;
            i_2818585371 = addInt(i_2818585371, 1);
          }
      };
    };
    result_2818574094.push.apply(result_2818574094, [10]);;
    result_2818574094.push.apply(result_2818574094, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(last_2818574096.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818574096.Field1, 1))));;
  };

  return result_2818574094;

}

function delete_2818579472(s_2818579474, s_2818579474_Idx, slice_2818579475) {
    if (!((((slice_2818579475.a < (s_2818579474[s_2818579474_Idx]).length) && (0 <= slice_2818579475.a)) && (slice_2818579475.b < (s_2818579474[s_2818579474_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818579475, NTI805306392), Field1: (s_2818579474[s_2818579474_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818579475.a <= slice_2818579475.b)) {
    var n_2818579522 = addInt(subInt(slice_2818579475.b, slice_2818579475.a), 1);
    var first_2818579523 = slice_2818579475.a;
    s_2818579474[s_2818579474_Idx].splice(first_2818579523, n_2818579522);
    }
    

  
}

function subtract_2449474040(cursor_2449474041, selection_2449474042) {
  var result_2449474043 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(cursor_2449474041, selection_2449474042.Field0)) {
    result_2449474043 = nimCopy(result_2449474043, cursor_2449474041, NTI2449473546);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2449473882(cursor_2449474041, selection_2449474042.Field1)) {
    result_2449474043 = nimCopy(result_2449474043, selection_2449474042.Field0, NTI2449473546);
    break BeforeRet;
    }
    
    if ((cursor_2449474041.Field0 == selection_2449474042.Field1.Field0)) {
    if ((selection_2449474042.Field0.Field0 == selection_2449474042.Field1.Field0)) {
    var colontmp__2818585381 = cursor_2449474041.Field0;
    var colontmp__2818585382 = subInt(cursor_2449474041.Field1, subInt(selection_2449474042.Field1.Field1, selection_2449474042.Field0.Field1));
    result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585381, Field1: colontmp__2818585382}, NTI2449473546);
    break BeforeRet;
    }
    else {
      var colontmp__2818585383 = selection_2449474042.Field0.Field0;
      var colontmp__2818585384 = addInt(selection_2449474042.Field0.Field1, subInt(cursor_2449474041.Field1, selection_2449474042.Field1.Field1));
      result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585383, Field1: colontmp__2818585384}, NTI2449473546);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818585385 = subInt(cursor_2449474041.Field0, subInt(selection_2449474042.Field1.Field0, selection_2449474042.Field0.Field0));
    var colontmp__2818585386 = cursor_2449474041.Field1;
    result_2449474043 = nimCopy(result_2449474043, {Field0: colontmp__2818585385, Field1: colontmp__2818585386}, NTI2449473546);
    break BeforeRet;
  };

  return result_2449474043;

}

function subtract_2449474052(self_2449474053, other_2449474054) {
  var result_2449474055 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585379 = subtract_2449474040(self_2449474053.Field0, other_2449474054);
    var colontmp__2818585380 = subtract_2449474040(self_2449474053.Field1, other_2449474054);
    result_2449474055 = nimCopy(result_2449474055, {Field0: nimCopy(null, colontmp__2818585379, NTI2449473546), Field1: nimCopy(null, colontmp__2818585380, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474055;

}

function invoke_2818579581(event_2818579583, arg_2818579584) {
    Label1: {
      var h_2818579607 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585389 = 0;
      var L_2818585390 = (event_2818579583.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585389 < L_2818585390)) break Label3;
            h_2818579607 = event_2818579583.handlers[chckIndx(i_2818585389, 0, (event_2818579583.handlers).length - 1)];
            h_2818579607.Field1(arg_2818579584);
            i_2818585389 = addInt(i_2818585389, 1);
            if (!(((event_2818579583.handlers).length == L_2818585390))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818579356(self_2818579357, selections_2818579358, oldSelection_2818579359, notify_2818579360, record_2818579361) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818579362 = [];

    result_2818579362 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579357, selections_2818579358), NTI2449473556);
    var undoOp_2818579386 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579359), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579419 = 0;
      var selection_2818579420 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585364 = 0;
      var L_2818585365 = (result_2818579362).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585364 < L_2818585365)) break Label3;
            i_2818579419 = i_2818585364;
            selection_2818579420 = nimCopy(selection_2818579420, result_2818579362[chckIndx(i_2818585364, 0, (result_2818579362).length - 1)], NTI2449473548);
            Label4: {
              if (isEmpty_2449473911(selection_2818579420)) {
              break Label4;
              }
              
              var selection_2818579421 = normalized_2449473905(selection_2818579420);
              var startByte_2818579422 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field0);
              var endByte_2818579423 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field1);
              var deletedText_2818579424 = contentString_2818574091(self_2818579357, selection_2818579421);
              var colontmp__2818585377 = normalized_2449473905(selection_2818579421);
              var first_2818579425 = nimCopy(null, colontmp__2818585377["Field0"], NTI2449473546);
              var last_2818579426 = nimCopy(null, colontmp__2818585377["Field1"], NTI2449473546);
              if ((first_2818579425.Field0 == last_2818579426.Field0)) {
              delete_855639365(self_2818579357.lines, chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(last_2818579426.Field1, 1)));
              }
              else {
                if ((first_2818579425.Field1 < lineLength_2818572673(self_2818579357, first_2818579425.Field0))) {
                delete_855639365(self_2818579357.lines, chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(lineLength_2818572673(self_2818579357, first_2818579425.Field0), 1)));
                }
                
                self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)].push.apply(self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)], HEX5BHEX5D_855639319(self_2818579357.lines[chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818579426.Field1, 1)));;
                delete_2818579472(self_2818579357, "lines", HEX2EHEX2E_805306418(addInt(first_2818579425.Field0, 1), last_2818579426.Field0));
              }
              
              result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)], toSelection_2449474032(selection_2818579421.Field0), NTI2449473548);
              Label5: {
                var k_2818579531 = 0;
                var colontmp__2818585360 = 0;
                var colontmp__2818585361 = 0;
                colontmp__2818585360 = addInt(i_2818579419, 1);
                colontmp__2818585361 = (result_2818579362).length - 1;
                var res_2818585362 = colontmp__2818585360;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818585362 <= colontmp__2818585361)) break Label7;
                      k_2818579531 = res_2818585362;
                      result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], subtract_2449474052(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], selection_2818579421), NTI2449473548);
                      res_2818585362 = addInt(res_2818585362, 1);
                    }
                };
              };
              if (!((self_2818579357.tsParser == null))) {
              var edit_2818579535 = {startIndex: startByte_2818579422, oldEndIndex: endByte_2818579423, newEndIndex: startByte_2818579422, startPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818579421.Field1.Field0, column: selection_2818579421.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818579357.currentTree.edit(edit_2818579535);
              var strValue_2818579536 = nsuJoinSep(self_2818579357.lines, [10]);
              self_2818579357.currentTree = parseString_2885681211(self_2818579357.tsParser, strValue_2818579536, some_2818579537(self_2818579357.currentTree));
              }
              
              self_2818579357.version = addInt(self_2818579357.version, 1);
              if (record_2818579361) {
              var Temporary8 = undoOp_2818579386;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818579421.Field0, NTI2449473546), text: nimCopy(null, deletedText_2818579424, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818579360) {
              invoke_2818579581(self_2818579357.textDeleted, {Field0: self_2818579357, Field1: nimCopy(null, selection_2818579421, NTI2449473548)});
              }
              
            };
            i_2818585364 = addInt(i_2818585364, 1);
            if (!(((result_2818579362).length == L_2818585365))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579360) {
    notifyTextChanged_2818573268(self_2818579357);
    }
    
      if (!record_2818579361) Temporary9 = false; else {        var Temporary10 = undoOp_2818579386;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818579357.undoOps.push(undoOp_2818579386);;
    self_2818579357.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579362;

}

function delete_2818585282(self_2818585283, selections_2818585284, notify_2818585285, record_2818585286) {
  var result_2818585287 = [];

  BeforeRet: {
    result_2818585287 = nimCopy(null, delete_2818579356(self_2818585283.document, selections_2818585284, selections_2818572802(self_2818585283), notify_2818585285, record_2818585286), NTI2818576075);
    break BeforeRet;
  };

  return result_2818585287;

}

function deleteJsWrapper_2818585278(self_2818585319, selections_2818585320, notify_2818585321, record_2818585322) {
  var result_2818585323 = [];

    result_2818585323 = nimCopy(null, delete_2818585282(self_2818585319, selections_2818585320, notify_2818585321, record_2818585322), NTI2818579834);

  return result_2818585323;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818585278(this, selections_, notify_, record_));};

function popLast_2818585531(deq_2818585533) {
    var Temporary1;

  var result_2818585534 = [];

    if ((deq_2818585533.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818585533.count = subInt(deq_2818585533.count, 1);
    deq_2818585533.tail = (subInt(deq_2818585533.tail, 1) & deq_2818585533.mask);
    Temporary1 = deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)];
    deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)] = genericReset(deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)], NTI2449473556);
    result_2818585534 = nimCopy(null, Temporary1, NTI2449473556);

  return result_2818585534;

}

function addFirst_2818585550(deq_2818585552, item_2818585553) {
    expandIfNeeded_2818572835(deq_2818585552);
    deq_2818585552.count = addInt(deq_2818585552.count, 1);
    deq_2818585552.head = (subInt(deq_2818585552.head, 1) & deq_2818585552.mask);
    deq_2818585552.data[chckIndx(deq_2818585552.head, 0, (deq_2818585552.data).length - 1)] = nimCopy(null, item_2818585553, NTI2449473556);

  
}

function totalLineHeight_2768240810(self_2768240811) {
  var result_2768240812 = 0.0;

    result_2768240812 = (lineHeight_2768240794(self_2768240811) + lineDistance_2768240789(self_2768240811));

  return result_2768240812;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818583576(editor_2818583578, path_2818583579, default_2818583580) {
  var result_2818583586 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583578 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2818583599 = HEX7BHEX7D_1627393316(editor_2818583578.options, nsuSplitString(path_2818583579, [46], -1));
      if ((nodeHEX60gensym163_2818583599 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
    };
    result_2818583586 = getFloat_1627390140(nodeHEX60gensym163_2818583599, default_2818583580);
    break BeforeRet;
  };

  return result_2818583586;

}

function scrollToCursor_2818583568(self_2818583569, cursor_2818583570, keepVerticalOffset_2818583571) {
  BeforeRet: {
    if (self_2818583569.disableScrolling) {
    break BeforeRet;
    }
    
    var targetLine_2818583572 = cursor_2818583570.Field0;
    var totalLineHeight_2818583573 = totalLineHeight_2768240810(self_2818583569.editor.platform);
    if (keepVerticalOffset_2818583571) {
    var currentLineY_2818583574 = ((subInt(selection_2818572805(self_2818583569).Field1.Field0, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
    self_2818583569.previousBaseIndex = targetLine_2818583572;
    self_2818583569.scrollOffset = currentLineY_2818583574;
    }
    else {
      var targetLineY_2818583575 = ((subInt(targetLine_2818583572, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
      var margin_2818583608 = clamp_2634023065(getOption_2818583576(self_2818583569.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818583569.lastContentBounds.h * 0.5) - (totalLineHeight_2818583573 * 0.5)));
      if ((targetLineY_2818583575 < margin_2818583608)) {
      self_2818583569.scrollOffset = margin_2818583608;
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      else {
      if (((self_2818583569.lastContentBounds.h - margin_2818583608) < (targetLineY_2818583575 + totalLineHeight_2818583573))) {
      self_2818583569.scrollOffset = ((self_2818583569.lastContentBounds.h - margin_2818583608) - totalLineHeight_2818583573);
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      }
    }
    
    markDirty_2415919143(self_2818583569);
  };

  
}

function selectPrev_2818585398(self_2818585399) {
    if ((0 < len_2818572976(self_2818585399.selectionHistory))) {
    var selection_2818585544 = popLast_2818585531(self_2818585399.selectionHistory);
    addFirst_2818585550(self_2818585399.selectionHistory, selections_2818572802(self_2818585399));
    self_2818585399.selectionsInternal = nimCopy(null, selection_2818585544, NTI2449473556);
    }
    
    scrollToCursor_2818583568(self_2818585399, selection_2818572805(self_2818585399).Field1, false);

  
}

function selectPrevJsWrapper_2818585394(self_2818585594) {
    selectPrev_2818585398(self_2818585594);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818585394(this));};

function selectNext_2818585616(self_2818585617) {
    if ((0 < len_2818572976(self_2818585617.selectionHistory))) {
    var selection_2818585752 = popFirst_2818573048(self_2818585617.selectionHistory);
    addLast_2818572826(self_2818585617.selectionHistory, selections_2818572802(self_2818585617));
    self_2818585617.selectionsInternal = nimCopy(null, selection_2818585752, NTI2449473556);
    }
    
    scrollToCursor_2818583568(self_2818585617, selection_2818572805(self_2818585617).Field1, false);

  
}

function selectNextJsWrapper_2818585612(self_2818585789) {
    selectNext_2818585616(self_2818585789);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818585612(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818585810(self_2818585811, cursor_2818585812) {
    var regex_2818585813 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818585814 = cursor_2818585812.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818585814) && (matchLen_2852126756(self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)], regex_2818585813, subInt(first_2818585814, 1)) == 1))) break Label2;
          first_2818585814 = subInt(first_2818585814, 1);
        }
    };
    var last_2818585819 = cursor_2818585812.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818585819 < (self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)], regex_2818585813, last_2818585819) == 1))) break Label4;
          last_2818585819 = addInt(last_2818585819, 1);
        }
    };
    selectionHEX3D_2818572811(self_2818585811, {Field0: {Field0: cursor_2818585812.Field0, Field1: first_2818585814}, Field1: {Field0: cursor_2818585812.Field0, Field1: last_2818585819}});

  
}

function selectInsideJsWrapper_2818585806(self_2818585852, cursor_2818585853) {
    selectInside_2818585810(self_2818585852, cursor_2818585853);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818585806(this, cursor_));};

function selectInsideCurrent_2818585887(self_2818585888) {
    selectInside_2818585810(self_2818585888, selection_2818572805(self_2818585888).Field1);

  
}

function selectInsideCurrentJsWrapper_2818585883(self_2818585916) {
    selectInsideCurrent_2818585887(self_2818585916);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818585883(this));};

function lineLength_2818572680(self_2818572681, line_2818572682) {
  var result_2818572683 = 0;

  BeforeRet: {
    if ((line_2818572682 < (self_2818572681.document.lines).length)) {
    result_2818572683 = (self_2818572681.document.lines[chckIndx(line_2818572682, 0, (self_2818572681.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572683 = 0;
    break BeforeRet;
  };

  return result_2818572683;

}

function selectLine_2818585937(self_2818585938, line_2818585939) {
    selectionHEX3D_2818572811(self_2818585938, {Field0: {Field0: line_2818585939, Field1: 0}, Field1: {Field0: line_2818585939, Field1: lineLength_2818572680(self_2818585938, line_2818585939)}});

  
}

function selectLineJsWrapper_2818585933(self_2818585968, line_2818585969) {
    selectLine_2818585937(self_2818585968, line_2818585969);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585933(this, line_));};

function selectLineCurrent_2818585995(self_2818585996) {
    selectLine_2818585937(self_2818585996, selection_2818572805(self_2818585996).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585991(self_2818586024) {
    selectLineCurrent_2818585995(self_2818586024);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585991(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818586118 = point_2885681331.row;
    var colontmp__2818586119 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818586118, Field1: colontmp__2818586119}, NTI2449473546);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818586120 = point_2885681335.row;
    var colontmp__2818586121 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818586120, Field1: colontmp__2818586121}, NTI2449473546);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818586116 = startPoint_2885681328(node_2885681337);
    var colontmp__2818586117 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818586116, NTI2449473546), Field1: nimCopy(null, colontmp__2818586117, NTI2449473546)}, NTI2449473548);

  return result_2885681338;

}

function selectParentTs_2818586045(self_2818586046, selection_2818586047) {
  BeforeRet: {
    if ((self_2818586046.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818586051 = descendantForRange_2885681405(self_2818586046.document.currentTree.rootNode, selection_2818586047);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2449473602(getRange_2885681336(node_2818586051), selection_2818586047) && !((node_2818586051 == self_2818586046.document.currentTree.rootNode)))) break Label2;
          node_2818586051 = node_2818586051.parent;
        }
    };
    selectionHEX3D_2818572811(self_2818586046, getRange_2885681336(node_2818586051));
  };

  
}

function selectParentTsJsWrapper_2818586041(self_2818586088, selection_2818586089) {
    selectParentTs_2818586045(self_2818586088, selection_2818586089);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818586041(this, selection_));};

function selectParentCurrentTs_2818586128(self_2818586129) {
    selectParentTs_2818586045(self_2818586129, selection_2818572805(self_2818586129));

  
}

function selectParentCurrentTsJsWrapper_2818586124(self_2818586157) {
    selectParentCurrentTs_2818586128(self_2818586157);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818586124(this));};

function newSeq_2449473685(len_2449473687) {
  var result_2449473688 = [];

    result_2449473688 = new Array(len_2449473687); for (var i = 0 ; i < len_2449473687 ; ++i) { result_2449473688[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2449473688;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2449473714(a_2449473716, b_2449473717, lo_2449473718, m_2449473719, hi_2449473720, cmp_2449473723, order_2449473724) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2449473723(a_2449473716[chckIndx(m_2449473719, 0, (a_2449473716).length - 1)], a_2449473716[chckIndx(addInt(m_2449473719, 1), 0, (a_2449473716).length - 1)]), order_2449473724) <= 0)) {
    break BeforeRet;
    }
    
    var j_2449473725 = lo_2449473718;
    if (!((j_2449473725 <= m_2449473719))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2449473731 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2449473725 <= m_2449473719)) break Label2;
          b_2449473717[chckIndx(bb_2449473731, 0, (b_2449473717).length - 1)] = nimCopy(b_2449473717[chckIndx(bb_2449473731, 0, (b_2449473717).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)], NTI2449473548);
          bb_2449473731 = addInt(bb_2449473731, 1);
          j_2449473725 = addInt(j_2449473725, 1);
        }
    };
    var i_2449473742 = 0;
    var k_2449473743 = lo_2449473718;
    Label3: {
        Label4: while (true) {
        if (!((k_2449473743 < j_2449473725) && (j_2449473725 <= hi_2449473720))) break Label4;
          if ((HEX2A_1023410184(cmp_2449473723(b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)]), order_2449473724) <= 0)) {
          a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], NTI2449473548);
          i_2449473742 = addInt(i_2449473742, 1);
          }
          else {
            a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], a_2449473716[chckIndx(j_2449473725, 0, (a_2449473716).length - 1)], NTI2449473548);
            j_2449473725 = addInt(j_2449473725, 1);
          }
          
          k_2449473743 = addInt(k_2449473743, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2449473743 < j_2449473725)) break Label6;
          a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)] = nimCopy(a_2449473716[chckIndx(k_2449473743, 0, (a_2449473716).length - 1)], b_2449473717[chckIndx(i_2449473742, 0, (b_2449473717).length - 1)], NTI2449473548);
          k_2449473743 = addInt(k_2449473743, 1);
          i_2449473742 = addInt(i_2449473742, 1);
        }
    };
  };

  
}

function sort_2449473673(a_2449473675, cmp_2449473678, order_2449473679) {
    var n_2449473684 = (a_2449473675).length;
    var b_2449473711 = newSeq_2449473685(chckRange(divInt(n_2449473684, 2), 0, 2147483647));
    var s_2449473712 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2449473712 < n_2449473684)) break Label2;
          var m_2449473713 = subInt(subInt(n_2449473684, 1), s_2449473712);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2449473713)) break Label4;
                mergeAlt_2449473714(a_2449473675, b_2449473711, nimMax(addInt(subInt(m_2449473713, s_2449473712), 1), 0), m_2449473713, addInt(m_2449473713, s_2449473712), cmp_2449473678, order_2449473679);
                m_2449473713 = subInt(m_2449473713, mulInt(s_2449473712, 2));
              }
          };
          s_2449473712 = mulInt(s_2449473712, 2);
        }
    };

  
}

function sorted_2449473815(a_2449473817, cmp_2449473820, order_2449473821) {
  var result_2449473822 = [];

    result_2449473822 = nimCopy(null, newSeq_2449473685(chckRange((a_2449473817).length, 0, 2147483647)), NTI2449473596);
    Label1: {
      var i_2449473836 = 0;
      var colontmp__2818586235 = 0;
      colontmp__2818586235 = (a_2449473817).length - 1;
      var res_2818586236 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586236 <= colontmp__2818586235)) break Label3;
            i_2449473836 = res_2818586236;
            result_2449473822[chckIndx(i_2449473836, 0, (result_2449473822).length - 1)] = nimCopy(result_2449473822[chckIndx(i_2449473836, 0, (result_2449473822).length - 1)], a_2449473817[chckIndx(i_2449473836, 0, (a_2449473817).length - 1)], NTI2449473548);
            res_2818586236 = addInt(res_2818586236, 1);
          }
      };
    };
    sort_2449473673(result_2449473822, cmp_2449473820, order_2449473821);

  return result_2449473822;

}

function HEX3C_2449473645(x_2449473647, y_2449473648) {
  var result_2449473649 = false;

  BeforeRet: {
    var c_2449473659 = cmp_33557727(x_2449473647["Field0"], y_2449473648["Field0"]);
    if ((c_2449473659 < 0)) {
    result_2449473649 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473659)) {
    result_2449473649 = false;
    break BeforeRet;
    }
    
    var c_2449473664 = cmp_33557727(x_2449473647["Field1"], y_2449473648["Field1"]);
    if ((c_2449473664 < 0)) {
    result_2449473649 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473664)) {
    result_2449473649 = false;
    break BeforeRet;
    }
    
    result_2449473649 = false;
    break BeforeRet;
  };

  return result_2449473649;

}

function cmp_2449473636(x_2449473638, y_2449473639) {
  var result_2449473640 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473612(x_2449473638, y_2449473639)) {
    result_2449473640 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473645(x_2449473638, y_2449473639)) {
    result_2449473640 = -1;
    break BeforeRet;
    }
    
    result_2449473640 = 1;
    break BeforeRet;
  };

  return result_2449473640;

}

function HEX3C_2449473626(x_2449473628, y_2449473629) {
  var result_2449473630 = false;

  BeforeRet: {
    var c_2449473665 = cmp_2449473636(x_2449473628["Field0"], y_2449473629["Field0"]);
    if ((c_2449473665 < 0)) {
    result_2449473630 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473665)) {
    result_2449473630 = false;
    break BeforeRet;
    }
    
    var c_2449473670 = cmp_2449473636(x_2449473628["Field1"], y_2449473629["Field1"]);
    if ((c_2449473670 < 0)) {
    result_2449473630 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473670)) {
    result_2449473630 = false;
    break BeforeRet;
    }
    
    result_2449473630 = false;
    break BeforeRet;
  };

  return result_2449473630;

}

function cmp_2449473597(x_2449473599, y_2449473600) {
  var result_2449473601 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473602(x_2449473599, y_2449473600)) {
    result_2449473601 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473626(x_2449473599, y_2449473600)) {
    result_2449473601 = -1;
    break BeforeRet;
    }
    
    result_2449473601 = 1;
    break BeforeRet;
  };

  return result_2449473601;

}

function sorted_2449473804(a_2449473806, order_2449473807) {
  var result_2449473808 = [];

    result_2449473808 = nimCopy(null, sorted_2449473815(a_2449473806, cmp_2449473597, order_2449473807), NTI2449473676);

  return result_2449473808;

}

function normalized_2449473801(self_2449473802) {
  var result_2449473803 = [];

  BeforeRet: {
    result_2449473803 = nimCopy(null, sorted_2449473804(self_2449473802, 1), NTI2449473667);
    break BeforeRet;
  };

  return result_2449473803;

}

function HEX3DHEX3D_2818573086(x_2818573088, y_2818573089) {
  var result_2818573090 = false;

  BeforeRet: {
    var sameObject_2818573097 = false;
    sameObject_2818573097 = x_2818573088 === y_2818573089
    if (sameObject_2818573097) {
    result_2818573090 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573088).length == (y_2818573089).length))) {
    result_2818573090 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573111 = 0;
      var colontmp__2818586244 = 0;
      colontmp__2818586244 = subInt((x_2818573088).length, 1);
      var res_2818586245 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586245 <= colontmp__2818586244)) break Label3;
            i_2818573111 = res_2818586245;
            if (!(HEX3DHEX3D_2449473602(x_2818573088[chckIndx(i_2818573111, 0, (x_2818573088).length - 1)], y_2818573089[chckIndx(i_2818573111, 0, (y_2818573089).length - 1)]))) {
            result_2818573090 = false;
            break BeforeRet;
            }
            
            res_2818586245 = addInt(res_2818586245, 1);
          }
      };
    };
    result_2818573090 = true;
    break BeforeRet;
  };

  return result_2818573090;

}

function clampAndMergeSelections_2818572798(self_2818572799, selections_2818572800) {
  var result_2818572801 = [];

    result_2818572801 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818572799.document, selections_2818572800), NTI2449473556);

  return result_2818572801;

}

function selectionsHEX3D_2818573083(self_2818573084, selections_2818573085) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573086(self_2818573084.selectionsInternal, selections_2818573085)) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818573084.selectionHistory, self_2818573084.selectionsInternal);
    if ((100 < len_2818572976(self_2818573084.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818573084.selectionHistory);
    }
    
    self_2818573084.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572798(self_2818573084, selections_2818573085), NTI2449473556);
    if (((self_2818573084.selectionsInternal).length == 0)) {
    self_2818573084.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2449474032({Field0: 0, Field1: 0}), NTI2449473548)], NTI2818572821);
    }
    
    markDirty_2415919143(self_2818573084);
  };

  
}

function edit_2818580070(self_2818580071, selections_2818580072, oldSelection_2818580073, text_2818580074, notify_2818580075) {
    
function HEX3Aanonymous_2818580077(s_2818580085) {
      var result_2818580088 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818580088 = nimCopy(result_2818580088, normalized_2449473905(s_2818580085), NTI2449473548);

      return result_2818580088;

    }

  var result_2818580076 = [];

    var selections_2818580096 = map_2818572735(selections_2818580072, HEX3Aanonymous_2818580077);
    result_2818580076 = nimCopy(null, delete_2818579356(self_2818580071, selections_2818580096, oldSelection_2818580073, false, true), NTI2818576075);
    result_2818580076 = nimCopy(null, insert_2818579853(self_2818580071, result_2818580076, oldSelection_2818580073, text_2818580074, true, true, true), NTI2818576430);

  return result_2818580076;

}

function insertText_2818586181(self_2818586182, text_2818586183) {
  BeforeRet: {
    if ((self_2818586182.document.singleLine && eqStrings(text_2818586183, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818586184 = normalized_2449473801(selections_2818572802(self_2818586182));
    selectionsHEX3D_2818573083(self_2818586182, edit_2818580070(self_2818586182.document, selections_2818572802(self_2818586182), selections_2818572802(self_2818586182), text_2818586183, true));
    updateTargetColumn_2818584601(self_2818586182, 3);
    if ((!(self_2818586182.disableCompletions) && (eqStrings(text_2818586183, [46]) || eqStrings(text_2818586183, [44])))) {
    self_2818586182.showCompletions = true;
    var _ = getCompletionsAsync_2818586172(self_2818586182);
    }
    else {
    if (self_2818586182.showCompletions) {
    var _ = getCompletionsAsync_2818586172(self_2818586182);
    }
    }
  };

  
}

function insertTextJsWrapper_2818586177(self_2818586213, text_2818586214) {
    insertText_2818586181(self_2818586213, text_2818586214);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818586177(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818580165() {
  var result_2818580172 = ({val: [], has: false});

  return result_2818580172;

}

function pop_2818580176(s_2818580178, s_2818580178_Idx) {
  var result_2818580179 = null;

    var L_2818580183 = subInt((s_2818580178[s_2818580178_Idx]).length, 1);
    result_2818580179 = s_2818580178[s_2818580178_Idx][chckIndx(L_2818580183, 0, (s_2818580178[s_2818580178_Idx]).length - 1)];
    if (s_2818580178[s_2818580178_Idx].length < chckRange(L_2818580183, 0, 2147483647)) { for (var i = s_2818580178[s_2818580178_Idx].length ; i < chckRange(L_2818580183, 0, 2147483647) ; ++i) s_2818580178[s_2818580178_Idx].push(null); }
               else { s_2818580178[s_2818580178_Idx].length = chckRange(L_2818580183, 0, 2147483647); };

  return result_2818580179;

}

function some_2818580189(val_2818580191) {
  var result_2818580192 = ({val: [], has: false});

    result_2818580192.has = true;
    result_2818580192.val = nimCopy(null, val_2818580191, NTI2818576615);

  return result_2818580192;

}

function doUndo_2818580106(document_2818580107, op_2818580108, oldSelection_2818580109, useOldSelection_2818580110, redoOps_2818580111, redoOps_2818580111_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818580112 = [];

    switch (op_2818580108.kind) {
    case 0:
      var Temporary1 = op_2818580108;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580113 = contentString_2818574091(document_2818580107, Temporary1.selection);
      var Temporary2 = op_2818580108;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580112 = nimCopy(null, delete_2818579356(document_2818580107, [nimCopy(null, Temporary2.selection, NTI2449473548)], op_2818580108.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580108;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473546), text: nimCopy(null, text_2818580113, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580108;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580108;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818580121 = insert_2818579853(document_2818580107, [nimCopy(null, toSelection_2449474032(Temporary4.cursor), NTI2449473548)], op_2818580108.oldSelection, Temporary5.text, true, false, false);
      result_2818580112 = nimCopy(null, selections_2818580121, NTI2818576430);
      var Temporary6 = op_2818580108;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2449473546), Field1: nimCopy(null, selections_2818580121[chckIndx(0, 0, (selections_2818580121).length - 1)].Field1, NTI2449473546)}, NTI2449473548), oldSelection: HEX40_2818579363(oldSelection_2818580109), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
      var redoOp_2818580132 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818580141 = 0;
        var colontmp__2818586346 = 0;
        var Temporary8 = op_2818580108;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818586346 = (Temporary8.children).length - 1;
        var res_2818586347 = colontmp__2818586346;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818586347)) break Label10;
              i_2818580141 = res_2818586347;
              var Temporary11 = op_2818580108;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818580132;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818580106(document_2818580107, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818580141, 0, (Temporary12).length - 1)], oldSelection_2818580109, useOldSelection_2818580110, Temporary13, "children");
              res_2818586347 = subInt(res_2818586347, 1);
            }
        };
      };
      redoOps_2818580111[redoOps_2818580111_Idx].push(redoOp_2818580132);;
      break;
    }
    if (useOldSelection_2818580110) {
    result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
    }
    

  return result_2818580112;

}

function undo_2818580155(document_2818580156, oldSelection_2818580157, useOldSelection_2818580158) {
  var result_2818580164 = ({val: [], has: false});

  BeforeRet: {
    result_2818580164 = nimCopy(result_2818580164, none_2818580165(), NTI2818576690);
    if (((document_2818580156.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580188 = pop_2818580176(document_2818580156, "undoOps");
    result_2818580164 = nimCopy(result_2818580164, some_2818580189(doUndo_2818580106(document_2818580156, op_2818580188, oldSelection_2818580157, useOldSelection_2818580158, document_2818580156, "redoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580164;

}

function isSome_2818586262(self_2818586264) {
  var result_2818586265 = false;

    result_2818586265 = self_2818586264.has;

  return result_2818586265;

}

function isNone_2818586287(self_2818586289) {
  var result_2818586290 = false;

    result_2818586290 = !(self_2818586289.has);

  return result_2818586290;

}

function get_2818586279(self_2818586281) {
  var result_2818586282 = [];

    if (isNone_2818586287(self_2818586281)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818586282 = self_2818586281["val"];

  return result_2818586282;

}

function undo_2818586253(self_2818586254) {
      var Temporary1;

      var oHEX60gensym378_2818586257 = undo_2818580155(self_2818586254.document, selections_2818572802(self_2818586254), true);
      if (!isSome_2818586262(oHEX60gensym378_2818586257)) Temporary1 = false; else {        var selections_2818586302 = nimCopy(null, get_2818586279(oHEX60gensym378_2818586257), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586254, selections_2818586302);
    }
    

  
}

function undoJsWrapper_2818586249(self_2818586330) {
    undo_2818586253(self_2818586330);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818586249(this));};

function doRedo_2818580203(document_2818580204, op_2818580205, oldSelection_2818580206, useOldSelection_2818580207, undoOps_2818580208, undoOps_2818580208_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818580209 = [];

    switch (op_2818580205.kind) {
    case 0:
      var Temporary1 = op_2818580205;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580210 = contentString_2818574091(document_2818580204, Temporary1.selection);
      var Temporary2 = op_2818580205;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, delete_2818579356(document_2818580204, [nimCopy(null, Temporary2.selection, NTI2449473548)], op_2818580205.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580205;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473546), text: nimCopy(null, text_2818580210, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580205;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580205;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818580205;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, insert_2818579853(document_2818580204, [nimCopy(null, toSelection_2449474032(Temporary4.cursor), NTI2449473548)], [nimCopy(null, toSelection_2449474032(Temporary5.cursor), NTI2449473548)], Temporary6.text, true, false, false), NTI2818576430);
      var Temporary7 = op_2818580205;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2449473546), Field1: nimCopy(null, result_2818580209[chckIndx(0, 0, (result_2818580209).length - 1)].Field1, NTI2449473546)}, NTI2449473548), oldSelection: HEX40_2818579363(oldSelection_2818580206), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
      var undoOp_2818580228 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818580237 = 0;
        var colontmp__2818586426 = 0;
        var Temporary9 = op_2818580205;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818586426 = (Temporary9.children).length - 1;
        var res_2818586427 = colontmp__2818586426;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818586427)) break Label11;
              i_2818580237 = res_2818586427;
              var Temporary12 = op_2818580205;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818580228;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818580203(document_2818580204, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818580237, 0, (Temporary13).length - 1)], oldSelection_2818580206, useOldSelection_2818580207, Temporary14, "children");
              res_2818586427 = subInt(res_2818586427, 1);
            }
        };
      };
      undoOps_2818580208[undoOps_2818580208_Idx].push(undoOp_2818580228);;
      break;
    }
    if (useOldSelection_2818580207) {
    result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
    }
    

  return result_2818580209;

}

function redo_2818580242(document_2818580243, oldSelection_2818580244, useOldSelection_2818580245) {
  var result_2818580247 = ({val: [], has: false});

  BeforeRet: {
    result_2818580247 = nimCopy(result_2818580247, none_2818580165(), NTI2818576690);
    if (((document_2818580243.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580261 = pop_2818580176(document_2818580243, "redoOps");
    result_2818580247 = nimCopy(result_2818580247, some_2818580189(doRedo_2818580203(document_2818580243, op_2818580261, oldSelection_2818580244, useOldSelection_2818580245, document_2818580243, "undoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580247;

}

function redo_2818586355(self_2818586356) {
      var Temporary1;

      var oHEX60gensym388_2818586359 = redo_2818580242(self_2818586356.document, selections_2818572802(self_2818586356), true);
      if (!isSome_2818586262(oHEX60gensym388_2818586359)) Temporary1 = false; else {        var selections_2818586382 = nimCopy(null, get_2818586279(oHEX60gensym388_2818586359), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586356, selections_2818586382);
    }
    

  
}

function redoJsWrapper_2818586351(self_2818586410) {
    redo_2818586355(self_2818586410);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818586351(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818586435(self_2818586436, amount_2818586437) {
  BeforeRet: {
    if (self_2818586436.disableScrolling) {
    break BeforeRet;
    }
    
    HEX2BHEX3D_855640304(self_2818586436, "scrollOffset", amount_2818586437);
    markDirty_2415919143(self_2818586436);
  };

  
}

function scrollTextJsWrapper_2818586431(self_2818586470, amount_2818586471) {
    scrollText_2818586435(self_2818586470, amount_2818586471);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818586431(this, amount_));};

function clampCursor_2818572708(self_2818572709, cursor_2818572710) {
  var result_2818572711 = {Field0: 0, Field1: 0};

    result_2818572711 = nimCopy(result_2818572711, clampCursor_2818572687(self_2818572709.document, cursor_2818572710), NTI2449473546);

  return result_2818572711;

}

function doMoveCursorColumn_2818583517(self_2818583518, cursor_2818583519, offset_2818583520) {
  var result_2818583521 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583522 = nimCopy(null, cursor_2818583519, NTI2449473546);
    var column_2818583523 = addInt(cursor_2818583522.Field1, offset_2818583520);
    if ((column_2818583523 < 0)) {
    if ((0 < cursor_2818583522.Field0)) {
    cursor_2818583522.Field0 = subInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    else {
      cursor_2818583522.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572680(self_2818583518, cursor_2818583522.Field0) < column_2818583523)) {
    if ((cursor_2818583522.Field0 < subInt((self_2818583518.document.lines).length, 1))) {
    cursor_2818583522.Field0 = addInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = 0;
    }
    else {
      cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    
    }
    else {
      cursor_2818583522.Field1 = column_2818583523;
    }
    }
    result_2818583521 = nimCopy(result_2818583521, clampCursor_2818572708(self_2818583518, cursor_2818583522), NTI2449473546);
    break BeforeRet;
  };

  return result_2818583521;

}

function HEX26_2818586565(x_2818586567, y_2818586568) {
  var result_2818586569 = [];

    result_2818586569 = new Array(chckRange(addInt((x_2818586567).length, (y_2818586568).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818586567).length, (y_2818586568).length), 0, 2147483647) ; ++i) { result_2818586569[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818586587 = 0;
      var colontmp__2818586642 = 0;
      colontmp__2818586642 = subInt((x_2818586567).length, 1);
      var res_2818586643 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586643 <= colontmp__2818586642)) break Label3;
            i_2818586587 = res_2818586643;
            result_2818586569[chckIndx(i_2818586587, 0, (result_2818586569).length - 1)] = nimCopy(result_2818586569[chckIndx(i_2818586587, 0, (result_2818586569).length - 1)], x_2818586567[chckIndx(i_2818586587, 0, (x_2818586567).length - 1)], NTI2449473548);
            res_2818586643 = addInt(res_2818586643, 1);
          }
      };
    };
    Label4: {
      var i_2818586595 = 0;
      var colontmp__2818586646 = 0;
      colontmp__2818586646 = subInt((y_2818586568).length, 1);
      var res_2818586647 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818586647 <= colontmp__2818586646)) break Label6;
            i_2818586595 = res_2818586647;
            result_2818586569[chckIndx(addInt(i_2818586595, (x_2818586567).length), 0, (result_2818586569).length - 1)] = nimCopy(result_2818586569[chckIndx(addInt(i_2818586595, (x_2818586567).length), 0, (result_2818586569).length - 1)], y_2818586568[chckIndx(i_2818586595, 0, (y_2818586568).length - 1)], NTI2449473548);
            res_2818586647 = addInt(res_2818586647, 1);
          }
      };
    };

  return result_2818586569;

}

function duplicateLastSelection_2818586555(self_2818586556) {
    var Temporary1;

    var newSelection_2818586560 = toSelection_2449474032(doMoveCursorColumn_2818583517(self_2818586556, (Temporary1 = selections_2818572802(self_2818586556), Temporary1)[chckIndx((selections_2818572802(self_2818586556)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573083(self_2818586556, HEX26_2818586565(selections_2818572802(self_2818586556), [nimCopy(null, newSelection_2818586560, NTI2449473548)]));

  
}

function duplicateLastSelectionJsWrapper_2818586551(self_2818586626) {
    duplicateLastSelection_2818586555(self_2818586626);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818586551(this));};

function doMoveCursorLine_2818583527(self_2818583528, cursor_2818583529, offset_2818583530) {
  var result_2818583531 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583532 = nimCopy(null, cursor_2818583529, NTI2449473546);
    var line_2818583533 = addInt(cursor_2818583532.Field0, offset_2818583530);
    if ((line_2818583533 < 0)) {
    var colontmp__2818586711 = 0;
    var colontmp__2818586712 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586711, Field1: colontmp__2818586712}, NTI2449473546);
    }
    else {
    if (((self_2818583528.document.lines).length <= line_2818583533)) {
    var colontmp__2818586713 = subInt((self_2818583528.document.lines).length, 1);
    var colontmp__2818586714 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586713, Field1: colontmp__2818586714}, NTI2449473546);
    }
    else {
      cursor_2818583532.Field0 = line_2818583533;
      cursor_2818583532.Field1 = self_2818583528.targetColumn;
    }
    }
    result_2818583531 = nimCopy(result_2818583531, clampCursor_2818572708(self_2818583528, cursor_2818583532), NTI2449473546);
    break BeforeRet;
  };

  return result_2818583531;

}

function addCursorBelow_2818586655(self_2818586656) {
    var Temporary1;

    var newCursor_2818586660 = toSelection_2449474032(doMoveCursorLine_2818583527(self_2818586656, (Temporary1 = selections_2818572802(self_2818586656), Temporary1)[chckIndx((selections_2818572802(self_2818586656)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2449474009(selections_2818572802(self_2818586656), newCursor_2818586660))) {
    selectionsHEX3D_2818573083(self_2818586656, HEX26_2818586565(selections_2818572802(self_2818586656), [nimCopy(null, newCursor_2818586660, NTI2449473548)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818586651(self_2818586696) {
    addCursorBelow_2818586655(self_2818586696);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818586651(this));};

function addCursorAbove_2818586721(self_2818586722) {
    var Temporary1;

    var newCursor_2818586726 = toSelection_2449474032(doMoveCursorLine_2818583527(self_2818586722, (Temporary1 = selections_2818572802(self_2818586722), Temporary1)[chckIndx((selections_2818572802(self_2818586722)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2449474009(selections_2818572802(self_2818586722), newCursor_2818586726))) {
    selectionsHEX3D_2818573083(self_2818586722, HEX26_2818586565(selections_2818572802(self_2818586722), [nimCopy(null, newCursor_2818586726, NTI2449473548)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818586717(self_2818586762) {
    addCursorAbove_2818586721(self_2818586762);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818586717(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818581106(t_2818581109, key_2818581110, hc_2818581111, hc_2818581111_Idx) {
  var result_2818581112 = 0;

  BeforeRet: {
    hc_2818581111[hc_2818581111_Idx] = hash_1325400236(key_2818581110);
    if ((hc_2818581111[hc_2818581111_Idx] == 0)) {
    hc_2818581111[hc_2818581111_Idx] = 314159265;
    }
    
    if (((t_2818581109.data).length == 0)) {
    result_2818581112 = -1;
    break BeforeRet;
    }
    
    var h_2818581182 = (hc_2818581111[hc_2818581111_Idx] & (t_2818581109.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0)) break Label2;
          if (((t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0 == hc_2818581111[hc_2818581111_Idx]) && (t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field1 == key_2818581110))) {
          result_2818581112 = h_2818581182;
          break BeforeRet;
          }
          
          h_2818581182 = nextTry_1308622883(h_2818581182, (t_2818581109.data).length - 1);
        }
    };
    result_2818581112 = subInt(-1, h_2818581182);
  };

  return result_2818581112;

}

function hasKey_2818586859(t_2818586862, key_2818586863) {
  var result_2818586864 = false;

    var hc_2818586865 = [0];
    result_2818586864 = (0 <= rawGet_2818581106(t_2818586862, key_2818586863, hc_2818586865, 0));

  return result_2818586864;

}

function contains_2818586853(t_2818586856, key_2818586857) {
  var result_2818586858 = false;

  BeforeRet: {
    result_2818586858 = hasKey_2818586859(t_2818586856, key_2818586857);
    break BeforeRet;
  };

  return result_2818586858;

}

function raiseKeyError_1291850850(key_1291850852) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850852) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586949(t_2818586952, key_2818586953) {
  var result_2818586954 = null;
  var result_2818586954_Idx = 0;

    var hcHEX60gensym22_2818586955 = [0];
    var indexHEX60gensym22_2818586962 = rawGet_2818581106(t_2818586952, key_2818586953, hcHEX60gensym22_2818586955, 0);
    if ((0 <= indexHEX60gensym22_2818586962)) {
    result_2818586954 = t_2818586952.data[chckIndx(indexHEX60gensym22_2818586962, 0, (t_2818586952.data).length - 1)]; result_2818586954_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818586953);
    }
    

  return [result_2818586954, result_2818586954_Idx];

}

function HEX3C_2449473866(a_2449473867, b_2449473868) {
  var result_2449473869 = false;

  BeforeRet: {
    if ((a_2449473867.Field0 < b_2449473868.Field0)) {
    result_2449473869 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473867.Field0 == b_2449473868.Field0) && (a_2449473867.Field1 < b_2449473868.Field1))) {
    result_2449473869 = true;
    break BeforeRet;
    }
    else {
      result_2449473869 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473869;

}

function getPrevFindResult_2818583550(self_2818583551, cursor_2818583552, offset_2818583553) {
            var Temporary4;

  var result_2818586787 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586788 = 0;
    Label1: {
      var line_2818586794 = 0;
      var res_2818587125 = cursor_2818583552.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818587125)) break Label3;
            line_2818586794 = res_2818587125;
            if (contains_2818586853(self_2818583551.searchResults, line_2818586794)) {
            var selections_2818587043 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586949(self_2818583551.searchResults, line_2818586794), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818587052 = 0;
              var colontmp__2818587122 = 0;
              colontmp__2818587122 = (selections_2818587043).length - 1;
              var res_2818587123 = colontmp__2818587122;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818587123)) break Label7;
                    k_2818587052 = res_2818587123;
                    if (HEX3C_2449473866(selections_2818587043[chckIndx(k_2818587052, 0, (selections_2818587043).length - 1)].Field1, cursor_2818583552)) {
                    if ((i_2818586788 == offset_2818583553)) {
                    result_2818586787 = nimCopy(result_2818586787, selections_2818587043[chckIndx(k_2818587052, 0, (selections_2818587043).length - 1)], NTI2449473548);
                    break BeforeRet;
                    }
                    
                    i_2818586788 = addInt(i_2818586788, 1);
                    }
                    
                    res_2818587123 = subInt(res_2818587123, 1);
                  }
              };
            };
            }
            
            res_2818587125 = subInt(res_2818587125, 1);
          }
      };
    };
    result_2818586787 = nimCopy(result_2818586787, toSelection_2449474032(cursor_2818583552), NTI2449473548);
    break BeforeRet;
  };

  return result_2818586787;

}

function getPrevFindResultJsWrapper_2818586779(self_2818587088, cursor_2818587089, offset_2818587090) {
  var result_2818587091 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587091 = nimCopy(result_2818587091, getPrevFindResult_2818583550(self_2818587088, cursor_2818587089, offset_2818587090), NTI2449473548);

  return result_2818587091;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818586779(this, cursor_, offset_));};

function getNextFindResult_2818583554(self_2818583555, cursor_2818583556, offset_2818583557) {
              var Temporary5;

  var result_2818587138 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818587139 = 0;
    Label1: {
      var line_2818587147 = 0;
      var colontmp__2818587371 = 0;
      colontmp__2818587371 = (self_2818583555.document.lines).length - 1;
      var res_2818587372 = cursor_2818583556.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818587372 <= colontmp__2818587371)) break Label3;
            line_2818587147 = res_2818587372;
            if (contains_2818586853(self_2818583555.searchResults, line_2818587147)) {
            Label4: {
              var selection_2818587296 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818587366 = [];
              colontmp__2818587366 = (Temporary5 = HEX5BHEX5D_2818586949(self_2818583555.searchResults, line_2818587147), Temporary5)[0][Temporary5[1]];
              var i_2818587368 = 0;
              var L_2818587369 = (colontmp__2818587366).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818587368 < L_2818587369)) break Label7;
                    selection_2818587296 = colontmp__2818587366[chckIndx(i_2818587368, 0, (colontmp__2818587366).length - 1)];
                    if (HEX3C_2449473866(cursor_2818583556, selection_2818587296.Field0)) {
                    if ((i_2818587139 == offset_2818583557)) {
                    result_2818587138 = nimCopy(result_2818587138, selection_2818587296, NTI2449473548);
                    break BeforeRet;
                    }
                    
                    i_2818587139 = addInt(i_2818587139, 1);
                    }
                    
                    i_2818587368 = addInt(i_2818587368, 1);
                    if (!(((colontmp__2818587366).length == L_2818587369))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818587372 = addInt(res_2818587372, 1);
          }
      };
    };
    result_2818587138 = nimCopy(result_2818587138, toSelection_2449474032(cursor_2818583556), NTI2449473548);
    break BeforeRet;
  };

  return result_2818587138;

}

function getNextFindResultJsWrapper_2818587130(self_2818587332, cursor_2818587333, offset_2818587334) {
  var result_2818587335 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587335 = nimCopy(result_2818587335, getNextFindResult_2818583554(self_2818587332, cursor_2818587333, offset_2818587334), NTI2449473548);

  return result_2818587335;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818587130(this, cursor_, offset_));};

function addNextFindResultToSelection_2818587380(self_2818587381) {
    selectionsHEX3D_2818573083(self_2818587381, HEX26_2818586565(selections_2818572802(self_2818587381), [nimCopy(null, getNextFindResult_2818583554(self_2818587381, selection_2818572805(self_2818587381).Field1, 0), NTI2449473548)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818587376(self_2818587417) {
    addNextFindResultToSelection_2818587380(self_2818587417);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818587376(this));};

function addPrevFindResultToSelection_2818587438(self_2818587439) {
    selectionsHEX3D_2818573083(self_2818587439, HEX26_2818586565(selections_2818572802(self_2818587439), [nimCopy(null, getPrevFindResult_2818583550(self_2818587439, selection_2818572805(self_2818587439).Field0, 0), NTI2449473548)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818587434(self_2818587475) {
    addPrevFindResultToSelection_2818587438(self_2818587475);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818587434(this));};

function len_2818587567(t_2818587570) {
  var result_2818587571 = 0;

    result_2818587571 = t_2818587570.counter;

  return result_2818587571;

}

function setAllFindResultToSelection_2818587496(self_2818587497) {
    var selections_2818587502 = [];
    Label1: {
      var searchResults_2818587804 = [];
      var L_2818587873 = len_2818587567(self_2818587497.searchResults);
      Label2: {
        var h_2818587875 = 0;
        var colontmp__2818587876 = 0;
        colontmp__2818587876 = (self_2818587497.searchResults.data).length - 1;
        var res_2818587877 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818587877 <= colontmp__2818587876)) break Label4;
              h_2818587875 = res_2818587877;
              if (isFilled_1308622880(self_2818587497.searchResults.data[chckIndx(h_2818587875, 0, (self_2818587497.searchResults.data).length - 1)].Field0)) {
              searchResults_2818587804 = self_2818587497.searchResults.data[chckIndx(h_2818587875, 0, (self_2818587497.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818587808 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818587866 = 0;
                var L_2818587867 = (searchResults_2818587804).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818587866 < L_2818587867)) break Label7;
                      s_2818587808 = searchResults_2818587804[chckIndx(i_2818587866, 0, (searchResults_2818587804).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818587808, NTI2449473548);
                      selections_2818587502.push(Temporary8);;
                      i_2818587866 = addInt(i_2818587866, 1);
                      if (!(((searchResults_2818587804).length == L_2818587867))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818587567(self_2818587497.searchResults) == L_2818587873))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818587877 = addInt(res_2818587877, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573083(self_2818587497, selections_2818587502);

  
}

function setAllFindResultToSelectionJsWrapper_2818587492(self_2818587849) {
    setAllFindResultToSelection_2818587496(self_2818587849);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818587492(this));};

function clearSelections_2818587885(self_2818587886) {
    if ((1 < (selections_2818572802(self_2818587886)).length)) {
    selectionHEX3D_2818572811(self_2818587886, selection_2818572805(self_2818587886));
    }
    else {
    selectionHEX3D_2818572811(self_2818587886, toSelection_2449474032(selection_2818572805(self_2818587886).Field1));
    }
    

  
}

function clearSelectionsJsWrapper_2818587881(self_2818587920) {
    clearSelections_2818587885(self_2818587920);

  
}
editor_text_prototype.clearSelections = function() { return (clearSelectionsJsWrapper_2818587881(this));};

function map_2818583759(s_2818583762, op_2818583764) {
  var result_2818583765 = [];

    result_2818583765 = new Array(chckRange((s_2818583762).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818583762).length, 0, 2147483647) ; ++i) { result_2818583765[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818583780 = 0;
      var colontmp__2818588040 = 0;
      colontmp__2818588040 = (s_2818583762).length;
      var i_2818588041 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588041 < colontmp__2818588040)) break Label3;
            i_2818583780 = i_2818588041;
            result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)] = nimCopy(result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)], op_2818583764(s_2818583762[chckIndx(i_2818583780, 0, (s_2818583762).length - 1)]), NTI2818578483);
            i_2818588041 = addInt(i_2818588041, 1);
          }
      };
    };

  return result_2818583765;

}

function moveCursor_2818583704(self_2818583705, cursor_2818583706, movement_2818583711, offset_2818583712, all_2818583713) {
      
function HEX3Aanonymous_2818583724(s_2818583731) {
        var result_2818583734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818583734 = nimCopy(result_2818583734, toSelection_2449474032(movement_2818583711(self_2818583705, s_2818583731.Field1, offset_2818583712)), NTI2449473548);

        return result_2818583734;

      }
      
function HEX3Aanonymous_2818583748(s_2818583755) {
        var result_2818583758 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588027 = movement_2818583711(self_2818583705, s_2818583755.Field0, offset_2818583712);
          var colontmp__2818588028 = nimCopy(null, s_2818583755.Field1, NTI2449473546);
          result_2818583758 = nimCopy(result_2818583758, {Field0: nimCopy(null, colontmp__2818588027, NTI2449473546), Field1: nimCopy(null, colontmp__2818588028, NTI2449473546)}, NTI2818578483);

        return result_2818583758;

      }
      
function HEX3Aanonymous_2818583791(s_2818583798) {
        var result_2818583801 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588031 = nimCopy(null, s_2818583798.Field0, NTI2449473546);
          var colontmp__2818588032 = movement_2818583711(self_2818583705, s_2818583798.Field1, offset_2818583712);
          result_2818583801 = nimCopy(result_2818583801, {Field0: nimCopy(null, colontmp__2818588031, NTI2449473546), Field1: nimCopy(null, colontmp__2818588032, NTI2449473546)}, NTI2818578525);

        return result_2818583801;

      }
      
function HEX3Aanonymous_2818583818(s_2818583825) {
        var result_2818583828 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588035 = nimCopy(null, s_2818583825.Field1, NTI2449473546);
          var colontmp__2818588036 = movement_2818583711(self_2818583705, s_2818583825.Field1, offset_2818583712);
          result_2818583828 = nimCopy(result_2818583828, {Field0: nimCopy(null, colontmp__2818588035, NTI2449473546), Field1: nimCopy(null, colontmp__2818588036, NTI2449473546)}, NTI2818578557);

        return result_2818583828;

      }

    switch (cursor_2818583706) {
    case 0:
      var configCursor_2818583723 = getOption_2818583643(self_2818583705.editor, getContextWithMode_2818583609(self_2818583705, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818583704(self_2818583705, configCursor_2818583723, movement_2818583711, offset_2818583712, all_2818583713);
      break;
    case 1:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818572735(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583724));
      }
      else {
        var selections_2818583741 = selections_2818572802(self_2818583705);
        selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)] = nimCopy(selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)], toSelection_2449474032(movement_2818583711(self_2818583705, selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)].Field1, offset_2818583712)), NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583741);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 2:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583748));
      }
      else {
        var selections_2818583781 = selections_2818572802(self_2818583705);
        var colontmp__2818588029 = movement_2818583711(self_2818583705, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field0, offset_2818583712);
        var colontmp__2818588030 = nimCopy(null, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field1, NTI2449473546);
        selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)] = nimCopy(selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)], {Field0: nimCopy(null, colontmp__2818588029, NTI2449473546), Field1: nimCopy(null, colontmp__2818588030, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583781);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field0, false);
      break;
    case 3:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583791));
      }
      else {
        var selections_2818583808 = selections_2818572802(self_2818583705);
        var colontmp__2818588033 = nimCopy(null, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field0, NTI2449473546);
        var colontmp__2818588034 = movement_2818583711(self_2818583705, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field1, offset_2818583712);
        selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)] = nimCopy(selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)], {Field0: nimCopy(null, colontmp__2818588033, NTI2449473546), Field1: nimCopy(null, colontmp__2818588034, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583808);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 4:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583818));
      }
      else {
        var selections_2818583835 = selections_2818572802(self_2818583705);
        var colontmp__2818588037 = nimCopy(null, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, NTI2449473546);
        var colontmp__2818588038 = movement_2818583711(self_2818583705, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, offset_2818583712);
        selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)] = nimCopy(selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)], {Field0: nimCopy(null, colontmp__2818588037, NTI2449473546), Field1: nimCopy(null, colontmp__2818588038, NTI2449473546)}, NTI2449473548);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583835);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818587941(self_2818587942, distance_2818587943, cursor_2818587944, all_2818587945) {
    moveCursor_2818583704(self_2818587942, cursor_2818587944, doMoveCursorColumn_2818583517, distance_2818587943, all_2818587945);
    updateTargetColumn_2818584601(self_2818587942, cursor_2818587944);

  
}

function moveCursorColumnJsWrapper_2818587937(self_2818587994, distance_2818587995, cursor_2818587996, all_2818587997) {
    moveCursorColumn_2818587941(self_2818587994, distance_2818587995, cursor_2818587996, all_2818587997);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818587937(this, distance_, cursor_, all_));};

function moveCursorLine_2818588049(self_2818588050, distance_2818588051, cursor_2818588052, all_2818588053) {
    moveCursor_2818583704(self_2818588050, cursor_2818588052, doMoveCursorLine_2818583527, distance_2818588051, all_2818588053);

  
}

function moveCursorLineJsWrapper_2818588045(self_2818588084, distance_2818588085, cursor_2818588086, all_2818588087) {
    moveCursorLine_2818588049(self_2818588084, distance_2818588085, cursor_2818588086, all_2818588087);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818588045(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818583540(self_2818583541, cursor_2818583542, offset_2818583543) {
  var result_2818583544 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588183 = cursor_2818583542.Field0;
    var colontmp__2818588184 = 0;
    result_2818583544 = nimCopy(result_2818583544, {Field0: colontmp__2818588183, Field1: colontmp__2818588184}, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583544;

}

function moveCursorHome_2818588123(self_2818588124, cursor_2818588125, all_2818588126) {
    moveCursor_2818583704(self_2818588124, cursor_2818588125, doMoveCursorHome_2818583540, 0, all_2818588126);
    updateTargetColumn_2818584601(self_2818588124, cursor_2818588125);

  
}

function moveCursorHomeJsWrapper_2818588119(self_2818588156, cursor_2818588157, all_2818588158) {
    moveCursorHome_2818588123(self_2818588156, cursor_2818588157, all_2818588158);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818588119(this, cursor_, all_));};

function doMoveCursorEnd_2818583545(self_2818583546, cursor_2818583547, offset_2818583548) {
  var result_2818583549 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588251 = cursor_2818583547.Field0;
    var colontmp__2818588252 = lineLength_2818572673(self_2818583546.document, cursor_2818583547.Field0);
    result_2818583549 = nimCopy(result_2818583549, {Field0: colontmp__2818588251, Field1: colontmp__2818588252}, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583549;

}

function moveCursorEnd_2818588191(self_2818588192, cursor_2818588193, all_2818588194) {
    moveCursor_2818583704(self_2818588192, cursor_2818588193, doMoveCursorEnd_2818583545, 0, all_2818588194);
    updateTargetColumn_2818584601(self_2818588192, cursor_2818588193);

  
}

function moveCursorEndJsWrapper_2818588187(self_2818588224, cursor_2818588225, all_2818588226) {
    moveCursorEnd_2818588191(self_2818588224, cursor_2818588225, all_2818588226);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818588187(this, cursor_, all_));};

function getLine_2818572666(self_2818572667, line_2818572668) {
  var result_2818572669 = [];

  BeforeRet: {
    if ((line_2818572668 < (self_2818572667.lines).length)) {
    result_2818572669 = nimCopy(null, self_2818572667.lines[chckIndx(line_2818572668, 0, (self_2818572667.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572669 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572669;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818588259(self_2818588260, str_2818588261, cursor_2818588262, all_2818588263) {
    str_2818588261 = nimCopy(null, str_2818588261, NTI33554449);
    
function doMoveCursorTo_2818588264(self_2818588265, cursor_2818588266, offset_2818588267) {
      var result_2818588268 = {Field0: 0, Field1: 0};

        var line_2818588269 = getLine_2818572666(self_2818588265.document, cursor_2818588266.Field0);
        result_2818588268 = nimCopy(result_2818588268, cursor_2818588266, NTI2449473546);
        var index_2818588270 = nsuFindStr(line_2818588269, str_2818588261, chckRange(addInt(cursor_2818588266.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818588270)) {
        var colontmp__2818588334 = cursor_2818588266.Field0;
        var colontmp__2818588335 = index_2818588270;
        result_2818588268 = nimCopy(result_2818588268, {Field0: colontmp__2818588334, Field1: colontmp__2818588335}, NTI2449473546);
        }
        

      return result_2818588268;

    }

    moveCursor_2818583704(self_2818588260, cursor_2818588262, doMoveCursorTo_2818588264, 0, all_2818588263);
    updateTargetColumn_2818584601(self_2818588260, cursor_2818588262);

  
}

function moveCursorToJsWrapper_2818588255(self_2818588301, str_2818588302, cursor_2818588303, all_2818588304) {
    moveCursorTo_2818588259(self_2818588301, str_2818588302, cursor_2818588303, all_2818588304);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818588255(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818588342(self_2818588343, str_2818588344, cursor_2818588345, all_2818588346) {
    str_2818588344 = nimCopy(null, str_2818588344, NTI33554449);
    
function doMoveCursorBefore_2818588347(self_2818588348, cursor_2818588349, offset_2818588350) {
      var result_2818588351 = {Field0: 0, Field1: 0};

        var line_2818588352 = getLine_2818572666(self_2818588348.document, cursor_2818588349.Field0);
        result_2818588351 = nimCopy(result_2818588351, cursor_2818588349, NTI2449473546);
        var index_2818588353 = nsuFindStr(line_2818588352, str_2818588344, chckRange(cursor_2818588349.Field1, 0, 2147483647), -1);
        if ((0 < index_2818588353)) {
        var colontmp__2818588417 = cursor_2818588349.Field0;
        var colontmp__2818588418 = subInt(index_2818588353, 1);
        result_2818588351 = nimCopy(result_2818588351, {Field0: colontmp__2818588417, Field1: colontmp__2818588418}, NTI2449473546);
        }
        

      return result_2818588351;

    }

    moveCursor_2818583704(self_2818588343, cursor_2818588345, doMoveCursorBefore_2818588347, 0, all_2818588346);
    updateTargetColumn_2818584601(self_2818588343, cursor_2818588345);

  
}

function moveCursorBeforeJsWrapper_2818588338(self_2818588384, str_2818588385, cursor_2818588386, all_2818588387) {
    moveCursorBefore_2818588342(self_2818588384, str_2818588385, cursor_2818588386, all_2818588387);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818588338(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818583563(self_2818583564, cursor_2818583565, offset_2818583566) {
  var result_2818583567 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583567 = nimCopy(result_2818583567, getNextFindResult_2818583554(self_2818583564, cursor_2818583565, offset_2818583566).Field0, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583567;

}

function moveCursorNextFindResult_2818588425(self_2818588426, cursor_2818588427, all_2818588428) {
    moveCursor_2818583704(self_2818588426, cursor_2818588427, doMoveCursorNextFindResult_2818583563, 0, all_2818588428);
    updateTargetColumn_2818584601(self_2818588426, cursor_2818588427);

  
}

function moveCursorNextFindResultJsWrapper_2818588421(self_2818588458, cursor_2818588459, all_2818588460) {
    moveCursorNextFindResult_2818588425(self_2818588458, cursor_2818588459, all_2818588460);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818588421(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818583558(self_2818583559, cursor_2818583560, offset_2818583561) {
  var result_2818583562 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583562 = nimCopy(result_2818583562, getPrevFindResult_2818583550(self_2818583559, cursor_2818583560, offset_2818583561).Field0, NTI2449473546);
    break BeforeRet;
  };

  return result_2818583562;

}

function moveCursorPrevFindResult_2818588491(self_2818588492, cursor_2818588493, all_2818588494) {
    moveCursor_2818583704(self_2818588492, cursor_2818588493, doMoveCursorPrevFindResult_2818583558, 0, all_2818588494);
    updateTargetColumn_2818584601(self_2818588492, cursor_2818588493);

  
}

function moveCursorPrevFindResultJsWrapper_2818588487(self_2818588524, cursor_2818588525, all_2818588526) {
    moveCursorPrevFindResult_2818588491(self_2818588524, cursor_2818588525, all_2818588526);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818588487(this, cursor_, all_));};

function scrollToCursor_2818584038(self_2818584039, cursor_2818584040) {
    scrollToCursor_2818583568(self_2818584039, getCursor_2818583639(self_2818584039, cursor_2818584040), false);

  
}

function scrollToCursorJsWrapper_2818588553(self_2818588588, cursor_2818588589) {
    scrollToCursor_2818584038(self_2818588588, cursor_2818588589);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818588553(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818588660 = 0;
      colontmp__2818588660 = subInt((path_1426063614).length, 1);
      var res_2818588661 = colontmp__2818588660;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818588661)) break Label3;
            i_1426063627 = res_2818588661;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818588661 = subInt(res_2818588661, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2348810263() {
  var result_2348810270 = ({val: [], has: false});

  return result_2348810270;

}

function some_2281701410(val_2281701412) {
  var result_2281701413 = ({val: [], has: false});

    result_2281701413.has = true;
    result_2281701413.val = nimCopy(null, val_2281701412, NTI33554449);

  return result_2281701413;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2348810263(), NTI2348810261);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2281701410(languageId_2902458407), NTI2348810261);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2348810304(self_2348810306) {
  var result_2348810307 = false;

    result_2348810307 = self_2348810306.has;

  return result_2348810307;

}

function isNone_2818578915(self_2818578917) {
  var result_2818578918 = false;

    result_2818578918 = !(self_2818578917.has);

  return result_2818578918;

}

function get_2818578907(self_2818578909) {
  var result_2818578910 = [];

    if (isNone_2818578915(self_2818578909)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578910 = self_2818578909["val"];

  return result_2818578910;

}

function getOption_2818578923(editor_2818578925, path_2818578926, default_2818578927) {
  var result_2818578933 = null;

  BeforeRet: {
    if ((editor_2818578925 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    var node_2818578945 = HEX7BHEX7D_1627393316(editor_2818578925.options, nsuSplitString(path_2818578926, [46], -1));
    if ((node_2818578945 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    result_2818578933 = node_2818578945;
    break BeforeRet;
  };

  return result_2818578933;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578959(self_2818578961) {
  var result_2818578962 = false;

    result_2818578962 = (self_2818578961.val == null);

  return result_2818578962;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578992(self_2818578994) {
  var result_2818578995 = null;
  var result_2818578995_Idx = 0;

  BeforeRet: {
    if (isNone_2818578959(self_2818578994)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578995 = self_2818578994; result_2818578995_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578995, result_2818578995_Idx];

}

function contentString_2818574088(document_2818574089) {
  var result_2818574090 = [];

  BeforeRet: {
    result_2818574090 = nimCopy(null, nsuJoinSep(document_2818574089.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818574090;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578870(self_2818578871) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578873 = null;

  BeforeRet: {
    if (!((self_2818578871.tsParser == null))) {
    deinit_2885681592(self_2818578871.tsParser);
    self_2818578871.tsParser = null;
    }
    
    if (!((self_2818578871.highlightQuery == null))) {
    deinit_2885681594(self_2818578871.highlightQuery);
    self_2818578871.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578887 = getLanguageForFile_2902458372(self_2818578871.filename);
      if (!isSome_2348810304(oHEX60gensym88_2818578887)) Temporary2 = false; else {        var languageId_2818578921 = nimCopy(null, get_2818578907(oHEX60gensym88_2818578887), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578921;
    }
    else {
      result_2818578873 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578922 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578949 = getOption_2818578923(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578922 || []), newJObject_1627390051());
    var language_2818578954 = [(await loadLanguage_2885681535(languageId_2818578922, config_2818578949))];
    if (isNone_2818578959(language_2818578954[0])) {
    var fmtRes_2818578971 = [mnewString(0)];
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578971, 0, languageId_2818578922, []);
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578971[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser = createTsParser_2885681581();
    if ((self_2818578871.tsParser == null)) {
    var fmtRes_2818578979 = [mnewString(0)];
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578979, 0, languageId_2818578922, []);
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578979[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser.setLanguage((Temporary3 = get_2818578992(language_2818578954[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578871.tsLanguage = (Temporary4 = get_2818578992(language_2818578954[0]), Temporary4)[0][Temporary4[1]];
    self_2818578871.currentTree = parseString_2885681211(self_2818578871.tsParser, contentString_2818574088(self_2818578871), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818579032 = [mnewString(0)];
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818579032, 0, languageId_2818578922, []);
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818579033 = loadFile_2365587463(fs_2365587509, fmtRes_2818579032[0]);
    self_2818578871.highlightQuery = (Temporary6 = get_2818578992(language_2818578954[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818579033));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818579053 = [mnewString(0)];
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818579053, 0, languageId_2818578922, []);
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818579053[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573268(self_2818578871);
    requestRender_2768240746(gEditor.platform, false);
    result_2818578873 = undefined;
    break BeforeRet;
  };

  return result_2818578873;

}

function reloadTreesitter_2818588615(self_2818588616) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578870(self_2818588616.document);

  
}

function reloadTreesitterJsWrapper_2818588611(self_2818588644) {
    reloadTreesitter_2818588615(self_2818588644);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818588611(this));};

function deleteLeft_2818588671(self_2818588672) {
    var selections_2818588673 = selections_2818572802(self_2818588672);
    Label1: {
      var i_2818588679 = 0;
      var selection_2818588680 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588726 = 0;
      var L_2818588727 = (selections_2818588673).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588726 < L_2818588727)) break Label3;
            i_2818588679 = i_2818588726;
            selection_2818588680 = nimCopy(selection_2818588680, selections_2818588673[chckIndx(i_2818588726, 0, (selections_2818588673).length - 1)], NTI2449473548);
            if (isEmpty_2449473911(selection_2818588680)) {
            var colontmp__2818588724 = doMoveCursorColumn_2818583517(self_2818588672, selection_2818588680.Field0, -1);
            var colontmp__2818588725 = nimCopy(null, selection_2818588680.Field0, NTI2449473546);
            selections_2818588673[chckIndx(i_2818588679, 0, (selections_2818588673).length - 1)] = nimCopy(selections_2818588673[chckIndx(i_2818588679, 0, (selections_2818588673).length - 1)], {Field0: nimCopy(null, colontmp__2818588724, NTI2449473546), Field1: nimCopy(null, colontmp__2818588725, NTI2449473546)}, NTI2449473548);
            }
            
            i_2818588726 = addInt(i_2818588726, 1);
            if (!(((selections_2818588673).length == L_2818588727))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588672, delete_2818579356(self_2818588672.document, selections_2818588673, selections_2818572802(self_2818588672), true, true));
    updateTargetColumn_2818584601(self_2818588672, 3);

  
}

function deleteLeftJsWrapper_2818588667(self_2818588708) {
    deleteLeft_2818588671(self_2818588708);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818588667(this));};

function deleteRight_2818588735(self_2818588736) {
    var selections_2818588737 = selections_2818572802(self_2818588736);
    Label1: {
      var i_2818588743 = 0;
      var selection_2818588744 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588790 = 0;
      var L_2818588791 = (selections_2818588737).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588790 < L_2818588791)) break Label3;
            i_2818588743 = i_2818588790;
            selection_2818588744 = nimCopy(selection_2818588744, selections_2818588737[chckIndx(i_2818588790, 0, (selections_2818588737).length - 1)], NTI2449473548);
            if (isEmpty_2449473911(selection_2818588744)) {
            var colontmp__2818588788 = nimCopy(null, selection_2818588744.Field0, NTI2449473546);
            var colontmp__2818588789 = doMoveCursorColumn_2818583517(self_2818588736, selection_2818588744.Field0, 1);
            selections_2818588737[chckIndx(i_2818588743, 0, (selections_2818588737).length - 1)] = nimCopy(selections_2818588737[chckIndx(i_2818588743, 0, (selections_2818588737).length - 1)], {Field0: nimCopy(null, colontmp__2818588788, NTI2449473546), Field1: nimCopy(null, colontmp__2818588789, NTI2449473546)}, NTI2449473548);
            }
            
            i_2818588790 = addInt(i_2818588790, 1);
            if (!(((selections_2818588737).length == L_2818588791))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588736, delete_2818579356(self_2818588736.document, selections_2818588737, selections_2818572802(self_2818588736), true, true));
    updateTargetColumn_2818584601(self_2818588736, 3);

  
}

function deleteRightJsWrapper_2818588731(self_2818588772) {
    deleteRight_2818588735(self_2818588772);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818588731(this));};

function getCommandCount_2818588799(self_2818588800) {
  var result_2818588801 = 0;

  BeforeRet: {
    result_2818588801 = self_2818588800.commandCount;
    break BeforeRet;
  };

  return result_2818588801;

}

function getCommandCountJsWrapper_2818588795(self_2818588830) {
  var result_2818588831 = 0;

    result_2818588831 = getCommandCount_2818588799(self_2818588830);

  return result_2818588831;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818588795(this));};

function setCommandCount_2818588856(self_2818588857, count_2818588858) {
    self_2818588857.commandCount = count_2818588858;

  
}

function setCommandCountJsWrapper_2818588852(self_2818588887, count_2818588888) {
    setCommandCount_2818588856(self_2818588887, count_2818588888);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818588852(this, count_));};

function setCommandCountRestore_2818588914(self_2818588915, count_2818588916) {
    self_2818588915.commandCountRestore = count_2818588916;

  
}

function setCommandCountRestoreJsWrapper_2818588910(self_2818588945, count_2818588946) {
    setCommandCountRestore_2818588914(self_2818588945, count_2818588946);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818588910(this, count_));};

function updateCommandCount_2818588972(self_2818588973, digit_2818588974) {
    self_2818588973.commandCount = addInt(mulInt(self_2818588973.commandCount, 10), digit_2818588974);

  
}

function updateCommandCountJsWrapper_2818588968(self_2818589003, digit_2818589004) {
    updateCommandCount_2818588972(self_2818589003, digit_2818589004);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818588968(this, digit_));};

function setFlag_2818589030(self_2818589031, name_2818589032, value_2818589033) {
    setFlag_1291848951(self_2818589031.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589032 || []), value_2818589033);
    markDirty_2415919143(self_2818589031);

  
}

function setFlagJsWrapper_2818589026(self_2818589063, name_2818589064, value_2818589065) {
    setFlag_2818589030(self_2818589063, name_2818589064, value_2818589065);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818589026(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818589096(self_2818589097, name_2818589098) {
  var result_2818589099 = false;

  BeforeRet: {
    result_2818589099 = getFlag_1291848874(self_2818589097.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589098 || []), false);
    break BeforeRet;
  };

  return result_2818589099;

}

function getFlagJsWrapper_2818589092(self_2818589129, name_2818589130) {
  var result_2818589131 = false;

    result_2818589131 = getFlag_2818589096(self_2818589129, name_2818589130);

  return result_2818589131;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818589092(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818589166(self_2818589167, action_2818589168, args_2818589169) {
  var result_2818589170 = false;

  BeforeRet: {
    result_2818589170 = (handleActionInternal_2818572659(self_2818589167, action_2818589168, args_2818589169) == 3);
    break BeforeRet;
  };

  return result_2818589170;

}

function runActionJsWrapper_2818589162(self_2818589205, action_2818589206, args_2818589207) {
  var result_2818589208 = false;

    result_2818589208 = runAction_2818589166(self_2818589205, action_2818589206, args_2818589207);

  return result_2818589208;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818589162(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818589232(c_2818589233) {
  var result_2818589234 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818589233) || (c_2818589233 == 95))) {
    result_2818589234 = 0;
    break BeforeRet;
    }
    
    if (((c_2818589233 == 32) || (c_2818589233 == 9))) {
    result_2818589234 = 1;
    break BeforeRet;
    }
    
    result_2818589234 = 2;
    break BeforeRet;
  };

  return result_2818589234;

}

function findWordBoundary_2818589241(self_2818589242, cursor_2818589243) {
  var result_2818589244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818589245 = getLine_2818572666(self_2818589242.document, cursor_2818589243.Field0);
    result_2818589244 = nimCopy(result_2818589244, toSelection_2449474032(cursor_2818589243), NTI2449473548);
    if ((result_2818589244.Field0.Field1 == (line_2818589245).length)) {
    result_2818589244.Field0.Field1 = subInt(result_2818589244.Field0.Field1, 1);
    result_2818589244.Field1.Field1 = subInt(result_2818589244.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818589244.Field0.Field1) && (result_2818589244.Field0.Field1 < (line_2818589245).length))) break Label2;
          var leftCategory_2818589256 = charCategory_2818589232(line_2818589245[chckIndx(subInt(result_2818589244.Field0.Field1, 1), 0, (line_2818589245).length - 1)]);
          var rightCategory_2818589257 = charCategory_2818589232(line_2818589245[chckIndx(result_2818589244.Field0.Field1, 0, (line_2818589245).length - 1)]);
          if (!((leftCategory_2818589256 == rightCategory_2818589257))) {
          break Label1;
          }
          
          result_2818589244.Field0.Field1 = subInt(result_2818589244.Field0.Field1, 1);
        }
    };
    if ((result_2818589244.Field1.Field1 < (line_2818589245).length)) {
    result_2818589244.Field1.Field1 = addInt(result_2818589244.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818589244.Field1.Field1) && (result_2818589244.Field1.Field1 < (line_2818589245).length))) break Label4;
          var leftCategory_2818589266 = charCategory_2818589232(line_2818589245[chckIndx(subInt(result_2818589244.Field1.Field1, 1), 0, (line_2818589245).length - 1)]);
          var rightCategory_2818589267 = charCategory_2818589232(line_2818589245[chckIndx(result_2818589244.Field1.Field1, 0, (line_2818589245).length - 1)]);
          if (!((leftCategory_2818589266 == rightCategory_2818589267))) {
          break Label3;
          }
          
          result_2818589244.Field1.Field1 = addInt(result_2818589244.Field1.Field1, 1);
        }
    };

  return result_2818589244;

}

function findWordBoundaryJsWrapper_2818589237(self_2818589301, cursor_2818589302) {
  var result_2818589303 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589303 = nimCopy(result_2818589303, findWordBoundary_2818589241(self_2818589301, cursor_2818589302), NTI2449473548);

  return result_2818589303;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818589237(this, cursor_));};

function min_2449473874(a_2449473875, b_2449473876) {
  var result_2449473877 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2449473866(a_2449473875, b_2449473876)) {
    result_2449473877 = nimCopy(result_2449473877, a_2449473875, NTI2449473546);
    break BeforeRet;
    }
    
    result_2449473877 = nimCopy(result_2449473877, b_2449473876, NTI2449473546);
    break BeforeRet;
  };

  return result_2449473877;

}

function max_2449473878(a_2449473879, b_2449473880) {
  var result_2449473881 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473882(b_2449473880, a_2449473879)) {
    result_2449473881 = nimCopy(result_2449473881, a_2449473879, NTI2449473546);
    break BeforeRet;
    }
    
    result_2449473881 = nimCopy(result_2449473881, b_2449473880, NTI2449473546);
    break BeforeRet;
  };

  return result_2449473881;

}

function or_2449474026(a_2449474027, b_2449474028) {
  var result_2449474029 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2449474030 = normalized_2449473905(a_2449474027);
    var bn_2449474031 = normalized_2449473905(b_2449474028);
    var colontmp__2818589545 = min_2449473874(an_2449474030.Field0, bn_2449474031.Field0);
    var colontmp__2818589546 = max_2449473878(an_2449474030.Field1, bn_2449474031.Field1);
    result_2449474029 = nimCopy(result_2449474029, {Field0: nimCopy(null, colontmp__2818589545, NTI2449473546), Field1: nimCopy(null, colontmp__2818589546, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
  };

  return result_2449474029;

}

function reverse_2449473908(selection_2449473909) {
  var result_2449473910 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818589547 = nimCopy(null, selection_2449473909.Field1, NTI2449473546);
    var colontmp__2818589548 = nimCopy(null, selection_2449473909.Field0, NTI2449473546);
    result_2449473910 = nimCopy(result_2449473910, {Field0: nimCopy(null, colontmp__2818589547, NTI2449473546), Field1: nimCopy(null, colontmp__2818589548, NTI2449473546)}, NTI2449473548);

  return result_2449473910;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818589335(self_2818589336, cursor_2818589337, move_2818589338, count_2818589339) {
  var result_2818589340 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818589338)) {
    case "word":
      result_2818589340 = nimCopy(result_2818589340, findWordBoundary_2818589241(self_2818589336, cursor_2818589337), NTI2449473548);
      Label1: {
        var __2818589345 = 0;
        var i_2818589503 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818589503 < count_2818589339)) break Label3;
              __2818589345 = i_2818589503;
              result_2818589340 = nimCopy(result_2818589340, or_2449474026(or_2449474026(result_2818589340, findWordBoundary_2818589241(self_2818589336, result_2818589340.Field1)), findWordBoundary_2818589241(self_2818589336, result_2818589340.Field0)), NTI2449473548);
              i_2818589503 = addInt(i_2818589503, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818589346 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, findWordBoundary_2818589241(self_2818589336, cursor_2818589337), NTI2449473548);
      if (((cursor_2818589337.Field1 == 0) && (0 < cursor_2818589337.Field0))) {
      var colontmp__2818589505 = subInt(cursor_2818589337.Field0, 1);
      var colontmp__2818589506 = (getLine_2818572666(self_2818589336.document, subInt(cursor_2818589337.Field0, 1))).length;
      result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589505, Field1: colontmp__2818589506}, NTI2449473546);
      }
      
      if (((cursor_2818589337.Field1 == (line_2818589346).length) && (cursor_2818589337.Field0 < subInt((self_2818589336.document.lines).length, 1)))) {
      var colontmp__2818589507 = addInt(cursor_2818589337.Field0, 1);
      var colontmp__2818589508 = 0;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589507, Field1: colontmp__2818589508}, NTI2449473546);
      }
      
      Label4: {
        var __2818589354 = 0;
        var i_2818589514 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818589514 < count_2818589339)) break Label6;
              __2818589354 = i_2818589514;
              result_2818589340 = nimCopy(result_2818589340, or_2449474026(or_2449474026(result_2818589340, findWordBoundary_2818589241(self_2818589336, result_2818589340.Field1)), findWordBoundary_2818589241(self_2818589336, result_2818589340.Field0)), NTI2449473548);
              var line_2818589355 = getLine_2818572666(self_2818589336.document, result_2818589340.Field1.Field0);
              if (((result_2818589340.Field0.Field1 == 0) && (0 < result_2818589340.Field0.Field0))) {
              var colontmp__2818589510 = subInt(result_2818589340.Field0.Field0, 1);
              var colontmp__2818589511 = (getLine_2818572666(self_2818589336.document, subInt(result_2818589340.Field0.Field0, 1))).length;
              result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589510, Field1: colontmp__2818589511}, NTI2449473546);
              }
              
              if (((result_2818589340.Field1.Field1 == (line_2818589355).length) && (result_2818589340.Field1.Field0 < subInt((self_2818589336.document.lines).length, 1)))) {
              var colontmp__2818589512 = addInt(result_2818589340.Field1.Field0, 1);
              var colontmp__2818589513 = 0;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589512, Field1: colontmp__2818589513}, NTI2449473546);
              }
              
              i_2818589514 = addInt(i_2818589514, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818589340 = nimCopy(result_2818589340, reverse_2449473908(getSelectionForMove_2818589335(self_2818589336, {Field0: cursor_2818589337.Field0, Field1: nimMax(0, subInt(cursor_2818589337.Field1, 1))}, [119,111,114,100], count_2818589339)), NTI2449473548);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818589340 = nimCopy(result_2818589340, reverse_2449473908(getSelectionForMove_2818589335(self_2818589336, {Field0: cursor_2818589337.Field0, Field1: nimMax(0, subInt(cursor_2818589337.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818589339)), NTI2449473548);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818589516 = {Field0: cursor_2818589337.Field0, Field1: 0};
      var colontmp__2818589517 = {Field0: cursor_2818589337.Field0, Field1: (getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0)).length};
      result_2818589340 = nimCopy(result_2818589340, {Field0: nimCopy(null, colontmp__2818589516, NTI2449473546), Field1: nimCopy(null, colontmp__2818589517, NTI2449473546)}, NTI2449473548);
      break;
    case "line-next":
      var colontmp__2818589518 = {Field0: cursor_2818589337.Field0, Field1: 0};
      var colontmp__2818589519 = {Field0: cursor_2818589337.Field0, Field1: (getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0)).length};
      result_2818589340 = nimCopy(result_2818589340, {Field0: nimCopy(null, colontmp__2818589518, NTI2449473546), Field1: nimCopy(null, colontmp__2818589519, NTI2449473546)}, NTI2449473548);
      if ((addInt(result_2818589340.Field1.Field0, 1) < (self_2818589336.document.lines).length)) {
      var colontmp__2818589520 = addInt(result_2818589340.Field1.Field0, 1);
      var colontmp__2818589521 = 0;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589520, Field1: colontmp__2818589521}, NTI2449473546);
      }
      
      Label7: {
        var __2818589366 = 0;
        var i_2818589525 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818589525 < count_2818589339)) break Label9;
              __2818589366 = i_2818589525;
              result_2818589340 = nimCopy(result_2818589340, or_2449474026(result_2818589340, {Field0: {Field0: result_2818589340.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818589340.Field1.Field0, Field1: (getLine_2818572666(self_2818589336.document, result_2818589340.Field1.Field0)).length}}), NTI2449473548);
              if ((addInt(result_2818589340.Field1.Field0, 1) < (self_2818589336.document.lines).length)) {
              var colontmp__2818589523 = addInt(result_2818589340.Field1.Field0, 1);
              var colontmp__2818589524 = 0;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589523, Field1: colontmp__2818589524}, NTI2449473546);
              }
              
              i_2818589525 = addInt(i_2818589525, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818589527 = 0;
      var colontmp__2818589528 = 0;
      result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589527, Field1: colontmp__2818589528}, NTI2449473546);
      var line_2818589373 = subInt((self_2818589336.document.lines).length, 1);
      var colontmp__2818589529 = line_2818589373;
      var colontmp__2818589530 = (getLine_2818572666(self_2818589336.document, line_2818589373)).length;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589529, Field1: colontmp__2818589530}, NTI2449473546);
      break;
    case "prev-find-result":
      result_2818589340 = nimCopy(result_2818589340, getPrevFindResult_2818583550(self_2818589336, cursor_2818589337, count_2818589339), NTI2449473548);
      break;
    case "next-find-result":
      result_2818589340 = nimCopy(result_2818589340, getNextFindResult_2818583554(self_2818589336, cursor_2818589337, count_2818589339), NTI2449473548);
      break;
    default: 
      if (nsuStartsWith(move_2818589338, [109,111,118,101,45,116,111,32])) {
      var str_2818589392 = HEX5BHEX5D_855639319(move_2818589338, HEX2EHEX2E_1040187488(8, 1));
      var line_2818589393 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, toSelection_2449474032(cursor_2818589337), NTI2449473548);
      var index_2818589394 = nsuFindStr(line_2818589393, str_2818589392, chckRange(cursor_2818589337.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818589394)) {
      var colontmp__2818589531 = cursor_2818589337.Field0;
      var colontmp__2818589532 = addInt(index_2818589394, 1);
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589531, Field1: colontmp__2818589532}, NTI2449473546);
      }
      
      Label10: {
        var __2818589399 = 0;
        var i_2818589536 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818589536 < count_2818589339)) break Label12;
              __2818589399 = i_2818589536;
              var index_2818589400 = nsuFindStr(line_2818589393, str_2818589392, chckRange(result_2818589340.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818589400)) {
              var colontmp__2818589534 = result_2818589340.Field1.Field0;
              var colontmp__2818589535 = addInt(index_2818589400, 1);
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589534, Field1: colontmp__2818589535}, NTI2449473546);
              }
              
              i_2818589536 = addInt(i_2818589536, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818589338, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818589419 = HEX5BHEX5D_855639319(move_2818589338, HEX2EHEX2E_1040187488(12, 1));
      var line_2818589420 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, toSelection_2449474032(cursor_2818589337), NTI2449473548);
      var index_2818589421 = nsuFindStr(line_2818589420, str_2818589419, chckRange(addInt(cursor_2818589337.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818589421)) {
      var colontmp__2818589538 = cursor_2818589337.Field0;
      var colontmp__2818589539 = index_2818589421;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589538, Field1: colontmp__2818589539}, NTI2449473546);
      }
      
      Label13: {
        var __2818589426 = 0;
        var i_2818589543 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818589543 < count_2818589339)) break Label15;
              __2818589426 = i_2818589543;
              var index_2818589427 = nsuFindStr(line_2818589420, str_2818589419, chckRange(addInt(result_2818589340.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818589427)) {
              var colontmp__2818589541 = result_2818589340.Field1.Field0;
              var colontmp__2818589542 = index_2818589427;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589541, Field1: colontmp__2818589542}, NTI2449473546);
              }
              
              i_2818589543 = addInt(i_2818589543, 1);
            }
        };
      };
      }
      else {
        result_2818589340 = nimCopy(result_2818589340, toSelection_2449474032(cursor_2818589337), NTI2449473548);
        var fmtRes_2818589432 = [mnewString(0)];
        fmtRes_2818589432[0].push.apply(fmtRes_2818589432[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818589432, 0, move_2818589338, []);
        fmtRes_2818589432[0].push.apply(fmtRes_2818589432[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818589432[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818589340;

}

function getSelectionForMoveJsWrapper_2818589331(self_2818589464, cursor_2818589465, move_2818589466, count_2818589467) {
  var result_2818589468 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589468 = nimCopy(result_2818589468, getSelectionForMove_2818589335(self_2818589464, cursor_2818589465, move_2818589466, count_2818589467), NTI2449473548);

  return result_2818589468;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818589331(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818589613(s_2818589617, x_2818589618) {
  var result_2818589619 = [];

    var a_2818589621 = x_2818589618.a;
    var L_2818589626 = addInt(subInt(subInt((s_2818589617).length, x_2818589618.b), a_2818589621), 1);
    result_2818589619 = new Array(chckRange(L_2818589626, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818589626, 0, 2147483647) ; ++i) { result_2818589619[i] = []; }    Label1: {
      var i_2818589635 = 0;
      var i_2818589853 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589853 < L_2818589626)) break Label3;
            i_2818589635 = i_2818589853;
            result_2818589619[chckIndx(i_2818589635, 0, (result_2818589619).length - 1)] = nimCopy(null, s_2818589617[chckIndx(addInt(i_2818589635, a_2818589621), 0, (s_2818589617).length - 1)], NTI33554449);
            i_2818589853 = addInt(i_2818589853, 1);
          }
      };
    };

  return result_2818589619;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2701132581(s_2701132583, i_2701132584) {
  var result_2701132585 = [];

    result_2701132585 = nimCopy(null, s_2701132583[chckIndx(subInt((s_2701132583).length, i_2701132584), 0, (s_2701132583).length - 1)], NTI33554449);

  return result_2701132585;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818589583(editor_2818589585, path_2818589586, value_2818589587) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589585 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym738_2818589602 = nsuSplitString(path_2818589586, [46], -1);
      var nodeHEX60gensym738_2818589603 = editor_2818589585.options;
      Label2: {
        var keyHEX60gensym738_2818589639 = [];
        var colontmp__2818589848 = [];
        colontmp__2818589848 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym738_2818589602, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589849 = 0;
        var L_2818589850 = (colontmp__2818589848).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589849 < L_2818589850)) break Label4;
              keyHEX60gensym738_2818589639 = colontmp__2818589848[chckIndx(i_2818589849, 0, (colontmp__2818589848).length - 1)];
              if (!((nodeHEX60gensym738_2818589603.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639, newJObject_1627390051());
              }
              
              nodeHEX60gensym738_2818589603 = HEX5BHEX5D_1627393037(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639);
              i_2818589849 = addInt(i_2818589849, 1);
              if (!(((colontmp__2818589848).length == L_2818589850))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym738_2818589603 == null) || !((nodeHEX60gensym738_2818589603.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589603, HEX5BHEX5D_2701132581(pathItemsHEX60gensym738_2818589602, 1), newJInt_1627390040(value_2818589587));
    };
    requestRender_2768240746(editor_2818589585.platform, true);
  };

  
}

function getOption_2818589655(editor_2818589657, path_2818589658, default_2818589659) {
  var result_2818589664 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818589657 == null)) {
      result_2818589664 = nimCopy(null, default_2818589659, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym743_2818589677 = HEX7BHEX7D_1627393316(editor_2818589657.options, nsuSplitString(path_2818589658, [46], -1));
      if ((nodeHEX60gensym743_2818589677 == null)) {
      result_2818589664 = nimCopy(null, default_2818589659, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818589664 = nimCopy(null, getStr_1627390106(nodeHEX60gensym743_2818589677, default_2818589659), NTI33554449);
    break BeforeRet;
  };

  return result_2818589664;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818589681(editor_2818589683, path_2818589684, default_2818589685) {
  var result_2818589690 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818589683 == null)) {
      result_2818589690 = default_2818589685;
      break BeforeRet;
      }
      
      var nodeHEX60gensym744_2818589702 = HEX7BHEX7D_1627393316(editor_2818589683.options, nsuSplitString(path_2818589684, [46], -1));
      if ((nodeHEX60gensym744_2818589702 == null)) {
      result_2818589690 = default_2818589685;
      break BeforeRet;
      }
      
    };
    result_2818589690 = getInt_1627390118(nodeHEX60gensym744_2818589702, default_2818589685);
    break BeforeRet;
  };

  return result_2818589690;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818589715(editor_2818589717, path_2818589718, value_2818589719) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589717 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym745_2818589735 = nsuSplitString(path_2818589718, [46], -1);
      var nodeHEX60gensym745_2818589736 = editor_2818589717.options;
      Label2: {
        var keyHEX60gensym745_2818589755 = [];
        var colontmp__2818589862 = [];
        colontmp__2818589862 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym745_2818589735, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589863 = 0;
        var L_2818589864 = (colontmp__2818589862).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589863 < L_2818589864)) break Label4;
              keyHEX60gensym745_2818589755 = colontmp__2818589862[chckIndx(i_2818589863, 0, (colontmp__2818589862).length - 1)];
              if (!((nodeHEX60gensym745_2818589736.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755, newJObject_1627390051());
              }
              
              nodeHEX60gensym745_2818589736 = HEX5BHEX5D_1627393037(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755);
              i_2818589863 = addInt(i_2818589863, 1);
              if (!(((colontmp__2818589862).length == L_2818589864))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym745_2818589736 == null) || !((nodeHEX60gensym745_2818589736.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589736, HEX5BHEX5D_2701132581(pathItemsHEX60gensym745_2818589735, 1), newJString_1627389994(value_2818589719));
    };
    requestRender_2768240746(editor_2818589717.platform, true);
  };

  
}

function setMove_2818589580(self_2818589581, args_2818589582) {
    setOption_2818589583(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818588799(self_2818589581));
    setMode_2818584223(self_2818589581, getOption_2818589655(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818588856(self_2818589581, getOption_2818589681(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818589166(self_2818589581, getOption_2818589655(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818589582);
    setOption_2818589715(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818589576(self_2818589799, args_2818589800) {
    setMove_2818589580(self_2818589799, args_2818589800);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818589576(this, args_));};

function deleteMove_2818589872(self_2818589873, move_2818589874, which_2818589875, all_2818589876) {
    move_2818589874 = nimCopy(null, move_2818589874, NTI33554449);
    
function HEX3Aanonymous_2818589888(s_2818589895) {
        var Temporary1;

      var result_2818589898 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589887) {
        Temporary1 = getSelectionForMove_2818589335(self_2818589873, s_2818589895.Field1, move_2818589874, count_2818589886);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589895.Field1, NTI2449473546), Field1: nimCopy(null, getSelectionForMove_2818589335(self_2818589873, s_2818589895.Field1, move_2818589874, count_2818589886).Field1, NTI2449473546)};
        }
        
        result_2818589898 = nimCopy(result_2818589898, Temporary1, NTI2449473548);

      return result_2818589898;

    }

    var count_2818589886 = getOption_2818589681(self_2818589873.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589887 = getFlag_2818589096(self_2818589873, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589905 = map_2818572735(selections_2818572802(self_2818589873), HEX3Aanonymous_2818589888);
    selectionsHEX3D_2818573083(self_2818589873, delete_2818579356(self_2818589873.document, selections_2818589905, selections_2818572802(self_2818589873), true, true));
    scrollToCursor_2818584038(self_2818589873, 3);
    updateTargetColumn_2818584601(self_2818589873, 3);

  
}

function deleteMoveJsWrapper_2818589868(self_2818589937, move_2818589938, which_2818589939, all_2818589940) {
    deleteMove_2818589872(self_2818589937, move_2818589938, which_2818589939, all_2818589940);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818589868(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818589999(self_2818590001, all_2818590002, p_2818590004) {
    
function HEX3Aanonymous_2818590006(s_2818590013) {
      var result_2818590016 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818590016 = nimCopy(result_2818590016, p_2818590004(s_2818590013), NTI2449473548);

      return result_2818590016;

    }

  var result_2818590005 = [];

    if (all_2818590002) {
    result_2818590005 = nimCopy(null, map_2818572735(self_2818590001, HEX3Aanonymous_2818590006), NTI2818572615);
    }
    else {
      result_2818590005 = nimCopy(null, self_2818590001, NTI2818583494);
      if ((0 < (result_2818590005).length)) {
      result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)] = nimCopy(result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)], p_2818590004(result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)]), NTI2449473548);
      }
      
    }
    

  return result_2818590005;

}

function selectMove_2818589976(self_2818589977, move_2818589978, which_2818589979, all_2818589980) {
    move_2818589978 = nimCopy(null, move_2818589978, NTI33554449);
    
function HEX3Aanonymous_2818589991(s_2818589994) {
      var result_2818589997 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589997 = nimCopy(result_2818589997, getSelectionForMove_2818589335(self_2818589977, s_2818589994.Field1, move_2818589978, count_2818589990), NTI2449473548);

      return result_2818589997;

    }

    var count_2818589990 = getOption_2818589681(self_2818589977.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573083(self_2818589977, mapAllOrLast_2818589999(selections_2818572802(self_2818589977), all_2818589980, HEX3Aanonymous_2818589991));
    scrollToCursor_2818584038(self_2818589977, 3);
    updateTargetColumn_2818584601(self_2818589977, 3);

  
}

function selectMoveJsWrapper_2818589972(self_2818590066, move_2818590067, which_2818590068, all_2818590069) {
    selectMove_2818589976(self_2818590066, move_2818590067, which_2818590068, all_2818590069);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818589972(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818590105(self_2818590106, move_2818590107, which_2818590108, all_2818590109) {
    move_2818590107 = nimCopy(null, move_2818590107, NTI33554449);
    
function HEX3Aanonymous_2818590121(s_2818590128) {
        var Temporary1;

      var result_2818590131 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818590120) {
        Temporary1 = getSelectionForMove_2818589335(self_2818590106, s_2818590128.Field1, move_2818590107, count_2818590119);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818590128.Field1, NTI2449473546), Field1: nimCopy(null, getSelectionForMove_2818589335(self_2818590106, s_2818590128.Field1, move_2818590107, count_2818590119).Field1, NTI2449473546)};
        }
        
        result_2818590131 = nimCopy(result_2818590131, Temporary1, NTI2449473548);

      return result_2818590131;

    }

    var count_2818590119 = getOption_2818589681(self_2818590106.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818590120 = getFlag_2818589096(self_2818590106, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818590138 = map_2818572735(selections_2818572802(self_2818590106), HEX3Aanonymous_2818590121);
    selectionsHEX3D_2818573083(self_2818590106, delete_2818579356(self_2818590106.document, selections_2818590138, selections_2818572802(self_2818590106), true, true));
    scrollToCursor_2818584038(self_2818590106, 3);
    updateTargetColumn_2818584601(self_2818590106, 3);

  
}

function changeMoveJsWrapper_2818590101(self_2818590170, move_2818590171, which_2818590172, all_2818590173) {
    changeMove_2818590105(self_2818590170, move_2818590171, which_2818590172, all_2818590173);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818590101(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2449474035(cursor_2449474036, default_2449474037, which_2449474038) {
  var result_2449474039 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2449474038) {
    case 0:
      result_2449474039 = nimCopy(result_2449474039, default_2449474037, NTI2449473548);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818590322 = nimCopy(null, cursor_2449474036, NTI2449473546);
      var colontmp__2818590323 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818590322, NTI2449473546), Field1: nimCopy(null, colontmp__2818590323, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818590324 = nimCopy(null, cursor_2449474036, NTI2449473546);
      var colontmp__2818590325 = nimCopy(null, default_2449474037.Field1, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818590324, NTI2449473546), Field1: nimCopy(null, colontmp__2818590325, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818590326 = nimCopy(null, default_2449474037.Field0, NTI2449473546);
      var colontmp__2818590327 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818590326, NTI2449473546), Field1: nimCopy(null, colontmp__2818590327, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818590328 = nimCopy(null, default_2449474037.Field1, NTI2449473546);
      var colontmp__2818590329 = nimCopy(null, cursor_2449474036, NTI2449473546);
      result_2449474039 = nimCopy(result_2449474039, {Field0: nimCopy(null, colontmp__2818590328, NTI2449473546), Field1: nimCopy(null, colontmp__2818590329, NTI2449473546)}, NTI2449473548);
      break BeforeRet;
      break;
    }
  };

  return result_2449474039;

}

function cursor_2818589560(self_2818589561, selection_2818589562, which_2818589563) {
  var result_2818589564 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818589563) {
    case 0:
      result_2818589564 = nimCopy(result_2818589564, cursor_2818589560(self_2818589561, selection_2818589562, getOption_2818583643(self_2818589561.editor, getContextWithMode_2818583609(self_2818589561, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473546);
      break BeforeRet;
      break;
    case 1:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field1, NTI2449473546);
      break BeforeRet;
      break;
    case 2:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field0, NTI2449473546);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field1, NTI2449473546);
      break BeforeRet;
      break;
    }
  };

  return result_2818589564;

}

function moveLast_2818590209(self_2818590210, move_2818590211, which_2818590212, all_2818590213, count_2818590214) {
      move_2818590211 = nimCopy(null, move_2818590211, NTI33554449);
      
function HEX3Aanonymous_2818590215(s_2818590218) {
        var result_2818590221 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590221 = nimCopy(result_2818590221, toSelection_2449474035(getSelectionForMove_2818589335(self_2818590210, cursor_2818589560(self_2818590210, s_2818590218, which_2818590212), move_2818590211, count_2818590214).Field1, s_2818590218, getOption_2818583643(self_2818590210.editor, getContextWithMode_2818583609(self_2818590210, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473548);

        return result_2818590221;

      }
      
function HEX3Aanonymous_2818590238(s_2818590241) {
        var result_2818590244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590244 = nimCopy(result_2818590244, toSelection_2449474035(getSelectionForMove_2818589335(self_2818590210, cursor_2818589560(self_2818590210, s_2818590241, which_2818590212), move_2818590211, count_2818590214).Field1, s_2818590241, which_2818590212), NTI2449473548);

        return result_2818590244;

      }

    switch (which_2818590212) {
    case 0:
      selectionsHEX3D_2818573083(self_2818590210, mapAllOrLast_2818589999(selections_2818572802(self_2818590210), all_2818590213, HEX3Aanonymous_2818590215));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818590210, mapAllOrLast_2818589999(selections_2818572802(self_2818590210), all_2818590213, HEX3Aanonymous_2818590238));
      break;
    }
    scrollToCursor_2818584038(self_2818590210, which_2818590212);
    updateTargetColumn_2818584601(self_2818590210, which_2818590212);

  
}

function moveLastJsWrapper_2818590205(self_2818590283, move_2818590284, which_2818590285, all_2818590286, count_2818590287) {
    moveLast_2818590209(self_2818590283, move_2818590284, which_2818590285, all_2818590286, count_2818590287);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818590205(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818590336(self_2818590337, move_2818590338, which_2818590339, all_2818590340, count_2818590341) {
      move_2818590338 = nimCopy(null, move_2818590338, NTI33554449);
      
function HEX3Aanonymous_2818590342(s_2818590345) {
        var result_2818590348 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590348 = nimCopy(result_2818590348, toSelection_2449474035(getSelectionForMove_2818589335(self_2818590337, cursor_2818589560(self_2818590337, s_2818590345, which_2818590339), move_2818590338, count_2818590341).Field0, s_2818590345, getOption_2818583643(self_2818590337.editor, getContextWithMode_2818583609(self_2818590337, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473548);

        return result_2818590348;

      }
      
function HEX3Aanonymous_2818590365(s_2818590368) {
        var result_2818590371 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590371 = nimCopy(result_2818590371, toSelection_2449474035(getSelectionForMove_2818589335(self_2818590337, cursor_2818589560(self_2818590337, s_2818590368, which_2818590339), move_2818590338, count_2818590341).Field0, s_2818590368, which_2818590339), NTI2449473548);

        return result_2818590371;

      }

    switch (which_2818590339) {
    case 0:
      selectionsHEX3D_2818573083(self_2818590337, mapAllOrLast_2818589999(selections_2818572802(self_2818590337), all_2818590340, HEX3Aanonymous_2818590342));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818590337, mapAllOrLast_2818589999(selections_2818572802(self_2818590337), all_2818590340, HEX3Aanonymous_2818590365));
      break;
    }
    scrollToCursor_2818584038(self_2818590337, which_2818590339);
    updateTargetColumn_2818584601(self_2818590337, which_2818590339);

  
}

function moveFirstJsWrapper_2818590332(self_2818590410, move_2818590411, which_2818590412, all_2818590413, count_2818590414) {
    moveFirst_2818590336(self_2818590410, move_2818590411, which_2818590412, all_2818590413, count_2818590414);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818590332(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818590458(val_2818590460) {
  var result_2818590461 = ({val: ({impl: null}), has: false});

    result_2818590461.has = true;
    result_2818590461.val = nimCopy(result_2818590461.val, val_2818590460, NTI2852126723);

  return result_2818590461;

}

function isNone_2818580300(self_2818580302) {
  var result_2818580303 = false;

    result_2818580303 = !(self_2818580302.has);

  return result_2818580303;

}

function clear_2818580361(t_2818580364) {
    Label1: {
      var i_2818580433 = 0;
      var colontmp__2818590528 = 0;
      colontmp__2818590528 = (t_2818580364.data).length;
      var i_2818590529 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590529 < colontmp__2818590528)) break Label3;
            i_2818580433 = i_2818590529;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field0 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field1 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818590529 = addInt(i_2818590529, 1);
          }
      };
    };
    t_2818580364.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818590531 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818590532 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818590531, Field1: colontmp__2818590532}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580957(self_2818580959) {
  var result_2818580960 = null;

  BeforeRet: {
    if (isNone_2818580300(self_2818580959)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580960 = self_2818580959.val;
    break BeforeRet;
  };

  return result_2818580960;

}

function mustRehash_2818581582(t_2818581584) {
  var result_2818581585 = false;

    if (!((t_2818581584.counter < (t_2818581584.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818581585 = ((mulInt((t_2818581584.data).length, 2) < mulInt(t_2818581584.counter, 3)) || (subInt((t_2818581584.data).length, t_2818581584.counter) < 4));

  return result_2818581585;

}

function rawInsert_2818582191(t_2818582195, data_2818582196, data_2818582196_Idx, key_2818582197, val_2818582198, hc_2818582199, h_2818582200) {
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field1 = key_2818582197;
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field2 = nimCopy(null, val_2818582198, NTI2818572535);
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field0 = hc_2818582199;

  
}

function enlarge_2818581785(t_2818581788) {
    var n_2818581791 = [];
    n_2818581791 = new Array(chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647) ; ++i) { n_2818581791[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581788.data; t_2818581788.data = n_2818581791; n_2818581791 = Temporary1;    Label2: {
      var i_2818581871 = 0;
      var colontmp__2818590535 = 0;
      colontmp__2818590535 = (n_2818581791).length - 1;
      var res_2818590536 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590536 <= colontmp__2818590535)) break Label4;
            i_2818581871 = res_2818590536;
            var eh_2818581949 = n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581949)) {
            var j_2818581953 = (eh_2818581949 & (t_2818581788.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581788.data[chckIndx(j_2818581953, 0, (t_2818581788.data).length - 1)].Field0)) break Label6;
                  j_2818581953 = nextTry_1308622883(j_2818581953, (t_2818581788.data).length - 1);
                }
            };
            rawInsert_2818582191(t_2818581788, t_2818581788, "data", n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field1, n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field2, eh_2818581949, j_2818581953);
            }
            
            res_2818590536 = addInt(res_2818590536, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818582432(t_2818582435, key_2818582436, hc_2818582437) {
  var result_2818582438 = 0;

  BeforeRet: {
    if (((t_2818582435.data).length == 0)) {
    result_2818582438 = -1;
    break BeforeRet;
    }
    
    var h_2818582505 = (hc_2818582437 & (t_2818582435.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0)) break Label2;
          if (((t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0 == hc_2818582437) && (t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field1 == key_2818582436))) {
          result_2818582438 = h_2818582505;
          break BeforeRet;
          }
          
          h_2818582505 = nextTry_1308622883(h_2818582505, (t_2818582435.data).length - 1);
        }
    };
    result_2818582438 = subInt(-1, h_2818582505);
  };

  return result_2818582438;

}

function HEX5BHEX5DHEX3D_2818581030(t_2818581033, key_2818581034, val_2818581035) {
    if (((t_2818581033.data).length == 0)) {
    var correctSizeHEX60gensym147_2818581100 = slotsNeeded_1308622891(32);
    t_2818581033.counter = 0;
    t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818581105 = [0];
    var index_2818581435 = rawGet_2818581106(t_2818581033, key_2818581034, hc_2818581105, 0);
    if ((0 <= index_2818581435)) {
    t_2818581033.data[chckIndx(index_2818581435, 0, (t_2818581033.data).length - 1)].Field2 = nimCopy(null, val_2818581035, NTI2818572535);
    }
    else {
      if (((t_2818581033.data).length == 0)) {
      var correctSizeHEX60gensym152_2818581577 = slotsNeeded_1308622891(32);
      t_2818581033.counter = 0;
      t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818581582(t_2818581033)) {
      enlarge_2818581785(t_2818581033);
      index_2818581435 = rawGetKnownHC_2818582432(t_2818581033, key_2818581034, hc_2818581105[0]);
      }
      
      index_2818581435 = subInt(-1, index_2818581435);
      rawInsert_2818582191(t_2818581033, t_2818581033, "data", key_2818581034, val_2818581035, hc_2818581105[0], index_2818581435);
      t_2818581033.counter = addInt(t_2818581033.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582798(t_2818582801, key_2818582802) {
    var hc_2818582803 = [0];
    var i_2818582810 = rawGet_2818581106(t_2818582801, key_2818582802, hc_2818582803, 0);
    var mskHEX60gensym36_2818582814 = (t_2818582801.data).length - 1;
    if ((0 <= i_2818582810)) {
    t_2818582801.counter = subInt(t_2818582801.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582821 = i_2818582810;
            var rHEX60gensym36_2818582822 = jHEX60gensym36_2818582821;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field1 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582810 = (addInt(i_2818582810, 1) & mskHEX60gensym36_2818582814);
                  if (isEmpty_1308622877(t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582822 = (t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 & mskHEX60gensym36_2818582814);
                  if (!(((((rHEX60gensym36_2818582822 <= i_2818582810) && (jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822)) || ((jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822) && (i_2818582810 < jHEX60gensym36_2818582821))) || ((i_2818582810 < jHEX60gensym36_2818582821) && (rHEX60gensym36_2818582822 <= i_2818582810))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)] = nimCopy(t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)], t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818580294(self_2818580295) {
  BeforeRet: {
    if (isNone_2818580300(self_2818580295.searchRegex)) {
    clear_2818580361(self_2818580295.searchResults);
    markDirty_2415919143(self_2818580295);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580937 = 0;
      var line_2818580938 = [];
      var i_2818590524 = 0;
      var L_2818590525 = (self_2818580295.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590524 < L_2818590525)) break Label3;
            i_2818580937 = i_2818590524;
            line_2818580938 = self_2818580295.document.lines[chckIndx(i_2818590524, 0, (self_2818580295.document.lines).length - 1)];
            var selections_2818580943 = [];
            var start_2818580944 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580944 < (line_2818580938).length)) break Label5;
                  var bounds_2818580969 = findBounds_2852126727(line_2818580938, get_2818580957(self_2818580295.searchRegex), start_2818580944);
                  if ((bounds_2818580969.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580943.push({Field0: {Field0: i_2818580937, Field1: bounds_2818580969.Field0}, Field1: {Field0: i_2818580937, Field1: addInt(bounds_2818580969.Field1, 1)}});;
                  start_2818580944 = nimMax(addInt(bounds_2818580969.Field1, 1), addInt(start_2818580944, 1));
                }
            };
            if ((0 < (selections_2818580943).length)) {
            HEX5BHEX5DHEX3D_2818581030(self_2818580295.searchResults, i_2818580937, selections_2818580943);
            }
            else {
            del_2818582798(self_2818580295.searchResults, i_2818580937);
            }
            
            i_2818590524 = addInt(i_2818590524, 1);
            if (!(((self_2818580295.document.lines).length == L_2818590525))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2415919143(self_2818580295);
  };

  
}

function setSearchQuery_2818590455(self_2818590456, query_2818590457) {
    self_2818590456.searchQuery = nimCopy(null, query_2818590457, NTI33554449);
    self_2818590456.searchRegex = nimCopy(self_2818590456.searchRegex, some_2818590458(re_2852126779(query_2818590457)), NTI2818572524);
    updateSearchResults_2818580294(self_2818590456);

  
}

function setSearchQueryJsWrapper_2818590451(self_2818590500, query_2818590501) {
    setSearchQuery_2818590455(self_2818590500, query_2818590501);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818590451(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818590547(self_2818590548, move_2818590549, count_2818590550) {
    var selection_2818590551 = getSelectionForMove_2818589335(self_2818590548, selection_2818572805(self_2818590548).Field1, move_2818590549, count_2818590550);
    selectionHEX3D_2818572811(self_2818590548, selection_2818590551);
    setSearchQuery_2818590455(self_2818590548, contentString_2818574091(self_2818590548.document, selection_2818590551));

  
}

function setSearchQueryFromMoveJsWrapper_2818590543(self_2818590581, move_2818590582, count_2818590583) {
    setSearchQueryFromMove_2818590547(self_2818590581, move_2818590582, count_2818590583);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818590543(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818579157(self_2818579159) {
  var result_2818579160 = false;

    result_2818579160 = !((self_2818579159.val == null));

  return result_2818579160;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818579064(self_2818579065, filename_2818579066) {
  var result_2818579068 = null;

  BeforeRet: {
    result_2818579068 = undefined;
    break BeforeRet;
  };

  return result_2818579068;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818593117 = 0;
      colontmp__2818593117 = (n_2919236913).length - 1;
      var res_2818593118 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593118 <= colontmp__2818593117)) break Label4;
            i_2919236977 = res_2818593118;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818593118 = addInt(res_2818593118, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818593124 = 0;
      colontmp__2818593124 = (n_2919238113).length - 1;
      var res_2818593125 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593125 <= colontmp__2818593124)) break Label4;
            i_2919238177 = res_2818593125;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818593125 = addInt(res_2818593125, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818579185(self_2818579187) {
  var result_2818579188 = false;

    result_2818579188 = (self_2818579187.val == null);

  return result_2818579188;

}

function get_2818579177(self_2818579179) {
  var result_2818579180 = null;
  var result_2818579180_Idx = 0;

  BeforeRet: {
    if (isNone_2818579185(self_2818579179)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579180 = self_2818579179; result_2818579180_Idx = "val";
    break BeforeRet;
  };

  return [result_2818579180, result_2818579180_Idx];

}
async function getLanguageServer_2818590611(self_2818590612) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818590685(targetFilename_2818590686) {
        var result_2818590688 = null;

        BeforeRet: {
          (await saveTempFile_2818579064(self_2818590612.document, targetFilename_2818590686));
          result_2818590688 = undefined;
          break BeforeRet;
        };

        return result_2818590688;

      }
      var Temporary3;

  var result_2818590615 = null;

  BeforeRet: {
      var oHEX60gensym848_2818590627 = getLanguageForFile_2902458372(self_2818590612.document.filename);
      if (!isSome_2348810304(oHEX60gensym848_2818590627)) Temporary2 = false; else {        var languageId_2818590650 = nimCopy(null, get_2818578907(oHEX60gensym848_2818590627), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818590650;
    }
    else {
      result_2818590615 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818590661 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818579157(self_2818590612.document.languageServer)) {
    result_2818590615 = self_2818590612.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818590612.document.languageServer = nimCopy(self_2818590612.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818590661, self_2818590612.document.filename)), NTI2818572486);
      if (isSome_2818579157(self_2818590612.document.languageServer)) {
      var callback_2818590699 = HEX3Aanonymous_2818590685;
      self_2818590612.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818579177(self_2818590612.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818590612.document.filename, callback_2818590699);
      }
      
      result_2818590615 = self_2818590612.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818590615;

}

function get_2818590760(self_2818590762) {
  var result_2818590763 = null;

    if (isNone_2818579185(self_2818590762)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590763 = self_2818590762["val"];

  return result_2818590763;

}

function isSome_2818590790(self_2818590792) {
  var result_2818590793 = false;

    result_2818590793 = self_2818590792.has;

  return result_2818590793;

}

function isNone_2818590815(self_2818590817) {
  var result_2818590818 = false;

    result_2818590818 = !(self_2818590817.has);

  return result_2818590818;

}

function get_2818590807(self_2818590809) {
  var result_2818590810 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818590815(self_2818590809)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590810 = self_2818590809.val;

  return result_2818590810;

}
async function gotoDefinitionAsync_2818590720(self_2818590721) {
  var result_2818590723 = null;

  BeforeRet: {
    var languageServer_2818590733 = (await getLanguageServer_2818590611(self_2818590721));
    if (isNone_2818579185(languageServer_2818590733)) {
    result_2818590723 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818579157(languageServer_2818590733)) {
    var definition_2818590785 = (await getDefinition_2919235651(get_2818590760(languageServer_2818590733), self_2818590721.document.filename, selection_2818572805(self_2818590721).Field1));
    if (isSome_2818590790(definition_2818590785)) {
    selectionHEX3D_2818572811(self_2818590721, toSelection_2449474032(get_2818590807(definition_2818590785).location));
    scrollToCursor_2818584038(self_2818590721, 0);
    }
    
    }
    
    result_2818590723 = undefined;
    break BeforeRet;
  };

  return result_2818590723;

}

function gotoDefinition_2818593070(self_2818593071) {
    var _ = gotoDefinitionAsync_2818590720(self_2818593071);

  
}

function gotoDefinitionJsWrapper_2818593066(self_2818593099) {
    gotoDefinition_2818593070(self_2818593099);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818593066(this));};

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function init_2818590863(s_2818590865, initialSize_2818590866) {
    var correctSizeHEX60gensym859_2818590868 = slotsNeeded_1828716594(chckRange(initialSize_2818590866, 0, 2147483647));
    s_2818590865.counter = 0;
    s_2818590865.data = new Array(chckRange(correctSizeHEX60gensym859_2818590868, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym859_2818590868, 0, 2147483647) ; ++i) { s_2818590865.data[i] = {Field0: 0, Field1: []}; }
  
}

function initHashSet_2818590851(initialSize_2818590853) {
  var result_2818590858 = [({data: [], counter: 0})];

    init_2818590863(result_2818590858[0], initialSize_2818590853);

  return result_2818590858[0];

}

function allCharsInSet_855639569(s_855639570, theSet_855639571) {
  var result_855639572 = false;

  BeforeRet: {
    Label1: {
      var c_855639573 = 0;
      var i_2818593205 = 0;
      var L_2818593206 = (s_855639570).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593205 < L_2818593206)) break Label3;
            c_855639573 = s_855639570[chckIndx(i_2818593205, 0, (s_855639570).length - 1)];
            if (!((theSet_855639571[c_855639573] != undefined))) {
            result_855639572 = false;
            break BeforeRet;
            }
            
            i_2818593205 = addInt(i_2818593205, 1);
            if (!(((s_855639570).length == L_2818593206))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_855639572 = true;
    break BeforeRet;
  };

  return result_855639572;

}

function nsuIsEmptyOrWhitespace(s_855640546) {
  var result_855640547 = false;

    result_855640547 = allCharsInSet_855639569(s_855640546, ConstSet58);

  return result_855640547;

}

function nsuIsAlphaAsciiChar(c_855638054) {
  var result_855638055 = false;

  BeforeRet: {
    result_855638055 = (ConstSet59[c_855638054] != undefined);
    break BeforeRet;
  };

  return result_855638055;

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_2818591075(t_2818591078, key_2818591079, hc_2818591080, hc_2818591080_Idx) {
  var result_2818591081 = 0;

  BeforeRet: {
    hc_2818591080[hc_2818591080_Idx] = hash_1325400491(key_2818591079);
    if ((hc_2818591080[hc_2818591080_Idx] == 0)) {
    hc_2818591080[hc_2818591080_Idx] = 314159265;
    }
    
    if (((t_2818591078.data).length == 0)) {
    result_2818591081 = -1;
    break BeforeRet;
    }
    
    var h_2818591148 = (hc_2818591080[hc_2818591080_Idx] & (t_2818591078.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field0)) break Label2;
          if (((t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field0 == hc_2818591080[hc_2818591080_Idx]) && eqStrings(t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field1, key_2818591079))) {
          result_2818591081 = h_2818591148;
          break BeforeRet;
          }
          
          h_2818591148 = nextTry_1828716586(h_2818591148, (t_2818591078.data).length - 1);
        }
    };
    result_2818591081 = subInt(-1, h_2818591148);
  };

  return result_2818591081;

}

function mustRehash_2818591393(t_2818591395) {
  var result_2818591396 = false;

    if (!((t_2818591395.counter < (t_2818591395.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818591396 = ((mulInt((t_2818591395.data).length, 2) < mulInt(t_2818591395.counter, 3)) || (subInt((t_2818591395.data).length, t_2818591395.counter) < 4));

  return result_2818591396;

}

function rawGetKnownHC_2818591918(t_2818591921, key_2818591922, hc_2818591923) {
  var result_2818591924 = 0;

  BeforeRet: {
    if (((t_2818591921.data).length == 0)) {
    result_2818591924 = -1;
    break BeforeRet;
    }
    
    var h_2818591991 = (hc_2818591923 & (t_2818591921.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field0)) break Label2;
          if (((t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field0 == hc_2818591923) && eqStrings(t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field1, key_2818591922))) {
          result_2818591924 = h_2818591991;
          break BeforeRet;
          }
          
          h_2818591991 = nextTry_1828716586(h_2818591991, (t_2818591921.data).length - 1);
        }
    };
    result_2818591924 = subInt(-1, h_2818591991);
  };

  return result_2818591924;

}

function rawInsert_2818592385(s_2818592387, data_2818592388, data_2818592388_Idx, key_2818592389, hc_2818592390, h_2818592391) {
    if (((data_2818592388[data_2818592388_Idx]).length == 0)) {
    var correctSizeHEX60gensym874_2818592456 = slotsNeeded_1828716594(64);
    s_2818592387.counter = 0;
    s_2818592387.data = new Array(chckRange(correctSizeHEX60gensym874_2818592456, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym874_2818592456, 0, 2147483647) ; ++i) { s_2818592387.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_2818592388[data_2818592388_Idx][chckIndx(h_2818592391, 0, (data_2818592388[data_2818592388_Idx]).length - 1)].Field1 = nimCopy(null, key_2818592389, NTI33554449);
    data_2818592388[data_2818592388_Idx][chckIndx(h_2818592391, 0, (data_2818592388[data_2818592388_Idx]).length - 1)].Field0 = hc_2818592390;

  
}

function enlarge_2818591602(s_2818591604) {
    var n_2818591606 = [];
    n_2818591606 = new Array(chckRange(mulInt((s_2818591604.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2818591604.data).length, 2), 0, 2147483647) ; ++i) { n_2818591606[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_2818591604.data; s_2818591604.data = n_2818591606; n_2818591606 = Temporary1;    Label2: {
      var i_2818591686 = 0;
      var colontmp__2818593210 = 0;
      colontmp__2818593210 = (n_2818591606).length - 1;
      var res_2818593211 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593211 <= colontmp__2818593210)) break Label4;
            i_2818591686 = res_2818593211;
            if (isFilled_1828716583(n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0)) {
            var j_2818592226 = subInt(-1, rawGetKnownHC_2818591918(s_2818591604, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field1, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0));
            rawInsert_2818592385(s_2818591604, s_2818591604, "data", n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field1, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0, j_2818592226);
            }
            
            res_2818593211 = addInt(res_2818593211, 1);
          }
      };
    };

  
}

function incl_2818590983(s_2818590985, key_2818590986) {
    if (((s_2818590985.data).length == 0)) {
    var correctSizeHEX60gensym865_2818591052 = slotsNeeded_1828716594(64);
    s_2818590985.counter = 0;
    s_2818590985.data = new Array(chckRange(correctSizeHEX60gensym865_2818591052, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym865_2818591052, 0, 2147483647) ; ++i) { s_2818590985.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_2818591067 = [0];
    var index_2818591392 = rawGet_2818591075(s_2818590985, key_2818590986, hc_2818591067, 0);
    if ((index_2818591392 < 0)) {
    if (mustRehash_2818591393(s_2818590985)) {
    enlarge_2818591602(s_2818590985);
    index_2818591392 = rawGetKnownHC_2818591918(s_2818590985, key_2818590986, hc_2818591067[0]);
    }
    
    rawInsert_2818592385(s_2818590985, s_2818590985, "data", key_2818590986, hc_2818591067[0], subInt(-1, index_2818591392));
    s_2818590985.counter = addInt(s_2818590985.counter, 1);
    }
    

  
}

function len_2818592717(s_2818592719) {
  var result_2818592720 = 0;

    result_2818592720 = s_2818592719.counter;

  return result_2818592720;

}

function getCompletionsFromContent_2818590848(self_2818590849) {
  var result_2818590850 = [];

    var s_2818590892 = [initHashSet_2818590851(64)];
    Label1: {
      var li_2818590926 = 0;
      var line_2818590927 = null;
      var i_2818593190 = 0;
      var L_2818593191 = (self_2818590849.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593190 < L_2818593191)) break Label3;
            li_2818590926 = i_2818593190;
            line_2818590927 = self_2818590849.lastRenderedLines[chckIndx(i_2818593190, 0, (self_2818590849.lastRenderedLines).length - 1)];
            Label4: {
              var i_2818590960 = 0;
              var part_2818590961 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_2818593186 = 0;
              var L_2818593187 = (line_2818590927.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2818593186 < L_2818593187)) break Label6;
                    i_2818590960 = i_2818593186;
                    part_2818590961 = nimCopy(part_2818590961, line_2818590927.parts[chckIndx(i_2818593186, 0, (line_2818590927.parts).length - 1)], NTI2818572422);
                    Label7: {
                      if (((50 < (part_2818590961.text).length) || nsuIsEmptyOrWhitespace(part_2818590961.text))) {
                      break Label7;
                      }
                      
                      var use_2818590962 = false;
                      Label8: {
                        var c_2818590963 = 0;
                        var i_2818593182 = 0;
                        var L_2818593183 = (part_2818590961.text).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_2818593182 < L_2818593183)) break Label10;
                              c_2818590963 = part_2818590961.text[chckIndx(i_2818593182, 0, (part_2818590961.text).length - 1)];
                              if (((((nsuIsAlphaAsciiChar(c_2818590963) || (c_2818590963 == 95)) || (c_2818590963 == 64)) || (c_2818590963 == 36)) || (c_2818590963 == 35))) {
                              use_2818590962 = true;
                              break Label8;
                              }
                              
                              i_2818593182 = addInt(i_2818593182, 1);
                              if (!(((part_2818590961.text).length == L_2818593183))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(use_2818590962)) {
                      break Label7;
                      }
                      
                      incl_2818590983(s_2818590892[0], part_2818590961.text);
                    };
                    i_2818593186 = addInt(i_2818593186, 1);
                    if (!(((line_2818590927.parts).length == L_2818593187))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_2818593190 = addInt(i_2818593190, 1);
            if (!(((self_2818590849.lastRenderedLines).length == L_2818593191))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var text_2818592952 = [];
      var length_2818593198 = len_2818592717(s_2818590892[0]);
      Label12: {
        var h_2818593200 = 0;
        var colontmp__2818593201 = 0;
        colontmp__2818593201 = (s_2818590892[0].data).length - 1;
        var res_2818593202 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_2818593202 <= colontmp__2818593201)) break Label14;
              h_2818593200 = res_2818593202;
              if (isFilled_1828716583(s_2818590892[0].data[chckIndx(h_2818593200, 0, (s_2818590892[0].data).length - 1)].Field0)) {
              text_2818592952 = s_2818590892[0].data[chckIndx(h_2818593200, 0, (s_2818590892[0].data).length - 1)].Field1;
              result_2818590850.push({name: nimCopy(null, text_2818592952, NTI33554449), scope: [100,111,99,117,109,101,110,116], location: {Field0: 0, Field1: 0}, filename: [], kind: 0, typ: [], doc: []});;
              if (!((len_2818592717(s_2818590892[0]) == length_2818593198))) {
              failedAssertImpl_268435515(makeNimstrLit("sets.nim(269, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              res_2818593202 = addInt(res_2818593202, 1);
            }
        };
      };
    };

  return result_2818590850;

}
async function getCompletionsAsync_2818586172(self_2818586173) {
  var result_2818592988 = null;

  BeforeRet: {
    if (self_2818586173.disableCompletions) {
    result_2818592988 = undefined;
    break BeforeRet;
    }
    
    var languageServer_2818592998 = (await getLanguageServer_2818590611(self_2818586173));
    if (isSome_2818579157(languageServer_2818592998)) {
    self_2818586173.completions = nimCopy(null, (await getCompletions_2919235661(get_2818590760(languageServer_2818592998), self_2818586173.document.languageId, self_2818586173.document.filename, selection_2818572805(self_2818586173).Field1)), NTI2919235662);
    }
    else {
      self_2818586173.completions = nimCopy(null, getCompletionsFromContent_2818590848(self_2818586173), NTI2818584215);
    }
    
    self_2818586173.selectedCompletion = clamp_1660945119(self_2818586173.selectedCompletion, 0, (self_2818586173.completions).length - 1);
    if (((self_2818586173.completions).length == 0)) {
    self_2818586173.showCompletions = false;
    }
    else {
      self_2818586173.showCompletions = true;
    }
    
    markDirty_2415919143(self_2818586173);
    result_2818592988 = undefined;
    break BeforeRet;
  };

  return result_2818592988;

}

function getCompletions_2818593134(self_2818593135) {
    var _ = getCompletionsAsync_2818586172(self_2818593135);

  
}

function getCompletionsJsWrapper_2818593130(self_2818593163) {
    getCompletions_2818593134(self_2818593163);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818593130(this));};

function hideCompletions_2818593220(self_2818593221) {
    self_2818593221.showCompletions = false;
    markDirty_2415919143(self_2818593221);

  
}

function hideCompletionsJsWrapper_2818593216(self_2818593249) {
    hideCompletions_2818593220(self_2818593249);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818593216(this));};

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function selectPrevCompletion_2818593270(self_2818593271) {
    if ((0 < (self_2818593271.completions).length)) {
    self_2818593271.selectedCompletion = clamp_1660945119(subInt(self_2818593271.selectedCompletion, 1), 0, subInt((self_2818593271.completions).length, 1));
    }
    else {
      self_2818593271.selectedCompletion = 0;
    }
    
    self_2818593271.scrollToCompletion = nimCopy(self_2818593271.scrollToCompletion, some_1191184367(self_2818593271.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593271);

  
}

function selectPrevCompletionJsWrapper_2818593266(self_2818593316) {
    selectPrevCompletion_2818593270(self_2818593316);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818593266(this));};

function selectNextCompletion_2818593337(self_2818593338) {
    if ((0 < (self_2818593338.completions).length)) {
    self_2818593338.selectedCompletion = clamp_1660945119(addInt(self_2818593338.selectedCompletion, 1), 0, subInt((self_2818593338.completions).length, 1));
    }
    else {
      self_2818593338.selectedCompletion = 0;
    }
    
    self_2818593338.scrollToCompletion = nimCopy(self_2818593338.scrollToCompletion, some_1191184367(self_2818593338.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593338);

  
}

function selectNextCompletionJsWrapper_2818593333(self_2818593383) {
    selectNextCompletion_2818593337(self_2818593383);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818593333(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818593583 = 0;
      var L_2818593584 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593583 < L_2818593584)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818593583, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818593583 = addInt(i_2818593583, 1);
            if (!(((x_1593835575).length == L_2818593584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2449473860(cursor_2449473861) {
  var result_2449473862 = [];

  BeforeRet: {
    result_2449473862 = nimCopy(null, (HEX24_369098760(cursor_2449473861.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2449473861.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473862;

}

function addQuoted_2818593470(s_2818593472, s_2818593472_Idx, x_2818593473) {
    s_2818593472[s_2818593472_Idx].push.apply(s_2818593472[s_2818593472_Idx], HEX24_2449473860(x_2818593473));;

  
}

function addQuoted_2818593499(s_2818593501, s_2818593501_Idx, x_2818593502) {
    s_2818593501[s_2818593501_Idx].push.apply(s_2818593501[s_2818593501_Idx], reprEnum(x_2818593502, NTI2919235627));;

  
}

function HEX24_2818593420(x_2818593422) {
  var result_2818593423 = [[]];

    result_2818593423[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym934_2818593434 = 0;
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [110,97,109,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.name);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [115,99,111,112,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.scope);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [108,111,99,97,116,105,111,110]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_2818593470(result_2818593423, 0, x_2818593422.location);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [102,105,108,101,110,97,109,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.filename);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [107,105,110,100]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_2818593499(result_2818593423, 0, x_2818593422.kind);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [116,121,112]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.typ);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [100,111,99]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.doc);
    result_2818593423[0].push.apply(result_2818593423[0], [41]);;

  return result_2818593423[0];

}

function formatValue_2818593415(result_2818593417, result_2818593417_Idx, value_2818593418, specifier_2818593419) {
    formatValue_721420459(result_2818593417, result_2818593417_Idx, HEX24_2818593420(value_2818593418), specifier_2818593419);

  
}

function applySelectedCompletion_2818593404(self_2818593405) {
  BeforeRet: {
    if (!(self_2818593405.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818593405.completions).length - 1 < self_2818593405.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818593409 = nimCopy(null, self_2818593405.completions[chckIndx(self_2818593405.selectedCompletion, 0, (self_2818593405.completions).length - 1)], NTI2919235630);
    var fmtRes_2818593414 = [mnewString(0)];
    fmtRes_2818593414[0].push.apply(fmtRes_2818593414[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818593415(fmtRes_2818593414, 0, com_2818593409, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818593414[0], NTI33554449)]);
    var cursor_2818593532 = nimCopy(null, selection_2818572805(self_2818593405).Field1, NTI2449473546);
    if ((cursor_2818593532.Field1 == 0)) {
    selectionsHEX3D_2818573083(self_2818593405, insert_2818579853(self_2818593405.document, [nimCopy(null, toSelection_2449474032(cursor_2818593532), NTI2449473548)], selections_2818572802(self_2818593405), com_2818593409.name, true, true, false));
    }
    else {
      var line_2818593533 = getLine_2818572666(self_2818593405.document, cursor_2818593532.Field0);
      var column_2818593534 = cursor_2818593532.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818593534)) break Label2;
            switch (line_2818593533[chckIndx(subInt(column_2818593534, 1), 0, (line_2818593533).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818593534 = subInt(column_2818593534, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573083(self_2818593405, edit_2818580070(self_2818593405.document, [nimCopy(null, {Field0: {Field0: cursor_2818593532.Field0, Field1: column_2818593534}, Field1: nimCopy(null, cursor_2818593532, NTI2449473546)}, NTI2818585703)], selections_2818572802(self_2818593405), com_2818593409.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818593400(self_2818593566) {
    applySelectedCompletion_2818593404(self_2818593566);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818593400(this));};

function handleHexChar_2046820364(c_2046820365) {
  var result_2046820366 = 0;

    switch (c_2046820365) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820366 = subInt(c_2046820365, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820366 = addInt(subInt(c_2046820365, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820366 = addInt(subInt(c_2046820365, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820366;

}

function hexbyte_2046820410(hex_2046820411) {
  var result_2046820412 = 0;

    result_2046820412 = handleHexChar_2046820364(hex_2046820411);

  return result_2046820412;

}

function hash_2046820393(x_2046820395) {
  var result_2046820396 = 0;

    result_2046820396 = hashWangYi1_1325400244(x_2046820395);

  return result_2046820396;

}

function hash_2046820389(oid_2046820390) {
  var result_2046820391 = 0;

    var h_2046820392 = 0;
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.time));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.fuzz));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.count));
    result_2046820391 = HEX21HEX24_1325400082(h_2046820392);

  return result_2046820391;

}

function parseOid_2046820433(str_2046820434) {
  var result_2046820435 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820434).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820435.time = 0;
    Label1: {
      var i_2046820440 = 0;
      var i_2986344542 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2986344542 < 4)) break Label3;
            i_2046820440 = i_2986344542;
            var hexValue_2046820445 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, i_2046820440), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, i_2046820440), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.time = (result_2046820435.time | (hexValue_2046820445 << mulInt(i_2046820440, 8)));
            i_2986344542 = addInt(i_2986344542, 1);
          }
      };
    };
    result_2046820435.fuzz = 0;
    Label4: {
      var i_2046820454 = 0;
      var i_2986344545 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2986344545 < 4)) break Label6;
            i_2046820454 = i_2986344545;
            var hexValue_2046820459 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820454, 4)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820454, 4)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.fuzz = (result_2046820435.fuzz | (hexValue_2046820459 << mulInt(i_2046820454, 8)));
            i_2986344545 = addInt(i_2986344545, 1);
          }
      };
    };
    result_2046820435.count = 0;
    Label7: {
      var i_2046820468 = 0;
      var i_2986344548 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2986344548 < 4)) break Label9;
            i_2046820468 = i_2986344548;
            var hexValue_2046820473 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820468, 8)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820468, 8)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.count = (result_2046820435.count | (hexValue_2046820473 << mulInt(i_2046820468, 8)));
            i_2986344548 = addInt(i_2986344548, 1);
          }
      };
    };
    result_2046820435.padding = hash_2046820389(result_2046820435);
  };

  return result_2046820435;

}

function parseId_2046820640(s_2046820641) {
  var result_2046820642 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820641).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820641, [39]);
    result_2046820642 = nimCopy(result_2046820642, idNone_2046820633(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820642 = nimCopy(result_2046820642, parseOid_2046820433(s_2046820641), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820642;

}
var IdPrint_2986344450 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2986344451 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2986344452 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2986344453 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2986344454 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2986344455 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2986344456 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2986344457 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2986344458 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2986344459 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2986344460 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2986344461 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2986344462 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2986344463 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2986344464 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2986344465 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2986344466 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2986344467 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2986344468 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2986344469 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2986344470 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2986344471 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2986344472 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var IdType_2986344473 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var IdBaseLanguage_2986344474 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var IdFunctionType_2986344475 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var IdFunctionTypeReturnType_2986344476 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var IdFunctionTypeParameterTypes_2986344477 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var IdPrintArguments_2986344478 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var IdBuildArguments_2986344479 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var IdUnaryExpression_2986344480 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var IdUnaryExpressionChild_2986344481 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2986344482 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2986344483 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2986344484 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2986344485 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2986344486 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2986344487 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2986344488 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2986344489 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2986344490 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2986344491 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var IdEmptyLine_2986344492 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var IdBlockChildren_2986344493 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var IdBlock_2986344494 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var IdINamedName_2986344495 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var IdINamed_2986344496 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var IdAssignmentValue_2986344497 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var IdAssignmentTarget_2986344498 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var IdAssignment_2986344499 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var IdFunctionDefinitionBody_2986344500 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var IdFunctionDefinitionReturnType_2986344501 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var IdFunctionDefinitionParameters_2986344502 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var IdFunctionDefinition_2986344503 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var IdParameterDeclValue_2986344504 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var IdParameterDeclType_2986344505 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var IdParameterDecl_2986344506 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var IdWhileExpressionBody_2986344507 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var IdWhileExpressionCondition_2986344508 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var IdWhileExpression_2986344509 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var IdIfExpressionElseCase_2986344510 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var IdIfExpressionThenCase_2986344511 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var IdIfExpressionCondition_2986344512 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var IdIfExpression_2986344513 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var IdCallArguments_2986344514 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var IdCallFunction_2986344515 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var IdCall_2986344516 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var IdNodeListChildren_2986344517 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var IdNodeList_2986344518 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var IdVarDeclValue_2986344519 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var IdVarDeclType_2986344520 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var IdVarDecl_2986344521 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var IdLetDeclValue_2986344522 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var IdLetDeclType_2986344523 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var IdLetDecl_2986344524 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var IdConstDeclValue_2986344525 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var IdConstDeclType_2986344526 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var IdConstDecl_2986344527 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var IdEmpty_2986344528 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var IdNodeReferenceTarget_2986344529 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var IdNodeReference_2986344530 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var IdBinaryExpressionLeft_2986344531 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var IdBinaryExpressionRight_2986344532 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var IdBinaryExpression_2986344533 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var IdExpression_2986344534 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var IdBoolLiteralValue_2986344535 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var IdBoolLiteral_2986344536 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var IdStringLiteralValue_2986344537 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var IdStringLiteral_2986344538 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var IdIntegerLiteralValue_2986344539 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var IdIntegerLiteral_2986344540 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);

function getIdAstNodeJs(node_3003123792) {
  var result_3003123793 = null;

    return toCString(node_3003123792.id);

  return result_3003123793;

}
var currentIndent_3036676112 = [0];

function getIdItemIdJs(item_3036676280) {
  var result_3036676281 = null;

    return '' + toCString(item_3036676280.Field0) + item_3036676280.Field1;

  return result_3036676281;

}

function getIdDependencyJs(dep_3036676283) {
  var result_3036676284 = null;

    return getIdItemIdJs(dep_3036676283.Field0) + dep_3036676283.Field1;

  return result_3036676284;

}
var dependencyGlobalRevision_3036676217 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);

function getIdFunctionExecutionContextJs(fec_3087010823) {
  var result_3087010824 = null;

    return toCString(fec_3087010823.id);

  return result_3087010824;

}

function getIdSymbolJs(sym_3087010826) {
  var result_3087010827 = null;

    return toCString(sym_3087010826.id);

  return result_3087010827;

}

function getIdNodeLayoutInputJs(input_3087010829) {
  var result_3087010830 = null;

    return toCString(input_3087010829.id);

  return result_3087010830;

}
var config_3137339605 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function pop_1291849132(s_1291849134, s_1291849134_Idx) {
  var result_1291849135 = null;

    var L_1291849139 = subInt((s_1291849134[s_1291849134_Idx]).length, 1);
    result_1291849135 = s_1291849134[s_1291849134_Idx][chckIndx(L_1291849139, 0, (s_1291849134[s_1291849134_Idx]).length - 1)];
    if (s_1291849134[s_1291849134_Idx].length < chckRange(L_1291849139, 0, 2147483647)) { for (var i = s_1291849134[s_1291849134_Idx].length ; i < chckRange(L_1291849139, 0, 2147483647) ; ++i) s_1291849134[s_1291849134_Idx].push(null); }
               else { s_1291849134[s_1291849134_Idx].length = chckRange(L_1291849139, 0, 2147483647); };

  return result_1291849135;

}

function popPopup_1291849115(self_1291849116, popup_1291849117) {
    if (((0 < (self_1291849116.popups).length) && (self_1291849116.popups[chckIndx((self_1291849116.popups).length - 1, 0, (self_1291849116.popups).length - 1)] == popup_1291849117))) {
    var _ = pop_1291849132(self_1291849116, "popups");
    }
    
    requestRender_2768240746(self_1291849116.platform, false);

  
}

function markDirty_2483027989(self_2483027990) {
    if (!(self_2483027990.mDirty)) {
    invoke_2415919167(self_2483027990.onMarkedDirty);
    }
    
    self_2483027990.mDirty = true;

  
}

function accept_3187671507(self_3187671508) {
    if ((!((self_3187671508.handleItemConfirmed == null)) && (self_3187671508.selected < (self_3187671508.completions).length))) {
    self_3187671508.handleItemConfirmed(self_3187671508.completions[chckIndx(self_3187671508.selected, 0, (self_3187671508.completions).length - 1)]);
    }
    
    popPopup_1291849115(self_3187671508.editor, self_3187671508);
    markDirty_2483027989(self_3187671508);

  
}

function acceptJsWrapper_3187671503(self_3187671567) {
    accept_3187671507(self_3187671567);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3187671503(this));};

function cancel_3187671609(self_3187671610) {
    if (!((self_3187671610.handleCanceled == null))) {
    self_3187671610.handleCanceled();
    }
    
    popPopup_1291849115(self_3187671610.editor, self_3187671610);
    markDirty_2483027989(self_3187671610);

  
}

function cancelJsWrapper_3187671605(self_3187671644) {
    cancel_3187671609(self_3187671644);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3187671605(this));};

function prev_3187671665(self_3187671666) {
    var Temporary1;

    if (((self_3187671666.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3187671666.selected, (self_3187671666.completions).length), 1), (self_3187671666.completions).length);
    }
    
    self_3187671666.selected = Temporary1;
    if (((0 < (self_3187671666.completions).length) && !((self_3187671666.handleItemSelected == null)))) {
    self_3187671666.handleItemSelected(self_3187671666.completions[chckIndx(self_3187671666.selected, 0, (self_3187671666.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671666);

  
}

function prevJsWrapper_3187671661(self_3187671712) {
    prev_3187671665(self_3187671712);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3187671661(this));};

function next_3187671733(self_3187671734) {
    var Temporary1;

    if (((self_3187671734.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3187671734.selected, 1), (self_3187671734.completions).length);
    }
    
    self_3187671734.selected = Temporary1;
    if (((0 < (self_3187671734.completions).length) && !((self_3187671734.handleItemSelected == null)))) {
    self_3187671734.handleItemSelected(self_3187671734.completions[chckIndx(self_3187671734.selected, 0, (self_3187671734.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671734);

  
}

function nextJsWrapper_3187671729(self_3187671777) {
    next_3187671733(self_3187671777);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3187671729(this));};

function rawGet_3036676563(t_3036676566, key_3036676567, hc_3036676568, hc_3036676568_Idx) {
  var result_3036676569 = 0;

  BeforeRet: {
    hc_3036676568[hc_3036676568_Idx] = hash_1325400236(key_3036676567);
    if ((hc_3036676568[hc_3036676568_Idx] == 0)) {
    hc_3036676568[hc_3036676568_Idx] = 314159265;
    }
    
    if (((t_3036676566.data).length == 0)) {
    result_3036676569 = -1;
    break BeforeRet;
    }
    
    var h_3036676657 = (hc_3036676568[hc_3036676568_Idx] & (t_3036676566.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0)) break Label2;
          if (((t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0 == hc_3036676568[hc_3036676568_Idx]) && (t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field1 == key_3036676567))) {
          result_3036676569 = h_3036676657;
          break BeforeRet;
          }
          
          h_3036676657 = nextTry_1308622883(h_3036676657, (t_3036676566.data).length - 1);
        }
    };
    result_3036676569 = subInt(-1, h_3036676657);
  };

  return result_3036676569;

}

function mustRehash_3036677087(t_3036677089) {
  var result_3036677090 = false;

    if (!((t_3036677089.counter < (t_3036677089.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036677090 = ((mulInt((t_3036677089.data).length, 2) < mulInt(t_3036677089.counter, 3)) || (subInt((t_3036677089.data).length, t_3036677089.counter) < 4));

  return result_3036677090;

}

function rawInsert_3036677780(t_3036677784, data_3036677785, data_3036677785_Idx, key_3036677786, val_3036677787, hc_3036677788, h_3036677789) {
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field1 = key_3036677786;
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field2 = nimCopy(null, val_3036677787, NTI33554449);
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field0 = hc_3036677788;

  
}

function enlarge_3036677344(t_3036677347) {
    var n_3036677350 = [];
    n_3036677350 = new Array(chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647) ; ++i) { n_3036677350[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3036677347.data; t_3036677347.data = n_3036677350; n_3036677350 = Temporary1;    Label2: {
      var i_3036677448 = 0;
      var colontmp__2969567311 = 0;
      colontmp__2969567311 = (n_3036677350).length - 1;
      var res_2969567312 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567312 <= colontmp__2969567311)) break Label4;
            i_3036677448 = res_2969567312;
            var eh_3036677529 = n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036677529)) {
            var j_3036677533 = (eh_3036677529 & (t_3036677347.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036677347.data[chckIndx(j_3036677533, 0, (t_3036677347.data).length - 1)].Field0)) break Label6;
                  j_3036677533 = nextTry_1308622883(j_3036677533, (t_3036677347.data).length - 1);
                }
            };
            rawInsert_3036677780(t_3036677347, t_3036677347, "data", n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field1, n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field2, eh_3036677529, j_3036677533);
            }
            
            res_2969567312 = addInt(res_2969567312, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036678030(t_3036678033, key_3036678034, hc_3036678035) {
  var result_3036678036 = 0;

  BeforeRet: {
    if (((t_3036678033.data).length == 0)) {
    result_3036678036 = -1;
    break BeforeRet;
    }
    
    var h_3036678121 = (hc_3036678035 & (t_3036678033.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0)) break Label2;
          if (((t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0 == hc_3036678035) && (t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field1 == key_3036678034))) {
          result_3036678036 = h_3036678121;
          break BeforeRet;
          }
          
          h_3036678121 = nextTry_1308622883(h_3036678121, (t_3036678033.data).length - 1);
        }
    };
    result_3036678036 = subInt(-1, h_3036678121);
  };

  return result_3036678036;

}

function HEX5BHEX5DHEX3D_3036676468(t_3036676471, key_3036676472, val_3036676473) {
    if (((t_3036676471.data).length == 0)) {
    var correctSizeHEX60gensym3_3036676557 = slotsNeeded_1308622891(32);
    t_3036676471.counter = 0;
    t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3036676562 = [0];
    var index_3036676919 = rawGet_3036676563(t_3036676471, key_3036676472, hc_3036676562, 0);
    if ((0 <= index_3036676919)) {
    t_3036676471.data[chckIndx(index_3036676919, 0, (t_3036676471.data).length - 1)].Field2 = nimCopy(null, val_3036676473, NTI33554449);
    }
    else {
      if (((t_3036676471.data).length == 0)) {
      var correctSizeHEX60gensym8_3036677082 = slotsNeeded_1308622891(32);
      t_3036676471.counter = 0;
      t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3036677087(t_3036676471)) {
      enlarge_3036677344(t_3036676471);
      index_3036676919 = rawGetKnownHC_3036678030(t_3036676471, key_3036676472, hc_3036676562[0]);
      }
      
      index_3036676919 = subInt(-1, index_3036676919);
      rawInsert_3036677780(t_3036676471, t_3036676471, "data", key_3036676472, val_3036676473, hc_3036676562[0], index_3036676919);
      t_3036676471.counter = addInt(t_3036676471.counter, 1);
    }
    

  
}

function newDependencyGraph_3036676400() {
  var result_3036676401 = null;

    result_3036676401 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3036676401.revision = 0;
    HEX5BHEX5DHEX3D_3036676468(result_3036676401.queryNames, -1, []);
    result_3036676401.verified = (new Map());
    result_3036676401.changed = (new Map());
    result_3036676401.fingerprints = (new Map());
    result_3036676401.dependencies = (new Map());

  return result_3036676401;

}

function mapKeyJs_3019899588(key_3019899590) {
  var result_3019899591 = null;

    let temp = key_3019899590;
    let newId = getIdItemIdJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899591;

}

function contains_3019899577(t_3019899580, key_3019899581) {
  var result_3019899582 = false;

    result_3019899582 = t_3019899580.has(mapKeyJs_3019899588(key_3019899581));

  return result_3019899582;

}

function HEX24_2046820617(id_2046820618) {
  var result_2046820619 = [];

  BeforeRet: {
    result_2046820619 = nimCopy(null, HEX24_2046820478(id_2046820618), NTI33554449);
    break BeforeRet;
  };

  return result_2046820619;

}

function formatValue_3036676344(result_3036676346, result_3036676346_Idx, value_3036676347, specifier_3036676348) {
    formatValue_721420459(result_3036676346, result_3036676346_Idx, HEX24_2046820617(value_3036676347), specifier_3036676348);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2701131953(n_2701131955, radix_2701131956, spec_2701131957) {
    var Temporary1;

  var result_2701131958 = [];

    var n_2701131961 = n_2701131955;
    var negative_2701131962 = (n_2701131961 < 0);
    if (negative_2701131962) {
    Temporary1 = ((~(n_2701131961) + 1) );
    }
    else {
    Temporary1 = n_2701131961;
    }
    
    var v_2701131963 = Temporary1;
    var xx_2701131964 = [];
    if (spec_2701131957.alternateForm) {
    switch (spec_2701131957.typ) {
    case 88:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2701131964 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2701131964 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2701131963 == 0)) {
    result_2701131958 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2701131963)) break Label3;
            var d_2701131965 = (v_2701131963 % radix_2701131956);
            v_2701131963 = Math.trunc(((v_2701131963 / radix_2701131956) ));
            result_2701131958.push.apply(result_2701131958, mkDigit_721420293(chckRange(d_2701131965, -2147483648, 2147483647), spec_2701131957.typ));;
          }
      };
      Label4: {
        var idx_2701131970 = 0;
        var colontmp__2969567317 = 0;
        colontmp__2969567317 = divInt((result_2701131958).length, 2);
        var i_2969567318 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567318 < colontmp__2969567317)) break Label6;
              idx_2701131970 = i_2969567318;
              var Temporary7 = result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)] = result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)] = Temporary7;              i_2969567318 = addInt(i_2969567318, 1);
            }
        };
      };
    }
    
    if (spec_2701131957.padWithZero) {
    var sign_2701131975 = (negative_2701131962 || !((spec_2701131957.sign == 45)));
    var toFill_2701131979 = subInt(subInt(subInt(spec_2701131957.minimumWidth, (result_2701131958).length), (xx_2701131964).length), (sign_2701131975 ? 1 : 0));
    if ((0 < toFill_2701131979)) {
    result_2701131958 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2701131979, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
    }
    
    }
    
    if (negative_2701131962) {
    result_2701131958 = nimCopy(null, ([45] || []).concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
    if (!((spec_2701131957.sign == 45))) {
    result_2701131958 = nimCopy(null, [spec_2701131957.sign].concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, (xx_2701131964 || []).concat(result_2701131958 || []), NTI33554449);
    }
    }
    if ((spec_2701131957.align == 60)) {
    Label8: {
      var i_2701131984 = 0;
      var colontmp__2969567321 = 0;
      colontmp__2969567321 = (result_2701131958).length;
      var i_2969567322 = colontmp__2969567321;
      Label9: {
          Label10: while (true) {
          if (!(i_2969567322 < spec_2701131957.minimumWidth)) break Label10;
            i_2701131984 = i_2969567322;
            addChar(result_2701131958, spec_2701131957.fill);;
            i_2969567322 = addInt(i_2969567322, 1);
          }
      };
    };
    }
    else {
      var toFill_2701131985 = subInt(spec_2701131957.minimumWidth, (result_2701131958).length);
      if ((spec_2701131957.align == 94)) {
      var half_2701131986 = divInt(toFill_2701131985, 2);
      result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(half_2701131986, 0, 2147483647)) || []).concat(result_2701131958 || [],nsuRepeatChar(spec_2701131957.fill, chckRange(subInt(toFill_2701131985, half_2701131986), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2701131985)) {
        result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(toFill_2701131985, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2701131958;

}

function formatValue_2701131945(result_2701131947, result_2701131947_Idx, value_2701131948, specifier_2701131949) {
  BeforeRet: {
    if (((specifier_2701131949).length == 0)) {
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], HEX24_369098760(value_2701131948));;
    break BeforeRet;
    }
    
    var spec_2701131950 = parseStandardFormatSpecifier_721420346(specifier_2701131949, 0, false);
    var radix_2701131951 = 10;
    switch (spec_2701131950.typ) {
    case 120:
    case 88:
      radix_2701131951 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2701131951 = 2;
      break;
    case 111:
      radix_2701131951 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2701131950.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], formatInt_2701131953(value_2701131948, radix_2701131951, spec_2701131950));;
  };

  
}

function HEX24_3036676336(item_3036676337) {
  var result_3036676338 = [];

  BeforeRet: {
    var fmtRes_3036676343 = [mnewString(0)];
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [40]);;
    formatValue_3036676344(fmtRes_3036676343, 0, item_3036676337.Field0, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [44,32]);;
    formatValue_2701131945(fmtRes_3036676343, 0, item_3036676337.Field1, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [41]);;
    result_3036676338 = nimCopy(null, fmtRes_3036676343[0], NTI33554449);
    break BeforeRet;
  };

  return result_3036676338;

}

function HEX5BHEX5D_3019899687(t_3019899690, key_3019899691) {
  var result_3019899692 = null;

    result_3019899692 = t_3019899690.get(mapKeyJs_3019899588(key_3019899691));

  return result_3019899692;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2969567352 = 0;
      colontmp__2969567352 = n_855639143;
      var res_2969567353 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567353 <= colontmp__2969567352)) break Label3;
            i_855639149 = res_2969567353;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2969567353 = addInt(res_2969567353, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3036676113(s_3036676114, n_3036676115) {
  var result_3036676116 = [];

    result_3036676116 = nimCopy(null, nsuRepeatStr(s_3036676114, n_3036676115), NTI33554449);

  return result_3036676116;

}

function symbolName_3003123674(a_3003123676) {
  var result_3003123677 = [];

    result_3003123677 = nimCopy(null, names_3003123684[chckIndx(subInt(a_3003123676, 0), 0, (names_3003123684).length - 1)], NTI33554449);

  return result_3003123677;

}

function HEX3DHEX3D_2046820385(oid1_2046820386, oid2_2046820387) {
  var result_2046820388 = false;

    result_2046820388 = (((oid1_2046820386.time == oid2_2046820387.time) && (oid1_2046820386.fuzz == oid2_2046820387.fuzz)) && (oid1_2046820386.count == oid2_2046820387.count));

  return result_2046820388;

}

function HEX3DHEX3D_2046820626(idA_2046820627, idB_2046820628) {
  var result_2046820629 = false;

  BeforeRet: {
    result_2046820629 = HEX3DHEX3D_2046820385(idA_2046820627, idB_2046820628);
    break BeforeRet;
  };

  return result_2046820629;

}

function len_3003121752(node_3003121753) {
  var result_3003121754 = 0;

  BeforeRet: {
    result_3003121754 = (node_3003121753.children).length;
    break BeforeRet;
  };

  return result_3003121754;

}

function collectionToString_3003123772(x_3003123774, prefix_3003123775, separator_3003123776, suffix_3003123777) {
  var result_3003123778 = [[]];

    result_3003123778[0] = nimCopy(null, prefix_3003123775, NTI33554449);
    var firstElement_3003123779 = true;
    Label1: {
      var value_3003123783 = 0;
      var i_2969567357 = 0;
      var L_2969567358 = (x_3003123774).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567357 < L_2969567358)) break Label3;
            value_3003123783 = x_3003123774[i_2969567357];
            if (firstElement_3003123779) {
            firstElement_3003123779 = false;
            }
            else {
            result_3003123778[0].push.apply(result_3003123778[0], separator_3003123776);;
            }
            
            addQuoted_855639425(result_3003123778, 0, value_3003123783);
            i_2969567357 += 1;
            if (!(((x_3003123774).length == L_2969567358))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003123778[0].push.apply(result_3003123778[0], suffix_3003123777);;

  return result_3003123778[0];

}

function HEX24_3003123768(x_3003123770) {
  var result_3003123771 = [];

    result_3003123771 = nimCopy(null, collectionToString_3003123772(x_3003123770, [64,91], [44,32], [93]), NTI33554449);

  return result_3003123771;

}

function find_3003121779(a_3003121782, item_3003121783) {
  var result_3003121784 = 0;

  BeforeRet: {
    result_3003121784 = 0;
    Label1: {
      var i_3003121806 = null;
      var i_2969567362 = 0;
      var L_2969567363 = (a_3003121782).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567362 < L_2969567363)) break Label3;
            i_3003121806 = a_3003121782[chckIndx(i_2969567362, 0, (a_3003121782).length - 1)];
            if ((i_3003121806 == item_3003121783)) {
            break BeforeRet;
            }
            
            result_3003121784 = addInt(result_3003121784, 1);
            i_2969567362 = addInt(i_2969567362, 1);
            if (!(((a_3003121782).length == L_2969567363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003121784 = -1;
  };

  return result_3003121784;

}

function index_3003121772(node_3003121773) {
  var result_3003121774 = 0;

  BeforeRet: {
    if ((node_3003121773.parent == null)) {
    result_3003121774 = -1;
    break BeforeRet;
    }
    
    result_3003121774 = find_3003121779(node_3003121773.parent.children, node_3003121773);
    break BeforeRet;
  };

  return result_3003121774;

}

function reverse_3003123641(a_3003123643, first_3003123644, last_3003123645) {
    var x_3003123646 = first_3003123644;
    var y_3003123647 = last_3003123645;
    Label1: {
        Label2: while (true) {
        if (!(x_3003123646 < y_3003123647)) break Label2;
          var Temporary3 = a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)] = a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)] = Temporary3;          y_3003123647 = subInt(y_3003123647, 1);
          x_3003123646 = addInt(x_3003123646, 1);
        }
    };

  
}

function reverse_3003123635(a_3003123637) {
    reverse_3003123641(a_3003123637, 0, chckRange(nimMax(0, (a_3003123637).length - 1), 0, 2147483647));

  
}

function path_3003123619(node_3003123620) {
  var result_3003123621 = [];

    result_3003123621 = nimCopy(null, [], NTI3003122753);
    var node_3003123626 = node_3003123620;
    Label1: {
        Label2: while (true) {
        if (!!((node_3003123626.parent == null))) break Label2;
          result_3003123621.push(index_3003121772(node_3003123626));;
          node_3003123626 = node_3003123626.parent;
        }
    };
    reverse_3003123635(result_3003123621);

  return result_3003123621;

}

function HEX24_3003123671(node_3003123672) {
  var result_3003123673 = [];

    result_3003123673 = nimCopy(null, (symbolName_3003123674(node_3003123672.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820626(node_3003123672.id, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_2046820617(node_3003123672.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820626(node_3003123672.reff, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, ([114,101,102,102,58,32] || []).concat(HEX24_2046820617(node_3003123672.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_3003123672.text).length)) {
    result_3003123673.push.apply(result_3003123673, ([39] || []).concat(node_3003123672.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_3003121752(node_3003123672))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_369098760(len_3003121752(node_3003123672)) || []).concat([44,32] || []));;
    }
    
    result_3003123673.push.apply(result_3003123673, HEX24_3003123768(path_3003123619(node_3003123672)));;
    result_3003123673.push.apply(result_3003123673, [41]);;

  return result_3003123673;

}

function getTypeKey_3019913206(ctxHEX60gensym95_3019913207, itemIdHEX60gensym95_3019913208) {
  var result_3019913209 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567366 = nimCopy(null, itemIdHEX60gensym95_3019913208, NTI3036676201);
    var colontmp__2969567367 = 0;
    result_3019913209 = nimCopy(result_3019913209, {Field0: nimCopy(null, colontmp__2969567366, NTI3036676201), Field1: colontmp__2969567367}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019913209;

}

function bigEndian32_2046820550(b_2046820551) {
  var result_2046820552 = 0;

    result_2046820552 = (((((b_2046820551 & 255) << 24) | ((b_2046820551 & 65280) << 8)) | ((b_2046820551 & 16711680) >> 8)) | (b_2046820551 >> 24));

  return result_2046820552;

}

function genOid_2046820580() {
  var result_2046820581 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820584 = Date.now();
    var iHEX60gensym1_2046820585 = 0;
    incr_2046820531[0] = addInt(incr_2046820531[0], 1);
    iHEX60gensym1_2046820585 = ((incr_2046820531[0]) | 0);
    result_2046820581.time = bigEndian32_2046820550(timeHEX60gensym1_2046820584);
    result_2046820581.fuzz = fuzz_2046820536;
    result_2046820581.count = bigEndian32_2046820550(iHEX60gensym1_2046820585);
    result_2046820581.padding = hash_2046820389(result_2046820581);

  return result_2046820581;

}

function newId_2046820597() {
  var result_2046820598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820598 = nimCopy(result_2046820598, genOid_2046820580(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820598;

}

function getItem_3019906357(selfHEX60gensym80_3019906358) {
  var result_3019906359 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)) {
    selfHEX60gensym80_3019906358.id = nimCopy(selfHEX60gensym80_3019906358.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,48,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567368 = nimCopy(null, selfHEX60gensym80_3019906358.id, NTI2046820355);
    var colontmp__2969567369 = 0;
    result_3019906359 = nimCopy(result_3019906359, {Field0: nimCopy(null, colontmp__2969567368, NTI2046820355), Field1: colontmp__2969567369}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906359;

}

function hash_2046820630(id_2046820631) {
  var result_2046820632 = 0;

  BeforeRet: {
    result_2046820632 = id_2046820631.padding;
    break BeforeRet;
  };

  return result_2046820632;

}

function hash_3019908340(x_3019908342) {
  var result_3019908343 = 0;

    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_2046820630(x_3019908342["Field0"]));
    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_1325400236(x_3019908342["Field1"]));
    result_3019908343 = HEX21HEX24_1325400082(result_3019908343);

  return result_3019908343;

}

function hash_3019908332(x_3019908334) {
  var result_3019908335 = 0;

    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_3019908340(x_3019908334["Field0"]));
    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_1325400236(x_3019908334["Field1"]));
    result_3019908335 = HEX21HEX24_1325400082(result_3019908335);

  return result_3019908335;

}

function HEX3DHEX3D_3019908690(x_3019908692, y_3019908693) {
  var result_3019908694 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820626(x_3019908692["Field0"], y_3019908693["Field0"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908692["Field1"] == y_3019908693["Field1"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    result_3019908694 = true;
    break BeforeRet;
  };

  return result_3019908694;

}

function HEX3DHEX3D_3019908680(x_3019908682, y_3019908683) {
  var result_3019908684 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019908690(x_3019908682["Field0"], y_3019908683["Field0"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908682["Field1"] == y_3019908683["Field1"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    result_3019908684 = true;
    break BeforeRet;
  };

  return result_3019908684;

}

function rawGet_3019940162(t_3019940165, key_3019940166, hc_3019940167, hc_3019940167_Idx) {
  var result_3019940168 = 0;

  BeforeRet: {
    hc_3019940167[hc_3019940167_Idx] = hash_3019908332(key_3019940166);
    if ((hc_3019940167[hc_3019940167_Idx] == 0)) {
    hc_3019940167[hc_3019940167_Idx] = 314159265;
    }
    
    if (((t_3019940165.data).length == 0)) {
    result_3019940168 = -1;
    break BeforeRet;
    }
    
    var h_3019940257 = (hc_3019940167[hc_3019940167_Idx] & (t_3019940165.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0)) break Label2;
          if (((t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0 == hc_3019940167[hc_3019940167_Idx]) && HEX3DHEX3D_3019908680(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field1, key_3019940166))) {
          result_3019940168 = h_3019940257;
          break BeforeRet;
          }
          
          h_3019940257 = nextTry_1308622883(h_3019940257, (t_3019940165.data).length - 1);
        }
    };
    result_3019940168 = subInt(-1, h_3019940257);
  };

  return result_3019940168;

}

function hasKey_3019940155(t_3019940158, key_3019940159) {
  var result_3019940160 = false;

    var hc_3019940161 = [0];
    result_3019940160 = (0 <= rawGet_3019940162(t_3019940158, key_3019940159, hc_3019940161, 0));

  return result_3019940160;

}

function contains_3019940149(t_3019940152, key_3019940153) {
  var result_3019940154 = false;

  BeforeRet: {
    result_3019940154 = hasKey_3019940155(t_3019940152, key_3019940153);
    break BeforeRet;
  };

  return result_3019940154;

}

function addQuoted_3019911830(s_3019911832, s_3019911832_Idx, x_3019911833) {
    s_3019911832[s_3019911832_Idx].push.apply(s_3019911832[s_3019911832_Idx], HEX24_3036676336(x_3019911833));;

  
}

function HEX24_3019911804(x_3019911806) {
  var result_3019911807 = [[]];

    result_3019911807[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym236_3019911818 = 0;
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [105,116,101,109]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_3019911830(result_3019911807, 0, x_3019911806["Field0"]);
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [117,112,100,97,116,101]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_855639425(result_3019911807, 0, x_3019911806["Field1"]);
    result_3019911807[0].push.apply(result_3019911807[0], [41]);;

  return result_3019911807[0];

}

function raiseKeyError_3019940688(key_3019940690) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019911804(key_3019940690) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940594(t_3019940597, key_3019940598) {
  var result_3019940599 = null;
  var result_3019940599_Idx = 0;

    var hcHEX60gensym22_3019940600 = [0];
    var indexHEX60gensym22_3019940607 = rawGet_3019940162(t_3019940597, key_3019940598, hcHEX60gensym22_3019940600, 0);
    if ((0 <= indexHEX60gensym22_3019940607)) {
    result_3019940599 = t_3019940597.data[chckIndx(indexHEX60gensym22_3019940607, 0, (t_3019940597.data).length - 1)]; result_3019940599_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019940598);
    }
    

  return [result_3019940599, result_3019940599_Idx];

}

function rawGet_3019941324(t_3019941327, key_3019941328, hc_3019941329, hc_3019941329_Idx) {
  var result_3019941330 = 0;

  BeforeRet: {
    hc_3019941329[hc_3019941329_Idx] = hash_3019908332(key_3019941328);
    if ((hc_3019941329[hc_3019941329_Idx] == 0)) {
    hc_3019941329[hc_3019941329_Idx] = 314159265;
    }
    
    if (((t_3019941327.data).length == 0)) {
    result_3019941330 = -1;
    break BeforeRet;
    }
    
    var h_3019941419 = (hc_3019941329[hc_3019941329_Idx] & (t_3019941327.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0)) break Label2;
          if (((t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0 == hc_3019941329[hc_3019941329_Idx]) && HEX3DHEX3D_3019908680(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field1, key_3019941328))) {
          result_3019941330 = h_3019941419;
          break BeforeRet;
          }
          
          h_3019941419 = nextTry_1308622883(h_3019941419, (t_3019941327.data).length - 1);
        }
    };
    result_3019941330 = subInt(-1, h_3019941419);
  };

  return result_3019941330;

}

function del_3019941318(t_3019941321, key_3019941322) {
    var hc_3019941323 = [0];
    var i_3019941685 = rawGet_3019941324(t_3019941321, key_3019941322, hc_3019941323, 0);
    var mskHEX60gensym36_3019941689 = (t_3019941321.data).length - 1;
    if ((0 <= i_3019941685)) {
    t_3019941321.counter = subInt(t_3019941321.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019941696 = i_3019941685;
            var rHEX60gensym36_3019941697 = jHEX60gensym36_3019941696;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 = 0;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1 = nimCopy(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898888);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019941685 = (addInt(i_3019941685, 1) & mskHEX60gensym36_3019941689);
                  if (isEmpty_1308622877(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019941697 = (t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 & mskHEX60gensym36_3019941689);
                  if (!(((((rHEX60gensym36_3019941697 <= i_3019941685) && (jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697)) || ((jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697) && (i_3019941685 < jHEX60gensym36_3019941696))) || ((i_3019941685 < jHEX60gensym36_3019941696) && (rHEX60gensym36_3019941697 <= i_3019941685))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)] = nimCopy(t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)], t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)], NTI3019898900);
          }
      };
    };
    }
    

  
}

function rawGet_3019940817(t_3019940820, key_3019940821, hc_3019940822, hc_3019940822_Idx) {
  var result_3019940823 = 0;

  BeforeRet: {
    hc_3019940822[hc_3019940822_Idx] = hash_2046820630(key_3019940821);
    if ((hc_3019940822[hc_3019940822_Idx] == 0)) {
    hc_3019940822[hc_3019940822_Idx] = 314159265;
    }
    
    if (((t_3019940820.data).length == 0)) {
    result_3019940823 = -1;
    break BeforeRet;
    }
    
    var h_3019940909 = (hc_3019940822[hc_3019940822_Idx] & (t_3019940820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0)) break Label2;
          if (((t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0 == hc_3019940822[hc_3019940822_Idx]) && HEX3DHEX3D_2046820626(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field1, key_3019940821))) {
          result_3019940823 = h_3019940909;
          break BeforeRet;
          }
          
          h_3019940909 = nextTry_1308622883(h_3019940909, (t_3019940820.data).length - 1);
        }
    };
    result_3019940823 = subInt(-1, h_3019940909);
  };

  return result_3019940823;

}

function raiseKeyError_3003123480(key_3003123482) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820617(key_3003123482) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940810(t_3019940813, key_3019940814) {
  var result_3019940815 = null;

    var hcHEX60gensym22_3019940816 = [0];
    var indexHEX60gensym22_3019941162 = rawGet_3019940817(t_3019940813, key_3019940814, hcHEX60gensym22_3019940816, 0);
    if ((0 <= indexHEX60gensym22_3019941162)) {
    result_3019940815 = t_3019940813.data[chckIndx(indexHEX60gensym22_3019941162, 0, (t_3019940813.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3019940814);
    }
    

  return result_3019940815;

}

function voidType_3087008167() {
  var result_3087008168 = null;

    result_3087008168 = {kind: 1, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008168;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet60[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet61[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008169() {
  var result_3087008170 = null;

    result_3087008170 = {kind: 3, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008170;

}

function errorType_3087008131() {
  var result_3087008132 = null;

    result_3087008132 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008132;

}

function stringType_3087008171() {
  var result_3087008172 = null;

    result_3087008172 = {kind: 2, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008172;

}

function HEX5BHEX5D_3003121748(node_3003121749, index_3003121750) {
  var result_3003121751 = null;

  BeforeRet: {
    result_3003121751 = node_3003121749.children[chckIndx(index_3003121750, 0, (node_3003121749.children).length - 1)];
    break BeforeRet;
  };

  return result_3003121751;

}

function recordDependency_3019906144(ctxHEX60gensym77_3019906145, itemHEX60gensym77_3019906146, updateHEX60gensym77_3019906147) {
    if ((0 < (ctxHEX60gensym77_3019906145.dependencyStack).length)) {
    ctxHEX60gensym77_3019906145.dependencyStack[chckIndx((ctxHEX60gensym77_3019906145.dependencyStack).length - 1, 0, (ctxHEX60gensym77_3019906145.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym77_3019906146, NTI3036676201), Field1: updateHEX60gensym77_3019906147});;
    }
    

  
}

function mapKeyJs_3036678533(key_3036678535) {
  var result_3036678536 = null;

    let temp = key_3036678535;
    let newId = getIdDependencyJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3036678536;

}

function getOrDefault_3036678520(t_3036678523, key_3036678524, default_3036678525) {
  var result_3036678526 = 0;

    result_3036678526 = orDefaultJs((t_3036678523).get(mapKeyJs_3036678533(key_3036678524)), (default_3036678525));

  return result_3036678526;

}

function nodeColor_3036678426(graph_3036678427, key_3036678428, parentVerified_3036678429) {
  var result_3036678430 = 0;

  BeforeRet: {
    if ((key_3036678428.Field1 == -1)) {
    var inputChangedRevision_3036678547 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((parentVerified_3036678429 < inputChangedRevision_3036678547)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    else {
      result_3036678430 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3036678643 = getOrDefault_3036678520(graph_3036678427.verified, key_3036678428, 0);
    if (!((verified_3036678643 == graph_3036678427.revision))) {
    result_3036678430 = 0;
    break BeforeRet;
    }
    
    var changed_3036678739 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((changed_3036678739 == graph_3036678427.revision)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    
    result_3036678430 = 2;
    break BeforeRet;
  };

  return result_3036678430;

}

function mapKeyJs_3019899778(key_3019899780) {
  var result_3019899781 = null;

    let temp = key_3019899780;
    let newId = getIdAstNodeJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899781;

}

function contains_3019913294(t_3019913297, key_3019913298) {
  var result_3019913299 = false;

    result_3019913299 = t_3019913297.has(mapKeyJs_3019899778(key_3019913298));

  return result_3019913299;

}

function HEX5BHEX5D_3019908139(t_3019908142, key_3019908143) {
  var result_3019908144 = null;
  var result_3019908144_Idx = 0;

    var hcHEX60gensym22_3019908145 = [0];
    var indexHEX60gensym22_3019908152 = rawGet_3036676563(t_3019908142, key_3019908143, hcHEX60gensym22_3019908145, 0);
    if ((0 <= indexHEX60gensym22_3019908152)) {
    result_3019908144 = t_3019908142.data[chckIndx(indexHEX60gensym22_3019908152, 0, (t_3019908142.data).length - 1)]; result_3019908144_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019908143);
    }
    

  return [result_3019908144, result_3019908144_Idx];

}

function rawGet_3019908325(t_3019908328, key_3019908329, hc_3019908330, hc_3019908330_Idx) {
  var result_3019908331 = 0;

  BeforeRet: {
    hc_3019908330[hc_3019908330_Idx] = hash_3019908332(key_3019908329);
    if ((hc_3019908330[hc_3019908330_Idx] == 0)) {
    hc_3019908330[hc_3019908330_Idx] = 314159265;
    }
    
    if (((t_3019908328.data).length == 0)) {
    result_3019908331 = -1;
    break BeforeRet;
    }
    
    var h_3019908439 = (hc_3019908330[hc_3019908330_Idx] & (t_3019908328.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0)) break Label2;
          if (((t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0 == hc_3019908330[hc_3019908330_Idx]) && HEX3DHEX3D_3019908680(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field1, key_3019908329))) {
          result_3019908331 = h_3019908439;
          break BeforeRet;
          }
          
          h_3019908439 = nextTry_1828716586(h_3019908439, (t_3019908328.data).length - 1);
        }
    };
    result_3019908331 = subInt(-1, h_3019908439);
  };

  return result_3019908331;

}

function contains_3019908312(s_3019908314, key_3019908315) {
  var result_3019908316 = false;

    var hc_3019908317 = [0];
    var index_3019908721 = rawGet_3019908325(s_3019908314, key_3019908315, hc_3019908317, 0);
    result_3019908316 = (0 <= index_3019908721);

  return result_3019908316;

}

function mustRehash_3019908857(t_3019908859) {
  var result_3019908860 = false;

    if (!((t_3019908859.counter < (t_3019908859.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019908860 = ((mulInt((t_3019908859.data).length, 2) < mulInt(t_3019908859.counter, 3)) || (subInt((t_3019908859.data).length, t_3019908859.counter) < 4));

  return result_3019908860;

}

function rawGetKnownHC_3019909463(t_3019909466, key_3019909467, hc_3019909468) {
  var result_3019909469 = 0;

  BeforeRet: {
    if (((t_3019909466.data).length == 0)) {
    result_3019909469 = -1;
    break BeforeRet;
    }
    
    var h_3019909554 = (hc_3019909468 & (t_3019909466.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0)) break Label2;
          if (((t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0 == hc_3019909468) && HEX3DHEX3D_3019908680(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field1, key_3019909467))) {
          result_3019909469 = h_3019909554;
          break BeforeRet;
          }
          
          h_3019909554 = nextTry_1828716586(h_3019909554, (t_3019909466.data).length - 1);
        }
    };
    result_3019909469 = subInt(-1, h_3019909554);
  };

  return result_3019909469;

}

function rawInsert_3019909967(s_3019909969, data_3019909970, data_3019909970_Idx, key_3019909971, hc_3019909972, h_3019909973) {
    if (((data_3019909970[data_3019909970_Idx]).length == 0)) {
    var correctSizeHEX60gensym222_3019910056 = slotsNeeded_1828716594(64);
    s_3019909969.counter = 0;
    s_3019909969.data = new Array(chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647) ; ++i) { s_3019909969.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1 = nimCopy(data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1, key_3019909971, NTI3036676204);
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field0 = hc_3019909972;

  
}

function enlarge_3019909120(s_3019909122) {
    var n_3019909124 = [];
    n_3019909124 = new Array(chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647) ; ++i) { n_3019909124[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019909122.data; s_3019909122.data = n_3019909124; n_3019909124 = Temporary1;    Label2: {
      var i_3019909222 = 0;
      var colontmp__2969567383 = 0;
      colontmp__2969567383 = (n_3019909124).length - 1;
      var res_2969567384 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567384 <= colontmp__2969567383)) break Label4;
            i_3019909222 = res_2969567384;
            if (isFilled_1828716583(n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0)) {
            var j_3019909802 = subInt(-1, rawGetKnownHC_3019909463(s_3019909122, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0));
            rawInsert_3019909967(s_3019909122, s_3019909122, "data", n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0, j_3019909802);
            }
            
            res_2969567384 = addInt(res_2969567384, 1);
          }
      };
    };

  
}

function incl_3019908741(s_3019908743, key_3019908744) {
    if (((s_3019908743.data).length == 0)) {
    var correctSizeHEX60gensym215_3019908827 = slotsNeeded_1828716594(64);
    s_3019908743.counter = 0;
    s_3019908743.data = new Array(chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647) ; ++i) { s_3019908743.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019908842 = [0];
    var index_3019908856 = rawGet_3019908325(s_3019908743, key_3019908744, hc_3019908842, 0);
    if ((index_3019908856 < 0)) {
    if (mustRehash_3019908857(s_3019908743)) {
    enlarge_3019909120(s_3019908743);
    index_3019908856 = rawGetKnownHC_3019909463(s_3019908743, key_3019908744, hc_3019908842[0]);
    }
    
    rawInsert_3019909967(s_3019908743, s_3019908743, "data", key_3019908744, hc_3019908842[0], subInt(-1, index_3019908856));
    s_3019908743.counter = addInt(s_3019908743.counter, 1);
    }
    

  
}

function getOrDefault_3019910448(t_3019910451, key_3019910452) {
  var result_3019910453 = [];

    var hcHEX60gensym223_3019910456 = [0];
    var indexHEX60gensym223_3019910463 = rawGet_3036676563(t_3019910451, key_3019910452, hcHEX60gensym223_3019910456, 0);
    if ((0 <= indexHEX60gensym223_3019910463)) {
    result_3019910453 = nimCopy(null, t_3019910451.data[chckIndx(indexHEX60gensym223_3019910463, 0, (t_3019910451.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3019910453;

}

function rawGet_3019902960(t_3019902963, key_3019902964, hc_3019902965, hc_3019902965_Idx) {
  var result_3019902966 = 0;

  BeforeRet: {
    hc_3019902965[hc_3019902965_Idx] = hash_1325400236(key_3019902964);
    if ((hc_3019902965[hc_3019902965_Idx] == 0)) {
    hc_3019902965[hc_3019902965_Idx] = 314159265;
    }
    
    if (((t_3019902963.data).length == 0)) {
    result_3019902966 = -1;
    break BeforeRet;
    }
    
    var h_3019903054 = (hc_3019902965[hc_3019902965_Idx] & (t_3019902963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0)) break Label2;
          if (((t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0 == hc_3019902965[hc_3019902965_Idx]) && (t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field1 == key_3019902964))) {
          result_3019902966 = h_3019903054;
          break BeforeRet;
          }
          
          h_3019903054 = nextTry_1308622883(h_3019903054, (t_3019902963.data).length - 1);
        }
    };
    result_3019902966 = subInt(-1, h_3019903054);
  };

  return result_3019902966;

}

function hasKey_3019910626(t_3019910629, key_3019910630) {
  var result_3019910631 = false;

    var hc_3019910632 = [0];
    result_3019910631 = (0 <= rawGet_3019902960(t_3019910629, key_3019910630, hc_3019910632, 0));

  return result_3019910631;

}

function contains_3019910620(t_3019910623, key_3019910624) {
  var result_3019910625 = false;

  BeforeRet: {
    result_3019910625 = hasKey_3019910626(t_3019910623, key_3019910624);
    break BeforeRet;
  };

  return result_3019910625;

}

function HEX5BHEX5D_3019910719(t_3019910722, key_3019910723) {
  var result_3019910724 = null;
  var result_3019910724_Idx = 0;

    var hcHEX60gensym22_3019910725 = [0];
    var indexHEX60gensym22_3019910732 = rawGet_3019902960(t_3019910722, key_3019910723, hcHEX60gensym22_3019910725, 0);
    if ((0 <= indexHEX60gensym22_3019910732)) {
    result_3019910724 = t_3019910722.data[chckIndx(indexHEX60gensym22_3019910732, 0, (t_3019910722.data).length - 1)]; result_3019910724_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019910723);
    }
    

  return [result_3019910724, result_3019910724_Idx];

}

function HEX5BHEX5DHEX3D_3036679291(t_3036679294, key_3036679295, val_3036679296) {
    t_3036679294.set(mapKeyJs_3036678533(key_3036679295), val_3036679296);

  
}

function HEX5BHEX5DHEX3D_3036679511(t_3036679514, key_3036679515, val_3036679516) {
    t_3036679514.set(mapKeyJs_3036678533(key_3036679515), val_3036679516);

  
}

function markRed_3036679306(graph_3036679307, key_3036679308, fingerprint_3036679309) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.verified, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.changed, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679511(graph_3036679307.fingerprints, key_3036679308, fingerprint_3036679309);

  
}

function HEX5BHEX5DHEX3D_3036678949(t_3036678952, key_3036678953, val_3036678954) {
    t_3036678952.set(mapKeyJs_3036678533(key_3036678953), val_3036678954);

  
}

function clearEdges_3036678879(graph_3036678880, key_3036678881) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678880.dependencies, key_3036678881, []);

  
}

function setDependencies_3036678964(graph_3036678965, key_3036678966, deps_3036678967) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678965.dependencies, key_3036678966, deps_3036678967);

  
}

function pop_3019910865(s_3019910867, s_3019910867_Idx) {
  var result_3019910868 = [];

    var L_3019910872 = subInt((s_3019910867[s_3019910867_Idx]).length, 1);
    result_3019910868 = nimCopy(null, s_3019910867[s_3019910867_Idx][chckIndx(L_3019910872, 0, (s_3019910867[s_3019910867_Idx]).length - 1)], NTI3019898908);
    if (s_3019910867[s_3019910867_Idx].length < chckRange(L_3019910872, 0, 2147483647)) { for (var i = s_3019910867[s_3019910867_Idx].length ; i < chckRange(L_3019910872, 0, 2147483647) ; ++i) s_3019910867[s_3019910867_Idx].push([]); }
               else { s_3019910867[s_3019910867_Idx].length = chckRange(L_3019910872, 0, 2147483647); };

  return result_3019910868;

}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019910907(s_3019910909, key_3019910910) {
          var Temporary5;

  var result_3019910911 = false;

  BeforeRet: {
    var hc_3019910912 = [0];
    var i_3019910919 = rawGet_3019908325(s_3019910909, key_3019910910, hc_3019910912, 0);
    var msk_3019910923 = (s_3019910909.data).length - 1;
    result_3019910911 = true;
    if ((0 <= i_3019910919)) {
    result_3019910911 = false;
    s_3019910909.counter = subInt(s_3019910909.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019910929 = i_3019910919;
          var r_3019910930 = j_3019910929;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 = 0;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1 = nimCopy(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019910919 = (addInt(i_3019910919, 1) & msk_3019910923);
                if (isEmpty_1828716580(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019910930 = (s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 & msk_3019910923);
                if (!(((((r_3019910930 <= i_3019910919) && (j_3019910929 < r_3019910930)) || ((j_3019910929 < r_3019910930) && (i_3019910919 < j_3019910929))) || ((i_3019910919 < j_3019910929) && (r_3019910930 <= i_3019910919))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)];
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)] = genericReset(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)], NTI3019898919);
          s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)] = nimCopy(s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)], Temporary5, NTI3019898919);
        }
    };
    }
    
  };

  return result_3019910911;

}

function excl_3019910892(s_3019910894, key_3019910895) {
    var _ = exclImpl_3019910907(s_3019910894, key_3019910895);

  
}

function pop_3019911495(s_3019911497, s_3019911497_Idx) {
  var result_3019911498 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3019911502 = subInt((s_3019911497[s_3019911497_Idx]).length, 1);
    result_3019911498 = nimCopy(result_3019911498, s_3019911497[s_3019911497_Idx][chckIndx(L_3019911502, 0, (s_3019911497[s_3019911497_Idx]).length - 1)], NTI3036676204);
    if (s_3019911497[s_3019911497_Idx].length < chckRange(L_3019911502, 0, 2147483647)) { for (var i = s_3019911497[s_3019911497_Idx].length ; i < chckRange(L_3019911502, 0, 2147483647) ; ++i) s_3019911497[s_3019911497_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3019911497[s_3019911497_Idx].length = chckRange(L_3019911502, 0, 2147483647); };

  return result_3019911498;

}

function contains_3036679117(t_3036679120, key_3036679121) {
  var result_3036679122 = false;

    result_3036679122 = t_3036679120.has(mapKeyJs_3036678533(key_3036679121));

  return result_3036679122;

}

function HEX5BHEX5D_3036679211(t_3036679214, key_3036679215) {
  var result_3036679216 = [];

    result_3036679216 = nimCopy(null, t_3036679214.get(mapKeyJs_3036678533(key_3036679215)), NTI3036676200);

  return result_3036679216;

}

function fingerprint_3036679037(graph_3036679038, key_3036679039) {
  var result_3036679040 = [];

  BeforeRet: {
    if (contains_3036679117(graph_3036679038.fingerprints, key_3036679039)) {
    result_3036679040 = nimCopy(null, HEX5BHEX5D_3036679211(graph_3036679038.fingerprints, key_3036679039), NTI3036676200);
    break BeforeRet;
    }
    
  };

  return result_3036679040;

}

function HEX3DHEX3D_3019911508(x_3019911510, y_3019911511) {
  var result_3019911512 = false;

  BeforeRet: {
    var sameObject_3019911519 = false;
    sameObject_3019911519 = x_3019911510 === y_3019911511
    if (sameObject_3019911519) {
    result_3019911512 = true;
    break BeforeRet;
    }
    
    if (!(((x_3019911510).length == (y_3019911511).length))) {
    result_3019911512 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3019911533 = 0;
      var colontmp__2969567391 = 0;
      colontmp__2969567391 = subInt((x_3019911510).length, 1);
      var res_2969567392 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567392 <= colontmp__2969567391)) break Label3;
            i_3019911533 = res_2969567392;
            if (!((x_3019911510[chckIndx(i_3019911533, 0, (x_3019911510).length - 1)] == y_3019911511[chckIndx(i_3019911533, 0, (y_3019911511).length - 1)]))) {
            result_3019911512 = false;
            break BeforeRet;
            }
            
            res_2969567392 = addInt(res_2969567392, 1);
          }
      };
    };
    result_3019911512 = true;
    break BeforeRet;
  };

  return result_3019911512;

}

function markGreen_3036679225(graph_3036679226, key_3036679227) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679226.verified, key_3036679227, graph_3036679226.revision);

  
}

function force_3019908046(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary3)[0][Temporary3[1]], HEX24_3036676336(keyHEX60gensym93_3019908048.Field0));
    }
    
    if (contains_3019908312(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048)) {
    incl_3019908741(ctxHEX60gensym93_3019908047.recursiveQueries, keyHEX60gensym93_3019908048);
    var itemHEX60gensym93_3019910260 = nimCopy(null, keyHEX60gensym93_3019908048.Field0, NTI3036676201);
    var queryHEX60gensym93_3019910346 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym93_3019910260), [32,40], queryHEX60gensym93_3019910346, [41]);
    Label5: {
      var kHEX60gensym93_3019910354 = 0;
      var colontmp__2969567378 = 0;
      colontmp__2969567378 = (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1;
      var res_2969567379 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567379 <= colontmp__2969567378)) break Label7;
            kHEX60gensym93_3019910354 = res_2969567379;
            var iHEX60gensym93_3019910358 = subInt(subInt((ctxHEX60gensym93_3019908047.activeQueryStack).length, kHEX60gensym93_3019910354), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym93_3019910354), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym93_3019908047.depGraph.queryNames, ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field1));
            res_2969567379 = addInt(res_2969567379, 1);
          }
      };
    };
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym93_3019908048);
    markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var Temporary9 = nimCopy(null, keyHEX60gensym93_3019908048, NTI3036676204);
    ctxHEX60gensym93_3019908047.activeQueryStack.push(Temporary9);;
    clearEdges_3036678879(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    ctxHEX60gensym93_3019908047.dependencyStack.push([]);;
    recordDependency_3019906144(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048.Field0, -1);
    var fingerprintHEX60gensym93_3019910864 = ctxHEX60gensym93_3019908047.updateFunctions[chckIndx(keyHEX60gensym93_3019908048.Field1, 0, (ctxHEX60gensym93_3019908047.updateFunctions).length - 1)](keyHEX60gensym93_3019908048.Field0);
    setDependencies_3036678964(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, pop_3019910865(ctxHEX60gensym93_3019908047, "dependencyStack"));
    excl_3019910892(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var _ = pop_3019911495(ctxHEX60gensym93_3019908047, "activeQueryStack");
    var prevFingerprintHEX60gensym93_3019911507 = fingerprint_3036679037(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    if (HEX3DHEX3D_3019911508(fingerprintHEX60gensym93_3019910864, prevFingerprintHEX60gensym93_3019911507)) {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    }
    else {
      if (ctxHEX60gensym93_3019908047.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, fingerprintHEX60gensym93_3019910864);
    }
    
    } finally {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008238(s_3087008240, s_3087008240_Idx, x_3087008241) {
    s_3087008240[s_3087008240_Idx].push.apply(s_3087008240[s_3087008240_Idx], HEX24_3087008191(x_3087008241));;

  
}

function collectionToString_3087008198(x_3087008200, prefix_3087008201, separator_3087008202, suffix_3087008203) {
  var result_3087008204 = [[]];

    result_3087008204[0] = nimCopy(null, prefix_3087008201, NTI33554449);
    var firstElement_3087008205 = true;
    Label1: {
      var value_3087008228 = null;
      var i_2969567396 = 0;
      var L_2969567397 = (x_3087008200).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567396 < L_2969567397)) break Label3;
            value_3087008228 = x_3087008200[i_2969567396];
            if (firstElement_3087008205) {
            firstElement_3087008205 = false;
            }
            else {
            result_3087008204[0].push.apply(result_3087008204[0], separator_3087008202);;
            }
            
            if ((value_3087008228 == null)) {
            result_3087008204[0].push.apply(result_3087008204[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008238(result_3087008204, 0, value_3087008228);
            }
            
            i_2969567396 += 1;
            if (!(((x_3087008200).length == L_2969567397))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008204[0].push.apply(result_3087008204[0], suffix_3087008203);;

  return result_3087008204[0];

}

function HEX24_3087008194(x_3087008196) {
  var result_3087008197 = [];

    result_3087008197 = nimCopy(null, collectionToString_3087008198(x_3087008196, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008197;

}

function formatValue_2785018294(result_2785018296, result_2785018296_Idx, value_2785018297, specifier_2785018298) {
    formatValue_721420459(result_2785018296, result_2785018296_Idx, nimBoolToStr(value_2785018297), specifier_2785018298);

  
}

function HEX24_3087008191(typ_3087008192) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008193 = [];

  BeforeRet: {
    switch (typ_3087008192.kind) {
    case 0:
      result_3087008193 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008193 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008193 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008193 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008192;
      if (ConstSet62[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008192;
      if (ConstSet63[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008193 = nimCopy(null, (HEX24_3087008194(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008191(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008193 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008257 = [mnewString(0)];
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008192;
      if (ConstSet64[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2785018294(fmtRes_3087008257, 0, Temporary3.open, []);
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [41]);;
      result_3087008193 = nimCopy(null, fmtRes_3087008257[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008193;

}

function HEX5BHEX5D_3019913388(t_3019913391, key_3019913392) {
  var result_3019913393 = null;

    result_3019913393 = t_3019913391.get(mapKeyJs_3019899778(key_3019913392));

  return result_3019913393;

}

function addQuoted_3019911798(s_3019911800, s_3019911800_Idx, x_3019911801) {
    s_3019911800[s_3019911800_Idx].push.apply(s_3019911800[s_3019911800_Idx], HEX24_3019911804(x_3019911801));;

  
}

function collectionToString_3019911765(x_3019911767, prefix_3019911768, separator_3019911769, suffix_3019911770) {
  var result_3019911771 = [[]];

    result_3019911771[0] = nimCopy(null, prefix_3019911768, NTI33554449);
    var firstElement_3019911772 = true;
    Label1: {
      var value_3019911794 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2969567412 = 0;
      var L_2969567413 = (x_3019911767).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567412 < L_2969567413)) break Label3;
            value_3019911794 = x_3019911767[i_2969567412];
            if (firstElement_3019911772) {
            firstElement_3019911772 = false;
            }
            else {
            result_3019911771[0].push.apply(result_3019911771[0], separator_3019911769);;
            }
            
            addQuoted_3019911798(result_3019911771, 0, value_3019911794);
            i_2969567412 += 1;
            if (!(((x_3019911767).length == L_2969567413))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3019911771[0].push.apply(result_3019911771[0], suffix_3019911770);;

  return result_3019911771[0];

}

function HEX24_3019911761(x_3019911763) {
  var result_3019911764 = [];

    result_3019911764 = nimCopy(null, collectionToString_3019911765(x_3019911763, [64,91], [44,32], [93]), NTI33554449);

  return result_3019911764;

}

function getOrDefault_3036678846(t_3036678849, key_3036678850, default_3036678851) {
  var result_3036678852 = [];

    result_3036678852 = nimCopy(null, orDefaultJs((t_3036678849).get(mapKeyJs_3036678533(key_3036678850)), (default_3036678851)), NTI3036676235);

  return result_3036678852;

}

function getDependencies_3036678749(graph_3036678750, key_3036678751) {
  var result_3036678752 = [];

    result_3036678752 = nimCopy(null, getOrDefault_3036678846(graph_3036678750.dependencies, key_3036678751, []), NTI3036676235);
    if ((((result_3036678752).length == 0) && !((key_3036678751.Field1 == -1)))) {
    result_3036678752.push({Field0: nimCopy(null, key_3036678751.Field0, NTI3036676201), Field1: -1});;
    }
    

  return result_3036678752;

}

function tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, keyHEX60gensym94_3019911567, tryForceHEX60gensym94_3019911568) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3019911569 = 0;

  BeforeRet: {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3036676336(keyHEX60gensym94_3019911567.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3019911761(getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567)));
    }
    
    if (contains_3019908312(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567)) {
    incl_3019908741(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
    var itemHEX60gensym94_3019911951 = nimCopy(null, keyHEX60gensym94_3019911567.Field0, NTI3036676201);
    var queryHEX60gensym94_3019912037 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym94_3019911951), [32,40], queryHEX60gensym94_3019912037, [41]);
    Label5: {
      var kHEX60gensym94_3019912045 = 0;
      var colontmp__2969567400 = 0;
      colontmp__2969567400 = (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1;
      var res_2969567401 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567401 <= colontmp__2969567400)) break Label7;
            kHEX60gensym94_3019912045 = res_2969567401;
            var iHEX60gensym94_3019912049 = subInt(subInt((ctxHEX60gensym94_3019911566.activeQueryStack).length, kHEX60gensym94_3019912045), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym94_3019912045), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym94_3019911566.depGraph.queryNames, ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field1));
            res_2969567401 = addInt(res_2969567401, 1);
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym94_3019911567);
    markRed_3036679306(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567, []);
    }
    
    result_3019911569 = 2;
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var Temporary9 = nimCopy(null, keyHEX60gensym94_3019911567, NTI3036676204);
    ctxHEX60gensym94_3019911566.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym94_3019912458 = getOrDefault_3036678520(ctxHEX60gensym94_3019911566.depGraph.verified, keyHEX60gensym94_3019911567, 0);
    Label11: {
      var iHEX60gensym94_3019912482 = 0;
      var depHEX60gensym94_3019912483 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2969567405 = [];
      colontmp__2969567405 = getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
      var i_2969567407 = 0;
      var L_2969567408 = (colontmp__2969567405).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2969567407 < L_2969567408)) break Label13;
            iHEX60gensym94_3019912482 = i_2969567407;
            depHEX60gensym94_3019912483 = nimCopy(depHEX60gensym94_3019912483, colontmp__2969567405[chckIndx(i_2969567407, 0, (colontmp__2969567405).length - 1)], NTI3036676204);
            Label14: {
              depHEX60gensym94_3019912483._id = undefined;
              depHEX60gensym94_3019912483.Field0._id = undefined;
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, null_2046820646)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, dependencyGlobalRevision_3036676217)) {
              if ((verifiedHEX60gensym94_3019912458 < ctxHEX60gensym94_3019911566.depGraph.revision)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458)) {
              case 2:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3019911569 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483, true)) {
                case 2:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym94_3019911568) {
                  force_3019908046(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483);
                  }
                  else {
                    result_3019911569 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3019908312(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567)) {
                  excl_3019910892(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458) == 1)) {
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2969567407 = addInt(i_2969567407, 1);
            if (!(((colontmp__2969567405).length == L_2969567408))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
    result_3019911569 = 0;
    break BeforeRet;
    } finally {
    excl_3019910892(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var _ = pop_3019911495(ctxHEX60gensym94_3019911566, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary22);
    }
  };

  return result_3019911569;

}

function clear_3019913516(s_3019913518) {
    s_3019913518.counter = 0;
    Label1: {
      var i_3019913604 = 0;
      var colontmp__2969567416 = 0;
      colontmp__2969567416 = (s_3019913518.data).length;
      var i_2969567417 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567417 < colontmp__2969567416)) break Label3;
            i_3019913604 = i_2969567417;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field0 = 0;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1 = nimCopy(s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            i_2969567417 = addInt(i_2969567417, 1);
          }
      };
    };

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function computeType_3019913434(ctxHEX60gensym97_3019913435, inputHEX60gensym97_3019913436, recordDependencyHEX60gensym97_3019913437) {
    var Temporary3;
    var Temporary5;

  var result_3019913438 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym97_3019913849 = getItem_3019906357(inputHEX60gensym97_3019913436);
    var keyHEX60gensym97_3019913850 = {Field0: nimCopy(null, itemHEX60gensym97_3019913849, NTI3036676201), Field1: 0};
    if (recordDependencyHEX60gensym97_3019913437) {
    recordDependency_3019906144(ctxHEX60gensym97_3019913435, itemHEX60gensym97_3019913849, 0);
    }
    
    var colorHEX60gensym97_3019913851 = nodeColor_3036678426(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, 0);
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym97_3019913851, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym97_3019913849));
    }
    
    if ((colorHEX60gensym97_3019913851 == 2)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    }
    else {
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym97_3019913851 == 0)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850, true) == 0)) {
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym97_3019913435.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
      if (false) {
      markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
      }
      
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
      if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym97_3019913851 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym97_3019913435.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym97_3019913435.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym97_3019913435.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019913438;

}

function formatValue_3019948837(result_3019948839, result_3019948839_Idx, value_3019948840, specifier_3019948841) {
    formatValue_721420459(result_3019948839, result_3019948839_Idx, HEX24_3087008191(value_3019948840), specifier_3019948841);

  
}

function contains_3019916420(t_3019916423, key_3019916424) {
  var result_3019916425 = false;

    result_3019916425 = t_3019916423.has(mapKeyJs_3019899778(key_3019916424));

  return result_3019916425;

}

function HEX24_3087008498(value_3087008499) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008500 = [];

  BeforeRet: {
    switch (value_3087008499.kind) {
    case 0:
      result_3087008500 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008500 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008499;
      if (ConstSet65[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008499;
      if (ConstSet66[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008500 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008499;
      if (ConstSet67[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_3003123671(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008499;
      if (ConstSet68[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_3087008191(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008500;

}

function HEX5BHEX5D_3019916514(t_3019916517, key_3019916518) {
  var result_3019916519 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019916519 = nimCopy(result_3019916519, t_3019916517.get(mapKeyJs_3019899778(key_3019916518)), NTI3087007751);

  return result_3019916519;

}

function computeValue_3019916562(ctxHEX60gensym101_3019916563, inputHEX60gensym101_3019916564, recordDependencyHEX60gensym101_3019916565) {
    var Temporary3;
    var Temporary5;

  var result_3019916566 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym101_3019916647 = getItem_3019906357(inputHEX60gensym101_3019916564);
    var keyHEX60gensym101_3019916648 = {Field0: nimCopy(null, itemHEX60gensym101_3019916647, NTI3036676201), Field1: 1};
    if (recordDependencyHEX60gensym101_3019916565) {
    recordDependency_3019906144(ctxHEX60gensym101_3019916563, itemHEX60gensym101_3019916647, 1);
    }
    
    var colorHEX60gensym101_3019916649 = nodeColor_3036678426(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, 0);
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym101_3019916649, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym101_3019916647));
    }
    
    if ((colorHEX60gensym101_3019916649 == 2)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    }
    else {
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym101_3019916649 == 0)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648, true) == 0)) {
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym101_3019916563.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
      if (false) {
      markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
      }
      
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
      if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym101_3019916649 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym101_3019916563.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym101_3019916563.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym101_3019916563.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019916566;

}

function formatValue_3154118047(result_3154118049, result_3154118049_Idx, value_3154118050, specifier_3154118051) {
    formatValue_721420459(result_3154118049, result_3154118049_Idx, HEX24_3087008498(value_3154118050), specifier_3154118051);

  
}

function newFunctionType_3087008173(paramTypes_3087008174, returnType_3087008175) {
  var result_3087008176 = null;

    result_3087008176 = {kind: 4, returnType: returnType_3087008175, paramTypes: nimCopy(null, paramTypes_3087008174, NTI3087008055), mHash: 0, open: false};

  return result_3087008176;

}

function HEX3DHEX3D_3087008331(x_3087008333, y_3087008334) {
  var result_3087008335 = false;

  BeforeRet: {
    var sameObject_3087008342 = false;
    sameObject_3087008342 = x_3087008333 === y_3087008334
    if (sameObject_3087008342) {
    result_3087008335 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008333).length == (y_3087008334).length))) {
    result_3087008335 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008356 = 0;
      var colontmp__2969567420 = 0;
      colontmp__2969567420 = subInt((x_3087008333).length, 1);
      var res_2969567421 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567421 <= colontmp__2969567420)) break Label3;
            i_3087008356 = res_2969567421;
            if (!(HEX3DHEX3D_3087008313(x_3087008333[chckIndx(i_3087008356, 0, (x_3087008333).length - 1)], y_3087008334[chckIndx(i_3087008356, 0, (y_3087008334).length - 1)]))) {
            result_3087008335 = false;
            break BeforeRet;
            }
            
            res_2969567421 = addInt(res_2969567421, 1);
          }
      };
    };
    result_3087008335 = true;
    break BeforeRet;
  };

  return result_3087008335;

}

function HEX3DHEX3D_3087008313(a_3087008314, b_3087008315) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008316 = false;

  BeforeRet: {
    if ((a_3087008314 == null)) {
    result_3087008316 = (b_3087008315 == null);
    break BeforeRet;
    }
    
    if ((b_3087008315 == null)) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008314.kind == b_3087008315.kind))) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    switch (a_3087008314.kind) {
    case 4:
      var Temporary2 = a_3087008314;
      if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008315;
      if (ConstSet72[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008313(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008314;
        if (ConstSet73[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008315;
        if (ConstSet74[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008331(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008316 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008314;
      if (ConstSet75[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008315;
      if (ConstSet76[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008316 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008316 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008316;

}

function anyType_3087008188(open_3087008189) {
  var result_3087008190 = null;

    result_3087008190 = {kind: 5, open: open_3087008189, mHash: 0, returnType: null, paramTypes: []};

  return result_3087008190;

}

function contains_3019922352(t_3019922355, key_3019922356) {
  var result_3019922357 = false;

    result_3019922357 = t_3019922355.has(mapKeyJs_3019899778(key_3019922356));

  return result_3019922357;

}

function len_3087009065(t_3087009068) {
  var result_3087009069 = 0;

    result_3087009069 = t_3087009068.counter;

  return result_3087009069;

}

function addQuoted_3019905691(s_3019905693, s_3019905693_Idx, x_3019905694) {
    s_3019905693[s_3019905693_Idx].push.apply(s_3019905693[s_3019905693_Idx], HEX24_2046820617(x_3019905694));;

  
}

function HEX24_3087008915(symbol_3087008916) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008917 = [];

  BeforeRet: {
    switch (symbol_3087008916.kind) {
    case 0:
      var Temporary1 = symbol_3087008916;
      if (ConstSet88[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3003123671(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008916;
      if (ConstSet89[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008916;
      if (ConstSet90[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3087008191(Temporary2.typ) || [],[44,32] || [],HEX24_3087008498(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008917;

}

function addQuoted_3019905502(s_3019905504, s_3019905504_Idx, x_3019905505) {
    s_3019905504[s_3019905504_Idx].push.apply(s_3019905504[s_3019905504_Idx], HEX24_3087008915(x_3019905505));;

  
}

function HEX24_3019905598(t_3019905601) {
  var result_3019905602 = [[]];

    if ((len_3087009065(t_3019905601) == 0)) {
    result_3019905602[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3019905602[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3019905689 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3019905690 = null;
        var L_2969567428 = len_3087009065(t_3019905601);
        Label2: {
          var h_2969567430 = 0;
          var colontmp__2969567431 = 0;
          colontmp__2969567431 = (t_3019905601.data).length - 1;
          var res_2969567432 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2969567432 <= colontmp__2969567431)) break Label4;
                h_2969567430 = res_2969567432;
                if (isFilled_1308622880(t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field0)) {
                key_3019905689 = nimCopy(key_3019905689, t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field1, NTI2046820355);
                val_3019905690 = t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field2;
                if ((1 < (result_3019905602[0]).length)) {
                result_3019905602[0].push.apply(result_3019905602[0], [44,32]);;
                }
                
                addQuoted_3019905691(result_3019905602, 0, key_3019905689);
                result_3019905602[0].push.apply(result_3019905602[0], [58,32]);;
                addQuoted_3019905502(result_3019905602, 0, val_3019905690);
                if (!((len_3087009065(t_3019905601) == L_2969567428))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2969567432 = addInt(res_2969567432, 1);
              }
          };
        };
      };
      result_3019905602[0].push.apply(result_3019905602[0], [125]);;
    }
    

  return result_3019905602[0];

}

function HEX5BHEX5D_3019922446(t_3019922449, key_3019922450) {
  var result_3019922451 = null;

    result_3019922451 = t_3019922449.get(mapKeyJs_3019899778(key_3019922450));

  return result_3019922451;

}

function computeSymbols_3019922496(ctxHEX60gensym109_3019922497, inputHEX60gensym109_3019922498, recordDependencyHEX60gensym109_3019922499) {
    var Temporary3;
    var Temporary5;

  var result_3019922502 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym109_3019922583 = getItem_3019906357(inputHEX60gensym109_3019922498);
    var keyHEX60gensym109_3019922584 = {Field0: nimCopy(null, itemHEX60gensym109_3019922583, NTI3036676201), Field1: 3};
    if (recordDependencyHEX60gensym109_3019922499) {
    recordDependency_3019906144(ctxHEX60gensym109_3019922497, itemHEX60gensym109_3019922583, 3);
    }
    
    var colorHEX60gensym109_3019922585 = nodeColor_3036678426(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, 0);
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym109_3019922585, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym109_3019922583));
    }
    
    if ((colorHEX60gensym109_3019922585 == 2)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    }
    else {
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym109_3019922585 == 0)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584, true) == 0)) {
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym109_3019922497.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
      if (false) {
      markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
      }
      
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
      if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym109_3019922585 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym109_3019922497.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym109_3019922497.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym109_3019922497.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019922502;

}

function rawGet_3019938123(t_3019938126, key_3019938127, hc_3019938128, hc_3019938128_Idx) {
  var result_3019938129 = 0;

  BeforeRet: {
    hc_3019938128[hc_3019938128_Idx] = hash_2046820630(key_3019938127);
    if ((hc_3019938128[hc_3019938128_Idx] == 0)) {
    hc_3019938128[hc_3019938128_Idx] = 314159265;
    }
    
    if (((t_3019938126.data).length == 0)) {
    result_3019938129 = -1;
    break BeforeRet;
    }
    
    var h_3019938214 = (hc_3019938128[hc_3019938128_Idx] & (t_3019938126.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0)) break Label2;
          if (((t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0 == hc_3019938128[hc_3019938128_Idx]) && HEX3DHEX3D_2046820626(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field1, key_3019938127))) {
          result_3019938129 = h_3019938214;
          break BeforeRet;
          }
          
          h_3019938214 = nextTry_1308622883(h_3019938214, (t_3019938126.data).length - 1);
        }
    };
    result_3019938129 = subInt(-1, h_3019938214);
  };

  return result_3019938129;

}

function hasKey_3019950765(t_3019950768, key_3019950769) {
  var result_3019950770 = false;

    var hc_3019950771 = [0];
    result_3019950770 = (0 <= rawGet_3019938123(t_3019950768, key_3019950769, hc_3019950771, 0));

  return result_3019950770;

}

function hasKey_3019950639(t_3019950642, key_3019950643) {
  var result_3019950644 = false;

    result_3019950644 = hasKey_3019950765(t_3019950642, key_3019950643);

  return result_3019950644;

}

function contains_3019950603(t_3019950606, key_3019950607) {
  var result_3019950608 = false;

  BeforeRet: {
    result_3019950608 = hasKey_3019950639(t_3019950606, key_3019950607);
    break BeforeRet;
  };

  return result_3019950608;

}

function HEX5BHEX5D_3019951024(t_3019951027, key_3019951028) {
  var result_3019951029 = null;
  var result_3019951029_Idx = 0;

    var hcHEX60gensym22_3019951030 = [0];
    var indexHEX60gensym22_3019951037 = rawGet_3019938123(t_3019951027, key_3019951028, hcHEX60gensym22_3019951030, 0);
    if ((0 <= indexHEX60gensym22_3019951037)) {
    result_3019951029 = t_3019951027.data[chckIndx(indexHEX60gensym22_3019951037, 0, (t_3019951027.data).length - 1)]; result_3019951029_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3019951028);
    }
    

  return [result_3019951029, result_3019951029_Idx];

}

function HEX5BHEX5D_3019950858(t_3019950861, key_3019950862) {
    var Temporary1;

  var result_3019950863 = null;
  var result_3019950863_Idx = 0;

    result_3019950863 = (Temporary1 = HEX5BHEX5D_3019951024(t_3019950861, key_3019950862), Temporary1)[0]; result_3019950863_Idx = Temporary1[1];

  return [result_3019950863, result_3019950863_Idx];

}

function getItem_3019907143(selfHEX60gensym86_3019907144) {
  var result_3019907145 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)) {
    selfHEX60gensym86_3019907144.id = nimCopy(selfHEX60gensym86_3019907144.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,54,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567435 = nimCopy(null, selfHEX60gensym86_3019907144.id, NTI2046820355);
    var colontmp__2969567436 = 2;
    result_3019907145 = nimCopy(result_3019907145, {Field0: nimCopy(null, colontmp__2969567435, NTI2046820355), Field1: colontmp__2969567436}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907145;

}

function mapKeyJs_3019901554(key_3019901556) {
  var result_3019901557 = null;

    let temp = key_3019901556;
    let newId = getIdSymbolJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019901557;

}

function contains_3019928285(t_3019928288, key_3019928289) {
  var result_3019928290 = false;

    result_3019928290 = t_3019928288.has(mapKeyJs_3019901554(key_3019928289));

  return result_3019928290;

}

function HEX5BHEX5D_3019928379(t_3019928382, key_3019928383) {
  var result_3019928384 = null;

    result_3019928384 = t_3019928382.get(mapKeyJs_3019901554(key_3019928383));

  return result_3019928384;

}

function computeSymbolType_3019928398(ctxHEX60gensym117_3019928399, inputHEX60gensym117_3019928400, recordDependencyHEX60gensym117_3019928401) {
    var Temporary3;
    var Temporary5;

  var result_3019928402 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym117_3019928483 = getItem_3019907143(inputHEX60gensym117_3019928400);
    var keyHEX60gensym117_3019928484 = {Field0: nimCopy(null, itemHEX60gensym117_3019928483, NTI3036676201), Field1: 5};
    if (recordDependencyHEX60gensym117_3019928401) {
    recordDependency_3019906144(ctxHEX60gensym117_3019928399, itemHEX60gensym117_3019928483, 5);
    }
    
    var colorHEX60gensym117_3019928485 = nodeColor_3036678426(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, 0);
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym117_3019928485, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym117_3019928483));
    }
    
    if ((colorHEX60gensym117_3019928485 == 2)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    }
    else {
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym117_3019928485 == 0)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484, true) == 0)) {
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym117_3019928399.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
      if (false) {
      markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
      }
      
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
      if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym117_3019928485 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym117_3019928399.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym117_3019928399.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym117_3019928399.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019928402;

}

function none_3019913418() {
  var result_3019913424 = ({val: null});

  return result_3019913424;

}

function none_3019913415() {
  var result_3019913417 = ({val: null});

    result_3019913417 = nimCopy(result_3019913417, none_3019913418(), NTI3019907400);

  return result_3019913417;

}

function isNone_3019951213(self_3019951215) {
  var result_3019951216 = false;

    result_3019951216 = (self_3019951215.val == null);

  return result_3019951216;

}

function get_3019951256(self_3019951258) {
  var result_3019951259 = null;
  var result_3019951259_Idx = 0;

  BeforeRet: {
    if (isNone_3019951213(self_3019951258)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3019951259 = self_3019951258; result_3019951259_Idx = "val";
    break BeforeRet;
  };

  return [result_3019951259, result_3019951259_Idx];

}

function some_3019913402(val_3019913404) {
  var result_3019913405 = ({val: null});

    if (!(!((val_3019913404 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019913405.val = val_3019913404;

  return result_3019913405;

}

function last_3003121922(node_3003121923) {
  var result_3003121924 = null;

  BeforeRet: {
    if ((0 < len_3003121752(node_3003121923))) {
    result_3003121924 = HEX5BHEX5D_3003121748(node_3003121923, subInt(len_3003121752(node_3003121923), 1));
    break BeforeRet;
    }
    
    result_3003121924 = null;
    break BeforeRet;
  };

  return result_3003121924;

}

function isSome_3019951383(self_3019951385) {
  var result_3019951386 = false;

    result_3019951386 = !((self_3019951385.val == null));

  return result_3019951386;

}

function get_3019951374(self_3019951376, otherwise_3019951377) {
    var Temporary1;

  var result_3019951378 = null;

    if (isSome_3019951383(self_3019951376)) {
    Temporary1 = self_3019951376.val;
    }
    else {
    Temporary1 = otherwise_3019951377;
    }
    
    result_3019951378 = Temporary1;

  return result_3019951378;

}

function contains_3019919209(t_3019919212, key_3019919213) {
  var result_3019919214 = false;

    result_3019919214 = t_3019919212.has(mapKeyJs_3019899778(key_3019919213));

  return result_3019919214;

}

function isSome_3087009356(self_3087009358) {
  var result_3087009359 = false;

    result_3087009359 = !((self_3087009358.val == null));

  return result_3087009359;

}

function HEX24_3019905491(self_3019905493) {
  var result_3019905494 = [[]];

    if (isSome_3087009356(self_3019905493)) {
    result_3019905494[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3019905502(result_3019905494, 0, self_3019905493.val);
    result_3019905494[0].push.apply(result_3019905494[0], [41]);;
    }
    else {
      result_3019905494[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3019905494[0];

}

function HEX5BHEX5D_3019919303(t_3019919306, key_3019919307) {
  var result_3019919308 = ({val: null});

    result_3019919308 = nimCopy(result_3019919308, t_3019919306.get(mapKeyJs_3019899778(key_3019919307)), NTI3087008909);

  return result_3019919308;

}

function computeSymbol_3019919344(ctxHEX60gensym105_3019919345, inputHEX60gensym105_3019919346, recordDependencyHEX60gensym105_3019919347) {
    var Temporary3;
    var Temporary5;

  var result_3019919349 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym105_3019919430 = getItem_3019906357(inputHEX60gensym105_3019919346);
    var keyHEX60gensym105_3019919431 = {Field0: nimCopy(null, itemHEX60gensym105_3019919430, NTI3036676201), Field1: 2};
    if (recordDependencyHEX60gensym105_3019919347) {
    recordDependency_3019906144(ctxHEX60gensym105_3019919345, itemHEX60gensym105_3019919430, 2);
    }
    
    var colorHEX60gensym105_3019919432 = nodeColor_3036678426(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, 0);
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym105_3019919432, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym105_3019919430));
    }
    
    if ((colorHEX60gensym105_3019919432 == 2)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    }
    else {
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym105_3019919432 == 0)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431, true) == 0)) {
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym105_3019919345.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
      if (false) {
      markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
      }
      
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
      if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym105_3019919432 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,53,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym105_3019919345.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym105_3019919345.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym105_3019919345.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019919349;

}

function isNone_3087009384(self_3087009386) {
  var result_3087009387 = false;

    result_3087009387 = (self_3087009386.val == null);

  return result_3087009387;

}

function get_3087009376(self_3087009378) {
  var result_3087009379 = null;

    if (isNone_3087009384(self_3087009378)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009379 = self_3087009378["val"];

  return result_3087009379;

}

function formatValue_3019951529(result_3019951531, result_3019951531_Idx, value_3019951532, specifier_3019951533) {
    formatValue_721420459(result_3019951531, result_3019951531_Idx, HEX24_3087008915(value_3019951532), specifier_3019951533);

  
}

function mustRehash_3019942773(t_3019942775) {
  var result_3019942776 = false;

    if (!((t_3019942775.counter < (t_3019942775.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019942776 = ((mulInt((t_3019942775.data).length, 2) < mulInt(t_3019942775.counter, 3)) || (subInt((t_3019942775.data).length, t_3019942775.counter) < 4));

  return result_3019942776;

}

function rawInsert_3019943466(t_3019943470, data_3019943471, data_3019943471_Idx, key_3019943472, val_3019943473, hc_3019943474, h_3019943475) {
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1 = nimCopy(data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1, key_3019943472, NTI3036676204);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field2 = nimCopy(null, val_3019943473, NTI3019898985);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field0 = hc_3019943474;

  
}

function enlarge_3019943030(t_3019943033) {
    var n_3019943036 = [];
    n_3019943036 = new Array(chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647) ; ++i) { n_3019943036[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019943033.data; t_3019943033.data = n_3019943036; n_3019943036 = Temporary1;    Label2: {
      var i_3019943134 = 0;
      var colontmp__2969567439 = 0;
      colontmp__2969567439 = (n_3019943036).length - 1;
      var res_2969567440 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567440 <= colontmp__2969567439)) break Label4;
            i_3019943134 = res_2969567440;
            var eh_3019943215 = n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019943215)) {
            var j_3019943219 = (eh_3019943215 & (t_3019943033.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019943033.data[chckIndx(j_3019943219, 0, (t_3019943033.data).length - 1)].Field0)) break Label6;
                  j_3019943219 = nextTry_1308622883(j_3019943219, (t_3019943033.data).length - 1);
                }
            };
            rawInsert_3019943466(t_3019943033, t_3019943033, "data", n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field1, n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field2, eh_3019943215, j_3019943219);
            }
            
            res_2969567440 = addInt(res_2969567440, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019943725(t_3019943728, key_3019943729, hc_3019943730) {
  var result_3019943731 = 0;

  BeforeRet: {
    if (((t_3019943728.data).length == 0)) {
    result_3019943731 = -1;
    break BeforeRet;
    }
    
    var h_3019943816 = (hc_3019943730 & (t_3019943728.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0)) break Label2;
          if (((t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0 == hc_3019943730) && HEX3DHEX3D_3019908680(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field1, key_3019943729))) {
          result_3019943731 = h_3019943816;
          break BeforeRet;
          }
          
          h_3019943816 = nextTry_1308622883(h_3019943816, (t_3019943728.data).length - 1);
        }
    };
    result_3019943731 = subInt(-1, h_3019943816);
  };

  return result_3019943731;

}

function HEX5BHEX5DHEX3D_3019942505(t_3019942508, key_3019942509, val_3019942510) {
    if (((t_3019942508.data).length == 0)) {
    var correctSizeHEX60gensym357_3019942593 = slotsNeeded_1308622891(32);
    t_3019942508.counter = 0;
    t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019942598 = [0];
    var index_3019942605 = rawGet_3019940162(t_3019942508, key_3019942509, hc_3019942598, 0);
    if ((0 <= index_3019942605)) {
    t_3019942508.data[chckIndx(index_3019942605, 0, (t_3019942508.data).length - 1)].Field2 = nimCopy(null, val_3019942510, NTI3019898985);
    }
    else {
      if (((t_3019942508.data).length == 0)) {
      var correctSizeHEX60gensym360_3019942768 = slotsNeeded_1308622891(32);
      t_3019942508.counter = 0;
      t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019942773(t_3019942508)) {
      enlarge_3019943030(t_3019942508);
      index_3019942605 = rawGetKnownHC_3019943725(t_3019942508, key_3019942509, hc_3019942598[0]);
      }
      
      index_3019942605 = subInt(-1, index_3019942605);
      rawInsert_3019943466(t_3019942508, t_3019942508, "data", key_3019942509, val_3019942510, hc_3019942598[0], index_3019942605);
      t_3019942508.counter = addInt(t_3019942508.counter, 1);
    }
    

  
}

function hasKey_3019944174(t_3019944177, key_3019944178) {
  var result_3019944179 = false;

    var hc_3019944180 = [0];
    result_3019944179 = (0 <= rawGet_3019940817(t_3019944177, key_3019944178, hc_3019944180, 0));

  return result_3019944179;

}

function contains_3019944168(t_3019944171, key_3019944172) {
  var result_3019944173 = false;

  BeforeRet: {
    result_3019944173 = hasKey_3019944174(t_3019944171, key_3019944172);
    break BeforeRet;
  };

  return result_3019944173;

}

function mustRehash_3019944518(t_3019944520) {
  var result_3019944521 = false;

    if (!((t_3019944520.counter < (t_3019944520.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019944521 = ((mulInt((t_3019944520.data).length, 2) < mulInt(t_3019944520.counter, 3)) || (subInt((t_3019944520.data).length, t_3019944520.counter) < 4));

  return result_3019944521;

}

function rawInsert_3019945211(t_3019945215, data_3019945216, data_3019945216_Idx, key_3019945217, val_3019945218, hc_3019945219, h_3019945220) {
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1, key_3019945217, NTI2046820355);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2, val_3019945218, NTI3019898884);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field0 = hc_3019945219;

  
}

function enlarge_3019944775(t_3019944778) {
    var n_3019944781 = [];
    n_3019944781 = new Array(chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647) ; ++i) { n_3019944781[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3019944778.data; t_3019944778.data = n_3019944781; n_3019944781 = Temporary1;    Label2: {
      var i_3019944879 = 0;
      var colontmp__2969567445 = 0;
      colontmp__2969567445 = (n_3019944781).length - 1;
      var res_2969567446 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567446 <= colontmp__2969567445)) break Label4;
            i_3019944879 = res_2969567446;
            var eh_3019944960 = n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019944960)) {
            var j_3019944964 = (eh_3019944960 & (t_3019944778.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019944778.data[chckIndx(j_3019944964, 0, (t_3019944778.data).length - 1)].Field0)) break Label6;
                  j_3019944964 = nextTry_1308622883(j_3019944964, (t_3019944778.data).length - 1);
                }
            };
            rawInsert_3019945211(t_3019944778, t_3019944778, "data", n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field1, n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field2, eh_3019944960, j_3019944964);
            }
            
            res_2969567446 = addInt(res_2969567446, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019945470(t_3019945473, key_3019945474, hc_3019945475) {
  var result_3019945476 = 0;

  BeforeRet: {
    if (((t_3019945473.data).length == 0)) {
    result_3019945476 = -1;
    break BeforeRet;
    }
    
    var h_3019945561 = (hc_3019945475 & (t_3019945473.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0)) break Label2;
          if (((t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0 == hc_3019945475) && HEX3DHEX3D_2046820626(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field1, key_3019945474))) {
          result_3019945476 = h_3019945561;
          break BeforeRet;
          }
          
          h_3019945561 = nextTry_1308622883(h_3019945561, (t_3019945473.data).length - 1);
        }
    };
    result_3019945476 = subInt(-1, h_3019945561);
  };

  return result_3019945476;

}

function HEX5BHEX5DHEX3D_3019944250(t_3019944253, key_3019944254, val_3019944255) {
    if (((t_3019944253.data).length == 0)) {
    var correctSizeHEX60gensym369_3019944338 = slotsNeeded_1308622891(32);
    t_3019944253.counter = 0;
    t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3019944343 = [0];
    var index_3019944350 = rawGet_3019940817(t_3019944253, key_3019944254, hc_3019944343, 0);
    if ((0 <= index_3019944350)) {
    t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2 = nimCopy(t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2, val_3019944255, NTI3019898884);
    }
    else {
      if (((t_3019944253.data).length == 0)) {
      var correctSizeHEX60gensym372_3019944513 = slotsNeeded_1308622891(32);
      t_3019944253.counter = 0;
      t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3019944518(t_3019944253)) {
      enlarge_3019944775(t_3019944253);
      index_3019944350 = rawGetKnownHC_3019945470(t_3019944253, key_3019944254, hc_3019944343[0]);
      }
      
      index_3019944350 = subInt(-1, index_3019944350);
      rawInsert_3019945211(t_3019944253, t_3019944253, "data", key_3019944254, val_3019944255, hc_3019944343[0], index_3019944350);
      t_3019944253.counter = addInt(t_3019944253.counter, 1);
    }
    

  
}

function hasKey_3019945990(t_3019945993, key_3019945994) {
  var result_3019945995 = false;

    var hc_3019945996 = [0];
    result_3019945995 = (0 <= rawGet_3019941324(t_3019945993, key_3019945994, hc_3019945996, 0));

  return result_3019945995;

}

function contains_3019945984(t_3019945987, key_3019945988) {
  var result_3019945989 = false;

  BeforeRet: {
    result_3019945989 = hasKey_3019945990(t_3019945987, key_3019945988);
    break BeforeRet;
  };

  return result_3019945989;

}

function mustRehash_3019946423(t_3019946425) {
  var result_3019946426 = false;

    if (!((t_3019946425.counter < (t_3019946425.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019946426 = ((mulInt((t_3019946425.data).length, 2) < mulInt(t_3019946425.counter, 3)) || (subInt((t_3019946425.data).length, t_3019946425.counter) < 4));

  return result_3019946426;

}

function rawInsert_3019947116(t_3019947120, data_3019947121, data_3019947121_Idx, key_3019947122, val_3019947123, hc_3019947124, h_3019947125) {
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1 = nimCopy(data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1, key_3019947122, NTI3036676204);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field2 = nimCopy(null, val_3019947123, NTI3019898888);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field0 = hc_3019947124;

  
}

function enlarge_3019946680(t_3019946683) {
    var n_3019946686 = [];
    n_3019946686 = new Array(chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647) ; ++i) { n_3019946686[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019946683.data; t_3019946683.data = n_3019946686; n_3019946686 = Temporary1;    Label2: {
      var i_3019946784 = 0;
      var colontmp__2969567451 = 0;
      colontmp__2969567451 = (n_3019946686).length - 1;
      var res_2969567452 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567452 <= colontmp__2969567451)) break Label4;
            i_3019946784 = res_2969567452;
            var eh_3019946865 = n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019946865)) {
            var j_3019946869 = (eh_3019946865 & (t_3019946683.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019946683.data[chckIndx(j_3019946869, 0, (t_3019946683.data).length - 1)].Field0)) break Label6;
                  j_3019946869 = nextTry_1308622883(j_3019946869, (t_3019946683.data).length - 1);
                }
            };
            rawInsert_3019947116(t_3019946683, t_3019946683, "data", n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field1, n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field2, eh_3019946865, j_3019946869);
            }
            
            res_2969567452 = addInt(res_2969567452, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019947366(t_3019947369, key_3019947370, hc_3019947371) {
  var result_3019947372 = 0;

  BeforeRet: {
    if (((t_3019947369.data).length == 0)) {
    result_3019947372 = -1;
    break BeforeRet;
    }
    
    var h_3019947457 = (hc_3019947371 & (t_3019947369.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0)) break Label2;
          if (((t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0 == hc_3019947371) && HEX3DHEX3D_3019908680(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field1, key_3019947370))) {
          result_3019947372 = h_3019947457;
          break BeforeRet;
          }
          
          h_3019947457 = nextTry_1308622883(h_3019947457, (t_3019947369.data).length - 1);
        }
    };
    result_3019947372 = subInt(-1, h_3019947457);
  };

  return result_3019947372;

}

function HEX5BHEX5DHEX3D_3019946155(t_3019946158, key_3019946159, val_3019946160) {
    if (((t_3019946158.data).length == 0)) {
    var correctSizeHEX60gensym381_3019946243 = slotsNeeded_1308622891(32);
    t_3019946158.counter = 0;
    t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019946248 = [0];
    var index_3019946255 = rawGet_3019941324(t_3019946158, key_3019946159, hc_3019946248, 0);
    if ((0 <= index_3019946255)) {
    t_3019946158.data[chckIndx(index_3019946255, 0, (t_3019946158.data).length - 1)].Field2 = nimCopy(null, val_3019946160, NTI3019898888);
    }
    else {
      if (((t_3019946158.data).length == 0)) {
      var correctSizeHEX60gensym384_3019946418 = slotsNeeded_1308622891(32);
      t_3019946158.counter = 0;
      t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019946423(t_3019946158)) {
      enlarge_3019946680(t_3019946158);
      index_3019946255 = rawGetKnownHC_3019947366(t_3019946158, key_3019946159, hc_3019946248[0]);
      }
      
      index_3019946255 = subInt(-1, index_3019946255);
      rawInsert_3019947116(t_3019946158, t_3019946158, "data", key_3019946159, val_3019946160, hc_3019946248[0], index_3019946255);
      t_3019946158.counter = addInt(t_3019946158.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3019947888(t_3019947891, key_3019947892) {
  var result_3019947893 = null;
  var result_3019947893_Idx = 0;

    var hcHEX60gensym22_3019947894 = [0];
    var indexHEX60gensym22_3019947901 = rawGet_3019941324(t_3019947891, key_3019947892, hcHEX60gensym22_3019947894, 0);
    if ((0 <= indexHEX60gensym22_3019947901)) {
    result_3019947893 = t_3019947891.data[chckIndx(indexHEX60gensym22_3019947901, 0, (t_3019947891.data).length - 1)]; result_3019947893_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019947892);
    }
    

  return [result_3019947893, result_3019947893_Idx];

}

function del_3019948061(t_3019948064, key_3019948065) {
    var hc_3019948066 = [0];
    var i_3019948073 = rawGet_3019940162(t_3019948064, key_3019948065, hc_3019948066, 0);
    var mskHEX60gensym36_3019948077 = (t_3019948064.data).length - 1;
    if ((0 <= i_3019948073)) {
    t_3019948064.counter = subInt(t_3019948064.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019948084 = i_3019948073;
            var rHEX60gensym36_3019948085 = jHEX60gensym36_3019948084;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 = 0;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1 = nimCopy(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898985);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019948073 = (addInt(i_3019948073, 1) & mskHEX60gensym36_3019948077);
                  if (isEmpty_1308622877(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019948085 = (t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 & mskHEX60gensym36_3019948077);
                  if (!(((((rHEX60gensym36_3019948085 <= i_3019948073) && (jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085)) || ((jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085) && (i_3019948073 < jHEX60gensym36_3019948084))) || ((i_3019948073 < jHEX60gensym36_3019948084) && (rHEX60gensym36_3019948085 <= i_3019948073))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)] = nimCopy(t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)], t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)], NTI3019898997);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3019899459(ctx_3019899460, node_3019899461) {
      var Temporary4;
      var Temporary17;
      var Temporary20;
      var Temporary21;
      var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
        var Temporary28;
      var Temporary30;
                  var Temporary35;
                    var Temporary36;
                  var Temporary37;
                  var Temporary38;
                var Temporary40;
                var Temporary41;
      var Temporary42;
      var Temporary45;
      var Temporary49;
      var Temporary51;
                var Temporary61;
        var Temporary62;
        var Temporary65;
        var Temporary67;
            var Temporary72;

  var result_3019948919 = null;

  BeforeRet: {
    var logQueryHEX60gensym404_3019948921 = (ctx_3019899460.enableLogging || ctx_3019899460.enableQueryLogging);
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym404_3019948921) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899461) || []));
    }
    
    try {
    var key_3019948932 = nimCopy(null, getTypeKey_3019913206(ctx_3019899460, getItem_3019906357(node_3019899461)), NTI3036676204);
    if (contains_3019940149(ctx_3019899460.diagnosticsPerQuery, key_3019948932)) {
    Label3: {
      var idHEX60gensym405_3019949110 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567325 = [];
      colontmp__2969567325 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899460.diagnosticsPerQuery, key_3019948932), Temporary4)[0][Temporary4[1]];
      var i_2969567327 = 0;
      var L_2969567328 = (colontmp__2969567325).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567327 < L_2969567328)) break Label6;
            idHEX60gensym405_3019949110 = colontmp__2969567325[chckIndx(i_2969567327, 0, (colontmp__2969567325).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949110).queries, key_3019948932);
            i_2969567327 = addInt(i_2969567327, 1);
            if (!(((colontmp__2969567325).length == L_2969567328))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym405_3019949268 = [];
    var idsHEX60gensym405_3019949273 = [];
    try {
    Label8: {
      var expr_3019950075 = node_3019899461;
      var pos_3019950076 = 0;
      var _ = pos_3019950076;
      if ((expr_3019950075.kind == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3019899461.text);
      result_3019948919 = intType_3087008169();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      var Temporary10 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary10);;
      var fmtRes_3019950095 = mnewString(0);
      fmtRes_3019950095.push.apply(fmtRes_3019950095, [78,117,109,98,101,114,32,108,105,116,101,114,97,108,32,105,115,32,110,111,116,32,118,97,108,105,100,32,111,114,32,111,117,116,115,105,100,101,32,111,102,32,114,97,110,103,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950095, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3019950075.kind == 3)) {
      result_3019948919 = stringType_3087008171();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 12)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 11)) {
      if ((len_3003121752(node_3019899461) < 3)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var params_3019950112 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      recordDependency_3019906144(ctx_3019899460, getItem_3019906357(params_3019950112), -1);
      var returnTypeNode_3019950113 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var paramTypes_3019950118 = [];
      var ok_3019950119 = true;
      Label11: {
        var param_3019950123 = null;
        var i_2969567338 = 0;
        var L_2969567339 = (params_3019950112.children).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567338 < L_2969567339)) break Label13;
              param_3019950123 = params_3019950112.children[chckIndx(i_2969567338, 0, (params_3019950112.children).length - 1)];
              Label14: {
                var paramType_3019950124 = computeType_3019913434(ctx_3019899460, param_3019950123, true);
                if ((paramType_3019950124.kind == 0)) {
                ok_3019950119 = false;
                break Label14;
                }
                
                paramTypes_3019950118.push(paramType_3019950124);;
              };
              i_2969567338 = addInt(i_2969567338, 1);
              if (!(((params_3019950112.children).length == L_2969567339))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3019950133 = computeType_3019913434(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeType_3019950133.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3019950133.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary15);;
      var fmtRes_3019950150 = [mnewString(0)];
      fmtRes_3019950150[0].push.apply(fmtRes_3019950150[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950150, 0, returnTypeType_3019950133, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950150[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var returnTypeValue_3019950160 = computeValue_3019916562(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeValue_3019950160.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3019950160.kind == 6))) {
      var Temporary16 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary16);;
      var fmtRes_3019950177 = [mnewString(0)];
      fmtRes_3019950177[0].push.apply(fmtRes_3019950177[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950177, 0, returnTypeValue_3019950160, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950177[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary17 = returnTypeValue_3019950160;
      if (ConstSet69[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var returnType_3019950187 = Temporary17.typ;
      result_3019948919 = newFunctionType_3087008173(paramTypes_3019950118, returnType_3019950187);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 8)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      var Temporary18 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary18);;
      var fmtRes_3019950200 = mnewString(0);
      fmtRes_3019950200.push.apply(fmtRes_3019950200, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950200, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var function_3019950205 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var functionType_3019950206 = computeType_3019913434(ctx_3019899460, function_3019950205, true);
      if ((functionType_3019950206.kind == 0)) {
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3019950206.kind == 4))) {
      var Temporary19 = nimCopy(null, function_3019950205.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary19);;
      var fmtRes_3019950223 = [mnewString(0)];
      fmtRes_3019950223[0].push.apply(fmtRes_3019950223[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3019948837(fmtRes_3019950223, 0, functionType_3019950206, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950223[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3019950233 = subInt(len_3003121752(node_3019899461), 1);
      var Temporary22 = functionType_3019950206;
      if (ConstSet70[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
      if (!(0 < (Temporary22.paramTypes).length)) Temporary21 = false; else {        var Temporary23 = functionType_3019950206;
        if (ConstSet77[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        var Temporary24 = functionType_3019950206;
        if (ConstSet78[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI3087007747)); }
        Temporary21 = HEX3DHEX3D_3087008313((Temporary25 = Temporary23.paramTypes, Temporary25)[chckIndx((Temporary24.paramTypes).length - 1, 0, (Temporary25).length - 1)], anyType_3087008188(true));      }      if (!Temporary21) Temporary20 = false; else {        var Temporary26 = functionType_3019950206;
        if (ConstSet79[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI3087007747)); }
        Temporary20 = (subInt((Temporary26.paramTypes).length, 1) <= numArgs_3019950233);      }      var isValidOpenAnyCall_3019950243 = Temporary20;
        var Temporary28 = functionType_3019950206;
        if (ConstSet80[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI3087007747)); }
        if (!!((numArgs_3019950233 == (Temporary28.paramTypes).length))) Temporary27 = false; else {          Temporary27 = !(isValidOpenAnyCall_3019950243);        }      if (Temporary27) {
      var Temporary29 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary29);;
      var fmtRes_3019950255 = [mnewString(0)];
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary30 = functionType_3019950206;
      if (ConstSet81[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007747)); }
      formatValue_2701131945(fmtRes_3019950255, 0, (Temporary30.paramTypes).length, []);
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [32,103,111,116,32]);;
      formatValue_2701131945(fmtRes_3019950255, 0, numArgs_3019950233, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950255[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3019950273 = true;
      Label31: {
        var i_3019950278 = 0;
        var res_2969567343 = 1;
        Label32: {
            Label33: while (true) {
            if (!(res_2969567343 <= numArgs_3019950233)) break Label33;
              i_3019950278 = res_2969567343;
              Label34: {
                var argType_3019950279 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278), true);
                if ((argType_3019950279.kind == 0)) {
                allArgsOk_3019950273 = false;
                break Label34;
                }
                
                  if (!isValidOpenAnyCall_3019950243) Temporary35 = false; else {                    var Temporary36 = functionType_3019950206;
                    if (ConstSet82[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                    Temporary35 = ((Temporary36.paramTypes).length - 1 < i_3019950278);                  }                if (Temporary35) {
                break Label34;
                }
                
                  var Temporary37 = functionType_3019950206;
                  if (ConstSet83[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008313(argType_3019950279, (Temporary38 = Temporary37.paramTypes, Temporary38)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary38).length - 1)]))) {
                var Temporary39 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278).id, NTI2046820355);
                idsHEX60gensym405_3019949273.push(Temporary39);;
                var fmtRes_3019950295 = [mnewString(0)];
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2701131945(fmtRes_3019950295, 0, i_3019950278, []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary40 = functionType_3019950206;
                if (ConstSet84[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI3087007747)); }
                formatValue_3019948837(fmtRes_3019950295, 0, (Temporary41 = Temporary40.paramTypes, Temporary41)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary41).length - 1)], []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,103,111,116,32]);;
                formatValue_3019948837(fmtRes_3019950295, 0, argType_3019950279, []);
                diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950295[0], NTI33554449)});;
                allArgsOk_3019950273 = false;
                }
                
              };
              res_2969567343 = addInt(res_2969567343, 1);
            }
        };
      };
      if (!(allArgsOk_3019950273)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary42 = functionType_3019950206;
      if (ConstSet85[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI3087007747)); }
      result_3019948919 = Temporary42.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 4)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 5)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950323 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950324 = voidType_3087008167();
      if (!((typeNode_3019950323.kind == 0))) {
      var typeNodeType_3019950329 = computeType_3019913434(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeType_3019950329.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950329.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary43);;
      var fmtRes_3019950346 = [mnewString(0)];
      fmtRes_3019950346[0].push.apply(fmtRes_3019950346[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950346, 0, typeNodeType_3019950329, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950346[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950356 = computeValue_3019916562(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeValue_3019950356.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950356.kind == 6))) {
      var Temporary44 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary44);;
      var fmtRes_3019950373 = [mnewString(0)];
      fmtRes_3019950373[0].push.apply(fmtRes_3019950373[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950373, 0, typeNodeValue_3019950356, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950373[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary45 = typeNodeValue_3019950356;
      if (ConstSet86[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI3087007750)); }
      typ_3019950324 = Temporary45.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950383 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950383.kind == 0))) {
      var valueNodeType_3019950388 = computeType_3019913434(ctx_3019899460, valueNode_3019950383, true);
      if ((valueNodeType_3019950388.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950324.kind == 1)) {
      typ_3019950324 = valueNodeType_3019950388;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950388, typ_3019950324))) {
      var Temporary46 = nimCopy(null, valueNode_3019950383.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary46);;
      var fmtRes_3019950405 = [mnewString(0)];
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, typ_3019950324, []);
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, valueNodeType_3019950388, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950405[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950324;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 6)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950424 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950425 = voidType_3087008167();
      if (!((typeNode_3019950424.kind == 0))) {
      var typeNodeType_3019950430 = computeType_3019913434(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeType_3019950430.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950430.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary47);;
      var fmtRes_3019950447 = [mnewString(0)];
      fmtRes_3019950447[0].push.apply(fmtRes_3019950447[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950447, 0, typeNodeType_3019950430, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950447[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950457 = computeValue_3019916562(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeValue_3019950457.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950457.kind == 6))) {
      var Temporary48 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary48);;
      var fmtRes_3019950474 = [mnewString(0)];
      fmtRes_3019950474[0].push.apply(fmtRes_3019950474[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950474, 0, typeNodeValue_3019950457, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950474[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary49 = typeNodeValue_3019950457;
      if (ConstSet87[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI3087007750)); }
      typ_3019950425 = Temporary49.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950484 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950484.kind == 0))) {
      var valueNodeType_3019950489 = computeType_3019913434(ctx_3019899460, valueNode_3019950484, true);
      if ((valueNodeType_3019950489.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950425.kind == 1)) {
      typ_3019950425 = valueNodeType_3019950489;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950489, typ_3019950425))) {
      var Temporary50 = nimCopy(null, valueNode_3019950484.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary50);;
      var fmtRes_3019950506 = [mnewString(0)];
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, typ_3019950425, []);
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, valueNodeType_3019950489, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950506[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950425;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 1)) {
      var id_3019950525 = nimCopy(null, node_3019899461.reff, NTI2046820355);
      var symbols_3019950526 = computeSymbols_3019922496(ctx_3019899460, node_3019899461, true);
      if (contains_3019950603(symbols_3019950526, id_3019950525)) {
      var symbol_3019951130 = (Temporary51 = HEX5BHEX5D_3019950858(symbols_3019950526, id_3019950525), Temporary51)[0][Temporary51[1]];
      result_3019948919 = computeSymbolType_3019928398(ctx_3019899460, symbol_3019951130, true);
      break BeforeRet;
      }
      
      var Temporary52 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary52);;
      var fmtRes_3019951139 = [mnewString(0)];
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3036676344(fmtRes_3019951139, 0, id_3019950525, []);
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [39]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951139[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 7)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      
      var lastType_3019951153 = null;
      Label53: {
        var child_3019951157 = null;
        var i_2969567346 = 0;
        var L_2969567347 = (node_3019899461.children).length;
        Label54: {
            Label55: while (true) {
            if (!(i_2969567346 < L_2969567347)) break Label55;
              child_3019951157 = node_3019899461.children[chckIndx(i_2969567346, 0, (node_3019899461.children).length - 1)];
              lastType_3019951153 = computeType_3019913434(ctx_3019899460, child_3019951157, true);
              if ((lastType_3019951153.kind == 0)) {
              result_3019948919 = errorType_3087008131();
              break BeforeRet;
              }
              
              i_2969567346 = addInt(i_2969567346, 1);
              if (!(((node_3019899461.children).length == L_2969567347))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3019948919 = lastType_3019951153;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 9)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951166 = true;
      var commonType_3019951169 = [none_3019913415()];
      var index_3019951170 = 0;
      Label56: {
          Label57: while (true) {
          if (!(addInt(index_3019951170, 1) < len_3003121752(node_3019899461))) break Label57;
            Label58: {
              try {
              var condition_3019951175 = HEX5BHEX5D_3003121748(node_3019899461, index_3019951170);
              var trueCase_3019951176 = HEX5BHEX5D_3003121748(node_3019899461, addInt(index_3019951170, 1));
              var conditionType_3019951177 = computeType_3019913434(ctx_3019899460, condition_3019951175, true);
              if ((conditionType_3019951177.kind == 0)) {
              ok_3019951166 = false;
              }
              else {
              if (!((conditionType_3019951177.kind == 3))) {
              var Temporary60 = nimCopy(null, condition_3019951175.id, NTI2046820355);
              idsHEX60gensym405_3019949273.push(Temporary60);;
              var fmtRes_3019951194 = [mnewString(0)];
              fmtRes_3019951194[0].push.apply(fmtRes_3019951194[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3019948837(fmtRes_3019951194, 0, conditionType_3019951177, []);
              diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951194[0], NTI33554449)});;
              ok_3019951166 = false;
              }
              }
              var trueCaseType_3019951204 = computeType_3019913434(ctx_3019899460, trueCase_3019951176, true);
              if ((trueCaseType_3019951204.kind == 0)) {
              ok_3019951166 = false;
              break Label58;
              }
              
              if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(trueCaseType_3019951204, (Temporary61 = get_3019951256(commonType_3019951169[0]), Temporary61)[0][Temporary61[1]]))) {
              commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(trueCaseType_3019951204), NTI3019907400);
              }
              else {
                commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
              }
              
              } finally {
              index_3019951170 = addInt(index_3019951170, 2);
              }
            };
          }
      };
      if (!((modInt(len_3003121752(node_3019899461), 2) == 0))) {
      var falseCaseType_3019951283 = computeType_3019913434(ctx_3019899460, last_3003121922(node_3019899461), true);
      if ((falseCaseType_3019951283.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(falseCaseType_3019951283, (Temporary62 = get_3019951256(commonType_3019951169[0]), Temporary62)[0][Temporary62[1]]))) {
      commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(falseCaseType_3019951283), NTI3019907400);
      }
      else {
        commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
      }
      
      }
      
      if (!(ok_3019951166)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = get_3019951374(commonType_3019951169[0], voidType_3087008167());
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 10)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951395 = true;
      var conditionType_3019951396 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      if ((conditionType_3019951396.kind == 0)) {
      ok_3019951395 = false;
      }
      else {
      if (!((conditionType_3019951396.kind == 3))) {
      var Temporary63 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, 0).id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary63);;
      var fmtRes_3019951413 = [mnewString(0)];
      fmtRes_3019951413[0].push.apply(fmtRes_3019951413[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3019948837(fmtRes_3019951413, 0, conditionType_3019951396, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951413[0], NTI33554449)});;
      ok_3019951395 = false;
      }
      }
      var bodyType_3019951423 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 1), true);
      if ((bodyType_3019951423.kind == 0)) {
      ok_3019951395 = false;
      }
      
      if (ok_3019951395) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019950075.kind == 13)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var target_3019951432 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var value_3019951433 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var targetType_3019951434 = computeType_3019913434(ctx_3019899460, target_3019951432, true);
      if ((targetType_3019951434.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var valueType_3019951439 = computeType_3019913434(ctx_3019899460, value_3019951433, true);
      if ((valueType_3019951439.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008313(targetType_3019951434, valueType_3019951439))) {
      var Temporary64 = nimCopy(null, value_3019951433.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary64);;
      var fmtRes_3019951452 = [mnewString(0)];
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, valueType_3019951439, []);
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [32,116,111,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, targetType_3019951434, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951452[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
        var oHEX60gensym495_3019951469 = computeSymbol_3019919344(ctx_3019899460, target_3019951432, true);
        if (!isSome_3087009356(oHEX60gensym495_3019951469)) Temporary65 = false; else {          var sym_3019951515 = get_3087009376(oHEX60gensym495_3019951469);
          Temporary65 = true;        }      if (Temporary65) {
      if ((sym_3019951515.kind == 1)) {
      var Temporary66 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary66);;
      var fmtRes_3019951528 = [mnewString(0)];
      fmtRes_3019951528[0].push.apply(fmtRes_3019951528[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951528, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951528[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((sym_3019951515.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,57,51,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary67 = sym_3019951515;
        if (ConstSet91[Temporary67.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary67.kind, NTI3087007753)); }
      if (!((Temporary67.node.kind == 6))) {
      var Temporary68 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary68);;
      var fmtRes_3019951559 = [mnewString(0)];
      fmtRes_3019951559[0].push.apply(fmtRes_3019951559[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951559, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951559[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym405_3019949268).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899460.diagnosticsPerQuery, key_3019948932, idsHEX60gensym405_3019949273);
    Label69: {
      var iHEX60gensym405_3019949353 = 0;
      var colontmp__2969567331 = 0;
      colontmp__2969567331 = (idsHEX60gensym405_3019949273).length - 1;
      var res_2969567332 = 0;
      Label70: {
          Label71: while (true) {
          if (!(res_2969567332 <= colontmp__2969567331)) break Label71;
            iHEX60gensym405_3019949353 = res_2969567332;
            var idHEX60gensym405_3019949354 = nimCopy(null, idsHEX60gensym405_3019949273[chckIndx(iHEX60gensym405_3019949353, 0, (idsHEX60gensym405_3019949273).length - 1)], NTI2046820355);
            var diagHEX60gensym405_3019949355 = nimCopy(null, diagnosticsHEX60gensym405_3019949268[chckIndx(iHEX60gensym405_3019949353, 0, (diagnosticsHEX60gensym405_3019949268).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932, []);
            }
            
            var Temporary73 = nimCopy(null, diagHEX60gensym405_3019949355, NTI3019898883);
            (Temporary72 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932), Temporary72)[0][Temporary72[1]].push(Temporary73);;
            res_2969567332 = addInt(res_2969567332, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899460.diagnosticsPerQuery, key_3019948932);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym404_3019948921 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019948919) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019948919;

}

function HEX5BHEX5DHEX3D_3019899766(t_3019899769, key_3019899770, val_3019899771) {
    t_3019899769.set(mapKeyJs_3019899778(key_3019899770), val_3019899771);

  
}

function HEX26_3087008364(x_3087008366, y_3087008367) {
  var result_3087008368 = [];

    result_3087008368 = new Array(chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647) ; ++i) { result_3087008368[i] = 0; }    Label1: {
      var i_3087008386 = 0;
      var colontmp__2969567463 = 0;
      colontmp__2969567463 = subInt((x_3087008366).length, 1);
      var res_2969567464 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567464 <= colontmp__2969567463)) break Label3;
            i_3087008386 = res_2969567464;
            result_3087008368[chckIndx(i_3087008386, 0, (result_3087008368).length - 1)] = x_3087008366[chckIndx(i_3087008386, 0, (x_3087008366).length - 1)];
            res_2969567464 = addInt(res_2969567464, 1);
          }
      };
    };
    Label4: {
      var i_3087008394 = 0;
      var colontmp__2969567467 = 0;
      colontmp__2969567467 = subInt((y_3087008367).length, 1);
      var res_2969567468 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2969567468 <= colontmp__2969567467)) break Label6;
            i_3087008394 = res_2969567468;
            result_3087008368[chckIndx(addInt(i_3087008394, (x_3087008366).length), 0, (result_3087008368).length - 1)] = y_3087008367[chckIndx(i_3087008394, 0, (y_3087008367).length - 1)];
            res_2969567468 = addInt(res_2969567468, 1);
          }
      };
    };

  return result_3087008368;

}

function add_3087008402(x_3087008404, x_3087008404_Idx, y_3087008405) {
    var Temporary1;

    var xl_3087008409 = (x_3087008404[x_3087008404_Idx]).length;
    if (x_3087008404[x_3087008404_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008409, (y_3087008405).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008404[x_3087008404_Idx].length ; i < Temporary1 ; ++i) x_3087008404[x_3087008404_Idx].push(0); }
               else { x_3087008404[x_3087008404_Idx].length = Temporary1; };
    Label2: {
      var i_3087008424 = 0;
      var colontmp__2969567471 = 0;
      colontmp__2969567471 = (y_3087008405).length - 1;
      var res_2969567472 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567472 <= colontmp__2969567471)) break Label4;
            i_3087008424 = res_2969567472;
            x_3087008404[x_3087008404_Idx][chckIndx(addInt(xl_3087008409, i_3087008424), 0, (x_3087008404[x_3087008404_Idx]).length - 1)] = y_3087008405[chckIndx(i_3087008424, 0, (y_3087008405).length - 1)];
            res_2969567472 = addInt(res_2969567472, 1);
          }
      };
    };

  
}

function fingerprint_3087008357(typ_3087008358) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008359 = [[]];

    switch (typ_3087008358.kind) {
    case 4:
      var Temporary1 = typ_3087008358;
      if (ConstSet92[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, HEX26_3087008364([typ_3087008358.kind], fingerprint_3087008357(Temporary1.returnType)), NTI3087008200);
      Label2: {
        var param_3087008401 = null;
        var colontmp__2969567458 = [];
        var Temporary3 = typ_3087008358;
        if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2969567458 = Temporary3.paramTypes;
        var i_2969567459 = 0;
        var L_2969567460 = (colontmp__2969567458).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2969567459 < L_2969567460)) break Label5;
              param_3087008401 = colontmp__2969567458[chckIndx(i_2969567459, 0, (colontmp__2969567458).length - 1)];
              add_3087008402(result_3087008359, 0, fingerprint_3087008357(param_3087008401));
              i_2969567459 = addInt(i_2969567459, 1);
              if (!(((colontmp__2969567458).length == L_2969567460))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008358;
      if (ConstSet94[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind, Temporary6.open], NTI3036676328);
      break;
    default: 
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind], NTI3087008194);
      break;
    }

  return result_3087008359[0];

}

function init_3019899876(result_3019899879, result_3019899879_Idx, capacity_3019899880) {
    result_3019899879[result_3019899879_Idx] = (new Map());

  
}

function getValueKey_3019916331(ctxHEX60gensym99_3019916332, itemIdHEX60gensym99_3019916333) {
  var result_3019916334 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567490 = nimCopy(null, itemIdHEX60gensym99_3019916333, NTI3036676201);
    var colontmp__2969567491 = 1;
    result_3019916334 = nimCopy(result_3019916334, {Field0: nimCopy(null, colontmp__2969567490, NTI3036676201), Field1: colontmp__2969567491}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019916334;

}

function errorValue_3087008442() {
  var result_3087008443 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008443 = nimCopy(result_3087008443, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008443;

}

function HEX5BHEX5D_3154118421(s_3154118425, x_3154118426) {
  var result_3154118427 = [];

    var a_3154118429 = x_3154118426.a;
    var L_3154118435 = addInt(subInt(subInt((s_3154118425).length, x_3154118426.b), a_3154118429), 1);
    result_3154118427 = new Array(chckRange(L_3154118435, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3154118435, 0, 2147483647) ; ++i) { result_3154118427[i] = null; }    Label1: {
      var i_3154118444 = 0;
      var i_2969567493 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567493 < L_3154118435)) break Label3;
            i_3154118444 = i_2969567493;
            result_3154118427[chckIndx(i_3154118444, 0, (result_3154118427).length - 1)] = s_3154118425[chckIndx(addInt(i_3154118444, a_3154118429), 0, (s_3154118425).length - 1)];
            i_2969567493 = addInt(i_2969567493, 1);
          }
      };
    };

  return result_3154118427;

}

function formatValue_3087008590(result_3087008592, result_3087008592_Idx, value_3087008593, specifier_3087008594) {
    formatValue_721420459(result_3087008592, result_3087008592_Idx, HEX24_3003123671(value_3087008593), specifier_3087008594);

  
}

function values_3019907567(t_3019907570) {
  var result_3019907571 = [];

    var iter_3019907576 = t_3019907570.values();
    for (var i in iter_3019907576) {result_3019907571.push(i);}

  return result_3019907571;

}

function hash_3003124022(node_3003124023) {
  var result_3003124024 = 0;

    result_3003124024 = node_3003124023;

  return result_3003124024;

}

function hash_3087008504(x_3087008506) {
  var result_3087008507 = 0;

    result_3087008507 = hashWangYi1_1325400244(x_3087008506);

  return result_3087008507;

}

function hash_3087008266(x_3087008268) {
  var result_3087008269 = 0;

    result_3087008269 = hashWangYi1_1325400244(x_3087008268);

  return result_3087008269;

}

function hash_3087008277(x_3087008279) {
  var result_3087008280 = 0;

    Label1: {
      var a_3087008294 = null;
      var i_2969567507 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567507 < (x_3087008279).length)) break Label3;
            a_3087008294 = x_3087008279[chckIndx(i_2969567507, 0, (x_3087008279).length - 1)];
            result_3087008280 = HEX21HEX26_1325400067(result_3087008280, hash_3087008263(a_3087008294));
            i_2969567507 = addInt(i_2969567507, 1);
          }
      };
    };
    result_3087008280 = HEX21HEX24_1325400082(result_3087008280);

  return result_3087008280;

}

function hash_2701134432(x_2701134434) {
  var result_2701134435 = 0;

    result_2701134435 = hashWangYi1_1325400244((x_2701134434 ? 1 : 0));

  return result_2701134435;

}

function hash_3087008263(typ_3087008264) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008265 = 0;

  BeforeRet: {
    if ((typ_3087008264.mHash == 0)) {
    switch (typ_3087008264.kind) {
    case 4:
      var Temporary2 = typ_3087008264;
      if (ConstSet100[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008264;
      if (ConstSet101[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008266(typ_3087008264.kind) ^ hash_3087008263(Temporary2.returnType)) ^ hash_3087008277(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008264;
      if (ConstSet102[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008266(typ_3087008264.kind) ^ hash_2701134432(Temporary4.open));
      break;
    default: 
      Temporary1 = hash_3087008266(typ_3087008264.kind);
      break;
    }
    typ_3087008264.mHash = Temporary1;
    }
    
    result_3087008265 = typ_3087008264.mHash;
    break BeforeRet;
  };

  return result_3087008265;

}

function hash_3087008501(value_3087008502) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008503 = 0;

  BeforeRet: {
    switch (value_3087008502.kind) {
    case 0:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008502;
      if (ConstSet97[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008502;
      if (ConstSet98[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008503 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008502;
      if (ConstSet99[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008503 = hash_3003124022(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008502;
      if (ConstSet103[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008503 = hash_3087008263(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008503;

}

function hash_3087008735(x_3087008737) {
  var result_3087008738 = 0;

    Label1: {
      var a_3087008752 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567503 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567503 < (x_3087008737).length)) break Label3;
            a_3087008752 = x_3087008737[chckIndx(i_2969567503, 0, (x_3087008737).length - 1)];
            result_3087008738 = HEX21HEX26_1325400067(result_3087008738, hash_3087008501(a_3087008752));
            i_2969567503 = addInt(i_2969567503, 1);
          }
      };
    };
    result_3087008738 = HEX21HEX24_1325400082(result_3087008738);

  return result_3087008738;

}

function hash_3087008753(x_3087008755) {
  var result_3087008756 = 0;

    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_1325400236(x_3087008755.val));
    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_2701134432(x_3087008755.has));
    result_3087008756 = HEX21HEX24_1325400082(result_3087008756);

  return result_3087008756;

}

function hash_3087008732(fec_3087008733) {
  var result_3087008734 = 0;

  BeforeRet: {
    if ((fec_3087008733.mHash == 0)) {
    fec_3087008733.mHash = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_3003124022(fec_3087008733.node), hash_3087008735(fec_3087008733.arguments)), hash_3087008753(fec_3087008733.maxLoopIterations));
    fec_3087008733.mHash = HEX21HEX24_1325400082(result_3087008734);
    }
    
    result_3087008734 = fec_3087008733.mHash;
    break BeforeRet;
  };

  return result_3087008734;

}

function HEX3DHEX3D_3087008521(a_3087008522, b_3087008523) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008524 = false;

  BeforeRet: {
    if (!((a_3087008522.kind == b_3087008523.kind))) {
    result_3087008524 = false;
    break BeforeRet;
    }
    
    switch (a_3087008522.kind) {
    case 0:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008522;
      if (ConstSet104[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008523;
      if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008524 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008522;
      if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008523;
      if (ConstSet107[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008524 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008522;
      if (ConstSet108[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008523;
      if (ConstSet109[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008524 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008522;
      if (ConstSet110[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008523;
      if (ConstSet111[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008524 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008522;
      if (ConstSet112[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008523;
      if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008524 = HEX3DHEX3D_3087008313(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008524;

}

function HEX3DHEX3D_3087008793(x_3087008795, y_3087008796) {
  var result_3087008797 = false;

  BeforeRet: {
    var sameObject_3087008804 = false;
    sameObject_3087008804 = x_3087008795 === y_3087008796
    if (sameObject_3087008804) {
    result_3087008797 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008795).length == (y_3087008796).length))) {
    result_3087008797 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008818 = 0;
      var colontmp__2969567510 = 0;
      colontmp__2969567510 = subInt((x_3087008795).length, 1);
      var res_2969567511 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567511 <= colontmp__2969567510)) break Label3;
            i_3087008818 = res_2969567511;
            if (!(HEX3DHEX3D_3087008521(x_3087008795[chckIndx(i_3087008818, 0, (x_3087008795).length - 1)], y_3087008796[chckIndx(i_3087008818, 0, (y_3087008796).length - 1)]))) {
            result_3087008797 = false;
            break BeforeRet;
            }
            
            res_2969567511 = addInt(res_2969567511, 1);
          }
      };
    };
    result_3087008797 = true;
    break BeforeRet;
  };

  return result_3087008797;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008881(a_3087008883, b_3087008884) {
  var result_3087008885 = false;

    result_3087008885 = (((isSome_1191185117(a_3087008883) && isSome_1191185117(b_3087008884)) && (a_3087008883.val == b_3087008884.val)) || (isNone_1191185194(a_3087008883) && isNone_1191185194(b_3087008884)));

  return result_3087008885;

}

function HEX3DHEX3D_3087008776(a_3087008777, b_3087008778) {
  var result_3087008779 = false;

  BeforeRet: {
    if ((a_3087008777 == null)) {
    result_3087008779 = (b_3087008778 == null);
    break BeforeRet;
    }
    
    if ((b_3087008778 == null)) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008777.node == b_3087008778.node))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008793(a_3087008777.arguments, b_3087008778.arguments))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008881(a_3087008777.maxLoopIterations, b_3087008778.maxLoopIterations))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    result_3087008779 = true;
    break BeforeRet;
  };

  return result_3087008779;

}

function getItem_3019907554(selfHEX60gensym89_3019907555) {
  var result_3019907556 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)) {
    selfHEX60gensym89_3019907555.id = nimCopy(selfHEX60gensym89_3019907555.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,57,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567513 = nimCopy(null, selfHEX60gensym89_3019907555.id, NTI2046820355);
    var colontmp__2969567514 = 3;
    result_3019907556 = nimCopy(result_3019907556, {Field0: nimCopy(null, colontmp__2969567513, NTI2046820355), Field1: colontmp__2969567514}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907556;

}

function HEX5BHEX5DHEX3D_3019907734(t_3019907737, key_3019907738, val_3019907739) {
    t_3019907737.set(mapKeyJs_3019899588(key_3019907738), val_3019907739);

  
}

function getOrCreateFunctionExecutionContext_3019907563(ctxHEX60gensym90_3019907564, dataHEX60gensym90_3019907565) {
  var result_3019907566 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym90_3019907599 = null;
      var colontmp__2969567496 = [];
      colontmp__2969567496 = values_3019907567(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext);
      var i_2969567498 = 0;
      var L_2969567499 = (colontmp__2969567496).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567498 < L_2969567499)) break Label3;
            existingHEX60gensym90_3019907599 = colontmp__2969567496[chckIndx(i_2969567498, 0, (colontmp__2969567496).length - 1)];
            if (((hash_3087008732(existingHEX60gensym90_3019907599) == hash_3087008732(dataHEX60gensym90_3019907565)) && HEX3DHEX3D_3087008776(existingHEX60gensym90_3019907599, dataHEX60gensym90_3019907565))) {
            result_3019907566 = existingHEX60gensym90_3019907599;
            break BeforeRet;
            }
            
            i_2969567498 = addInt(i_2969567498, 1);
            if (!(((colontmp__2969567496).length == L_2969567499))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym90_3019907600 = getItem_3019907554(dataHEX60gensym90_3019907565);
    var keyHEX60gensym90_3019907601 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym90_3019907600, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym90_3019907564.depGraph.changed, keyHEX60gensym90_3019907601, ctxHEX60gensym90_3019907564.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext, itemHEX60gensym90_3019907600, dataHEX60gensym90_3019907565);
    result_3019907566 = dataHEX60gensym90_3019907565;
    break BeforeRet;
  };

  return result_3019907566;

}

function mapKeyJs_3019902286(key_3019902288) {
  var result_3019902289 = null;

    let temp = key_3019902288;
    let newId = getIdFunctionExecutionContextJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902289;

}

function contains_3019933795(t_3019933798, key_3019933799) {
  var result_3019933800 = false;

    result_3019933800 = t_3019933798.has(mapKeyJs_3019902286(key_3019933799));

  return result_3019933800;

}

function addQuoted_3087008638(s_3087008640, s_3087008640_Idx, x_3087008641) {
    s_3087008640[s_3087008640_Idx].push.apply(s_3087008640[s_3087008640_Idx], HEX24_3087008498(x_3087008641));;

  
}

function collectionToString_3087008604(x_3087008606, prefix_3087008607, separator_3087008608, suffix_3087008609) {
  var result_3087008610 = [[]];

    result_3087008610[0] = nimCopy(null, prefix_3087008607, NTI33554449);
    var firstElement_3087008611 = true;
    Label1: {
      var value_3087008634 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567517 = 0;
      var L_2969567518 = (x_3087008606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567517 < L_2969567518)) break Label3;
            value_3087008634 = x_3087008606[i_2969567517];
            if (firstElement_3087008611) {
            firstElement_3087008611 = false;
            }
            else {
            result_3087008610[0].push.apply(result_3087008610[0], separator_3087008608);;
            }
            
            addQuoted_3087008638(result_3087008610, 0, value_3087008634);
            i_2969567517 += 1;
            if (!(((x_3087008606).length == L_2969567518))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008610[0].push.apply(result_3087008610[0], suffix_3087008609);;

  return result_3087008610[0];

}

function HEX24_3087008600(x_3087008602) {
  var result_3087008603 = [];

    result_3087008603 = nimCopy(null, collectionToString_3087008604(x_3087008602, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008603;

}

function formatValue_3087008595(result_3087008597, result_3087008597_Idx, value_3087008598, specifier_3087008599) {
    formatValue_721420459(result_3087008597, result_3087008597_Idx, HEX24_3087008600(value_3087008598), specifier_3087008599);

  
}

function HEX24_3087008713(self_3087008715) {
  var result_3087008716 = [[]];

    if (isSome_1191185117(self_3087008715)) {
    result_3087008716[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008716, 0, self_3087008715.val);
    result_3087008716[0].push.apply(result_3087008716[0], [41]);;
    }
    else {
      result_3087008716[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008716[0];

}

function formatValue_3087008662(result_3087008664, result_3087008664_Idx, value_3087008665, specifier_3087008666) {
    formatValue_721420459(result_3087008664, result_3087008664_Idx, HEX24_3087008713(value_3087008665), specifier_3087008666);

  
}

function HEX24_3087008582(fec_3087008583) {
  var result_3087008584 = [];

  BeforeRet: {
    var fmtRes_3087008589 = [mnewString(0)];
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [67,97,108,108,32]);;
    formatValue_3087008590(fmtRes_3087008589, 0, fec_3087008583.node, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [40]);;
    formatValue_3087008595(fmtRes_3087008589, 0, fec_3087008583.arguments, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008662(fmtRes_3087008589, 0, fec_3087008583.maxLoopIterations, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [41]);;
    result_3087008584 = nimCopy(null, fmtRes_3087008589[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008584;

}

function HEX5BHEX5D_3019933889(t_3019933892, key_3019933893) {
  var result_3019933894 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019933894 = nimCopy(result_3019933894, t_3019933892.get(mapKeyJs_3019902286(key_3019933893)), NTI3087007751);

  return result_3019933894;

}

function computeFunctionExecution_3019933908(ctxHEX60gensym125_3019933909, inputHEX60gensym125_3019933910) {
    var Temporary3;
    var Temporary5;

  var result_3019933911 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym125_3019933992 = getItem_3019907554(inputHEX60gensym125_3019933910);
    var keyHEX60gensym125_3019933993 = {Field0: nimCopy(null, itemHEX60gensym125_3019933992, NTI3036676201), Field1: 7};
    recordDependency_3019906144(ctxHEX60gensym125_3019933909, itemHEX60gensym125_3019933992, 7);
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3036676336(itemHEX60gensym125_3019933992));
    }
    
    force_3019908046(ctxHEX60gensym125_3019933909, keyHEX60gensym125_3019933993);
    if (!(contains_3019933795(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008582(inputHEX60gensym125_3019933910) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019933911 = nimCopy(result_3019933911, HEX5BHEX5D_3019933889(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym125_3019933909.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym125_3019933909.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym125_3019933909.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019933911;

}

function contains_3019931040(t_3019931043, key_3019931044) {
  var result_3019931045 = false;

    result_3019931045 = t_3019931043.has(mapKeyJs_3019901554(key_3019931044));

  return result_3019931045;

}

function HEX5BHEX5D_3019931134(t_3019931137, key_3019931138) {
  var result_3019931139 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019931139 = nimCopy(result_3019931139, t_3019931137.get(mapKeyJs_3019901554(key_3019931138)), NTI3087007751);

  return result_3019931139;

}

function computeSymbolValue_3019931153(ctxHEX60gensym121_3019931154, inputHEX60gensym121_3019931155, recordDependencyHEX60gensym121_3019931156) {
    var Temporary3;
    var Temporary5;

  var result_3019931157 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym121_3019931238 = getItem_3019907143(inputHEX60gensym121_3019931155);
    var keyHEX60gensym121_3019931239 = {Field0: nimCopy(null, itemHEX60gensym121_3019931238, NTI3036676201), Field1: 6};
    if (recordDependencyHEX60gensym121_3019931156) {
    recordDependency_3019906144(ctxHEX60gensym121_3019931154, itemHEX60gensym121_3019931238, 6);
    }
    
    var colorHEX60gensym121_3019931240 = nodeColor_3036678426(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, 0);
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym121_3019931240, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym121_3019931238));
    }
    
    if ((colorHEX60gensym121_3019931240 == 2)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    }
    else {
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym121_3019931240 == 0)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239, true) == 0)) {
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym121_3019931154.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
      if (false) {
      markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
      }
      
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
      if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym121_3019931240 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym121_3019931154.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym121_3019931154.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym121_3019931154.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019931157;

}

function voidValue_3087008471() {
  var result_3087008472 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008472 = nimCopy(result_3087008472, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008472;

}

function some_3019916528(val_3019916530) {
  var result_3019916531 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916531.has = true;
    result_3019916531.val = nimCopy(result_3019916531.val, val_3019916530, NTI3087007751);

  return result_3019916531;

}

function none_3019916536() {
  var result_3019916543 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3019916543;

}

function none_3019916533() {
  var result_3019916535 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916535 = nimCopy(result_3019916535, none_3019916536(), NTI3019909216);

  return result_3019916535;

}

function getValue_3019916335(ctxHEX60gensym100_3019916336, inputHEX60gensym100_3019916337) {
  var result_3019916343 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3019916420(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)) {
    result_3019916343 = nimCopy(result_3019916343, some_3019916528(HEX5BHEX5D_3019916514(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)), NTI3019909216);
    break BeforeRet;
    }
    
    result_3019916343 = nimCopy(result_3019916343, none_3019916533(), NTI3019909216);
    break BeforeRet;
  };

  return result_3019916343;

}

function isSome_3154116640(self_3154116642) {
  var result_3154116643 = false;

    result_3154116643 = self_3154116642.has;

  return result_3154116643;

}

function isNone_3154116665(self_3154116667) {
  var result_3154116668 = false;

    result_3154116668 = !(self_3154116667.has);

  return result_3154116668;

}

function get_3154116657(self_3154116659) {
  var result_3154116660 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3154116665(self_3154116659)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3154116660 = self_3154116659.val;

  return result_3154116660;

}

function newAstFunctionValue_3087008494(node_3087008495, rev_3087008496) {
  var result_3087008497 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008497 = nimCopy(result_3087008497, {kind: 5, node: node_3087008495, rev: rev_3087008496, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008497;

}

function computeValueImpl_3019899462(ctx_3019899463, node_3019899464) {
      var Temporary4;
      var Temporary9;
        var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;
      var Temporary22;
        var Temporary23;
        var Temporary24;
      var Temporary25;
            var Temporary29;

  var result_3019951581 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym503_3019951583 = (ctx_3019899463.enableLogging || ctx_3019899463.enableQueryLogging);
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym503_3019951583) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899464) || []));
    }
    
    try {
    var key_3019951594 = nimCopy(null, getValueKey_3019916331(ctx_3019899463, getItem_3019906357(node_3019899464)), NTI3036676204);
    if (contains_3019940149(ctx_3019899463.diagnosticsPerQuery, key_3019951594)) {
    Label3: {
      var idHEX60gensym504_3019951772 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567475 = [];
      colontmp__2969567475 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899463.diagnosticsPerQuery, key_3019951594), Temporary4)[0][Temporary4[1]];
      var i_2969567476 = 0;
      var L_2969567477 = (colontmp__2969567475).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567476 < L_2969567477)) break Label6;
            idHEX60gensym504_3019951772 = colontmp__2969567475[chckIndx(i_2969567476, 0, (colontmp__2969567475).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019951772).queries, key_3019951594);
            i_2969567476 = addInt(i_2969567476, 1);
            if (!(((colontmp__2969567475).length == L_2969567477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym504_3019951930 = [];
    var idsHEX60gensym504_3019951935 = [];
    try {
    Label8: {
      var expr_3019952737 = node_3019899464;
      var pos_3019952738 = 0;
      var _ = pos_3019952738;
      if ((expr_3019952737.kind == 2)) {
++excHandler;
      try {
      Temporary9 = nsuParseInt(node_3019899464.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3019952745 = Temporary9;
      result_3019951581 = nimCopy(result_3019951581, {kind: 3, intValue: value_3019952745, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 3)) {
      result_3019951581 = nimCopy(result_3019951581, {kind: 2, stringValue: nimCopy(null, node_3019899464.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 8)) {
      var function_3019952754 = HEX5BHEX5D_3003121748(node_3019899464, 0);
      var functionValue_3019952755 = computeValue_3019916562(ctx_3019899463, function_3019952754, true);
      if ((functionValue_3019952755.kind == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3019952764 = [];
      Label11: {
        var arg_3019952783 = null;
        var colontmp__2969567485 = [];
        colontmp__2969567485 = HEX5BHEX5D_3154118421(node_3019899464.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2969567486 = 0;
        var L_2969567487 = (colontmp__2969567485).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567486 < L_2969567487)) break Label13;
              arg_3019952783 = colontmp__2969567485[chckIndx(i_2969567486, 0, (colontmp__2969567485).length - 1)];
              var value_3019952784 = computeValue_3019916562(ctx_3019899463, arg_3019952783, true);
              if ((value_3019952784.kind == 0)) {
              result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary14 = nimCopy(null, value_3019952784, NTI3087007751);
              args_3019952764.push(Temporary14);;
              i_2969567486 = addInt(i_2969567486, 1);
              if (!(((colontmp__2969567485).length == L_2969567487))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3019952755.kind == 4)) {
        var Temporary15 = functionValue_3019952755;
        if (ConstSet95[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI3087007750)); }
      if ((Temporary15.impl == null)) {
      var fmtRes_3019952805 = [mnewString(0)];
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3036676344(fmtRes_3019952805, 0, function_3019952754.id, []);
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [39,32,97,116,32]);;
      formatValue_3087008590(fmtRes_3019952805, 0, node_3019899464, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019952805[0], NTI33554449)]);
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary16 = functionValue_3019952755;
      if (ConstSet96[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      result_3019951581 = nimCopy(result_3019951581, Temporary16.impl(args_3019952764), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3019952755.kind == 5)) {
      var Temporary17 = functionValue_3019952755;
      if (ConstSet114[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var fec_3019952820 = getOrCreateFunctionExecutionContext_3019907563(ctx_3019899463, {node: Temporary17.node, arguments: nimCopy(null, args_3019952764, NTI3019930420), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3019951581 = nimCopy(result_3019951581, computeFunctionExecution_3019933908(ctx_3019899463, fec_3019952820), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 7)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 4)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, HEX5BHEX5D_3003121748(node_3019899464, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 1)) {
      var id_3019952833 = nimCopy(null, node_3019899464.reff, NTI2046820355);
      var symbols_3019952834 = computeSymbols_3019922496(ctx_3019899463, node_3019899464, true);
      if (contains_3019950603(symbols_3019952834, id_3019952833)) {
      var symbol_3019953001 = (Temporary18 = HEX5BHEX5D_3019950858(symbols_3019952834, id_3019952833), Temporary18)[0][Temporary18[1]];
      result_3019951581 = nimCopy(result_3019951581, computeSymbolValue_3019931153(ctx_3019899463, symbol_3019953001, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 9)) {
      if ((len_3003121752(node_3019899464) < 2)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3019953006 = 0;
      Label19: {
          Label20: while (true) {
          if (!(addInt(index_3019953006, 1) < len_3003121752(node_3019899464))) break Label20;
            try {
            var condition_3019953011 = HEX5BHEX5D_3003121748(node_3019899464, index_3019953006);
            var trueCase_3019953012 = HEX5BHEX5D_3003121748(node_3019899464, addInt(index_3019953006, 1));
            var conditionValue_3019953013 = computeValue_3019916562(ctx_3019899463, condition_3019953011, true);
            if ((conditionValue_3019953013.kind == 0)) {
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.kind == 3))) {
            var fmtRes_3019953026 = [mnewString(0)];
            fmtRes_3019953026[0].push.apply(fmtRes_3019953026[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3019953026, 0, conditionValue_3019953013, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953026[0], NTI33554449)]);
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.intValue == 0))) {
            var trueCaseValue_3019953032 = computeValue_3019916562(ctx_3019899463, trueCase_3019953012, true);
            result_3019951581 = nimCopy(result_3019951581, trueCaseValue_3019953032, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3019953006 = addInt(index_3019953006, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3019899464), 2) == 0))) {
      var falseCaseValue_3019953033 = computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true);
      result_3019951581 = nimCopy(result_3019951581, falseCaseValue_3019953033, NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 11)) {
        var oHEX60gensym530_3019953040 = getValue_3019916335(ctx_3019899463, node_3019899464);
        if (!isSome_3154116640(oHEX60gensym530_3019953040)) Temporary24 = false; else {          var value_3019953086 = nimCopy(null, get_3154116657(oHEX60gensym530_3019953040), NTI3087007751);
          Temporary24 = true;        }        if (!Temporary24) Temporary23 = false; else {          Temporary23 = (value_3019953086.kind == 5);        }      if (Temporary23) {
      var Temporary25 = value_3019953086;
      if (ConstSet115[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007750)); }
      Temporary22 = Temporary25.rev;
      }
      else {
      Temporary22 = 0;
      }
      
      var currentRev_3019953091 = Temporary22;
      result_3019951581 = nimCopy(result_3019951581, newAstFunctionValue_3087008494(node_3019899464, addInt(currentRev_3019953091, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym504_3019951930).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899463.diagnosticsPerQuery, key_3019951594, idsHEX60gensym504_3019951935);
    Label26: {
      var iHEX60gensym504_3019952015 = 0;
      var colontmp__2969567480 = 0;
      colontmp__2969567480 = (idsHEX60gensym504_3019951935).length - 1;
      var res_2969567481 = 0;
      Label27: {
          Label28: while (true) {
          if (!(res_2969567481 <= colontmp__2969567480)) break Label28;
            iHEX60gensym504_3019952015 = res_2969567481;
            var idHEX60gensym504_3019952016 = nimCopy(null, idsHEX60gensym504_3019951935[chckIndx(iHEX60gensym504_3019952015, 0, (idsHEX60gensym504_3019951935).length - 1)], NTI2046820355);
            var diagHEX60gensym504_3019952017 = nimCopy(null, diagnosticsHEX60gensym504_3019951930[chckIndx(iHEX60gensym504_3019952015, 0, (diagnosticsHEX60gensym504_3019951930).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594, []);
            }
            
            var Temporary30 = nimCopy(null, diagHEX60gensym504_3019952017, NTI3019898883);
            (Temporary29 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594), Temporary29)[0][Temporary29[1]].push(Temporary30);;
            res_2969567481 = addInt(res_2969567481, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899463.diagnosticsPerQuery, key_3019951594);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym503_3019951583 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019951581) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019951581;

}

function HEX5BHEX5DHEX3D_3019900124(t_3019900127, key_3019900128, val_3019900129) {
    t_3019900127.set(mapKeyJs_3019899778(key_3019900128), val_3019900129);

  
}

function fingerprint_3087008538(value_3087008539) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008540 = [];

  BeforeRet: {
    switch (value_3087008539.kind) {
    case 0:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 1:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008539;
      if (ConstSet116[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, Temporary1.intValue], NTI3036676328);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008539;
      if (ConstSet117[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_1325400491(Temporary2.stringValue)], NTI3036676328);
      break BeforeRet;
      break;
    case 4:
      result_3087008540 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008539;
      if (ConstSet118[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008539;
      if (ConstSet119[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_3003124022(Temporary3.node), Temporary4.rev], NTI3087008384);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008539;
      if (ConstSet120[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, HEX26_3087008364([value_3087008539.kind], fingerprint_3087008357(Temporary5.typ)), NTI3087008200);
      break BeforeRet;
      break;
    }
  };

  return result_3087008540;

}

function init_3019900223(result_3019900226, result_3019900226_Idx, capacity_3019900227) {
    result_3019900226[result_3019900226_Idx] = (new Map());

  
}

function some_3019907120(val_3019907122) {
  var result_3019907123 = ({val: null});

    if (!(!((val_3019907122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019907123.val = val_3019907122;

  return result_3019907123;

}

function HEX5BHEX5DHEX3D_3019907323(t_3019907326, key_3019907327, val_3019907328) {
    t_3019907326.set(mapKeyJs_3019899588(key_3019907327), val_3019907328);

  
}

function newSymbol_3019907758(ctxHEX60gensym91_3019907759, dataHEX60gensym91_3019907760) {
  var result_3019907761 = null;

  BeforeRet: {
    var itemHEX60gensym91_3019907762 = getItem_3019907143(dataHEX60gensym91_3019907760);
    var keyHEX60gensym91_3019907763 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym91_3019907762, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym91_3019907759.depGraph.changed, keyHEX60gensym91_3019907763, ctxHEX60gensym91_3019907759.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907323(ctxHEX60gensym91_3019907759.itemsSymbol, itemHEX60gensym91_3019907762, dataHEX60gensym91_3019907760);
    result_3019907761 = dataHEX60gensym91_3019907760;
    break BeforeRet;
  };

  return result_3019907761;

}

function none_3019907136() {
  var result_3019907142 = ({val: null});

  return result_3019907142;

}

function none_3019907133() {
  var result_3019907135 = ({val: null});

    result_3019907135 = nimCopy(result_3019907135, none_3019907136(), NTI3087008909);

  return result_3019907135;

}

function computeSymbolImpl_3019899465(ctx_3019899466, node_3019899467) {
      var Temporary4;

  var result_3019953098 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym531_3019953100 = (ctx_3019899466.enableLogging || ctx_3019899466.enableQueryLogging);
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym531_3019953100) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899467) || []));
    }
    
    try {
    Label3: {
      var expr_3019953171 = node_3019899467;
      var pos_3019953172 = 0;
      var _ = pos_3019953172;
      if ((expr_3019953171.kind == 1)) {
      var symbols_3019953179 = computeSymbols_3019922496(ctx_3019899466, node_3019899467, true);
      if (contains_3019950603(symbols_3019953179, node_3019899467.reff)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120((Temporary4 = HEX5BHEX5D_3019950858(symbols_3019953179, node_3019899467.reff), Temporary4)[0][Temporary4[1]]), NTI3087008909);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019953171.kind == 4)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 5)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 6)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
        var fmtRes_3019953374 = [mnewString(0)];
        fmtRes_3019953374[0].push.apply(fmtRes_3019953374[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008590(fmtRes_3019953374, 0, node_3019899467, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953374[0], NTI33554449)]);
        result_3019953098 = nimCopy(result_3019953098, none_3019907133(), NTI3087008909);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym531_3019953100 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905491(result_3019953098) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019953098;

}

function HEX5BHEX5DHEX3D_3019900472(t_3019900475, key_3019900476, val_3019900477) {
    t_3019900475.set(mapKeyJs_3019899778(key_3019900476), val_3019900477);

  
}

function fingerprint_3087008948(symbol_3087008949) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008950 = [];

    switch (symbol_3087008949.kind) {
    case 0:
      var Temporary1 = symbol_3087008949;
      if (ConstSet121[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, [hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, hash_2046820630(Temporary1.node.id)], NTI3087008654);
      break;
    case 1:
      var Temporary2 = symbol_3087008949;
      if (ConstSet122[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008949;
      if (ConstSet123[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008949;
      if (ConstSet124[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008949;
      if (ConstSet125[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, HEX26_3087008364(HEX26_3087008364([hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008357(Temporary4.typ)), fingerprint_3087008538(Temporary5.value)), NTI3087008200);
      break;
    }

  return result_3087008950;

}

function fingerprint_3087009342(symbol_3087009347) {
      var Temporary1;

  var result_3087009348 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009351 = nimCopy(null, symbol_3087009347, NTI3087008909);
      if (!isSome_3087009356(oHEX60gensym27_3087009351)) Temporary1 = false; else {        var s_3087009402 = get_3087009376(oHEX60gensym27_3087009351);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009348 = nimCopy(null, fingerprint_3087008948(s_3087009402), NTI3036676200);
    break BeforeRet;
    }
    
    result_3087009348 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009348;

}

function init_3019900571(result_3019900574, result_3019900574_Idx, capacity_3019900575) {
    result_3019900574[result_3019900574_Idx] = (new Map());

  
}

function initTable_3019905097(initialSize_3019905100) {
  var result_3019905101 = ({data: [], counter: 0});

    var correctSizeHEX60gensym154_3019905103 = slotsNeeded_1308622891(chckRange(initialSize_3019905100, 0, 2147483647));
    result_3019905101.counter = 0;
    result_3019905101.data = new Array(chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647) ; ++i) { result_3019905101.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3019905101;

}

function newTable_3019937829(initialSize_3019937832) {
  var result_3019937833 = null;

    result_3019937833 = ({data: [], counter: 0});
    result_3019937833 = nimCopy(result_3019937833, initTable_3019905097(initialSize_3019937832), NTI3087008713);

  return result_3019937833;

}

function none_3003121871() {
  var result_3003121877 = ({val: null});

  return result_3003121877;

}

function none_3003121868() {
  var result_3003121870 = ({val: null});

    result_3003121870 = nimCopy(result_3003121870, none_3003121871(), NTI3003121783);

  return result_3003121870;

}

function some_3003121890(val_3003121892) {
  var result_3003121893 = ({val: null});

    if (!(!((val_3003121892 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121893.val = val_3003121892;

  return result_3003121893;

}

function findWithParentRec_3003123589(node_3003123590, kind_3003123591) {
  var result_3003123593 = ({val: null});

  BeforeRet: {
    if ((node_3003123590.parent == null)) {
    result_3003123593 = nimCopy(result_3003123593, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    if ((node_3003123590.parent.kind == kind_3003123591)) {
    result_3003123593 = nimCopy(result_3003123593, some_3003121890(node_3003123590), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003123593 = nimCopy(result_3003123593, findWithParentRec_3003123589(node_3003123590.parent, kind_3003123591), NTI3003121783);
    break BeforeRet;
  };

  return result_3003123593;

}

function isSome_3003123546(self_3003123548) {
  var result_3003123549 = false;

    result_3003123549 = !((self_3003123548.val == null));

  return result_3003123549;

}

function isNone_3003123574(self_3003123576) {
  var result_3003123577 = false;

    result_3003123577 = (self_3003123576.val == null);

  return result_3003123577;

}

function get_3003123566(self_3003123568) {
  var result_3003123569 = null;

    if (isNone_3003123574(self_3003123568)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003123569 = self_3003123568["val"];

  return result_3003123569;

}

function mustRehash_3019938626(t_3019938628) {
  var result_3019938629 = false;

    if (!((t_3019938628.counter < (t_3019938628.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019938629 = ((mulInt((t_3019938628.data).length, 2) < mulInt(t_3019938628.counter, 3)) || (subInt((t_3019938628.data).length, t_3019938628.counter) < 4));

  return result_3019938629;

}

function rawInsert_3019939319(t_3019939323, data_3019939324, data_3019939324_Idx, key_3019939325, val_3019939326, hc_3019939327, h_3019939328) {
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1 = nimCopy(data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1, key_3019939325, NTI2046820355);
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field2 = val_3019939326;
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field0 = hc_3019939327;

  
}

function enlarge_3019938883(t_3019938886) {
    var n_3019938889 = [];
    n_3019938889 = new Array(chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647) ; ++i) { n_3019938889[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3019938886.data; t_3019938886.data = n_3019938889; n_3019938889 = Temporary1;    Label2: {
      var i_3019938987 = 0;
      var colontmp__2969567559 = 0;
      colontmp__2969567559 = (n_3019938889).length - 1;
      var res_2969567560 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567560 <= colontmp__2969567559)) break Label4;
            i_3019938987 = res_2969567560;
            var eh_3019939068 = n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019939068)) {
            var j_3019939072 = (eh_3019939068 & (t_3019938886.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019938886.data[chckIndx(j_3019939072, 0, (t_3019938886.data).length - 1)].Field0)) break Label6;
                  j_3019939072 = nextTry_1308622883(j_3019939072, (t_3019938886.data).length - 1);
                }
            };
            rawInsert_3019939319(t_3019938886, t_3019938886, "data", n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field1, n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field2, eh_3019939068, j_3019939072);
            }
            
            res_2969567560 = addInt(res_2969567560, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019939569(t_3019939572, key_3019939573, hc_3019939574) {
  var result_3019939575 = 0;

  BeforeRet: {
    if (((t_3019939572.data).length == 0)) {
    result_3019939575 = -1;
    break BeforeRet;
    }
    
    var h_3019939660 = (hc_3019939574 & (t_3019939572.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0)) break Label2;
          if (((t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0 == hc_3019939574) && HEX3DHEX3D_2046820626(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field1, key_3019939573))) {
          result_3019939575 = h_3019939660;
          break BeforeRet;
          }
          
          h_3019939660 = nextTry_1308622883(h_3019939660, (t_3019939572.data).length - 1);
        }
    };
    result_3019939575 = subInt(-1, h_3019939660);
  };

  return result_3019939575;

}

function HEX5BHEX5DHEX3D_3019938028(t_3019938031, key_3019938032, val_3019938033) {
    if (((t_3019938031.data).length == 0)) {
    var correctSizeHEX60gensym329_3019938117 = slotsNeeded_1308622891(32);
    t_3019938031.counter = 0;
    t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3019938122 = [0];
    var index_3019938458 = rawGet_3019938123(t_3019938031, key_3019938032, hc_3019938122, 0);
    if ((0 <= index_3019938458)) {
    t_3019938031.data[chckIndx(index_3019938458, 0, (t_3019938031.data).length - 1)].Field2 = val_3019938033;
    }
    else {
      if (((t_3019938031.data).length == 0)) {
      var correctSizeHEX60gensym334_3019938621 = slotsNeeded_1308622891(32);
      t_3019938031.counter = 0;
      t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3019938626(t_3019938031)) {
      enlarge_3019938883(t_3019938031);
      index_3019938458 = rawGetKnownHC_3019939569(t_3019938031, key_3019938032, hc_3019938122[0]);
      }
      
      index_3019938458 = subInt(-1, index_3019938458);
      rawInsert_3019939319(t_3019938031, t_3019938031, "data", key_3019938032, val_3019938033, hc_3019938122[0], index_3019938458);
      t_3019938031.counter = addInt(t_3019938031.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3019953618(t_3019953621, key_3019953622, val_3019953623) {
    HEX5BHEX5DHEX3D_3019938028(t_3019953621, key_3019953622, val_3019953623);

  
}

function base_3003121758(node_3003121759) {
  var result_3003121760 = null;

  BeforeRet: {
    if ((node_3003121759.parent == null)) {
    result_3003121760 = node_3003121759;
    break BeforeRet;
    }
    
    result_3003121760 = base_3003121758(node_3003121759.parent);
    break BeforeRet;
  };

  return result_3003121760;

}

function len_3019954306(t_3019954309) {
  var result_3019954310 = 0;

    result_3019954310 = t_3019954309.counter;

  return result_3019954310;

}

function computeSymbolsImpl_3019899469(ctx_3019899470, node_3019899471) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3019953413 = null;

    var logQueryHEX60gensym542_3019953415 = (ctx_3019899470.enableLogging || ctx_3019899470.enableQueryLogging);
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym542_3019953415) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899471) || []));
    }
    
    try {
    result_3019953413 = newTable_3019937829(32);
      var oHEX60gensym543_3019953497 = findWithParentRec_3003123589(node_3019899471, 7);
      if (!isSome_3003123546(oHEX60gensym543_3019953497)) Temporary4 = false; else {        var parentInNodeList_3019953543 = get_3003123566(oHEX60gensym543_3019953497);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3019953543.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3019953548 = computeSymbols_3019922496(ctx_3019899470, parentInNodeList_3019953543.parent, true);
    Label5: {
      var id_3019953553 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3019953554 = null;
      var L_2969567522 = len_3087009065(parentSymbols_3019953548);
      Label6: {
        var h_2969567524 = 0;
        var colontmp__2969567525 = 0;
        colontmp__2969567525 = (parentSymbols_3019953548.data).length - 1;
        var res_2969567526 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2969567526 <= colontmp__2969567525)) break Label8;
              h_2969567524 = res_2969567526;
              if (isFilled_1308622880(parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field0)) {
              var colontmp__2969567529 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field2}, NTI3087008732);
              id_3019953553 = nimCopy(id_3019953553, colontmp__2969567529["Field0"], NTI2046820355);
              sym_3019953554 = colontmp__2969567529["Field1"];
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, id_3019953553, sym_3019953554);
              if (!((len_3087009065(parentSymbols_3019953548) == L_2969567522))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567526 = addInt(res_2969567526, 1);
            }
        };
      };
    };
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(parentInNodeList_3019953543.parent), -1);
    var bIsOrderDependent_3019953777 = !((parentInNodeList_3019953543.parent.parent == null));
    Label9: {
      var child_3019953781 = null;
      var i_2969567532 = 0;
      var L_2969567533 = (parentInNodeList_3019953543.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2969567532 < L_2969567533)) break Label11;
            child_3019953781 = parentInNodeList_3019953543.parent.children[chckIndx(i_2969567532, 0, (parentInNodeList_3019953543.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3019953777 && (child_3019953781 == parentInNodeList_3019953543))) {
              break Label9;
              }
              
              if (((!((child_3019953781.kind == 4)) && !((child_3019953781.kind == 5))) && !((child_3019953781.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym549_3019953800 = computeSymbol_3019919344(ctx_3019899470, child_3019953781, true);
                if (!isSome_3087009356(oHEX60gensym549_3019953800)) Temporary13 = false; else {                  var symbol_3019953846 = get_3087009376(oHEX60gensym549_3019953800);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019953846.id, symbol_3019953846);
              }
              
            };
            i_2969567532 = addInt(i_2969567532, 1);
            if (!(((parentInNodeList_3019953543.parent.children).length == L_2969567533))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym550_3019953918 = findWithParentRec_3003123589(node_3019899471, 11);
      if (!isSome_3003123546(oHEX60gensym550_3019953918)) Temporary14 = false; else {        var parentInFunctionDef_3019953964 = get_3003123566(oHEX60gensym550_3019953918);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3019953965 = parentInFunctionDef_3019953964.parent;
    if ((0 < len_3003121752(functionDefinition_3019953965))) {
    var params_3019953966 = HEX5BHEX5D_3003121748(functionDefinition_3019953965, 0);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(params_3019953966), -1);
    Label15: {
      var param_3019953970 = null;
      var i_2969567536 = 0;
      var L_2969567537 = (params_3019953966.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2969567536 < L_2969567537)) break Label17;
            param_3019953970 = params_3019953966.children[chckIndx(i_2969567536, 0, (params_3019953966.children).length - 1)];
            recordDependency_3019906144(ctx_3019899470, getItem_3019906357(param_3019953970), -1);
              var oHEX60gensym552_3019953973 = computeSymbol_3019919344(ctx_3019899470, param_3019953970, true);
              if (!isSome_3087009356(oHEX60gensym552_3019953973)) Temporary18 = false; else {                var symbol_3019954019 = get_3087009376(oHEX60gensym552_3019953973);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3019953618(result_3019953413, param_3019953970.id, symbol_3019954019);
            }
            
            i_2969567536 = addInt(i_2969567536, 1);
            if (!(((params_3019953966.children).length == L_2969567537))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3019954089 = base_3003121758(node_3019899471);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(root_3019954089), -1);
    Label19: {
      var child_3019954093 = null;
      var i_2969567541 = 0;
      var L_2969567542 = (root_3019954089.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969567541 < L_2969567542)) break Label21;
            child_3019954093 = root_3019954089.children[chckIndx(i_2969567541, 0, (root_3019954089.children).length - 1)];
            Label22: {
              if (((!((child_3019954093.kind == 4)) && !((child_3019954093.kind == 5))) && !((child_3019954093.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym556_3019954108 = computeSymbol_3019919344(ctx_3019899470, child_3019954093, true);
                if (!isSome_3087009356(oHEX60gensym556_3019954108)) Temporary23 = false; else {                  var symbol_3019954154 = get_3087009376(oHEX60gensym556_3019954108);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954154.id, symbol_3019954154);
              }
              
            };
            i_2969567541 = addInt(i_2969567541, 1);
            if (!(((root_3019954089.children).length == L_2969567542))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3019954647 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3019954648 = null;
      var L_2969567549 = len_3019954306(ctx_3019899470.globalScope);
      Label25: {
        var h_2969567551 = 0;
        var colontmp__2969567552 = 0;
        colontmp__2969567552 = (ctx_3019899470.globalScope.data).length - 1;
        var res_2969567553 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2969567553 <= colontmp__2969567552)) break Label27;
              h_2969567551 = res_2969567553;
              if (isFilled_1308622880(ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field0)) {
              var colontmp__2969567556 = nimCopy(null, {Field0: nimCopy(null, ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field2}, NTI3019931331);
              key_3019954647 = nimCopy(key_3019954647, colontmp__2969567556["Field0"], NTI2046820355);
              symbol_3019954648 = colontmp__2969567556["Field1"];
              recordDependency_3019906144(ctx_3019899470, getItem_3019907143(symbol_3019954648), -1);
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954648.id, symbol_3019954648);
              if (!((len_3019954306(ctx_3019899470.globalScope) == L_2969567549))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567553 = addInt(res_2969567553, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym542_3019953415 && false)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905598(result_3019953413) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }

  return result_3019953413;

}

function HEX5BHEX5DHEX3D_3019900821(t_3019900824, key_3019900825, val_3019900826) {
    t_3019900824.set(mapKeyJs_3019899778(key_3019900825), val_3019900826);

  
}

function fingerprint_3087009003(symbols_3087009011) {
  var result_3087009012 = [[]];

    result_3087009012[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009327 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009328 = null;
      var L_2969567564 = len_3087009065(symbols_3087009011);
      Label2: {
        var h_2969567566 = 0;
        var colontmp__2969567567 = 0;
        colontmp__2969567567 = (symbols_3087009011.data).length - 1;
        var res_2969567568 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969567568 <= colontmp__2969567567)) break Label4;
              h_2969567566 = res_2969567568;
              if (isFilled_1308622880(symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field0)) {
              var colontmp__2969567571 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field2}, NTI3087008732);
              key_3087009327 = nimCopy(key_3087009327, colontmp__2969567571["Field0"], NTI2046820355);
              value_3087009328 = colontmp__2969567571["Field1"];
              add_3087008402(result_3087009012, 0, fingerprint_3087008948(value_3087009328));
              if (!((len_3087009065(symbols_3087009011) == L_2969567564))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567568 = addInt(res_2969567568, 1);
            }
        };
      };
    };

  return result_3087009012[0];

}

function init_3019900920(result_3019900923, result_3019900923_Idx, capacity_3019900924) {
    result_3019900923[result_3019900923_Idx] = (new Map());

  
}

function getValidationKey_3019925421(ctxHEX60gensym111_3019925422, itemIdHEX60gensym111_3019925423) {
  var result_3019925424 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567586 = nimCopy(null, itemIdHEX60gensym111_3019925423, NTI3036676201);
    var colontmp__2969567587 = 4;
    result_3019925424 = nimCopy(result_3019925424, {Field0: nimCopy(null, colontmp__2969567586, NTI3036676201), Field1: colontmp__2969567587}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019925424;

}

function contains_3019925510(t_3019925513, key_3019925514) {
  var result_3019925515 = false;

    result_3019925515 = t_3019925513.has(mapKeyJs_3019899778(key_3019925514));

  return result_3019925515;

}

function HEX5BHEX5D_3019925604(t_3019925607, key_3019925608) {
  var result_3019925609 = false;

    result_3019925609 = t_3019925607.get(mapKeyJs_3019899778(key_3019925608));

  return result_3019925609;

}

function computeValidation_3019925643(ctxHEX60gensym113_3019925644, inputHEX60gensym113_3019925645, recordDependencyHEX60gensym113_3019925646) {
    var Temporary3;
    var Temporary5;

  var result_3019925647 = false;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym113_3019925728 = getItem_3019906357(inputHEX60gensym113_3019925645);
    var keyHEX60gensym113_3019925729 = {Field0: nimCopy(null, itemHEX60gensym113_3019925728, NTI3036676201), Field1: 4};
    if (recordDependencyHEX60gensym113_3019925646) {
    recordDependency_3019906144(ctxHEX60gensym113_3019925644, itemHEX60gensym113_3019925728, 4);
    }
    
    var colorHEX60gensym113_3019925730 = nodeColor_3036678426(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, 0);
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,105,100,97,116,105,111,110], [32], reprEnum(colorHEX60gensym113_3019925730, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym113_3019925728));
    }
    
    if ((colorHEX60gensym113_3019925730 == 2)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    }
    else {
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym113_3019925730 == 0)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729, true) == 0)) {
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym113_3019925644.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
      if (false) {
      markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
      }
      
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
      if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym113_3019925730 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,51,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym113_3019925644.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym113_3019925644.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym113_3019925644.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019925647;

}

function computeValidationImpl_3019899474(ctx_3019899475, node_3019899476) {
      var Temporary4;
        var Temporary12;
            var Temporary20;

  var result_3019940051 = false;

  BeforeRet: {
    var logQueryHEX60gensym344_3019940053 = (ctx_3019899475.enableLogging || ctx_3019899475.enableQueryLogging);
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym344_3019940053) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899476) || []));
    }
    
    try {
    var key_3019940064 = nimCopy(null, getValidationKey_3019925421(ctx_3019899475, getItem_3019906357(node_3019899476)), NTI3036676204);
    if (contains_3019940149(ctx_3019899475.diagnosticsPerQuery, key_3019940064)) {
    Label3: {
      var idHEX60gensym345_3019940729 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567573 = [];
      colontmp__2969567573 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899475.diagnosticsPerQuery, key_3019940064), Temporary4)[0][Temporary4[1]];
      var i_2969567574 = 0;
      var L_2969567575 = (colontmp__2969567573).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567574 < L_2969567575)) break Label6;
            idHEX60gensym345_3019940729 = colontmp__2969567573[chckIndx(i_2969567574, 0, (colontmp__2969567573).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019940729).queries, key_3019940064);
            i_2969567574 = addInt(i_2969567574, 1);
            if (!(((colontmp__2969567573).length == L_2969567575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym345_3019942432 = [];
    var idsHEX60gensym345_3019942437 = [];
    try {
    result_3019940051 = true;
    var typ_3019948810 = computeType_3019913434(ctx_3019899475, node_3019899476, true);
    if ((typ_3019948810.kind == 0)) {
    result_3019940051 = false;
    }
    
    Label8: {
      Label9: {
        var expr_3019948816 = node_3019899476;
        var pos_3019948817 = 0;
        var _ = pos_3019948817;
        if ((expr_3019948816.kind == 11)) {
        if (!((typ_3019948810.kind == 4))) {
        var Temporary10 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary10);;
        var fmtRes_3019948836 = [mnewString(0)];
        fmtRes_3019948836[0].push.apply(fmtRes_3019948836[0], [84,121,112,101,32,111,102,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,32,116,121,112,101,44,32,98,117,116,32]);;
        formatValue_3019948837(fmtRes_3019948836, 0, typ_3019948810, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948836[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!((len_3003121752(node_3019899476) == 3))) {
        var Temporary11 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary11);;
        var fmtRes_3019948854 = [mnewString(0)];
        fmtRes_3019948854[0].push.apply(fmtRes_3019948854[0], [70,117,110,99,116,105,111,110,32,110,111,100,101,32,109,117,115,116,32,104,97,118,101,32,51,32,99,104,105,108,100,114,101,110,44,32,98,117,116,32,104,97,115,32]);;
        formatValue_2701131945(fmtRes_3019948854, 0, len_3003121752(node_3019899476), []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948854[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        var Temporary12 = typ_3019948810;
        if (ConstSet126[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007747)); }
        var returnType_3019948864 = Temporary12.returnType;
        var body_3019948865 = HEX5BHEX5D_3003121748(node_3019899476, 2);
        var bodyType_3019948866 = computeType_3019913434(ctx_3019899475, body_3019948865, true);
        if ((bodyType_3019948866.kind == 0)) {
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!(HEX3DHEX3D_3087008313(returnType_3019948864, bodyType_3019948866))) {
        var Temporary13 = nimCopy(null, body_3019948865.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary13);;
        var fmtRes_3019948879 = [mnewString(0)];
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [70,117,110,99,116,105,111,110,32,114,101,116,117,114,110,32,116,121,112,101,32,105,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, returnType_3019948864, []);
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [44,32,98,117,116,32,98,111,100,121,32,114,101,116,117,114,110,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, bodyType_3019948866, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948879[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        }
        else {
        }
        
      };
    };
    if (result_3019940051) {
    Label14: {
      var c_3019948897 = null;
      var i_2969567583 = 0;
      var L_2969567584 = (node_3019899476.children).length;
      Label15: {
          Label16: while (true) {
          if (!(i_2969567583 < L_2969567584)) break Label16;
            c_3019948897 = node_3019899476.children[chckIndx(i_2969567583, 0, (node_3019899476.children).length - 1)];
            result_3019940051 = (result_3019940051 && computeValidation_3019925643(ctx_3019899475, c_3019948897, true));
            i_2969567583 = addInt(i_2969567583, 1);
            if (!(((node_3019899476.children).length == L_2969567584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    } finally {
    if ((0 < (diagnosticsHEX60gensym345_3019942432).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899475.diagnosticsPerQuery, key_3019940064, idsHEX60gensym345_3019942437);
    Label17: {
      var iHEX60gensym345_3019944089 = 0;
      var colontmp__2969567578 = 0;
      colontmp__2969567578 = (idsHEX60gensym345_3019942437).length - 1;
      var res_2969567579 = 0;
      Label18: {
          Label19: while (true) {
          if (!(res_2969567579 <= colontmp__2969567578)) break Label19;
            iHEX60gensym345_3019944089 = res_2969567579;
            var idHEX60gensym345_3019944090 = nimCopy(null, idsHEX60gensym345_3019942437[chckIndx(iHEX60gensym345_3019944089, 0, (idsHEX60gensym345_3019942437).length - 1)], NTI2046820355);
            var diagHEX60gensym345_3019944091 = nimCopy(null, diagnosticsHEX60gensym345_3019942432[chckIndx(iHEX60gensym345_3019944089, 0, (diagnosticsHEX60gensym345_3019942432).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064, []);
            }
            
            var Temporary21 = nimCopy(null, diagHEX60gensym345_3019944091, NTI3019898883);
            (Temporary20 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064), Temporary20)[0][Temporary20[1]].push(Temporary21);;
            res_2969567579 = addInt(res_2969567579, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899475.diagnosticsPerQuery, key_3019940064);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym344_3019940053 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],nimBoolToStr(result_3019940051) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940051;

}

function HEX5BHEX5DHEX3D_3019901168(t_3019901171, key_3019901172, val_3019901173) {
    t_3019901171.set(mapKeyJs_3019899778(key_3019901172), val_3019901173);

  
}

function fingerprint_3087010815(val_3087010816) {
  var result_3087010817 = [];

    result_3087010817 = nimCopy(null, [val_3087010816], NTI3087008194);

  return result_3087010817;

}

function init_3019901276(result_3019901279, result_3019901279_Idx, capacity_3019901280) {
    result_3019901279[result_3019901279_Idx] = (new Map());

  
}

function contains_3019901364(t_3019901367, key_3019901368) {
  var result_3019901369 = false;

    result_3019901369 = t_3019901367.has(mapKeyJs_3019899588(key_3019901368));

  return result_3019901369;

}

function HEX5BHEX5D_3019901463(t_3019901466, key_3019901467) {
  var result_3019901468 = null;

    result_3019901468 = t_3019901466.get(mapKeyJs_3019899588(key_3019901467));

  return result_3019901468;

}

function computeSymbolTypeImpl_3019899477(ctx_3019899478, symbol_3019899479) {
      var Temporary3;
      var Temporary4;

  var result_3019940009 = null;

  BeforeRet: {
    var logQueryHEX60gensym342_3019940011 = (ctx_3019899478.enableLogging || ctx_3019899478.enableQueryLogging);
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym342_3019940011) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899479) || []));
    }
    
    try {
    switch (symbol_3019899479.kind) {
    case 0:
      var Temporary3 = symbol_3019899479;
      if (ConstSet127[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940009 = computeType_3019913434(ctx_3019899478, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899479;
      if (ConstSet128[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940009 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym342_3019940011 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019940009) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940009;

}

function HEX5BHEX5DHEX3D_3019901542(t_3019901545, key_3019901546, val_3019901547) {
    t_3019901545.set(mapKeyJs_3019901554(key_3019901546), val_3019901547);

  
}

function init_3019901652(result_3019901655, result_3019901655_Idx, capacity_3019901656) {
    result_3019901655[result_3019901655_Idx] = (new Map());

  
}

function computeSymbolValueImpl_3019899480(ctx_3019899481, symbol_3019899482) {
      var Temporary3;
      var Temporary4;

  var result_3019940025 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym343_3019940027 = (ctx_3019899481.enableLogging || ctx_3019899481.enableQueryLogging);
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym343_3019940027) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899482) || []));
    }
    
    try {
    switch (symbol_3019899482.kind) {
    case 0:
      var Temporary3 = symbol_3019899482;
      if (ConstSet129[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, computeValue_3019916562(ctx_3019899481, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899482;
      if (ConstSet130[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym343_3019940027 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019940025) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940025;

}

function HEX5BHEX5DHEX3D_3019901900(t_3019901903, key_3019901904, val_3019901905) {
    t_3019901903.set(mapKeyJs_3019901554(key_3019901904), val_3019901905);

  
}

function init_3019901999(result_3019902002, result_3019902002_Idx, capacity_3019902003) {
    result_3019902002[result_3019902002_Idx] = (new Map());

  
}

function contains_3019902087(t_3019902090, key_3019902091) {
  var result_3019902092 = false;

    result_3019902092 = t_3019902090.has(mapKeyJs_3019899588(key_3019902091));

  return result_3019902092;

}

function HEX5BHEX5D_3019902186(t_3019902189, key_3019902190) {
  var result_3019902191 = null;

    result_3019902191 = t_3019902189.get(mapKeyJs_3019899588(key_3019902190));

  return result_3019902191;

}

function initTable_3154118844(initialSize_3154118847) {
  var result_3154118848 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3154118850 = slotsNeeded_1308622891(chckRange(initialSize_3154118847, 0, 2147483647));
    result_3154118848.counter = 0;
    result_3154118848.data = new Array(chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647) ; ++i) { result_3154118848.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3154118848;

}

function rawGet_3154116773(t_3154116776, key_3154116777, hc_3154116778, hc_3154116778_Idx) {
  var result_3154116779 = 0;

  BeforeRet: {
    hc_3154116778[hc_3154116778_Idx] = hash_2046820630(key_3154116777);
    if ((hc_3154116778[hc_3154116778_Idx] == 0)) {
    hc_3154116778[hc_3154116778_Idx] = 314159265;
    }
    
    if (((t_3154116776.data).length == 0)) {
    result_3154116779 = -1;
    break BeforeRet;
    }
    
    var h_3154116830 = (hc_3154116778[hc_3154116778_Idx] & (t_3154116776.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0)) break Label2;
          if (((t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0 == hc_3154116778[hc_3154116778_Idx]) && HEX3DHEX3D_2046820626(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field1, key_3154116777))) {
          result_3154116779 = h_3154116830;
          break BeforeRet;
          }
          
          h_3154116830 = nextTry_1308622883(h_3154116830, (t_3154116776.data).length - 1);
        }
    };
    result_3154116779 = subInt(-1, h_3154116830);
  };

  return result_3154116779;

}

function mustRehash_3154117118(t_3154117120) {
  var result_3154117121 = false;

    if (!((t_3154117120.counter < (t_3154117120.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3154117121 = ((mulInt((t_3154117120.data).length, 2) < mulInt(t_3154117120.counter, 3)) || (subInt((t_3154117120.data).length, t_3154117120.counter) < 4));

  return result_3154117121;

}

function rawInsert_3154117567(t_3154117571, data_3154117572, data_3154117572_Idx, key_3154117573, val_3154117574, hc_3154117575, h_3154117576) {
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1, key_3154117573, NTI2046820355);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2, val_3154117574, NTI3087007751);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field0 = hc_3154117575;

  
}

function enlarge_3154117273(t_3154117276) {
    var n_3154117279 = [];
    n_3154117279 = new Array(chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647) ; ++i) { n_3154117279[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3154117276.data; t_3154117276.data = n_3154117279; n_3154117279 = Temporary1;    Label2: {
      var i_3154117343 = 0;
      var colontmp__2969567596 = 0;
      colontmp__2969567596 = (n_3154117279).length - 1;
      var res_2969567597 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567597 <= colontmp__2969567596)) break Label4;
            i_3154117343 = res_2969567597;
            var eh_3154117397 = n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field0;
            if (isFilled_1308622880(eh_3154117397)) {
            var j_3154117401 = (eh_3154117397 & (t_3154117276.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3154117276.data[chckIndx(j_3154117401, 0, (t_3154117276.data).length - 1)].Field0)) break Label6;
                  j_3154117401 = nextTry_1308622883(j_3154117401, (t_3154117276.data).length - 1);
                }
            };
            rawInsert_3154117567(t_3154117276, t_3154117276, "data", n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field1, n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field2, eh_3154117397, j_3154117401);
            }
            
            res_2969567597 = addInt(res_2969567597, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3154117736(t_3154117739, key_3154117740, hc_3154117741) {
  var result_3154117742 = 0;

  BeforeRet: {
    if (((t_3154117739.data).length == 0)) {
    result_3154117742 = -1;
    break BeforeRet;
    }
    
    var h_3154117793 = (hc_3154117741 & (t_3154117739.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0)) break Label2;
          if (((t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0 == hc_3154117741) && HEX3DHEX3D_2046820626(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field1, key_3154117740))) {
          result_3154117742 = h_3154117793;
          break BeforeRet;
          }
          
          h_3154117793 = nextTry_1308622883(h_3154117793, (t_3154117739.data).length - 1);
        }
    };
    result_3154117742 = subInt(-1, h_3154117793);
  };

  return result_3154117742;

}

function HEX5BHEX5DHEX3D_3154116712(t_3154116715, key_3154116716, val_3154116717) {
    if (((t_3154116715.data).length == 0)) {
    var correctSizeHEX60gensym3_3154116767 = slotsNeeded_1308622891(32);
    t_3154116715.counter = 0;
    t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3154116772 = [0];
    var index_3154117011 = rawGet_3154116773(t_3154116715, key_3154116716, hc_3154116772, 0);
    if ((0 <= index_3154117011)) {
    t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2 = nimCopy(t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2, val_3154116717, NTI3087007751);
    }
    else {
      if (((t_3154116715.data).length == 0)) {
      var correctSizeHEX60gensym8_3154117113 = slotsNeeded_1308622891(32);
      t_3154116715.counter = 0;
      t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3154117118(t_3154116715)) {
      enlarge_3154117273(t_3154116715);
      index_3154117011 = rawGetKnownHC_3154117736(t_3154116715, key_3154116716, hc_3154116772[0]);
      }
      
      index_3154117011 = subInt(-1, index_3154117011);
      rawInsert_3154117567(t_3154116715, t_3154116715, "data", key_3154116716, val_3154116717, hc_3154116772[0], index_3154117011);
      t_3154116715.counter = addInt(t_3154116715.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3154118174(t_3154118177, key_3154118178) {
  var result_3154118179 = false;

    var hc_3154118180 = [0];
    result_3154118179 = (0 <= rawGet_3154116773(t_3154118177, key_3154118178, hc_3154118180, 0));

  return result_3154118179;

}

function contains_3154118168(t_3154118171, key_3154118172) {
  var result_3154118173 = false;

  BeforeRet: {
    result_3154118173 = hasKey_3154118174(t_3154118171, key_3154118172);
    break BeforeRet;
  };

  return result_3154118173;

}

function HEX5BHEX5D_3154118240(t_3154118243, key_3154118244) {
  var result_3154118245 = null;

    var hcHEX60gensym22_3154118246 = [0];
    var indexHEX60gensym22_3154118253 = rawGet_3154116773(t_3154118243, key_3154118244, hcHEX60gensym22_3154118246, 0);
    if ((0 <= indexHEX60gensym22_3154118253)) {
    result_3154118245 = t_3154118243.data[chckIndx(indexHEX60gensym22_3154118253, 0, (t_3154118243.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3154118244);
    }
    

  return result_3154118245;

}

function newFunctionExecutionContext_3019907902(ctxHEX60gensym92_3019907903, dataHEX60gensym92_3019907904) {
  var result_3019907905 = null;

  BeforeRet: {
    var itemHEX60gensym92_3019907906 = getItem_3019907554(dataHEX60gensym92_3019907904);
    var keyHEX60gensym92_3019907907 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym92_3019907906, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym92_3019907903.depGraph.changed, keyHEX60gensym92_3019907907, ctxHEX60gensym92_3019907903.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym92_3019907903.itemsFunctionExecutionContext, itemHEX60gensym92_3019907906, dataHEX60gensym92_3019907904);
    result_3019907905 = dataHEX60gensym92_3019907904;
    break BeforeRet;
  };

  return result_3019907905;

}

function executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, node_3154117981, variables_3154117984) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3154117985 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_3003123671(node_3154117981));
    }
    
    try {
    Label3: {
      var expr_3154117996 = node_3154117981;
      var pos_3154117997 = 0;
      var _ = pos_3154117997;
      if ((expr_3154117996.kind == 0)) {
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 7)) {
      var lastValue_3154118008 = errorValue_3087008442();
      Label4: {
        var child_3154118012 = null;
        var i_2969567602 = 0;
        var L_2969567603 = (node_3154117981.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567602 < L_2969567603)) break Label6;
              child_3154118012 = node_3154117981.children[chckIndx(i_2969567602, 0, (node_3154117981.children).length - 1)];
              lastValue_3154118008 = nimCopy(lastValue_3154118008, executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, child_3154118012, variables_3154117984), NTI3087007751);
              i_2969567602 = addInt(i_2969567602, 1);
              if (!(((node_3154117981.children).length == L_2969567603))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3154117985 = nimCopy(result_3154117985, lastValue_3154118008, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 3)) {
      result_3154117985 = nimCopy(result_3154117985, {kind: 2, stringValue: nimCopy(null, node_3154117981.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3154117981.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3154118021 = Temporary7;
      result_3154117985 = nimCopy(result_3154117985, {kind: 3, intValue: value_3154118021, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 9)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3154118026 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3154118026, 1) < len_3003121752(node_3154117981))) break Label10;
            try {
            var condition_3154118031 = HEX5BHEX5D_3003121748(node_3154117981, index_3154118026);
            var trueCase_3154118032 = HEX5BHEX5D_3003121748(node_3154117981, addInt(index_3154118026, 1));
            var conditionValue_3154118033 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118031, variables_3154117984);
            if ((conditionValue_3154118033.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118033.kind == 3))) {
            var fmtRes_3154118046 = [mnewString(0)];
            fmtRes_3154118046[0].push.apply(fmtRes_3154118046[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118046, 0, conditionValue_3154118033, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118046[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3154118033;
              if (ConstSet131[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3154118052 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, trueCase_3154118032, variables_3154117984);
            result_3154117985 = nimCopy(result_3154117985, trueCaseValue_3154118052, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118026 = addInt(index_3154118026, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3154117981), 2) == 0))) {
      var falseCaseValue_3154118053 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, last_3003121922(node_3154117981), variables_3154117984);
      result_3154117985 = nimCopy(result_3154117985, falseCaseValue_3154118053, NTI3087007751);
      break BeforeRet;
      }
      
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 10)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3154118058 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var body_3154118059 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var index_3154118060 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3154118081 = get_1191185108(fec_3154117980.maxLoopIterations, 1000);
            if ((maxLoopIterations_3154118081 < index_3154118060)) {
            var fmtRes_3154118086 = [mnewString(0)];
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2701131945(fmtRes_3154118086, 0, maxLoopIterations_3154118081, []);
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008590(fmtRes_3154118086, 0, node_3154117981, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118086[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3154118097 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118058, variables_3154117984);
            if ((conditionValue_3154118097.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118097.kind == 3))) {
            var fmtRes_3154118110 = [mnewString(0)];
            fmtRes_3154118110[0].push.apply(fmtRes_3154118110[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118110, 0, conditionValue_3154118097, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118110[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3154118097;
              if (ConstSet132[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3154118116 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, body_3154118059, variables_3154117984);
            if ((bodyValue_3154118116.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118060 = addInt(index_3154118060, 1);
            }
          }
      };
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 1)) {
      var id_3154118125 = nimCopy(null, node_3154117981.reff, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118125)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118125), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3154118321 = computeSymbol_3019919344(ctx_3154117979, node_3154117981, true);
        if (!isSome_3087009356(oHEX60gensym44_3154118321)) Temporary17 = false; else {          var sym_3154118344 = get_3087009376(oHEX60gensym44_3154118321);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3154118345 = computeSymbolValue_3019931153(ctx_3154117979, sym_3154118344, true);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, id_3154118125, value_3154118345);
      result_3154117985 = nimCopy(result_3154117985, value_3154118345, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3154118396 = [mnewString(0)];
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008590(fmtRes_3154118396, 0, node_3154117981, []);
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118396[0], NTI33554449)]);
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 8)) {
      var function_3154118406 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, HEX5BHEX5D_3003121748(node_3154117981, 0), variables_3154117984);
      switch (function_3154118406.kind) {
      case 0:
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3154118411 = [];
        Label18: {
          var arg_3154118448 = null;
          var colontmp__2969567608 = [];
          colontmp__2969567608 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567609 = 0;
          var L_2969567610 = (colontmp__2969567608).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2969567609 < L_2969567610)) break Label20;
                arg_3154118448 = colontmp__2969567608[chckIndx(i_2969567609, 0, (colontmp__2969567608).length - 1)];
                var value_3154118449 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118448, variables_3154117984);
                if ((value_3154118449.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3154118449, NTI3087007751);
                args_3154118411.push(Temporary21);;
                i_2969567609 = addInt(i_2969567609, 1);
                if (!(((colontmp__2969567608).length == L_2969567610))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3154118406;
        if (ConstSet133[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3154117985 = nimCopy(result_3154117985, Temporary22.impl(args_3154118411), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3154118462 = [];
        Label23: {
          var arg_3154118481 = null;
          var colontmp__2969567613 = [];
          colontmp__2969567613 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567614 = 0;
          var L_2969567615 = (colontmp__2969567613).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2969567614 < L_2969567615)) break Label25;
                arg_3154118481 = colontmp__2969567613[chckIndx(i_2969567614, 0, (colontmp__2969567613).length - 1)];
                var value_3154118482 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118481, variables_3154117984);
                if ((value_3154118482.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3154118482, NTI3087007751);
                args_3154118462.push(Temporary26);;
                i_2969567614 = addInt(i_2969567614, 1);
                if (!(((colontmp__2969567613).length == L_2969567615))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3154118406;
        if (ConstSet134[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3154118491 = newFunctionExecutionContext_3019907902(ctx_3154117979, {node: Temporary27.node, arguments: nimCopy(null, args_3154118462, NTI3154117637), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3154117985 = nimCopy(result_3154117985, computeFunctionExecution_3019933908(ctx_3154117979, fec_3154118491), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3154117996.kind == 5)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118496 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118497 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118496, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118497);
      result_3154117985 = nimCopy(result_3154117985, value_3154118497, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 6)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118548 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118549 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118548, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118549);
      result_3154117985 = nimCopy(result_3154117985, value_3154118549, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 4)) {
      var id_3154118600 = nimCopy(null, node_3154117981.id, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118600)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118600), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3154117996.kind == 13)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3154118710 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var valueNode_3154118711 = HEX5BHEX5D_3003121748(node_3154117981, 1);
        var oHEX60gensym55_3154118714 = computeSymbol_3019919344(ctx_3154117979, targetNode_3154118710, true);
        if (!isSome_3087009356(oHEX60gensym55_3154118714)) Temporary28 = false; else {          var sym_3154118737 = get_3087009376(oHEX60gensym55_3154118714);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3154118738 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118711, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, sym_3154118737.id, value_3154118738);
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3154118789 = [mnewString(0)];
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, node_3154117981, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, targetNode_3154118710, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118789[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3154118804 = [mnewString(0)];
        fmtRes_3154118804[0].push.apply(fmtRes_3154118804[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008590(fmtRes_3154118804, 0, node_3154117981, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118804[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [45,62,32], HEX24_3087008498(result_3154117985));
    }
    
    }
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3154117985;

}

function computeFunctionExecutionImpl2_3154118839(ctx_3154118840, fec_3154118841) {
      var Temporary4;
        var Temporary5;

  var result_3154118842 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3154118843 = HEX5BHEX5D_3003121748(fec_3154118841.node, 2);
    var variables_3154118855 = [initTable_3154118844(32)];
    var params_3154118856 = HEX5BHEX5D_3003121748(fec_3154118841.node, 0);
    Label1: {
      var i_3154118898 = 0;
      var arg_3154118899 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567590 = 0;
      var L_2969567591 = (fec_3154118841.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567590 < L_2969567591)) break Label3;
            i_3154118898 = i_2969567590;
            arg_3154118899 = nimCopy(arg_3154118899, fec_3154118841.arguments[chckIndx(i_2969567590, 0, (fec_3154118841.arguments).length - 1)], NTI3087007751);
            if ((len_3003121752(params_3154118856) <= i_3154118898)) {
            var fmtRes_3154118904 = [mnewString(0)];
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, len_3003121752(params_3154118856), []);
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [44,32,103,111,116,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, (fec_3154118841.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118904[0], NTI33554449)]);
            result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3154118918 = HEX5BHEX5D_3003121748(params_3154118856, i_3154118898);
            HEX5BHEX5DHEX3D_3154116712(variables_3154118855[0], param_3154118918.id, arg_3154118899);
            i_2969567590 = addInt(i_2969567590, 1);
            if (!(((fec_3154118841.arguments).length == L_2969567591))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3154118965 = executeNodeRec_3154117978(ctx_3154118840, fec_3154118841, body_3154118843, variables_3154118855[0]);
    if ((bodyResult_3154118965.kind == 0)) {
    result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3154118970 = computeType_3019913434(ctx_3154118840, fec_3154118841.node, true);
      if (!(functionType_3154118970.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3154118970;
        if (ConstSet135[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3154118842 = nimCopy(result_3154118842, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3154118842 = nimCopy(result_3154118842, bodyResult_3154118965, NTI3087007751);
    break BeforeRet;
  };

  return result_3154118842;

}

function computeFunctionExecutionImpl_3019899483(ctx_3019899484, fec_3019899485) {
  var result_3019937316 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym319_3019937318 = (ctx_3019899484.enableLogging || ctx_3019899484.enableQueryLogging);
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym319_3019937318) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008582(fec_3019899485) || []));
    }
    
    try {
    result_3019937316 = nimCopy(result_3019937316, computeFunctionExecutionImpl2_3154118839(ctx_3019899484, fec_3019899485), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym319_3019937318 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019937316) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019937316;

}

function HEX5BHEX5DHEX3D_3019902274(t_3019902277, key_3019902278, val_3019902279) {
    t_3019902277.set(mapKeyJs_3019902286(key_3019902278), val_3019902279);

  
}

function init_3019902388(result_3019902391, result_3019902391_Idx, capacity_3019902392) {
    result_3019902391[result_3019902391_Idx] = (new Map());

  
}

function contains_3019902476(t_3019902479, key_3019902480) {
  var result_3019902481 = false;

    result_3019902481 = t_3019902479.has(mapKeyJs_3019899588(key_3019902480));

  return result_3019902481;

}

function HEX5BHEX5D_3019902575(t_3019902578, key_3019902579) {
  var result_3019902580 = null;

    result_3019902580 = t_3019902578.get(mapKeyJs_3019899588(key_3019902579));

  return result_3019902580;

}

function dependOnCurrentRevision_3019906168(ctxHEX60gensym78_3019906169) {
    if ((0 < (ctxHEX60gensym78_3019906169.dependencyStack).length)) {
    ctxHEX60gensym78_3019906169.dependencyStack[chckIndx((ctxHEX60gensym78_3019906169.dependencyStack).length - 1, 0, (ctxHEX60gensym78_3019906169.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3036676217, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3137342870(initialSize_3137342873) {
  var result_3137342874 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3137342876 = slotsNeeded_1308622891(chckRange(initialSize_3137342873, 0, 2147483647));
    result_3137342874.counter = 0;
    result_3137342874.data = new Array(chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647) ; ++i) { result_3137342874.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3137342874;

}

function rawGet_3087010450(t_3087010453, key_3087010454, hc_3087010455, hc_3087010455_Idx) {
  var result_3087010456 = 0;

  BeforeRet: {
    hc_3087010455[hc_3087010455_Idx] = hash_2046820630(key_3087010454);
    if ((hc_3087010455[hc_3087010455_Idx] == 0)) {
    hc_3087010455[hc_3087010455_Idx] = 314159265;
    }
    
    if (((t_3087010453.data).length == 0)) {
    result_3087010456 = -1;
    break BeforeRet;
    }
    
    var h_3087010508 = (hc_3087010455[hc_3087010455_Idx] & (t_3087010453.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0)) break Label2;
          if (((t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0 == hc_3087010455[hc_3087010455_Idx]) && HEX3DHEX3D_2046820626(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field1, key_3087010454))) {
          result_3087010456 = h_3087010508;
          break BeforeRet;
          }
          
          h_3087010508 = nextTry_1308622883(h_3087010508, (t_3087010453.data).length - 1);
        }
    };
    result_3087010456 = subInt(-1, h_3087010508);
  };

  return result_3087010456;

}

function hasKey_3087010443(t_3087010446, key_3087010447) {
  var result_3087010448 = false;

    var hc_3087010449 = [0];
    result_3087010448 = (0 <= rawGet_3087010450(t_3087010446, key_3087010447, hc_3087010449, 0));

  return result_3087010448;

}

function contains_3137339757(t_3137339760, key_3137339761) {
  var result_3137339762 = false;

  BeforeRet: {
    result_3137339762 = hasKey_3087010443(t_3137339760, key_3137339761);
    break BeforeRet;
  };

  return result_3137339762;

}

function map_3087009435(s_3087009438, op_3087009440) {
  var result_3087009441 = [];

    result_3087009441 = new Array(chckRange((s_3087009438).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009438).length, 0, 2147483647) ; ++i) { result_3087009441[i] = null; }    Label1: {
      var i_3087009457 = 0;
      var colontmp__2969567640 = 0;
      colontmp__2969567640 = (s_3087009438).length;
      var i_2969567641 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567641 < colontmp__2969567640)) break Label3;
            i_3087009457 = i_2969567641;
            result_3087009441[chckIndx(i_3087009457, 0, (result_3087009441).length - 1)] = op_3087009440(s_3087009438[chckIndx(i_3087009457, 0, (s_3087009438).length - 1)]);
            i_2969567641 = addInt(i_2969567641, 1);
          }
      };
    };

  return result_3087009441;

}

function clone_3087009416(node_3087009417) {
    
function HEX3Aanonymous_3087009422(c_3087009430) {
      var result_3087009433 = null;

        result_3087009433 = clone_3087009416(c_3087009430);

      return result_3087009433;

    }

  var result_3087009418 = null;

    result_3087009418 = ({mhash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false});
    result_3087009418.id = nimCopy(result_3087009418.id, newId_2046820597(), NTI2046820355);
    result_3087009418.parent = node_3087009417.parent;
    result_3087009418.node = node_3087009417.node;
    result_3087009418.text = nimCopy(null, node_3087009417.text, NTI33554449);
    result_3087009418.bounds = nimCopy(result_3087009418.bounds, node_3087009417.bounds, NTI2147483653);
    result_3087009418.indent = node_3087009417.indent;
    result_3087009418.font = nimCopy(null, node_3087009417.font, NTI33554449);
    result_3087009418.fontSize = node_3087009417.fontSize;
    result_3087009418.render = node_3087009417.render;
    result_3087009418.widgetTemplate = node_3087009417.widgetTemplate;
    result_3087009418.cloneWidget = node_3087009417.cloneWidget;
    result_3087009418.children = nimCopy(null, map_3087009435(node_3087009417.children, HEX3Aanonymous_3087009422), NTI3087009002);
    Label1: {
      var c_3087009461 = null;
      var i_2969567636 = 0;
      var L_2969567637 = (result_3087009418.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567636 < L_2969567637)) break Label3;
            c_3087009461 = result_3087009418.children[chckIndx(i_2969567636, 0, (result_3087009418.children).length - 1)];
            c_3087009461.parent = result_3087009418;
            i_2969567636 = addInt(i_2969567636, 1);
            if (!(((result_3087009418.children).length == L_2969567637))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009418;

}

function HEX5BHEX5D_3137339821(t_3137339824, key_3137339825) {
  var result_3137339826 = null;
  var result_3137339826_Idx = 0;

    var hcHEX60gensym22_3137339827 = [0];
    var indexHEX60gensym22_3137339834 = rawGet_3087010450(t_3137339824, key_3137339825, hcHEX60gensym22_3137339827, 0);
    if ((0 <= indexHEX60gensym22_3137339834)) {
    result_3137339826 = t_3137339824.data[chckIndx(indexHEX60gensym22_3137339834, 0, (t_3137339824.data).length - 1)]; result_3137339826_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3137339825);
    }
    

  return [result_3137339826, result_3137339826_Idx];

}

function rawGet_3137340002(t_3137340005, key_3137340006, hc_3137340007, hc_3137340007_Idx) {
  var result_3137340008 = 0;

  BeforeRet: {
    hc_3137340007[hc_3137340007_Idx] = hash_2046820630(key_3137340006);
    if ((hc_3137340007[hc_3137340007_Idx] == 0)) {
    hc_3137340007[hc_3137340007_Idx] = 314159265;
    }
    
    if (((t_3137340005.data).length == 0)) {
    result_3137340008 = -1;
    break BeforeRet;
    }
    
    var h_3137340059 = (hc_3137340007[hc_3137340007_Idx] & (t_3137340005.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0)) break Label2;
          if (((t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0 == hc_3137340007[hc_3137340007_Idx]) && HEX3DHEX3D_2046820626(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field1, key_3137340006))) {
          result_3137340008 = h_3137340059;
          break BeforeRet;
          }
          
          h_3137340059 = nextTry_1308622883(h_3137340059, (t_3137340005.data).length - 1);
        }
    };
    result_3137340008 = subInt(-1, h_3137340059);
  };

  return result_3137340008;

}

function mustRehash_3137340347(t_3137340349) {
  var result_3137340350 = false;

    if (!((t_3137340349.counter < (t_3137340349.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137340350 = ((mulInt((t_3137340349.data).length, 2) < mulInt(t_3137340349.counter, 3)) || (subInt((t_3137340349.data).length, t_3137340349.counter) < 4));

  return result_3137340350;

}

function rawInsert_3137340796(t_3137340800, data_3137340801, data_3137340801_Idx, key_3137340802, val_3137340803, hc_3137340804, h_3137340805) {
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1, key_3137340802, NTI2046820355);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2, val_3137340803, NTI3087007774);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field0 = hc_3137340804;

  
}

function enlarge_3137340502(t_3137340505) {
    var n_3137340508 = [];
    n_3137340508 = new Array(chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647) ; ++i) { n_3137340508[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3137340505.data; t_3137340505.data = n_3137340508; n_3137340508 = Temporary1;    Label2: {
      var i_3137340572 = 0;
      var colontmp__2969567646 = 0;
      colontmp__2969567646 = (n_3137340508).length - 1;
      var res_2969567647 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567647 <= colontmp__2969567646)) break Label4;
            i_3137340572 = res_2969567647;
            var eh_3137340626 = n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340626)) {
            var j_3137340630 = (eh_3137340626 & (t_3137340505.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340505.data[chckIndx(j_3137340630, 0, (t_3137340505.data).length - 1)].Field0)) break Label6;
                  j_3137340630 = nextTry_1308622883(j_3137340630, (t_3137340505.data).length - 1);
                }
            };
            rawInsert_3137340796(t_3137340505, t_3137340505, "data", n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field1, n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field2, eh_3137340626, j_3137340630);
            }
            
            res_2969567647 = addInt(res_2969567647, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340965(t_3137340968, key_3137340969, hc_3137340970) {
  var result_3137340971 = 0;

  BeforeRet: {
    if (((t_3137340968.data).length == 0)) {
    result_3137340971 = -1;
    break BeforeRet;
    }
    
    var h_3137341022 = (hc_3137340970 & (t_3137340968.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0)) break Label2;
          if (((t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0 == hc_3137340970) && HEX3DHEX3D_2046820626(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field1, key_3137340969))) {
          result_3137340971 = h_3137341022;
          break BeforeRet;
          }
          
          h_3137341022 = nextTry_1308622883(h_3137341022, (t_3137340968.data).length - 1);
        }
    };
    result_3137340971 = subInt(-1, h_3137341022);
  };

  return result_3137340971;

}

function HEX5BHEX5DHEX3D_3137339941(t_3137339944, key_3137339945, val_3137339946) {
    if (((t_3137339944.data).length == 0)) {
    var correctSizeHEX60gensym21_3137339996 = slotsNeeded_1308622891(32);
    t_3137339944.counter = 0;
    t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3137340001 = [0];
    var index_3137340240 = rawGet_3137340002(t_3137339944, key_3137339945, hc_3137340001, 0);
    if ((0 <= index_3137340240)) {
    t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2 = nimCopy(t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2, val_3137339946, NTI3087007774);
    }
    else {
      if (((t_3137339944.data).length == 0)) {
      var correctSizeHEX60gensym26_3137340342 = slotsNeeded_1308622891(32);
      t_3137339944.counter = 0;
      t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3137340347(t_3137339944)) {
      enlarge_3137340502(t_3137339944);
      index_3137340240 = rawGetKnownHC_3137340965(t_3137339944, key_3137339945, hc_3137340001[0]);
      }
      
      index_3137340240 = subInt(-1, index_3137340240);
      rawInsert_3137340796(t_3137339944, t_3137339944, "data", key_3137339945, val_3137339946, hc_3137340001[0], index_3137340240);
      t_3137339944.counter = addInt(t_3137339944.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2147483728(a_2147483729, b_2147483730) {
  var result_2147483731 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483731.x = min_33555609(a_2147483729.x, b_2147483730.x);
    result_2147483731.y = min_33555609(a_2147483729.y, b_2147483730.y);
    result_2147483731.w = (max_33555642((a_2147483729.x + a_2147483729.w), (b_2147483730.x + b_2147483730.w)) - result_2147483731.x);
    result_2147483731.h = (max_33555642((a_2147483729.y + a_2147483729.h), (b_2147483730.y + b_2147483730.h)) - result_2147483731.y);

  return result_2147483731;

}

function HEX2B_2130706587(a_2130706588, b_2130706589) {
  var result_2130706590 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706590.x = (a_2130706588.x + b_2130706589.x);
    result_2130706590.y = (a_2130706588.y + b_2130706589.y);
    result_2130706590.w = a_2130706588.w;
    result_2130706590.h = a_2130706588.h;

  return result_2130706590;

}

function vec2_2164261725(xHEX60gensym45_2164261726, yHEX60gensym45_2164261727) {
  var result_2164261728 = ({x: 0.0, y: 0.0});

    result_2164261728 = nimCopy(result_2164261728, {x: xHEX60gensym45_2164261726, y: yHEX60gensym45_2164261727}, NTI2164261152);

  return result_2164261728;

}

function xy_2147483680(rect_2147483681) {
  var result_2147483682 = ({x: 0.0, y: 0.0});

    result_2147483682 = nimCopy(result_2147483682, vec2_2164261725(rect_2147483681.x, rect_2147483681.y), NTI2164261152);

  return result_2147483682;

}

function add_3087009897(node_3087009898, node_3087009898_Idx, child_3087009899) {
  var result_3087009900 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009898[node_3087009898_Idx].children.push(child_3087009899);;
    child_3087009899.depth = addInt(node_3087009898[node_3087009898_Idx].depth, 1);
    child_3087009899.parent = node_3087009898[node_3087009898_Idx];
    child_3087009899.bounds.x = node_3087009898[node_3087009898_Idx].bounds.w;
    node_3087009898[node_3087009898_Idx].bounds = nimCopy(node_3087009898[node_3087009898_Idx].bounds, or_2147483728(node_3087009898[node_3087009898_Idx].bounds, HEX2B_2130706587(child_3087009899.bounds, xy_2147483680(node_3087009898[node_3087009898_Idx].bounds))), NTI2147483653);
    result_3087009900 = nimCopy(result_3087009900, {parent: node_3087009898[node_3087009898_Idx], first: (node_3087009898[node_3087009898_Idx].children).length - 1, last: (node_3087009898[node_3087009898_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009900;

}

function createReplacement_3137339709(input_3137339710, node_3137339711, layout_3137339712, layout_3137339712_Idx, line_3137339713, line_3137339713_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3137339714 = false;

  BeforeRet: {
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.id)) {
    var n_3137339900 = clone_3087009416((Temporary1 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.id), Temporary1)[0][Temporary1[1]]);
    n_3137339900.cloneWidget = false;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137339900));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.reff)) {
    var n_3137341308 = clone_3087009416((Temporary2 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.reff), Temporary2)[0][Temporary2[1]]);
    n_3137341308.cloneWidget = true;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137341308));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    result_3137339714 = false;
    break BeforeRet;
  };

  return result_3137339714;

}

function rect_2147483672(pos_2147483673, size_2147483674) {
  var result_2147483675 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483675.x = pos_2147483673.x;
    result_2147483675.y = pos_2147483673.y;
    result_2147483675.w = size_2147483674.x;
    result_2147483675.h = size_2147483674.y;

  return result_2147483675;

}

function vec2_2164261686() {
  var result_2164261687 = ({x: 0.0, y: 0.0});

    result_2164261687 = nimCopy(result_2164261687, {x: 0.0, y: 0.0}, NTI2164261152);

  return result_2164261687;

}

function whHEX3D_2147483689(rect_2147483690, v_2147483691) {
    rect_2147483690.w = v_2147483691.x;
    rect_2147483690.h = v_2147483691.y;

  
}

function newTextNode_3137339636(text_3137339637, color_3137339638, font_3137339639, measureText_3137339642, node_3137339643) {
  var result_3137339644 = null;

    result_3137339644 = {id: newId_2046820597(), text: nimCopy(null, text_3137339637, NTI33554449), colors: [nimCopy(null, color_3137339638, NTI33554449)], font: nimCopy(null, font_3137339639, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339643, mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339644.bounds, measureText_3137339642(text_3137339637));

  return result_3137339644;

}

function newTextNode_3137339649(text_3137339650, colors_3137339651, font_3137339652, measureText_3137339655, node_3137339656, styleOverride_3137339666) {
  var result_3137339667 = null;

    result_3137339667 = {id: newId_2046820597(), text: nimCopy(null, text_3137339650, NTI33554449), colors: nimCopy(null, colors_3137339651, NTI3137339575), font: nimCopy(null, font_3137339652, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339656, styleOverride: nimCopy(null, styleOverride_3137339666, NTI3087007788), mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339667.bounds, measureText_3137339655(text_3137339650));

  return result_3137339667;

}

function none_3137339658() {
  var result_3137339665 = ({val: {}, has: false});

  return result_3137339665;

}

function getColorForSymbol_3137341355(ctx_3137341356, sym_3137341357) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3137341358 = [];

  BeforeRet: {
    var typ_3137341359 = computeSymbolType_3019928398(ctx_3137341356, sym_3137341357, false);
    switch (typ_3137341359.kind) {
    case 0:
      result_3137341358 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3137341358 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3137341357.kind == 1)) {
      var Temporary1 = sym_3137341357;
      if (ConstSet138[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3137341358 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
        break;
      }
      }
      
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      break;
    default: 
      if ((sym_3137341357.kind == 0)) {
        var Temporary2 = sym_3137341357;
        if (ConstSet139[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3137341357;
        if (ConstSet140[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3137341357;
          if (ConstSet141[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3137341357;
        if (ConstSet142[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
    break BeforeRet;
  };

  return result_3137341358;

}

function some_3137341475(val_3137341477) {
  var result_3137341478 = ({val: {}, has: false});

    result_3137341478.has = true;
    result_3137341478.val = nimCopy(result_3137341478.val, val_3137341477, NTI3087007783);

  return result_3137341478;

}

function getStyleForSymbol_3137341424(ctx_3137341425, sym_3137341426) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3137341428 = ({val: {}, has: false});

    var style_3137341429 = nimCopy(null, ConstSet143, NTI3137340550);
    if ((sym_3137341426.kind == 0)) {
      var Temporary1 = sym_3137341426;
      if (ConstSet144[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet145), NTI3137340550);
    }
    
      var Temporary2 = sym_3137341426;
      if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3137341448 = computeSymbolType_3019928398(ctx_3137341425, sym_3137341426, false);
    if (!((typ_3137341448.kind == 4))) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet147), NTI3137340550);
    }
    
    }
    
    }
    else {
    if ((sym_3137341426.kind == 1)) {
      var Temporary3 = sym_3137341426;
      if (ConstSet148[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3137341429[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3137341429, ConstSet149))) {
    result_3137341428 = nimCopy(result_3137341428, some_3137341475(style_3137341429), NTI3087007788);
    }
    

  return result_3137341428;

}

function len_3087007980(node_3087007981) {
  var result_3087007982 = 0;

  BeforeRet: {
    result_3087007982 = (node_3087007981.children).length;
    break BeforeRet;
  };

  return result_3087007982;

}

function addLine_3087009929(node_3087009930, node_3087009930_Idx, child_3087009931, child_3087009931_Idx) {
    node_3087009930[node_3087009930_Idx].children.push(child_3087009931[child_3087009931_Idx]);;
    child_3087009931[child_3087009931_Idx].depth = addInt(node_3087009930[node_3087009930_Idx].depth, 1);
    child_3087009931[child_3087009931_Idx].parent = node_3087009930[node_3087009930_Idx];
    child_3087009931[child_3087009931_Idx].bounds.y = node_3087009930[node_3087009930_Idx].bounds.h;
    node_3087009930[node_3087009930_Idx].bounds = nimCopy(node_3087009930[node_3087009930_Idx].bounds, or_2147483728(node_3087009930[node_3087009930_Idx].bounds, HEX2B_2130706587(child_3087009931[child_3087009931_Idx].bounds, xy_2147483680(node_3087009930[node_3087009930_Idx].bounds))), NTI2147483653);

  
}

function rect_2147483666(x_2147483667, y_2147483668, w_2147483669, h_2147483670) {
  var result_2147483671 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483671.x = x_2147483667;
    result_2147483671.y = y_2147483668;
    result_2147483671.w = w_2147483669;
    result_2147483671.h = h_2147483670;

  return result_2147483671;

}

function getPrecedenceForNode_3137339406(ctx_3137339407, node_3137339408) {
      var Temporary1;
      var Temporary2;

  var result_3137339409 = 0;

  BeforeRet: {
    if ((!((node_3137339408.kind == 8)) || (len_3003121752(node_3137339408) == 0))) {
    result_3137339409 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3137339416 = computeSymbol_3019919344(ctx_3137339407, HEX5BHEX5D_3003121748(node_3137339408, 0), false);
      if (!isSome_3087009356(oHEX60gensym1_3137339416)) Temporary1 = false; else {        var symbol_3137339439 = get_3087009376(oHEX60gensym1_3137339416);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3137339439.kind) {
    case 1:
      var Temporary2 = symbol_3137339439;
      if (ConstSet152[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3137339409 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3137339409 = 0;
    break BeforeRet;
  };

  return result_3137339409;

}

function some_3137339691(val_3137339693) {
  var result_3137339694 = ({val: [], has: false});

    result_3137339694.has = true;
    result_3137339694.val = nimCopy(null, val_3137339693, NTI3137339604);

  return result_3137339694;

}

function newBlockNode_3137339677(colors_3137339678, size_3137339679, node_3137339680, styleOverride_3137339689) {
  var result_3137339690 = null;

    result_3137339690 = {id: newId_2046820597(), node: node_3137339680, styleOverride: nimCopy(null, styleOverride_3137339689, NTI3087007788), background: some_3137339691(colors_3137339678), mhash: 0, parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339690.bounds, size_3137339679);

  return result_3137339690;

}

function HEX2BHEX3D_2147483761(x_2147483763, x_2147483763_Idx, y_2147483764) {
    x_2147483763[x_2147483763_Idx] = (x_2147483763[x_2147483763_Idx] + y_2147483764);

  
}

function formatValue_3137342818(result_3137342820, result_3137342820_Idx, value_3137342821, specifier_3137342822) {
    formatValue_721420459(result_3137342820, result_3137342820_Idx, reprEnum(value_3137342821, NTI3003121667), specifier_3137342822);

  
}

function createLayoutLineForRemainingChildren_3137341493(ctx_3137341494, input_3137341495, node_3137341496, firstChildIndex_3137341497, result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx) {
  BeforeRet: {
    if ((len_3003121752(node_3137341496) <= firstChildIndex_3137341497)) {
    break BeforeRet;
    }
    
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([60], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
    Label1: {
      var i_3137341508 = 0;
      var colontmp__2969567653 = 0;
      colontmp__2969567653 = len_3003121752(node_3137341496);
      var i_2969567654 = firstChildIndex_3137341497;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567654 < colontmp__2969567653)) break Label3;
            i_3137341508 = i_2969567654;
            if ((firstChildIndex_3137341497 < i_3137341508)) {
            var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341494, input_3137341495, HEX5BHEX5D_3003121748(node_3137341496, i_3137341508), result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx);
            i_2969567654 = addInt(i_2969567654, 1);
          }
      };
    };
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([62], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
  };

  
}

function createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3137341532 = (((ConstSet136[node_3137341490.kind] != undefined) && (ConstSet137[node_3137341490.parent.kind] != undefined)) && input_3137341489.inlineBlocks);
    var prevLine_3137341533 = line_3137341492[line_3137341492_Idx];
    var first_3137341537 = (prevLine_3137341533.children).length;
    try {
    var oldLineHEX60gensym42_3137341592 = [line_3137341492[line_3137341492_Idx]];
    var containerLineHEX60gensym42_3137341593 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    if (renderInline_3137341532) {
    line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym42_3137341593[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3137341593[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
    }
    
    try {
    var _ = computeType_3019913434(ctx_3137341488, node_3137341490, false);
    var lastUsedChild_3137341640 = -1;
    try {
    Label4: {
      var expr_3137341641 = node_3137341490;
      var pos_3137341642 = 0;
      var _ = pos_3137341642;
      if ((expr_3137341641.kind == 0)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var bounds_3137341649 = input_3137341489.measureText([32]);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, {id: newId_2046820597(), colors: [nimCopy(null, config_3137339605[0].colors.empty, NTI33554449)], node: node_3137341490, bounds: rect_2147483672(vec2_2164261686(), bounds_3137341649), mhash: 0, parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 2)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 3)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
      if ((expr_3137341641.kind == 1)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym61_3137341768 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym61_3137341768)) Temporary5 = false; else {          var sym_3137341791 = get_3087009376(oHEX60gensym61_3137341768);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341791.name, getColorForSymbol_3137341355(ctx_3137341488, sym_3137341791), config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341791))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_2046820617(node_3137341490.reff), [118,97,114,105,97,98,108,101], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      
      }
      else {
      if ((expr_3137341641.kind == 4)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym63_3137341890 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym63_3137341890)) Temporary7 = false; else {          var sym_3137341913 = get_3087009376(oHEX60gensym63_3137341890);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3137341355(ctx_3137341488, sym_3137341913);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3137341918 = nimCopy(null, Temporary6, NTI3137340452);
        var oHEX60gensym64_3137341921 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym64_3137341921)) Temporary8 = false; else {          var sym_3137341944 = get_3087009376(oHEX60gensym64_3137341921);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341944.name, color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341944)));
      }
      else {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(HEX24_2046820617(node_3137341490.id), color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, none_3137339658()));
      }
      
      }
      
      var typ_3137341945 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      if ((typ_3137341945.kind == 4)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137341945), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      var value_3137341962 = computeValue_3019916562(ctx_3137341488, node_3137341490, false);
      switch (value_3137341962.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_3003121748(node_3137341490, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008498(value_3137341962), [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3137341640 = 0;
      }
      else {
      if ((expr_3137341641.kind == 5)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym67_3137341973 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym67_3137341973)) Temporary10 = false; else {          var sym_3137341996 = get_3087009376(oHEX60gensym67_3137341973);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137341996), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341996)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567650 = nimCopy(null, Temporary9, NTI3137340922);
      var color_3137342008 = nimCopy(null, colontmp__2969567650["Field0"], NTI3137340452);
      var style_3137342009 = nimCopy(null, colontmp__2969567650["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342008, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342009));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342065 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342065), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 6)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym71_3137342122 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym71_3137342122)) Temporary12 = false; else {          var sym_3137342145 = get_3087009376(oHEX60gensym71_3137342122);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137342145), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137342145)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567651 = nimCopy(null, Temporary11, NTI3137341025);
      var color_3137342157 = nimCopy(null, colontmp__2969567651["Field0"], NTI3137340452);
      var style_3137342158 = nimCopy(null, colontmp__2969567651["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342157, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342158));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32,109,117,116,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342214 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342214), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 11)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([102,110], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      var parent_3137342269 = line_3137341492[line_3137341492_Idx];
      var first_3137342270 = len_3087007980(parent_3137342269);
      Label13: {
        var i_3137342294 = 0;
        var param_3137342295 = null;
        var colontmp__2969567619 = [];
        colontmp__2969567619 = HEX5BHEX5D_3003121748(node_3137341490, 0).children;
        var i_2969567621 = 0;
        var L_2969567622 = (colontmp__2969567619).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2969567621 < L_2969567622)) break Label15;
              i_3137342294 = i_2969567621;
              param_3137342295 = colontmp__2969567619[chckIndx(i_2969567621, 0, (colontmp__2969567619).length - 1)];
              if ((0 < i_3137342294)) {
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
              }
              
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, param_3137342295, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567621 = addInt(i_2969567621, 1);
              if (!(((colontmp__2969567619).length == L_2969567622))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_3003121752(HEX5BHEX5D_3003121748(node_3137341490, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: parent_3137342269, first: first_3137342270, last: len_3087007980(parent_3137342269)});
      }
      
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41,32], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((1 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 2;
      }
      else {
      if ((expr_3137341641.kind == 9)) {
      var parent_3137342400 = [line_3137341492[line_3137341492_Idx].parent];
      var prevIndent_3137342401 = line_3137341492[line_3137341492_Idx].indent;
      var first_3137342405 = (parent_3137342400[0].children).length;
      try {
      var i_3137342458 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3137342458, 1) < len_3003121752(node_3137341490))) break Label18;
            try {
            if ((i_3137342458 == 0)) {
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            else {
              addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342458), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, addInt(i_3137342458, 1)), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            } finally {
            i_3137342458 = addInt(i_3137342458, 2);
            }
          }
      };
      if ((modInt(len_3003121752(node_3137341490), 2) == 1)) {
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,115,101,58,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, last_3003121922(node_3137341490), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342405 < (parent_3137342400[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342400[0], first: first_3137342405, last: (parent_3137342400[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 10)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([119,104,105,108,101,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      if ((1 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 7)) {
      var parent_3137342479 = [line_3137341492[line_3137341492_Idx].parent];
      var first_3137342483 = addInt((parent_3137342479[0].children).length, 1);
      try {
      var prevIndent_3137342536 = line_3137341492[line_3137341492_Idx].indent;
      Label21: {
        var child_3137342540 = null;
        var i_2969567626 = 0;
        var L_2969567627 = (node_3137341490.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2969567626 < L_2969567627)) break Label23;
              child_3137342540 = node_3137341490.children[chckIndx(i_2969567626, 0, (node_3137341490.children).length - 1)];
              addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, input_3137341489.indent, 0.0), indent: addInt(prevIndent_3137342536, 1), node: child_3137342540, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, child_3137342540, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567626 = addInt(i_2969567626, 1);
              if (!(((node_3137341490.children).length == L_2969567627))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342536, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342483 < (parent_3137342479[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342479[0], first: first_3137342483, last: (parent_3137342479[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 13)) {
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 8)) {
      if ((len_3003121752(node_3137341490) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      break BeforeRet;
      }
      
      var isDivision_3137342599 = false;
        var oHEX60gensym90_3137342602 = computeSymbol_3019919344(ctx_3137341488, HEX5BHEX5D_3003121748(node_3137341490, 0), false);
        if (!isSome_3087009356(oHEX60gensym90_3137342602)) Temporary26 = false; else {          var sym_3137342625 = get_3087009376(oHEX60gensym90_3137342602);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3137342625.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820626(sym_3137342625.id, IdDiv_2986344454)) {
      isDivision_3137342599 = true;
      }
      
      var Temporary27 = sym_3137342625;
      if (ConstSet150[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3137342630 = Temporary28;
      if ((len_3003121752(node_3137341490) == addInt(arity_3137342630, 1))) {
      var Temporary30 = sym_3137342625;
      if (ConstSet151[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3137342631 = Temporary24;
      switch (operatorNotation_3137342631) {
      case 3:
        var parentPrecedence_3137342632 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490.parent);
        var precedence_3137342633 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490);
        var renderParens_3137342634 = (precedence_3137342633 < parentPrecedence_3137342632);
        if (((isDivision_3137342599 && input_3137341489.renderDivisionVertically) && input_3137341489.inlineBlocks)) {
        var oldLineHEX60gensym91_3137342637 = [line_3137341492[line_3137341492_Idx]];
        var containerLineHEX60gensym91_3137342638 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
        if (true) {
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym91_3137342638[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3137342638[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        }
        
        try {
        var parent_3137342685 = [line_3137341492[line_3137341492_Idx].parent];
        var prevIndent_3137342686 = line_3137341492[line_3137341492_Idx].indent;
        var first_3137342690 = (parent_3137342685[0].children).length;
        try {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line1_3137342743 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        var fontSize_3137342744 = input_3137341489.measureText([32]).y;
        var divLine_3137342749 = newBlockNode_3137339677([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2164261725(0.0, (fontSize_3137342744 * 0.1)), HEX5BHEX5D_3003121748(node_3137341490, 0), none_3137339658());
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, divLine_3137342749);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: line_3137341492[line_3137341492_Idx], first: 0, last: 1});
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line2_3137342796 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        divLine_3137342749.bounds.w = max_33555642(line1_3137342743.bounds.w, line2_3137342796.bounds.w);
        divLine_3137342749.parent.bounds.w = divLine_3137342749.bounds.w;
        var shorterLine_3137342797 = line1_3137342743;
        var longerLine_3137342798 = line2_3137342796;
        if ((longerLine_3137342798.bounds.w < shorterLine_3137342797.bounds.w)) {
        shorterLine_3137342797 = line2_3137342796;
        longerLine_3137342798 = line1_3137342743;
        }
        
        var lengthDiff_3137342799 = (longerLine_3137342798.bounds.w - shorterLine_3137342797.bounds.w);
        HEX2BHEX3D_2147483761(shorterLine_3137342797.bounds, "x", (lengthDiff_3137342799 / 2.0));
        lastUsedChild_3137341640 = 2;
        } finally {
        if ((first_3137342690 < (parent_3137342685[0].children).length)) {
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342685[0], first: first_3137342690, last: (parent_3137342685[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009929(containerLineHEX60gensym91_3137342638, 0, line_3137341492, line_3137341492_Idx);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym91_3137342637, 0, containerLineHEX60gensym91_3137342638[0]));
        line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym91_3137342637[0];
        }
        
        }
        }
        else {
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          lastUsedChild_3137341640 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      case 2:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      default: 
        if ((0 < len_3003121752(node_3137341490))) {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        }
        
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        Label33: {
          var i_3137342808 = 0;
          var colontmp__2969567630 = 0;
          colontmp__2969567630 = len_3003121752(node_3137341490);
          var i_2969567631 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2969567631 < colontmp__2969567630)) break Label35;
                i_3137342808 = i_2969567631;
                if ((1 < i_3137342808)) {
                var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
                }
                
                createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342808), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
                i_2969567631 = addInt(i_2969567631, 1);
              }
          };
        };
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
        break;
      }
      }
      else {
        var fmtRes_3137342817 = [mnewString(0)];
        fmtRes_3137342817[0].push.apply(fmtRes_3137342817[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3137342818(fmtRes_3137342817, 0, node_3137341490.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137342817[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3137341493(ctx_3137341488, input_3137341489, node_3137341490, addInt(lastUsedChild_3137341640, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
    }
    } finally {
    if (renderInline_3137341532) {
    addLine_3087009929(containerLineHEX60gensym42_3137341593, 0, line_3137341492, line_3137341492_Idx);
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym42_3137341592, 0, containerLineHEX60gensym42_3137341593[0]));
    line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym42_3137341592[0];
    }
    
    }
    } finally {
    if ((first_3137341537 < (prevLine_3137341533.children).length)) {
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: prevLine_3137341533, first: first_3137341537, last: (prevLine_3137341533.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3137342848(vnode_3137342849) {
    var height_3137342850 = vnode_3137342849.bounds.h;
    Label1: {
      var child_3137342854 = null;
      var i_2969567657 = 0;
      var L_2969567658 = (vnode_3137342849.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567657 < L_2969567658)) break Label3;
            child_3137342854 = vnode_3137342849.children[chckIndx(i_2969567657, 0, (vnode_3137342849.children).length - 1)];
            if ((vnode_3137342849.orientation == 0)) {
            var heightDiff_3137342860 = (height_3137342850 - child_3137342854.bounds.h);
            HEX2BHEX3D_2147483761(child_3137342854.bounds, "y", (heightDiff_3137342860 * 0.5));
            }
            
            centerChildrenVertically_3137342848(child_3137342854);
            i_2969567657 = addInt(i_2969567657, 1);
            if (!(((vnode_3137342849.children).length == L_2969567658))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3137342865(ctx_3137342866, input_3137342867) {
  var result_3137342868 = [null];

    var node_3137342869 = input_3137342867.node;
    result_3137342868[0] = {node: node_3137342869, root: {id: newId_2046820597(), orientation: 1, mhash: 0, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}, nodeToVisualNode: initTable_3137342870(32)};
    var line_3137342881 = [{id: newId_2046820597(), node: node_3137342869, parent: result_3137342868[0].root, orientation: 0, depth: addInt(result_3137342868[0].root.depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    createLayoutLineForNode_3137341487(ctx_3137342866, input_3137342867, node_3137342869, result_3137342868, 0, line_3137342881, 0);
    addLine_3087009929(line_3137342881[0], "parent", line_3137342881, 0);
    centerChildrenVertically_3137342848(result_3137342868[0].root);

  return result_3137342868[0];

}

function computeNodeLayoutImpl_3019899486(ctx_3019899487, nodeLayoutInput_3019899488) {
  var result_3019937312 = null;

  BeforeRet: {
    dependOnCurrentRevision_3019906168(ctx_3019899487);
    var _ = computeValidation_3019925643(ctx_3019899487, nodeLayoutInput_3019899488.node, true);
    result_3019937312 = computeNodeLayoutImpl2_3137342865(ctx_3019899487, nodeLayoutInput_3019899488);
    break BeforeRet;
  };

  return result_3019937312;

}

function mapKeyJs_3019902675(key_3019902677) {
  var result_3019902678 = null;

    let temp = key_3019902677;
    let newId = getIdNodeLayoutInputJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902678;

}

function HEX5BHEX5DHEX3D_3019902663(t_3019902666, key_3019902667, val_3019902668) {
    t_3019902666.set(mapKeyJs_3019902675(key_3019902667), val_3019902668);

  
}

function init_3019902786(result_3019902789, result_3019902789_Idx, capacity_3019902790) {
    result_3019902789[result_3019902789_Idx] = (new Map());

  
}

function mustRehash_3019903484(t_3019903486) {
  var result_3019903487 = false;

    if (!((t_3019903486.counter < (t_3019903486.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903487 = ((mulInt((t_3019903486.data).length, 2) < mulInt(t_3019903486.counter, 3)) || (subInt((t_3019903486.data).length, t_3019903486.counter) < 4));

  return result_3019903487;

}

function rawInsert_3019904177(t_3019904181, data_3019904182, data_3019904182_Idx, key_3019904183, val_3019904184, hc_3019904185, h_3019904186) {
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field1 = key_3019904183;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field2 = val_3019904184;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field0 = hc_3019904185;

  
}

function enlarge_3019903741(t_3019903744) {
    var n_3019903747 = [];
    n_3019903747 = new Array(chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647) ; ++i) { n_3019903747[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3019903744.data; t_3019903744.data = n_3019903747; n_3019903747 = Temporary1;    Label2: {
      var i_3019903845 = 0;
      var colontmp__2969567662 = 0;
      colontmp__2969567662 = (n_3019903747).length - 1;
      var res_2969567663 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567663 <= colontmp__2969567662)) break Label4;
            i_3019903845 = res_2969567663;
            var eh_3019903926 = n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903926)) {
            var j_3019903930 = (eh_3019903926 & (t_3019903744.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903744.data[chckIndx(j_3019903930, 0, (t_3019903744.data).length - 1)].Field0)) break Label6;
                  j_3019903930 = nextTry_1308622883(j_3019903930, (t_3019903744.data).length - 1);
                }
            };
            rawInsert_3019904177(t_3019903744, t_3019903744, "data", n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field1, n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field2, eh_3019903926, j_3019903930);
            }
            
            res_2969567663 = addInt(res_2969567663, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904436(t_3019904439, key_3019904440, hc_3019904441) {
  var result_3019904442 = 0;

  BeforeRet: {
    if (((t_3019904439.data).length == 0)) {
    result_3019904442 = -1;
    break BeforeRet;
    }
    
    var h_3019904527 = (hc_3019904441 & (t_3019904439.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0)) break Label2;
          if (((t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0 == hc_3019904441) && (t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field1 == key_3019904440))) {
          result_3019904442 = h_3019904527;
          break BeforeRet;
          }
          
          h_3019904527 = nextTry_1308622883(h_3019904527, (t_3019904439.data).length - 1);
        }
    };
    result_3019904442 = subInt(-1, h_3019904527);
  };

  return result_3019904442;

}

function HEX5BHEX5DHEX3D_3019902865(t_3019902868, key_3019902869, val_3019902870) {
    if (((t_3019902868.data).length == 0)) {
    var correctSizeHEX60gensym141_3019902954 = slotsNeeded_1308622891(32);
    t_3019902868.counter = 0;
    t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3019902959 = [0];
    var index_3019903316 = rawGet_3019902960(t_3019902868, key_3019902869, hc_3019902959, 0);
    if ((0 <= index_3019903316)) {
    t_3019902868.data[chckIndx(index_3019903316, 0, (t_3019902868.data).length - 1)].Field2 = val_3019902870;
    }
    else {
      if (((t_3019902868.data).length == 0)) {
      var correctSizeHEX60gensym146_3019903479 = slotsNeeded_1308622891(32);
      t_3019902868.counter = 0;
      t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3019903484(t_3019902868)) {
      enlarge_3019903741(t_3019902868);
      index_3019903316 = rawGetKnownHC_3019904436(t_3019902868, key_3019902869, hc_3019902959[0]);
      }
      
      index_3019903316 = subInt(-1, index_3019903316);
      rawInsert_3019904177(t_3019902868, t_3019902868, "data", key_3019902869, val_3019902870, hc_3019902959[0], index_3019903316);
      t_3019902868.counter = addInt(t_3019902868.counter, 1);
    }
    

  
}

function formatValue_3019937337(result_3019937339, result_3019937339_Idx, value_3019937340, specifier_3019937341) {
    formatValue_721420459(result_3019937339, result_3019937339_Idx, HEX24_3019911804(value_3019937340), specifier_3019937341);

  
}

function getAstNode_3019906180(ctxHEX60gensym79_3019906181, idHEX60gensym79_3019906182) {
  var result_3019906184 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym79_3019906185 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym79_3019906182, NTI2046820355), Field1: 0}, NTI3036676201);
    if (contains_3019899577(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)) {
    result_3019906184 = nimCopy(result_3019906184, some_3003121890(HEX5BHEX5D_3019899687(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)), NTI3003121783);
    break BeforeRet;
    }
    
    result_3019906184 = nimCopy(result_3019906184, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_3019906184;

}

function recoverValue_3019899447(ctx_3019899448, key_3019899449) {
      var Temporary1;

    var fmtRes_3019937336 = [mnewString(0)];
    fmtRes_3019937336[0].push.apply(fmtRes_3019937336[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937336, 0, key_3019899449, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937336[0], NTI33554449)]);
      var oHEX60gensym321_3019937347 = getAstNode_3019906180(ctx_3019899448, key_3019899449.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym321_3019937347)) Temporary1 = false; else {        var node_3019937393 = get_3003123566(oHEX60gensym321_3019937347);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900124(ctx_3019899448.queryCacheValue, node_3019937393, errorValue_3087008442());
    }
    

  
}

function recoverType_3019899450(ctx_3019899451, key_3019899452) {
      var Temporary1;

    var fmtRes_3019937470 = [mnewString(0)];
    fmtRes_3019937470[0].push.apply(fmtRes_3019937470[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937470, 0, key_3019899452, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937470[0], NTI33554449)]);
      var oHEX60gensym323_3019937478 = getAstNode_3019906180(ctx_3019899451, key_3019899452.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym323_3019937478)) Temporary1 = false; else {        var node_3019937524 = get_3003123566(oHEX60gensym323_3019937478);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019899766(ctx_3019899451.queryCacheType, node_3019937524, errorType_3087008131());
    }
    

  
}

function recoverSymbol_3019899453(ctx_3019899454, key_3019899455) {
      var Temporary1;

    var fmtRes_3019937601 = [mnewString(0)];
    fmtRes_3019937601[0].push.apply(fmtRes_3019937601[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937601, 0, key_3019899455, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937601[0], NTI33554449)]);
      var oHEX60gensym325_3019937609 = getAstNode_3019906180(ctx_3019899454, key_3019899455.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym325_3019937609)) Temporary1 = false; else {        var node_3019937655 = get_3003123566(oHEX60gensym325_3019937609);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900472(ctx_3019899454.queryCacheSymbol, node_3019937655, none_3019907133());
    }
    

  
}

function recoverSymbols_3019899456(ctx_3019899457, key_3019899458) {
      var Temporary1;

    var fmtRes_3019937734 = [mnewString(0)];
    fmtRes_3019937734[0].push.apply(fmtRes_3019937734[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937734, 0, key_3019899458, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937734[0], NTI33554449)]);
      var oHEX60gensym327_3019937742 = getAstNode_3019906180(ctx_3019899457, key_3019899458.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym327_3019937742)) Temporary1 = false; else {        var node_3019937788 = get_3003123566(oHEX60gensym327_3019937742);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900821(ctx_3019899457.queryCacheSymbols, node_3019937788, newTable_3019937829(32));
    }
    

  
}

function init_3019905028(result_3019905031, result_3019905031_Idx, capacity_3019905032) {
    result_3019905031[result_3019905031_Idx] = (new Map());

  
}

function init_3019905048(result_3019905051, result_3019905051_Idx, capacity_3019905052) {
    result_3019905051[result_3019905051_Idx] = (new Map());

  
}

function init_3019905068(result_3019905071, result_3019905071_Idx, capacity_3019905072) {
    result_3019905071[result_3019905071_Idx] = (new Map());

  
}

function init_3019905088(result_3019905091, result_3019905091_Idx, capacity_3019905092) {
    result_3019905091[result_3019905091_Idx] = (new Map());

  
}

function initTable_3019905108(initialSize_3019905111) {
  var result_3019905112 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_3019905114 = slotsNeeded_1308622891(chckRange(initialSize_3019905111, 0, 2147483647));
    result_3019905112.counter = 0;
    result_3019905112.data = new Array(chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647) ; ++i) { result_3019905112.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3019905112;

}

function initTable_3019905128(initialSize_3019905131) {
  var result_3019905132 = ({data: [], counter: 0});

    var correctSizeHEX60gensym158_3019905134 = slotsNeeded_1308622891(chckRange(initialSize_3019905131, 0, 2147483647));
    result_3019905132.counter = 0;
    result_3019905132.data = new Array(chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647) ; ++i) { result_3019905132.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3019905132;

}

function newContext_3019899489() {
    
function HEX3Aanonymous_3019899498(itemHEX60gensym30_3019899499) {
      var result_3019899500 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym30_3019899499) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsType.forcedCalls = addInt(ctx_3019899065.statsType.forcedCalls, 1);
        var argHEX60gensym30_3019899701 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499);
        var valueHEX60gensym30_3019899702 = computeTypeImpl_3019899459(ctx_3019899065, argHEX60gensym30_3019899701);
        HEX5BHEX5DHEX3D_3019899766(ctx_3019899065.queryCacheType, argHEX60gensym30_3019899701, valueHEX60gensym30_3019899702);
        result_3019899500 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym30_3019899702), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899500;

    }
    
function HEX3Aanonymous_3019899885(itemHEX60gensym31_3019899886) {
      var result_3019899887 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym31_3019899886) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValue.forcedCalls = addInt(ctx_3019899065.statsValue.forcedCalls, 1);
        var argHEX60gensym31_3019900059 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886);
        var valueHEX60gensym31_3019900060 = computeValueImpl_3019899462(ctx_3019899065, argHEX60gensym31_3019900059);
        HEX5BHEX5DHEX3D_3019900124(ctx_3019899065.queryCacheValue, argHEX60gensym31_3019900059, valueHEX60gensym31_3019900060);
        result_3019899887 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym31_3019900060), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899887;

    }
    
function HEX3Aanonymous_3019900232(itemHEX60gensym32_3019900233) {
      var result_3019900234 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3036676336(itemHEX60gensym32_3019900233) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbol.forcedCalls = addInt(ctx_3019899065.statsSymbol.forcedCalls, 1);
        var argHEX60gensym32_3019900406 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233);
        var valueHEX60gensym32_3019900408 = computeSymbolImpl_3019899465(ctx_3019899065, argHEX60gensym32_3019900406);
        HEX5BHEX5DHEX3D_3019900472(ctx_3019899065.queryCacheSymbol, argHEX60gensym32_3019900406, valueHEX60gensym32_3019900408);
        result_3019900234 = nimCopy(null, fingerprint_3087009342(valueHEX60gensym32_3019900408), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900234;

    }
    
function HEX3Aanonymous_3019900580(itemHEX60gensym33_3019900581) {
      var result_3019900582 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3036676336(itemHEX60gensym33_3019900581) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbols.forcedCalls = addInt(ctx_3019899065.statsSymbols.forcedCalls, 1);
        var argHEX60gensym33_3019900754 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581);
        var valueHEX60gensym33_3019900757 = computeSymbolsImpl_3019899469(ctx_3019899065, argHEX60gensym33_3019900754);
        HEX5BHEX5DHEX3D_3019900821(ctx_3019899065.queryCacheSymbols, argHEX60gensym33_3019900754, valueHEX60gensym33_3019900757);
        result_3019900582 = nimCopy(null, fingerprint_3087009003(valueHEX60gensym33_3019900757), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900582;

    }
    
function HEX3Aanonymous_3019900929(itemHEX60gensym34_3019900930) {
      var result_3019900931 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym34_3019900930) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValidation.forcedCalls = addInt(ctx_3019899065.statsValidation.forcedCalls, 1);
        var argHEX60gensym34_3019901103 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930);
        var valueHEX60gensym34_3019901104 = computeValidationImpl_3019899474(ctx_3019899065, argHEX60gensym34_3019901103);
        HEX5BHEX5DHEX3D_3019901168(ctx_3019899065.queryCacheValidation, argHEX60gensym34_3019901103, valueHEX60gensym34_3019901104);
        result_3019900931 = nimCopy(null, fingerprint_3087010815(valueHEX60gensym34_3019901104), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900931;

    }
    
function HEX3Aanonymous_3019901285(itemHEX60gensym35_3019901286) {
      var result_3019901287 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym35_3019901286) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolType.forcedCalls = addInt(ctx_3019899065.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym35_3019901477 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286);
        var valueHEX60gensym35_3019901478 = computeSymbolTypeImpl_3019899477(ctx_3019899065, argHEX60gensym35_3019901477);
        HEX5BHEX5DHEX3D_3019901542(ctx_3019899065.queryCacheSymbolType, argHEX60gensym35_3019901477, valueHEX60gensym35_3019901478);
        result_3019901287 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym35_3019901478), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901287;

    }
    
function HEX3Aanonymous_3019901661(itemHEX60gensym36_3019901662) {
      var result_3019901663 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym36_3019901662) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolValue.forcedCalls = addInt(ctx_3019899065.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym36_3019901835 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662);
        var valueHEX60gensym36_3019901836 = computeSymbolValueImpl_3019899480(ctx_3019899065, argHEX60gensym36_3019901835);
        HEX5BHEX5DHEX3D_3019901900(ctx_3019899065.queryCacheSymbolValue, argHEX60gensym36_3019901835, valueHEX60gensym36_3019901836);
        result_3019901663 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym36_3019901836), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901663;

    }
    
function HEX3Aanonymous_3019902008(itemHEX60gensym37_3019902009) {
      var result_3019902010 = [];

      BeforeRet: {
        if (!(contains_3019902087(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym37_3019902009) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsFunctionExecution.forcedCalls = addInt(ctx_3019899065.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym37_3019902209 = HEX5BHEX5D_3019902186(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009);
        var valueHEX60gensym37_3019902210 = computeFunctionExecutionImpl_3019899483(ctx_3019899065, argHEX60gensym37_3019902209);
        HEX5BHEX5DHEX3D_3019902274(ctx_3019899065.queryCacheFunctionExecution, argHEX60gensym37_3019902209, valueHEX60gensym37_3019902210);
        result_3019902010 = nimCopy(null, [], NTI3019900729);
        break BeforeRet;
      };

      return result_3019902010;

    }
    
function HEX3Aanonymous_3019902397(itemHEX60gensym38_3019902398) {
      var result_3019902399 = [];

      BeforeRet: {
        if (!(contains_3019902476(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3036676336(itemHEX60gensym38_3019902398) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsNodeLayout.forcedCalls = addInt(ctx_3019899065.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym38_3019902598 = HEX5BHEX5D_3019902575(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398);
        var valueHEX60gensym38_3019902599 = computeNodeLayoutImpl_3019899486(ctx_3019899065, argHEX60gensym38_3019902598);
        HEX5BHEX5DHEX3D_3019902663(ctx_3019899065.queryCacheNodeLayout, argHEX60gensym38_3019902598, valueHEX60gensym38_3019902599);
        result_3019902399 = nimCopy(null, [], NTI3019900968);
        break BeforeRet;
      };

      return result_3019902399;

    }
    
function HEX3Aanonymous_3019902800(keyHEX60gensym39_3019902801) {
        recoverValue_3019899447(ctx_3019899065, keyHEX60gensym39_3019902801);

      
    }
    
function HEX3Aanonymous_3019904794(keyHEX60gensym40_3019904795) {
        recoverType_3019899450(ctx_3019899065, keyHEX60gensym40_3019904795);

      
    }
    
function HEX3Aanonymous_3019904870(keyHEX60gensym41_3019904871) {
        recoverSymbol_3019899453(ctx_3019899065, keyHEX60gensym41_3019904871);

      
    }
    
function HEX3Aanonymous_3019904946(keyHEX60gensym42_3019904947) {
        recoverSymbols_3019899456(ctx_3019899065, keyHEX60gensym42_3019904947);

      
    }

  var result_3019899490 = null;

  BeforeRet: {
    var ctx_3019899065 = null;
    ctx_3019899065 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValidation: null, updateValidation: null, statsValidation: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0.0, totalCalls: 0, forcedCalls: 0})});
    ctx_3019899065.depGraph = newDependencyGraph_3036676400();
    ctx_3019899065.dependencyStack = nimCopy(null, [], NTI3019899118);
    ctx_3019899065.updateType = HEX3Aanonymous_3019899498;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 0, [84,121,112,101]);
    init_3019899876(ctx_3019899065, "queryCacheType", 2000);
    ctx_3019899065.updateValue = HEX3Aanonymous_3019899885;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3019900223(ctx_3019899065, "queryCacheValue", 2000);
    ctx_3019899065.updateSymbol = HEX3Aanonymous_3019900232;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbol);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3019900571(ctx_3019899065, "queryCacheSymbol", 2000);
    ctx_3019899065.updateSymbols = HEX3Aanonymous_3019900580;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbols);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3019900920(ctx_3019899065, "queryCacheSymbols", 2000);
    ctx_3019899065.updateValidation = HEX3Aanonymous_3019900929;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValidation);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 4, [86,97,108,105,100,97,116,105,111,110]);
    init_3019901276(ctx_3019899065, "queryCacheValidation", 2000);
    ctx_3019899065.updateSymbolType = HEX3Aanonymous_3019901285;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 5, [83,121,109,98,111,108,84,121,112,101]);
    init_3019901652(ctx_3019899065, "queryCacheSymbolType", 2000);
    ctx_3019899065.updateSymbolValue = HEX3Aanonymous_3019901661;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 6, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3019901999(ctx_3019899065, "queryCacheSymbolValue", 2000);
    ctx_3019899065.updateFunctionExecution = HEX3Aanonymous_3019902008;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 7, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3019902388(ctx_3019899065, "queryCacheFunctionExecution", 2000);
    ctx_3019899065.updateNodeLayout = HEX3Aanonymous_3019902397;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 8, [78,111,100,101,76,97,121,111,117,116]);
    init_3019902786(ctx_3019899065, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 1, HEX3Aanonymous_3019902800);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 0, HEX3Aanonymous_3019904794);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 2, HEX3Aanonymous_3019904870);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 3, HEX3Aanonymous_3019904946);
    init_3019905028(ctx_3019899065, "itemsAstNode", 2000);
    init_3019905048(ctx_3019899065, "itemsNodeLayoutInput", 2000);
    init_3019905068(ctx_3019899065, "itemsSymbol", 2000);
    init_3019905088(ctx_3019899065, "itemsFunctionExecutionContext", 2000);
    ctx_3019899065.globalScope = nimCopy(ctx_3019899065.globalScope, initTable_3019905097(32), NTI3087008713);
    ctx_3019899065.enableQueryLogging = false;
    ctx_3019899065.enableExecutionLogging = false;
    ctx_3019899065.diagnosticsPerNode = nimCopy(ctx_3019899065.diagnosticsPerNode, initTable_3019905108(32), NTI3019898974);
    ctx_3019899065.diagnosticsPerQuery = nimCopy(ctx_3019899065.diagnosticsPerQuery, initTable_3019905128(32), NTI3019898991);
    result_3019899490 = ctx_3019899065;
    break BeforeRet;
  };

  return result_3019899490;

}
var executionOutput_2969567288 = [{lines: [], scroll: 0}];
var ctx_2969567289 = newContext_3019899489();
ctx_2969567289.enableLogging = false;
ctx_2969567289.enableQueryLogging = false;

function newFunctionValue_3087008482(impl_3087008483) {
  var result_3087008484 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008484 = nimCopy(result_3087008484, {kind: 4, impl: impl_3087008483, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008484;

}

function createBinaryIntOperator_2969567666(operator_2969567670) {
    
function HEX3Aanonymous_2969567672(values_2969567673) {
        var Temporary1;
        var Temporary2;

      var result_2969567674 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567673).length < 2)) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)].kind == 3)) || !((values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)].kind == 3)))) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)];
        if (ConstSet153[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)];
        if (ConstSet154[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2969567674 = nimCopy(result_2969567674, {kind: 3, intValue: operator_2969567670(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567674;

    }

  var result_2969567671 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567671 = nimCopy(result_2969567671, newFunctionValue_3087008482(HEX3Aanonymous_2969567672), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567671;

}

function createUnityIntOperator_2969567686(operator_2969567689) {
    
function HEX3Aanonymous_2969567691(values_2969567692) {
        var Temporary1;

      var result_2969567693 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567692).length < 1)) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2969567697 = nimCopy(null, values_2969567692[chckIndx(0, 0, (values_2969567692).length - 1)], NTI3087007751);
        if (!((value_2969567697.kind == 3))) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2969567697;
        if (ConstSet155[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2969567693 = nimCopy(result_2969567693, {kind: 3, intValue: operator_2969567689(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567693;

    }

  var result_2969567690 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567690 = nimCopy(result_2969567690, newFunctionValue_3087008482(HEX3Aanonymous_2969567691), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567690;

}

function stringValue_3087008476(value_3087008477) {
  var result_3087008478 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008478 = nimCopy(result_3087008478, {kind: 2, stringValue: nimCopy(null, value_3087008477, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008478;

}

function join_2969567841(a_2969567843, sep_2969567844) {
  var result_2969567845 = [];

    result_2969567845 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969567860 = 0;
      var x_2969567861 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969569596 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969569596 < (a_2969567843).length)) break Label3;
            i_2969567860 = i_2969569596;
            x_2969567861 = nimCopy(x_2969567861, a_2969567843[chckIndx(i_2969569596, 0, (a_2969567843).length - 1)], NTI3087007751);
            if ((0 < i_2969567860)) {
            result_2969567845.push.apply(result_2969567845, sep_2969567844);;
            }
            
            result_2969567845.push.apply(result_2969567845, HEX24_3087008498(x_2969567861));;
            i_2969569596 = addInt(i_2969569596, 1);
          }
      };
    };

  return result_2969567845;

}

function delete_2969567879(s_2969567881, s_2969567881_Idx, slice_2969567882) {
    if (!((((slice_2969567882.a < (s_2969567881[s_2969567881_Idx]).length) && (0 <= slice_2969567882.a)) && (slice_2969567882.b < (s_2969567881[s_2969567881_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2969567882, NTI805306392), Field1: (s_2969567881[s_2969567881_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2969567882.a <= slice_2969567882.b)) {
    var n_2969567929 = addInt(subInt(slice_2969567882.b, slice_2969567882.a), 1);
    var first_2969567930 = slice_2969567882.a;
    s_2969567881[s_2969567881_Idx].splice(first_2969567930, n_2969567929);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2969567862(self_2969567864, line_2969567865, color_2969567866) {
    if ((1500 <= (self_2969567864.lines).length)) {
    delete_2969567879(self_2969567864, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969567864.lines).length, 1000)));
    }
    
    if ((0 < self_2969567864.scroll)) {
    self_2969567864.scroll = addInt(self_2969567864.scroll, 1);
    }
    
    self_2969567864.lines.push({Field0: nimCopy(null, line_2969567865, NTI33554449), Field1: color_2634023294(color_2969567866)});;

  
}

function typeType_3087008186() {
  var result_3087008187 = null;

    result_3087008187 = {kind: 6, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008187;

}

function typeValue_3087008479(typ_3087008480) {
  var result_3087008481 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008481 = nimCopy(result_3087008481, {kind: 6, typ: typ_3087008480, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008481;

}

function HEX3Aanonymous_2969567747(a_2969567748, b_2969567749) {
  var result_2969567750 = 0;

    result_2969567750 = addInt(a_2969567748, b_2969567749);

  return result_2969567750;

}

function HEX3Aanonymous_2969567752(a_2969567753, b_2969567754) {
  var result_2969567755 = 0;

    result_2969567755 = subInt(a_2969567753, b_2969567754);

  return result_2969567755;

}

function HEX3Aanonymous_2969567757(a_2969567758, b_2969567759) {
  var result_2969567760 = 0;

    result_2969567760 = mulInt(a_2969567758, b_2969567759);

  return result_2969567760;

}

function HEX3Aanonymous_2969567762(a_2969567763, b_2969567764) {
  var result_2969567765 = 0;

    result_2969567765 = divInt(a_2969567763, b_2969567764);

  return result_2969567765;

}

function HEX3Aanonymous_2969567767(a_2969567768, b_2969567769) {
  var result_2969567770 = 0;

    result_2969567770 = modInt(a_2969567768, b_2969567769);

  return result_2969567770;

}

function HEX3Aanonymous_2969567772(a_2969567773) {
  var result_2969567774 = 0;

    result_2969567774 = negInt(a_2969567773);

  return result_2969567774;

}

function HEX3Aanonymous_2969567776(a_2969567777) {
    var Temporary1;

  var result_2969567778 = 0;

    if (!((a_2969567777 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2969567778 = Temporary1;

  return result_2969567778;

}

function HEX3Aanonymous_2969567780(a_2969567781, b_2969567782) {
    var Temporary1;

  var result_2969567783 = 0;

    if ((a_2969567781 < b_2969567782)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567783 = Temporary1;

  return result_2969567783;

}

function HEX3Aanonymous_2969567785(a_2969567786, b_2969567787) {
    var Temporary1;

  var result_2969567788 = 0;

    if ((a_2969567786 <= b_2969567787)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567788 = Temporary1;

  return result_2969567788;

}

function HEX3Aanonymous_2969567790(a_2969567791, b_2969567792) {
    var Temporary1;

  var result_2969567793 = 0;

    if ((b_2969567792 < a_2969567791)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567793 = Temporary1;

  return result_2969567793;

}

function HEX3Aanonymous_2969567795(a_2969567796, b_2969567797) {
    var Temporary1;

  var result_2969567798 = 0;

    if ((b_2969567797 <= a_2969567796)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567798 = Temporary1;

  return result_2969567798;

}

function HEX3Aanonymous_2969567800(a_2969567801, b_2969567802) {
    var Temporary1;

  var result_2969567803 = 0;

    if ((a_2969567801 == b_2969567802)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567803 = Temporary1;

  return result_2969567803;

}

function HEX3Aanonymous_2969567805(a_2969567806, b_2969567807) {
    var Temporary1;

  var result_2969567808 = 0;

    if (!((a_2969567806 == b_2969567807))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567808 = Temporary1;

  return result_2969567808;

}

function HEX3Aanonymous_2969567810(a_2969567811, b_2969567812) {
    var Temporary1;

  var result_2969567813 = 0;

    if ((!((a_2969567811 == 0)) && !((b_2969567812 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567813 = Temporary1;

  return result_2969567813;

}

function HEX3Aanonymous_2969567815(a_2969567816, b_2969567817) {
    var Temporary1;

  var result_2969567818 = 0;

    if ((!((a_2969567816 == 0)) || !((b_2969567817 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567818 = Temporary1;

  return result_2969567818;

}

function HEX3Aanonymous_2969567820(a_2969567821, b_2969567822) {
    var Temporary1;

  var result_2969567823 = 0;

    if ((a_2969567821 < b_2969567822)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2969567822 < a_2969567821)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2969567823 = Temporary1;

  return result_2969567823;

}

function HEX3Aanonymous_2969567825(values_2969567826) {
    var Temporary1;

  var result_2969567827 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2969567826).length < 2)) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2969567831 = nimCopy(null, values_2969567826[chckIndx(0, 0, (values_2969567826).length - 1)], NTI3087007751);
    var rightValue_2969567832 = nimCopy(null, values_2969567826[chckIndx(1, 0, (values_2969567826).length - 1)], NTI3087007751);
    if (!((leftValue_2969567831.kind == 2))) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2969567831;
    if (ConstSet156[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2969567827 = nimCopy(result_2969567827, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008498(rightValue_2969567832) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2969567827;

}

function HEX3Aanonymous_2969567838(values_2969567839) {
  var result_2969567840 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567840 = nimCopy(result_2969567840, stringValue_3087008476(join_2969567841(values_2969567839, [])), NTI3087007751);
    addOutput_2969567862(executionOutput_2969567288[0], HEX24_3087008498(result_2969567840), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008498(result_2969567840)]);
    result_2969567840 = nimCopy(result_2969567840, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567840;

}

function HEX3Aanonymous_2969567949(values_2969567952) {
  var result_2969567955 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2969567955 = nimCopy(result_2969567955, stringValue_3087008476(join_2969567841(values_2969567952, [])), NTI3087007751);

  return result_2969567955;

}
var typeAddIntInt_2969567706 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeSubIntInt_2969567711 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeMulIntInt_2969567716 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeDivIntInt_2969567721 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeModIntInt_2969567726 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeAddStringInt_2969567731 = newFunctionType_3087008173([stringType_3087008171(), intType_3087008169()], stringType_3087008171());
var typeNegInt_2969567736 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeNotInt_2969567741 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeFnIntIntInt_2969567746 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var funcAddIntInt_2969567751 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567747);
var funcSubIntInt_2969567756 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567752);
var funcMulIntInt_2969567761 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567757);
var funcDivIntInt_2969567766 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567762);
var funcModIntInt_2969567771 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567767);
var funcNegInt_2969567775 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567772);
var funcNotInt_2969567779 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567776);
var funcLessIntInt_2969567784 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567780);
var funcLessEqualIntInt_2969567789 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567785);
var funcGreaterIntInt_2969567794 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567790);
var funcGreaterEqualIntInt_2969567799 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567795);
var funcEqualIntInt_2969567804 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567800);
var funcNotEqualIntInt_2969567809 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567805);
var funcAndIntInt_2969567814 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567810);
var funcOrIntInt_2969567819 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567815);
var funcOrderIntInt_2969567824 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567820);
var funcAddStringInt_2969567837 = newFunctionValue_3087008482(HEX3Aanonymous_2969567825);
var funcPrintAny_2969567948 = newFunctionValue_3087008482(HEX3Aanonymous_2969567838);
var funcBuildStringAny_2969567960 = newFunctionValue_3087008482(HEX3Aanonymous_2969567949);
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAdd_2986344451, {id: nimCopy(null, IdAdd_2986344451, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2969567706, value: nimCopy(null, funcAddIntInt_2969567751, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdSub_2986344452, {id: nimCopy(null, IdSub_2986344452, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2969567711, value: nimCopy(null, funcSubIntInt_2969567756, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMul_2986344453, {id: nimCopy(null, IdMul_2986344453, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2969567716, value: nimCopy(null, funcMulIntInt_2969567761, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdDiv_2986344454, {id: nimCopy(null, IdDiv_2986344454, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2969567721, value: nimCopy(null, funcDivIntInt_2969567766, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMod_2986344455, {id: nimCopy(null, IdMod_2986344455, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2969567726, value: nimCopy(null, funcModIntInt_2969567771, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNegate_2986344456, {id: nimCopy(null, IdNegate_2986344456, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2969567736, value: nimCopy(null, funcNegInt_2969567775, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNot_2986344457, {id: nimCopy(null, IdNot_2986344457, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2969567741, value: nimCopy(null, funcNotInt_2969567779, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAppendString_2986344459, {id: nimCopy(null, IdAppendString_2986344459, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2969567731, value: nimCopy(null, funcAddStringInt_2969567837, NTI3087007751), operatorNotation: 3, precedence: 0, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLess_2986344463, {id: nimCopy(null, IdLess_2986344463, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessIntInt_2969567784, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLessEqual_2986344464, {id: nimCopy(null, IdLessEqual_2986344464, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessEqualIntInt_2969567789, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreater_2986344465, {id: nimCopy(null, IdGreater_2986344465, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterIntInt_2969567794, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreaterEqual_2986344466, {id: nimCopy(null, IdGreaterEqual_2986344466, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterEqualIntInt_2969567799, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdEqual_2986344467, {id: nimCopy(null, IdEqual_2986344467, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcEqualIntInt_2969567804, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNotEqual_2986344468, {id: nimCopy(null, IdNotEqual_2986344468, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcNotEqualIntInt_2969567809, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAnd_2986344469, {id: nimCopy(null, IdAnd_2986344469, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcAndIntInt_2969567814, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOr_2986344470, {id: nimCopy(null, IdOr_2986344470, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrIntInt_2969567819, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOrder_2986344471, {id: nimCopy(null, IdOrder_2986344471, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrderIntInt_2969567824, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdInt_2986344460, {id: nimCopy(null, IdInt_2986344460, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(intType_3087008169()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdString_2986344461, {id: nimCopy(null, IdString_2986344461, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(stringType_3087008171()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdVoid_2986344462, {id: nimCopy(null, IdVoid_2986344462, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(voidType_3087008167()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdPrint_2986344450, {id: nimCopy(null, IdPrint_2986344450, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], voidType_3087008167()), value: nimCopy(null, funcPrintAny_2969567948, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdBuildString_2986344472, {id: nimCopy(null, IdBuildString_2986344472, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], stringType_3087008171()), value: nimCopy(null, funcBuildStringAny_2969567960, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
Label153: {
  var symbol_2969569501 = [null];
  var L_2969569588 = len_3019954306(ctx_2969567289.globalScope);
  Label154: {
    var h_2969569590 = 0;
    var colontmp__2969569591 = 0;
    colontmp__2969569591 = (ctx_2969567289.globalScope.data).length - 1;
    var res_2969569592 = 0;
    Label155: {
        Label156: while (true) {
        if (!(res_2969569592 <= colontmp__2969569591)) break Label156;
          h_2969569590 = res_2969569592;
          if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
          symbol_2969569501[0] = ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969569501[0]);
          if (!((len_3019954306(ctx_2969567289.globalScope) == L_2969569588))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2969569592 = addInt(res_2969569592, 1);
        }
    };
  };
};

function isEditing_2969575154(self_2969575155) {
  var result_2969575156 = false;

    result_2969575156 = !((self_2969575155.textEditor == null));

  return result_2969575156;

}

function node_2969569752(editor_2969569753) {
  var result_2969569754 = null;

  BeforeRet: {
    result_2969569754 = editor_2969569753.selectedNode;
    break BeforeRet;
  };

  return result_2969569754;

}

function newSeq_2969570872(len_2969570874) {
  var result_2969570875 = [];

    result_2969570875 = new Array(len_2969570874); for (var i = 0 ; i < len_2969570874 ; ++i) { result_2969570875[i] = null; }
  return result_2969570875;

}

function expandIfNeeded_2969570862(deq_2969570864) {
              var Temporary5;
    var Temporary6;

    if ((deq_2969570864.mask == 0)) {
    var correctSizeHEX60gensym42_2969570866 = nextPowerOfTwo_872415437(4);
    deq_2969570864.mask = subInt(correctSizeHEX60gensym42_2969570866, 1);
    deq_2969570864.data = new Array(chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647) ; ++i) { deq_2969570864.data[i] = null; }    }
    
    var cap_2969570871 = addInt(deq_2969570864.mask, 1);
    if ((cap_2969570871 <= deq_2969570864.count)) {
    var n_2969570880 = newSeq_2969570872(chckRange(mulInt(cap_2969570871, 2), 0, 2147483647));
    var i_2969570881 = 0;
    Label1: {
      var x_2969570891 = null;
      var x_2969570891_Idx = 0;
      var i_2969578934 = deq_2969570864.head;
      Label2: {
        var c_2969578936 = 0;
        var i_2969578937 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2969578937 < deq_2969570864.count)) break Label4;
              c_2969578936 = i_2969578937;
              x_2969570891 = deq_2969570864.data; x_2969570891_Idx = chckIndx(i_2969578934, 0, (deq_2969570864.data).length - 1);
              Temporary5 = x_2969570891[x_2969570891_Idx];
              x_2969570891[x_2969570891_Idx] = genericReset(x_2969570891[x_2969570891_Idx], NTI3003121668);
              n_2969570880[chckIndx(i_2969570881, 0, (n_2969570880).length - 1)] = Temporary5;
              i_2969570881 = addInt(i_2969570881, 1);
              i_2969578934 = (addInt(i_2969578934, 1) & deq_2969570864.mask);
              i_2969578937 = addInt(i_2969578937, 1);
            }
        };
      };
    };
    Temporary6 = n_2969570880;
    n_2969570880 = genericReset(n_2969570880, NTI2969569217);
    deq_2969570864.data = nimCopy(null, Temporary6, NTI2969569217);
    deq_2969570864.mask = subInt(mulInt(cap_2969570871, 2), 1);
    deq_2969570864.tail = deq_2969570864.count;
    deq_2969570864.head = 0;
    }
    

  
}

function addLast_2969570853(deq_2969570855, item_2969570856) {
    expandIfNeeded_2969570862(deq_2969570855);
    deq_2969570855.count = addInt(deq_2969570855.count, 1);
    deq_2969570855.data[chckIndx(deq_2969570855.tail, 0, (deq_2969570855.data).length - 1)] = item_2969570856;
    deq_2969570855.tail = (addInt(deq_2969570855.tail, 1) & deq_2969570855.mask);

  
}

function len_2969570994(deq_2969570996) {
  var result_2969570997 = 0;

    result_2969570997 = deq_2969570996.count;

  return result_2969570997;

}

function popFirst_2969571003(deq_2969571005) {
    var Temporary1;

  var result_2969571006 = null;

    if ((deq_2969571005.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571005.count = subInt(deq_2969571005.count, 1);
    Temporary1 = deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)];
    deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)] = genericReset(deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)], NTI3003121668);
    result_2969571006 = Temporary1;
    deq_2969571005.head = (addInt(deq_2969571005.head, 1) & deq_2969571005.mask);

  return result_2969571006;

}

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet157[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818583615(editor_2818583617, path_2818583618, default_2818583619) {
  var result_2818583624 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818583617 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2818583635 = HEX7BHEX7D_1627393316(editor_2818583617.options, nsuSplitString(path_2818583618, [46], -1));
      if ((nodeHEX60gensym165_2818583635 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
    };
    result_2818583624 = getBool_1627390147(nodeHEX60gensym165_2818583635, default_2818583619);
    break BeforeRet;
  };

  return result_2818583624;

}

function hasKey_2969569869(t_2969569872, key_2969569873) {
  var result_2969569874 = false;

    var hc_2969569875 = [0];
    result_2969569874 = (0 <= rawGet_3137340002(t_2969569872, key_2969569873, hc_2969569875, 0));

  return result_2969569874;

}

function contains_2969569863(t_2969569866, key_2969569867) {
  var result_2969569868 = false;

  BeforeRet: {
    result_2969569868 = hasKey_2969569869(t_2969569866, key_2969569867);
    break BeforeRet;
  };

  return result_2969569868;

}

function HEX5BHEX5D_2969569959(t_2969569962, key_2969569963) {
  var result_2969569964 = null;

    var hcHEX60gensym22_2969569965 = [0];
    var indexHEX60gensym22_2969569972 = rawGet_3137340002(t_2969569962, key_2969569963, hcHEX60gensym22_2969569965, 0);
    if ((0 <= indexHEX60gensym22_2969569972)) {
    result_2969569964 = t_2969569962.data[chckIndx(indexHEX60gensym22_2969569972, 0, (t_2969569962.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_2969569963);
    }
    

  return result_2969569964;

}

function xyHEX3D_2147483683(rect_2147483684, v_2147483685) {
    rect_2147483684.x = v_2147483685.x;
    rect_2147483684.y = v_2147483685.y;

  
}

function HEX2B_2147484403(aHEX60gensym72_2147484405, bHEX60gensym72_2147484406) {
  var result_2147484407 = ({x: 0.0, y: 0.0});

    result_2147484407 = nimCopy(result_2147484407, {x: (aHEX60gensym72_2147484405.x + bHEX60gensym72_2147484406.x), y: (aHEX60gensym72_2147484405.y + bHEX60gensym72_2147484406.y)}, NTI2164261152);

  return result_2147484407;

}

function wh_2147483686(rect_2147483687) {
  var result_2147483688 = ({x: 0.0, y: 0.0});

    result_2147483688 = nimCopy(result_2147483688, vec2_2164261725(rect_2147483687.w, rect_2147483687.h), NTI2164261152);

  return result_2147483688;

}

function absoluteBounds_3087009545(node_3087009546) {
  var result_3087009547 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009546.parent == null)) {
    result_3087009547 = nimCopy(result_3087009547, node_3087009546.bounds, NTI2147483653);
    }
    else {
      result_3087009547 = nimCopy(result_3087009547, rect_2147483672(HEX2B_2147484403(xy_2147483680(absoluteBounds_3087009545(node_3087009546.parent)), xy_2147483680(node_3087009546.bounds)), wh_2147483686(node_3087009546.bounds)), NTI2147483653);
    }
    

  return result_3087009547;

}

function absoluteBounds_3087009583(nodeRange_3087009584) {
  var result_3087009585 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009585[0] = nimCopy(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(nodeRange_3087009584.first, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds, NTI2147483653);
    Label1: {
      var i_3087009590 = 0;
      var colontmp__2969578953 = 0;
      colontmp__2969578953 = addInt(nodeRange_3087009584.first, 1);
      var i_2969578954 = colontmp__2969578953;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578954 < nodeRange_3087009584.last)) break Label3;
            i_3087009590 = i_2969578954;
            result_3087009585[0] = nimCopy(result_3087009585[0], or_2147483728(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(i_3087009590, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds), NTI2147483653);
            i_2969578954 = addInt(i_2969578954, 1);
          }
      };
    };
    xyHEX3D_2147483683(result_3087009585[0], HEX2B_2147484403(xy_2147483680(result_3087009585[0]), xy_2147483680(absoluteBounds_3087009545(nodeRange_3087009584.parent))));

  return result_3087009585[0];

}

function and_2147483732(a_2147483733, b_2147483734) {
  var result_2147483735 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483735.x = max_33555642(a_2147483733.x, b_2147483734.x);
    result_2147483735.y = max_33555642(a_2147483733.y, b_2147483734.y);
    result_2147483735.w = (min_33555609((a_2147483733.x + a_2147483733.w), (b_2147483734.x + b_2147483734.w)) - result_2147483735.x);
    result_2147483735.h = (min_33555609((a_2147483733.y + a_2147483733.h), (b_2147483734.y + b_2147483734.h)) - result_2147483735.y);

  return result_2147483735;

}

function intersects_2130706609(a_2130706610, b_2130706611) {
  var result_2130706612 = false;

  BeforeRet: {
    var intersection_2130706613 = and_2147483732(a_2130706610, b_2130706611);
    result_2130706612 = ((0.0 < intersection_2130706613.w) && (0.0 < intersection_2130706613.h));
    break BeforeRet;
  };

  return result_2130706612;

}

function subbase_3003121765(node_3003121766) {
  var result_3003121767 = null;

  BeforeRet: {
    if ((node_3003121766.parent.parent == null)) {
    result_3003121767 = node_3003121766;
    break BeforeRet;
    }
    
    result_3003121767 = subbase_3003121765(node_3003121766.parent);
    break BeforeRet;
  };

  return result_3003121767;

}

function values_3019906757(t_3019906760) {
  var result_3019906761 = [];

    var iter_3019906766 = t_3019906760.values();
    for (var i in iter_3019906766) {result_3019906761.push(i);}

  return result_3019906761;

}

function hash_3087010010(input_3087010011) {
  var result_3087010012 = 0;

  BeforeRet: {
    if ((input_3087010011.mHash == 0)) {
    input_3087010011.mHash = HEX21HEX26_1325400067(hash_3003124022(input_3087010011.node), hash_2046820630(input_3087010011.selectedNode));
    input_3087010011.mHash = HEX21HEX24_1325400082(input_3087010011.mHash);
    }
    
    result_3087010012 = input_3087010011.mHash;
    break BeforeRet;
  };

  return result_3087010012;

}

function len_3087010148(t_3087010151) {
  var result_3087010152 = 0;

    result_3087010152 = t_3087010151.counter;

  return result_3087010152;

}

function HEX3DHEX3D_3087009833(x_3087009835, y_3087009836) {
  var result_3087009837 = false;

  BeforeRet: {
    var sameObject_3087009844 = false;
    sameObject_3087009844 = x_3087009835 === y_3087009836
    if (sameObject_3087009844) {
    result_3087009837 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009835).length == (y_3087009836).length))) {
    result_3087009837 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009858 = 0;
      var colontmp__2969578974 = 0;
      colontmp__2969578974 = subInt((x_3087009835).length, 1);
      var res_2969578975 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578975 <= colontmp__2969578974)) break Label3;
            i_3087009858 = res_2969578975;
            if (!(eqStrings(x_3087009835[chckIndx(i_3087009858, 0, (x_3087009835).length - 1)], y_3087009836[chckIndx(i_3087009858, 0, (y_3087009836).length - 1)]))) {
            result_3087009837 = false;
            break BeforeRet;
            }
            
            res_2969578975 = addInt(res_2969578975, 1);
          }
      };
    };
    result_3087009837 = true;
    break BeforeRet;
  };

  return result_3087009837;

}

function HEX3DHEX3D_2785018597(x_2785018599, y_2785018600) {
  var result_2785018601 = false;

  BeforeRet: {
    if (!((x_2785018599.x == y_2785018600.x))) {
    result_2785018601 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018599.y == y_2785018600.y))) {
    result_2785018601 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018599.w == y_2785018600.w))) {
    result_2785018601 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018599.h == y_2785018600.h))) {
    result_2785018601 = false;
    break BeforeRet;
    }
    
    result_2785018601 = true;
    break BeforeRet;
  };

  return result_2785018601;

}

function HEX3DHEX3D_3087009871(x_3087009873, y_3087009874) {
  var result_3087009875 = false;

  BeforeRet: {
    var sameObject_3087009882 = false;
    sameObject_3087009882 = x_3087009873 === y_3087009874
    if (sameObject_3087009882) {
    result_3087009875 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009873).length == (y_3087009874).length))) {
    result_3087009875 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009896 = 0;
      var colontmp__2969578978 = 0;
      colontmp__2969578978 = subInt((x_3087009873).length, 1);
      var res_2969578979 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578979 <= colontmp__2969578978)) break Label3;
            i_3087009896 = res_2969578979;
            if (!(HEX3DHEX3D_3087009816(x_3087009873[chckIndx(i_3087009896, 0, (x_3087009873).length - 1)], y_3087009874[chckIndx(i_3087009896, 0, (y_3087009874).length - 1)]))) {
            result_3087009875 = false;
            break BeforeRet;
            }
            
            res_2969578979 = addInt(res_2969578979, 1);
          }
      };
    };
    result_3087009875 = true;
    break BeforeRet;
  };

  return result_3087009875;

}

function HEX3DHEX3D_3087009816(a_3087009817, b_3087009818) {
  var result_3087009819 = false;

  BeforeRet: {
    if ((a_3087009817 == null)) {
    result_3087009819 = (b_3087009818 == null);
    break BeforeRet;
    }
    
    if ((b_3087009818 == null)) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009817.text, b_3087009818.text))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.node == b_3087009818.node))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009833(a_3087009817.colors, b_3087009818.colors))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2785018597(a_3087009817.bounds, b_3087009818.bounds))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.render == b_3087009818.render))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.widgetTemplate == b_3087009818.widgetTemplate))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.cloneWidget == b_3087009818.cloneWidget))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    result_3087009819 = HEX3DHEX3D_3087009871(a_3087009817.children, b_3087009818.children);
    break BeforeRet;
  };

  return result_3087009819;

}

function getOrDefault_3087010737(t_3087010740, key_3087010741) {
  var result_3087010742 = null;

    var hcHEX60gensym53_3087010745 = [0];
    var indexHEX60gensym53_3087010752 = rawGet_3087010450(t_3087010740, key_3087010741, hcHEX60gensym53_3087010745, 0);
    if ((0 <= indexHEX60gensym53_3087010752)) {
    result_3087010742 = t_3087010740.data[chckIndx(indexHEX60gensym53_3087010752, 0, (t_3087010740.data).length - 1)].Field2;
    }
    

  return result_3087010742;

}

function HEX3DHEX3D_3087010092(s_3087010095, t_3087010096) {
  var result_3087010097 = false;

  BeforeRet: {
    if ((s_3087010095.counter == t_3087010096.counter)) {
    Label1: {
      var keyHEX60gensym47_3087010401 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym47_3087010402 = null;
      var L_2969578967 = len_3087010148(s_3087010095);
      Label2: {
        var h_2969578969 = 0;
        var colontmp__2969578970 = 0;
        colontmp__2969578970 = (s_3087010095.data).length - 1;
        var res_2969578971 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969578971 <= colontmp__2969578970)) break Label4;
              h_2969578969 = res_2969578971;
              if (isFilled_1308622880(s_3087010095.data[chckIndx(h_2969578969, 0, (s_3087010095.data).length - 1)].Field0)) {
              keyHEX60gensym47_3087010401 = nimCopy(keyHEX60gensym47_3087010401, s_3087010095.data[chckIndx(h_2969578969, 0, (s_3087010095.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym47_3087010402 = s_3087010095.data[chckIndx(h_2969578969, 0, (s_3087010095.data).length - 1)].Field2;
              if (!(hasKey_3087010443(t_3087010096, keyHEX60gensym47_3087010401))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009816(getOrDefault_3087010737(t_3087010096, keyHEX60gensym47_3087010401), valHEX60gensym47_3087010402))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010148(s_3087010095) == L_2969578967))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969578971 = addInt(res_2969578971, 1);
            }
        };
      };
    };
    result_3087010097 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010097;

}

function HEX3DHEX3D_3087010013(a_3087010014, b_3087010015) {
  var result_3087010016 = false;

  BeforeRet: {
    if ((a_3087010014 == null)) {
    result_3087010016 = (b_3087010015 == null);
    break BeforeRet;
    }
    
    if ((b_3087010015 == null)) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.revision == b_3087010015.revision))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.node == b_3087010015.node))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820626(a_3087010014.selectedNode, b_3087010015.selectedNode))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010092(a_3087010014.replacements, b_3087010015.replacements))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.renderDivisionVertically == b_3087010015.renderDivisionVertically))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.inlineBlocks == b_3087010015.inlineBlocks))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.indent == b_3087010015.indent))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    result_3087010016 = true;
    break BeforeRet;
  };

  return result_3087010016;

}

function getItem_3019906744(selfHEX60gensym83_3019906745) {
  var result_3019906746 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)) {
    selfHEX60gensym83_3019906745.id = nimCopy(selfHEX60gensym83_3019906745.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,51,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969578981 = nimCopy(null, selfHEX60gensym83_3019906745.id, NTI2046820355);
    var colontmp__2969578982 = 1;
    result_3019906746 = nimCopy(result_3019906746, {Field0: nimCopy(null, colontmp__2969578981, NTI2046820355), Field1: colontmp__2969578982}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906746;

}

function HEX5BHEX5DHEX3D_3019906924(t_3019906927, key_3019906928, val_3019906929) {
    t_3019906927.set(mapKeyJs_3019899588(key_3019906928), val_3019906929);

  
}

function getOrCreateNodeLayoutInput_3019906753(ctxHEX60gensym84_3019906754, dataHEX60gensym84_3019906755) {
  var result_3019906756 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym84_3019906789 = null;
      var colontmp__2969578957 = [];
      colontmp__2969578957 = values_3019906757(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput);
      var i_2969578959 = 0;
      var L_2969578960 = (colontmp__2969578957).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578959 < L_2969578960)) break Label3;
            existingHEX60gensym84_3019906789 = colontmp__2969578957[chckIndx(i_2969578959, 0, (colontmp__2969578957).length - 1)];
            if (((hash_3087010010(existingHEX60gensym84_3019906789) == hash_3087010010(dataHEX60gensym84_3019906755)) && HEX3DHEX3D_3087010013(existingHEX60gensym84_3019906789, dataHEX60gensym84_3019906755))) {
            result_3019906756 = existingHEX60gensym84_3019906789;
            break BeforeRet;
            }
            
            i_2969578959 = addInt(i_2969578959, 1);
            if (!(((colontmp__2969578957).length == L_2969578960))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym84_3019906790 = getItem_3019906744(dataHEX60gensym84_3019906755);
    var keyHEX60gensym84_3019906791 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym84_3019906790, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym84_3019906754.depGraph.changed, keyHEX60gensym84_3019906791, ctxHEX60gensym84_3019906754.depGraph.revision);
    HEX5BHEX5DHEX3D_3019906924(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput, itemHEX60gensym84_3019906790, dataHEX60gensym84_3019906755);
    result_3019906756 = dataHEX60gensym84_3019906755;
    break BeforeRet;
  };

  return result_3019906756;

}

function contains_3019934605(t_3019934608, key_3019934609) {
  var result_3019934610 = false;

    result_3019934610 = t_3019934608.has(mapKeyJs_3019902675(key_3019934609));

  return result_3019934610;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2164261798(result_2164261800, result_2164261800_Idx, x_2164261801) {
    add_33556386(result_2164261800, result_2164261800_Idx, nimFloatToString_385876087(x_2164261801));

  
}

function HEX24_2164261794(x_2164261796) {
  var result_2164261797 = [[]];

    addFloat_2164261798(result_2164261797, 0, x_2164261796);

  return result_2164261797[0];

}

function HEX24_2147483713(a_2147483714) {
  var result_2147483715 = [];

    result_2147483715 = nimCopy(null, ([40] || []).concat(HEX24_2164261794(a_2147483714.x) || [],[44,32] || [],HEX24_2164261794(a_2147483714.y) || [],[58,32] || [],HEX24_2164261794(a_2147483714.w) || [],[32,120,32] || [],HEX24_2164261794(a_2147483714.h) || [],[41] || []), NTI33554449);

  return result_2147483715;

}

function collectionToString_3087009633(x_3087009635, prefix_3087009636, separator_3087009637, suffix_3087009638) {
  var result_3087009639 = [[]];

    result_3087009639[0] = nimCopy(null, prefix_3087009636, NTI33554449);
    var firstElement_3087009640 = true;
    Label1: {
      var value_3087009644 = [];
      var i_2969578988 = 0;
      var L_2969578989 = (x_3087009635).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578988 < L_2969578989)) break Label3;
            value_3087009644 = x_3087009635[i_2969578988];
            if (firstElement_3087009640) {
            firstElement_3087009640 = false;
            }
            else {
            result_3087009639[0].push.apply(result_3087009639[0], separator_3087009637);;
            }
            
            addQuoted_1593835572(result_3087009639, 0, value_3087009644);
            i_2969578988 += 1;
            if (!(((x_3087009635).length == L_2969578989))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009639[0].push.apply(result_3087009639[0], suffix_3087009638);;

  return result_3087009639[0];

}

function HEX24_3087009629(x_3087009631) {
  var result_3087009632 = [];

    result_3087009632 = nimCopy(null, collectionToString_3087009633(x_3087009631, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009632;

}

function HEX24_3087009622(vnode_3087009623) {
  var result_3087009624 = [];

    result_3087009624 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009624.push.apply(result_3087009624, (vnode_3087009623.text || []).concat([39,44,32] || []));;
    result_3087009624.push.apply(result_3087009624, (HEX24_2147483713(vnode_3087009623.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009623.node == null))) {
    result_3087009624.push.apply(result_3087009624, (HEX24_3003123671(vnode_3087009623.node) || []).concat([44,32] || []));;
    }
    
    result_3087009624.push.apply(result_3087009624, (HEX24_3087009629(vnode_3087009623.colors) || []).concat([44,32] || []));;
    result_3087009624.push.apply(result_3087009624, [41]);;

  return result_3087009624;

}

function join_3087009948(a_3087009950, sep_3087009951) {
  var result_3087009952 = [];

    result_3087009952 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009967 = 0;
      var x_3087009968 = null;
      var i_2969578985 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578985 < (a_3087009950).length)) break Label3;
            i_3087009967 = i_2969578985;
            x_3087009968 = a_3087009950[chckIndx(i_2969578985, 0, (a_3087009950).length - 1)];
            if ((0 < i_3087009967)) {
            result_3087009952.push.apply(result_3087009952, sep_3087009951);;
            }
            
            result_3087009952.push.apply(result_3087009952, HEX24_3087009622(x_3087009968));;
            i_2969578985 = addInt(i_2969578985, 1);
          }
      };
    };

  return result_3087009952;

}

function HEX24_3087009945(nodeLayout_3087009946) {
  var result_3087009947 = [];

    result_3087009947 = nimCopy(null, join_3087009948(nodeLayout_3087009946.root.children, [10]), NTI33554449);

  return result_3087009947;

}

function HEX5BHEX5D_3019934699(t_3019934702, key_3019934703) {
  var result_3019934704 = null;

    result_3019934704 = t_3019934702.get(mapKeyJs_3019902675(key_3019934703));

  return result_3019934704;

}

function HEX24_3087009982(input_3087009983) {
  var result_3087009984 = [];

  BeforeRet: {
    var fmtRes_3087009989 = [mnewString(0)];
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.id, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008590(fmtRes_3087009989, 0, input_3087009983.node, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.selectedNode, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2701131945(fmtRes_3087009989, 0, input_3087009983.revision, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [41]);;
    result_3087009984 = nimCopy(null, fmtRes_3087009989[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009984;

}

function computeNodeLayout_3019934745(ctxHEX60gensym129_3019934746, inputHEX60gensym129_3019934747, recordDependencyHEX60gensym129_3019934748) {
    var Temporary3;
    var Temporary5;

  var result_3019934749 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym129_3019934830 = getItem_3019906744(inputHEX60gensym129_3019934747);
    var keyHEX60gensym129_3019934831 = {Field0: nimCopy(null, itemHEX60gensym129_3019934830, NTI3036676201), Field1: 8};
    if (recordDependencyHEX60gensym129_3019934748) {
    recordDependency_3019906144(ctxHEX60gensym129_3019934746, itemHEX60gensym129_3019934830, 8);
    }
    
    var colorHEX60gensym129_3019934832 = nodeColor_3036678426(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, 0);
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym129_3019934832, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym129_3019934830));
    }
    
    if ((colorHEX60gensym129_3019934832 == 2)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    }
    else {
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym129_3019934832 == 0)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831, true) == 0)) {
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym129_3019934746.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
      if (true) {
      markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
      }
      
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
      if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym129_3019934832 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym129_3019934746.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym129_3019934746.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym129_3019934746.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019934749;

}

function prev_3003121903(node_3003121904) {
  var result_3003121906 = ({val: null});

  BeforeRet: {
    if ((node_3003121904.parent == null)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121913 = index_3003121772(node_3003121904);
    if ((i_3003121913 <= 0)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121906 = nimCopy(result_3003121906, some_3003121890(HEX5BHEX5D_3003121748(node_3003121904.parent, subInt(i_3003121913, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121906;

}

function HEX2BHEX3D_2969570284(aHEX60gensym79_2969570286, bHEX60gensym79_2969570287) {
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "x", bHEX60gensym79_2969570287);
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "y", bHEX60gensym79_2969570287);

  
}

function bounds_3087009979(nodeLayout_3087009980) {
  var result_3087009981 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009981 = nimCopy(result_3087009981, nodeLayout_3087009980.root.bounds, NTI2147483653);
    break BeforeRet;
  };

  return result_3087009981;

}

function insert_2969570296(x_2969570298, x_2969570298_Idx, item_2969570299, i_2969570300) {
    var it_2969570320 = {Field0: null, Field1: ({x: 0.0, y: 0.0})};
    x_2969570298[x_2969570298_Idx] = x_2969570298[x_2969570298_Idx] || []; x_2969570298[x_2969570298_Idx].splice(i_2969570300, 0, it_2969570320);
    x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)] = nimCopy(x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)], item_2969570299, NTI2969568663);

  
}

function next_3003121857(node_3003121858) {
  var result_3003121863 = ({val: null});

  BeforeRet: {
    if ((node_3003121858.parent == null)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121887 = index_3003121772(node_3003121858);
    if ((subInt(len_3003121752(node_3003121858.parent), 1) <= i_3003121887)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121863 = nimCopy(result_3003121863, some_3003121890(HEX5BHEX5D_3003121748(node_3003121858.parent, addInt(i_3003121887, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121863;

}

function handleSelectedNodeChanged_2969569755(editor_2969569756) {
          
function HEX3Aanonymous_2969570157(t_2969570160) {
            var result_2969570163 = ({x: 0.0, y: 0.0});

              result_2969570163 = nimCopy(result_2969570163, measureText_2768240805(gEditor.platform, t_2969570160), NTI2164261152);

            return result_2969570163;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2969570258(t_2969570261) {
            var result_2969570264 = ({x: 0.0, y: 0.0});

              result_2969570264 = nimCopy(result_2969570264, measureText_2768240805(gEditor.platform, t_2969570261), NTI2164261152);

            return result_2969570264;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2969570435(t_2969570438) {
            var result_2969570441 = ({x: 0.0, y: 0.0});

              result_2969570441 = nimCopy(result_2969570441, measureText_2768240805(gEditor.platform, t_2969570438), NTI2164261152);

            return result_2969570441;

          }
    
function HEX3Aanonymous_2969570619(t_2969570622) {
      var result_2969570625 = ({x: 0.0, y: 0.0});

        result_2969570625 = nimCopy(result_2969570625, measureText_2768240805(gEditor.platform, t_2969570622), NTI2164261152);

      return result_2969570625;

    }

  BeforeRet: {
    if ((editor_2969569756.editor == null)) {
    break BeforeRet;
    }
    
    markDirty_2415919143(editor_2969569756);
    var indent_2969569769 = getOption_2818583576(editor_2969569756.editor, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_2969569779 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_2969569789 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var node_2969569790 = node_2969569752(editor_2969569756);
    var margin_2969569791 = (5.0 * totalLineHeight_2768240810(editor_2969569756.editor.platform));
    var foundNode_2969569792 = false;
    var i_2969569793 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label2;
          try {
          var layout_2969569803 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969569804 = nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152);
          if (contains_2969569863(layout_2969569803.nodeToVisualNode, node_2969569790.id)) {
          var visualNode_2969570062 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969569803.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570072 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570062), vec2_2164261725(0.0, offset_2969569804.y));
          if (!(intersects_2130706609(bounds_2969570072, editor_2969569756.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2969570072.y + bounds_2969570072.h) < margin_2969569791)) {
          var subbase_2969570073 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570073);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570072.y + bounds_2969570072.h) - offset_2969569804.y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570072.y)) {
          var subbase_2969570074 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570074);
          editor_2969569756.scrollOffset = ((-((bounds_2969570072.y - offset_2969569804.y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    i_2969569793 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label5;
          try {
          var layout_2969570083 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969570084 = [nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152)];
          var targetNode_2969570085 = node_2969569790;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2969570085 == null)) && !(contains_2969569863(layout_2969570083.nodeToVisualNode, targetNode_2969570085.id)))) break Label8;
                targetNode_2969570085 = targetNode_2969570085.parent;
              }
          };
          if (!((targetNode_2969570085 == null))) {
          var input_2969570164 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(targetNode_2969570085), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570157, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570164, true);
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2969570171 = prev_3003121903(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym31_2969570171)) Temporary11 = false; else {                var prev_2969570194 = get_3003123566(oHEX60gensym31_2969570171);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2969569863(layout_2969570083.nodeToVisualNode, prev_2969570194.id);            }          if (Temporary9) {
          var input_2969570265 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570258, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570265, true);
          HEX2BHEX3D_2969570284(offset_2969570084[0], bounds_3087009979(layout_2969570083).h);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(addInt(i_2969569793, 1), 0, 2147483647));
          Label12: {
            var k_2969570337 = 0;
            var colontmp__2969578943 = 0;
            var colontmp__2969578944 = 0;
            colontmp__2969578943 = addInt(i_2969569793, 1);
            colontmp__2969578944 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578945 = colontmp__2969578943;
            Label13: {
                Label14: while (true) {
                if (!(res_2969578945 <= colontmp__2969578944)) break Label14;
                  k_2969570337 = res_2969578945;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570337, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578945 = addInt(res_2969578945, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2969570348 = next_3003121857(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym34_2969570348)) Temporary17 = false; else {                var next_2969570371 = get_3003123566(oHEX60gensym34_2969570348);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2969569863(layout_2969570083.nodeToVisualNode, next_2969570371.id);            }          if (Temporary15) {
          var input_2969570442 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570435, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570442, true);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(i_2969569793, 0, 2147483647));
          Label18: {
            var k_2969570455 = 0;
            var colontmp__2969578948 = 0;
            colontmp__2969578948 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578949 = i_2969569793;
            Label19: {
                Label20: while (true) {
                if (!(res_2969578949 <= colontmp__2969578948)) break Label20;
                  k_2969570455 = res_2969578949;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570455, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578949 = addInt(res_2969578949, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          }}
          if ((foundNode_2969569792 && contains_2969569863(layout_2969570083.nodeToVisualNode, node_2969569790.id))) {
          var visualNode_2969570605 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570083.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570615 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570605), vec2_2164261725(0.0, offset_2969570084[0].y));
          if (!(intersects_2130706609(bounds_2969570615, rect_2147483666(0.0, 0.0, editor_2969569756.lastBounds.w, editor_2969569756.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2969570615.y + bounds_2969570615.h) < margin_2969569791)) {
          var subbase_2969570616 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570616);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570615.y + bounds_2969570615.h) - offset_2969570084[0].y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570615.y)) {
          var subbase_2969570617 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570617);
          editor_2969569756.scrollOffset = ((-((bounds_2969570615.y - offset_2969570084[0].y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    var subbase_2969570618 = subbase_3003121765(node_2969569790);
    var input_2969570626 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_2969570618, selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570619, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
    var layout_2969570627 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570626, true);
    if (contains_2969569863(layout_2969570627.nodeToVisualNode, node_2969569790.id)) {
    var visualNode_2969570773 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570627.nodeToVisualNode, node_2969569790.id), NTI3087007774);
    var bounds_2969570774 = absoluteBounds_3087009583(visualNode_2969570773);
    editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570618);
    editor_2969569756.scrollOffset = (-(bounds_2969570774.y) + (editor_2969569756.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2969570829(editor_2969570830, node_2969570831) {
  BeforeRet: {
    if ((node_2969570831 == editor_2969570830.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2969570831.parent == null) || !((base_3003121758(node_2969570831) == editor_2969570830.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2969570830.selectedNode == null))) {
    addLast_2969570853(editor_2969570830.selectionHistory, editor_2969570830.selectedNode);
    }
    
    if ((100 < len_2969570994(editor_2969570830.selectionHistory))) {
    var _ = popFirst_2969571003(editor_2969570830.selectionHistory);
    }
    
    editor_2969570830.selectedNode = node_2969570831;
    handleSelectedNodeChanged_2969569755(editor_2969570830);
  };

  
}

function moveCursor_2969578832(self_2969578833, direction_2969578834) {
  BeforeRet: {
    if ((direction_2969578834 < 0)) {
    if (isEditing_2969575154(self_2969578833)) {
    break BeforeRet;
    }
    
    var index_2969578835 = index_3003121772(node_2969569752(self_2969578833));
    if ((0 < index_2969578835)) {
    nodeHEX3D_2969570829(self_2969578833, HEX5BHEX5D_3003121748(node_2969569752(self_2969578833).parent, subInt(index_2969578835, 1)));
    }
    
    }
    else {
      if (isEditing_2969575154(self_2969578833)) {
      break BeforeRet;
      }
      
      var index_2969578836 = index_3003121772(node_2969569752(self_2969578833));
      if (((0 <= index_2969578836) && (index_2969578836 < subInt(len_3003121752(node_2969569752(self_2969578833).parent), 1)))) {
      nodeHEX3D_2969570829(self_2969578833, HEX5BHEX5D_3003121748(node_2969569752(self_2969578833).parent, addInt(index_2969578836, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2969578828(self_2969578888, direction_2969578889) {
    moveCursor_2969578832(self_2969578888, direction_2969578889);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2969578828(this, direction_));};

function moveCursorUp_2969578998(self_2969578999) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969578999)) {
    break BeforeRet;
    }
    
    if (((!((node_2969569752(self_2969578999) == self_2969578999.document.rootNode)) && !((node_2969569752(self_2969578999).parent == self_2969578999.document.rootNode))) && !((node_2969569752(self_2969578999).parent == null)))) {
    nodeHEX3D_2969570829(self_2969578999, node_2969569752(self_2969578999).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2969578994(self_2969579039) {
    moveCursorUp_2969578998(self_2969579039);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2969578994(this));};

function moveCursorDown_2969579060(self_2969579061) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579061)) {
    break BeforeRet;
    }
    
    if ((0 < len_3003121752(node_2969569752(self_2969579061)))) {
    nodeHEX3D_2969570829(self_2969579061, HEX5BHEX5D_3003121748(node_2969569752(self_2969579061), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2969579056(self_2969579089) {
    moveCursorDown_2969579060(self_2969579089);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2969579056(this));};

function getNextChild_2969569747(document_2969569748, node_2969569749, min_2969569750) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575793 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569749) == 0)) {
    result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575796 = node_2969569749;
      var pos_2969575797 = 0;
      var _ = pos_2969575797;
      if ((expr_2969575796.kind == 8)) {
        var oHEX60gensym128_2969575806 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569749, 0), true);
        if (!isSome_3087009356(oHEX60gensym128_2969575806)) Temporary3 = false; else {          var sym_2969575829 = get_3087009376(oHEX60gensym128_2969575806);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575829.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575829;
      if (ConstSet158[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569749) == 3)) {
        if ((min_2969569750 == 0)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 2)) {
        result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569749) == 2)) {
        if ((min_2969569750 == 0)) {
        result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2969569750 < 0)) {
    result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
    break BeforeRet;
    }
    
    if ((subInt(len_3003121752(node_2969569749), 1) <= min_2969569750)) {
    result_2969575793 = nimCopy(result_2969575793, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_2969575793 = nimCopy(result_2969575793, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, addInt(min_2969569750, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575793;

}

function shouldSelectNode_2969575861(node_2969575862) {
  var result_2969575863 = false;

  BeforeRet: {
    switch (node_2969575862.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2969575863 = (len_3003121752(node_2969575862) == 0);
      break BeforeRet;
      break;
    default: 
      result_2969575863 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969575863;

}

function moveCursorNext_2969579110(self_2969579111) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579111)) {
    break BeforeRet;
    }
    
    var node_2969579112 = node_2969569752(self_2969579111);
    Label1: {
      var __2969579113 = 0;
      var n_2969579114 = null;
      var colontmp__2969579163 = null;
      colontmp__2969579163 = node_2969569752(self_2969579111);
      var n_2969579165 = colontmp__2969579163;
      var i_2969579166 = 0;
      var gotoChild_2969579167 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579165 == null))) break Label3;
            if ((gotoChild_2969579167 && (0 < len_3003121752(n_2969579165)))) {
            n_2969579165 = get_3003123566(getNextChild_2969569747(self_2969579111.document, n_2969579165, -1));
            __2969579113 = i_2969579166;
            n_2969579114 = n_2969579165;
            Label4: {
              if (!(shouldSelectNode_2969575861(n_2969579114))) {
              break Label4;
              }
              
              if (!((n_2969579114 == node_2969569752(self_2969579111)))) {
              nodeHEX3D_2969570829(self_2969579111, n_2969579114);
              break Label1;
              }
              
            };
            gotoChild_2969579167 = true;
            }
            else {
              if (!!((n_2969579165.parent == null))) Temporary5 = false; else {                var oHEX60gensym66_2969579169 = getNextChild_2969569747(self_2969579111.document, n_2969579165.parent, index_3003121772(n_2969579165));
                if (!isSome_3003123546(oHEX60gensym66_2969579169)) Temporary6 = false; else {                  var ne_2969579170 = get_3003123566(oHEX60gensym66_2969579169);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2969579165 = ne_2969579170;
            __2969579113 = i_2969579166;
            n_2969579114 = n_2969579165;
            Label7: {
              if (!(shouldSelectNode_2969575861(n_2969579114))) {
              break Label7;
              }
              
              if (!((n_2969579114 == node_2969569752(self_2969579111)))) {
              nodeHEX3D_2969570829(self_2969579111, n_2969579114);
              break Label1;
              }
              
            };
            gotoChild_2969579167 = true;
            }
            else {
              gotoChild_2969579167 = false;
              n_2969579165 = n_2969579165.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2969579106(self_2969579146) {
    moveCursorNext_2969579110(self_2969579146);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2969579106(this));};

function getPrevChild_2969569742(document_2969569743, node_2969569744, max_2969569745) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575943 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569744) == 0)) {
    result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575946 = node_2969569744;
      var pos_2969575947 = 0;
      var _ = pos_2969575947;
      if ((expr_2969575946.kind == 8)) {
        var oHEX60gensym137_2969575956 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569744, 0), true);
        if (!isSome_3087009356(oHEX60gensym137_2969575956)) Temporary3 = false; else {          var sym_2969575979 = get_3087009376(oHEX60gensym137_2969575956);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575979.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575979;
      if (ConstSet159[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569744) == 3)) {
        if ((max_2969569745 == 0)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 2)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569744) == 2)) {
        if ((max_2969569745 == 0)) {
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2969569745 < 0)) {
    result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(len_3003121752(node_2969569744), 1))), NTI3003121783);
    break BeforeRet;
    }
    else {
    if ((max_2969569745 == 0)) {
    result_2969575943 = nimCopy(result_2969575943, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    }
    result_2969575943 = nimCopy(result_2969575943, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(max_2969569745, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575943;

}

function moveCursorPrev_2969579178(self_2969579179) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579179)) {
    break BeforeRet;
    }
    
    var node_2969579180 = node_2969569752(self_2969579179);
    Label1: {
      var n_2969579181 = null;
      var colontmp__2969579230 = null;
      colontmp__2969579230 = node_2969569752(self_2969579179);
      var gotoChild_2969579232 = false;
      var n_2969579233 = colontmp__2969579230;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579233 == null))) break Label3;
            if ((gotoChild_2969579232 && (0 < len_3003121752(n_2969579233)))) {
            n_2969579233 = get_3003123566(getPrevChild_2969569742(self_2969579179.document, n_2969579233, -1));
            gotoChild_2969579232 = true;
            }
            else {
              if (!!((n_2969579233.parent == null))) Temporary4 = false; else {                var oHEX60gensym70_2969579235 = getPrevChild_2969569742(self_2969579179.document, n_2969579233.parent, index_3003121772(n_2969579233));
                if (!isSome_3003123546(oHEX60gensym70_2969579235)) Temporary5 = false; else {                  var ne_2969579236 = get_3003123566(oHEX60gensym70_2969579235);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2969579181 = n_2969579233;
            Label6: {
              if (!(shouldSelectNode_2969575861(n_2969579181))) {
              break Label6;
              }
              
              if (!((n_2969579181 == node_2969569752(self_2969579179)))) {
              nodeHEX3D_2969570829(self_2969579179, n_2969579181);
              break Label1;
              }
              
            };
            n_2969579233 = ne_2969579236;
            gotoChild_2969579232 = true;
            }
            else {
              n_2969579181 = n_2969579233;
              Label7: {
                if (!(shouldSelectNode_2969575861(n_2969579181))) {
                break Label7;
                }
                
                if (!((n_2969579181 == node_2969569752(self_2969579179)))) {
                nodeHEX3D_2969570829(self_2969579179, n_2969579181);
                break Label1;
                }
                
              };
              gotoChild_2969579232 = false;
              n_2969579233 = n_2969579233.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2969579174(self_2969579213) {
    moveCursorPrev_2969579178(self_2969579213);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2969579174(this));};

function getNextLine_2969576027(document_2969576028, node_2969576029) {
              var Temporary6;
              var Temporary7;

  var result_2969576031 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2969576032 = 0;
      var n_2969576033 = null;
      var n_2969579317 = node_2969576029;
      var idx_2969579318 = -1;
      var i_2969579319 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579318 == -1)) {
            __2969576032 = i_2969579319;
            n_2969576033 = n_2969579317;
            Label5: {
              if (((n_2969576033 == node_2969576029) || (n_2969576033.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576033.parent.kind == 7)) {
              if (((n_2969576033.kind == 7) && (len_3003121752(n_2969576033) == 0))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576033.kind == 7))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576033.parent.kind == 9)) {
              var isElse_2969576068 = ((n_2969576033 == last_3003121922(n_2969576033.parent)) && !((modInt(len_3003121752(n_2969576033.parent), 2) == 0)));
              var isCondition_2969576069 = (!(isElse_2969576068) && (modInt(index_3003121772(n_2969576033), 2) == 0));
              if (((n_2969576033.kind == 7) && (len_3003121752(n_2969576033) == 0))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576033.kind == 7)) && (!(isCondition_2969576069) || (0 < index_3003121772(n_2969576033))))) {
              result_2969576031 = nimCopy(result_2969576031, some_3003121890(n_2969576033), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2969579318, 1) < len_3003121752(n_2969579317))) {
            n_2969579317 = HEX5BHEX5D_3003121748(n_2969579317, addInt(idx_2969579318, 1));
            idx_2969579318 = -1;
            }
            else {
              var oHEX60gensym55_2969579321 = next_3003121857(n_2969579317);
              if (!isSome_3003123546(oHEX60gensym55_2969579321)) Temporary7 = false; else {                var ne_2969579322 = get_3003123566(oHEX60gensym55_2969579321);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2969579317 == null));              }            if (Temporary6) {
            n_2969579317 = ne_2969579322;
            idx_2969579318 = -1;
            }
            else {
            if (((!((n_2969579317.parent == null)) && !((n_2969579317 == null))) && !((n_2969579317.parent == null)))) {
            idx_2969579318 = index_3003121772(n_2969579317);
            n_2969579317 = n_2969579317.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579319 = addInt(i_2969579319, 1);
            }
          }
      };
    };
    result_2969576031 = nimCopy(result_2969576031, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576031;

}

function moveCursorNextLine_2969579244(self_2969579245) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579245)) {
    break BeforeRet;
    }
    
      var oHEX60gensym592_2969579248 = getNextLine_2969576027(self_2969579245.document, node_2969569752(self_2969579245));
      if (!isSome_3003123546(oHEX60gensym592_2969579248)) Temporary1 = false; else {        var next_2969579271 = get_3003123566(oHEX60gensym592_2969579248);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579245, next_2969579271);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2969579240(self_2969579299) {
    moveCursorNextLine_2969579244(self_2969579299);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2969579240(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2969576086(document_2969576087, node_2969576088) {
              var Temporary4;

  var result_2969576090 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2969576091 = null;
      var idx_2969579402 = 0;
      var n_2969579403 = node_2969576088;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579403 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969579403), 1)), subInt(idx_2969579402, 1))) {
            n_2969579403 = HEX5BHEX5D_3003121748(n_2969579403, subInt(idx_2969579402, 1));
            idx_2969579402 = len_3003121752(n_2969579403);
            }
            else {
              var oHEX60gensym74_2969579405 = prev_3003121903(n_2969579403);
              if (!isSome_3003123546(oHEX60gensym74_2969579405)) Temporary4 = false; else {                var ne_2969579406 = get_3003123566(oHEX60gensym74_2969579405);
                Temporary4 = true;              }            if (Temporary4) {
            n_2969576091 = n_2969579403;
            Label5: {
              if (((n_2969576091 == node_2969576088) || (n_2969576091.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576091.parent.kind == 7)) {
              if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576091.kind == 7))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576091.parent.kind == 9)) {
              var isElse_2969576126 = ((n_2969576091 == last_3003121922(n_2969576091.parent)) && !((modInt(len_3003121752(n_2969576091.parent), 2) == 0)));
              var isCondition_2969576127 = (!(isElse_2969576126) && (modInt(index_3003121772(n_2969576091), 2) == 0));
              if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576091.kind == 7)) && (!(isCondition_2969576127) || (0 < index_3003121772(n_2969576091))))) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576091.kind == 9)) {
              result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
              break BeforeRet;
              }
              
            };
            n_2969579403 = ne_2969579406;
            idx_2969579402 = len_3003121752(n_2969579403);
            }
            else {
              n_2969576091 = n_2969579403;
              Label6: {
                if (((n_2969576091 == node_2969576088) || (n_2969576091.parent == null))) {
                break Label6;
                }
                
                if ((n_2969576091.parent.kind == 7)) {
                if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                else {
                if (!((n_2969576091.kind == 7))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576091.parent.kind == 9)) {
                var isElse_2969579407 = ((n_2969576091 == last_3003121922(n_2969576091.parent)) && !((modInt(len_3003121752(n_2969576091.parent), 2) == 0)));
                var isCondition_2969579408 = (!(isElse_2969579407) && (modInt(index_3003121772(n_2969576091), 2) == 0));
                if (((n_2969576091.kind == 7) && (len_3003121752(n_2969576091) == 0))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                else {
                if ((!((n_2969576091.kind == 7)) && (!(isCondition_2969579408) || (0 < index_3003121772(n_2969576091))))) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576091.kind == 9)) {
                result_2969576090 = nimCopy(result_2969576090, some_3003121890(n_2969576091), NTI3003121783);
                break BeforeRet;
                }
                
              };
              idx_2969579402 = index_3003121772(n_2969579403);
              n_2969579403 = n_2969579403.parent;
            }
            }
          }
      };
    };
    result_2969576090 = nimCopy(result_2969576090, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576090;

}

function moveCursorPrevLine_2969579329(self_2969579330) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579330)) {
    break BeforeRet;
    }
    
      var oHEX60gensym601_2969579333 = getPrevLine_2969576086(self_2969579330.document, node_2969569752(self_2969579330));
      if (!isSome_3003123546(oHEX60gensym601_2969579333)) Temporary1 = false; else {        var prev_2969579356 = get_3003123566(oHEX60gensym601_2969579333);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579330, prev_2969579356);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2969579325(self_2969579384) {
    moveCursorPrevLine_2969579329(self_2969579384);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2969579325(this));};

function selectContaining_2969579415(self_2969579416, container_2969579417) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579416)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2969579417)) {
    case "function":
        var oHEX60gensym611_2969579420 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 11);
        if (!isSome_3003123546(oHEX60gensym611_2969579420)) Temporary1 = false; else {          var child_2969579443 = get_3003123566(oHEX60gensym611_2969579420);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579443.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym612_2969579446 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 4);
        if (!isSome_3003123546(oHEX60gensym612_2969579446)) Temporary2 = false; else {          var child_2969579469 = get_3003123566(oHEX60gensym612_2969579446);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579469.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym613_2969579472 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 7);
        if (!isSome_3003123546(oHEX60gensym613_2969579472)) Temporary3 = false; else {          var child_2969579495 = get_3003123566(oHEX60gensym613_2969579472);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579495);
      }
      
      break;
    case "node-list":
        var oHEX60gensym614_2969579498 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 7);
        if (!isSome_3003123546(oHEX60gensym614_2969579498)) Temporary4 = false; else {          var child_2969579521 = get_3003123566(oHEX60gensym614_2969579498);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579521.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym615_2969579524 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 9);
        if (!isSome_3003123546(oHEX60gensym615_2969579524)) Temporary5 = false; else {          var child_2969579547 = get_3003123566(oHEX60gensym615_2969579524);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579547.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym616_2969579550 = findWithParentRec_3003123589(node_2969569752(self_2969579416), 10);
        if (!isSome_3003123546(oHEX60gensym616_2969579550)) Temporary6 = false; else {          var child_2969579573 = get_3003123566(oHEX60gensym616_2969579550);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2969570829(self_2969579416, child_2969579573.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2969579411(self_2969579602, container_2969579603) {
    selectContaining_2969579415(self_2969579602, container_2969579603);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2969579411(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3019955566(t_3019955569, key_3019955570) {
    t_3019955569.delete(mapKeyJs_3036678533(key_3019955570));

  
}

function deleteNode_3019955496(ctx_3019955497, node_3019955498) {
          var Temporary3;
            var Temporary4;

    ctx_3019955497.depGraph.revision = addInt(ctx_3019955497.depGraph.revision, 1);
    del_3019955566(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498), Field1: -1});
    if (!((node_3019955498.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498.parent), Field1: -1}, ctx_3019955497.depGraph.revision);
    }
    
    var parent_3019955652 = node_3019955498.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955652 == null))) Temporary3 = false; else {            var oHEX60gensym568_3019955659 = findWithParentRec_3003123589(parent_3019955652, 11);
            if (!isSome_3003123546(oHEX60gensym568_3019955659)) Temporary4 = false; else {              var child_3019955705 = get_3003123566(oHEX60gensym568_3019955659);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955706 = child_3019955705.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955706), Field1: -1}, ctx_3019955497.depGraph.revision);
          parent_3019955652 = functionDefinition_3019955706.parent;
        }
    };

  
}

function rawGet_3221225549(t_3221225552, key_3221225553, hc_3221225554, hc_3221225554_Idx) {
  var result_3221225555 = 0;

  BeforeRet: {
    hc_3221225554[hc_3221225554_Idx] = hash_2046820630(key_3221225553);
    if ((hc_3221225554[hc_3221225554_Idx] == 0)) {
    hc_3221225554[hc_3221225554_Idx] = 314159265;
    }
    
    if (((t_3221225552.data).length == 0)) {
    result_3221225555 = -1;
    break BeforeRet;
    }
    
    var h_3221225607 = (hc_3221225554[hc_3221225554_Idx] & (t_3221225552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0)) break Label2;
          if (((t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0 == hc_3221225554[hc_3221225554_Idx]) && HEX3DHEX3D_2046820626(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field1, key_3221225553))) {
          result_3221225555 = h_3221225607;
          break BeforeRet;
          }
          
          h_3221225607 = nextTry_1308622883(h_3221225607, (t_3221225552.data).length - 1);
        }
    };
    result_3221225555 = subInt(-1, h_3221225607);
  };

  return result_3221225555;

}

function del_2969574288(t_2969574291, key_2969574292) {
    var hc_2969574293 = [0];
    var i_2969574300 = rawGet_3221225549(t_2969574291, key_2969574292, hc_2969574293, 0);
    var mskHEX60gensym36_2969574304 = (t_2969574291.data).length - 1;
    if ((0 <= i_2969574300)) {
    t_2969574291.counter = subInt(t_2969574291.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2969574311 = i_2969574300;
            var rHEX60gensym36_2969574312 = jHEX60gensym36_2969574311;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 = 0;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1 = nimCopy(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2969574300 = (addInt(i_2969574300, 1) & mskHEX60gensym36_2969574304);
                  if (isEmpty_1308622877(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2969574312 = (t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 & mskHEX60gensym36_2969574304);
                  if (!(((((rHEX60gensym36_2969574312 <= i_2969574300) && (jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312)) || ((jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312) && (i_2969574300 < jHEX60gensym36_2969574311))) || ((i_2969574300 < jHEX60gensym36_2969574311) && (rHEX60gensym36_2969574312 <= i_2969574300))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)] = nimCopy(t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)], t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)], NTI2969568631);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2969573874(doc_2969573875, node_2969573876) {
              var Temporary8;

    var fmtRes_2969573881 = [mnewString(0)];
    fmtRes_2969573881[0].push.apply(fmtRes_2969573881[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969573881, 0, node_2969573876, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969573881[0], NTI33554449)]);
    Label1: {
      var child_2969573890 = null;
      var i_2969579677 = 0;
      var L_2969579678 = (node_2969573876.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579677 < L_2969579678)) break Label3;
            child_2969573890 = node_2969573876.children[chckIndx(i_2969579677, 0, (node_2969573876.children).length - 1)];
            handleNodeDelete_2969573874(doc_2969573875, child_2969573890);
            i_2969579677 = addInt(i_2969579677, 1);
            if (!(((node_2969573876.children).length == L_2969579678))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3019955496(ctx_2969567289, node_2969573876);
    Label4: {
      var i_2969573924 = 0;
      var update_2969573925 = null;
      var i_2969579687 = 0;
      var L_2969579688 = (ctx_2969567289.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579687 < L_2969579688)) break Label6;
            i_2969573924 = i_2969579687;
            update_2969573925 = ctx_2969567289.updateFunctions[chckIndx(i_2969579687, 0, (ctx_2969567289.updateFunctions).length - 1)];
            var key_2969573926 = {Field0: getItem_3019906357(node_2969573876), Field1: i_2969573924};
            if (contains_3019940149(ctx_2969567289.diagnosticsPerQuery, key_2969573926)) {
            Label7: {
              var id_2969574075 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2969579682 = [];
              colontmp__2969579682 = (Temporary8 = HEX5BHEX5D_3019940594(ctx_2969567289.diagnosticsPerQuery, key_2969573926), Temporary8)[0][Temporary8[1]];
              var i_2969579683 = 0;
              var L_2969579684 = (colontmp__2969579682).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2969579683 < L_2969579684)) break Label10;
                    id_2969574075 = colontmp__2969579682[chckIndx(i_2969579683, 0, (colontmp__2969579682).length - 1)];
                    del_3019941318(HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_2969574075).queries, key_2969573926);
                    i_2969579683 = addInt(i_2969579683, 1);
                    if (!(((colontmp__2969579682).length == L_2969579684))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3019948061(ctx_2969567289.diagnosticsPerQuery, key_2969573926);
            }
            
            i_2969579687 = addInt(i_2969579687, 1);
            if (!(((ctx_2969567289.updateFunctions).length == L_2969579688))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2969574288(doc_2969573875.nodes, node_2969573876.id);

  
}

function HEX5BHEX5DHEX3D_3003121928(node_3003121929, index_3003121930, newNode_3003121931) {
    newNode_3003121931.parent = node_3003121929;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)].parent = null;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)] = newNode_3003121931;

  
}

function HEX5BHEX5DHEX3D_3019906522(t_3019906525, key_3019906526, val_3019906527) {
    t_3019906525.set(mapKeyJs_3019899588(key_3019906526), val_3019906527);

  
}

function insertNode_3019954804(ctx_3019954805, node_3019954806) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3019954805.depGraph.revision = addInt(ctx_3019954805.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806), Field1: -1}, ctx_3019954805.depGraph.revision);
    if (!((node_3019954806.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806.parent), Field1: -1}, ctx_3019954805.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(node_3019954806), node_3019954806);
    Label1: {
      var key_3019955022 = 0;
      var child_3019955023 = null;
      var n_2969579710 = node_3019954806;
      var idx_2969579711 = -1;
      var i_2969579712 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579711 == -1)) {
            var colontmp__2969579715 = nimCopy(null, {Field0: i_2969579712, Field1: n_2969579710}, NTI3003123002);
            key_3019955022 = colontmp__2969579715["Field0"];
            child_3019955023 = colontmp__2969579715["Field1"];
            HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(child_3019955023), Field1: -1}, ctx_3019954805.depGraph.revision);
            HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(child_3019955023), child_3019955023);
            }
            
            if ((addInt(idx_2969579711, 1) < len_3003121752(n_2969579710))) {
            n_2969579710 = HEX5BHEX5D_3003121748(n_2969579710, addInt(idx_2969579711, 1));
            idx_2969579711 = -1;
            }
            else {
              var oHEX60gensym74_2969579716 = next_3003121857(n_2969579710);
              if (!isSome_3003123546(oHEX60gensym74_2969579716)) Temporary5 = false; else {                var ne_2969579717 = get_3003123566(oHEX60gensym74_2969579716);
                Temporary5 = true;              }            if (Temporary5) {
            n_2969579710 = ne_2969579717;
            idx_2969579711 = -1;
            }
            else {
            if ((!((n_2969579710.parent == null)) && !((n_2969579710.parent == node_3019954806)))) {
            idx_2969579711 = index_3003121772(n_2969579710);
            n_2969579710 = n_2969579710.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579712 = addInt(i_2969579712, 1);
            }
          }
      };
    };
    var parent_3019955162 = node_3019954806.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3019955162 == null))) Temporary8 = false; else {            var oHEX60gensym562_3019955169 = findWithParentRec_3003123589(parent_3019955162, 11);
            if (!isSome_3003123546(oHEX60gensym562_3019955169)) Temporary9 = false; else {              var child_3019955215 = get_3003123566(oHEX60gensym562_3019955169);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3019955216 = child_3019955215.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955216), Field1: -1}, ctx_3019954805.depGraph.revision);
          parent_3019955162 = functionDefinition_3019955216.parent;
        }
    };

  
}

function mustRehash_2969572614(t_2969572616) {
  var result_2969572617 = false;

    if (!((t_2969572616.counter < (t_2969572616.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969572617 = ((mulInt((t_2969572616.data).length, 2) < mulInt(t_2969572616.counter, 3)) || (subInt((t_2969572616.data).length, t_2969572616.counter) < 4));

  return result_2969572617;

}

function rawInsert_2969573223(t_2969573227, data_2969573228, data_2969573228_Idx, key_2969573229, val_2969573230, hc_2969573231, h_2969573232) {
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1 = nimCopy(data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1, key_2969573229, NTI2046820355);
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field2 = val_2969573230;
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field0 = hc_2969573231;

  
}

function enlarge_2969572817(t_2969572820) {
    var n_2969572823 = [];
    n_2969572823 = new Array(chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647) ; ++i) { n_2969572823[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2969572820.data; t_2969572820.data = n_2969572823; n_2969572823 = Temporary1;    Label2: {
      var i_2969572903 = 0;
      var colontmp__2969579721 = 0;
      colontmp__2969579721 = (n_2969572823).length - 1;
      var res_2969579722 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579722 <= colontmp__2969579721)) break Label4;
            i_2969572903 = res_2969579722;
            var eh_2969572981 = n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969572981)) {
            var j_2969572985 = (eh_2969572981 & (t_2969572820.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969572820.data[chckIndx(j_2969572985, 0, (t_2969572820.data).length - 1)].Field0)) break Label6;
                  j_2969572985 = nextTry_1308622883(j_2969572985, (t_2969572820.data).length - 1);
                }
            };
            rawInsert_2969573223(t_2969572820, t_2969572820, "data", n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field1, n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field2, eh_2969572981, j_2969572985);
            }
            
            res_2969579722 = addInt(res_2969579722, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969573464(t_2969573467, key_2969573468, hc_2969573469) {
  var result_2969573470 = 0;

  BeforeRet: {
    if (((t_2969573467.data).length == 0)) {
    result_2969573470 = -1;
    break BeforeRet;
    }
    
    var h_2969573537 = (hc_2969573469 & (t_2969573467.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0)) break Label2;
          if (((t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0 == hc_2969573469) && HEX3DHEX3D_2046820626(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field1, key_2969573468))) {
          result_2969573470 = h_2969573537;
          break BeforeRet;
          }
          
          h_2969573537 = nextTry_1308622883(h_2969573537, (t_2969573467.data).length - 1);
        }
    };
    result_2969573470 = subInt(-1, h_2969573537);
  };

  return result_2969573470;

}

function HEX5BHEX5DHEX3D_2969572385(t_2969572388, key_2969572389, val_2969572390) {
    if (((t_2969572388.data).length == 0)) {
    var correctSizeHEX60gensym97_2969572455 = slotsNeeded_1308622891(32);
    t_2969572388.counter = 0;
    t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2969572460 = [0];
    var index_2969572467 = rawGet_3221225549(t_2969572388, key_2969572389, hc_2969572460, 0);
    if ((0 <= index_2969572467)) {
    t_2969572388.data[chckIndx(index_2969572467, 0, (t_2969572388.data).length - 1)].Field2 = val_2969572390;
    }
    else {
      if (((t_2969572388.data).length == 0)) {
      var correctSizeHEX60gensym100_2969572609 = slotsNeeded_1308622891(32);
      t_2969572388.counter = 0;
      t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2969572614(t_2969572388)) {
      enlarge_2969572817(t_2969572388);
      index_2969572467 = rawGetKnownHC_2969573464(t_2969572388, key_2969572389, hc_2969572460[0]);
      }
      
      index_2969572467 = subInt(-1, index_2969572467);
      rawInsert_2969573223(t_2969572388, t_2969572388, "data", key_2969572389, val_2969572390, hc_2969572460[0], index_2969572467);
      t_2969572388.counter = addInt(t_2969572388.counter, 1);
    }
    

  
}

function handleNodeInserted_2969571616(doc_2969571617, node_2969571618) {
              var Temporary8;

    var fmtRes_2969572306 = [mnewString(0)];
    fmtRes_2969572306[0].push.apply(fmtRes_2969572306[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969572306, 0, node_2969571618, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969572306[0], NTI33554449)]);
    insertNode_3019954804(ctx_2969567289, node_2969571618);
    Label1: {
      var handler_2969572334 = null;
      var i_2969579696 = 0;
      var L_2969579697 = (doc_2969571617.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579696 < L_2969579697)) break Label3;
            handler_2969572334 = doc_2969571617.onNodeInserted[chckIndx(i_2969579696, 0, (doc_2969571617.onNodeInserted).length - 1)];
            handler_2969572334(doc_2969571617, node_2969571618);
            i_2969579696 = addInt(i_2969579696, 1);
            if (!(((doc_2969571617.onNodeInserted).length == L_2969579697))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, node_2969571618.id, node_2969571618);
    Label4: {
      var key_2969573790 = 0;
      var child_2969573791 = null;
      var n_2969579701 = node_2969571618;
      var idx_2969579702 = -1;
      var i_2969579703 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2969579702 == -1)) {
            var colontmp__2969579706 = nimCopy(null, {Field0: i_2969579703, Field1: n_2969579701}, NTI3003123002);
            key_2969573790 = colontmp__2969579706["Field0"];
            child_2969573791 = colontmp__2969579706["Field1"];
            HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, child_2969573791.id, child_2969573791);
            }
            
            if ((addInt(idx_2969579702, 1) < len_3003121752(n_2969579701))) {
            n_2969579701 = HEX5BHEX5D_3003121748(n_2969579701, addInt(idx_2969579702, 1));
            idx_2969579702 = -1;
            }
            else {
              var oHEX60gensym74_2969579707 = next_3003121857(n_2969579701);
              if (!isSome_3003123546(oHEX60gensym74_2969579707)) Temporary8 = false; else {                var ne_2969579708 = get_3003123566(oHEX60gensym74_2969579707);
                Temporary8 = true;              }            if (Temporary8) {
            n_2969579701 = ne_2969579708;
            idx_2969579702 = -1;
            }
            else {
            if ((!((n_2969579701.parent == null)) && !((n_2969579701.parent == node_2969571618)))) {
            idx_2969579702 = index_3003121772(n_2969579701);
            n_2969579701 = n_2969579701.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2969579703 = addInt(i_2969579703, 1);
            }
          }
      };
    };

  
}

function replaceNode_2969576151(document_2969576152, node_2969576153, newNode_2969576154) {
  var result_2969576155 = null;

  BeforeRet: {
    if ((node_2969576153.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2969576161 = index_3003121772(node_2969576153);
    document_2969576152.undoOps.push({kind: 1, parent: node_2969576153.parent, idx: idx_2969576161, node: node_2969576153, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576152.redoOps = nimCopy(null, [], NTI2969572196);
    handleNodeDelete_2969573874(document_2969576152, node_2969576153);
    HEX5BHEX5DHEX3D_3003121928(node_2969576153.parent, idx_2969576161, newNode_2969576154);
    handleNodeInserted_2969571616(document_2969576152, newNode_2969576154);
    result_2969576155 = newNode_2969576154;
    break BeforeRet;
  };

  return result_2969576155;

}

function delete_3003121936(x_3003121938, x_3003121938_Idx, i_3003121939) {
    x_3003121938[x_3003121938_Idx].splice(i_3003121939, 1);

  
}

function delete_3003121932(node_3003121933, index_3003121934) {
  var result_3003121935 = null;

  BeforeRet: {
    if (((index_3003121934 < 0) || (len_3003121752(node_3003121933) <= index_3003121934))) {
    result_3003121935 = node_3003121933;
    break BeforeRet;
    }
    
    HEX5BHEX5D_3003121748(node_3003121933, index_3003121934).parent = null;
    delete_3003121936(node_3003121933, "children", chckRange(index_3003121934, 0, 2147483647));
    if ((index_3003121934 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, index_3003121934);
    break BeforeRet;
    }
    else {
    if ((0 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, subInt(index_3003121934, 1));
    break BeforeRet;
    }
    else {
      result_3003121935 = node_3003121933;
      break BeforeRet;
    }
    }
  };

  return result_3003121935;

}

function deleteNode_2969576215(document_2969576216, node_2969576217) {
  var result_2969576218 = null;

  BeforeRet: {
    if ((node_2969576217.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2969576217.parent == document_2969576216.rootNode) && (len_3003121752(document_2969576216.rootNode) == 1))) {
    result_2969576218 = replaceNode_2969576151(document_2969576216, node_2969576217, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2969576216.undoOps.push({kind: 0, parent: node_2969576217.parent, idx: index_3003121772(node_2969576217), node: node_2969576217, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576216.redoOps = nimCopy(null, [], NTI2969572196);
    handleNodeDelete_2969573874(document_2969576216, node_2969576217);
    result_2969576218 = delete_3003121932(node_2969576217.parent, index_3003121772(node_2969576217));
    break BeforeRet;
  };

  return result_2969576218;

}

function deleteSelected_2969579629(self_2969579630) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579630)) {
    break BeforeRet;
    }
    
    self_2969579630.deletedNode = nimCopy(self_2969579630.deletedNode, some_3003121890(node_2969569752(self_2969579630)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969579630, deleteNode_2969576215(self_2969579630.document, node_2969569752(self_2969579630)));
  };

  
}

function deleteSelectedJsWrapper_2969579625(self_2969579661) {
    deleteSelected_2969579629(self_2969579661);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2969579625(this));};

function initTable_3003123500(initialSize_3003123503) {
  var result_3003123504 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_3003123506 = slotsNeeded_1308622891(chckRange(initialSize_3003123503, 0, 2147483647));
    result_3003123504.counter = 0;
    result_3003123504.data = new Array(chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647) ; ++i) { result_3003123504.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_3003123504;

}

function rawGet_3003122071(t_3003122074, key_3003122075, hc_3003122076, hc_3003122076_Idx) {
  var result_3003122077 = 0;

  BeforeRet: {
    hc_3003122076[hc_3003122076_Idx] = hash_2046820630(key_3003122075);
    if ((hc_3003122076[hc_3003122076_Idx] == 0)) {
    hc_3003122076[hc_3003122076_Idx] = 314159265;
    }
    
    if (((t_3003122074.data).length == 0)) {
    result_3003122077 = -1;
    break BeforeRet;
    }
    
    var h_3003122128 = (hc_3003122076[hc_3003122076_Idx] & (t_3003122074.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0)) break Label2;
          if (((t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0 == hc_3003122076[hc_3003122076_Idx]) && HEX3DHEX3D_2046820626(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field1, key_3003122075))) {
          result_3003122077 = h_3003122128;
          break BeforeRet;
          }
          
          h_3003122128 = nextTry_1308622883(h_3003122128, (t_3003122074.data).length - 1);
        }
    };
    result_3003122077 = subInt(-1, h_3003122128);
  };

  return result_3003122077;

}

function mustRehash_3003122416(t_3003122418) {
  var result_3003122419 = false;

    if (!((t_3003122418.counter < (t_3003122418.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122419 = ((mulInt((t_3003122418.data).length, 2) < mulInt(t_3003122418.counter, 3)) || (subInt((t_3003122418.data).length, t_3003122418.counter) < 4));

  return result_3003122419;

}

function rawInsert_3003122865(t_3003122869, data_3003122870, data_3003122870_Idx, key_3003122871, val_3003122872, hc_3003122873, h_3003122874) {
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1, key_3003122871, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2, val_3003122872, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field0 = hc_3003122873;

  
}

function enlarge_3003122571(t_3003122574) {
    var n_3003122577 = [];
    n_3003122577 = new Array(chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647) ; ++i) { n_3003122577[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_3003122574.data; t_3003122574.data = n_3003122577; n_3003122577 = Temporary1;    Label2: {
      var i_3003122641 = 0;
      var colontmp__2969579790 = 0;
      colontmp__2969579790 = (n_3003122577).length - 1;
      var res_2969579791 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579791 <= colontmp__2969579790)) break Label4;
            i_3003122641 = res_2969579791;
            var eh_3003122695 = n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003122695)) {
            var j_3003122699 = (eh_3003122695 & (t_3003122574.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122574.data[chckIndx(j_3003122699, 0, (t_3003122574.data).length - 1)].Field0)) break Label6;
                  j_3003122699 = nextTry_1308622883(j_3003122699, (t_3003122574.data).length - 1);
                }
            };
            rawInsert_3003122865(t_3003122574, t_3003122574, "data", n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field1, n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field2, eh_3003122695, j_3003122699);
            }
            
            res_2969579791 = addInt(res_2969579791, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123034(t_3003123037, key_3003123038, hc_3003123039) {
  var result_3003123040 = 0;

  BeforeRet: {
    if (((t_3003123037.data).length == 0)) {
    result_3003123040 = -1;
    break BeforeRet;
    }
    
    var h_3003123091 = (hc_3003123039 & (t_3003123037.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0)) break Label2;
          if (((t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0 == hc_3003123039) && HEX3DHEX3D_2046820626(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field1, key_3003123038))) {
          result_3003123040 = h_3003123091;
          break BeforeRet;
          }
          
          h_3003123091 = nextTry_1308622883(h_3003123091, (t_3003123037.data).length - 1);
        }
    };
    result_3003123040 = subInt(-1, h_3003123091);
  };

  return result_3003123040;

}

function HEX5BHEX5DHEX3D_3003122010(t_3003122013, key_3003122014, val_3003122015) {
    if (((t_3003122013.data).length == 0)) {
    var correctSizeHEX60gensym15_3003122065 = slotsNeeded_1308622891(32);
    t_3003122013.counter = 0;
    t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_3003122070 = [0];
    var index_3003122309 = rawGet_3003122071(t_3003122013, key_3003122014, hc_3003122070, 0);
    if ((0 <= index_3003122309)) {
    t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2 = nimCopy(t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2, val_3003122015, NTI2046820355);
    }
    else {
      if (((t_3003122013.data).length == 0)) {
      var correctSizeHEX60gensym20_3003122411 = slotsNeeded_1308622891(32);
      t_3003122013.counter = 0;
      t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_3003122416(t_3003122013)) {
      enlarge_3003122571(t_3003122013);
      index_3003122309 = rawGetKnownHC_3003123034(t_3003122013, key_3003122014, hc_3003122070[0]);
      }
      
      index_3003122309 = subInt(-1, index_3003122309);
      rawInsert_3003122865(t_3003122013, t_3003122013, "data", key_3003122014, val_3003122015, hc_3003122070[0], index_3003122309);
      t_3003122013.counter = addInt(t_3003122013.counter, 1);
    }
    

  
}

function add_3003121702(node_3003121703, child_3003121704) {
    if (HEX3DHEX3D_2046820626(node_3003121703.id, null_2046820646)) {
    node_3003121703.id = nimCopy(node_3003121703.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121704.id, null_2046820646)) {
    child_3003121704.id = nimCopy(child_3003121704.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121704.parent = node_3003121703;
    node_3003121703.children.push(child_3003121704);;

  
}

function clone_3003121958(node_3003121959, idMap_3003121967) {
  var result_3003121968 = null;

    var newNodeId_3003121969 = newId_2046820597();
    result_3003121968 = {kind: node_3003121959.kind, id: nimCopy(null, newNodeId_3003121969, NTI2046820355), reff: nimCopy(null, node_3003121959.reff, NTI2046820355), text: nimCopy(null, node_3003121959.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_3003122010(idMap_3003121967, node_3003121959.id, newNodeId_3003121969);
    Label1: {
      var child_3003123275 = null;
      var i_2969579784 = 0;
      var L_2969579785 = (node_3003121959.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579784 < L_2969579785)) break Label3;
            child_3003123275 = node_3003121959.children[chckIndx(i_2969579784, 0, (node_3003121959.children).length - 1)];
            add_3003121702(result_3003121968, clone_3003121958(child_3003123275, idMap_3003121967));
            i_2969579784 = addInt(i_2969579784, 1);
            if (!(((node_3003121959.children).length == L_2969579785))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3003121968;

}

function hasKey_3003123347(t_3003123350, key_3003123351) {
  var result_3003123352 = false;

    var hc_3003123353 = [0];
    result_3003123352 = (0 <= rawGet_3003122071(t_3003123350, key_3003123351, hc_3003123353, 0));

  return result_3003123352;

}

function contains_3003123341(t_3003123344, key_3003123345) {
  var result_3003123346 = false;

  BeforeRet: {
    result_3003123346 = hasKey_3003123347(t_3003123344, key_3003123345);
    break BeforeRet;
  };

  return result_3003123346;

}

function HEX5BHEX5D_3003123413(t_3003123416, key_3003123417) {
  var result_3003123418 = null;

    var hcHEX60gensym22_3003123419 = [0];
    var indexHEX60gensym22_3003123426 = rawGet_3003122071(t_3003123416, key_3003123417, hcHEX60gensym22_3003123419, 0);
    if ((0 <= indexHEX60gensym22_3003123426)) {
    result_3003123418 = t_3003123416.data[chckIndx(indexHEX60gensym22_3003123426, 0, (t_3003123416.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3003123417);
    }
    

  return result_3003123418;

}

function replaceReferences_3003123294(node_3003123295, idMap_3003123298) {
    if (contains_3003123341(idMap_3003123298, node_3003123295.reff)) {
    node_3003123295.reff = nimCopy(node_3003123295.reff, HEX5BHEX5D_3003123413(idMap_3003123298, node_3003123295.reff), NTI2046820355);
    }
    
    Label1: {
      var child_3003123496 = null;
      var i_2969579795 = 0;
      var L_2969579796 = (node_3003123295.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579795 < L_2969579796)) break Label3;
            child_3003123496 = node_3003123295.children[chckIndx(i_2969579795, 0, (node_3003123295.children).length - 1)];
            replaceReferences_3003123294(child_3003123496, idMap_3003123298);
            i_2969579795 = addInt(i_2969579795, 1);
            if (!(((node_3003123295.children).length == L_2969579796))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_3003123497(node_3003123498) {
  var result_3003123499 = null;

  BeforeRet: {
    var idMap_3003123511 = [initTable_3003123500(32)];
    var newNode_3003123512 = clone_3003121958(node_3003123498, idMap_3003123511[0]);
    replaceReferences_3003123294(newNode_3003123512, idMap_3003123511[0]);
    result_3003123499 = newNode_3003123512;
    break BeforeRet;
  };

  return result_3003123499;

}

function copySelected_2969579736(self_2969579737) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969579737)) {
    break BeforeRet;
    }
    
    self_2969579737.deletedNode = nimCopy(self_2969579737.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969569752(self_2969579737))), NTI3003121783);
  };

  
}

function copySelectedJsWrapper_2969579732(self_2969579768) {
    copySelected_2969579736(self_2969579768);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2969579732(this));};

function getSymbol_3019906948(ctxHEX60gensym85_3019906949, idHEX60gensym85_3019906950) {
  var result_3019906952 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym85_3019906953 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym85_3019906950, NTI2046820355), Field1: 2}, NTI3036676201);
    if (contains_3019901364(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)) {
    result_3019906952 = nimCopy(result_3019906952, some_3019907120(HEX5BHEX5D_3019901463(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)), NTI3087008909);
    break BeforeRet;
    }
    
    result_3019906952 = nimCopy(result_3019906952, none_3019907133(), NTI3087008909);
    break BeforeRet;
  };

  return result_3019906952;

}

function content_2818574085(document_2818574086) {
  var result_2818574087 = [];

  BeforeRet: {
    result_2818574087 = nimCopy(null, document_2818574086.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818574087;

}

function updateNode_3019955286(ctx_3019955287, node_3019955288) {
          var Temporary3;
            var Temporary4;

    ctx_3019955287.depGraph.revision = addInt(ctx_3019955287.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(node_3019955288), Field1: -1}, ctx_3019955287.depGraph.revision);
    var parent_3019955362 = node_3019955288.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955362 == null))) Temporary3 = false; else {            var oHEX60gensym564_3019955369 = findWithParentRec_3003123589(parent_3019955362, 11);
            if (!isSome_3003123546(oHEX60gensym564_3019955369)) Temporary4 = false; else {              var child_3019955415 = get_3003123566(oHEX60gensym564_3019955369);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955416 = child_3019955415.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955416), Field1: -1}, ctx_3019955287.depGraph.revision);
          parent_3019955362 = functionDefinition_3019955416.parent;
        }
    };
    var fmtRes_3019955490 = [mnewString(0)];
    fmtRes_3019955490[0].push.apply(fmtRes_3019955490[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_3019955490, 0, node_3019955288, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019955490[0], NTI33554449)]);

  
}

function notifySymbolChanged_3019954718(ctx_3019954719, sym_3019954720) {
    ctx_3019954719.depGraph.revision = addInt(ctx_3019954719.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954719.depGraph.changed, {Field0: getItem_3019907143(sym_3019954720), Field1: -1}, ctx_3019954719.depGraph.revision);
    var fmtRes_3019954798 = [mnewString(0)];
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3019954798, 0, sym_3019954720.name, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [32,40]);;
    formatValue_3036676344(fmtRes_3019954798, 0, sym_3019954720.id, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019954798[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2969579909 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579909 < rows_1979711496)) break Label3;
            i_1979711534 = i_2969579909;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2969579909 = addInt(i_2969579909, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2969579915 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579915 < rows_1979711496)) break Label6;
            i_1979711551 = i_2969579915;
            Label7: {
              var k_1979711556 = 0;
              var i_2969579913 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2969579913 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2969579913;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2969579913 = addInt(i_2969579913, 1);
                  }
              };
            };
            i_2969579915 = addInt(i_2969579915, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2969579921 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2969579921 < cols_1979711497)) break Label12;
            col_1979711561 = i_2969579921;
            Label13: {
              var row_1979711566 = 0;
              var i_2969579919 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2969579919 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2969579919;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2969579919 = addInt(i_2969579919, 1);
                  }
              };
            };
            i_2969579921 = addInt(i_2969579921, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2969579931 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579931 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2969579931];
            addChar(str_33557214, x_33557228);;
            i_2969579931 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3204448360(len_3204448362) {
  var result_3204448363 = [];

    result_3204448363 = new Array(len_3204448362); for (var i = 0 ; i < len_3204448362 ; ++i) { result_3204448363[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3204448363;

}

function mergeAlt_3204448399(a_3204448401, b_3204448402, lo_3204448403, m_3204448404, hi_3204448405, cmp_3204448408, order_3204448409) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3204448408(a_3204448401[chckIndx(m_3204448404, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(addInt(m_3204448404, 1), 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
    break BeforeRet;
    }
    
    var j_3204448410 = lo_3204448403;
    if (!((j_3204448410 <= m_3204448404))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3204448416 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3204448410 <= m_3204448404)) break Label2;
          b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)] = nimCopy(b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
          bb_3204448416 = addInt(bb_3204448416, 1);
          j_3204448410 = addInt(j_3204448410, 1);
        }
    };
    var i_3204448427 = 0;
    var k_3204448428 = lo_3204448403;
    Label3: {
        Label4: while (true) {
        if (!((k_3204448428 < j_3204448410) && (j_3204448410 <= hi_3204448405))) break Label4;
          if ((HEX2A_1023410184(cmp_3204448408(b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          i_3204448427 = addInt(i_3204448427, 1);
          }
          else {
            a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
            j_3204448410 = addInt(j_3204448410, 1);
          }
          
          k_3204448428 = addInt(k_3204448428, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3204448428 < j_3204448410)) break Label6;
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          k_3204448428 = addInt(k_3204448428, 1);
          i_3204448427 = addInt(i_3204448427, 1);
        }
    };
  };

  
}

function sort_3204448348(a_3204448350, cmp_3204448353, order_3204448354) {
    var n_3204448359 = (a_3204448350).length;
    var b_3204448396 = newSeq_3204448360(chckRange(divInt(n_3204448359, 2), 0, 2147483647));
    var s_3204448397 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3204448397 < n_3204448359)) break Label2;
          var m_3204448398 = subInt(subInt(n_3204448359, 1), s_3204448397);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3204448398)) break Label4;
                mergeAlt_3204448399(a_3204448350, b_3204448396, nimMax(addInt(subInt(m_3204448398, s_3204448397), 1), 0), m_3204448398, addInt(m_3204448398, s_3204448397), cmp_3204448353, order_3204448354);
                m_3204448398 = subInt(m_3204448398, mulInt(s_3204448397, 2));
              }
          };
          s_3204448397 = mulInt(s_3204448397, 2);
        }
    };

  
}

function cmp_3204448328(x_3204448330, y_3204448331) {
  var result_3204448332 = 0;

  BeforeRet: {
    if ((x_3204448330 == y_3204448331)) {
    result_3204448332 = 0;
    break BeforeRet;
    }
    
    if ((x_3204448330 < y_3204448331)) {
    result_3204448332 = -1;
    break BeforeRet;
    }
    
    result_3204448332 = 1;
    break BeforeRet;
  };

  return result_3204448332;

}

function getCompletions_2969575367(editor_2969575368, text_2969575369, contextNode_2969575373) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2969575517(a_2969575535, b_2969575536) {
      var result_2969575541 = 0;

        result_2969575541 = cmp_3204448328(a_2969575535.score, b_2969575536.score);

      return result_2969575541;

    }

  var result_2969575374 = [];

  BeforeRet: {
    result_2969575374 = nimCopy(null, [], NTI3204448274);
    if (((isNone_3003123574(contextNode_2969575373) || (get_3003123566(contextNode_2969575373).kind == 1)) || (get_3003123566(contextNode_2969575373).kind == 0))) {
    var symbols_2969575439 = computeSymbols_3019922496(ctx_2969567289, get_3003123566(contextNode_2969575373), true);
    Label1: {
      var key_2969575444 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2969575445 = null;
      var L_2969579900 = len_3087009065(symbols_2969575439);
      Label2: {
        var h_2969579902 = 0;
        var colontmp__2969579903 = 0;
        colontmp__2969579903 = (symbols_2969575439.data).length - 1;
        var res_2969579904 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969579904 <= colontmp__2969579903)) break Label4;
              h_2969579902 = res_2969579904;
              if (isFilled_1308622880(symbols_2969575439.data[chckIndx(h_2969579902, 0, (symbols_2969575439.data).length - 1)].Field0)) {
              var colontmp__2969579907 = nimCopy(null, {Field0: nimCopy(null, symbols_2969575439.data[chckIndx(h_2969579902, 0, (symbols_2969575439.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969575439.data[chckIndx(h_2969579902, 0, (symbols_2969575439.data).length - 1)].Field2}, NTI3087008732);
              key_2969575444 = nimCopy(key_2969575444, colontmp__2969579907["Field0"], NTI2046820355);
              symbol_2969575445 = colontmp__2969579907["Field1"];
              var score_2969575446 = fuzzyMatch_1979711568(text_2969575369, symbol_2969575445.name);
              result_2969575374.push({kind: 0, score: score_2969575446, id: nimCopy(null, symbol_2969575445.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3087009065(symbols_2969575439) == L_2969579900))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969579904 = addInt(res_2969579904, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2969575453 = nimCopy(null, contextNode_2969575373, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym121_2969575453)) Temporary6 = false; else {        var node_2969575476 = get_3003123566(oHEX60gensym121_2969575453);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2969575476.kind == 0);      }    if (Temporary5) {
    result_2969575374.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2969575369, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2969575369, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2969575369, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2969575369, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2969575369, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2969575369, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2969575374.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2969575369, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575374.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2969575369, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2969575369);
    result_2969575374.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3204448348(result_2969575374, HEX3Aanonymous_2969575517, 0);
    break BeforeRet;
  };

  return result_2969575374;

}

function updateCompletions_2969569740(self_2969569741) {
  BeforeRet: {
    if ((self_2969569741.textDocument == null)) {
    self_2969569741.completions = nimCopy(null, [], NTI3204448274);
    self_2969569741.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2969575565 = nsuJoinSep(content_2818574085(self_2969569741.textDocument), []);
    self_2969569741.completions = nimCopy(null, getCompletions_2969575367(self_2969569741, text_2969575565, some_3003121890(node_2969569752(self_2969569741))), NTI2969571585);
    self_2969569741.completionText = nimCopy(null, text_2969575565, NTI33554449);
    if ((0 < (self_2969569741.completions).length)) {
    self_2969569741.selectedCompletion = clamp_1660945119(self_2969569741.selectedCompletion, 0, subInt((self_2969569741.completions).length, 1));
    }
    else {
      self_2969569741.selectedCompletion = 0;
    }
    
    self_2969569741.scrollToCompletion = nimCopy(self_2969569741.scrollToCompletion, some_1191184367(self_2969569741.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969569741);
  };

  
}

function finishEdit_2969575583(self_2969575584, apply_2969575585) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2969575154(self_2969575584))) {
    break BeforeRet;
    }
    
    if (apply_2969575585) {
    if (!(HEX3DHEX3D_2046820626(self_2969575584.currentlyEditedSymbol, null_2046820646))) {
      var oHEX60gensym643_2969579809 = getSymbol_3019906948(ctx_2969567289, self_2969575584.currentlyEditedSymbol);
      if (!isSome_3087009356(oHEX60gensym643_2969579809)) Temporary1 = false; else {        var sym_2969579832 = get_3087009376(oHEX60gensym643_2969579809);
        Temporary1 = true;      }    if (Temporary1) {
    self_2969575584.document.undoOps.push({kind: 4, id: nimCopy(null, self_2969575584.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2969579832.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2969579832.name = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575584.textDocument), []), NTI33554449);
    if ((sym_2969579832.kind == 0)) {
    var Temporary2 = sym_2969579832;
    if (ConstSet160[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2969579832.name, NTI33554449);
    var Temporary3 = sym_2969579832;
    if (ConstSet161[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3019955286(ctx_2969567289, Temporary3.node);
    }
    
    notifySymbolChanged_3019954718(ctx_2969567289, sym_2969579832);
    }
    
    }
    else {
    if (!((self_2969575584.currentlyEditedNode == null))) {
    self_2969575584.document.undoOps.push({kind: 3, node: self_2969575584.currentlyEditedNode, text: nimCopy(null, self_2969575584.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2969575584.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575584.textDocument), [10]), NTI33554449);
    updateNode_3019955286(ctx_2969567289, self_2969575584.currentlyEditedNode);
    }
    }
    }
    
    unregister_2415919268(self_2969575584.textEditor);
    self_2969575584.textEditor = null;
    self_2969575584.textDocument = null;
    self_2969575584.currentlyEditedSymbol = nimCopy(self_2969575584.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575584.currentlyEditedNode = null;
    updateCompletions_2969569740(self_2969575584);
    markDirty_2415919143(self_2969575584);
  };

  
}

function finishEditJsWrapper_2969579800(self_2969579877, apply_2969579878) {
    finishEdit_2969575583(self_2969579877, apply_2969579878);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2969579800(this, apply_));};

function pop_2969576288(s_2969576290, s_2969576290_Idx) {
  var result_2969576291 = null;

    var L_2969576295 = subInt((s_2969576290[s_2969576290_Idx]).length, 1);
    result_2969576291 = s_2969576290[s_2969576290_Idx][chckIndx(L_2969576295, 0, (s_2969576290[s_2969576290_Idx]).length - 1)];
    if (s_2969576290[s_2969576290_Idx].length < chckRange(L_2969576295, 0, 2147483647)) { for (var i = s_2969576290[s_2969576290_Idx].length ; i < chckRange(L_2969576295, 0, 2147483647) ; ++i) s_2969576290[s_2969576290_Idx].push(null); }
               else { s_2969576290[s_2969576290_Idx].length = chckRange(L_2969576295, 0, 2147483647); };

  return result_2969576291;

}

function formatValue_2969569607(result_2969569609, result_2969569609_Idx, value_2969569610, specifier_2969569611) {
    formatValue_721420459(result_2969569609, result_2969569609_Idx, reprEnum(value_2969569610, NTI2969568481), specifier_2969569611);

  
}

function HEX24_2969569599(op_2969569600) {
  var result_2969569601 = [];

    var fmtRes_2969569606 = [mnewString(0)];
    formatValue_2969569607(fmtRes_2969569606, 0, op_2969569600.kind, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2969569606, 0, op_2969569600.text, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [39]);;
    result_2969569601 = nimCopy(null, fmtRes_2969569606[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820626(op_2969569600.id, null_2046820646))) {
    var fmtRes_2969569619 = [mnewString(0)];
    fmtRes_2969569619[0].push.apply(fmtRes_2969569619[0], [44,32,105,100,32,61,32]);;
    formatValue_3036676344(fmtRes_2969569619, 0, op_2969569600.id, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569619[0]);;
    }
    
    if (!((op_2969569600.node == null))) {
    var fmtRes_2969569633 = [mnewString(0)];
    fmtRes_2969569633[0].push.apply(fmtRes_2969569633[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569633, 0, op_2969569600.node, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569633[0]);;
    }
    
    if (!((op_2969569600.parent == null))) {
    var fmtRes_2969569647 = [mnewString(0)];
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569647, 0, op_2969569600.parent, []);
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_2969569647, 0, op_2969569600.idx, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569647[0]);;
    }
    

  return result_2969569601;

}

function formatValue_2969576306(result_2969576308, result_2969576308_Idx, value_2969576309, specifier_2969576310) {
    formatValue_721420459(result_2969576308, result_2969576308_Idx, HEX24_2969569599(value_2969576309), specifier_2969576310);

  
}

function insert_3003121722(x_3003121724, x_3003121724_Idx, item_3003121725, i_3003121726) {
    var it_3003121747 = null;
    x_3003121724[x_3003121724_Idx] = x_3003121724[x_3003121724_Idx] || []; x_3003121724[x_3003121724_Idx].splice(i_3003121726, 0, it_3003121747);
    x_3003121724[x_3003121724_Idx][chckIndx(i_3003121726, 0, (x_3003121724[x_3003121724_Idx]).length - 1)] = item_3003121725;

  
}

function insert_3003121718(node_3003121719, child_3003121720, idx_3003121721) {
    if (HEX3DHEX3D_2046820626(node_3003121719.id, null_2046820646)) {
    node_3003121719.id = nimCopy(node_3003121719.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121720.id, null_2046820646)) {
    child_3003121720.id = nimCopy(child_3003121720.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121720.parent = node_3003121719;
    insert_3003121722(node_3003121719, "children", child_3003121720, chckRange(idx_3003121721, 0, 2147483647));

  
}

function undo_2969576278(document_2969576279) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576281 = ({val: null});

  BeforeRet: {
    if (((document_2969576279.undoOps).length == 0)) {
    result_2969576281 = nimCopy(result_2969576281, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var undoOp_2969576300 = pop_2969576288(document_2969576279, "undoOps");
    var fmtRes_2969576305 = [mnewString(0)];
    fmtRes_2969576305[0].push.apply(fmtRes_2969576305[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2969576306(fmtRes_2969576305, 0, undoOp_2969576300, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576305[0], NTI33554449)]);
    switch (undoOp_2969576300.kind) {
    case 0:
      insert_3003121718(undoOp_2969576300.parent, undoOp_2969576300.node, undoOp_2969576300.idx);
      handleNodeInserted_2969571616(document_2969576279, undoOp_2969576300.node);
      document_2969576279.redoOps.push(undoOp_2969576300);;
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.node), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576318 = HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx);
      handleNodeDelete_2969573874(document_2969576279, HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx));
      HEX5BHEX5DHEX3D_3003121928(undoOp_2969576300.parent, undoOp_2969576300.idx, undoOp_2969576300.node);
      handleNodeInserted_2969571616(document_2969576279, undoOp_2969576300.node);
      document_2969576279.redoOps.push({kind: 1, parent: undoOp_2969576300.parent, idx: undoOp_2969576300.idx, node: oldNode_2969576318, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2969573874(document_2969576279, HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx));
      var _ = delete_3003121932(undoOp_2969576300.parent, undoOp_2969576300.idx);
      document_2969576279.redoOps.push(undoOp_2969576300);;
      if ((undoOp_2969576300.idx < len_3003121752(undoOp_2969576300.parent))) {
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576300.parent, undoOp_2969576300.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2969576300.idx)) {
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576300.parent, subInt(undoOp_2969576300.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576281 = nimCopy(result_2969576281, some_3003121890(undoOp_2969576300.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2969576341 = getSymbol_3019906948(ctx_2969567289, undoOp_2969576300.id);
        if (!isSome_3087009356(oHEX60gensym151_2969576341)) Temporary1 = false; else {          var symbol_2969576364 = get_3087009376(oHEX60gensym151_2969576341);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576279.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2969576300.id, NTI2046820355), text: nimCopy(null, symbol_2969576364.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576364.name = nimCopy(null, undoOp_2969576300.text, NTI33554449);
      if ((symbol_2969576364.kind == 0)) {
      var Temporary2 = symbol_2969576364;
      if (ConstSet169[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576364.name, NTI33554449);
      var Temporary3 = symbol_2969576364;
      if (ConstSet170[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576364);
      }
      
      break;
    case 3:
      document_2969576279.redoOps.push({kind: 3, node: undoOp_2969576300.node, text: nimCopy(null, undoOp_2969576300.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2969576300.node.text = nimCopy(null, undoOp_2969576300.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, undoOp_2969576300.node);
      break;
    }
    result_2969576281 = nimCopy(result_2969576281, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576281;

}

function undo_2969579944(self_2969579945) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969579945)) {
    break BeforeRet;
    }
    
    finishEdit_2969575583(self_2969579945, false);
      var oHEX60gensym653_2969579948 = undo_2969576278(self_2969579945.document);
      if (!isSome_3003123546(oHEX60gensym653_2969579948)) Temporary1 = false; else {        var node_2969579971 = get_3003123566(oHEX60gensym653_2969579948);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579945, node_2969579971);
    }
    
    markDirty_2415919143(self_2969579945);
  };

  
}

function undoJsWrapper2_2969579940(self_2969579999) {
    undo_2969579944(self_2969579999);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2969579940(this));};

function redo_2969576379(document_2969576380) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576382 = ({val: null});

  BeforeRet: {
    if (((document_2969576380.redoOps).length == 0)) {
    result_2969576382 = nimCopy(result_2969576382, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var redoOp_2969576391 = pop_2969576288(document_2969576380, "redoOps");
    var fmtRes_2969576396 = [mnewString(0)];
    fmtRes_2969576396[0].push.apply(fmtRes_2969576396[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2969576306(fmtRes_2969576396, 0, redoOp_2969576391, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576396[0], NTI33554449)]);
    switch (redoOp_2969576391.kind) {
    case 0:
      document_2969576380.undoOps.push({kind: 0, parent: redoOp_2969576391.parent, idx: redoOp_2969576391.idx, node: redoOp_2969576391.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2969573874(document_2969576380, HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx));
      var _ = delete_3003121932(redoOp_2969576391.parent, redoOp_2969576391.idx);
      if ((redoOp_2969576391.idx < len_3003121752(redoOp_2969576391.parent))) {
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2969576391.idx)) {
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576391.parent, subInt(redoOp_2969576391.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576415 = HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx);
      handleNodeDelete_2969573874(document_2969576380, HEX5BHEX5D_3003121748(redoOp_2969576391.parent, redoOp_2969576391.idx));
      HEX5BHEX5DHEX3D_3003121928(redoOp_2969576391.parent, redoOp_2969576391.idx, redoOp_2969576391.node);
      handleNodeInserted_2969571616(document_2969576380, redoOp_2969576391.node);
      document_2969576380.undoOps.push({kind: 1, parent: redoOp_2969576391.parent, idx: redoOp_2969576391.idx, node: oldNode_2969576415, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      insert_3003121718(redoOp_2969576391.parent, redoOp_2969576391.node, redoOp_2969576391.idx);
      handleNodeInserted_2969571616(document_2969576380, redoOp_2969576391.node);
      document_2969576380.undoOps.push(redoOp_2969576391);;
      result_2969576382 = nimCopy(result_2969576382, some_3003121890(redoOp_2969576391.node), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2969576432 = getSymbol_3019906948(ctx_2969567289, redoOp_2969576391.id);
        if (!isSome_3087009356(oHEX60gensym154_2969576432)) Temporary1 = false; else {          var symbol_2969576455 = get_3087009376(oHEX60gensym154_2969576432);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576380.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2969576391.id, NTI2046820355), text: nimCopy(null, symbol_2969576455.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576455.name = nimCopy(null, redoOp_2969576391.text, NTI33554449);
      if ((symbol_2969576455.kind == 0)) {
      var Temporary2 = symbol_2969576455;
      if (ConstSet171[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576455.name, NTI33554449);
      var Temporary3 = symbol_2969576455;
      if (ConstSet172[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576455);
      }
      
      break;
    case 3:
      document_2969576380.undoOps.push({kind: 3, node: redoOp_2969576391.node, text: nimCopy(null, redoOp_2969576391.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2969576391.node.text = nimCopy(null, redoOp_2969576391.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, redoOp_2969576391.node);
      break;
    }
    result_2969576382 = nimCopy(result_2969576382, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576382;

}

function redo_2969580021(self_2969580022) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580022)) {
    break BeforeRet;
    }
    
    finishEdit_2969575583(self_2969580022, false);
      var oHEX60gensym662_2969580025 = redo_2969576379(self_2969580022.document);
      if (!isSome_3003123546(oHEX60gensym662_2969580025)) Temporary1 = false; else {        var node_2969580048 = get_3003123566(oHEX60gensym662_2969580025);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969580022, node_2969580048);
    }
    
    markDirty_2415919143(self_2969580022);
  };

  
}

function redoJsWrapper2_2969580017(self_2969580076) {
    redo_2969580021(self_2969580076);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2969580017(this));};

function canInsertInto_2969578688(self_2969578689, parent_2969578690) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2969578691 = false;

  BeforeRet: {
    switch (parent_2969578690.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2969578691 = false;
      break BeforeRet;
      break;
    case 4:
      result_2969578691 = (len_3003121752(parent_2969578690) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2969578691 = (len_3003121752(parent_2969578690) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2969578691 = (len_3003121752(parent_2969578690) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2969578691 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_3003121752(parent_2969578690) == 0)) {
      result_2969578691 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym529_2969578694 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578690, 0), true);
        if (!isSome_3087009356(oHEX60gensym529_2969578694)) Temporary1 = false; else {          var sym_2969578717 = get_3087009376(oHEX60gensym529_2969578694);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2969578717.kind == 1)) {
      var Temporary2 = sym_2969578717;
      if (ConstSet173[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2969578691 = (len_3003121752(parent_2969578690) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2969578691 = (len_3003121752(parent_2969578690) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2969578722 = computeType_3019913434(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578690, 0), true);
      if ((typ_2969578722.kind == 4)) {
        var Temporary4 = typ_2969578722;
        if (ConstSet174[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2969578722;
          if (ConstSet175[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2969578722;
          if (ConstSet176[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008313((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008188(true));        }      if (Temporary3) {
      result_2969578691 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2969578722;
      if (ConstSet177[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2969578691 = (len_3003121752(parent_2969578690) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2969578691 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969578691;

}

function some_2969576510(val_2969576512) {
  var result_2969576513 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969576513.has = true;
    result_2969576513.val = nimCopy(result_2969576513.val, val_2969576512, NTI2969572490);

  return result_2969576513;

}

function none_2969576524() {
  var result_2969576531 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2969576531;

}

function none_2969577011() {
  var result_2969577013 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969577013 = nimCopy(result_2969577013, none_2969576524(), NTI2969572495);

  return result_2969577013;

}

function createNodeFromAction_2969576470(editor_2969576471, arg_2969576472, node_2969576473, typ_2969576474) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2969576480 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2969576472)) {
    case "deleted":
        var oHEX60gensym155_2969576483 = nimCopy(null, editor_2969576471.deletedNode, NTI3003121783);
        if (!isSome_3003123546(oHEX60gensym155_2969576483)) Temporary1 = false; else {          var node_2969576506 = get_3003123566(oHEX60gensym155_2969576483);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2969576471.deletedNode = nimCopy(editor_2969576471.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969576506)), NTI3003121783);
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576506, Field1: 0}), NTI2969572495);
      break BeforeRet;
      }
      
      result_2969576480 = nimCopy(result_2969576480, none_2969576524(), NTI2969572495);
      break BeforeRet;
      break;
    case "empty":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "identifier":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "number-literal":
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2969576545 = null;
        Label3: {
          var res_2969576615 = null;
          res_2969576615 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576615.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576615.id = nimCopy(res_2969576615.id, newId_2046820597(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2969576618 = null;
              res_2969576618 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576618.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969576615, res_2969576618);
        };
      };
      var node_2969576637 = res_2969576615;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576637, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2969576645 = null;
        Label9: {
          var res_2969576651 = null;
          res_2969576651 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576651.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576651.id = nimCopy(res_2969576651.id, newId_2046820597(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2969576654 = null;
              res_2969576654 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576654.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576651, res_2969576654);
            Label14: {
              var res_2969576656 = null;
              res_2969576656 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576656.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576651, res_2969576656);
          };
        };
      };
      var node_2969576684 = res_2969576651;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576684, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2969576692 = null;
        Label17: {
          var res_2969576698 = null;
          res_2969576698 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576698.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576698.id = nimCopy(res_2969576698.id, newId_2046820597(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2969576701 = null;
              res_2969576701 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576701.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576701);
            Label22: {
              var res_2969576703 = null;
              res_2969576703 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576703.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576698, res_2969576703);
          };
        };
      };
      var node_2969576731 = res_2969576698;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969576731, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2969576735 = computeSymbol_3019919344(ctx_2969567289, node_2969576473, true);
        var oHEX60gensym183_2969576738 = nimCopy(null, sym_2969576735, NTI3087008909);
        if (!isSome_3087009356(oHEX60gensym183_2969576738)) Temporary26 = false; else {          var sym_2969576761 = get_3087009376(oHEX60gensym183_2969576738);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2969576761.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2969576761;
      if (ConstSet178[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2969576766 = Temporary24;
      switch (kind_2969576766) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2969576771 = null;
          Label30: {
            var res_2969576777 = null;
            res_2969576777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576777.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2969576779 = null;
                res_2969576779 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576779.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576777, res_2969576779);
              Label35: {
                var res_2969576781 = null;
                res_2969576781 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576781.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576777, res_2969576781);
            };
          };
        };
        Temporary28 = res_2969576777;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2969576813 = null;
          Label38: {
            var res_2969576819 = null;
            res_2969576819 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576819.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2969576821 = null;
                res_2969576821 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576821.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576821);
              Label43: {
                var res_2969576823 = null;
                res_2969576823 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576823.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576823);
              Label45: {
                var res_2969576825 = null;
                res_2969576825 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576825.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576819, res_2969576825);
            };
          };
        };
        Temporary28 = res_2969576819;
        break;
      case 0:
        var typ_2969576862 = computeType_3019913434(ctx_2969567289, node_2969576473, true);
        if ((typ_2969576862.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2969576871 = null;
          Label49: {
            var res_2969576877 = null;
            res_2969576877 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576877.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2969576879 = null;
                res_2969576879 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576879.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576879);
              Label54: {
                var res_2969576881 = null;
                res_2969576881 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576881.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576881);
              Label56: {
                var res_2969576883 = null;
                res_2969576883 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576883.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576877, res_2969576883);
            };
          };
        };
        Temporary47 = res_2969576877;
        }
        else {
        if (!((typ_2969576862.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2969576928 = null;
          Label59: {
            var res_2969576934 = null;
            res_2969576934 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576934.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2969576936 = null;
                res_2969576936 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576936.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_3003121702(res_2969576934, res_2969576936);
          };
        };
        Temporary47 = res_2969576934;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2969576959 = null;
            Label65: {
              var res_2969576965 = null;
              res_2969576965 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576965.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2969576967 = null;
                  res_2969576967 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969576967.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969576965, res_2969576967);
            };
          };
          var newNode_2969576986 = res_2969576965;
          Label70: {
            var __2969576990 = null;
            var colontmp__2969580331 = [];
            var Temporary71 = typ_2969576862;
            if (ConstSet179[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2969580331 = Temporary71.paramTypes;
            var i_2969580332 = 0;
            var L_2969580333 = (colontmp__2969580331).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2969580332 < L_2969580333)) break Label73;
                  __2969576990 = colontmp__2969580331[chckIndx(i_2969580332, 0, (colontmp__2969580331).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2969576995 = null;
                    Label75: {
                      var res_2969577001 = null;
                      res_2969577001 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2969577001.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_3003121702(newNode_2969576986, res_2969577001);
                  i_2969580332 = addInt(i_2969580332, 1);
                  if (!(((colontmp__2969580331).length == L_2969580333))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2969576986;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2969576480 = nimCopy(result_2969576480, none_2969577011(), NTI2969572495);
        break BeforeRet;
        break;
      }
      var node_2969577030 = Temporary28;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577030, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2969577038 = null;
        Label78: {
          var res_2969577044 = null;
          res_2969577044 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577044.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2969577046 = null;
              res_2969577046 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577046.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577044, res_2969577046);
            Label83: {
              var res_2969577048 = null;
              res_2969577048 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577048.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577044, res_2969577048);
          };
        };
      };
      var node_2969577076 = res_2969577044;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577076, Field1: 1}), NTI2969572495);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2969576474.kind == 2)) {
      Temporary85 = IdAppendString_2986344459;
      }
      else {
      Temporary85 = IdAdd_2986344451;
      }
      
      var operator_2969577084 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym249_2969577089 = null;
        Label87: {
          var res_2969577095 = null;
          res_2969577095 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577095.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2969577097 = null;
              res_2969577097 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577097.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577097.reff = nimCopy(res_2969577097.reff, operator_2969577084, NTI2046820355);
            };
            add_3003121702(res_2969577095, res_2969577097);
            Label92: {
              var res_2969577100 = null;
              res_2969577100 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577100.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577095, res_2969577100);
            Label94: {
              var res_2969577102 = null;
              res_2969577102 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577102.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577095, res_2969577102);
          };
        };
      };
      var node_2969577139 = res_2969577095;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577139, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2969577147 = null;
        Label97: {
          var res_2969577153 = null;
          res_2969577153 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577153.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2969577155 = null;
              res_2969577155 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577155.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577155.reff = nimCopy(res_2969577155.reff, IdSub_2986344452, NTI2046820355);
            };
            add_3003121702(res_2969577153, res_2969577155);
            Label102: {
              var res_2969577158 = null;
              res_2969577158 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577158.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577153, res_2969577158);
            Label104: {
              var res_2969577160 = null;
              res_2969577160 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577160.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577153, res_2969577160);
          };
        };
      };
      var node_2969577197 = res_2969577153;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577197, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2969577205 = null;
        Label107: {
          var res_2969577211 = null;
          res_2969577211 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577211.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2969577213 = null;
              res_2969577213 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577213.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577213.reff = nimCopy(res_2969577213.reff, IdMul_2986344453, NTI2046820355);
            };
            add_3003121702(res_2969577211, res_2969577213);
            Label112: {
              var res_2969577216 = null;
              res_2969577216 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577216.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577211, res_2969577216);
            Label114: {
              var res_2969577218 = null;
              res_2969577218 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577218.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577211, res_2969577218);
          };
        };
      };
      var node_2969577255 = res_2969577211;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577255, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2969577263 = null;
        Label117: {
          var res_2969577269 = null;
          res_2969577269 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577269.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2969577271 = null;
              res_2969577271 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577271.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577271.reff = nimCopy(res_2969577271.reff, IdDiv_2986344454, NTI2046820355);
            };
            add_3003121702(res_2969577269, res_2969577271);
            Label122: {
              var res_2969577274 = null;
              res_2969577274 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577274.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577269, res_2969577274);
            Label124: {
              var res_2969577276 = null;
              res_2969577276 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577276.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577269, res_2969577276);
          };
        };
      };
      var node_2969577313 = res_2969577269;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577313, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2969577321 = null;
        Label127: {
          var res_2969577327 = null;
          res_2969577327 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577327.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2969577329 = null;
              res_2969577329 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577329.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577329.reff = nimCopy(res_2969577329.reff, IdMod_2986344455, NTI2046820355);
            };
            add_3003121702(res_2969577327, res_2969577329);
            Label132: {
              var res_2969577332 = null;
              res_2969577332 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577332.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577327, res_2969577332);
            Label134: {
              var res_2969577334 = null;
              res_2969577334 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577334.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577327, res_2969577334);
          };
        };
      };
      var node_2969577371 = res_2969577327;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577371, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2969577379 = null;
        Label137: {
          var res_2969577385 = null;
          res_2969577385 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577385.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969577385.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2969577396 = res_2969577385;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577396, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2969577404 = null;
        Label140: {
          var res_2969577410 = null;
          res_2969577410 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577410.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2969577412 = null;
              res_2969577412 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577412.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969577410, res_2969577412);
        };
      };
      var node_2969577431 = res_2969577410;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577431, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2969577439 = null;
        Label146: {
          var res_2969577445 = null;
          res_2969577445 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577445.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2969577447 = null;
              res_2969577447 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577447.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577445, res_2969577447);
            Label151: {
              var res_2969577449 = null;
              res_2969577449 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577449.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577445, res_2969577449);
          };
        };
      };
      var node_2969577477 = res_2969577445;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577477, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2969577485 = null;
        Label154: {
          var res_2969577491 = null;
          res_2969577491 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577491.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2969577493 = null;
              res_2969577493 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577493.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577493.reff = nimCopy(res_2969577493.reff, IdEqual_2986344467, NTI2046820355);
            };
            add_3003121702(res_2969577491, res_2969577493);
            Label159: {
              var res_2969577496 = null;
              res_2969577496 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577496.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577491, res_2969577496);
            Label161: {
              var res_2969577498 = null;
              res_2969577498 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577498.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577491, res_2969577498);
          };
        };
      };
      var node_2969577535 = res_2969577491;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577535, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2969577543 = null;
        Label164: {
          var res_2969577549 = null;
          res_2969577549 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577549.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2969577551 = null;
              res_2969577551 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577551.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577551.reff = nimCopy(res_2969577551.reff, IdNotEqual_2986344468, NTI2046820355);
            };
            add_3003121702(res_2969577549, res_2969577551);
            Label169: {
              var res_2969577554 = null;
              res_2969577554 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577554.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577549, res_2969577554);
            Label171: {
              var res_2969577556 = null;
              res_2969577556 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577556.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577549, res_2969577556);
          };
        };
      };
      var node_2969577593 = res_2969577549;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577593, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2969577601 = null;
        Label174: {
          var res_2969577607 = null;
          res_2969577607 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577607.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2969577609 = null;
              res_2969577609 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577609.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577609.reff = nimCopy(res_2969577609.reff, IdLessEqual_2986344464, NTI2046820355);
            };
            add_3003121702(res_2969577607, res_2969577609);
            Label179: {
              var res_2969577612 = null;
              res_2969577612 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577612.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577607, res_2969577612);
            Label181: {
              var res_2969577614 = null;
              res_2969577614 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577614.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577607, res_2969577614);
          };
        };
      };
      var node_2969577651 = res_2969577607;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577651, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2969577659 = null;
        Label184: {
          var res_2969577665 = null;
          res_2969577665 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577665.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2969577667 = null;
              res_2969577667 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577667.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577667.reff = nimCopy(res_2969577667.reff, IdGreaterEqual_2986344466, NTI2046820355);
            };
            add_3003121702(res_2969577665, res_2969577667);
            Label189: {
              var res_2969577670 = null;
              res_2969577670 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577670.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577665, res_2969577670);
            Label191: {
              var res_2969577672 = null;
              res_2969577672 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577672.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577665, res_2969577672);
          };
        };
      };
      var node_2969577709 = res_2969577665;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577709, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2969577717 = null;
        Label194: {
          var res_2969577723 = null;
          res_2969577723 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577723.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2969577725 = null;
              res_2969577725 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577725.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577725.reff = nimCopy(res_2969577725.reff, IdLess_2986344463, NTI2046820355);
            };
            add_3003121702(res_2969577723, res_2969577725);
            Label199: {
              var res_2969577728 = null;
              res_2969577728 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577728.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577723, res_2969577728);
            Label201: {
              var res_2969577730 = null;
              res_2969577730 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577730.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577723, res_2969577730);
          };
        };
      };
      var node_2969577767 = res_2969577723;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577767, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2969577775 = null;
        Label204: {
          var res_2969577781 = null;
          res_2969577781 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577781.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2969577783 = null;
              res_2969577783 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577783.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577783.reff = nimCopy(res_2969577783.reff, IdGreater_2986344465, NTI2046820355);
            };
            add_3003121702(res_2969577781, res_2969577783);
            Label209: {
              var res_2969577786 = null;
              res_2969577786 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577786.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577781, res_2969577786);
            Label211: {
              var res_2969577788 = null;
              res_2969577788 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577788.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577781, res_2969577788);
          };
        };
      };
      var node_2969577825 = res_2969577781;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577825, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2969577833 = null;
        Label214: {
          var res_2969577839 = null;
          res_2969577839 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577839.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2969577841 = null;
              res_2969577841 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577841.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577841.reff = nimCopy(res_2969577841.reff, IdOrder_2986344471, NTI2046820355);
            };
            add_3003121702(res_2969577839, res_2969577841);
            Label219: {
              var res_2969577844 = null;
              res_2969577844 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577844.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577839, res_2969577844);
            Label221: {
              var res_2969577846 = null;
              res_2969577846 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577846.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577839, res_2969577846);
          };
        };
      };
      var node_2969577883 = res_2969577839;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577883, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2969577891 = null;
        Label224: {
          var res_2969577897 = null;
          res_2969577897 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577897.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2969577899 = null;
              res_2969577899 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577899.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577899.reff = nimCopy(res_2969577899.reff, IdAnd_2986344469, NTI2046820355);
            };
            add_3003121702(res_2969577897, res_2969577899);
            Label229: {
              var res_2969577902 = null;
              res_2969577902 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577902.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577897, res_2969577902);
            Label231: {
              var res_2969577904 = null;
              res_2969577904 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577904.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577897, res_2969577904);
          };
        };
      };
      var node_2969577941 = res_2969577897;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577941, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2969577949 = null;
        Label234: {
          var res_2969577955 = null;
          res_2969577955 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577955.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2969577957 = null;
              res_2969577957 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577957.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577957.reff = nimCopy(res_2969577957.reff, IdOr_2986344470, NTI2046820355);
            };
            add_3003121702(res_2969577955, res_2969577957);
            Label239: {
              var res_2969577960 = null;
              res_2969577960 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577960.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577955, res_2969577960);
            Label241: {
              var res_2969577962 = null;
              res_2969577962 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577962.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577955, res_2969577962);
          };
        };
      };
      var node_2969577999 = res_2969577955;
      result_2969576480 = nimCopy(result_2969576480, some_2969576510({Field0: node_2969577999, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    default: 
      result_2969576480 = nimCopy(result_2969576480, none_2969577011(), NTI2969572495);
      break BeforeRet;
      break;
    }
  };

  return result_2969576480;

}

function isSome_2969580110(self_2969580112) {
  var result_2969580113 = false;

    result_2969580113 = self_2969580112.has;

  return result_2969580113;

}

function isNone_2969580135(self_2969580137) {
  var result_2969580138 = false;

    result_2969580138 = !(self_2969580137.has);

  return result_2969580138;

}

function get_2969580127(self_2969580129) {
  var result_2969580130 = {Field0: null, Field1: 0};

    if (isNone_2969580135(self_2969580129)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969580130 = self_2969580129.val;

  return result_2969580130;

}

function insertNode_2969573868(document_2969573869, node_2969573870, index_2969573871, newNode_2969573872) {
  var result_2969576242 = ({val: null});

  BeforeRet: {
    var node_2969576243 = node_2969573870;
    var index_2969576244 = index_2969573871;
    if ((node_2969576243 == null)) {
    node_2969576243 = document_2969573869.rootNode;
    index_2969576244 = 0;
    }
    
    document_2969573869.undoOps.push({kind: 2, parent: node_2969576243, idx: index_2969576244, node: newNode_2969573872, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969573869.redoOps = nimCopy(null, [], NTI2969572196);
    insert_3003121718(node_2969576243, newNode_2969573872, index_2969576244);
    handleNodeInserted_2969571616(document_2969573869, newNode_2969573872);
    result_2969576242 = nimCopy(result_2969576242, some_3003121890(newNode_2969573872), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576242;

}

function shouldEditNode_2969578349(doc_2969578350, node_2969578351) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2969578352 = false;

  BeforeRet: {
    if (((node_2969578351.kind == 0) && eqStrings(node_2969578351.text, []))) {
    result_2969578352 = true;
    break BeforeRet;
    }
    
    if (((node_2969578351.kind == 2) && eqStrings(node_2969578351.text, []))) {
    result_2969578352 = true;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 4)) {
    var oHEX60gensym522_2969578367 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym522_2969578367)) Temporary2 = false; else {      var symbol_2969578390 = get_3087009376(oHEX60gensym522_2969578367);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2969578390.name, []);    }    result_2969578352 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 5)) {
    var oHEX60gensym523_2969578397 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym523_2969578397)) Temporary4 = false; else {      var symbol_2969578420 = get_3087009376(oHEX60gensym523_2969578397);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2969578420.name, []);    }    result_2969578352 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2969578351.kind == 6)) {
    var oHEX60gensym524_2969578427 = computeSymbol_3019919344(ctx_2969567289, node_2969578351, true);
    if (!isSome_3087009356(oHEX60gensym524_2969578427)) Temporary6 = false; else {      var symbol_2969578450 = get_3087009376(oHEX60gensym524_2969578427);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2969578450.name, []);    }    result_2969578352 = Temporary5;
    break BeforeRet;
    }
    
    result_2969578352 = false;
    break BeforeRet;
  };

  return result_2969578352;

}

function formatValue_2969575169(result_2969575171, result_2969575171_Idx, value_2969575172, specifier_2969575173) {
    formatValue_721420459(result_2969575171, result_2969575171_Idx, reprEnum(value_2969575172, NTI3087007753), specifier_2969575173);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2969580436 = 0;
      var last_2969580437 = 0;
      var eolpos_2969580438 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969580437 < (s_855638695).length) && !((ConstSet181[s_855638695[chckIndx(last_2969580437, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2969580437 = addInt(last_2969580437, 1);
                }
            };
            eolpos_2969580438 = last_2969580437;
            if ((last_2969580437 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2969580437, 0, (s_855638695).length - 1)] == 10)) {
            last_2969580437 = addInt(last_2969580437, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2969580437, 0, (s_855638695).length - 1)] == 13)) {
            last_2969580437 = addInt(last_2969580437, 1);
            if (((last_2969580437 < (s_855638695).length) && (s_855638695[chckIndx(last_2969580437, 0, (s_855638695).length - 1)] == 10))) {
            last_2969580437 = addInt(last_2969580437, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2969580437, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969580438, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2969580436, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2969580438 == last_2969580437)) {
            break Label2;
            }
            
            first_2969580436 = last_2969580437;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573948(self_2818573949, value_2818573950) {
    if (self_2818573949.singleLine) {
    self_2818573949.lines = nimCopy(null, [nsuReplaceStr(value_2818573950, [10], [])], NTI1560281203);
    if (((self_2818573949.lines).length == 0)) {
    self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573949.tsParser == null))) {
    self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, self_2818573949.lines[chckIndx(0, 0, (self_2818573949.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573949.lines = nimCopy(null, nsuSplitLines(value_2818573950, false), NTI855638530);
      if (((self_2818573949.lines).length == 0)) {
      self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573949.tsParser == null))) {
      self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, value_2818573950, none_2885681218());
      }
      
    }
    
    self_2818573949.version = addInt(self_2818573949.version, 1);
    notifyTextChanged_2818573268(self_2818573949);

  
}

function newTextDocument_2818579088(filename_2818579090, content_2818579091, app_2818579092) {
  var result_2818579093 = null;

    result_2818579093 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2818579097 = result_2818579093;
    self_2818579097.filename = nimCopy(null, filename_2818579090, NTI33554449);
    self_2818579097.currentTree = null;
    self_2818579097.appFile = app_2818579092;
    var _ = initTreesitter_2818578870(self_2818579097);
    var language_2818579098 = getLanguageForFile_2902458372(filename_2818579090);
    if (isSome_2348810304(language_2818579098)) {
    self_2818579097.languageId = nimCopy(null, get_2818578907(language_2818579098), NTI33554449);
    }
    
    contentHEX3D_2818573948(self_2818579097, content_2818579091);

  return result_2818579093;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573989(self_2818573990, value_2818573991) {
    if (self_2818573990.singleLine) {
    self_2818573990.lines = nimCopy(null, [nsuJoinSep(value_2818573991, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818574053 = 0;
        var resultHEX60gensym22_2818574060 = newSeq_503316959(chckRange((value_2818573991).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818574064 = [];
          var i_2969580443 = 0;
          var L_2969580444 = (value_2818573991).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2969580443 < L_2969580444)) break Label4;
                itHEX60gensym22_2818574064 = value_2818573991[chckIndx(i_2969580443, 0, (value_2818573991).length - 1)];
                resultHEX60gensym22_2818574060[chckIndx(iHEX60gensym22_2818574053, 0, (resultHEX60gensym22_2818574060).length - 1)] = nimCopy(null, itHEX60gensym22_2818574064, NTI33554449);
                iHEX60gensym22_2818574053 = addInt(iHEX60gensym22_2818574053, 1);
                i_2969580443 = addInt(i_2969580443, 1);
                if (!(((value_2818573991).length == L_2969580444))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573990.lines = nimCopy(null, resultHEX60gensym22_2818574060, NTI503316776);
    }
    
    if (((self_2818573990.lines).length == 0)) {
    self_2818573990.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818574076 = nsuJoinSep(value_2818573991, [10]);
    if (!((self_2818573990.tsParser == null))) {
    self_2818573990.currentTree = parseString_2885681211(self_2818573990.tsParser, strValue_2818574076, none_2885681218());
    }
    
    self_2818573990.version = addInt(self_2818573990.version, 1);
    notifyTextChanged_2818573268(self_2818573990);

  
}

function createTextEditorInstance_2818593993() {
  var result_2818593994 = null;

  BeforeRet: {
    var editor_2818593999 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2449474032({Field0: 0, Field1: 0}), NTI2449473548)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818593999 = createWithPrototype(editor_text_prototype, editor_2818593999);
    result_2818593994 = editor_2818593999;
    break BeforeRet;
  };

  return result_2818593994;

}

function newEditorId_2449473854() {
  var result_2449473855 = 0;

    result_2449473855 = nextEditorId_2449473853[0];
    nextEditorId_2449473853[0] = addInt(nextEditorId_2449473853[0], 1);

  return result_2449473855;

}

function init_2415919138(self_2415919139) {
    self_2415919139.id = newEditorId_2449473854();
    self_2415919139.renderHeader = true;
    self_2415919139.fillAvailableSpace = true;

  
}

function subscribe_2818594057(event_2818594059, callback_2818594061) {
  var result_2818594062 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818594062 = nimCopy(result_2818594062, newId_2046820597(), NTI2046820355);
    event_2818594059.handlers.push({Field0: nimCopy(null, result_2818594062, NTI2046820355), Field1: callback_2818594061});;

  return result_2818594062;

}

function clampSelection_2818573266(self_2818573267) {
    selectionsHEX3D_2818573083(self_2818573267, clampAndMergeSelections_2818572798(self_2818573267, self_2818573267.selectionsInternal));
    markDirty_2415919143(self_2818573267);

  
}

function handleTextDocumentTextChanged_2818593991(self_2818593992) {
    clampSelection_2818573266(self_2818593992);
    updateSearchResults_2818580294(self_2818593992);
    markDirty_2415919143(self_2818593992);

  
}

function newTextEditor_2818594009(document_2818594010, ed_2818594011) {
    
function HEX3Aanonymous_2818594032(__2818594033) {
        handleTextDocumentTextChanged_2818593991(editor_2818594013);

      
    }

  var result_2818594012 = null;

  BeforeRet: {
    var editor_2818594013 = createTextEditorInstance_2818593993();
    editor_2818594013.document = document_2818594010;
    init_2415919138(editor_2818594013);
    if (((editor_2818594013.document.lines).length == 0)) {
    editor_2818594013.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847761(editor_2818594013, ed_2818594011);
    var _ = subscribe_2818594057(document_2818594010.textChanged, HEX3Aanonymous_2818594032);
    result_2818594012 = editor_2818594013;
    break BeforeRet;
  };

  return result_2818594012;

}

function some_3187671942(val_3187671944) {
  var result_3187671945 = ({val: 0, has: false});

    result_3187671945.has = true;
    result_3187671945.val = val_3187671944;

  return result_3187671945;

}

function handleTextDocumentChanged_2969575149(self_2969575150) {
    updateCompletions_2969569740(self_2969575150);
    self_2969575150.selectedCompletion = 0;
    self_2969575150.scrollToCompletion = nimCopy(self_2969575150.scrollToCompletion, some_1191184367(self_2969575150.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969575150);

  
}

function editSymbol_2969575161(self_2969575162, symbol_2969575163) {
    var Temporary1;
    
function HEX3Aanonymous_2969575219(doc_2969575220) {
        handleTextDocumentChanged_2969575149(self_2969575162);

      
    }

    var fmtRes_2969575168 = [mnewString(0)];
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2969575168, 0, symbol_2969575163.name, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [32,40]);;
    formatValue_2969575169(fmtRes_2969575168, 0, symbol_2969575163.kind, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [44,32]);;
    formatValue_3036676344(fmtRes_2969575168, 0, symbol_2969575163.id, []);
    fmtRes_2969575168[0].push.apply(fmtRes_2969575168[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575168[0], NTI33554449)]);
    if ((symbol_2969575163.kind == 0)) {
    var fmtRes_2969575190 = [mnewString(0)];
    fmtRes_2969575190[0].push.apply(fmtRes_2969575190[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2969575163;
    if (ConstSet180[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008590(fmtRes_2969575190, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575190[0], NTI33554449)]);
    }
    
    self_2969575162.currentlyEditedNode = null;
    self_2969575162.currentlyEditedSymbol = nimCopy(self_2969575162.currentlyEditedSymbol, symbol_2969575163.id, NTI2046820355);
    self_2969575162.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575162.textDocument, [nimCopy(null, symbol_2969575163.name, NTI33554449)]);
    self_2969575162.textEditor = newTextEditor_2818594009(self_2969575162.textDocument, self_2969575162.editor);
    setMode_2818584223(self_2969575162.textEditor, [105,110,115,101,114,116]);
    self_2969575162.textEditor.renderHeader = false;
    self_2969575162.textEditor.fillAvailableSpace = false;
    self_2969575162.textEditor.disableScrolling = true;
    self_2969575162.textEditor.disableCompletions = true;
    self_2969575162.textEditor.lineNumbers = nimCopy(self_2969575162.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    var _ = subscribe_2818594057(self_2969575162.textDocument.textChanged, HEX3Aanonymous_2969575219);
    updateCompletions_2969569740(self_2969575162);
    markDirty_2415919143(self_2969575162);

  
}

function editNode_2969575249(self_2969575250, node_2969575251) {
    
function HEX3Aanonymous_2969575281(doc_2969575282) {
        handleTextDocumentChanged_2969575149(self_2969575250);

      
    }

    var fmtRes_2969575256 = [mnewString(0)];
    fmtRes_2969575256[0].push.apply(fmtRes_2969575256[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_2969575256, 0, node_2969575251, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575256[0], NTI33554449)]);
    self_2969575250.currentlyEditedNode = node_2969575251;
    self_2969575250.currentlyEditedSymbol = nimCopy(self_2969575250.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575250.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575250.textDocument, nsuSplitLines(node_2969575251.text, false));
    self_2969575250.textEditor = newTextEditor_2818594009(self_2969575250.textDocument, self_2969575250.editor);
    setMode_2818584223(self_2969575250.textEditor, [105,110,115,101,114,116]);
    self_2969575250.textEditor.renderHeader = false;
    self_2969575250.textEditor.fillAvailableSpace = false;
    self_2969575250.textEditor.disableScrolling = true;
    self_2969575250.textEditor.disableCompletions = true;
    self_2969575250.textEditor.lineNumbers = nimCopy(self_2969575250.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    var _ = subscribe_2818594057(self_2969575250.textDocument.textChanged, HEX3Aanonymous_2969575281);
    updateCompletions_2969569740(self_2969575250);
    markDirty_2415919143(self_2969575250);

  
}

function tryEdit_2969575311(self_2969575312, node_2969575313) {
      var Temporary1;
      var Temporary2;

  var result_2969575314 = false;

  BeforeRet: {
      var oHEX60gensym119_2969575317 = getSymbol_3019906948(ctx_2969567289, node_2969575313.id);
      if (!isSome_3087009356(oHEX60gensym119_2969575317)) Temporary1 = false; else {        var sym_2969575340 = get_3087009376(oHEX60gensym119_2969575317);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2969575161(self_2969575312, sym_2969575340);
    result_2969575314 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2969575343 = getSymbol_3019906948(ctx_2969567289, node_2969575313.reff);
      if (!isSome_3087009356(oHEX60gensym120_2969575343)) Temporary2 = false; else {        var sym_2969575366 = get_3087009376(oHEX60gensym120_2969575343);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2969575161(self_2969575312, sym_2969575366);
    result_2969575314 = true;
    break BeforeRet;
    }
    else {
      switch (node_2969575313.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2969575249(self_2969575312, node_2969575313);
        result_2969575314 = true;
        break BeforeRet;
        break;
      default: 
        result_2969575314 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2969575314;

}

function insertAfterSmart_2969580097(self_2969580098, nodeTemplate_2969580099) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2969580179(n_2969580182) {
        var result_2969580185 = false;

          result_2969580185 = shouldEditNode_2969578349(self_2969580098.document, n_2969580182);

        return result_2969580185;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580098)) {
    break BeforeRet;
    }
    
    var node_2969580100 = node_2969569752(self_2969580098);
    Label1: {
      var next_2969580101 = null;
      if (true) {
      Temporary2 = node_2969580100;
      }
      else {
      Temporary2 = node_2969580100.parent;
      }
      
      var node_2969580268 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2969580268 == null))) break Label4;
            next_2969580101 = node_2969580268;
            if (canInsertInto_2969578688(self_2969580098, next_2969580101.parent)) {
            node_2969580100 = next_2969580101;
            break Label1;
            }
            
            node_2969580268 = node_2969580268.parent;
          }
      };
    };
    var index_2969580102 = index_3003121772(node_2969580100);
      var oHEX60gensym672_2969580105 = createNodeFromAction_2969576470(self_2969580098, nodeTemplate_2969580099, node_2969580100, errorType_3087008131());
      if (!isSome_2969580110(oHEX60gensym672_2969580105)) Temporary5 = false; else {        var newNodeIndex_2969580150 = nimCopy(null, get_2969580127(oHEX60gensym672_2969580105), NTI2969572490);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2969580151 = newNodeIndex_2969580150["Field0"];
    var __2969580152 = newNodeIndex_2969580150["Field1"];
      var oHEX60gensym674_2969580155 = insertNode_2969573868(self_2969580098.document, node_2969580100.parent, addInt(index_2969580102, 1), newNode_2969580151);
      if (!isSome_3003123546(oHEX60gensym674_2969580155)) Temporary6 = false; else {        var node_2969580178 = get_3003123566(oHEX60gensym674_2969580155);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2969570829(self_2969580098, node_2969580178);
    Label7: {
      var __2969580186 = 0;
      var emptyNode_2969580187 = null;
      var colontmp__2969580271 = null;
      colontmp__2969580271 = HEX3Aanonymous_2969580179;
      var i_2969580279 = 0;
      Label8: {
        var __2969580281 = 0;
        var child_2969580282 = null;
        var n_2969580283 = newNode_2969580151;
        var idx_2969580284 = -1;
        var i_2969580285 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2969580284 == -1)) {
              __2969580281 = i_2969580285;
              child_2969580282 = n_2969580283;
              if (colontmp__2969580271(child_2969580282)) {
              __2969580186 = i_2969580279;
              emptyNode_2969580187 = child_2969580282;
              nodeHEX3D_2969570829(self_2969580098, emptyNode_2969580187);
              var _ = tryEdit_2969575311(self_2969580098, node_2969569752(self_2969580098));
              break Label7;
              i_2969580279 = addInt(i_2969580279, 1);
              }
              
              }
              
              if ((addInt(idx_2969580284, 1) < len_3003121752(n_2969580283))) {
              n_2969580283 = HEX5BHEX5D_3003121748(n_2969580283, addInt(idx_2969580284, 1));
              idx_2969580284 = -1;
              }
              else {
                var oHEX60gensym55_2969580287 = next_3003121857(n_2969580283);
                if (!isSome_3003123546(oHEX60gensym55_2969580287)) Temporary13 = false; else {                  var ne_2969580288 = get_3003123566(oHEX60gensym55_2969580287);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2969580283 == newNode_2969580151));                }              if (Temporary12) {
              n_2969580283 = ne_2969580288;
              idx_2969580284 = -1;
              }
              else {
              if (((!((n_2969580283.parent == null)) && !((n_2969580283 == newNode_2969580151))) && !((n_2969580283.parent == newNode_2969580151)))) {
              idx_2969580284 = index_3003121772(n_2969580283);
              n_2969580283 = n_2969580283.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2969580285 = addInt(i_2969580285, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580192 = [mnewString(0)];
      fmtRes_2969580192[0].push.apply(fmtRes_2969580192[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580192, 0, newNode_2969580151, []);
      fmtRes_2969580192[0].push.apply(fmtRes_2969580192[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580192, 0, node_2969569752(self_2969580098).parent, []);
      fmtRes_2969580192[0].push.apply(fmtRes_2969580192[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580192, 0, addInt(index_2969580102, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580192[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2969580093(self_2969580245, nodeTemplate_2969580246) {
    insertAfterSmart_2969580097(self_2969580245, nodeTemplate_2969580246);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2969580093(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2969580452(self_2969580453, nodeTemplate_2969580454) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580511(n_2969580514) {
        var result_2969580517 = false;

          result_2969580517 = shouldEditNode_2969578349(self_2969580453.document, n_2969580514);

        return result_2969580517;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580453)) {
    break BeforeRet;
    }
    
    var node_2969580455 = node_2969569752(self_2969580453);
    var index_2969580456 = index_3003121772(node_2969580455);
      var oHEX60gensym685_2969580459 = createNodeFromAction_2969576470(self_2969580453, nodeTemplate_2969580454, node_2969580455, errorType_3087008131());
      if (!isSome_2969580110(oHEX60gensym685_2969580459)) Temporary1 = false; else {        var newNodeIndex_2969580482 = nimCopy(null, get_2969580127(oHEX60gensym685_2969580459), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580483 = newNodeIndex_2969580482["Field0"];
    var __2969580484 = newNodeIndex_2969580482["Field1"];
      var oHEX60gensym686_2969580487 = insertNode_2969573868(self_2969580453.document, node_2969580455.parent, addInt(index_2969580456, 1), newNode_2969580483);
      if (!isSome_3003123546(oHEX60gensym686_2969580487)) Temporary2 = false; else {        var node_2969580510 = get_3003123566(oHEX60gensym686_2969580487);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580453, node_2969580510);
    Label3: {
      var __2969580518 = 0;
      var emptyNode_2969580519 = null;
      var colontmp__2969580590 = null;
      colontmp__2969580590 = HEX3Aanonymous_2969580511;
      var i_2969580591 = 0;
      Label4: {
        var __2969580593 = 0;
        var child_2969580594 = null;
        var n_2969580595 = newNode_2969580483;
        var idx_2969580596 = -1;
        var i_2969580597 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580596 == -1)) {
              __2969580593 = i_2969580597;
              child_2969580594 = n_2969580595;
              if (colontmp__2969580590(child_2969580594)) {
              __2969580518 = i_2969580591;
              emptyNode_2969580519 = child_2969580594;
              nodeHEX3D_2969570829(self_2969580453, emptyNode_2969580519);
              var _ = tryEdit_2969575311(self_2969580453, node_2969569752(self_2969580453));
              break Label3;
              i_2969580591 = addInt(i_2969580591, 1);
              }
              
              }
              
              if ((addInt(idx_2969580596, 1) < len_3003121752(n_2969580595))) {
              n_2969580595 = HEX5BHEX5D_3003121748(n_2969580595, addInt(idx_2969580596, 1));
              idx_2969580596 = -1;
              }
              else {
                var oHEX60gensym55_2969580599 = next_3003121857(n_2969580595);
                if (!isSome_3003123546(oHEX60gensym55_2969580599)) Temporary9 = false; else {                  var ne_2969580600 = get_3003123566(oHEX60gensym55_2969580599);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580595 == newNode_2969580483));                }              if (Temporary8) {
              n_2969580595 = ne_2969580600;
              idx_2969580596 = -1;
              }
              else {
              if (((!((n_2969580595.parent == null)) && !((n_2969580595 == newNode_2969580483))) && !((n_2969580595.parent == newNode_2969580483)))) {
              idx_2969580596 = index_3003121772(n_2969580595);
              n_2969580595 = n_2969580595.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580597 = addInt(i_2969580597, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580524 = [mnewString(0)];
      fmtRes_2969580524[0].push.apply(fmtRes_2969580524[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580524, 0, newNode_2969580483, []);
      fmtRes_2969580524[0].push.apply(fmtRes_2969580524[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580524, 0, node_2969569752(self_2969580453).parent, []);
      fmtRes_2969580524[0].push.apply(fmtRes_2969580524[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580524, 0, addInt(index_2969580456, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580524[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2969580448(self_2969580568, nodeTemplate_2969580569) {
    insertAfter_2969580452(self_2969580568, nodeTemplate_2969580569);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2969580448(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2969580607(self_2969580608, nodeTemplate_2969580609) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580665(n_2969580668) {
        var result_2969580671 = false;

          result_2969580671 = shouldEditNode_2969578349(self_2969580608.document, n_2969580668);

        return result_2969580671;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580608)) {
    break BeforeRet;
    }
    
    var index_2969580610 = index_3003121772(node_2969569752(self_2969580608));
      var oHEX60gensym697_2969580613 = createNodeFromAction_2969576470(self_2969580608, nodeTemplate_2969580609, node_2969569752(self_2969580608), errorType_3087008131());
      if (!isSome_2969580110(oHEX60gensym697_2969580613)) Temporary1 = false; else {        var newNodeIndex_2969580636 = nimCopy(null, get_2969580127(oHEX60gensym697_2969580613), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580637 = newNodeIndex_2969580636["Field0"];
    var __2969580638 = newNodeIndex_2969580636["Field1"];
      var oHEX60gensym698_2969580641 = insertNode_2969573868(self_2969580608.document, node_2969569752(self_2969580608).parent, index_2969580610, newNode_2969580637);
      if (!isSome_3003123546(oHEX60gensym698_2969580641)) Temporary2 = false; else {        var node_2969580664 = get_3003123566(oHEX60gensym698_2969580641);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580608, node_2969580664);
    Label3: {
      var __2969580672 = 0;
      var emptyNode_2969580673 = null;
      var colontmp__2969580744 = null;
      colontmp__2969580744 = HEX3Aanonymous_2969580665;
      var i_2969580745 = 0;
      Label4: {
        var __2969580747 = 0;
        var child_2969580748 = null;
        var n_2969580749 = newNode_2969580637;
        var idx_2969580750 = -1;
        var i_2969580751 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580750 == -1)) {
              __2969580747 = i_2969580751;
              child_2969580748 = n_2969580749;
              if (colontmp__2969580744(child_2969580748)) {
              __2969580672 = i_2969580745;
              emptyNode_2969580673 = child_2969580748;
              nodeHEX3D_2969570829(self_2969580608, emptyNode_2969580673);
              var _ = tryEdit_2969575311(self_2969580608, node_2969569752(self_2969580608));
              break Label3;
              i_2969580745 = addInt(i_2969580745, 1);
              }
              
              }
              
              if ((addInt(idx_2969580750, 1) < len_3003121752(n_2969580749))) {
              n_2969580749 = HEX5BHEX5D_3003121748(n_2969580749, addInt(idx_2969580750, 1));
              idx_2969580750 = -1;
              }
              else {
                var oHEX60gensym55_2969580753 = next_3003121857(n_2969580749);
                if (!isSome_3003123546(oHEX60gensym55_2969580753)) Temporary9 = false; else {                  var ne_2969580754 = get_3003123566(oHEX60gensym55_2969580753);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580749 == newNode_2969580637));                }              if (Temporary8) {
              n_2969580749 = ne_2969580754;
              idx_2969580750 = -1;
              }
              else {
              if (((!((n_2969580749.parent == null)) && !((n_2969580749 == newNode_2969580637))) && !((n_2969580749.parent == newNode_2969580637)))) {
              idx_2969580750 = index_3003121772(n_2969580749);
              n_2969580749 = n_2969580749.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580751 = addInt(i_2969580751, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580678 = [mnewString(0)];
      fmtRes_2969580678[0].push.apply(fmtRes_2969580678[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580678, 0, newNode_2969580637, []);
      fmtRes_2969580678[0].push.apply(fmtRes_2969580678[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580678, 0, node_2969569752(self_2969580608).parent, []);
      fmtRes_2969580678[0].push.apply(fmtRes_2969580678[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580678, 0, index_2969580610, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580678[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2969580603(self_2969580722, nodeTemplate_2969580723) {
    insertBefore_2969580607(self_2969580722, nodeTemplate_2969580723);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2969580603(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2969580761(self_2969580762, nodeTemplate_2969580763) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580818(n_2969580821) {
        var result_2969580824 = false;

          result_2969580824 = shouldEditNode_2969578349(self_2969580762.document, n_2969580821);

        return result_2969580824;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580762)) {
    break BeforeRet;
    }
    
      var oHEX60gensym709_2969580766 = createNodeFromAction_2969576470(self_2969580762, nodeTemplate_2969580763, node_2969569752(self_2969580762), errorType_3087008131());
      if (!isSome_2969580110(oHEX60gensym709_2969580766)) Temporary1 = false; else {        var newNodeIndex_2969580789 = nimCopy(null, get_2969580127(oHEX60gensym709_2969580766), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580790 = newNodeIndex_2969580789["Field0"];
    var __2969580791 = newNodeIndex_2969580789["Field1"];
      var oHEX60gensym710_2969580794 = insertNode_2969573868(self_2969580762.document, node_2969569752(self_2969580762), len_3003121752(node_2969569752(self_2969580762)), newNode_2969580790);
      if (!isSome_3003123546(oHEX60gensym710_2969580794)) Temporary2 = false; else {        var node_2969580817 = get_3003123566(oHEX60gensym710_2969580794);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580762, node_2969580817);
    Label3: {
      var __2969580825 = 0;
      var emptyNode_2969580826 = null;
      var colontmp__2969580897 = null;
      colontmp__2969580897 = HEX3Aanonymous_2969580818;
      var i_2969580898 = 0;
      Label4: {
        var __2969580900 = 0;
        var child_2969580901 = null;
        var n_2969580902 = newNode_2969580790;
        var idx_2969580903 = -1;
        var i_2969580904 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580903 == -1)) {
              __2969580900 = i_2969580904;
              child_2969580901 = n_2969580902;
              if (colontmp__2969580897(child_2969580901)) {
              __2969580825 = i_2969580898;
              emptyNode_2969580826 = child_2969580901;
              nodeHEX3D_2969570829(self_2969580762, emptyNode_2969580826);
              var _ = tryEdit_2969575311(self_2969580762, node_2969569752(self_2969580762));
              break Label3;
              i_2969580898 = addInt(i_2969580898, 1);
              }
              
              }
              
              if ((addInt(idx_2969580903, 1) < len_3003121752(n_2969580902))) {
              n_2969580902 = HEX5BHEX5D_3003121748(n_2969580902, addInt(idx_2969580903, 1));
              idx_2969580903 = -1;
              }
              else {
                var oHEX60gensym55_2969580906 = next_3003121857(n_2969580902);
                if (!isSome_3003123546(oHEX60gensym55_2969580906)) Temporary9 = false; else {                  var ne_2969580907 = get_3003123566(oHEX60gensym55_2969580906);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580902 == newNode_2969580790));                }              if (Temporary8) {
              n_2969580902 = ne_2969580907;
              idx_2969580903 = -1;
              }
              else {
              if (((!((n_2969580902.parent == null)) && !((n_2969580902 == newNode_2969580790))) && !((n_2969580902.parent == newNode_2969580790)))) {
              idx_2969580903 = index_3003121772(n_2969580902);
              n_2969580902 = n_2969580902.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580904 = addInt(i_2969580904, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580831 = [mnewString(0)];
      fmtRes_2969580831[0].push.apply(fmtRes_2969580831[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580831, 0, newNode_2969580790, []);
      fmtRes_2969580831[0].push.apply(fmtRes_2969580831[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580831, 0, node_2969569752(self_2969580762), []);
      fmtRes_2969580831[0].push.apply(fmtRes_2969580831[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580831, 0, len_3003121752(node_2969569752(self_2969580762)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580831[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2969580757(self_2969580875, nodeTemplate_2969580876) {
    insertChild_2969580761(self_2969580875, nodeTemplate_2969580876);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2969580757(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2969580914(self_2969580915, nodeTemplate_2969580916) {
      var Temporary1;
      
function HEX3Aanonymous_2969580945(n_2969580948) {
        var result_2969580951 = false;

          result_2969580951 = shouldEditNode_2969578349(self_2969580915.document, n_2969580948);

        return result_2969580951;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2969575154(self_2969580915)) {
    break BeforeRet;
    }
    
      var oHEX60gensym721_2969580919 = createNodeFromAction_2969576470(self_2969580915, nodeTemplate_2969580916, node_2969569752(self_2969580915), errorType_3087008131());
      if (!isSome_2969580110(oHEX60gensym721_2969580919)) Temporary1 = false; else {        var newNodeIndex_2969580942 = nimCopy(null, get_2969580127(oHEX60gensym721_2969580919), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580943 = newNodeIndex_2969580942["Field0"];
    var __2969580944 = newNodeIndex_2969580942["Field1"];
    nodeHEX3D_2969570829(self_2969580915, replaceNode_2969576151(self_2969580915.document, node_2969569752(self_2969580915), newNode_2969580943));
    Label2: {
      var __2969580952 = 0;
      var emptyNode_2969580953 = null;
      var colontmp__2969581004 = null;
      colontmp__2969581004 = HEX3Aanonymous_2969580945;
      var i_2969581005 = 0;
      Label3: {
        var __2969581007 = 0;
        var child_2969581008 = null;
        var n_2969581009 = newNode_2969580943;
        var idx_2969581010 = -1;
        var i_2969581011 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581010 == -1)) {
              __2969581007 = i_2969581011;
              child_2969581008 = n_2969581009;
              if (colontmp__2969581004(child_2969581008)) {
              __2969580952 = i_2969581005;
              emptyNode_2969580953 = child_2969581008;
              nodeHEX3D_2969570829(self_2969580915, emptyNode_2969580953);
              var _ = tryEdit_2969575311(self_2969580915, node_2969569752(self_2969580915));
              break Label2;
              i_2969581005 = addInt(i_2969581005, 1);
              }
              
              }
              
              if ((addInt(idx_2969581010, 1) < len_3003121752(n_2969581009))) {
              n_2969581009 = HEX5BHEX5D_3003121748(n_2969581009, addInt(idx_2969581010, 1));
              idx_2969581010 = -1;
              }
              else {
                var oHEX60gensym55_2969581013 = next_3003121857(n_2969581009);
                if (!isSome_3003123546(oHEX60gensym55_2969581013)) Temporary8 = false; else {                  var ne_2969581014 = get_3003123566(oHEX60gensym55_2969581013);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581009 == newNode_2969580943));                }              if (Temporary7) {
              n_2969581009 = ne_2969581014;
              idx_2969581010 = -1;
              }
              else {
              if (((!((n_2969581009.parent == null)) && !((n_2969581009 == newNode_2969580943))) && !((n_2969581009.parent == newNode_2969580943)))) {
              idx_2969581010 = index_3003121772(n_2969581009);
              n_2969581009 = n_2969581009.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581011 = addInt(i_2969581011, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2969580910(self_2969580982, nodeTemplate_2969580983) {
    replace_2969580914(self_2969580982, nodeTemplate_2969580983);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2969580910(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2969581021(self_2969581022, nodeTemplate_2969581023) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2969581056(n_2969581059) {
        var result_2969581062 = false;

          result_2969581062 = shouldEditNode_2969578349(self_2969581022.document, n_2969581059);

        return result_2969581062;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581022)) {
    break BeforeRet;
    }
    
      if (!(node_2969569752(self_2969581022).kind == 0)) Temporary1 = false; else {        var oHEX60gensym731_2969581030 = createNodeFromAction_2969576470(self_2969581022, nodeTemplate_2969581023, node_2969569752(self_2969581022), errorType_3087008131());
        if (!isSome_2969580110(oHEX60gensym731_2969581030)) Temporary2 = false; else {          var newNodeIndex_2969581053 = nimCopy(null, get_2969580127(oHEX60gensym731_2969581030), NTI2969572490);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2969581054 = newNodeIndex_2969581053["Field0"];
    var __2969581055 = newNodeIndex_2969581053["Field1"];
    nodeHEX3D_2969570829(self_2969581022, replaceNode_2969576151(self_2969581022.document, node_2969569752(self_2969581022), newNode_2969581054));
    Label3: {
      var __2969581063 = 0;
      var emptyNode_2969581064 = null;
      var colontmp__2969581115 = null;
      colontmp__2969581115 = HEX3Aanonymous_2969581056;
      var i_2969581116 = 0;
      Label4: {
        var __2969581118 = 0;
        var child_2969581119 = null;
        var n_2969581120 = newNode_2969581054;
        var idx_2969581121 = -1;
        var i_2969581122 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969581121 == -1)) {
              __2969581118 = i_2969581122;
              child_2969581119 = n_2969581120;
              if (colontmp__2969581115(child_2969581119)) {
              __2969581063 = i_2969581116;
              emptyNode_2969581064 = child_2969581119;
              nodeHEX3D_2969570829(self_2969581022, emptyNode_2969581064);
              var _ = tryEdit_2969575311(self_2969581022, node_2969569752(self_2969581022));
              break Label3;
              i_2969581116 = addInt(i_2969581116, 1);
              }
              
              }
              
              if ((addInt(idx_2969581121, 1) < len_3003121752(n_2969581120))) {
              n_2969581120 = HEX5BHEX5D_3003121748(n_2969581120, addInt(idx_2969581121, 1));
              idx_2969581121 = -1;
              }
              else {
                var oHEX60gensym55_2969581124 = next_3003121857(n_2969581120);
                if (!isSome_3003123546(oHEX60gensym55_2969581124)) Temporary9 = false; else {                  var ne_2969581125 = get_3003123566(oHEX60gensym55_2969581124);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969581120 == newNode_2969581054));                }              if (Temporary8) {
              n_2969581120 = ne_2969581125;
              idx_2969581121 = -1;
              }
              else {
              if (((!((n_2969581120.parent == null)) && !((n_2969581120 == newNode_2969581054))) && !((n_2969581120.parent == newNode_2969581054)))) {
              idx_2969581121 = index_3003121772(n_2969581120);
              n_2969581120 = n_2969581120.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969581122 = addInt(i_2969581122, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2969581017(self_2969581093, nodeTemplate_2969581094) {
    replaceEmpty_2969581021(self_2969581093, nodeTemplate_2969581094);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2969581017(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2969581132(self_2969581133) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969581133)) {
    break BeforeRet;
    }
    
    var node_2969581134 = node_2969569752(self_2969581133);
    if (((node_2969581134.parent == null) || (node_2969581134.parent == self_2969581133.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2969581143 = node_2969581134.parent;
    var _ = deleteNode_2969576215(self_2969581133.document, node_2969569752(self_2969581133));
    nodeHEX3D_2969570829(self_2969581133, replaceNode_2969576151(self_2969581133.document, parent_2969581143, node_2969581134));
  };

  
}

function replaceParentJsWrapper_2969581128(self_2969581171) {
    replaceParent_2969581132(self_2969581171);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2969581128(this));};

function wrap_2969581192(self_2969581193, nodeTemplate_2969581194) {
      var Temporary1;
      
function HEX3Aanonymous_2969581225(n_2969581228) {
        var result_2969581231 = false;

          result_2969581231 = (n_2969581228.kind == 0);

        return result_2969581231;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2969581238(n_2969581241) {
        var result_2969581244 = false;

          result_2969581244 = shouldEditNode_2969578349(self_2969581193.document, n_2969581241);

        return result_2969581244;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581193)) {
    break BeforeRet;
    }
    
    var typ_2969581195 = computeType_3019913434(ctx_2969567289, node_2969569752(self_2969581193), true);
      var oHEX60gensym749_2969581198 = createNodeFromAction_2969576470(self_2969581193, nodeTemplate_2969581194, node_2969569752(self_2969581193), typ_2969581195);
      if (!isSome_2969580110(oHEX60gensym749_2969581198)) Temporary1 = false; else {        var newNodeIndex_2969581221 = nimCopy(null, get_2969580127(oHEX60gensym749_2969581198), NTI2969572490);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969581222 = newNodeIndex_2969581221["Field0"];
    var index_2969581223 = newNodeIndex_2969581221["Field1"];
    var oldNode_2969581224 = node_2969569752(self_2969581193);
    nodeHEX3D_2969570829(self_2969581193, replaceNode_2969576151(self_2969581193.document, node_2969569752(self_2969581193), newNode_2969581222));
    Label2: {
      var i_2969581236 = 0;
      var emptyNode_2969581237 = null;
      var colontmp__2969581306 = null;
      colontmp__2969581306 = HEX3Aanonymous_2969581225;
      var i_2969581307 = 0;
      Label3: {
        var __2969581309 = 0;
        var child_2969581310 = null;
        var n_2969581311 = newNode_2969581222;
        var idx_2969581312 = -1;
        var i_2969581313 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581312 == -1)) {
              __2969581309 = i_2969581313;
              child_2969581310 = n_2969581311;
              if (colontmp__2969581306(child_2969581310)) {
              i_2969581236 = i_2969581307;
              emptyNode_2969581237 = child_2969581310;
              if ((i_2969581236 == index_2969581223)) {
              nodeHEX3D_2969570829(self_2969581193, replaceNode_2969576151(self_2969581193.document, emptyNode_2969581237, oldNode_2969581224));
              break Label2;
              }
              
              i_2969581307 = addInt(i_2969581307, 1);
              }
              
              }
              
              if ((addInt(idx_2969581312, 1) < len_3003121752(n_2969581311))) {
              n_2969581311 = HEX5BHEX5D_3003121748(n_2969581311, addInt(idx_2969581312, 1));
              idx_2969581312 = -1;
              }
              else {
                var oHEX60gensym55_2969581315 = next_3003121857(n_2969581311);
                if (!isSome_3003123546(oHEX60gensym55_2969581315)) Temporary8 = false; else {                  var ne_2969581316 = get_3003123566(oHEX60gensym55_2969581315);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581311 == newNode_2969581222));                }              if (Temporary7) {
              n_2969581311 = ne_2969581316;
              idx_2969581312 = -1;
              }
              else {
              if (((!((n_2969581311.parent == null)) && !((n_2969581311 == newNode_2969581222))) && !((n_2969581311.parent == newNode_2969581222)))) {
              idx_2969581312 = index_3003121772(n_2969581311);
              n_2969581311 = n_2969581311.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581313 = addInt(i_2969581313, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2969581245 = 0;
      var emptyNode_2969581246 = null;
      var colontmp__2969581318 = null;
      colontmp__2969581318 = HEX3Aanonymous_2969581238;
      var i_2969581319 = 0;
      Label10: {
        var __2969581321 = 0;
        var child_2969581322 = null;
        var n_2969581323 = newNode_2969581222;
        var idx_2969581324 = -1;
        var i_2969581325 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2969581324 == -1)) {
              __2969581321 = i_2969581325;
              child_2969581322 = n_2969581323;
              if (colontmp__2969581318(child_2969581322)) {
              __2969581245 = i_2969581319;
              emptyNode_2969581246 = child_2969581322;
              nodeHEX3D_2969570829(self_2969581193, emptyNode_2969581246);
              var _ = tryEdit_2969575311(self_2969581193, node_2969569752(self_2969581193));
              break Label9;
              i_2969581319 = addInt(i_2969581319, 1);
              }
              
              }
              
              if ((addInt(idx_2969581324, 1) < len_3003121752(n_2969581323))) {
              n_2969581323 = HEX5BHEX5D_3003121748(n_2969581323, addInt(idx_2969581324, 1));
              idx_2969581324 = -1;
              }
              else {
                var oHEX60gensym55_2969581327 = next_3003121857(n_2969581323);
                if (!isSome_3003123546(oHEX60gensym55_2969581327)) Temporary15 = false; else {                  var ne_2969581328 = get_3003123566(oHEX60gensym55_2969581327);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2969581323 == newNode_2969581222));                }              if (Temporary14) {
              n_2969581323 = ne_2969581328;
              idx_2969581324 = -1;
              }
              else {
              if (((!((n_2969581323.parent == null)) && !((n_2969581323 == newNode_2969581222))) && !((n_2969581323.parent == newNode_2969581222)))) {
              idx_2969581324 = index_3003121772(n_2969581323);
              n_2969581323 = n_2969581323.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2969581325 = addInt(i_2969581325, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2969581188(self_2969581284, nodeTemplate_2969581285) {
    wrap_2969581192(self_2969581284, nodeTemplate_2969581285);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2969581188(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2969581335(self_2969581336) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581336)) {
    break BeforeRet;
    }
    
    var current_2969581337 = node_2969569752(self_2969581336);
    Label1: {
      var emptyNode_2969581338 = null;
      var colontmp__2969581386 = null;
      colontmp__2969581386 = node_2969569752(self_2969581336);
      var idx_2969581387 = 0;
      var n_2969581388 = colontmp__2969581386;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969581388 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969581388), 1)), subInt(idx_2969581387, 1))) {
            n_2969581388 = HEX5BHEX5D_3003121748(n_2969581388, subInt(idx_2969581387, 1));
            idx_2969581387 = len_3003121752(n_2969581388);
            }
            else {
              var oHEX60gensym74_2969581390 = prev_3003121903(n_2969581388);
              if (!isSome_3003123546(oHEX60gensym74_2969581390)) Temporary4 = false; else {                var ne_2969581391 = get_3003123566(oHEX60gensym74_2969581390);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2969581338 = n_2969581388;
            if ((!((emptyNode_2969581338 == current_2969581337)) && shouldEditNode_2969578349(self_2969581336.document, emptyNode_2969581338))) {
            nodeHEX3D_2969570829(self_2969581336, emptyNode_2969581338);
            var _ = tryEdit_2969575311(self_2969581336, node_2969569752(self_2969581336));
            break Label1;
            }
            
            n_2969581388 = ne_2969581391;
            idx_2969581387 = len_3003121752(n_2969581388);
            }
            else {
              emptyNode_2969581338 = n_2969581388;
              if ((!((emptyNode_2969581338 == current_2969581337)) && shouldEditNode_2969578349(self_2969581336.document, emptyNode_2969581338))) {
              nodeHEX3D_2969570829(self_2969581336, emptyNode_2969581338);
              var _ = tryEdit_2969575311(self_2969581336, node_2969569752(self_2969581336));
              break Label1;
              }
              
              idx_2969581387 = index_3003121772(n_2969581388);
              n_2969581388 = n_2969581388.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2969581331(self_2969581370) {
    editPrevEmpty_2969581335(self_2969581370);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2969581331(this));};

function editNextEmpty_2969581398(self_2969581399) {
      
function HEX3Aanonymous_2969581401(n_2969581404) {
        var result_2969581407 = false;

          result_2969581407 = (!((n_2969581404 == current_2969581400)) && shouldEditNode_2969578349(self_2969581399.document, n_2969581404));

        return result_2969581407;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2969575154(self_2969581399)) {
    break BeforeRet;
    }
    
    var current_2969581400 = node_2969569752(self_2969581399);
    Label1: {
      var __2969581412 = 0;
      var emptyNode_2969581413 = null;
      var colontmp__2969581457 = null;
      var colontmp__2969581458 = null;
      colontmp__2969581457 = node_2969569752(self_2969581399);
      colontmp__2969581458 = HEX3Aanonymous_2969581401;
      var i_2969581459 = 0;
      Label2: {
        var __2969581461 = 0;
        var child_2969581462 = null;
        var n_2969581463 = colontmp__2969581457;
        var idx_2969581464 = -1;
        var i_2969581465 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2969581464 == -1)) {
              __2969581461 = i_2969581465;
              child_2969581462 = n_2969581463;
              if (colontmp__2969581458(child_2969581462)) {
              __2969581412 = i_2969581459;
              emptyNode_2969581413 = child_2969581462;
              nodeHEX3D_2969570829(self_2969581399, emptyNode_2969581413);
              var _ = tryEdit_2969575311(self_2969581399, node_2969569752(self_2969581399));
              break Label1;
              i_2969581459 = addInt(i_2969581459, 1);
              }
              
              }
              
              if ((addInt(idx_2969581464, 1) < len_3003121752(n_2969581463))) {
              n_2969581463 = HEX5BHEX5D_3003121748(n_2969581463, addInt(idx_2969581464, 1));
              idx_2969581464 = -1;
              }
              else {
                var oHEX60gensym55_2969581467 = next_3003121857(n_2969581463);
                if (!isSome_3003123546(oHEX60gensym55_2969581467)) Temporary7 = false; else {                  var ne_2969581468 = get_3003123566(oHEX60gensym55_2969581467);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2969581463 == null));                }              if (Temporary6) {
              n_2969581463 = ne_2969581468;
              idx_2969581464 = -1;
              }
              else {
              if (((!((n_2969581463.parent == null)) && !((n_2969581463 == null))) && !((n_2969581463.parent == null)))) {
              idx_2969581464 = index_3003121772(n_2969581463);
              n_2969581463 = n_2969581463.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2969581465 = addInt(i_2969581465, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2969581394(self_2969581441) {
    editNextEmpty_2969581398(self_2969581441);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2969581394(this));};

function rename_2969581475(self_2969581476) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969581476)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2969575311(self_2969581476, node_2969569752(self_2969581476));
  };

  
}

function renameJsWrapper_2969581471(self_2969581504) {
    rename_2969581475(self_2969581504);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2969581471(this));};

function selectPrevCompletion_2969581525(self_2969581526) {
    if ((0 < (self_2969581526.completions).length)) {
    if ((self_2969581526.selectedCompletion == 0)) {
    self_2969581526.selectedCompletion = (self_2969581526.completions).length - 1;
    }
    else {
      self_2969581526.selectedCompletion = clamp_1660945119(subInt(self_2969581526.selectedCompletion, 1), 0, (self_2969581526.completions).length - 1);
    }
    
    }
    else {
      self_2969581526.selectedCompletion = 0;
    }
    
    self_2969581526.scrollToCompletion = nimCopy(self_2969581526.scrollToCompletion, some_1191184367(self_2969581526.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581526);

  
}

function selectPrevCompletionJsWrapper2_2969581521(self_2969581571) {
    selectPrevCompletion_2969581525(self_2969581571);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2969581521(this));};

function selectNextCompletion_2969581592(self_2969581593) {
    if ((0 < (self_2969581593.completions).length)) {
    if ((self_2969581593.selectedCompletion == (self_2969581593.completions).length - 1)) {
    self_2969581593.selectedCompletion = 0;
    }
    else {
      self_2969581593.selectedCompletion = clamp_1660945119(addInt(self_2969581593.selectedCompletion, 1), 0, (self_2969581593.completions).length - 1);
    }
    
    }
    else {
      self_2969581593.selectedCompletion = 0;
    }
    
    self_2969581593.scrollToCompletion = nimCopy(self_2969581593.scrollToCompletion, some_1191184367(self_2969581593.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581593);

  
}

function selectNextCompletionJsWrapper2_2969581588(self_2969581638) {
    selectNextCompletion_2969581592(self_2969581638);

  
}
editor_ast_prototype.selectNextCompletion2 = function() { return (selectNextCompletionJsWrapper2_2969581588(this));};

function createDefaultNode_2969578005(editor_2969578006, kind_2969578007) {
  var result_2969578009 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2969578007) {
    case 0:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 1:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 2:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 3:
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2969578026 = null;
        Label2: {
          var res_2969578032 = null;
          res_2969578032 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578032.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578032.id = nimCopy(res_2969578032.id, newId_2046820597(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2969578035 = null;
              res_2969578035 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578035.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578032, res_2969578035);
        };
      };
      var node_2969578054 = res_2969578032;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578054, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2969578062 = null;
        Label8: {
          var res_2969578068 = null;
          res_2969578068 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578068.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578068.id = nimCopy(res_2969578068.id, newId_2046820597(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2969578071 = null;
              res_2969578071 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578071.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578068, res_2969578071);
            Label13: {
              var res_2969578073 = null;
              res_2969578073 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578073.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578068, res_2969578073);
          };
        };
      };
      var node_2969578101 = res_2969578068;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578101, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2969578109 = null;
        Label16: {
          var res_2969578115 = null;
          res_2969578115 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578115.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578115.id = nimCopy(res_2969578115.id, newId_2046820597(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2969578118 = null;
              res_2969578118 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578118.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578118);
            Label21: {
              var res_2969578120 = null;
              res_2969578120 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578120.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578115, res_2969578120);
          };
        };
      };
      var node_2969578148 = res_2969578115;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578148, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2969578156 = null;
        Label24: {
          var res_2969578162 = null;
          res_2969578162 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578162.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2969578164 = null;
              res_2969578164 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578164.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578164);
            Label29: {
              var res_2969578166 = null;
              res_2969578166 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578166.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578162, res_2969578166);
            Label31: {
              var res_2969578168 = null;
              res_2969578168 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578168.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2969578170 = null;
                  res_2969578170 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969578170.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969578168, res_2969578170);
            };
            add_3003121702(res_2969578162, res_2969578168);
          };
        };
      };
      var node_2969578216 = res_2969578162;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578216, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2969578224 = null;
        Label37: {
          var res_2969578230 = null;
          res_2969578230 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578230.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2969578232 = null;
              res_2969578232 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578232.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578230, res_2969578232);
            Label42: {
              var res_2969578234 = null;
              res_2969578234 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578234.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578230, res_2969578234);
          };
        };
      };
      var node_2969578262 = res_2969578230;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578262, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2969578270 = null;
        Label45: {
          var res_2969578276 = null;
          res_2969578276 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578276.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2969578278 = null;
              res_2969578278 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578278.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578276, res_2969578278);
            Label50: {
              var res_2969578280 = null;
              res_2969578280 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578280.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578276, res_2969578280);
          };
        };
      };
      var node_2969578308 = res_2969578276;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578308, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2969578316 = null;
        Label53: {
          var res_2969578322 = null;
          res_2969578322 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578322.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2969578324 = null;
              res_2969578324 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578324.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578322, res_2969578324);
        };
      };
      var node_2969578343 = res_2969578322;
      result_2969578009 = nimCopy(result_2969578009, some_2969576510({Field0: node_2969578343, Field1: 0}), NTI2969572495);
      break BeforeRet;
      break;
    default: 
      result_2969578009 = nimCopy(result_2969578009, none_2969577011(), NTI2969572495);
      break BeforeRet;
      break;
    }
  };

  return result_2969578009;

}

function applySelectedCompletion_2969581659(self_2969581660) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2969581765(n_2969581768) {
          var result_2969581771 = false;

            result_2969581771 = shouldEditNode_2969578349(self_2969581660.document, n_2969581768);

          return result_2969581771;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((self_2969581660.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((self_2969581660.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2969581668 = nimCopy(null, self_2969581660.completions[chckIndx(self_2969581660.selectedCompletion, 0, (self_2969581660.completions).length - 1)], NTI2969568638);
    var completionText_2969581669 = nimCopy(null, self_2969581660.completionText, NTI33554449);
    var fmtRes_2969581674 = [mnewString(0)];
    fmtRes_2969581674[0].push.apply(fmtRes_2969581674[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2701131945(fmtRes_2969581674, 0, self_2969581660.selectedCompletion, []);
    fmtRes_2969581674[0].push.apply(fmtRes_2969581674[0], [32,40]);;
    formatValue_721420459(fmtRes_2969581674, 0, completionText_2969581669, []);
    fmtRes_2969581674[0].push.apply(fmtRes_2969581674[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969581674[0], NTI33554449)]);
    finishEdit_2969575583(self_2969581660, false);
    markDirty_2415919143(self_2969581660);
    switch (com_2969581668.kind) {
    case 0:
        var Temporary2 = com_2969581668;
        if (ConstSet182[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym803_2969581682 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym803_2969581682)) Temporary1 = false; else {          var symbol_2969581705 = get_3087009376(oHEX60gensym803_2969581682);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969581660, replaceNode_2969576151(self_2969581660.document, node_2969569752(self_2969581660), {kind: 1, reff: nimCopy(null, symbol_2969581705.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2969581668;
        if (ConstSet183[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2969568637)); }
        var oHEX60gensym804_2969581708 = createDefaultNode_2969578005(self_2969581660, Temporary4.nodeKind);
        if (!isSome_2969580110(oHEX60gensym804_2969581708)) Temporary3 = false; else {          var nodeIndex_2969581731 = nimCopy(null, get_2969580127(oHEX60gensym804_2969581708), NTI2969572490);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2969581732 = nodeIndex_2969581731["Field0"];
      var __2969581733 = nodeIndex_2969581731["Field1"];
      var _ = replaceNode_2969576151(self_2969581660.document, node_2969569752(self_2969581660), newNode_2969581732);
      if ((newNode_2969581732.kind == 2)) {
      newNode_2969581732.text = nimCopy(null, completionText_2969581669, NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581732);
      }
      else {
      if ((newNode_2969581732.kind == 3)) {
      if (!((completionText_2969581669[chckIndx(0, 0, (completionText_2969581669).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,54,57,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2969581732.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2969581669, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581732);
      }
      }
      nodeHEX3D_2969570829(self_2969581660, newNode_2969581732);
      Label5: {
        var __2969581772 = 0;
        var emptyNode_2969581773 = null;
        var colontmp__2969581817 = null;
        colontmp__2969581817 = HEX3Aanonymous_2969581765;
        var i_2969581818 = 0;
        Label6: {
          var __2969581820 = 0;
          var child_2969581821 = null;
          var n_2969581822 = newNode_2969581732;
          var idx_2969581823 = -1;
          var i_2969581824 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969581823 == -1)) {
                __2969581820 = i_2969581824;
                child_2969581821 = n_2969581822;
                if (colontmp__2969581817(child_2969581821)) {
                __2969581772 = i_2969581818;
                emptyNode_2969581773 = child_2969581821;
                nodeHEX3D_2969570829(self_2969581660, emptyNode_2969581773);
                var _ = tryEdit_2969575311(self_2969581660, node_2969569752(self_2969581660));
                break Label5;
                i_2969581818 = addInt(i_2969581818, 1);
                }
                
                }
                
                if ((addInt(idx_2969581823, 1) < len_3003121752(n_2969581822))) {
                n_2969581822 = HEX5BHEX5D_3003121748(n_2969581822, addInt(idx_2969581823, 1));
                idx_2969581823 = -1;
                }
                else {
                  var oHEX60gensym55_2969581826 = next_3003121857(n_2969581822);
                  if (!isSome_3003123546(oHEX60gensym55_2969581826)) Temporary11 = false; else {                    var ne_2969581827 = get_3003123566(oHEX60gensym55_2969581826);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969581822 == newNode_2969581732));                  }                if (Temporary10) {
                n_2969581822 = ne_2969581827;
                idx_2969581823 = -1;
                }
                else {
                if (((!((n_2969581822.parent == null)) && !((n_2969581822 == newNode_2969581732))) && !((n_2969581822.parent == newNode_2969581732)))) {
                idx_2969581823 = index_3003121772(n_2969581822);
                n_2969581822 = n_2969581822.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969581824 = addInt(i_2969581824, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2969581655(self_2969581801) {
    applySelectedCompletion_2969581659(self_2969581801);

  
}
editor_ast_prototype.applySelectedCompletion2 = function() { return (applySelectedCompletionJsWrapper2_2969581655(this));};

function cancelAndNextCompletion_2969581870(self_2969581871) {
    finishEdit_2969575583(self_2969581871, false);
    editNextEmpty_2969581398(self_2969581871);

  
}

function cancelAndNextCompletionJsWrapper_2969581866(self_2969581899) {
    cancelAndNextCompletion_2969581870(self_2969581899);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2969581866(this));};

function cancelAndPrevCompletion_2969581920(self_2969581921) {
    finishEdit_2969575583(self_2969581921, false);
    editPrevEmpty_2969581335(self_2969581921);

  
}

function cancelAndPrevCompletionJsWrapper_2969581916(self_2969581949) {
    cancelAndPrevCompletion_2969581920(self_2969581949);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2969581916(this));};

function cancelAndDelete_2969581970(self_2969581971) {
    finishEdit_2969575583(self_2969581971, false);
    self_2969581971.deletedNode = nimCopy(self_2969581971.deletedNode, some_3003121890(node_2969569752(self_2969581971)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969581971, deleteNode_2969576215(self_2969581971.document, node_2969569752(self_2969581971)));

  
}

function cancelAndDeleteJsWrapper_2969581966(self_2969582002) {
    cancelAndDelete_2969581970(self_2969582002);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2969581966(this));};

function none_3003121842() {
  var result_3003121849 = ({val: 0, has: false});

  return result_3003121849;

}

function index_3003121834(node_3003121835, parent_3003121836) {
  var result_3003121838 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_3003121835.parent == null)) {
    result_3003121838 = nimCopy(result_3003121838, none_3003121842(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_3003121835.parent == parent_3003121836)) {
    result_3003121838 = nimCopy(result_3003121838, some_1191184367(index_3003121772(node_3003121835)), NTI1191183280);
    break BeforeRet;
    }
    
    result_3003121838 = nimCopy(result_3003121838, index_3003121834(node_3003121835.parent, parent_3003121836), NTI1191183280);
    break BeforeRet;
  };

  return result_3003121838;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2969582023(self_2969582024) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2969582025 = isEditing_2969575154(self_2969582024);
    finishEdit_2969575583(self_2969582024, false);
    var targetNode_2969582032 = none_3003121871();
    Label1: {
      var next_2969582033 = null;
      var colontmp__2969582173 = null;
      colontmp__2969582173 = node_2969569752(self_2969582024);
      var idx_2969582174 = 0;
      var n_2969582175 = colontmp__2969582173;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969582175 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969582175), 1)), subInt(idx_2969582174, 1))) {
            n_2969582175 = HEX5BHEX5D_3003121748(n_2969582175, subInt(idx_2969582174, 1));
            idx_2969582174 = len_3003121752(n_2969582175);
            }
            else {
              var oHEX60gensym74_2969582177 = prev_3003121903(n_2969582175);
              if (!isSome_3003123546(oHEX60gensym74_2969582177)) Temporary4 = false; else {                var ne_2969582178 = get_3003123566(oHEX60gensym74_2969582177);
                Temporary4 = true;              }            if (Temporary4) {
            next_2969582033 = n_2969582175;
            Label5: {
              if ((next_2969582033 == node_2969569752(self_2969582024))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578688(self_2969582024, next_2969582033) && (!((next_2969582033 == node_2969569752(self_2969582024).parent)) || (0 < index_3003121772(node_2969569752(self_2969582024)))))) {
              targetNode_2969582032 = nimCopy(targetNode_2969582032, some_3003121890(next_2969582033), NTI3003121804);
              break Label1;
              }
              
            };
            n_2969582175 = ne_2969582178;
            idx_2969582174 = len_3003121752(n_2969582175);
            }
            else {
              next_2969582033 = n_2969582175;
              Label6: {
                if ((next_2969582033 == node_2969569752(self_2969582024))) {
                break Label6;
                }
                
                if ((canInsertInto_2969578688(self_2969582024, next_2969582033) && (!((next_2969582033 == node_2969569752(self_2969582024).parent)) || (0 < index_3003121772(node_2969569752(self_2969582024)))))) {
                targetNode_2969582032 = nimCopy(targetNode_2969582032, some_3003121890(next_2969582033), NTI3003121804);
                break Label1;
                }
                
              };
              idx_2969582174 = index_3003121772(n_2969582175);
              n_2969582175 = n_2969582175.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym843_2969582047 = nimCopy(null, targetNode_2969582032, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym843_2969582047)) Temporary7 = false; else {        var newParent_2969582070 = get_3003123566(oHEX60gensym843_2969582047);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2969582071 = node_2969569752(self_2969582024);
    if ((nodeToMove_2969582071.parent == newParent_2969582070)) {
    Temporary8 = subInt(index_3003121772(nodeToMove_2969582071), 1);
    }
    else {
      var oHEX60gensym844_2969582078 = index_3003121834(nodeToMove_2969582071, newParent_2969582070);
      if (!isSome_1191185117(oHEX60gensym844_2969582078)) Temporary9 = false; else {        var index_2969582101 = get_1191185211(oHEX60gensym844_2969582078);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2969582101;
    }
    else {
    Temporary8 = len_3003121752(newParent_2969582070);
    }
    }
    var index_2969582102 = Temporary8;
    nodeHEX3D_2969570829(self_2969582024, deleteNode_2969576215(self_2969582024.document, nodeToMove_2969582071));
      var oHEX60gensym845_2969582105 = insertNode_2969573868(self_2969582024.document, newParent_2969582070, index_2969582102, nodeToMove_2969582071);
      if (!isSome_3003123546(oHEX60gensym845_2969582105)) Temporary10 = false; else {        var newNode_2969582128 = get_3003123566(oHEX60gensym845_2969582105);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2969570829(self_2969582024, newNode_2969582128);
    if (wasEditing_2969582025) {
    var _ = tryEdit_2969575311(self_2969582024, node_2969569752(self_2969582024));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2969582019(self_2969582156) {
    moveNodeToPrevSpace_2969582023(self_2969582156);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2969582019(this));};

function moveNodeToNextSpace_2969582185(self_2969582186) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2969582187 = isEditing_2969575154(self_2969582186);
    finishEdit_2969575583(self_2969582186, false);
    var targetNode_2969582194 = none_3003121871();
    Label1: {
      var __2969582195 = 0;
      var next_2969582196 = null;
      var colontmp__2969582336 = null;
      var colontmp__2969582337 = 0;
      colontmp__2969582336 = node_2969569752(self_2969582186).parent;
      colontmp__2969582337 = index_3003121772(node_2969569752(self_2969582186));
      var n_2969582339 = colontmp__2969582336;
      var idx_2969582340 = colontmp__2969582337;
      var i_2969582341 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969582340 == subInt(len_3003121752(n_2969582339), 1))) {
            var colontmp__2969582344 = nimCopy(null, {Field0: i_2969582341, Field1: n_2969582339}, NTI2969569466);
            __2969582195 = colontmp__2969582344["Field0"];
            next_2969582196 = colontmp__2969582344["Field1"];
            Label5: {
              if ((next_2969582196 == node_2969569752(self_2969582186))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578688(self_2969582186, next_2969582196) && (!((next_2969582196 == node_2969569752(self_2969582186).parent)) || (addInt(index_3003121772(node_2969569752(self_2969582186)), 1) < len_3003121752(node_2969569752(self_2969582186).parent))))) {
              targetNode_2969582194 = nimCopy(targetNode_2969582194, some_3003121890(next_2969582196), NTI3003121804);
              break Label1;
              }
              
            };
            if (((!((n_2969582339.parent == null)) && !((n_2969582339 == null))) && !((n_2969582339.parent == null)))) {
            idx_2969582340 = index_3003121772(n_2969582339);
            n_2969582339 = n_2969582339.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2969582340, 1) < len_3003121752(colontmp__2969582336))) {
            n_2969582339 = HEX5BHEX5D_3003121748(n_2969582339, addInt(idx_2969582340, 1));
            idx_2969582340 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2969582341 = addInt(i_2969582341, 1);
            }
          }
      };
    };
      var oHEX60gensym855_2969582210 = nimCopy(null, targetNode_2969582194, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym855_2969582210)) Temporary6 = false; else {        var newParent_2969582233 = get_3003123566(oHEX60gensym855_2969582210);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2969582234 = node_2969569752(self_2969582186);
    if ((nodeToMove_2969582234.parent == newParent_2969582233)) {
    Temporary7 = addInt(index_3003121772(nodeToMove_2969582234), 1);
    }
    else {
      var oHEX60gensym856_2969582241 = index_3003121834(nodeToMove_2969582234, newParent_2969582233);
      if (!isSome_1191185117(oHEX60gensym856_2969582241)) Temporary8 = false; else {        var index_2969582264 = get_1191185211(oHEX60gensym856_2969582241);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2969582264, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2969582265 = Temporary7;
    nodeHEX3D_2969570829(self_2969582186, deleteNode_2969576215(self_2969582186.document, nodeToMove_2969582234));
      var oHEX60gensym857_2969582268 = insertNode_2969573868(self_2969582186.document, newParent_2969582233, index_2969582265, nodeToMove_2969582234);
      if (!isSome_3003123546(oHEX60gensym857_2969582268)) Temporary9 = false; else {        var newNode_2969582291 = get_3003123566(oHEX60gensym857_2969582268);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2969570829(self_2969582186, newNode_2969582291);
    if (wasEditing_2969582187) {
    var _ = tryEdit_2969575311(self_2969582186, node_2969569752(self_2969582186));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2969582181(self_2969582319) {
    moveNodeToNextSpace_2969582185(self_2969582319);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2969582181(this));};

function popLast_2969571086(deq_2969571088) {
    var Temporary1;

  var result_2969571089 = null;

    if ((deq_2969571088.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571088.count = subInt(deq_2969571088.count, 1);
    deq_2969571088.tail = (subInt(deq_2969571088.tail, 1) & deq_2969571088.mask);
    Temporary1 = deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)];
    deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)] = genericReset(deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)], NTI3003121668);
    result_2969571089 = Temporary1;

  return result_2969571089;

}

function addFirst_2969571117(deq_2969571119, item_2969571120) {
    expandIfNeeded_2969570862(deq_2969571119);
    deq_2969571119.count = addInt(deq_2969571119.count, 1);
    deq_2969571119.head = (subInt(deq_2969571119.head, 1) & deq_2969571119.mask);
    deq_2969571119.data[chckIndx(deq_2969571119.head, 0, (deq_2969571119.data).length - 1)] = item_2969571120;

  
}

function selectPrevNode_2969571016(editor_2969571017) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571017.selectionHistory))) break Label2;
          var node_2969571099 = popLast_2969571086(editor_2969571017.selectionHistory);
          if (((!((node_2969571099 == null)) && !((node_2969571099.parent == null))) && (base_3003121758(node_2969571099) == editor_2969571017.document.rootNode))) {
          addFirst_2969571117(editor_2969571017.selectionHistory, editor_2969571017.selectedNode);
          editor_2969571017.selectedNode = node_2969571099;
          handleSelectedNodeChanged_2969569755(editor_2969571017);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2969582351(self_2969582352) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969582352)) {
    break BeforeRet;
    }
    
    selectPrevNode_2969571016(self_2969582352);
  };

  
}

function selectPrevJsWrapper2_2969582347(self_2969582380) {
    selectPrev_2969582351(self_2969582380);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2969582347(this));};

function selectNextNode_2969571134(editor_2969571135) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571135.selectionHistory))) break Label2;
          var node_2969571207 = popFirst_2969571003(editor_2969571135.selectionHistory);
          if (((!((node_2969571207 == null)) && !((node_2969571207.parent == null))) && (base_3003121758(node_2969571207) == editor_2969571135.document.rootNode))) {
          addLast_2969570853(editor_2969571135.selectionHistory, editor_2969571135.selectedNode);
          editor_2969571135.selectedNode = node_2969571207;
          handleSelectedNodeChanged_2969569755(editor_2969571135);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2969582402(self_2969582403) {
  BeforeRet: {
    if (isEditing_2969575154(self_2969582403)) {
    break BeforeRet;
    }
    
    selectNextNode_2969571134(self_2969582403);
  };

  
}

function selectNextJsWrapper2_2969582398(self_2969582431) {
    selectNext_2969582402(self_2969582431);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2969582398(this));};

function setCompletions_3187671114(self_3187671115, newCompletions_3187671116) {
    if (!(((newCompletions_3187671116).length == (self_3187671115.completions).length))) {
    markDirty_2483027989(self_3187671115);
    }
    else {
      Label1: {
        var i_3187671134 = 0;
        var colontmp__2969582765 = 0;
        colontmp__2969582765 = (newCompletions_3187671116).length - 1;
        var res_2969582766 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_2969582766 <= colontmp__2969582765)) break Label3;
              i_3187671134 = res_2969582766;
              if (changed_3187671112(self_3187671115.completions[chckIndx(i_3187671134, 0, (self_3187671115.completions).length - 1)], newCompletions_3187671116[chckIndx(i_3187671134, 0, (newCompletions_3187671116).length - 1)])) {
              markDirty_2483027989(self_3187671115);
              break Label1;
              }
              
              res_2969582766 = addInt(res_2969582766, 1);
            }
        };
      };
    }
    
    self_3187671115.completions = nimCopy(null, newCompletions_3187671116, NTI3187671080);
    if ((0 < (self_3187671115.completions).length)) {
    self_3187671115.selected = clamp_1660945119(self_3187671115.selected, 0, subInt((self_3187671115.completions).length, 1));
    if (!((self_3187671115.handleItemSelected == null))) {
    self_3187671115.handleItemSelected(self_3187671115.completions[chckIndx(self_3187671115.selected, 0, (self_3187671115.completions).length - 1)]);
    }
    
    }
    else {
      self_3187671115.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3187671179(self_3187671180) {
  var result_3187671182 = null;

  BeforeRet: {
    var text_3187671188 = nsuJoinSep(content_2818574085(self_3187671180.textEditor.document), []);
    var newCompletions_3187671193 = (await self_3187671180.getCompletionsAsync(self_3187671180, text_3187671188));
    setCompletions_3187671114(self_3187671180, newCompletions_3187671193);
    result_3187671182 = undefined;
    break BeforeRet;
  };

  return result_3187671182;

}
async function updateCompletionsAsyncIter_3187671206(self_3187671207) {
  var result_3187671209 = null;

  BeforeRet: {
    var text_3187671215 = nsuJoinSep(content_2818574085(self_3187671207.textEditor.document), []);
    setCompletions_3187671114(self_3187671207, []);
    (await self_3187671207.getCompletionsAsyncIter(self_3187671207, text_3187671215));
    result_3187671209 = undefined;
    break BeforeRet;
  };

  return result_3187671209;

}

function updateCompletions_3187671226(self_3187671227) {
    var text_3187671228 = nsuJoinSep(content_2818574085(self_3187671227.textEditor.document), []);
    if (!((self_3187671227.getCompletions == null))) {
    var newCompletions_3187671232 = self_3187671227.getCompletions(self_3187671227, text_3187671228);
    setCompletions_3187671114(self_3187671227, newCompletions_3187671232);
    }
    else {
    if (!((self_3187671227.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3187671179(self_3187671227);
    }
    else {
    if (!((self_3187671227.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3187671206(self_3187671227);
    }
    else {
      var fmtRes_3187671243 = [mnewString(0)];
      fmtRes_3187671243[0].push.apply(fmtRes_3187671243[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2701131945(fmtRes_3187671243, 0, self_3187671227.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3187671243[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3187671834(self_3187671835) {
    updateCompletions_3187671226(self_3187671835);
    self_3187671835.selected = 0;
    if ((!((self_3187671835.handleItemSelected == null)) && (self_3187671835.selected < (self_3187671835.completions).length))) {
    self_3187671835.handleItemSelected(self_3187671835.completions[chckIndx(self_3187671835.selected, 0, (self_3187671835.completions).length - 1)]);
    }
    

  
}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_2969582780 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582780 < L_855639192)) break Label3;
            i_855639197 = i_2969582780;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_2969582780 = addInt(i_2969582780, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__2969582783 = 0;
        var colontmp__2969582784 = 0;
        colontmp__2969582783 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__2969582784 = addInt(a_855639190, (b_855639188).length);
        var res_2969582785 = colontmp__2969582783;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__2969582784 <= res_2969582785)) break Label6;
              iHEX60gensym109_855639210 = res_2969582785;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_2969582785 = subInt(res_2969582785, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__2969582788 = 0;
          var colontmp__2969582789 = 0;
          colontmp__2969582788 = addInt(a_855639190, (b_855639188).length);
          colontmp__2969582789 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_2969582790 = colontmp__2969582788;
          Label8: {
              Label9: while (true) {
              if (!(res_2969582790 <= colontmp__2969582789)) break Label9;
                iHEX60gensym109_855639216 = res_2969582790;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_2969582790 = addInt(res_2969582790, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__2969582793 = 0;
        colontmp__2969582793 = (b_855639188).length;
        var i_2969582794 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2969582794 < colontmp__2969582793)) break Label12;
              iHEX60gensym109_855639221 = i_2969582794;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_2969582794 = addInt(i_2969582794, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_2969582797 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582797 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_2969582797;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_2969582797 = addInt(i_2969582797, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet184);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet185[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet186[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet187[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet188[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet189[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__2969582808 = 0;
      colontmp__2969582808 = start_855639721;
      var res_2969582809 = colontmp__2969582808;
      Label3: {
          Label4: while (true) {
          if (!(res_2969582809 <= last_855639724)) break Label4;
            i_855639729 = res_2969582809;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_2969582809 = addInt(res_2969582809, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_2969582816 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582816 <= 3)) break Label3;
            __1694499043 = res_2969582816;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_2969582816 = addInt(res_2969582816, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_2969582813 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_2969582813 <= length_1694499110)) break Label5;
                      i_1694499115 = res_2969582813;
                      if ((ConstSet191[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_2969582813 = addInt(res_2969582813, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet192[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet193[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet190)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet198[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet195[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet196[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet197[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet199[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet200[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet194[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function handleUnknownPopupAction_1291848841(self_1291848842, popup_1291848843, action_1291848844, arg_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    var args_1291848847 = newJArray_1627390082();
    Label2: {
      var a_1291848848 = null;
      var colontmp__2969582774 = null;
      colontmp__2969582774 = newStringStream_1660945417(arg_1291848845);
      var p_2969582775 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582775[0], colontmp__2969582774, [], false);
      try {
      var _ = getTok_1694499270(p_2969582775[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_2969582775[0].tok == 1))) break Label5;
            a_1291848848 = parseJson_1627395211(p_2969582775[0], false, false, 0);
            add_1627390190(args_1291848847, a_1291848848);
          }
      };
      } finally {
      close_1694498967(p_2969582775[0]);
      }
    };
    if (handleUnknownPopupAction_2751463448(self_1291848842.scriptContext, popup_1291848843, action_1291848844, args_1291848847)) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848853 = [mnewString(0)];
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848853, 0, action_1291848844, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [32]);;
    formatValue_721420459(fmtRes_1291848853, 0, arg_1291848845, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848853, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848853[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function toJson_3187671489(self_3187671490, opt_3187671491) {
  var result_3187671492 = null;

    result_3187671492 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [105,100], newJInt_1627390040(self_3187671490.id));

  return result_3187671492;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function isSome_2818593879(self_2818593881) {
  var result_2818593882 = false;

    result_2818593882 = !((self_2818593881.val == null));

  return result_2818593882;

}

function some_2818593612(val_2818593614) {
  var result_2818593615 = ({val: null});

    if (!(!((val_2818593614 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818593615.val = val_2818593614;

  return result_2818593615;

}

function none_3187671402() {
  var result_3187671408 = ({val: null});

  return result_3187671408;

}

function some_1291850925(val_1291850927) {
  var result_1291850928 = ({val: null});

    if (!(!((val_1291850927 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850928.val = val_1291850927;

  return result_1291850928;

}

function none_1291850938() {
  var result_1291850944 = ({val: null});

  return result_1291850944;

}

function getPopupForId_1291850895(self_1291850896, id_1291850897) {
  var result_1291850902 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850924 = null;
      var i_2969582833 = 0;
      var L_2969582834 = (self_1291850896.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582833 < L_2969582834)) break Label3;
            popup_1291850924 = self_1291850896.popups[chckIndx(i_2969582833, 0, (self_1291850896.popups).length - 1)];
            if ((popup_1291850924.id == id_1291850897)) {
            result_1291850902 = nimCopy(result_1291850902, some_1291850925(popup_1291850924), NTI1291848451);
            break BeforeRet;
            }
            
            i_2969582833 = addInt(i_2969582833, 1);
            if (!(((self_1291850896.popups).length == L_2969582834))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850902 = nimCopy(result_1291850902, none_1291850938(), NTI1291848451);
    break BeforeRet;
  };

  return result_1291850902;

}

function isSome_3187671416(self_3187671418) {
  var result_3187671419 = false;

    result_3187671419 = !((self_3187671418.val == null));

  return result_3187671419;

}

function isNone_3187671444(self_3187671446) {
  var result_3187671447 = false;

    result_3187671447 = (self_3187671446.val == null);

  return result_3187671447;

}

function get_3187671436(self_3187671438) {
  var result_3187671439 = null;

    if (isNone_3187671444(self_3187671438)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671439 = self_3187671438["val"];

  return result_3187671439;

}

function some_3187671461(val_3187671463) {
  var result_3187671464 = ({val: null});

    if (!(!((val_3187671463 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671464.val = val_3187671463;

  return result_3187671464;

}

function getSelectorPopup_3187671392(wrapper_3187671393) {
      var Temporary1;

  var result_3187671398 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
    }
    
      var oHEX60gensym18_3187671411 = getPopupForId_1291850895(gEditor, wrapper_3187671393.id);
      if (!isSome_3187671416(oHEX60gensym18_3187671411)) Temporary1 = false; else {        var editor_3187671453 = get_3187671436(oHEX60gensym18_3187671411);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3187671453.m_type, NTI3187671062)) {
    result_3187671398 = nimCopy(result_3187671398, some_3187671461(editor_3187671453), NTI3187671304);
    break BeforeRet;
    }
    
    }
    
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
  };

  return result_3187671398;

}

function isNone_3187671524(self_3187671526) {
  var result_3187671527 = false;

    result_3187671527 = (self_3187671526.val == null);

  return result_3187671527;

}

function get_3187671544(self_3187671546) {
  var result_3187671547 = null;

    if (isNone_3187671524(self_3187671546)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671547 = self_3187671546["val"];

  return result_3187671547;

}

function acceptScript_3187671502_3187671517(self_3187671518) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym23_3187671519 = getSelectorPopup_3187671392(self_3187671518);
      if (isNone_3187671524(rHEX60gensym23_3187671519)) {
      break BeforeRet;
      }
      
    };
    accept_3187671507(get_3187671544(rHEX60gensym23_3187671519));
  };

  
}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__2969582844 = 0;
      colontmp__2969582844 = subInt((x_1627392045).length, 1);
      var res_2969582845 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582845 <= colontmp__2969582844)) break Label3;
            i_1627392069 = res_2969582845;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_2969582845 = addInt(res_2969582845, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet201[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet202[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet203[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet204[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet205[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet206[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet207[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet208[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet209[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet210[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet211[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet212[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__2969582837 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet213[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__2969582837 = nimCopy(colontmp__2969582837, Temporary14.fields, NTI1627389966);
          var L_2969582839 = len_1627392114(colontmp__2969582837);
          if ((0 < colontmp__2969582837.counter)) {
          var h_2969582840 = colontmp__2969582837.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_2969582840)) break Label16;
                var nxt_2969582842 = colontmp__2969582837.data[chckIndx(h_2969582840, 0, (colontmp__2969582837.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__2969582837.data[chckIndx(h_2969582840, 0, (colontmp__2969582837.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__2969582837.data[chckIndx(h_2969582840, 0, (colontmp__2969582837.data).length - 1)].Field2;
                val_1627392497 = colontmp__2969582837.data[chckIndx(h_2969582840, 0, (colontmp__2969582837.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet214[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet215[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__2969582837) == L_2969582839))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_2969582840 = nxt_2969582842;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet216[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet217[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__2969582864 = 0;
      colontmp__2969582864 = subInt(len_855638790, 1);
      var res_2969582865 = colontmp__2969582864;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2969582865)) break Label3;
            j_855638800 = res_2969582865;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_2969582865 = subInt(res_2969582865, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_2969582860 = 0;
      var L_2969582861 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582860 < L_2969582861)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_2969582860, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_2969582860 = addInt(i_2969582860, 1);
            if (!(((s_1627394347).length == L_2969582861))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__2969582848 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet218[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__2969582848 = Temporary2.elems;
        var i_2969582850 = 0;
        var L_2969582851 = (colontmp__2969582848).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2969582850 < L_2969582851)) break Label4;
              child_1627394384 = colontmp__2969582848[chckIndx(i_2969582850, 0, (colontmp__2969582848).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_2969582850 = addInt(i_2969582850, 1);
              if (!(((colontmp__2969582848).length == L_2969582851))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__2969582854 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet219[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__2969582854 = nimCopy(colontmp__2969582854, Temporary6.fields, NTI1627389966);
        var L_2969582855 = len_1627392114(colontmp__2969582854);
        if ((0 < colontmp__2969582854.counter)) {
        var h_2969582856 = colontmp__2969582854.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_2969582856)) break Label8;
              var nxt_2969582858 = colontmp__2969582854.data[chckIndx(h_2969582856, 0, (colontmp__2969582854.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__2969582854.data[chckIndx(h_2969582856, 0, (colontmp__2969582854.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__2969582854.data[chckIndx(h_2969582856, 0, (colontmp__2969582854.data).length - 1)].Field2;
              value_1627394390 = colontmp__2969582854.data[chckIndx(h_2969582856, 0, (colontmp__2969582854.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__2969582854) == L_2969582855))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_2969582856 = nxt_2969582858;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet220[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet221[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet222[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet223[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet224[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_2969582869 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582869 <= 6)) break Label3;
            if ((x_1627395424[i_2969582869] != undefined)) {
            value_1627395451 = i_2969582869;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_2969582869 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2818584078(dst_2818584080, dst_2818584080_Idx, jsonNode_2818584081, jsonPath_2818584082, jsonPath_2818584082_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818584081, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818584082[jsonPath_2818584082_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet225[jsonNode_2818584081.kind] != undefined))) {
    var msgHEX60gensym176_2818584099 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet226), nimCopy(null, jsonPath_2818584082[jsonPath_2818584082_Idx], NTI33554449), reprEnum(jsonNode_2818584081.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym176_2818584099, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818584081;
    if (ConstSet227[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818584080[dst_2818584080_Idx] = Temporary1.num;

  
}

function to_2818584067(node_2818584070) {
  var result_2818584072 = [0];

    var jsonPath_2818584073 = [[]];
    result_2818584072[0] = 0;
    initFromJson_2818584078(result_2818584072, 0, node_2818584070, jsonPath_2818584073, 0);

  return result_2818584072[0];

}

function fromJson_2818584054(a_2818584056, a_2818584056_Idx, b_2818584057, opt_2818584058) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584057, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818584057}));
    }
    
    a_2818584056[a_2818584056_Idx] = to_2818584067(b_2818584057);

  
}

function jsonTo_2818584048(b_2818584050, opt_2818584052) {
  var result_2818584053 = [0];

    fromJson_2818584054(result_2818584053, 0, b_2818584050, opt_2818584052);

  return result_2818584053[0];

}

function fromJsonHook_3187671493(t_3187671494, jsonNode_3187671495) {
    t_3187671494.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_3187671495, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3187671576(a_3187671578, b_3187671579, opt_3187671580) {
    if (!(!(HEX3DHEX3D_1627392026(b_3187671579, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3187671579}));
    }
    
    fromJsonHook_3187671493(a_3187671578, b_3187671579);

  
}

function jsonTo_3187671570(b_3187671572, opt_3187671574) {
  var result_3187671575 = [({id: 0})];

    fromJson_3187671576(result_3187671575[0], b_3187671572, opt_3187671574);

  return result_3187671575[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet228[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3187671568(HEX3Atmp_3187671504) {
  var result_3187671569 = null;

    result_3187671569 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3187671502_3187671517(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671504, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym28_3187671587 = [97,99,99,101,112,116];
    var fmtRes_3187671592 = [mnewString(0)];
    fmtRes_3187671592[0].push.apply(fmtRes_3187671592[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671592, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym28_3187671587 || [],fmtRes_3187671592[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671569;

}

function cancelScript_3187671604_3187671617(self_3187671618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym33_3187671619 = getSelectorPopup_3187671392(self_3187671618);
      if (isNone_3187671524(rHEX60gensym33_3187671619)) {
      break BeforeRet;
      }
      
    };
    cancel_3187671609(get_3187671544(rHEX60gensym33_3187671619));
  };

  
}

function cancelApi_3187671645(HEX3Atmp_3187671606) {
  var result_3187671646 = null;

    result_3187671646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3187671604_3187671617(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671606, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym38_3187671652 = [99,97,110,99,101,108];
    var fmtRes_3187671657 = [mnewString(0)];
    fmtRes_3187671657[0].push.apply(fmtRes_3187671657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym38_3187671652 || [],fmtRes_3187671657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671646;

}

function prevScript_3187671660_3187671685(self_3187671686) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym42_3187671687 = getSelectorPopup_3187671392(self_3187671686);
      if (isNone_3187671524(rHEX60gensym42_3187671687)) {
      break BeforeRet;
      }
      
    };
    prev_3187671665(get_3187671544(rHEX60gensym42_3187671687));
  };

  
}

function prevApi_3187671713(HEX3Atmp_3187671662) {
  var result_3187671714 = null;

    result_3187671714 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3187671660_3187671685(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671662, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym47_3187671720 = [112,114,101,118];
    var fmtRes_3187671725 = [mnewString(0)];
    fmtRes_3187671725[0].push.apply(fmtRes_3187671725[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671725, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym47_3187671720 || [],fmtRes_3187671725[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671714;

}

function nextScript_3187671728_3187671750(self_3187671751) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym52_3187671752 = getSelectorPopup_3187671392(self_3187671751);
      if (isNone_3187671524(rHEX60gensym52_3187671752)) {
      break BeforeRet;
      }
      
    };
    next_3187671733(get_3187671544(rHEX60gensym52_3187671752));
  };

  
}

function nextApi_3187671778(HEX3Atmp_3187671730) {
  var result_3187671779 = null;

    result_3187671779 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3187671728_3187671750(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671730, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym57_3187671785 = [110,101,120,116];
    var fmtRes_3187671790 = [mnewString(0)];
    fmtRes_3187671790[0].push.apply(fmtRes_3187671790[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671790, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym57_3187671785 || [],fmtRes_3187671790[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671779;

}

function none_2818593811() {
  var result_2818593817 = ({val: null});

  return result_2818593817;

}

function dispatch_3187671795(command_3187671794, arg_3187671793) {
    var Temporary1;

  var result_3187671797 = ({val: null});

    switch (toJSStr(command_3187671794)) {
    case "accept":
      Temporary1 = some_2818593612(acceptApi_3187671568(arg_3187671793));
      break;
    case "cancel":
      Temporary1 = some_2818593612(cancelApi_3187671645(arg_3187671793));
      break;
    case "prev":
      Temporary1 = some_2818593612(prevApi_3187671713(arg_3187671793));
      break;
    case "next":
      Temporary1 = some_2818593612(nextApi_3187671778(arg_3187671793));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_3187671797 = nimCopy(result_3187671797, Temporary1, NTI2818585760);

  return result_3187671797;

}

function handleAction_3187671816(self_3187671817, action_3187671818, arg_3187671819) {
  var result_3187671820 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848841(self_3187671817.editor, self_3187671817, action_3187671818, arg_3187671819) == 3)) {
    result_3187671820 = 3;
    break BeforeRet;
    }
    
    var args_3187671825 = newJArray_1627390082();
    add_1627390190(args_3187671825, toJson_3187671489({id: self_3187671817.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3187671826 = null;
      var colontmp__2969582769 = null;
      colontmp__2969582769 = newStringStream_1660945417(arg_3187671819);
      var p_2969582771 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582771[0], colontmp__2969582769, [], false);
      try {
      var _ = getTok_1694499270(p_2969582771[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_2969582771[0].tok == 1))) break Label4;
            a_3187671826 = parseJson_1627395211(p_2969582771[0], false, false, 0);
            add_1627390190(args_3187671825, a_3187671826);
          }
      };
      } finally {
      close_1694498967(p_2969582771[0]);
      }
    };
    if (isSome_2818593879(dispatch_3187671795(action_3187671818, args_3187671825))) {
    result_3187671820 = 3;
    break BeforeRet;
    }
    
    result_3187671820 = 1;
    break BeforeRet;
  };

  return result_3187671820;

}

function newSelectorPopup_3187671933(editor_3187671934) {
    
function HEX3Aanonymous_3187671967(doc_3187671968) {
        handleTextChanged_3187671834(popup_3187671936);

      
    }
      
function HEX3Aanonymous_3187672016(actionHEX60gensym69HEX60gensym70_3187672017, argHEX60gensym69HEX60gensym70_3187672018) {
        var result_3187672019 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_3187672004.config.handleActions) {
          var action_3187672020 = nimCopy(null, actionHEX60gensym69HEX60gensym70_3187672017, NTI33554449);
          var arg_3187672021 = nimCopy(null, argHEX60gensym69HEX60gensym70_3187672018, NTI33554449);
          var responseHEX60gensym69HEX60gensym70_3187672022 = handleAction_3187671816(popup_3187671936, action_3187672020, arg_3187672021);
          if (handlerHEX60gensym69_3187672004.config.consumeAllActions) {
          result_3187672019 = 3;
          break BeforeRet;
          }
          
          result_3187672019 = responseHEX60gensym69HEX60gensym70_3187672022;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym69_3187672004.config.consumeAllActions) {
          result_3187672019 = 3;
          break BeforeRet;
          }
          else {
            result_3187672019 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3187672019;

      }
      
function HEX3Aanonymous_3187672024(inputHEX60gensym69HEX60gensym71_3187672025) {
        var result_3187672026 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_3187672004.config.handleInputs) {
          var input_3187672027 = nimCopy(null, inputHEX60gensym69HEX60gensym71_3187672025, NTI33554449);
          result_3187672026 = 1;
          break BeforeRet;
          }
          else {
            result_3187672026 = 1;
            break BeforeRet;
          }
          
        };

        return result_3187672026;

      }

  var result_3187671935 = null;

  BeforeRet: {
    var popup_3187671936 = {editor: editor_3187671934, m_type: NTI3187671062, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], cancellationToken: null, id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3187671936.textEditor = newTextEditor_2818594009(newTextDocument_2818579088([], [], false), editor_3187671934);
    setMode_2818584223(popup_3187671936.textEditor, [105,110,115,101,114,116]);
    popup_3187671936.textEditor.renderHeader = false;
    popup_3187671936.textEditor.lineNumbers = nimCopy(popup_3187671936.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    popup_3187671936.textEditor.document.singleLine = true;
    var _ = subscribe_2818594057(popup_3187671936.textEditor.document.textChanged, HEX3Aanonymous_3187671967);
    Label1: {
      var handlerHEX60gensym69_3187672004 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym69_3187672004.config = getEventHandlerConfig_1291849162(editor_3187671934, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym69_3187672004.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(editor_3187671934, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym69_3187672004.handleAction = HEX3Aanonymous_3187672016;
      handlerHEX60gensym69_3187672004.handleInput = HEX3Aanonymous_3187672024;
    };
    popup_3187671936.eventHandler = handlerHEX60gensym69_3187672004;
    result_3187671935 = popup_3187671936;
    break BeforeRet;
  };

  return result_3187671935;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2684355198 = 0;
      colontmp__2684355198 = (a_1979711593).length - 1;
      var res_2684355199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355199 <= colontmp__2684355198)) break Label3;
            i_1979711612 = res_2684355199;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2684355199 = addInt(res_2684355199, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2969582878 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582878 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2969582878;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2969582878 = addInt(res_2969582878, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function newSeq_2969582536(len_2969582538) {
  var result_2969582539 = [];

    result_2969582539 = new Array(len_2969582538); for (var i = 0 ; i < len_2969582538 ; ++i) { result_2969582539[i] = null; }
  return result_2969582539;

}

function mergeAlt_2969582547(a_2969582549, b_2969582550, lo_2969582551, m_2969582552, hi_2969582553, cmp_2969582556, order_2969582557) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969582556(a_2969582549[chckIndx(m_2969582552, 0, (a_2969582549).length - 1)], a_2969582549[chckIndx(addInt(m_2969582552, 1), 0, (a_2969582549).length - 1)]), order_2969582557) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969582558 = lo_2969582551;
    if (!((j_2969582558 <= m_2969582552))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969582564 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969582558 <= m_2969582552)) break Label2;
          b_2969582550[chckIndx(bb_2969582564, 0, (b_2969582550).length - 1)] = a_2969582549[chckIndx(j_2969582558, 0, (a_2969582549).length - 1)];
          bb_2969582564 = addInt(bb_2969582564, 1);
          j_2969582558 = addInt(j_2969582558, 1);
        }
    };
    var i_2969582575 = 0;
    var k_2969582576 = lo_2969582551;
    Label3: {
        Label4: while (true) {
        if (!((k_2969582576 < j_2969582558) && (j_2969582558 <= hi_2969582553))) break Label4;
          if ((HEX2A_1023410184(cmp_2969582556(b_2969582550[chckIndx(i_2969582575, 0, (b_2969582550).length - 1)], a_2969582549[chckIndx(j_2969582558, 0, (a_2969582549).length - 1)]), order_2969582557) <= 0)) {
          a_2969582549[chckIndx(k_2969582576, 0, (a_2969582549).length - 1)] = b_2969582550[chckIndx(i_2969582575, 0, (b_2969582550).length - 1)];
          i_2969582575 = addInt(i_2969582575, 1);
          }
          else {
            a_2969582549[chckIndx(k_2969582576, 0, (a_2969582549).length - 1)] = a_2969582549[chckIndx(j_2969582558, 0, (a_2969582549).length - 1)];
            j_2969582558 = addInt(j_2969582558, 1);
          }
          
          k_2969582576 = addInt(k_2969582576, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969582576 < j_2969582558)) break Label6;
          a_2969582549[chckIndx(k_2969582576, 0, (a_2969582549).length - 1)] = b_2969582550[chckIndx(i_2969582575, 0, (b_2969582550).length - 1)];
          k_2969582576 = addInt(k_2969582576, 1);
          i_2969582575 = addInt(i_2969582575, 1);
        }
    };
  };

  
}

function sort_2969582524(a_2969582526, cmp_2969582529, order_2969582530) {
    var n_2969582535 = (a_2969582526).length;
    var b_2969582544 = newSeq_2969582536(chckRange(divInt(n_2969582535, 2), 0, 2147483647));
    var s_2969582545 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969582545 < n_2969582535)) break Label2;
          var m_2969582546 = subInt(subInt(n_2969582535, 1), s_2969582545);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969582546)) break Label4;
                mergeAlt_2969582547(a_2969582526, b_2969582544, nimMax(addInt(subInt(m_2969582546, s_2969582545), 1), 0), m_2969582546, addInt(m_2969582546, s_2969582545), cmp_2969582529, order_2969582530);
                m_2969582546 = subInt(m_2969582546, mulInt(s_2969582545, 2));
              }
          };
          s_2969582545 = mulInt(s_2969582545, 2);
        }
    };

  
}

function init_2483028018(self_2483028019) {
    self_2483028019.id = newEditorId_2449473854();

  
}

function subscribe_1291848997(event_1291848999, callback_1291849000) {
  var result_1291849001 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849001 = nimCopy(result_1291849001, newId_2046820597(), NTI2046820355);
    event_1291848999.handlers.push({Field0: nimCopy(null, result_1291849001, NTI2046820355), Field1: callback_1291849000});;

  return result_1291849001;

}

function pushPopup_1291849060(self_1291849061, popup_1291849062) {
    
function HEX3Aanonymous_1291849078() {
        requestRender_2768240746(self_1291849061.platform, false);

      
    }

    init_2483028018(popup_1291849062);
    self_1291849061.popups.push(popup_1291849062);;
    var _ = subscribe_1291848997(popup_1291849062.onMarkedDirty, HEX3Aanonymous_1291849078);
    requestRender_2768240746(self_1291849061.platform, false);

  
}

function openGotoSymbolPopup_2969582470(self_2969582471) {
    
function HEX3Aanonymous_2969582473(popup_2969582474, text_2969582475) {
        
function HEX3Aanonymous_2969582493(a_2969582511, b_2969582512) {
          var result_2969582517 = 0;

            result_2969582517 = cmp_3204448328(a_2969582511.completion.score, b_2969582512.completion.score);

          return result_2969582517;

        }

      var result_2969582476 = [];

        var symbols_2969582477 = computeSymbols_3019922496(ctx_2969567289, self_2969582471.document.rootNode, true);
        Label1: {
          var key_2969582482 = ({padding: 0, time: 0, fuzz: 0, count: 0});
          var symbol_2969582483 = null;
          var L_2969582755 = len_3087009065(symbols_2969582477);
          Label2: {
            var h_2969582757 = 0;
            var colontmp__2969582758 = 0;
            colontmp__2969582758 = (symbols_2969582477.data).length - 1;
            var res_2969582759 = 0;
            Label3: {
                Label4: while (true) {
                if (!(res_2969582759 <= colontmp__2969582758)) break Label4;
                  h_2969582757 = res_2969582759;
                  if (isFilled_1308622880(symbols_2969582477.data[chckIndx(h_2969582757, 0, (symbols_2969582477.data).length - 1)].Field0)) {
                  var colontmp__2969582762 = nimCopy(null, {Field0: nimCopy(null, symbols_2969582477.data[chckIndx(h_2969582757, 0, (symbols_2969582477.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969582477.data[chckIndx(h_2969582757, 0, (symbols_2969582477.data).length - 1)].Field2}, NTI3087008732);
                  key_2969582482 = nimCopy(key_2969582482, colontmp__2969582762["Field0"], NTI2046820355);
                  symbol_2969582483 = colontmp__2969582762["Field1"];
                  Label5: {
                    if (!((symbol_2969582483.kind == 0))) {
                    break Label5;
                    }
                    
                    var score_2969582488 = fuzzyMatchSmart_1979711572(text_2969582475, symbol_2969582483.name, true);
                    result_2969582476.push({completion: {kind: 0, score: score_2969582488, id: nimCopy(null, symbol_2969582483.id, NTI2046820355), nodeKind: 0, name: []}, m_type: NTI2969577319, score: 0.0});;
                  };
                  if (!((len_3087009065(symbols_2969582477) == L_2969582755))) {
                  failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_2969582759 = addInt(res_2969582759, 1);
                }
            };
          };
        };
        sort_2969582524(result_2969582476, HEX3Aanonymous_2969582493, 0);

      return result_2969582476;

    }
    
function HEX3Aanonymous_2969582654(item_2969582655) {
        var Temporary1;
          var Temporary2;
          var Temporary3;

        var completion_2969582656 = nimCopy(null, item_2969582655.completion, NTI2969568638);
        var Temporary1 = completion_2969582656;
        if (ConstSet229[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
        var id_2969582657 = nimCopy(null, Temporary1.id, NTI2046820355);
          var oHEX60gensym886_2969582660 = getAstNode_3019906180(ctx_2969567289, id_2969582657);
          if (!isSome_3003123546(oHEX60gensym886_2969582660)) Temporary3 = false; else {            var node_2969582683 = get_3003123566(oHEX60gensym886_2969582660);
            Temporary3 = true;          }          if (!Temporary3) Temporary2 = false; else {            Temporary2 = (base_3003121758(node_2969582683) == self_2969582471.document.rootNode);          }        if (Temporary2) {
        nodeHEX3D_2969570829(self_2969582471, node_2969582683);
        }
        

      
    }
    
function HEX3Aanonymous_2969582688() {
        if ((base_3003121758(prevSelection_2969582653) == self_2969582471.document.rootNode)) {
        nodeHEX3D_2969570829(self_2969582471, prevSelection_2969582653);
        }
        

      
    }

    var popup_2969582472 = newSelectorPopup_3187671933(self_2969582471.editor);
    popup_2969582472.getCompletions = HEX3Aanonymous_2969582473;
    var prevSelection_2969582653 = node_2969569752(self_2969582471);
    popup_2969582472.handleItemSelected = HEX3Aanonymous_2969582654;
    popup_2969582472.handleCanceled = HEX3Aanonymous_2969582688;
    updateCompletions_3187671226(popup_2969582472);
    pushPopup_1291849060(self_2969582471.editor, popup_2969582472);

  
}

function openGotoSymbolPopupJsWrapper_2969582466(self_2969582738) {
    openGotoSymbolPopup_2969582470(self_2969582738);

  
}
editor_ast_prototype.openGotoSymbolPopup = function() { return (openGotoSymbolPopupJsWrapper_2969582466(this));};

function len_3221227056(t_3221227059) {
  var result_3221227060 = 0;

    result_3221227060 = t_3221227059.counter;

  return result_3221227060;

}

function goto_2969582892(self_2969582893, where_2969582894) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2969582938(n_2969582941) {
          var result_2969582944 = false;

            result_2969582944 = (!((n_2969582941 == node_2969569752(self_2969582893))) && (HEX3DHEX3D_2046820626(n_2969582941.id, id_2969582937) || HEX3DHEX3D_2046820626(n_2969582941.reff, id_2969582937)));

          return result_2969582944;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2969582965(n_2969582968) {
          var result_2969582971 = false;

            result_2969582971 = (!((n_2969582968 == node_2969569752(self_2969582893))) && (computeType_3019913434(ctx_2969567289, n_2969582968, true).kind == 0));

          return result_2969582971;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2969582991(n_2969582994) {
          var result_2969582997 = false;

            result_2969582997 = !((n_2969582994 == node_2969569752(self_2969582893)));

          return result_2969582997;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;

  BeforeRet: {
    if (isEditing_2969575154(self_2969582893)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2969582894)) {
    case "definition":
        var oHEX60gensym896_2969582897 = computeSymbol_3019919344(ctx_2969567289, node_2969569752(self_2969582893), true);
        if (!isSome_3087009356(oHEX60gensym896_2969582897)) Temporary1 = false; else {          var sym_2969582920 = get_3087009376(oHEX60gensym896_2969582897);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2969582920.kind == 0) && !((sym_2969582920.node == self_2969582893.document.rootNode)))) {
      var Temporary2 = sym_2969582920;
      if (ConstSet230[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2969570829(self_2969582893, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2969582929 = node_2969569752(self_2969582893);
        var pos_2969582930 = 0;
        var _ = pos_2969582930;
        if ((expr_2969582929.kind == 1)) {
        Temporary4 = node_2969569752(self_2969582893).reff;
        }
        else {
        Temporary4 = node_2969569752(self_2969582893).id;
        }
        
      };
      var id_2969582937 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2969582949 = 0;
        var n_2969582950 = null;
        var colontmp__2969583368 = null;
        var colontmp__2969583369 = null;
        colontmp__2969583368 = node_2969569752(self_2969582893);
        colontmp__2969583369 = HEX3Aanonymous_2969582938;
        var i_2969583370 = 0;
        Label6: {
          var __2969583372 = 0;
          var child_2969583373 = null;
          var n_2969583374 = colontmp__2969583368;
          var idx_2969583375 = -1;
          var i_2969583376 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969583375 == -1)) {
                __2969583372 = i_2969583376;
                child_2969583373 = n_2969583374;
                if (colontmp__2969583369(child_2969583373)) {
                __2969582949 = i_2969583370;
                n_2969582950 = child_2969583373;
                nodeHEX3D_2969570829(self_2969582893, n_2969582950);
                break Label5;
                i_2969583370 = addInt(i_2969583370, 1);
                }
                
                }
                
                if ((addInt(idx_2969583375, 1) < len_3003121752(n_2969583374))) {
                n_2969583374 = HEX5BHEX5D_3003121748(n_2969583374, addInt(idx_2969583375, 1));
                idx_2969583375 = -1;
                }
                else {
                  var oHEX60gensym55_2969583378 = next_3003121857(n_2969583374);
                  if (!isSome_3003123546(oHEX60gensym55_2969583378)) Temporary11 = false; else {                    var ne_2969583379 = get_3003123566(oHEX60gensym55_2969583378);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969583374 == null));                  }                if (Temporary10) {
                n_2969583374 = ne_2969583379;
                idx_2969583375 = -1;
                }
                else {
                if (((!((n_2969583374.parent == null)) && !((n_2969583374 == null))) && !((n_2969583374.parent == null)))) {
                idx_2969583375 = index_3003121772(n_2969583374);
                n_2969583374 = n_2969583374.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969583376 = addInt(i_2969583376, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2969582951 = node_2969569752(self_2969582893);
        var pos_2969582952 = 0;
        var _ = pos_2969582952;
        if ((expr_2969582951.kind == 1)) {
        Temporary13 = node_2969569752(self_2969582893).reff;
        }
        else {
        Temporary13 = node_2969569752(self_2969582893).id;
        }
        
      };
      var id_2969582959 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2969582960 = null;
        var colontmp__2969583382 = null;
        colontmp__2969583382 = node_2969569752(self_2969582893);
        var idx_2969583383 = 0;
        var n_2969583384 = colontmp__2969583382;
        Label15: {
            Label16: while (true) {
            if (!!((n_2969583384 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583384), 1)), subInt(idx_2969583383, 1))) {
              n_2969583384 = HEX5BHEX5D_3003121748(n_2969583384, subInt(idx_2969583383, 1));
              idx_2969583383 = len_3003121752(n_2969583384);
              }
              else {
                var oHEX60gensym74_2969583386 = prev_3003121903(n_2969583384);
                if (!isSome_3003123546(oHEX60gensym74_2969583386)) Temporary17 = false; else {                  var ne_2969583387 = get_3003123566(oHEX60gensym74_2969583386);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2969582960 = n_2969583384;
              if ((!((n_2969582960 == node_2969569752(self_2969582893))) && (HEX3DHEX3D_2046820626(n_2969582960.id, id_2969582959) || HEX3DHEX3D_2046820626(n_2969582960.reff, id_2969582959)))) {
              nodeHEX3D_2969570829(self_2969582893, n_2969582960);
              break Label14;
              }
              
              n_2969583384 = ne_2969583387;
              idx_2969583383 = len_3003121752(n_2969583384);
              }
              else {
                n_2969582960 = n_2969583384;
                if ((!((n_2969582960 == node_2969569752(self_2969582893))) && (HEX3DHEX3D_2046820626(n_2969582960.id, id_2969582959) || HEX3DHEX3D_2046820626(n_2969582960.reff, id_2969582959)))) {
                nodeHEX3D_2969570829(self_2969582893, n_2969582960);
                break Label14;
                }
                
                idx_2969583383 = index_3003121772(n_2969583384);
                n_2969583384 = n_2969583384.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2969582980 = 0;
        var n_2969582981 = null;
        var colontmp__2969583389 = null;
        var colontmp__2969583390 = null;
        colontmp__2969583389 = node_2969569752(self_2969582893);
        colontmp__2969583390 = HEX3Aanonymous_2969582965;
        var i_2969583391 = 0;
        Label19: {
          var __2969583393 = 0;
          var child_2969583394 = null;
          var n_2969583395 = colontmp__2969583389;
          var idx_2969583396 = -1;
          var i_2969583397 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2969583396 == -1)) {
                __2969583393 = i_2969583397;
                child_2969583394 = n_2969583395;
                if (colontmp__2969583390(child_2969583394)) {
                __2969582980 = i_2969583391;
                n_2969582981 = child_2969583394;
                nodeHEX3D_2969570829(self_2969582893, n_2969582981);
                break Label18;
                i_2969583391 = addInt(i_2969583391, 1);
                }
                
                }
                
                if ((addInt(idx_2969583396, 1) < len_3003121752(n_2969583395))) {
                n_2969583395 = HEX5BHEX5D_3003121748(n_2969583395, addInt(idx_2969583396, 1));
                idx_2969583396 = -1;
                }
                else {
                  var oHEX60gensym55_2969583399 = next_3003121857(n_2969583395);
                  if (!isSome_3003123546(oHEX60gensym55_2969583399)) Temporary24 = false; else {                    var ne_2969583400 = get_3003123566(oHEX60gensym55_2969583399);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2969583395 == null));                  }                if (Temporary23) {
                n_2969583395 = ne_2969583400;
                idx_2969583396 = -1;
                }
                else {
                if (((!((n_2969583395.parent == null)) && !((n_2969583395 == null))) && !((n_2969583395.parent == null)))) {
                idx_2969583396 = index_3003121772(n_2969583395);
                n_2969583395 = n_2969583395.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2969583397 = addInt(i_2969583397, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2969582982 = null;
        var colontmp__2969583402 = null;
        colontmp__2969583402 = node_2969569752(self_2969582893);
        var idx_2969583403 = 0;
        var n_2969583404 = colontmp__2969583402;
        Label26: {
            Label27: while (true) {
            if (!!((n_2969583404 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583404), 1)), subInt(idx_2969583403, 1))) {
              n_2969583404 = HEX5BHEX5D_3003121748(n_2969583404, subInt(idx_2969583403, 1));
              idx_2969583403 = len_3003121752(n_2969583404);
              }
              else {
                var oHEX60gensym74_2969583406 = prev_3003121903(n_2969583404);
                if (!isSome_3003123546(oHEX60gensym74_2969583406)) Temporary28 = false; else {                  var ne_2969583407 = get_3003123566(oHEX60gensym74_2969583406);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2969582982 = n_2969583404;
              if ((!((n_2969582982 == node_2969569752(self_2969582893))) && (computeType_3019913434(ctx_2969567289, n_2969582982, true).kind == 0))) {
              nodeHEX3D_2969570829(self_2969582893, n_2969582982);
              break Label25;
              }
              
              n_2969583404 = ne_2969583407;
              idx_2969583403 = len_3003121752(n_2969583404);
              }
              else {
                n_2969582982 = n_2969583404;
                if ((!((n_2969582982 == node_2969569752(self_2969582893))) && (computeType_3019913434(ctx_2969567289, n_2969582982, true).kind == 0))) {
                nodeHEX3D_2969570829(self_2969582893, n_2969582982);
                break Label25;
                }
                
                idx_2969583403 = index_3003121772(n_2969583404);
                n_2969583404 = n_2969583404.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2969583002 = 0;
        var n_2969583003 = null;
        var colontmp__2969583421 = null;
        var colontmp__2969583422 = null;
        colontmp__2969583421 = node_2969569752(self_2969582893);
        colontmp__2969583422 = HEX3Aanonymous_2969582991;
        var i_2969583423 = 0;
        Label30: {
          var __2969583425 = 0;
          var child_2969583426 = null;
          var n_2969583427 = colontmp__2969583421;
          var idx_2969583428 = -1;
          var i_2969583429 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2969583428 == -1)) {
                __2969583425 = i_2969583429;
                child_2969583426 = n_2969583427;
                if (colontmp__2969583422(child_2969583426)) {
                __2969583002 = i_2969583423;
                n_2969583003 = child_2969583426;
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969583003.id)) {
                var found_2969583067 = false;
                Label34: {
                  var diags_2969583154 = [];
                  var colontmp__2969583410 = ({data: [], counter: 0});
                  colontmp__2969583410 = nimCopy(colontmp__2969583410, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969583003.id).queries, NTI3019898894);
                  var L_2969583415 = len_3221227056(colontmp__2969583410);
                  Label35: {
                    var h_2969583417 = 0;
                    var colontmp__2969583418 = 0;
                    colontmp__2969583418 = (colontmp__2969583410.data).length - 1;
                    var res_2969583419 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2969583419 <= colontmp__2969583418)) break Label37;
                          h_2969583417 = res_2969583419;
                          if (isFilled_1308622880(colontmp__2969583410.data[chckIndx(h_2969583417, 0, (colontmp__2969583410.data).length - 1)].Field0)) {
                          diags_2969583154 = colontmp__2969583410.data[chckIndx(h_2969583417, 0, (colontmp__2969583410.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583154).length)) {
                          found_2969583067 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583410) == L_2969583415))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583419 = addInt(res_2969583419, 1);
                        }
                    };
                  };
                };
                if (found_2969583067) {
                nodeHEX3D_2969570829(self_2969582893, n_2969583003);
                }
                
                break Label29;
                }
                
                i_2969583423 = addInt(i_2969583423, 1);
                }
                
                }
                
                if ((addInt(idx_2969583428, 1) < len_3003121752(n_2969583427))) {
                n_2969583427 = HEX5BHEX5D_3003121748(n_2969583427, addInt(idx_2969583428, 1));
                idx_2969583428 = -1;
                }
                else {
                  var oHEX60gensym55_2969583431 = next_3003121857(n_2969583427);
                  if (!isSome_3003123546(oHEX60gensym55_2969583431)) Temporary39 = false; else {                    var ne_2969583432 = get_3003123566(oHEX60gensym55_2969583431);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2969583427 == null));                  }                if (Temporary38) {
                n_2969583427 = ne_2969583432;
                idx_2969583428 = -1;
                }
                else {
                if (((!((n_2969583427.parent == null)) && !((n_2969583427 == null))) && !((n_2969583427.parent == null)))) {
                idx_2969583428 = index_3003121772(n_2969583427);
                n_2969583427 = n_2969583427.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2969583429 = addInt(i_2969583429, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2969583158 = null;
        var colontmp__2969583443 = null;
        colontmp__2969583443 = node_2969569752(self_2969582893);
        var idx_2969583444 = 0;
        var n_2969583445 = colontmp__2969583443;
        Label41: {
            Label42: while (true) {
            if (!!((n_2969583445 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583445), 1)), subInt(idx_2969583444, 1))) {
              n_2969583445 = HEX5BHEX5D_3003121748(n_2969583445, subInt(idx_2969583444, 1));
              idx_2969583444 = len_3003121752(n_2969583445);
              }
              else {
                var oHEX60gensym74_2969583447 = prev_3003121903(n_2969583445);
                if (!isSome_3003123546(oHEX60gensym74_2969583447)) Temporary43 = false; else {                  var ne_2969583448 = get_3003123566(oHEX60gensym74_2969583447);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2969583158 = n_2969583445;
              Label44: {
                if ((n_2969583158 == node_2969569752(self_2969582893))) {
                break Label44;
                }
                
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969583158.id)) {
                var found_2969583226 = false;
                Label45: {
                  var diags_2969583313 = [];
                  var colontmp__2969583436 = ({data: [], counter: 0});
                  colontmp__2969583436 = nimCopy(colontmp__2969583436, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969583158.id).queries, NTI3019898894);
                  var L_2969583437 = len_3221227056(colontmp__2969583436);
                  Label46: {
                    var h_2969583439 = 0;
                    var colontmp__2969583440 = 0;
                    colontmp__2969583440 = (colontmp__2969583436.data).length - 1;
                    var res_2969583441 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2969583441 <= colontmp__2969583440)) break Label48;
                          h_2969583439 = res_2969583441;
                          if (isFilled_1308622880(colontmp__2969583436.data[chckIndx(h_2969583439, 0, (colontmp__2969583436.data).length - 1)].Field0)) {
                          diags_2969583313 = colontmp__2969583436.data[chckIndx(h_2969583439, 0, (colontmp__2969583436.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583313).length)) {
                          found_2969583226 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583436) == L_2969583437))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583441 = addInt(res_2969583441, 1);
                        }
                    };
                  };
                };
                if (found_2969583226) {
                nodeHEX3D_2969570829(self_2969582893, n_2969583158);
                break Label40;
                }
                
                }
                
              };
              n_2969583445 = ne_2969583448;
              idx_2969583444 = len_3003121752(n_2969583445);
              }
              else {
                n_2969583158 = n_2969583445;
                Label49: {
                  if ((n_2969583158 == node_2969569752(self_2969582893))) {
                  break Label49;
                  }
                  
                  if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969583158.id)) {
                  var found_2969583449 = false;
                  Label50: {
                    var diags_2969583450 = [];
                    var colontmp__2969583451 = ({data: [], counter: 0});
                    colontmp__2969583451 = nimCopy(colontmp__2969583451, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969583158.id).queries, NTI3019898894);
                    var L_2969583452 = len_3221227056(colontmp__2969583451);
                    Label51: {
                      var h_2969583453 = 0;
                      var colontmp__2969583454 = 0;
                      colontmp__2969583454 = (colontmp__2969583451.data).length - 1;
                      var res_2969583455 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2969583455 <= colontmp__2969583454)) break Label53;
                            h_2969583453 = res_2969583455;
                            if (isFilled_1308622880(colontmp__2969583451.data[chckIndx(h_2969583453, 0, (colontmp__2969583451.data).length - 1)].Field0)) {
                            diags_2969583450 = colontmp__2969583451.data[chckIndx(h_2969583453, 0, (colontmp__2969583451.data).length - 1)]["Field2"];
                            if ((0 < (diags_2969583450).length)) {
                            found_2969583449 = true;
                            }
                            
                            if (!((len_3221227056(colontmp__2969583451) == L_2969583452))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2969583455 = addInt(res_2969583455, 1);
                          }
                      };
                    };
                  };
                  if (found_2969583449) {
                  nodeHEX3D_2969570829(self_2969582893, n_2969583158);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2969583444 = index_3003121772(n_2969583445);
                n_2969583445 = n_2969583445.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      openGotoSymbolPopup_2969582470(self_2969582893);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2969582888(self_2969583345, where_2969583346) {
    goto_2969582892(self_2969583345, where_2969583346);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2969582888(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function startTimer_2080374869() {
  var result_2080374870 = 0.0;

    result_2080374870 = (Date.now() / 1000);

  return result_2080374870;

}

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2969583497(self_2969583499, line_2969583500, color_2969583501) {
    if ((1500 <= (self_2969583499.lines).length)) {
    delete_2969567879(self_2969583499, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969583499.lines).length, 1000)));
    }
    
    if ((0 < self_2969583499.scroll)) {
    self_2969583499.scroll = addInt(self_2969583499.scroll, 1);
    }
    
    self_2969583499.lines.push({Field0: nimCopy(null, line_2969583500, NTI33554449), Field1: color_2634022945(color_2969583501)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2969583727 = 0;
      colontmp__2969583727 = (result_855640118).length;
      var i_2969583728 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583728 < colontmp__2969583727)) break Label3;
            i_855640125 = i_2969583728;
            if ((ConstSet231[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2969583728 = addInt(i_2969583728, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet233[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2969583731 = 0;
      colontmp__2969583731 = subInt((s_855638126).length, 1);
      var res_2969583732 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583732 <= colontmp__2969583731)) break Label3;
            iHEX60gensym11_855638133 = res_2969583732;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2969583732 = addInt(res_2969583732, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2785018156(result_2785018158, result_2785018158_Idx, value_2785018159, specifier_2785018160) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2785018160).length == 0)) {
    result_2785018158[result_2785018158_Idx].push.apply(result_2785018158[result_2785018158_Idx], HEX24_33557336(value_2785018159));;
    break BeforeRet;
    }
    
    var spec_2785018164 = parseStandardFormatSpecifier_721420346(specifier_2785018160, 0, false);
    var fmode_2785018165 = 0;
    switch (spec_2785018164.typ) {
    case 101:
    case 69:
      fmode_2785018165 = 2;
      break;
    case 102:
    case 70:
      fmode_2785018165 = 1;
      break;
    case 103:
    case 71:
      fmode_2785018165 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2785018164.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2785018167 = [nsuformatBiggestFloat(value_2785018159, fmode_2785018165, chckRange(spec_2785018164.precision, -1, 32), 46)];
    var sign_2785018168 = false;
    if ((0.0 <= value_2785018159)) {
    if (!((spec_2785018164.sign == 45))) {
    sign_2785018168 = true;
    if ((value_2785018159 == 0.0)) {
    if (((1.0 / value_2785018159) == Infinity)) {
    insert_33557745(f_2785018167, 0, nimCharToStr(spec_2785018164.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2785018167, 0, nimCharToStr(spec_2785018164.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2785018168 = true;
    }
    
    if (spec_2785018164.padWithZero) {
    var signStr_2785018169 = [];
    if (sign_2785018168) {
    signStr_2785018169 = nimCopy(null, nimCharToStr(f_2785018167[0][chckIndx(0, 0, (f_2785018167[0]).length - 1)]), NTI33554449);
    f_2785018167[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2785018167[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2785018191 = subInt(subInt(spec_2785018164.minimumWidth, (f_2785018167[0]).length), (sign_2785018168 ? 1 : 0));
    if ((0 < toFill_2785018191)) {
    f_2785018167[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2785018191, 0, 2147483647)) || []).concat(f_2785018167[0] || []), NTI33554449);
    }
    
    if (sign_2785018168) {
    f_2785018167[0] = nimCopy(null, (signStr_2785018169 || []).concat(f_2785018167[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2785018164.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2785018164.align;
    }
    
    var align_2785018192 = Temporary1;
    var res_2785018193 = alignString_721420308(f_2785018167[0], spec_2785018164.minimumWidth, align_2785018192, spec_2785018164.fill);
    if ((ConstSet232[spec_2785018164.typ] != undefined)) {
    result_2785018158[result_2785018158_Idx].push.apply(result_2785018158[result_2785018158_Idx], nsuToUpperAsciiStr(res_2785018193));;
    }
    else {
    result_2785018158[result_2785018158_Idx].push.apply(result_2785018158[result_2785018158_Idx], res_2785018193);;
    }
    
  };

  
}

function ms_2080374842(seconds_2080374843) {
  var result_2080374844 = 0.0;

    result_2080374844 = (seconds_2080374843 * 1000.0);

  return result_2080374844;

}

function elapsed_2080374866(timer_2080374867) {
  var result_2080374868 = 0.0;

    result_2080374868 = ((Date.now() / 1000) - timer_2080374867);

  return result_2080374868;

}

function runSelectedFunction_2969583462(self_2969583463) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2969575154(self_2969583463)) {
    break BeforeRet;
    }
    
    var node_2969583464 = node_2969569752(self_2969583463);
    Label1: {
        Label2: while (true) {
        if (!!((node_2969583464.parent == null))) break Label2;
          if (((node_2969583464.parent == self_2969583463.document.rootNode) && (node_2969583464.kind == 8))) {
          var timer_2969583477 = startTimer_2080374869();
          var fmtRes_2969583482 = [mnewString(0)];
          fmtRes_2969583482[0].push.apply(fmtRes_2969583482[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008590(fmtRes_2969583482, 0, node_2969583464, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583482[0], NTI33554449)]);
          updateNode_3019955286(ctx_2969567289, node_2969583464);
          var result_2969583488 = computeValue_3019916562(ctx_2969567289, node_2969583464, true);
          if (!((result_2969583488.kind == 1))) {
          if ((result_2969583488.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583497(executionOutput_2969567288[0], HEX24_3087008498(result_2969583488), Temporary3);
          }
          
          var fmtRes_2969583529 = [mnewString(0)];
          fmtRes_2969583529[0].push.apply(fmtRes_2969583529[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008590(fmtRes_2969583529, 0, node_2969583464, []);
          fmtRes_2969583529[0].push.apply(fmtRes_2969583529[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583529, 0, result_2969583488, []);
          fmtRes_2969583529[0].push.apply(fmtRes_2969583529[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018156(fmtRes_2969583529, 0, ms_2080374842(elapsed_2080374866(timer_2969583477)), []);
          fmtRes_2969583529[0].push.apply(fmtRes_2969583529[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583529[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2969583464.kind == 4) && (0 < len_3003121752(node_2969583464))) && (HEX5BHEX5D_3003121748(node_2969583464, 0).kind == 11))) {
          var functionType_2969583553 = computeType_3019913434(ctx_2969567289, node_2969583464, true);
          if ((functionType_2969583553.kind == 0)) {
          var fmtRes_2969583562 = [mnewString(0)];
          fmtRes_2969583562[0].push.apply(fmtRes_2969583562[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583562, 0, node_2969583464, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583562[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2969583553.kind == 4))) {
          var fmtRes_2969583576 = [mnewString(0)];
          fmtRes_2969583576[0].push.apply(fmtRes_2969583576[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583576, 0, node_2969583464, []);
          fmtRes_2969583576[0].push.apply(fmtRes_2969583576[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583576, 0, functionType_2969583553, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583576[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2969583553;
            if (ConstSet234[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2969583594 = [mnewString(0)];
          fmtRes_2969583594[0].push.apply(fmtRes_2969583594[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008590(fmtRes_2969583594, 0, node_2969583464, []);
          fmtRes_2969583594[0].push.apply(fmtRes_2969583594[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583594, 0, functionType_2969583553, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583594[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2969583609 = [mnewString(0)];
          fmtRes_2969583609[0].push.apply(fmtRes_2969583609[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583609, 0, node_2969583464, []);
          fmtRes_2969583609[0].push.apply(fmtRes_2969583609[0], [32,40]);;
          formatValue_3019948837(fmtRes_2969583609, 0, functionType_2969583553, []);
          fmtRes_2969583609[0].push.apply(fmtRes_2969583609[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583609[0], NTI33554449)]);
          var timer_2969583620 = startTimer_2080374869();
          var maxLoopIterations_2969583630 = getOption_2818589681(self_2969583463.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2969583638 = newFunctionExecutionContext_3019907902(ctx_2969567289, {node: HEX5BHEX5D_3003121748(node_2969583464, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2969583630), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2969583639 = computeFunctionExecution_3019933908(ctx_2969567289, fec_2969583638);
          if (!((result_2969583639.kind == 1))) {
          if ((result_2969583639.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583497(executionOutput_2969567288[0], HEX24_3087008498(result_2969583639), Temporary5);
          }
          
          var fmtRes_2969583657 = [mnewString(0)];
          fmtRes_2969583657[0].push.apply(fmtRes_2969583657[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583657, 0, node_2969583464, []);
          fmtRes_2969583657[0].push.apply(fmtRes_2969583657[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583657, 0, result_2969583639, []);
          fmtRes_2969583657[0].push.apply(fmtRes_2969583657[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018156(fmtRes_2969583657, 0, ms_2080374842(elapsed_2080374866(timer_2969583620)), []);
          fmtRes_2969583657[0].push.apply(fmtRes_2969583657[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583657[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2969583464 = node_2969583464.parent;
        }
    };
    var fmtRes_2969583677 = [mnewString(0)];
    fmtRes_2969583677[0].push.apply(fmtRes_2969583677[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008590(fmtRes_2969583677, 0, node_2969569752(self_2969583463), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583677[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2969583458(self_2969583710) {
    runSelectedFunction_2969583462(self_2969583710);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2969583458(this));};

function toggleOption_2969583740(self_2969583741, name_2969583742) {
    switch (toJSStr(name_2969583742)) {
    case "logging":
      ctx_2969567289.enableLogging = !(ctx_2969567289.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2969583736(self_2969583771, name_2969583772) {
    toggleOption_2969583740(self_2969583771, name_2969583772);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2969583736(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2969583802(self_2969583803, which_2969583804) {
    switch (toJSStr(which_2969583804)) {
    case "":
      var _ = handleAction_2969583792(self_2969583803, self_2969583803.lastCommand["Field0"], self_2969583803.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2969583792(self_2969583803, self_2969583803.lastMoveCommand["Field0"], self_2969583803.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2969583792(self_2969583803, self_2969583803.lastEditCommand["Field0"], self_2969583803.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2969583792(self_2969583803, self_2969583803.lastOtherCommand["Field0"], self_2969583803.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2969583798(self_2969583833, which_2969583834) {
    runLastCommand_2969583802(self_2969583833, which_2969583834);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2969583798(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007967(node_3087007968, index_3087007969) {
  var result_3087007970 = null;

  BeforeRet: {
    result_3087007970 = node_3087007968.children[chckIndx(index_3087007969, 0, (node_3087007968.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007970;

}

function none_3087008000() {
  var result_3087008006 = ({val: null});

  return result_3087008006;

}

function none_3087007997() {
  var result_3087007999 = ({val: null});

    result_3087007999 = nimCopy(result_3087007999, none_3087008000(), NTI3087007897);

  return result_3087007999;

}

function index_3087007914(node_3087007915) {
  var result_3087007916 = 0;

  BeforeRet: {
    if ((node_3087007915.parent == null)) {
    result_3087007916 = -1;
    break BeforeRet;
    }
    
    result_3087007916 = 0;
    Label1: {
      var i_3087007943 = null;
      var i_2969584182 = 0;
      var L_2969584183 = (node_3087007915.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584182 < L_2969584183)) break Label3;
            i_3087007943 = node_3087007915.parent.children[chckIndx(i_2969584182, 0, (node_3087007915.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820626(i_3087007943.id, node_3087007915.id)) {
            break BeforeRet;
            }
            
            result_3087007916 = addInt(result_3087007916, 1);
            i_2969584182 = addInt(i_2969584182, 1);
            if (!(((node_3087007915.parent.children).length == L_2969584183))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007916;

}

function some_3087008019(val_3087008021) {
  var result_3087008022 = ({val: null});

    if (!(!((val_3087008021 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008022.val = val_3087008021;

  return result_3087008022;

}

function next_3087007986(node_3087007987) {
  var result_3087007992 = ({val: null});

  BeforeRet: {
    if ((node_3087007987.parent == null)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    var i_3087008016 = index_3087007914(node_3087007987);
    if ((subInt(len_3087007980(node_3087007987.parent), 1) <= i_3087008016)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    result_3087007992 = nimCopy(result_3087007992, some_3087008019(HEX5BHEX5D_3087007967(node_3087007987.parent, addInt(i_3087008016, 1))), NTI3087007897);
    break BeforeRet;
  };

  return result_3087007992;

}

function isSome_3087008068(self_3087008070) {
  var result_3087008071 = false;

    result_3087008071 = !((self_3087008070.val == null));

  return result_3087008071;

}

function isNone_3087008096(self_3087008098) {
  var result_3087008099 = false;

    result_3087008099 = (self_3087008098.val == null);

  return result_3087008099;

}

function get_3087008088(self_3087008090) {
  var result_3087008091 = null;

    if (isNone_3087008096(self_3087008090)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008091 = self_3087008090["val"];

  return result_3087008091;

}

function newSeq_2969583937(len_2969583939) {
  var result_2969583940 = [];

    result_2969583940 = new Array(len_2969583939); for (var i = 0 ; i < len_2969583939 ; ++i) { result_2969583940[i] = {Field0: 0.0, Field1: null}; }
  return result_2969583940;

}

function mergeAlt_2969583966(a_2969583968, b_2969583969, lo_2969583970, m_2969583971, hi_2969583972, cmp_2969583975, order_2969583976) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969583975(a_2969583968[chckIndx(m_2969583971, 0, (a_2969583968).length - 1)], a_2969583968[chckIndx(addInt(m_2969583971, 1), 0, (a_2969583968).length - 1)]), order_2969583976) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969583977 = lo_2969583970;
    if (!((j_2969583977 <= m_2969583971))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969583983 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969583977 <= m_2969583971)) break Label2;
          b_2969583969[chckIndx(bb_2969583983, 0, (b_2969583969).length - 1)] = nimCopy(b_2969583969[chckIndx(bb_2969583983, 0, (b_2969583969).length - 1)], a_2969583968[chckIndx(j_2969583977, 0, (a_2969583968).length - 1)], NTI2969578283);
          bb_2969583983 = addInt(bb_2969583983, 1);
          j_2969583977 = addInt(j_2969583977, 1);
        }
    };
    var i_2969583994 = 0;
    var k_2969583995 = lo_2969583970;
    Label3: {
        Label4: while (true) {
        if (!((k_2969583995 < j_2969583977) && (j_2969583977 <= hi_2969583972))) break Label4;
          if ((HEX2A_1023410184(cmp_2969583975(b_2969583969[chckIndx(i_2969583994, 0, (b_2969583969).length - 1)], a_2969583968[chckIndx(j_2969583977, 0, (a_2969583968).length - 1)]), order_2969583976) <= 0)) {
          a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)] = nimCopy(a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)], b_2969583969[chckIndx(i_2969583994, 0, (b_2969583969).length - 1)], NTI2969578283);
          i_2969583994 = addInt(i_2969583994, 1);
          }
          else {
            a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)] = nimCopy(a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)], a_2969583968[chckIndx(j_2969583977, 0, (a_2969583968).length - 1)], NTI2969578283);
            j_2969583977 = addInt(j_2969583977, 1);
          }
          
          k_2969583995 = addInt(k_2969583995, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969583995 < j_2969583977)) break Label6;
          a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)] = nimCopy(a_2969583968[chckIndx(k_2969583995, 0, (a_2969583968).length - 1)], b_2969583969[chckIndx(i_2969583994, 0, (b_2969583969).length - 1)], NTI2969578283);
          k_2969583995 = addInt(k_2969583995, 1);
          i_2969583994 = addInt(i_2969583994, 1);
        }
    };
  };

  
}

function sort_2969583925(a_2969583927, cmp_2969583930, order_2969583931) {
    var n_2969583936 = (a_2969583927).length;
    var b_2969583963 = newSeq_2969583937(chckRange(divInt(n_2969583936, 2), 0, 2147483647));
    var s_2969583964 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969583964 < n_2969583936)) break Label2;
          var m_2969583965 = subInt(subInt(n_2969583936, 1), s_2969583964);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969583965)) break Label4;
                mergeAlt_2969583966(a_2969583927, b_2969583963, nimMax(addInt(subInt(m_2969583965, s_2969583964), 1), 0), m_2969583965, addInt(m_2969583965, s_2969583964), cmp_2969583930, order_2969583931);
                m_2969583965 = subInt(m_2969583965, mulInt(s_2969583964, 2));
              }
          };
          s_2969583964 = mulInt(s_2969583964, 2);
        }
    };

  
}

function cmp_2969583905(x_2969583907, y_2969583908) {
  var result_2969583909 = 0;

  BeforeRet: {
    if ((x_2969583907 == y_2969583908)) {
    result_2969583909 = 0;
    break BeforeRet;
    }
    
    if ((x_2969583907 < y_2969583908)) {
    result_2969583909 = -1;
    break BeforeRet;
    }
    
    result_2969583909 = 1;
    break BeforeRet;
  };

  return result_2969583909;

}

function selectCenterNode_2969583860(self_2969583861) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2969583893(a_2969583912, b_2969583913) {
      var result_2969583918 = 0;

        result_2969583918 = cmp_2969583905(a_2969583912.Field0, b_2969583913.Field0);

      return result_2969583918;

    }

    var nodes_2969583868 = [];
    Label1: {
      var layout_2969583872 = null;
      var offset_2969583873 = ({x: 0.0, y: 0.0});
      var i_2969584173 = 0;
      var L_2969584174 = (self_2969583861.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584173 < L_2969584174)) break Label3;
            layout_2969583872 = self_2969583861.lastLayouts[chckIndx(i_2969584173, 0, (self_2969583861.lastLayouts).length - 1)]["Field0"];
            offset_2969583873 = self_2969583861.lastLayouts[chckIndx(i_2969584173, 0, (self_2969583861.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2969583874 = 0;
              var node_2969583875 = null;
              var n_2969584164 = layout_2969583872.root;
              var idx_2969584165 = -1;
              var i_2969584166 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2969584165 == -1)) {
                    var colontmp__2969584169 = nimCopy(null, {Field0: i_2969584166, Field1: n_2969584164}, NTI3087007968);
                    i_2969583874 = colontmp__2969584169["Field0"];
                    node_2969583875 = colontmp__2969584169["Field1"];
                    if ((!((node_2969583875.node == null)) && (0 < len_3087007980(node_2969583875)))) {
                    var bounds_2969583879 = absoluteBounds_3087009545(node_2969583875);
                    if (intersects_2130706609(rect_2147483666(0.0, 0.0, self_2969583861.lastBounds.w, self_2969583861.lastBounds.h), HEX2B_2130706587(bounds_2969583879, vec2_2164261725(0.0, offset_2969583873.y)))) {
                    nodes_2969583868.push({Field0: (bounds_2969583879.y + offset_2969583873.y), Field1: node_2969583875});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2969584165, 1) < len_3087007980(n_2969584164))) {
                    n_2969584164 = HEX5BHEX5D_3087007967(n_2969584164, addInt(idx_2969584165, 1));
                    idx_2969584165 = -1;
                    }
                    else {
                      var oHEX60gensym5_2969584170 = next_3087007986(n_2969584164);
                      if (!isSome_3087008068(oHEX60gensym5_2969584170)) Temporary9 = false; else {                        var ne_2969584171 = get_3087008088(oHEX60gensym5_2969584170);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2969584164 == null));                      }                    if (Temporary8) {
                    n_2969584164 = ne_2969584171;
                    idx_2969584165 = -1;
                    }
                    else {
                    if (((!((n_2969584164.parent == null)) && !((n_2969584164 == null))) && !((n_2969584164.parent == null)))) {
                    idx_2969584165 = index_3087007914(n_2969584164);
                    n_2969584164 = n_2969584164.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2969584166 = addInt(i_2969584166, 1);
                    }
                  }
              };
            };
            i_2969584173 = addInt(i_2969584173, 1);
            if (!(((self_2969583861.lastLayouts).length == L_2969584174))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2969583925(nodes_2969583868, HEX3Aanonymous_2969583893, 1);
    if ((0 < (nodes_2969583868).length)) {
    var firstY_2969584039 = nodes_2969583868[chckIndx(0, 0, (nodes_2969583868).length - 1)].Field0;
    var lastY_2969584043 = nodes_2969583868[chckIndx((nodes_2969583868).length - 1, 0, (nodes_2969583868).length - 1)].Field0;
    var middleY_2969584044 = ((firstY_2969584039 + lastY_2969584043) * 0.5);
    Label10: {
      var i_2969584077 = 0;
      var y_2969584078 = 0.0;
      var node_2969584079 = null;
      var i_2969584178 = 0;
      var L_2969584179 = (nodes_2969583868).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584178 < L_2969584179)) break Label12;
            i_2969584077 = i_2969584178;
            y_2969584078 = nodes_2969583868[chckIndx(i_2969584178, 0, (nodes_2969583868).length - 1)]["Field0"];
            node_2969584079 = nodes_2969583868[chckIndx(i_2969584178, 0, (nodes_2969583868).length - 1)]["Field1"];
            if (((i_2969584077 == (nodes_2969583868).length - 1) || (middleY_2969584044 < nodes_2969583868[chckIndx(addInt(i_2969584077, 1), 0, (nodes_2969583868).length - 1)].Field0))) {
            nodeHEX3D_2969570829(self_2969583861, node_2969584079.node);
            break Label10;
            }
            
            i_2969584178 = addInt(i_2969584178, 1);
            if (!(((nodes_2969583868).length == L_2969584179))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2969583856(self_2969584146) {
    selectCenterNode_2969583860(self_2969584146);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2969583856(this));};

function scroll_2969584196(self_2969584197, amount_2969584198) {
    HEX2BHEX3D_855640304(self_2969584197, "scrollOffset", amount_2969584198);
    markDirty_2415919143(self_2969584197);

  
}

function scrollJsWrapper_2969584192(self_2969584231, amount_2969584232) {
    scroll_2969584196(self_2969584231, amount_2969584232);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2969584192(this, amount_));};

function scrollOutput_2969584258(self_2969584259, arg_2969584260) {
    switch (toJSStr(arg_2969584260)) {
    case "home":
      executionOutput_2969567288[0].scroll = (executionOutput_2969567288[0].lines).length;
      break;
    case "end":
      executionOutput_2969567288[0].scroll = 0;
      break;
    default: 
      executionOutput_2969567288[0].scroll = clamp_1660945119(addInt(executionOutput_2969567288[0].scroll, nsuParseInt(arg_2969584260)), 0, (executionOutput_2969567288[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2969584254(self_2969584300, arg_2969584301) {
    scrollOutput_2969584258(self_2969584300, arg_2969584301);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2969584254(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function pairs_3019905231(t_3019905234) {
  var result_3019905235 = [];

    for (var [k, v] in t_3019905234.entries()) {result_3019905235.push({Field0: k, Field1: v});}

  return result_3019905235;

}

function pairs_3019905260(t_3019905263) {
  var result_3019905264 = [];

    for (var [k, v] in t_3019905263.entries()) {result_3019905264.push({Field0: k, Field1: v});}

  return result_3019905264;

}

function pairs_3019905289(t_3019905292) {
  var result_3019905293 = [];

    for (var [k, v] in t_3019905292.entries()) {result_3019905293.push({Field0: k, Field1: v});}

  return result_3019905293;

}

function pairs_3019905318(t_3019905321) {
  var result_3019905322 = [];

    for (var [k, v] in t_3019905321.entries()) {result_3019905322.push({Field0: k, Field1: v});}

  return result_3019905322;

}

function pairs_3019905347(t_3019905350) {
  var result_3019905351 = [];

    for (var [k, v] in t_3019905350.entries()) {result_3019905351.push({Field0: k, Field1: v});}

  return result_3019905351;

}

function pairs_3019905376(t_3019905379) {
  var result_3019905380 = [];

    for (var [k, v] in t_3019905379.entries()) {result_3019905380.push({Field0: k, Field1: v});}

  return result_3019905380;

}

function pairs_3019905405(t_3019905408) {
  var result_3019905409 = [];

    for (var [k, v] in t_3019905408.entries()) {result_3019905409.push({Field0: k, Field1: v});}

  return result_3019905409;

}

function pairs_3019905512(t_3019905515) {
  var result_3019905516 = [];

    for (var [k, v] in t_3019905515.entries()) {result_3019905516.push({Field0: k, Field1: v});}

  return result_3019905516;

}

function pairs_3019905701(t_3019905704) {
  var result_3019905705 = [];

    for (var [k, v] in t_3019905704.entries()) {result_3019905705.push({Field0: k, Field1: v});}

  return result_3019905705;

}

function pairs_3019905730(t_3019905733) {
  var result_3019905734 = [];

    for (var [k, v] in t_3019905733.entries()) {result_3019905734.push({Field0: k, Field1: v});}

  return result_3019905734;

}

function pairs_3019905759(t_3019905762) {
  var result_3019905763 = [];

    for (var [k, v] in t_3019905762.entries()) {result_3019905763.push({Field0: k, Field1: v});}

  return result_3019905763;

}

function pairs_3019905788(t_3019905791) {
  var result_3019905792 = [];

    for (var [k, v] in t_3019905791.entries()) {result_3019905792.push({Field0: k, Field1: v});}

  return result_3019905792;

}

function pairs_3019905817(t_3019905820) {
  var result_3019905821 = [];

    for (var [k, v] in t_3019905820.entries()) {result_3019905821.push({Field0: k, Field1: v});}

  return result_3019905821;

}

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2969584454 = 0;
      var last_2969584455 = 0;
      var eolpos_2969584456 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969584455 < (s_855639240).length) && !((ConstSet235[s_855639240[chckIndx(last_2969584455, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2969584455 = addInt(last_2969584455, 1);
                }
            };
            eolpos_2969584456 = last_2969584455;
            if ((last_2969584455 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2969584455, 0, (s_855639240).length - 1)] == 10)) {
            last_2969584455 = addInt(last_2969584455, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2969584455, 0, (s_855639240).length - 1)] == 13)) {
            last_2969584455 = addInt(last_2969584455, 1);
            if (((last_2969584455 < (s_855639240).length) && (s_855639240[chckIndx(last_2969584455, 0, (s_855639240).length - 1)] == 10))) {
            last_2969584455 = addInt(last_2969584455, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2969584455, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969584456, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2969584454, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2969584451 = 0;
              colontmp__2969584451 = count_855639241;
              var res_2969584452 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2969584452 <= colontmp__2969584451)) break Label9;
                    j_855639250 = res_2969584452;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2969584452 = addInt(res_2969584452, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2969584456 == last_2969584455)) {
            break Label2;
            }
            
            first_2969584454 = last_2969584455;
          }
      };
    };

  return result_855639243;

}

function HEX24_3036679526(graph_3036679527) {
  var result_3036679528 = [];

    result_3036679528 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3036679528.push.apply(result_3036679528, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3036679527.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3036679528;

}

function toString_3019905229(HEX3Atmp_3019899097) {
  var result_3019905230 = [];

  BeforeRet: {
    var HEX3Atmp_3019899098 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym53_3019905258 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3019905259 = null;
      var colontmp__2969584372 = [];
      colontmp__2969584372 = pairs_3019905231(HEX3Atmp_3019899097.itemsAstNode);
      var i_2969584374 = 0;
      var L_2969584375 = (colontmp__2969584372).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584374 < L_2969584375)) break Label3;
            keyHEX60gensym53_3019905258 = colontmp__2969584372[chckIndx(i_2969584374, 0, (colontmp__2969584372).length - 1)]["Field0"];
            valueHEX60gensym53_3019905259 = colontmp__2969584372[chckIndx(i_2969584374, 0, (colontmp__2969584372).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym53_3019905258) || [],[32,45,62,32] || [],HEX24_3003123671(valueHEX60gensym53_3019905259) || [],[10] || []));;
            i_2969584374 = addInt(i_2969584374, 1);
            if (!(((colontmp__2969584372).length == L_2969584375))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label4: {
      var keyHEX60gensym54_3019905287 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym54_3019905288 = null;
      var colontmp__2969584378 = [];
      colontmp__2969584378 = pairs_3019905260(HEX3Atmp_3019899097.itemsNodeLayoutInput);
      var i_2969584380 = 0;
      var L_2969584381 = (colontmp__2969584378).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969584380 < L_2969584381)) break Label6;
            keyHEX60gensym54_3019905287 = colontmp__2969584378[chckIndx(i_2969584380, 0, (colontmp__2969584378).length - 1)]["Field0"];
            valueHEX60gensym54_3019905288 = colontmp__2969584378[chckIndx(i_2969584380, 0, (colontmp__2969584378).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym54_3019905287) || [],[32,45,62,32] || [],HEX24_3087009982(valueHEX60gensym54_3019905288) || [],[10] || []));;
            i_2969584380 = addInt(i_2969584380, 1);
            if (!(((colontmp__2969584378).length == L_2969584381))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label7: {
      var keyHEX60gensym55_3019905316 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym55_3019905317 = null;
      var colontmp__2969584384 = [];
      colontmp__2969584384 = pairs_3019905289(HEX3Atmp_3019899097.itemsSymbol);
      var i_2969584386 = 0;
      var L_2969584387 = (colontmp__2969584384).length;
      Label8: {
          Label9: while (true) {
          if (!(i_2969584386 < L_2969584387)) break Label9;
            keyHEX60gensym55_3019905316 = colontmp__2969584384[chckIndx(i_2969584386, 0, (colontmp__2969584384).length - 1)]["Field0"];
            valueHEX60gensym55_3019905317 = colontmp__2969584384[chckIndx(i_2969584386, 0, (colontmp__2969584384).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym55_3019905316) || [],[32,45,62,32] || [],HEX24_3087008915(valueHEX60gensym55_3019905317) || [],[10] || []));;
            i_2969584386 = addInt(i_2969584386, 1);
            if (!(((colontmp__2969584384).length == L_2969584387))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label10: {
      var keyHEX60gensym56_3019905345 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym56_3019905346 = null;
      var colontmp__2969584390 = [];
      colontmp__2969584390 = pairs_3019905318(HEX3Atmp_3019899097.itemsFunctionExecutionContext);
      var i_2969584392 = 0;
      var L_2969584393 = (colontmp__2969584390).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584392 < L_2969584393)) break Label12;
            keyHEX60gensym56_3019905345 = colontmp__2969584390[chckIndx(i_2969584392, 0, (colontmp__2969584390).length - 1)]["Field0"];
            valueHEX60gensym56_3019905346 = colontmp__2969584390[chckIndx(i_2969584392, 0, (colontmp__2969584390).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym56_3019905345) || [],[32,45,62,32] || [],HEX24_3087008582(valueHEX60gensym56_3019905346) || [],[10] || []));;
            i_2969584392 = addInt(i_2969584392, 1);
            if (!(((colontmp__2969584390).length == L_2969584393))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label13: {
      var keyHEX60gensym57_3019905374 = null;
      var valueHEX60gensym57_3019905375 = null;
      var colontmp__2969584396 = [];
      colontmp__2969584396 = pairs_3019905347(HEX3Atmp_3019899097.queryCacheType);
      var i_2969584398 = 0;
      var L_2969584399 = (colontmp__2969584396).length;
      Label14: {
          Label15: while (true) {
          if (!(i_2969584398 < L_2969584399)) break Label15;
            keyHEX60gensym57_3019905374 = colontmp__2969584396[chckIndx(i_2969584398, 0, (colontmp__2969584396).length - 1)]["Field0"];
            valueHEX60gensym57_3019905375 = colontmp__2969584396[chckIndx(i_2969584398, 0, (colontmp__2969584396).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym57_3019905374) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym57_3019905375) || [],[10] || []));;
            i_2969584398 = addInt(i_2969584398, 1);
            if (!(((colontmp__2969584396).length == L_2969584399))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label16: {
      var keyHEX60gensym58_3019905403 = null;
      var valueHEX60gensym58_3019905404 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584402 = [];
      colontmp__2969584402 = pairs_3019905376(HEX3Atmp_3019899097.queryCacheValue);
      var i_2969584404 = 0;
      var L_2969584405 = (colontmp__2969584402).length;
      Label17: {
          Label18: while (true) {
          if (!(i_2969584404 < L_2969584405)) break Label18;
            keyHEX60gensym58_3019905403 = colontmp__2969584402[chckIndx(i_2969584404, 0, (colontmp__2969584402).length - 1)]["Field0"];
            valueHEX60gensym58_3019905404 = colontmp__2969584402[chckIndx(i_2969584404, 0, (colontmp__2969584402).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym58_3019905403) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym58_3019905404) || [],[10] || []));;
            i_2969584404 = addInt(i_2969584404, 1);
            if (!(((colontmp__2969584402).length == L_2969584405))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label19: {
      var keyHEX60gensym59_3019905432 = null;
      var valueHEX60gensym59_3019905433 = ({val: null});
      var colontmp__2969584408 = [];
      colontmp__2969584408 = pairs_3019905405(HEX3Atmp_3019899097.queryCacheSymbol);
      var i_2969584410 = 0;
      var L_2969584411 = (colontmp__2969584408).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969584410 < L_2969584411)) break Label21;
            keyHEX60gensym59_3019905432 = colontmp__2969584408[chckIndx(i_2969584410, 0, (colontmp__2969584408).length - 1)]["Field0"];
            valueHEX60gensym59_3019905433 = colontmp__2969584408[chckIndx(i_2969584410, 0, (colontmp__2969584408).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym59_3019905432) || [],[32,45,62,32] || [],HEX24_3019905491(valueHEX60gensym59_3019905433) || [],[10] || []));;
            i_2969584410 = addInt(i_2969584410, 1);
            if (!(((colontmp__2969584408).length == L_2969584411))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label22: {
      var keyHEX60gensym60_3019905539 = null;
      var valueHEX60gensym60_3019905540 = null;
      var colontmp__2969584414 = [];
      colontmp__2969584414 = pairs_3019905512(HEX3Atmp_3019899097.queryCacheSymbols);
      var i_2969584416 = 0;
      var L_2969584417 = (colontmp__2969584414).length;
      Label23: {
          Label24: while (true) {
          if (!(i_2969584416 < L_2969584417)) break Label24;
            keyHEX60gensym60_3019905539 = colontmp__2969584414[chckIndx(i_2969584416, 0, (colontmp__2969584414).length - 1)]["Field0"];
            valueHEX60gensym60_3019905540 = colontmp__2969584414[chckIndx(i_2969584416, 0, (colontmp__2969584414).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym60_3019905539) || [],[32,45,62,32] || [],HEX24_3019905598(valueHEX60gensym60_3019905540) || [],[10] || []));;
            i_2969584416 = addInt(i_2969584416, 1);
            if (!(((colontmp__2969584414).length == L_2969584417))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,105,100,97,116,105,111,110,10] || []));;
    Label25: {
      var keyHEX60gensym61_3019905728 = null;
      var valueHEX60gensym61_3019905729 = false;
      var colontmp__2969584420 = [];
      colontmp__2969584420 = pairs_3019905701(HEX3Atmp_3019899097.queryCacheValidation);
      var i_2969584422 = 0;
      var L_2969584423 = (colontmp__2969584420).length;
      Label26: {
          Label27: while (true) {
          if (!(i_2969584422 < L_2969584423)) break Label27;
            keyHEX60gensym61_3019905728 = colontmp__2969584420[chckIndx(i_2969584422, 0, (colontmp__2969584420).length - 1)]["Field0"];
            valueHEX60gensym61_3019905729 = colontmp__2969584420[chckIndx(i_2969584422, 0, (colontmp__2969584420).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym61_3019905728) || [],[32,45,62,32] || [],nimBoolToStr(valueHEX60gensym61_3019905729) || [],[10] || []));;
            i_2969584422 = addInt(i_2969584422, 1);
            if (!(((colontmp__2969584420).length == L_2969584423))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label28: {
      var keyHEX60gensym62_3019905757 = null;
      var valueHEX60gensym62_3019905758 = null;
      var colontmp__2969584426 = [];
      colontmp__2969584426 = pairs_3019905730(HEX3Atmp_3019899097.queryCacheSymbolType);
      var i_2969584428 = 0;
      var L_2969584429 = (colontmp__2969584426).length;
      Label29: {
          Label30: while (true) {
          if (!(i_2969584428 < L_2969584429)) break Label30;
            keyHEX60gensym62_3019905757 = colontmp__2969584426[chckIndx(i_2969584428, 0, (colontmp__2969584426).length - 1)]["Field0"];
            valueHEX60gensym62_3019905758 = colontmp__2969584426[chckIndx(i_2969584428, 0, (colontmp__2969584426).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym62_3019905757) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym62_3019905758) || [],[10] || []));;
            i_2969584428 = addInt(i_2969584428, 1);
            if (!(((colontmp__2969584426).length == L_2969584429))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label31: {
      var keyHEX60gensym63_3019905786 = null;
      var valueHEX60gensym63_3019905787 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584432 = [];
      colontmp__2969584432 = pairs_3019905759(HEX3Atmp_3019899097.queryCacheSymbolValue);
      var i_2969584434 = 0;
      var L_2969584435 = (colontmp__2969584432).length;
      Label32: {
          Label33: while (true) {
          if (!(i_2969584434 < L_2969584435)) break Label33;
            keyHEX60gensym63_3019905786 = colontmp__2969584432[chckIndx(i_2969584434, 0, (colontmp__2969584432).length - 1)]["Field0"];
            valueHEX60gensym63_3019905787 = colontmp__2969584432[chckIndx(i_2969584434, 0, (colontmp__2969584432).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym63_3019905786) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym63_3019905787) || [],[10] || []));;
            i_2969584434 = addInt(i_2969584434, 1);
            if (!(((colontmp__2969584432).length == L_2969584435))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label34: {
      var keyHEX60gensym64_3019905815 = null;
      var valueHEX60gensym64_3019905816 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584438 = [];
      colontmp__2969584438 = pairs_3019905788(HEX3Atmp_3019899097.queryCacheFunctionExecution);
      var i_2969584440 = 0;
      var L_2969584441 = (colontmp__2969584438).length;
      Label35: {
          Label36: while (true) {
          if (!(i_2969584440 < L_2969584441)) break Label36;
            keyHEX60gensym64_3019905815 = colontmp__2969584438[chckIndx(i_2969584440, 0, (colontmp__2969584438).length - 1)]["Field0"];
            valueHEX60gensym64_3019905816 = colontmp__2969584438[chckIndx(i_2969584440, 0, (colontmp__2969584438).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008582(keyHEX60gensym64_3019905815) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym64_3019905816) || [],[10] || []));;
            i_2969584440 = addInt(i_2969584440, 1);
            if (!(((colontmp__2969584438).length == L_2969584441))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label37: {
      var keyHEX60gensym65_3019905844 = null;
      var valueHEX60gensym65_3019905845 = null;
      var colontmp__2969584444 = [];
      colontmp__2969584444 = pairs_3019905817(HEX3Atmp_3019899097.queryCacheNodeLayout);
      var i_2969584446 = 0;
      var L_2969584447 = (colontmp__2969584444).length;
      Label38: {
          Label39: while (true) {
          if (!(i_2969584446 < L_2969584447)) break Label39;
            keyHEX60gensym65_3019905844 = colontmp__2969584444[chckIndx(i_2969584446, 0, (colontmp__2969584444).length - 1)]["Field0"];
            valueHEX60gensym65_3019905845 = colontmp__2969584444[chckIndx(i_2969584446, 0, (colontmp__2969584444).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087009982(keyHEX60gensym65_3019905844) || [],[32,45,62,32] || [],HEX24_3087009945(valueHEX60gensym65_3019905845) || [],[10] || []));;
            i_2969584446 = addInt(i_2969584446, 1);
            if (!(((colontmp__2969584444).length == L_2969584447))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, nsuIndent(HEX24_3036679526(HEX3Atmp_3019899097.depGraph), 1, [124,32]));;
    result_3019905230 = nimCopy(null, HEX3Atmp_3019899098, NTI33554449);
    break BeforeRet;
  };

  return result_3019905230;

}

function dumpContext_2969584327(self_2969584328) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3019905229(ctx_2969567289)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2969584323(self_2969584356) {
    dumpContext_2969584327(self_2969584356);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2969584323(this));};

function getModeConfig_2969584459(self_2969584460, mode_2969584461) {
  var result_2969584462 = null;

  BeforeRet: {
    result_2969584462 = getEventHandlerConfig_1291849162(self_2969584460.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2969584461 || []));
    break BeforeRet;
  };

  return result_2969584462;

}

function setMode_2969584469(self_2969584470, mode_2969584471) {
        
function HEX3Aanonymous_2969584492(actionHEX60gensym1002HEX60gensym1003_2969584493, argHEX60gensym1002HEX60gensym1003_2969584494) {
          var result_2969584495 = 0;

          BeforeRet: {
            if (handlerHEX60gensym1002_2969584480.config.handleActions) {
            var action_2969584496 = nimCopy(null, actionHEX60gensym1002HEX60gensym1003_2969584493, NTI33554449);
            var arg_2969584497 = nimCopy(null, argHEX60gensym1002HEX60gensym1003_2969584494, NTI33554449);
            var responseHEX60gensym1002HEX60gensym1003_2969584498 = handleAction_2969583792(self_2969584470, action_2969584496, arg_2969584497);
            if (handlerHEX60gensym1002_2969584480.config.consumeAllActions) {
            result_2969584495 = 3;
            break BeforeRet;
            }
            
            result_2969584495 = responseHEX60gensym1002HEX60gensym1003_2969584498;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym1002_2969584480.config.consumeAllActions) {
            result_2969584495 = 3;
            break BeforeRet;
            }
            else {
              result_2969584495 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2969584495;

        }
        
function HEX3Aanonymous_2969584500(inputHEX60gensym1002HEX60gensym1004_2969584501) {
          var result_2969584502 = 0;

          BeforeRet: {
            if (handlerHEX60gensym1002_2969584480.config.handleInputs) {
            var input_2969584503 = nimCopy(null, inputHEX60gensym1002HEX60gensym1004_2969584501, NTI33554449);
            result_2969584502 = 1;
            break BeforeRet;
            }
            else {
              result_2969584502 = 1;
              break BeforeRet;
            }
            
          };

          return result_2969584502;

        }

    if (((mode_2969584471).length == 0)) {
    self_2969584470.modeEventHandler = null;
    }
    else {
      var config_2969584472 = getModeConfig_2969584459(self_2969584470, mode_2969584471);
      Label1: {
        var handlerHEX60gensym1002_2969584480 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym1002_2969584480.config = config_2969584472;
        handlerHEX60gensym1002_2969584480.dfaInternal = buildDFA_2113929279(config_2969584472);
        handlerHEX60gensym1002_2969584480.handleAction = HEX3Aanonymous_2969584492;
        handlerHEX60gensym1002_2969584480.handleInput = HEX3Aanonymous_2969584500;
      };
      self_2969584470.modeEventHandler = handlerHEX60gensym1002_2969584480;
    }
    
    self_2969584470.currentMode = nimCopy(null, mode_2969584471, NTI33554449);

  
}

function setModeJsWrapper2_2969584465(self_2969584532, mode_2969584533) {
    setMode_2969584469(self_2969584532, mode_2969584533);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2969584465(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2969584560(self_2969584561) {
  var result_2969584562 = [];

  BeforeRet: {
    result_2969584562 = nimCopy(null, self_2969584561.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2969584562;

}

function modeJsWrapper2_2969584556(self_2969584591) {
  var result_2969584592 = [];

    result_2969584592 = nimCopy(null, mode_2969584560(self_2969584591), NTI33554449);

  return result_2969584592;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2969584556(this));};

function getContextWithMode_2969584617(self_2969584618, context_2969584619) {
  var result_2969584620 = [];

  BeforeRet: {
    result_2969584620 = nimCopy(null, (context_2969584619 || []).concat([46] || [],self_2969584618.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2969584620;

}

function getContextWithModeJsWrapper2_2969584613(self_2969584650, context_2969584651) {
  var result_2969584652 = [];

    result_2969584652 = nimCopy(null, getContextWithMode_2969584617(self_2969584650, context_2969584651), NTI33554449);

  return result_2969584652;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2969584613(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};
var printWidth_3305111561 = [120];
var printColors_3305111562 = [false];
var haveSeen_3305111568 = [({data: [], counter: 0})];
var line_3305111569 = [[]];

function HEX40_3271563399(a_3271563401) {
  var result_3271563402 = [];

    result_3271563402 = new Array(chckRange((a_3271563401).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271563401).length, 0, 2147483647) ; ++i) { result_3271563402[i] = null; }    Label1: {
      var i_3271563418 = 0;
      var colontmp__3321890115 = 0;
      colontmp__3321890115 = subInt((a_3271563401).length, 1);
      var res_3321890116 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890116 <= colontmp__3321890115)) break Label3;
            i_3271563418 = res_3321890116;
            result_3271563402[chckIndx(i_3271563418, 0, (result_3271563402).length - 1)] = a_3271563401[chckIndx(i_3271563418, 0, (a_3271563401).length - 1)];
            res_3321890116 = addInt(res_3321890116, 1);
          }
      };
    };

  return result_3271563402;

}

function HEX40_3271563419(a_3271563421) {
  var result_3271563422 = [];

    result_3271563422 = new Array(chckRange((a_3271563421).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271563421).length, 0, 2147483647) ; ++i) { result_3271563422[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}); }    Label1: {
      var i_3271563438 = 0;
      var colontmp__3321890119 = 0;
      colontmp__3321890119 = subInt((a_3271563421).length, 1);
      var res_3321890120 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890120 <= colontmp__3321890119)) break Label3;
            i_3271563438 = res_3321890120;
            result_3271563422[chckIndx(i_3271563438, 0, (result_3271563422).length - 1)] = nimCopy(result_3271563422[chckIndx(i_3271563438, 0, (result_3271563422).length - 1)], a_3271563421[chckIndx(i_3271563438, 0, (a_3271563421).length - 1)], NTI3271557125);
            res_3321890120 = addInt(res_3321890120, 1);
          }
      };
    };

  return result_3271563422;

}

function HEX40_3271563448(a_3271563450) {
  var result_3271563451 = [];

    result_3271563451 = new Array(chckRange((a_3271563450).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271563450).length, 0, 2147483647) ; ++i) { result_3271563451[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}); }    Label1: {
      var i_3271563467 = 0;
      var colontmp__3321890123 = 0;
      colontmp__3321890123 = subInt((a_3271563450).length, 1);
      var res_3321890124 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890124 <= colontmp__3321890123)) break Label3;
            i_3271563467 = res_3321890124;
            result_3271563451[chckIndx(i_3271563467, 0, (result_3271563451).length - 1)] = nimCopy(result_3271563451[chckIndx(i_3271563467, 0, (result_3271563451).length - 1)], a_3271563450[chckIndx(i_3271563467, 0, (a_3271563450).length - 1)], NTI3271557127);
            res_3321890124 = addInt(res_3321890124, 1);
          }
      };
    };

  return result_3271563451;

}

function HEX40_3271563477(a_3271563479) {
  var result_3271563480 = [];

    result_3271563480 = new Array(chckRange((a_3271563479).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_3271563479).length, 0, 2147483647) ; ++i) { result_3271563480[i] = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}); }    Label1: {
      var i_3271563496 = 0;
      var colontmp__3321890127 = 0;
      colontmp__3321890127 = subInt((a_3271563479).length, 1);
      var res_3321890128 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890128 <= colontmp__3321890127)) break Label3;
            i_3271563496 = res_3321890128;
            result_3271563480[chckIndx(i_3271563496, 0, (result_3271563480).length - 1)] = nimCopy(result_3271563480[chckIndx(i_3271563496, 0, (result_3271563480).length - 1)], a_3271563479[chckIndx(i_3271563496, 0, (a_3271563479).length - 1)], NTI3271557128);
            res_3321890128 = addInt(res_3321890128, 1);
          }
      };
    };

  return result_3271563480;

}

function newNodeClass_3271563384(id_3271563385, name_3271563386, alias_3271563387, base_3271563388, interfaces_3271563389, isAbstract_3271563390, isInterface_3271563391, properties_3271563392, children_3271563393, references_3271563394) {
  var result_3271563395 = null;

    result_3271563395 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), name: [], alias: [], base: null, interfaces: [], isAbstract: false, isInterface: false, properties: [], children: [], references: []});
    result_3271563395.id = nimCopy(result_3271563395.id, id_3271563385, NTI2046820355);
    result_3271563395.name = nimCopy(null, name_3271563386, NTI33554449);
    result_3271563395.alias = nimCopy(null, alias_3271563387, NTI33554449);
    result_3271563395.base = base_3271563388;
    result_3271563395.interfaces = nimCopy(null, HEX40_3271563399(interfaces_3271563389), NTI3271560326);
    result_3271563395.isAbstract = isAbstract_3271563390;
    result_3271563395.isInterface = isInterface_3271563391;
    result_3271563395.properties = nimCopy(null, HEX40_3271563419(properties_3271563392), NTI3271560340);
    result_3271563395.children = nimCopy(null, HEX40_3271563448(children_3271563393), NTI3271560359);
    result_3271563395.references = nimCopy(null, HEX40_3271563477(references_3271563394), NTI3271560378);

  return result_3271563395;

}

function id_3271557318(selfHEX60gensym0_3271557319) {
  var result_3271557320 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_3271557320 = nimCopy(result_3271557320, selfHEX60gensym0_3271557319.id, NTI2046820355);
    break BeforeRet;
  };

  return result_3271557320;

}

function newCellBuilder_3271564852() {
  var result_3271564853 = null;

    result_3271564853 = ({builders: ({data: [], counter: 0}), preferredBuilders: ({data: [], counter: 0})});

  return result_3271564853;

}

function rawGet_3271564926(t_3271564929, key_3271564930, hc_3271564931, hc_3271564931_Idx) {
  var result_3271564932 = 0;

  BeforeRet: {
    hc_3271564931[hc_3271564931_Idx] = hash_2046820630(key_3271564930);
    if ((hc_3271564931[hc_3271564931_Idx] == 0)) {
    hc_3271564931[hc_3271564931_Idx] = 314159265;
    }
    
    if (((t_3271564929.data).length == 0)) {
    result_3271564932 = -1;
    break BeforeRet;
    }
    
    var h_3271564984 = (hc_3271564931[hc_3271564931_Idx] & (t_3271564929.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271564929.data[chckIndx(h_3271564984, 0, (t_3271564929.data).length - 1)].Field0)) break Label2;
          if (((t_3271564929.data[chckIndx(h_3271564984, 0, (t_3271564929.data).length - 1)].Field0 == hc_3271564931[hc_3271564931_Idx]) && HEX3DHEX3D_2046820626(t_3271564929.data[chckIndx(h_3271564984, 0, (t_3271564929.data).length - 1)].Field1, key_3271564930))) {
          result_3271564932 = h_3271564984;
          break BeforeRet;
          }
          
          h_3271564984 = nextTry_1308622883(h_3271564984, (t_3271564929.data).length - 1);
        }
    };
    result_3271564932 = subInt(-1, h_3271564984);
  };

  return result_3271564932;

}

function hasKey_3271564919(t_3271564922, key_3271564923) {
  var result_3271564924 = false;

    var hc_3271564925 = [0];
    result_3271564924 = (0 <= rawGet_3271564926(t_3271564922, key_3271564923, hc_3271564925, 0));

  return result_3271564924;

}

function contains_3271564913(t_3271564916, key_3271564917) {
  var result_3271564918 = false;

  BeforeRet: {
    result_3271564918 = hasKey_3271564919(t_3271564916, key_3271564917);
    break BeforeRet;
  };

  return result_3271564918;

}

function HEX5BHEX5D_3271565218(t_3271565221, key_3271565222) {
  var result_3271565223 = null;
  var result_3271565223_Idx = 0;

    var hcHEX60gensym22_3271565224 = [0];
    var indexHEX60gensym22_3271565231 = rawGet_3271564926(t_3271565221, key_3271565222, hcHEX60gensym22_3271565224, 0);
    if ((0 <= indexHEX60gensym22_3271565231)) {
    result_3271565223 = t_3271565221.data[chckIndx(indexHEX60gensym22_3271565231, 0, (t_3271565221.data).length - 1)]; result_3271565223_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3271565222);
    }
    

  return [result_3271565223, result_3271565223_Idx];

}

function mustRehash_3271565518(t_3271565520) {
  var result_3271565521 = false;

    if (!((t_3271565520.counter < (t_3271565520.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271565521 = ((mulInt((t_3271565520.data).length, 2) < mulInt(t_3271565520.counter, 3)) || (subInt((t_3271565520.data).length, t_3271565520.counter) < 4));

  return result_3271565521;

}

function rawInsert_3271565967(t_3271565971, data_3271565972, data_3271565972_Idx, key_3271565973, val_3271565974, hc_3271565975, h_3271565976) {
    data_3271565972[data_3271565972_Idx][chckIndx(h_3271565976, 0, (data_3271565972[data_3271565972_Idx]).length - 1)].Field1 = nimCopy(data_3271565972[data_3271565972_Idx][chckIndx(h_3271565976, 0, (data_3271565972[data_3271565972_Idx]).length - 1)].Field1, key_3271565973, NTI2046820355);
    data_3271565972[data_3271565972_Idx][chckIndx(h_3271565976, 0, (data_3271565972[data_3271565972_Idx]).length - 1)].Field2 = nimCopy(null, val_3271565974, NTI3271557163);
    data_3271565972[data_3271565972_Idx][chckIndx(h_3271565976, 0, (data_3271565972[data_3271565972_Idx]).length - 1)].Field0 = hc_3271565975;

  
}

function enlarge_3271565673(t_3271565676) {
    var n_3271565679 = [];
    n_3271565679 = new Array(chckRange(mulInt((t_3271565676.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271565676.data).length, 2), 0, 2147483647) ; ++i) { n_3271565679[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    var Temporary1 = t_3271565676.data; t_3271565676.data = n_3271565679; n_3271565679 = Temporary1;    Label2: {
      var i_3271565743 = 0;
      var colontmp__3321890133 = 0;
      colontmp__3321890133 = (n_3271565679).length - 1;
      var res_3321890134 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3321890134 <= colontmp__3321890133)) break Label4;
            i_3271565743 = res_3321890134;
            var eh_3271565797 = n_3271565679[chckIndx(i_3271565743, 0, (n_3271565679).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271565797)) {
            var j_3271565801 = (eh_3271565797 & (t_3271565676.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271565676.data[chckIndx(j_3271565801, 0, (t_3271565676.data).length - 1)].Field0)) break Label6;
                  j_3271565801 = nextTry_1308622883(j_3271565801, (t_3271565676.data).length - 1);
                }
            };
            rawInsert_3271565967(t_3271565676, t_3271565676, "data", n_3271565679[chckIndx(i_3271565743, 0, (n_3271565679).length - 1)].Field1, n_3271565679[chckIndx(i_3271565743, 0, (n_3271565679).length - 1)].Field2, eh_3271565797, j_3271565801);
            }
            
            res_3321890134 = addInt(res_3321890134, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271566145(t_3271566148, key_3271566149, hc_3271566150) {
  var result_3271566151 = 0;

  BeforeRet: {
    if (((t_3271566148.data).length == 0)) {
    result_3271566151 = -1;
    break BeforeRet;
    }
    
    var h_3271566202 = (hc_3271566150 & (t_3271566148.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271566148.data[chckIndx(h_3271566202, 0, (t_3271566148.data).length - 1)].Field0)) break Label2;
          if (((t_3271566148.data[chckIndx(h_3271566202, 0, (t_3271566148.data).length - 1)].Field0 == hc_3271566150) && HEX3DHEX3D_2046820626(t_3271566148.data[chckIndx(h_3271566202, 0, (t_3271566148.data).length - 1)].Field1, key_3271566149))) {
          result_3271566151 = h_3271566202;
          break BeforeRet;
          }
          
          h_3271566202 = nextTry_1308622883(h_3271566202, (t_3271566148.data).length - 1);
        }
    };
    result_3271566151 = subInt(-1, h_3271566202);
  };

  return result_3271566151;

}

function HEX5BHEX5DHEX3D_3271565345(t_3271565348, key_3271565349, val_3271565350) {
    if (((t_3271565348.data).length == 0)) {
    var correctSizeHEX60gensym134_3271565399 = slotsNeeded_1308622891(32);
    t_3271565348.counter = 0;
    t_3271565348.data = new Array(chckRange(correctSizeHEX60gensym134_3271565399, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym134_3271565399, 0, 2147483647) ; ++i) { t_3271565348.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }    }
    
    var hc_3271565404 = [0];
    var index_3271565411 = rawGet_3271564926(t_3271565348, key_3271565349, hc_3271565404, 0);
    if ((0 <= index_3271565411)) {
    t_3271565348.data[chckIndx(index_3271565411, 0, (t_3271565348.data).length - 1)].Field2 = nimCopy(null, val_3271565350, NTI3271557163);
    }
    else {
      if (((t_3271565348.data).length == 0)) {
      var correctSizeHEX60gensym137_3271565513 = slotsNeeded_1308622891(32);
      t_3271565348.counter = 0;
      t_3271565348.data = new Array(chckRange(correctSizeHEX60gensym137_3271565513, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym137_3271565513, 0, 2147483647) ; ++i) { t_3271565348.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: []}; }      }
      
      if (mustRehash_3271565518(t_3271565348)) {
      enlarge_3271565673(t_3271565348);
      index_3271565411 = rawGetKnownHC_3271566145(t_3271565348, key_3271565349, hc_3271565404[0]);
      }
      
      index_3271565411 = subInt(-1, index_3271565411);
      rawInsert_3271565967(t_3271565348, t_3271565348, "data", key_3271565349, val_3271565350, hc_3271565404[0], index_3271565411);
      t_3271565348.counter = addInt(t_3271565348.counter, 1);
    }
    

  
}

function addBuilderFor_3271564866(self_3271564867, classId_3271564868, builderId_3271564869, builder_3271564870) {
    var Temporary1;

    if (contains_3271564913(self_3271564867.builders, classId_3271564868)) {
    (Temporary1 = HEX5BHEX5D_3271565218(self_3271564867.builders, classId_3271564868), Temporary1)[0][Temporary1[1]].push({Field0: nimCopy(null, builderId_3271564869, NTI2046820355), Field1: builder_3271564870});;
    }
    else {
    HEX5BHEX5DHEX3D_3271565345(self_3271564867.builders, classId_3271564868, [nimCopy(null, {Field0: nimCopy(null, builderId_3271564869, NTI2046820355), Field1: builder_3271564870}, NTI3271561603)]);
    }
    

  
}

function add_3338666073(self_3338666074, cell_3338666075) {
    if (HEX3DHEX3D_2046820626(cell_3338666075.id, idNone_2046820633())) {
    cell_3338666075.id = nimCopy(cell_3338666075.id, newId_2046820597(), NTI2046820355);
    }
    
    cell_3338666075.parent = self_3338666074;
    self_3338666074.children.push(cell_3338666075);;

  
}

function children_3271564002(node_3271564003, role_3271564004) {
  var result_3271564005 = [];

    result_3271564005 = nimCopy(null, [], NTI3271560818);
    Label1: {
      var c_3271564013 = null;
      var i_3321890145 = 0;
      var L_3321890146 = (node_3271564003.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890145 < L_3321890146)) break Label3;
            c_3271564013 = node_3271564003.childLists[chckIndx(i_3321890145, 0, (node_3271564003.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564013.Field0, role_3271564004)) {
            result_3271564005 = nimCopy(null, c_3271564013.Field1, NTI3271557154);
            break Label1;
            }
            
            i_3321890145 = addInt(i_3321890145, 1);
            if (!(((node_3271564003.childLists).length == L_3321890146))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271564005;

}

function rawGet_3271560631(t_3271560634, key_3271560635, hc_3271560636, hc_3271560636_Idx) {
  var result_3271560637 = 0;

  BeforeRet: {
    hc_3271560636[hc_3271560636_Idx] = hash_2046820630(key_3271560635);
    if ((hc_3271560636[hc_3271560636_Idx] == 0)) {
    hc_3271560636[hc_3271560636_Idx] = 314159265;
    }
    
    if (((t_3271560634.data).length == 0)) {
    result_3271560637 = -1;
    break BeforeRet;
    }
    
    var h_3271560688 = (hc_3271560636[hc_3271560636_Idx] & (t_3271560634.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271560634.data[chckIndx(h_3271560688, 0, (t_3271560634.data).length - 1)].Field0)) break Label2;
          if (((t_3271560634.data[chckIndx(h_3271560688, 0, (t_3271560634.data).length - 1)].Field0 == hc_3271560636[hc_3271560636_Idx]) && HEX3DHEX3D_2046820626(t_3271560634.data[chckIndx(h_3271560688, 0, (t_3271560634.data).length - 1)].Field1, key_3271560635))) {
          result_3271560637 = h_3271560688;
          break BeforeRet;
          }
          
          h_3271560688 = nextTry_1308622883(h_3271560688, (t_3271560634.data).length - 1);
        }
    };
    result_3271560637 = subInt(-1, h_3271560688);
  };

  return result_3271560637;

}

function getOrDefault_3271564550(t_3271564553, key_3271564554, default_3271564555) {
    var Temporary1;

  var result_3271564556 = null;

    var hcHEX60gensym123_3271564559 = [0];
    var indexHEX60gensym123_3271564566 = rawGet_3271560631(t_3271564553, key_3271564554, hcHEX60gensym123_3271564559, 0);
    if ((0 <= indexHEX60gensym123_3271564566)) {
    Temporary1 = t_3271564553.data[chckIndx(indexHEX60gensym123_3271564566, 0, (t_3271564553.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271564555;
    }
    
    result_3271564556 = Temporary1;

  return result_3271564556;

}

function language_3271564478(node_3271564479) {
    var Temporary1;

  var result_3271564480 = null;

    if ((node_3271564479.model == null)) {
    Temporary1 = null;
    }
    else {
    Temporary1 = getOrDefault_3271564550(node_3271564479.model.classesToLanguages, node_3271564479.class, null);
    }
    
    result_3271564480 = Temporary1;

  return result_3271564480;

}

function rawGet_3271557744(t_3271557747, key_3271557748, hc_3271557749, hc_3271557749_Idx) {
  var result_3271557750 = 0;

  BeforeRet: {
    hc_3271557749[hc_3271557749_Idx] = hash_2046820630(key_3271557748);
    if ((hc_3271557749[hc_3271557749_Idx] == 0)) {
    hc_3271557749[hc_3271557749_Idx] = 314159265;
    }
    
    if (((t_3271557747.data).length == 0)) {
    result_3271557750 = -1;
    break BeforeRet;
    }
    
    var h_3271557801 = (hc_3271557749[hc_3271557749_Idx] & (t_3271557747.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271557747.data[chckIndx(h_3271557801, 0, (t_3271557747.data).length - 1)].Field0)) break Label2;
          if (((t_3271557747.data[chckIndx(h_3271557801, 0, (t_3271557747.data).length - 1)].Field0 == hc_3271557749[hc_3271557749_Idx]) && HEX3DHEX3D_2046820626(t_3271557747.data[chckIndx(h_3271557801, 0, (t_3271557747.data).length - 1)].Field1, key_3271557748))) {
          result_3271557750 = h_3271557801;
          break BeforeRet;
          }
          
          h_3271557801 = nextTry_1308622883(h_3271557801, (t_3271557747.data).length - 1);
        }
    };
    result_3271557750 = subInt(-1, h_3271557801);
  };

  return result_3271557750;

}

function getOrDefault_3271564693(t_3271564696, key_3271564697, default_3271564698) {
    var Temporary1;

  var result_3271564699 = null;

    var hcHEX60gensym125_3271564702 = [0];
    var indexHEX60gensym125_3271564709 = rawGet_3271557744(t_3271564696, key_3271564697, hcHEX60gensym125_3271564702, 0);
    if ((0 <= indexHEX60gensym125_3271564709)) {
    Temporary1 = t_3271564696.data[chckIndx(indexHEX60gensym125_3271564709, 0, (t_3271564696.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271564698;
    }
    
    result_3271564699 = Temporary1;

  return result_3271564699;

}

function nodeClass_3271557504(node_3271557505) {
    var Temporary1;

  var result_3271564622 = null;

    var language_3271564623 = language_3271564478(node_3271557505);
    if ((language_3271564623 == null)) {
    Temporary1 = null;
    }
    else {
    Temporary1 = getOrDefault_3271564693(language_3271564623.classes, node_3271557505.class, null);
    }
    
    result_3271564622 = Temporary1;

  return result_3271564622;

}

function base_3271557327(selfHEX60gensym3_3271557328) {
  var result_3271557329 = null;

  BeforeRet: {
    result_3271557329 = selfHEX60gensym3_3271557328.base;
    break BeforeRet;
  };

  return result_3271557329;

}

function none_3338666663() {
  var result_3338666669 = ({val: null});

  return result_3338666669;

}

function some_3338666744(val_3338666746) {
  var result_3338666747 = ({val: null});

    if (!(!((val_3338666746 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3338666747.val = val_3338666746;

  return result_3338666747;

}

function getOrDefault_3338666823(t_3338666826, key_3338666827, default_3338666828) {
    var Temporary1;

  var result_3338666829 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var hcHEX60gensym43_3338666832 = [0];
    var indexHEX60gensym43_3338666839 = rawGet_3003122071(t_3338666826, key_3338666827, hcHEX60gensym43_3338666832, 0);
    if ((0 <= indexHEX60gensym43_3338666839)) {
    Temporary1 = t_3338666826.data[chckIndx(indexHEX60gensym43_3338666839, 0, (t_3338666826.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3338666828;
    }
    
    result_3338666829 = nimCopy(result_3338666829, Temporary1, NTI2046820355);

  return result_3338666829;

}

function findBuilder_3338666604(self_3338666605, class_3338666606, preferred_3338666607) {
    var Temporary1;

  var result_3338666612 = ({val: null});

  BeforeRet: {
    if (!(contains_3271564913(self_3338666605.builders, id_3271557318(class_3338666606)))) {
    if (!((base_3271557327(class_3338666606) == null))) {
    result_3338666612 = nimCopy(result_3338666612, findBuilder_3338666604(self_3338666605, base_3271557327(class_3338666606), preferred_3338666607), NTI3338666387);
    break BeforeRet;
    }
    
    result_3338666612 = nimCopy(result_3338666612, none_3338666663(), NTI3338666387);
    break BeforeRet;
    }
    
    var builders_3338666728 = nimCopy(null, (Temporary1 = HEX5BHEX5D_3271565218(self_3338666605.builders, id_3271557318(class_3338666606)), Temporary1)[0][Temporary1[1]], NTI3271557163);
    if (((builders_3338666728).length == 0)) {
    if (!((base_3271557327(class_3338666606) == null))) {
    result_3338666612 = nimCopy(result_3338666612, findBuilder_3338666604(self_3338666605, base_3271557327(class_3338666606), preferred_3338666607), NTI3338666387);
    break BeforeRet;
    }
    
    result_3338666612 = nimCopy(result_3338666612, none_3338666663(), NTI3338666387);
    break BeforeRet;
    }
    
    if (((builders_3338666728).length == 1)) {
    result_3338666612 = nimCopy(result_3338666612, some_3338666744(builders_3338666728[chckIndx(0, 0, (builders_3338666728).length - 1)].Field1), NTI3338666387);
    break BeforeRet;
    }
    
    var preferredBuilder_3338666893 = getOrDefault_3338666823(self_3338666605.preferredBuilders, id_3271557318(class_3338666606), idNone_2046820633());
    Label2: {
      var builder_3338666897 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3321890152 = 0;
      var L_3321890153 = (builders_3338666728).length;
      Label3: {
          Label4: while (true) {
          if (!(i_3321890152 < L_3321890153)) break Label4;
            builder_3338666897 = builders_3338666728[chckIndx(i_3321890152, 0, (builders_3338666728).length - 1)];
            if (HEX3DHEX3D_2046820626(builder_3338666897.Field0, preferredBuilder_3338666893)) {
            result_3338666612 = nimCopy(result_3338666612, some_3338666744(builder_3338666897.Field1), NTI3338666387);
            break BeforeRet;
            }
            
            i_3321890152 = addInt(i_3321890152, 1);
            if (!(((builders_3338666728).length == L_3321890153))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3338666612 = nimCopy(result_3338666612, some_3338666744(builders_3338666728[chckIndx(0, 0, (builders_3338666728).length - 1)].Field1), NTI3338666387);
    break BeforeRet;
  };

  return result_3338666612;

}

function isSome_3338667311(self_3338667313) {
  var result_3338667314 = false;

    result_3338667314 = !((self_3338667313.val == null));

  return result_3338667314;

}

function isNone_3338667339(self_3338667341) {
  var result_3338667342 = false;

    result_3338667342 = (self_3338667341.val == null);

  return result_3338667342;

}

function get_3338667331(self_3338667333) {
  var result_3338667334 = null;

    if (isNone_3338667339(self_3338667333)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338667334 = self_3338667333["val"];

  return result_3338667334;

}

function fill_3271567107(self_3271567108) {
  BeforeRet: {
    if (((self_3271567108.fillChildren == null) || self_3271567108.filled)) {
    break BeforeRet;
    }
    
    self_3271567108.fillChildren();
    self_3271567108.filled = true;
  };

  
}

function name_3271557321(selfHEX60gensym1_3271557322) {
  var result_3271557323 = [];

  BeforeRet: {
    result_3271557323 = nimCopy(null, selfHEX60gensym1_3271557322.name, NTI33554449);
    break BeforeRet;
  };

  return result_3271557323;

}

function get_2348810295(self_2348810297, otherwise_2348810298) {
    var Temporary1;

  var result_2348810299 = [];

    if (isSome_2348810304(self_2348810297)) {
    Temporary1 = self_2348810297.val;
    }
    else {
    Temporary1 = otherwise_2348810298;
    }
    
    result_2348810299 = nimCopy(null, Temporary1, NTI33554449);

  return result_2348810299;

}

function isSome_3271563858(self_3271563860) {
  var result_3271563861 = false;

    result_3271563861 = self_3271563860.has;

  return result_3271563861;

}

function map_3338666950(self_3338666953, callback_3338666955) {
    var Temporary1;

  var result_3338666956 = ({val: [], has: false});

    if (isSome_3271563858(self_3338666953)) {
    Temporary1 = some_2281701410(callback_3338666955(self_3338666953.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338666956 = nimCopy(result_3338666956, Temporary1, NTI2348810261);

  return result_3338666956;

}

function none_3271563812() {
  var result_3271563819 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  return result_3271563819;

}

function some_3271563843(val_3271563845) {
  var result_3271563846 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

    result_3271563846.has = true;
    result_3271563846.val = nimCopy(result_3271563846.val, val_3271563845, NTI3271557125);

  return result_3271563846;

}

function isNone_3271563883(self_3271563885) {
  var result_3271563886 = false;

    result_3271563886 = !(self_3271563885.has);

  return result_3271563886;

}

function get_3271563875(self_3271563877) {
  var result_3271563878 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});

    if (isNone_3271563883(self_3271563877)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271563878 = self_3271563877.val;

  return result_3271563878;

}

function propertyDescription_3271563803(self_3271563804, id_3271563805) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271563811 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  BeforeRet: {
    result_3271563811 = nimCopy(result_3271563811, none_3271563812(), NTI3271560656);
    Label1: {
      var c_3271563842 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_3321890177 = 0;
      var L_3321890178 = (self_3271563804.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890177 < L_3321890178)) break Label3;
            c_3271563842 = self_3271563804.properties[chckIndx(i_3321890177, 0, (self_3271563804.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271563842.id, id_3271563805)) {
            result_3271563811 = nimCopy(result_3271563811, some_3271563843(c_3271563842), NTI3271560656);
            break BeforeRet;
            }
            
            i_3321890177 = addInt(i_3321890177, 1);
            if (!(((self_3271563804.properties).length == L_3321890178))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271563804.base == null))) Temporary4 = false; else {        var oHEX60gensym104_3271563853 = propertyDescription_3271563803(self_3271563804.base, id_3271563805);
        if (!isSome_3271563858(oHEX60gensym104_3271563853)) Temporary5 = false; else {          var pd_3271563898 = nimCopy(null, get_3271563875(oHEX60gensym104_3271563853), NTI3271557125);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271563811 = nimCopy(result_3271563811, some_3271563843(pd_3271563898), NTI3271560656);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271563905 = null;
      var i_3321890182 = 0;
      var L_3321890183 = (self_3271563804.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890182 < L_3321890183)) break Label8;
            inter_3271563905 = self_3271563804.interfaces[chckIndx(i_3321890182, 0, (self_3271563804.interfaces).length - 1)];
              if (!!((inter_3271563905 == null))) Temporary9 = false; else {                var oHEX60gensym107_3271563911 = propertyDescription_3271563803(inter_3271563905, id_3271563805);
                if (!isSome_3271563858(oHEX60gensym107_3271563911)) Temporary10 = false; else {                  var pd_3271563934 = nimCopy(null, get_3271563875(oHEX60gensym107_3271563911), NTI3271557125);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271563811 = nimCopy(result_3271563811, some_3271563843(pd_3271563934), NTI3271560656);
            break BeforeRet;
            }
            
            i_3321890182 = addInt(i_3321890182, 1);
            if (!(((self_3271563804.interfaces).length == L_3321890183))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271563811;

}

function isSome_3271563570(self_3271563572) {
  var result_3271563573 = false;

    result_3271563573 = self_3271563572.has;

  return result_3271563573;

}

function map_3338667015(self_3338667018, callback_3338667020) {
    var Temporary1;

  var result_3338667021 = ({val: [], has: false});

    if (isSome_3271563570(self_3338667018)) {
    Temporary1 = some_2281701410(callback_3338667020(self_3338667018.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338667021 = nimCopy(result_3338667021, Temporary1, NTI2348810261);

  return result_3338667021;

}

function none_3271563524() {
  var result_3271563531 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

  return result_3271563531;

}

function some_3271563555(val_3271563557) {
  var result_3271563558 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

    result_3271563558.has = true;
    result_3271563558.val = nimCopy(result_3271563558.val, val_3271563557, NTI3271557128);

  return result_3271563558;

}

function isNone_3271563595(self_3271563597) {
  var result_3271563598 = false;

    result_3271563598 = !(self_3271563597.has);

  return result_3271563598;

}

function get_3271563587(self_3271563589) {
  var result_3271563590 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});

    if (isNone_3271563595(self_3271563589)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271563590 = self_3271563589.val;

  return result_3271563590;

}

function nodeReferenceDescription_3271563515(self_3271563516, id_3271563517) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271563523 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})}), has: false});

  BeforeRet: {
    result_3271563523 = nimCopy(result_3271563523, none_3271563524(), NTI3271560406);
    Label1: {
      var c_3271563554 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_3321890187 = 0;
      var L_3321890188 = (self_3271563516.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890187 < L_3321890188)) break Label3;
            c_3271563554 = self_3271563516.references[chckIndx(i_3321890187, 0, (self_3271563516.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271563554.id, id_3271563517)) {
            result_3271563523 = nimCopy(result_3271563523, some_3271563555(c_3271563554), NTI3271560406);
            break BeforeRet;
            }
            
            i_3321890187 = addInt(i_3321890187, 1);
            if (!(((self_3271563516.references).length == L_3321890188))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271563516.base == null))) Temporary4 = false; else {        var oHEX60gensym90_3271563565 = nodeReferenceDescription_3271563515(self_3271563516.base, id_3271563517);
        if (!isSome_3271563570(oHEX60gensym90_3271563565)) Temporary5 = false; else {          var pd_3271563610 = nimCopy(null, get_3271563587(oHEX60gensym90_3271563565), NTI3271557128);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271563523 = nimCopy(result_3271563523, some_3271563555(pd_3271563610), NTI3271560406);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271563617 = null;
      var i_3321890191 = 0;
      var L_3321890192 = (self_3271563516.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890191 < L_3321890192)) break Label8;
            inter_3271563617 = self_3271563516.interfaces[chckIndx(i_3321890191, 0, (self_3271563516.interfaces).length - 1)];
              if (!!((inter_3271563617 == null))) Temporary9 = false; else {                var oHEX60gensym93_3271563623 = nodeReferenceDescription_3271563515(inter_3271563617, id_3271563517);
                if (!isSome_3271563570(oHEX60gensym93_3271563623)) Temporary10 = false; else {                  var pd_3271563646 = nimCopy(null, get_3271563587(oHEX60gensym93_3271563623), NTI3271557128);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271563523 = nimCopy(result_3271563523, some_3271563555(pd_3271563646), NTI3271560406);
            break BeforeRet;
            }
            
            i_3321890191 = addInt(i_3321890191, 1);
            if (!(((self_3271563516.interfaces).length == L_3321890192))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271563523;

}

function none_3271563368() {
  var result_3271563374 = ({val: null});

  return result_3271563374;

}

function rawGet_3271561944(t_3271561947, key_3271561948, hc_3271561949, hc_3271561949_Idx) {
  var result_3271561950 = 0;

  BeforeRet: {
    hc_3271561949[hc_3271561949_Idx] = hash_2046820630(key_3271561948);
    if ((hc_3271561949[hc_3271561949_Idx] == 0)) {
    hc_3271561949[hc_3271561949_Idx] = 314159265;
    }
    
    if (((t_3271561947.data).length == 0)) {
    result_3271561950 = -1;
    break BeforeRet;
    }
    
    var h_3271562001 = (hc_3271561949[hc_3271561949_Idx] & (t_3271561947.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field0)) break Label2;
          if (((t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field0 == hc_3271561949[hc_3271561949_Idx]) && HEX3DHEX3D_2046820626(t_3271561947.data[chckIndx(h_3271562001, 0, (t_3271561947.data).length - 1)].Field1, key_3271561948))) {
          result_3271561950 = h_3271562001;
          break BeforeRet;
          }
          
          h_3271562001 = nextTry_1308622883(h_3271562001, (t_3271561947.data).length - 1);
        }
    };
    result_3271561950 = subInt(-1, h_3271562001);
  };

  return result_3271561950;

}

function hasKey_3271563210(t_3271563213, key_3271563214) {
  var result_3271563215 = false;

    var hc_3271563216 = [0];
    result_3271563215 = (0 <= rawGet_3271561944(t_3271563213, key_3271563214, hc_3271563216, 0));

  return result_3271563215;

}

function contains_3271563204(t_3271563207, key_3271563208) {
  var result_3271563209 = false;

  BeforeRet: {
    result_3271563209 = hasKey_3271563210(t_3271563207, key_3271563208);
    break BeforeRet;
  };

  return result_3271563209;

}

function some_3271563355(val_3271563357) {
  var result_3271563358 = ({val: null});

    if (!(!((val_3271563357 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3271563358.val = val_3271563357;

  return result_3271563358;

}

function HEX5BHEX5D_3271563276(t_3271563279, key_3271563280) {
  var result_3271563281 = null;
  var result_3271563281_Idx = 0;

    var hcHEX60gensym22_3271563282 = [0];
    var indexHEX60gensym22_3271563289 = rawGet_3271561944(t_3271563279, key_3271563280, hcHEX60gensym22_3271563282, 0);
    if ((0 <= indexHEX60gensym22_3271563289)) {
    result_3271563281 = t_3271563279.data[chckIndx(indexHEX60gensym22_3271563289, 0, (t_3271563279.data).length - 1)]; result_3271563281_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3271563280);
    }
    

  return [result_3271563281, result_3271563281_Idx];

}

function resolveReference_3271563154(self_3271563155, id_3271563156) {
    var Temporary1;

  var result_3271563161 = ({val: null});

  BeforeRet: {
    if (contains_3271563204(self_3271563155.nodes, id_3271563156)) {
    result_3271563161 = nimCopy(result_3271563161, some_3271563355((Temporary1 = HEX5BHEX5D_3271563276(self_3271563155.nodes, id_3271563156), Temporary1)[0][Temporary1[1]]), NTI3271560184);
    break BeforeRet;
    }
    else {
      result_3271563161 = nimCopy(result_3271563161, none_3271563368(), NTI3271560184);
      break BeforeRet;
    }
    
  };

  return result_3271563161;

}

function resolveReference_3271564076(node_3271564077, role_3271564078) {
  var result_3271564080 = ({val: null});

  BeforeRet: {
    result_3271564080 = nimCopy(result_3271564080, none_3271563368(), NTI3271560184);
    if ((node_3271564077.model == null)) {
    break BeforeRet;
    }
    
    Label1: {
      var c_3271564093 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_3321890195 = 0;
      var L_3321890196 = (node_3271564077.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890195 < L_3321890196)) break Label3;
            c_3271564093 = node_3271564077.references[chckIndx(i_3321890195, 0, (node_3271564077.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564093.Field0, role_3271564078)) {
            result_3271564080 = nimCopy(result_3271564080, resolveReference_3271563154(node_3271564077.model, c_3271564093.Field1), NTI3271560184);
            break Label1;
            }
            
            i_3321890195 = addInt(i_3321890195, 1);
            if (!(((node_3271564077.references).length == L_3321890196))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271564080;

}

function isSome_3338667064(self_3338667066) {
  var result_3338667067 = false;

    result_3338667067 = !((self_3338667066.val == null));

  return result_3338667067;

}

function isNone_3338667092(self_3338667094) {
  var result_3338667095 = false;

    result_3338667095 = (self_3338667094.val == null);

  return result_3338667095;

}

function get_3338667084(self_3338667086) {
  var result_3338667087 = null;

    if (isNone_3338667092(self_3338667086)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338667087 = self_3338667086["val"];

  return result_3338667087;

}

function isSome_3271563714(self_3271563716) {
  var result_3271563717 = false;

    result_3271563717 = self_3271563716.has;

  return result_3271563717;

}

function map_3338667126(self_3338667129, callback_3338667131) {
    var Temporary1;

  var result_3338667132 = ({val: [], has: false});

    if (isSome_3271563714(self_3338667129)) {
    Temporary1 = some_2281701410(callback_3338667131(self_3338667129.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_3338667132 = nimCopy(result_3338667132, Temporary1, NTI2348810261);

  return result_3338667132;

}

function none_3271563668() {
  var result_3271563675 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

  return result_3271563675;

}

function some_3271563699(val_3271563701) {
  var result_3271563702 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

    result_3271563702.has = true;
    result_3271563702.val = nimCopy(result_3271563702.val, val_3271563701, NTI3271557127);

  return result_3271563702;

}

function isNone_3271563739(self_3271563741) {
  var result_3271563742 = false;

    result_3271563742 = !(self_3271563741.has);

  return result_3271563742;

}

function get_3271563731(self_3271563733) {
  var result_3271563734 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});

    if (isNone_3271563739(self_3271563733)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271563734 = self_3271563733.val;

  return result_3271563734;

}

function nodeChildDescription_3271563659(self_3271563660, id_3271563661) {
      var Temporary4;
        var Temporary5;
              var Temporary9;
                var Temporary10;

  var result_3271563667 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0}), has: false});

  BeforeRet: {
    result_3271563667 = nimCopy(result_3271563667, none_3271563668(), NTI3271560531);
    Label1: {
      var c_3271563698 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3321890201 = 0;
      var L_3321890202 = (self_3271563660.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890201 < L_3321890202)) break Label3;
            c_3271563698 = self_3271563660.children[chckIndx(i_3321890201, 0, (self_3271563660.children).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271563698.id, id_3271563661)) {
            result_3271563667 = nimCopy(result_3271563667, some_3271563699(c_3271563698), NTI3271560531);
            break BeforeRet;
            }
            
            i_3321890201 = addInt(i_3321890201, 1);
            if (!(((self_3271563660.children).length == L_3321890202))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      if (!!((self_3271563660.base == null))) Temporary4 = false; else {        var oHEX60gensym97_3271563709 = nodeChildDescription_3271563659(self_3271563660.base, id_3271563661);
        if (!isSome_3271563714(oHEX60gensym97_3271563709)) Temporary5 = false; else {          var pd_3271563754 = nimCopy(null, get_3271563731(oHEX60gensym97_3271563709), NTI3271557127);
          Temporary5 = true;        }        Temporary4 = Temporary5;      }    if (Temporary4) {
    result_3271563667 = nimCopy(result_3271563667, some_3271563699(pd_3271563754), NTI3271560531);
    break BeforeRet;
    }
    
    Label6: {
      var inter_3271563761 = null;
      var i_3321890205 = 0;
      var L_3321890206 = (self_3271563660.interfaces).length;
      Label7: {
          Label8: while (true) {
          if (!(i_3321890205 < L_3321890206)) break Label8;
            inter_3271563761 = self_3271563660.interfaces[chckIndx(i_3321890205, 0, (self_3271563660.interfaces).length - 1)];
              if (!!((inter_3271563761 == null))) Temporary9 = false; else {                var oHEX60gensym100_3271563767 = nodeChildDescription_3271563659(inter_3271563761, id_3271563661);
                if (!isSome_3271563714(oHEX60gensym100_3271563767)) Temporary10 = false; else {                  var pd_3271563790 = nimCopy(null, get_3271563731(oHEX60gensym100_3271563767), NTI3271557127);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271563667 = nimCopy(result_3271563667, some_3271563699(pd_3271563790), NTI3271560531);
            break BeforeRet;
            }
            
            i_3321890205 = addInt(i_3321890205, 1);
            if (!(((self_3271563660.interfaces).length == L_3321890206))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271563667;

}

function buildCellDefault_3338666917(self_3338666918, node_3338666919, useDefaultRecursive_3338666920) {
    
function HEX3Aanonymous_3338666924() {
                
function HEX3Aanonymous_3338666934(decs_3338666945) {
                  var result_3338666948 = [];

                    result_3338666948 = nimCopy(null, decs_3338666945.role, NTI33554449);

                  return result_3338666948;

                }
                
function HEX3Aanonymous_3338666999(decs_3338667010) {
                  var result_3338667013 = [];

                    result_3338667013 = nimCopy(null, decs_3338667010.role, NTI33554449);

                  return result_3338667013;

                }
                  var Temporary7;
                
function HEX3Aanonymous_3338667110(decs_3338667121) {
                  var result_3338667124 = [];

                    result_3338667124 = nimCopy(null, decs_3338667121.role, NTI33554449);

                  return result_3338667124;

                }

        add_3338666073(cell_3338666923, {node: node_3338666919, text: name_3271557321(class_3338666922), m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3338666923, {node: node_3338666919, text: [123], increaseIndentAfter: true, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, decreaseIndentAfter: false});
        var hasAnyChildren_3338666925 = false;
        Label1: {
          var prop_3338666929 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
          var i_3321890157 = 0;
          var L_3321890158 = (node_3338666919.properties).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890157 < L_3321890158)) break Label3;
                prop_3338666929 = node_3338666919.properties[chckIndx(i_3321890157, 0, (node_3338666919.properties).length - 1)];
                hasAnyChildren_3338666925 = true;
                var name_3338666990 = get_2348810295(map_3338666950(propertyDescription_3271563803(class_3338666922, prop_3338666929.Field0), HEX3Aanonymous_3338666934), HEX24_2046820617(prop_3338666929.Field0));
                add_3338666073(cell_3338666923, {node: node_3338666919, text: nimCopy(null, name_3338666990, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                add_3338666073(cell_3338666923, {node: node_3338666919, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                add_3338666073(cell_3338666923, {id: newId_2046820597(), node: node_3338666919, property: nimCopy(null, prop_3338666929.Field0, NTI2046820355), m_type: NTI3338665995, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                i_3321890157 = addInt(i_3321890157, 1);
                if (!(((node_3338666919.properties).length == L_3321890158))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label4: {
          var prop_3338666994 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
          var i_3321890162 = 0;
          var L_3321890163 = (node_3338666919.references).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890162 < L_3321890163)) break Label6;
                prop_3338666994 = node_3338666919.references[chckIndx(i_3321890162, 0, (node_3338666919.references).length - 1)];
                hasAnyChildren_3338666925 = true;
                var name_3338667055 = get_2348810295(map_3338667015(nodeReferenceDescription_3271563515(class_3338666922, prop_3338666994.Field0), HEX3Aanonymous_3338666999), HEX24_2046820617(prop_3338666994.Field0));
                add_3338666073(cell_3338666923, {node: node_3338666919, text: nimCopy(null, name_3338667055, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                add_3338666073(cell_3338666923, {node: node_3338666919, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                var nodeRefCell_3338667056 = {id: newId_2046820597(), node: node_3338666919, reference: nimCopy(null, prop_3338666994.Field0, NTI2046820355), property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665996, child: null, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
                  var oHEX60gensym45_3338667059 = resolveReference_3271564076(node_3338666919, prop_3338666994.Field0);
                  if (!isSome_3338667064(oHEX60gensym45_3338667059)) Temporary7 = false; else {                    var targetNode_3338667101 = get_3338667084(oHEX60gensym45_3338667059);
                    Temporary7 = true;                  }                if (Temporary7) {
                nodeRefCell_3338667056.child = {id: newId_2046820597(), node: targetNode_3338667101, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
                }
                
                add_3338666073(cell_3338666923, nodeRefCell_3338667056);
                i_3321890162 = addInt(i_3321890162, 1);
                if (!(((node_3338666919.references).length == L_3321890163))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label8: {
          var prop_3338667105 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
          var i_3321890172 = 0;
          var L_3321890173 = (node_3338666919.childLists).length;
          Label9: {
              Label10: while (true) {
              if (!(i_3321890172 < L_3321890173)) break Label10;
                prop_3338667105 = node_3338666919.childLists[chckIndx(i_3321890172, 0, (node_3338666919.childLists).length - 1)];
                hasAnyChildren_3338666925 = true;
                var name_3338667166 = get_2348810295(map_3338667126(nodeChildDescription_3271563659(class_3338666922, prop_3338667105.Field0), HEX3Aanonymous_3338667110), HEX24_2046820617(prop_3338667105.Field0));
                add_3338666073(cell_3338666923, {node: node_3338666919, text: nimCopy(null, name_3338667166, NTI33554449), style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                add_3338666073(cell_3338666923, {node: node_3338666919, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                var hasChildren_3338667167 = false;
                Label11: {
                  var c_3338667171 = null;
                  var colontmp__3321890167 = [];
                  colontmp__3321890167 = children_3271564002(node_3338666919, prop_3338667105.Field0);
                  var i_3321890168 = 0;
                  var L_3321890169 = (colontmp__3321890167).length;
                  Label12: {
                      Label13: while (true) {
                      if (!(i_3321890168 < L_3321890169)) break Label13;
                        c_3338667171 = colontmp__3321890167[chckIndx(i_3321890168, 0, (colontmp__3321890167).length - 1)];
                        hasChildren_3338667167 = true;
                        add_3338666073(cell_3338666923, buildCell_3338666913(self_3338666918, c_3338667171, useDefaultRecursive_3338666920));
                        i_3321890168 = addInt(i_3321890168, 1);
                        if (!(((colontmp__3321890167).length == L_3321890169))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (!(hasChildren_3338667167)) {
                add_3338666073(cell_3338666923, {node: node_3338666919, text: [60,46,46,46,62], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                i_3321890172 = addInt(i_3321890172, 1);
                if (!(((node_3338666919.childLists).length == L_3321890173))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3338666923, {node: node_3338666919, text: [125], decreaseIndentBefore: true, style: {onNewLine: hasAnyChildren_3338666925, addNewlineAfter: true, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});

      
    }

  var result_3338666921 = null;

  BeforeRet: {
    var class_3338666922 = nodeClass_3271557504(node_3338666919);
    var cell_3338666923 = {id: newId_2046820597(), node: node_3338666919, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3338666923.fillChildren = HEX3Aanonymous_3338666924;
    result_3338666921 = cell_3338666923;
    break BeforeRet;
  };

  return result_3338666921;

}

function buildCell_3338666913(self_3338666914, node_3338666915, useDefault_3338666916) {
      var Temporary1;
        var Temporary2;

  var result_3338667288 = null;

  BeforeRet: {
    var class_3338667289 = nodeClass_3271557504(node_3338666915);
    if ((class_3338667289 == null)) {
    var fmtRes_3338667298 = [mnewString(0)];
    fmtRes_3338667298[0].push.apply(fmtRes_3338667298[0], [85,110,107,110,111,119,110,32,99,108,97,115,115,32]);;
    formatValue_3036676344(fmtRes_3338667298, 0, node_3338666915.class, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3338667298[0], NTI33554449)]);
    result_3338667288 = {node: node_3338666915, m_type: NTI3271557158, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    break BeforeRet;
    }
    
      if (!!(useDefault_3338666916)) Temporary1 = false; else {        var oHEX60gensym49_3338667306 = findBuilder_3338666604(self_3338666914, class_3338667289, idNone_2046820633());
        if (!isSome_3338667311(oHEX60gensym49_3338667306)) Temporary2 = false; else {          var builder_3338667357 = get_3338667331(oHEX60gensym49_3338667306);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    result_3338667288 = builder_3338667357(self_3338666914, node_3338666915);
    fill_3271567107(result_3338667288);
    }
    else {
      if (!(useDefault_3338666916)) {
      var fmtRes_3338667363 = [mnewString(0)];
      fmtRes_3338667363[0].push.apply(fmtRes_3338667363[0], [85,110,107,110,111,119,110,32,98,117,105,108,100,101,114,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_3338667363, 0, name_3271557321(class_3338667289), []);
      fmtRes_3338667363[0].push.apply(fmtRes_3338667363[0], [44,32,117,115,105,110,103,32,100,101,102,97,117,108,116]);;
      log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3338667363[0], NTI33554449)]);
      }
      
      result_3338667288 = buildCellDefault_3338666917(self_3338666914, node_3338666915, useDefault_3338666916);
      fill_3271567107(result_3338667288);
    }
    
  };

  return result_3338667288;

}

function hasChild_3271563991(node_3271563992, role_3271563993) {
  var result_3271563994 = false;

  BeforeRet: {
    result_3271563994 = false;
    Label1: {
      var c_3271563998 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_3321890224 = 0;
      var L_3321890225 = (node_3271563992.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890224 < L_3321890225)) break Label3;
            c_3271563998 = node_3271563992.childLists[chckIndx(i_3321890224, 0, (node_3271563992.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271563998.Field0, role_3271563993)) {
            result_3271563994 = (0 < (c_3271563998.Field1).length);
            break BeforeRet;
            }
            
            i_3321890224 = addInt(i_3321890224, 1);
            if (!(((node_3271563992.childLists).length == L_3321890225))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271563994;

}

function mustRehash_3271558089(t_3271558091) {
  var result_3271558092 = false;

    if (!((t_3271558091.counter < (t_3271558091.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271558092 = ((mulInt((t_3271558091.data).length, 2) < mulInt(t_3271558091.counter, 3)) || (subInt((t_3271558091.data).length, t_3271558091.counter) < 4));

  return result_3271558092;

}

function rawInsert_3271558538(t_3271558542, data_3271558543, data_3271558543_Idx, key_3271558544, val_3271558545, hc_3271558546, h_3271558547) {
    data_3271558543[data_3271558543_Idx][chckIndx(h_3271558547, 0, (data_3271558543[data_3271558543_Idx]).length - 1)].Field1 = nimCopy(data_3271558543[data_3271558543_Idx][chckIndx(h_3271558547, 0, (data_3271558543[data_3271558543_Idx]).length - 1)].Field1, key_3271558544, NTI2046820355);
    data_3271558543[data_3271558543_Idx][chckIndx(h_3271558547, 0, (data_3271558543[data_3271558543_Idx]).length - 1)].Field2 = val_3271558545;
    data_3271558543[data_3271558543_Idx][chckIndx(h_3271558547, 0, (data_3271558543[data_3271558543_Idx]).length - 1)].Field0 = hc_3271558546;

  
}

function enlarge_3271558244(t_3271558247) {
    var n_3271558250 = [];
    n_3271558250 = new Array(chckRange(mulInt((t_3271558247.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271558247.data).length, 2), 0, 2147483647) ; ++i) { n_3271558250[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271558247.data; t_3271558247.data = n_3271558250; n_3271558250 = Temporary1;    Label2: {
      var i_3271558314 = 0;
      var colontmp__3321890359 = 0;
      colontmp__3321890359 = (n_3271558250).length - 1;
      var res_3321890360 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3321890360 <= colontmp__3321890359)) break Label4;
            i_3271558314 = res_3321890360;
            var eh_3271558368 = n_3271558250[chckIndx(i_3271558314, 0, (n_3271558250).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271558368)) {
            var j_3271558372 = (eh_3271558368 & (t_3271558247.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271558247.data[chckIndx(j_3271558372, 0, (t_3271558247.data).length - 1)].Field0)) break Label6;
                  j_3271558372 = nextTry_1308622883(j_3271558372, (t_3271558247.data).length - 1);
                }
            };
            rawInsert_3271558538(t_3271558247, t_3271558247, "data", n_3271558250[chckIndx(i_3271558314, 0, (n_3271558250).length - 1)].Field1, n_3271558250[chckIndx(i_3271558314, 0, (n_3271558250).length - 1)].Field2, eh_3271558368, j_3271558372);
            }
            
            res_3321890360 = addInt(res_3321890360, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271558707(t_3271558710, key_3271558711, hc_3271558712) {
  var result_3271558713 = 0;

  BeforeRet: {
    if (((t_3271558710.data).length == 0)) {
    result_3271558713 = -1;
    break BeforeRet;
    }
    
    var h_3271558764 = (hc_3271558712 & (t_3271558710.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271558710.data[chckIndx(h_3271558764, 0, (t_3271558710.data).length - 1)].Field0)) break Label2;
          if (((t_3271558710.data[chckIndx(h_3271558764, 0, (t_3271558710.data).length - 1)].Field0 == hc_3271558712) && HEX3DHEX3D_2046820626(t_3271558710.data[chckIndx(h_3271558764, 0, (t_3271558710.data).length - 1)].Field1, key_3271558711))) {
          result_3271558713 = h_3271558764;
          break BeforeRet;
          }
          
          h_3271558764 = nextTry_1308622883(h_3271558764, (t_3271558710.data).length - 1);
        }
    };
    result_3271558713 = subInt(-1, h_3271558764);
  };

  return result_3271558713;

}

function HEX5BHEX5DHEX3D_3271557683(t_3271557686, key_3271557687, val_3271557688) {
    if (((t_3271557686.data).length == 0)) {
    var correctSizeHEX60gensym27_3271557738 = slotsNeeded_1308622891(32);
    t_3271557686.counter = 0;
    t_3271557686.data = new Array(chckRange(correctSizeHEX60gensym27_3271557738, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_3271557738, 0, 2147483647) ; ++i) { t_3271557686.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271557743 = [0];
    var index_3271557982 = rawGet_3271557744(t_3271557686, key_3271557687, hc_3271557743, 0);
    if ((0 <= index_3271557982)) {
    t_3271557686.data[chckIndx(index_3271557982, 0, (t_3271557686.data).length - 1)].Field2 = val_3271557688;
    }
    else {
      if (((t_3271557686.data).length == 0)) {
      var correctSizeHEX60gensym32_3271558084 = slotsNeeded_1308622891(32);
      t_3271557686.counter = 0;
      t_3271557686.data = new Array(chckRange(correctSizeHEX60gensym32_3271558084, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_3271558084, 0, 2147483647) ; ++i) { t_3271557686.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271558089(t_3271557686)) {
      enlarge_3271558244(t_3271557686);
      index_3271557982 = rawGetKnownHC_3271558707(t_3271557686, key_3271557687, hc_3271557743[0]);
      }
      
      index_3271557982 = subInt(-1, index_3271557982);
      rawInsert_3271558538(t_3271557686, t_3271557686, "data", key_3271557687, val_3271557688, hc_3271557743[0], index_3271557982);
      t_3271557686.counter = addInt(t_3271557686.counter, 1);
    }
    

  
}

function newLanguage_3271557612(id_3271557613, classes_3271557614, builder_3271557615) {
  var result_3271557616 = null;

    result_3271557616 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), version: 0, classes: ({data: [], counter: 0}), builder: null});
    result_3271557616.id = nimCopy(result_3271557616.id, id_3271557613, NTI2046820355);
    Label1: {
      var c_3271557642 = null;
      var i_3321890354 = 0;
      var L_3321890355 = (classes_3271557614).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890354 < L_3321890355)) break Label3;
            c_3271557642 = classes_3271557614[chckIndx(i_3321890354, 0, (classes_3271557614).length - 1)];
            HEX5BHEX5DHEX3D_3271557683(result_3271557616.classes, c_3271557642.id, c_3271557642);
            i_3321890354 = addInt(i_3321890354, 1);
            if (!(((classes_3271557614).length == L_3321890355))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271557616.builder = builder_3271557615;

  return result_3271557616;

}

function clear_3305112210(s_3305112212) {
    s_3305112212.counter = 0;
    Label1: {
      var i_3305112276 = 0;
      var colontmp__3321890368 = 0;
      colontmp__3321890368 = (s_3305112212.data).length;
      var i_3321890369 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890369 < colontmp__3321890368)) break Label3;
            i_3305112276 = i_3321890369;
            s_3305112212.data[chckIndx(i_3305112276, 0, (s_3305112212.data).length - 1)].Field0 = 0;
            s_3305112212.data[chckIndx(i_3305112276, 0, (s_3305112212.data).length - 1)].Field1 = 0;
            i_3321890369 = addInt(i_3321890369, 1);
          }
      };
    };

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet236[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__3321890417 = 0;
      colontmp__3321890417 = subInt((s_855638110).length, 1);
      var res_3321890418 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3321890418 <= colontmp__3321890417)) break Label3;
            iHEX60gensym7_855638117 = res_3321890418;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_3321890418 = addInt(res_3321890418, 1);
          }
      };
    };

  return result_855638111;

}

function escapeString_3305111635(v_3305111636, q_3305111637) {
  var result_3305111638 = [];

    result_3305111638.push.apply(result_3305111638, q_3305111637);;
    Label1: {
      var c_3305111639 = 0;
      var i_3321890413 = 0;
      var L_3321890414 = (v_3305111636).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890413 < L_3321890414)) break Label3;
            c_3305111639 = v_3305111636[chckIndx(i_3321890413, 0, (v_3305111636).length - 1)];
            switch (c_3305111639) {
            case 0:
              result_3305111638.push.apply(result_3305111638, [92,48]);;
              break;
            case 92:
              result_3305111638.push.apply(result_3305111638, [92,92]);;
              break;
            case 8:
              result_3305111638.push.apply(result_3305111638, [92,98]);;
              break;
            case 12:
              result_3305111638.push.apply(result_3305111638, [92,102]);;
              break;
            case 10:
              result_3305111638.push.apply(result_3305111638, [92,110]);;
              break;
            case 13:
              result_3305111638.push.apply(result_3305111638, [92,114]);;
              break;
            case 9:
              result_3305111638.push.apply(result_3305111638, [92,116]);;
              break;
            default: 
              if ((128 < c_3305111639)) {
              result_3305111638.push.apply(result_3305111638, ([92,120] || []).concat(nsuToLowerAsciiStr(toHex_855640046(c_3305111639, 2)) || []));;
              }
              
              addChar(result_3305111638, c_3305111639);;
              break;
            }
            i_3321890413 = addInt(i_3321890413, 1);
            if (!(((v_3305111636).length == L_3321890414))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305111638.push.apply(result_3305111638, q_3305111637);;

  return result_3305111638;

}

function textLine_3305111840(node_3305111841) {
  var result_3305111842 = [];

    switch (node_3305111841.kind) {
    case 3:
    case 17:
    case 18:
    case 9:
    case 4:
    case 8:
    case 5:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      break;
    case 6:
    case 7:
      result_3305111842.push.apply(result_3305111842, escapeString_3305111635(node_3305111841.value, [34]));;
      break;
    case 10:
    case 11:
      if ((node_3305111841.kind == 10)) {
      result_3305111842.push.apply(result_3305111842, [64]);;
      }
      
      result_3305111842.push.apply(result_3305111842, [91]);;
      Label1: {
        var i_3305111881 = 0;
        var e_3305111882 = null;
        var i_3321890397 = 0;
        var L_3321890398 = (node_3305111841.nodes).length;
        Label2: {
            Label3: while (true) {
            if (!(i_3321890397 < L_3321890398)) break Label3;
              i_3305111881 = i_3321890397;
              e_3305111882 = node_3305111841.nodes[chckIndx(i_3321890397, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111881 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111882));;
              i_3321890397 = addInt(i_3321890397, 1);
              if (!(((node_3305111841.nodes).length == L_3321890398))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [93]);;
      break;
    case 13:
      result_3305111842.push.apply(result_3305111842, [123]);;
      Label4: {
        var i_3305111888 = 0;
        var e_3305111889 = null;
        var i_3321890401 = 0;
        var L_3321890402 = (node_3305111841.nodes).length;
        Label5: {
            Label6: while (true) {
            if (!(i_3321890401 < L_3321890402)) break Label6;
              i_3305111888 = i_3321890401;
              e_3305111889 = node_3305111841.nodes[chckIndx(i_3321890401, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111888 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111889));;
              i_3321890401 = addInt(i_3321890401, 1);
              if (!(((node_3305111841.nodes).length == L_3321890402))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [125]);;
      break;
    case 14:
    case 12:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      result_3305111842.push.apply(result_3305111842, [40]);;
      Label7: {
        var i_3305111895 = 0;
        var e_3305111896 = null;
        var i_3321890405 = 0;
        var L_3321890406 = (node_3305111841.nodes).length;
        Label8: {
            Label9: while (true) {
            if (!(i_3321890405 < L_3321890406)) break Label9;
              i_3305111895 = i_3321890405;
              e_3305111896 = node_3305111841.nodes[chckIndx(i_3321890405, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111895 == 0))) {
              result_3305111842.push.apply(result_3305111842, [44,32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111896));;
              i_3321890405 = addInt(i_3321890405, 1);
              if (!(((node_3305111841.nodes).length == L_3321890406))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3305111842.push.apply(result_3305111842, [41]);;
      break;
    case 1:
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      Label10: {
        var i_3305111902 = 0;
        var e_3305111903 = null;
        var i_3321890409 = 0;
        var L_3321890410 = (node_3305111841.nodes).length;
        Label11: {
            Label12: while (true) {
            if (!(i_3321890409 < L_3321890410)) break Label12;
              i_3305111902 = i_3321890409;
              e_3305111903 = node_3305111841.nodes[chckIndx(i_3321890409, 0, (node_3305111841.nodes).length - 1)];
              if (!((i_3305111902 == 0))) {
              result_3305111842.push.apply(result_3305111842, [32]);;
              }
              
              result_3305111842.push.apply(result_3305111842, textLine_3305111840(e_3305111903));;
              i_3321890409 = addInt(i_3321890409, 1);
              if (!(((node_3305111841.nodes).length == L_3321890410))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 15:
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(0, 0, (node_3305111841.nodes).length - 1)]));;
      result_3305111842.push.apply(result_3305111842, [61]);;
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(1, 0, (node_3305111841.nodes).length - 1)]));;
      break;
    case 16:
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(0, 0, (node_3305111841.nodes).length - 1)]));;
      result_3305111842.push.apply(result_3305111842, [58,32]);;
      result_3305111842.push.apply(result_3305111842, textLine_3305111840(node_3305111841.nodes[chckIndx(1, 0, (node_3305111841.nodes).length - 1)]));;
      break;
    default: 
      result_3305111842.push.apply(result_3305111842, node_3305111841.value);;
      break;
    }

  return result_3305111842;

}

function printStr_3305111906(c_3305111907, s_3305111908) {
    line_3305111569[0].push.apply(line_3305111569[0], s_3305111908);;

  
}

function printStr_3305111904(s_3305111905) {
    line_3305111569[0].push.apply(line_3305111569[0], s_3305111905);;

  
}

function find_3305112010(a_3305112013, item_3305112014) {
  var result_3305112015 = 0;

  BeforeRet: {
    result_3305112015 = 0;
    Label1: {
      var i_3305112029 = 0;
      var i_3321890422 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890422 < (a_3305112013).length)) break Label3;
            i_3305112029 = a_3305112013[chckIndx(i_3321890422, 0, (a_3305112013).length - 1)];
            if ((i_3305112029 == item_3305112014)) {
            break BeforeRet;
            }
            
            result_3305112015 = addInt(result_3305112015, 1);
            i_3321890422 = addInt(i_3321890422, 1);
          }
      };
    };
    result_3305112015 = -1;
  };

  return result_3305112015;

}

function contains_3305112005(a_3305112007, item_3305112008) {
  var result_3305112009 = false;

  BeforeRet: {
    result_3305112009 = (0 <= find_3305112010(a_3305112007, item_3305112008));
    break BeforeRet;
  };

  return result_3305112009;

}

function printNode_3305111909(node_3305111910, indent_3305111911) {
    var wrap_3305111912 = (printWidth_3305111561[0] <= addInt((textLine_3305111840(node_3305111910)).length, indent_3305111911));
    switch (node_3305111910.kind) {
    case 3:
    case 8:
      printStr_3305111906(34, node_3305111910.value);
      break;
    case 18:
    case 17:
    case 9:
      printStr_3305111906(31, node_3305111910.value);
      break;
    case 4:
    case 5:
      printStr_3305111906(35, node_3305111910.value);
      break;
    case 6:
      printStr_3305111906(32, escapeString_3305111635(node_3305111910.value, [34]));
      break;
    case 7:
      printStr_3305111906(32, ([39] || []).concat(HEX5BHEX5D_855639319(escapeString_3305111635(node_3305111910.value, [34]), HEX2EHEX2E_1040187488(1, 2)) || [],[39] || []));
      break;
    case 10:
    case 11:
      if ((node_3305111910.kind == 10)) {
      printStr_3305111904([64]);
      }
      
      if (wrap_3305111912) {
      printStr_3305111904([91,10]);
      Label1: {
        var i_3305111940 = 0;
        var e_3305111941 = null;
        var i_3321890373 = 0;
        var L_3321890374 = (node_3305111910.nodes).length;
        Label2: {
            Label3: while (true) {
            if (!(i_3321890373 < L_3321890374)) break Label3;
              i_3305111940 = i_3321890373;
              e_3305111941 = node_3305111910.nodes[chckIndx(i_3321890373, 0, (node_3305111910.nodes).length - 1)];
              printStr_3305111904(nsuRepeatStr([32,32], chckRange(addInt(indent_3305111911, 1), 0, 2147483647)));
              printNode_3305111909(e_3305111941, addInt(indent_3305111911, 1));
              if (!((i_3305111940 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([44,10]);
              }
              
              i_3321890373 = addInt(i_3321890373, 1);
              if (!(((node_3305111910.nodes).length == L_3321890374))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      printStr_3305111904([10]);
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      printStr_3305111904([93]);
      }
      else {
        printStr_3305111904([91]);
        Label4: {
          var i_3305111950 = 0;
          var e_3305111951 = null;
          var i_3321890377 = 0;
          var L_3321890378 = (node_3305111910.nodes).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890377 < L_3321890378)) break Label6;
                i_3305111950 = i_3321890377;
                e_3305111951 = node_3305111910.nodes[chckIndx(i_3321890377, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305111950 == 0))) {
                printStr_3305111904([44,32]);
                }
                
                printNode_3305111909(e_3305111951, 0);
                i_3321890377 = addInt(i_3321890377, 1);
                if (!(((node_3305111910.nodes).length == L_3321890378))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        printStr_3305111904([93]);
      }
      
      break;
    case 13:
    case 14:
    case 12:
      if (contains_3305112005(new Uint8Array([14, 12]), node_3305111910.kind)) {
      printStr_3305111906(36, node_3305111910.value);
      printStr_3305111904([40]);
      }
      else {
      printStr_3305111904([123]);
      }
      
      if (wrap_3305111912) {
      printStr_3305111904([10]);
      Label7: {
        var i_3305112053 = 0;
        var e_3305112054 = null;
        var i_3321890381 = 0;
        var L_3321890382 = (node_3305111910.nodes).length;
        Label8: {
            Label9: while (true) {
            if (!(i_3321890381 < L_3321890382)) break Label9;
              i_3305112053 = i_3321890381;
              e_3305112054 = node_3305111910.nodes[chckIndx(i_3321890381, 0, (node_3305111910.nodes).length - 1)];
              printNode_3305111909(e_3305112054, addInt(indent_3305111911, 1));
              if (!((i_3305112053 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([44,10]);
              }
              
              i_3321890381 = addInt(i_3321890381, 1);
              if (!(((node_3305111910.nodes).length == L_3321890382))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      printStr_3305111904([10]);
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      }
      else {
        Label10: {
          var i_3305112063 = 0;
          var e_3305112064 = null;
          var i_3321890385 = 0;
          var L_3321890386 = (node_3305111910.nodes).length;
          Label11: {
              Label12: while (true) {
              if (!(i_3321890385 < L_3321890386)) break Label12;
                i_3305112063 = i_3321890385;
                e_3305112064 = node_3305111910.nodes[chckIndx(i_3321890385, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305112063 == 0))) {
                printStr_3305111904([44,32]);
                }
                
                printNode_3305111909(e_3305112064, 0);
                i_3321890385 = addInt(i_3321890385, 1);
                if (!(((node_3305111910.nodes).length == L_3321890386))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      if (contains_3305112005(new Uint8Array([14, 12]), node_3305111910.kind)) {
      printStr_3305111904([41]);
      }
      else {
      printStr_3305111904([125]);
      }
      
      break;
    case 1:
      if (wrap_3305111912) {
      Label13: {
        var i_3305112127 = 0;
        var e_3305112128 = null;
        var i_3321890389 = 0;
        var L_3321890390 = (node_3305111910.nodes).length;
        Label14: {
            Label15: while (true) {
            if (!(i_3321890389 < L_3321890390)) break Label15;
              i_3305112127 = i_3321890389;
              e_3305112128 = node_3305111910.nodes[chckIndx(i_3321890389, 0, (node_3305111910.nodes).length - 1)];
              printNode_3305111909(e_3305112128, 0);
              if (!((i_3305112127 == subInt((node_3305111910.nodes).length, 1)))) {
              printStr_3305111904([10]);
              }
              
              i_3321890389 = addInt(i_3321890389, 1);
              if (!(((node_3305111910.nodes).length == L_3321890390))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        Label16: {
          var i_3305112137 = 0;
          var e_3305112138 = null;
          var i_3321890393 = 0;
          var L_3321890394 = (node_3305111910.nodes).length;
          Label17: {
              Label18: while (true) {
              if (!(i_3321890393 < L_3321890394)) break Label18;
                i_3305112137 = i_3321890393;
                e_3305112138 = node_3305111910.nodes[chckIndx(i_3321890393, 0, (node_3305111910.nodes).length - 1)];
                if (!((i_3305112137 == 0))) {
                printStr_3305111904([32]);
                }
                
                printNode_3305111909(e_3305112138, 0);
                i_3321890393 = addInt(i_3321890393, 1);
                if (!(((node_3305111910.nodes).length == L_3321890394))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      printStr_3305111904([10]);
      break;
    case 15:
      printNode_3305111909(node_3305111910.nodes[chckIndx(0, 0, (node_3305111910.nodes).length - 1)], 0);
      printStr_3305111904([61]);
      printNode_3305111909(node_3305111910.nodes[chckIndx(1, 0, (node_3305111910.nodes).length - 1)], 0);
      break;
    case 16:
      printStr_3305111904(nsuRepeatStr([32,32], chckRange(indent_3305111911, 0, 2147483647)));
      printNode_3305111909(node_3305111910.nodes[chckIndx(0, 0, (node_3305111910.nodes).length - 1)], indent_3305111911);
      printStr_3305111904([58,32]);
      printNode_3305111909(node_3305111910.nodes[chckIndx(1, 0, (node_3305111910.nodes).length - 1)], indent_3305111911);
      break;
    default: 
      printStr_3305111904(node_3305111910.value);
      break;
    }

  
}

function printNodes_3305112157(s_3305112158) {
    clear_3305112210(haveSeen_3305111568[0]);
    var nodes_3305112453 = [];
    Label1: {
      var e_3305112467 = null;
      var i_3321890365 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890365 < (s_3305112158).length)) break Label3;
            e_3305112467 = s_3305112158[chckIndx(i_3321890365, 0, (s_3305112158).length - 1)];
            nodes_3305112453.push(e_3305112467);;
            i_3321890365 = addInt(i_3321890365, 1);
          }
      };
    };
    var node_3305112472 = {kind: 1, nodes: nimCopy(null, nodes_3305112453, NTI3305112120), value: []};
    printNode_3305111909(node_3305112472, 0);
    rawEcho(HEX5BHEX5D_855639319(line_3305111569[0], HEX2EHEX2E_1040187488(0, 2)));
    line_3305111569[0] = nimCopy(null, [], NTI33554449);

  
}

function newTopPairNode_3305111686(k_3305111687, v_3305111688) {
  var result_3305111689 = null;

    result_3305111689 = {kind: 15, nodes: [k_3305111687, v_3305111688], value: []};

  return result_3305111689;

}

function newNameNode_3305111683(name_3305111684) {
  var result_3305111685 = null;

    result_3305111685 = {kind: 2, value: nimCopy(null, name_3305111684, NTI33554449), nodes: []};

  return result_3305111685;

}

function newFieldPairNode_3305111712(k_3305111713, v_3305111714) {
  var result_3305111715 = null;

    result_3305111715 = {kind: 16, nodes: [k_3305111713, v_3305111714], value: []};

  return result_3305111715;

}

function newNode_3321889263(x_3321889265) {
  var result_3321889266 = null;

    result_3321889266 = {kind: 3, value: HEX24_369098760(x_3321889265), nodes: []};

  return result_3321889266;

}

function newNodeFromBaseType_3321889256(x_3321889258) {
  var result_3321889259 = null;

    result_3321889259 = newNode_3321889263(x_3321889258);

  return result_3321889259;

}

function newNode_3321889278(x_3321889280) {
  var result_3321889281 = null;

    result_3321889281 = {kind: 3, value: HEX24_369098760(((x_3321889280) | 0)), nodes: []};

  return result_3321889281;

}

function newNodeFromBaseType_3321889271(x_3321889273) {
  var result_3321889274 = null;

    result_3321889274 = newNode_3321889278(x_3321889273);

  return result_3321889274;

}

function newNode_3321889248(x_3321889250) {
  var result_3321889251 = null;

    var nodes_3321889252 = [];
    nodes_3321889252.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,100,100,105,110,103]), newNodeFromBaseType_3321889256(x_3321889250.padding)));;
    nodes_3321889252.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,105,109,101]), newNodeFromBaseType_3321889271(x_3321889250.time)));;
    nodes_3321889252.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,117,122,122]), newNodeFromBaseType_3321889271(x_3321889250.fuzz)));;
    nodes_3321889252.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,111,117,110,116]), newNodeFromBaseType_3321889271(x_3321889250.count)));;
    result_3321889251 = {kind: 14, value: [79,105,100], nodes: nimCopy(null, nodes_3321889252, NTI3321889120)};

  return result_3321889251;

}

function newNodeFromBaseType_3321889234(x_3321889236) {
  var result_3321889237 = null;

    result_3321889237 = newNode_3321889248(x_3321889236);

  return result_3321889237;

}

function len_3271560356(t_3271560359) {
  var result_3271560360 = 0;

    result_3271560360 = t_3271560359.counter;

  return result_3271560360;

}

function newNode_3305111730(x_3305111731) {
  var result_3305111746 = null;

    result_3305111746 = {kind: 6, value: nimCopy(null, x_3305111731, NTI33554449), nodes: []};

  return result_3305111746;

}

function newNodeFromBaseType_3321889461(x_3321889463) {
  var result_3321889464 = null;

    result_3321889464 = newNode_3305111730(x_3321889463);

  return result_3321889464;

}

function newNode_3321889493(x_3321889495) {
  var result_3321889496 = null;

    var nodes_3321889497 = [];
    Label1: {
      var e_3321889501 = null;
      var i_3321890436 = 0;
      var L_3321890437 = (x_3321889495).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890436 < L_3321890437)) break Label3;
            e_3321889501 = x_3321889495[chckIndx(i_3321890436, 0, (x_3321889495).length - 1)];
            nodes_3321889497.push(newNodeFromBaseType_3321889424(e_3321889501));;
            i_3321890436 = addInt(i_3321890436, 1);
            if (!(((x_3321889495).length == L_3321890437))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889496 = {kind: 10, nodes: nimCopy(null, nodes_3321889497, NTI3321889295), value: []};

  return result_3321889496;

}

function newNodeFromBaseType_3321889486(x_3321889488) {
  var result_3321889489 = null;

    result_3321889489 = newNode_3321889493(x_3321889488);

  return result_3321889489;

}

function newNode_3305111741(x_3305111742) {
  var result_3305111743 = null;

    result_3305111743 = {kind: 8, value: nimBoolToStr(x_3305111742), nodes: []};

  return result_3305111743;

}

function newNodeFromBaseType_3321889513(x_3321889515) {
  var result_3321889516 = null;

    result_3321889516 = newNode_3305111741(x_3321889515);

  return result_3321889516;

}

function newNode_3321889583(x_3321889585) {
  var result_3321889586 = null;

    result_3321889586 = newNode_3305111730(reprEnum(x_3321889585, NTI3271557123));

  return result_3321889586;

}

function newNodeFromBaseType_3321889576(x_3321889578) {
  var result_3321889579 = null;

    result_3321889579 = newNode_3321889583(x_3321889578);

  return result_3321889579;

}

function newNode_3321889554(x_3321889556) {
  var result_3321889557 = null;

    var nodes_3321889558 = [];
    nodes_3321889558.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3321889556.id)));;
    nodes_3321889558.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321889461(x_3321889556.role)));;
    nodes_3321889558.push(newFieldPairNode_3305111712(newNameNode_3305111683([116,121,112]), newNodeFromBaseType_3321889576(x_3321889556.typ)));;
    result_3321889557 = {kind: 14, value: [80,114,111,112,101,114,116,121,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321889558, NTI3321889344)};

  return result_3321889557;

}

function newNodeFromBaseType_3321889547(x_3321889549) {
  var result_3321889550 = null;

    result_3321889550 = newNode_3321889554(x_3321889549);

  return result_3321889550;

}

function newNode_3321889538(x_3321889540) {
  var result_3321889541 = null;

    var nodes_3321889542 = [];
    Label1: {
      var e_3321889546 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_3321890440 = 0;
      var L_3321890441 = (x_3321889540).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890440 < L_3321890441)) break Label3;
            e_3321889546 = x_3321889540[chckIndx(i_3321890440, 0, (x_3321889540).length - 1)];
            nodes_3321889542.push(newNodeFromBaseType_3321889547(e_3321889546));;
            i_3321890440 = addInt(i_3321890440, 1);
            if (!(((x_3321889540).length == L_3321890441))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889541 = {kind: 10, nodes: nimCopy(null, nodes_3321889542, NTI3321889332), value: []};

  return result_3321889541;

}

function newNodeFromBaseType_3321889531(x_3321889533) {
  var result_3321889534 = null;

    result_3321889534 = newNode_3321889538(x_3321889533);

  return result_3321889534;

}

function newNode_3321889664(x_3321889666) {
  var result_3321889667 = null;

    result_3321889667 = newNode_3305111730(reprEnum(x_3321889666, NTI3271557126));

  return result_3321889667;

}

function newNodeFromBaseType_3321889657(x_3321889659) {
  var result_3321889660 = null;

    result_3321889660 = newNode_3321889664(x_3321889659);

  return result_3321889660;

}

function newNode_3321889628(x_3321889630) {
  var result_3321889631 = null;

    var nodes_3321889632 = [];
    nodes_3321889632.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3321889630.id)));;
    nodes_3321889632.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321889461(x_3321889630.role)));;
    nodes_3321889632.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889234(x_3321889630.class)));;
    nodes_3321889632.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,111,117,110,116]), newNodeFromBaseType_3321889657(x_3321889630.count)));;
    result_3321889631 = {kind: 14, value: [78,111,100,101,67,104,105,108,100,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321889632, NTI3321889398)};

  return result_3321889631;

}

function newNodeFromBaseType_3321889621(x_3321889623) {
  var result_3321889624 = null;

    result_3321889624 = newNode_3321889628(x_3321889623);

  return result_3321889624;

}

function newNode_3321889612(x_3321889614) {
  var result_3321889615 = null;

    var nodes_3321889616 = [];
    Label1: {
      var e_3321889620 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_3321890444 = 0;
      var L_3321890445 = (x_3321889614).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890444 < L_3321890445)) break Label3;
            e_3321889620 = x_3321889614[chckIndx(i_3321890444, 0, (x_3321889614).length - 1)];
            nodes_3321889616.push(newNodeFromBaseType_3321889621(e_3321889620));;
            i_3321890444 = addInt(i_3321890444, 1);
            if (!(((x_3321889614).length == L_3321890445))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889615 = {kind: 10, nodes: nimCopy(null, nodes_3321889616, NTI3321889386), value: []};

  return result_3321889615;

}

function newNodeFromBaseType_3321889605(x_3321889607) {
  var result_3321889608 = null;

    result_3321889608 = newNode_3321889612(x_3321889607);

  return result_3321889608;

}

function newNode_3321889709(x_3321889711) {
  var result_3321889712 = null;

    var nodes_3321889713 = [];
    nodes_3321889713.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3321889711.id)));;
    nodes_3321889713.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321889461(x_3321889711.role)));;
    nodes_3321889713.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889234(x_3321889711.class)));;
    result_3321889712 = {kind: 14, value: [78,111,100,101,82,101,102,101,114,101,110,99,101,68,101,115,99,114,105,112,116,105,111,110], nodes: nimCopy(null, nodes_3321889713, NTI3321889457)};

  return result_3321889712;

}

function newNodeFromBaseType_3321889702(x_3321889704) {
  var result_3321889705 = null;

    result_3321889705 = newNode_3321889709(x_3321889704);

  return result_3321889705;

}

function newNode_3321889693(x_3321889695) {
  var result_3321889696 = null;

    var nodes_3321889697 = [];
    Label1: {
      var e_3321889701 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_3321890448 = 0;
      var L_3321890449 = (x_3321889695).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890448 < L_3321890449)) break Label3;
            e_3321889701 = x_3321889695[chckIndx(i_3321890448, 0, (x_3321889695).length - 1)];
            nodes_3321889697.push(newNodeFromBaseType_3321889702(e_3321889701));;
            i_3321890448 = addInt(i_3321890448, 1);
            if (!(((x_3321889695).length == L_3321890449))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889696 = {kind: 10, nodes: nimCopy(null, nodes_3321889697, NTI3321889445), value: []};

  return result_3321889696;

}

function newNodeFromBaseType_3321889686(x_3321889688) {
  var result_3321889689 = null;

    result_3321889689 = newNode_3321889693(x_3321889688);

  return result_3321889689;

}

function newNode_3321889446(x_3321889448) {
  var result_3321889449 = null;

    var nodes_3321889450 = [];
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3321889448.id)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,97,109,101]), newNodeFromBaseType_3321889461(x_3321889448.name)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([97,108,105,97,115]), newNodeFromBaseType_3321889461(x_3321889448.alias)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,97,115,101]), newNodeFromBaseType_3321889424(x_3321889448.base)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,116,101,114,102,97,99,101,115]), newNodeFromBaseType_3321889486(x_3321889448.interfaces)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,65,98,115,116,114,97,99,116]), newNodeFromBaseType_3321889513(x_3321889448.isAbstract)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,73,110,116,101,114,102,97,99,101]), newNodeFromBaseType_3321889513(x_3321889448.isInterface)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,111,112,101,114,116,105,101,115]), newNodeFromBaseType_3321889531(x_3321889448.properties)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,104,105,108,100,114,101,110]), newNodeFromBaseType_3321889605(x_3321889448.children)));;
    nodes_3321889450.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,101,102,101,114,101,110,99,101,115]), newNodeFromBaseType_3321889686(x_3321889448.references)));;
    result_3321889449 = {kind: 14, value: [78,111,100,101,67,108,97,115,115,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321889450, NTI3321889260)};

  return result_3321889449;

}

function newNodeFromBaseType_3321889439(x_3321889441) {
  var result_3321889442 = null;

    result_3321889442 = newNode_3321889446(x_3321889441);

  return result_3321889442;

}

function newNode_3321889431(x_3321889433) {
    var Temporary1;

  var result_3321889434 = null;

    if (!((x_3321889433 == null))) {
    Temporary1 = newNodeFromBaseType_3321889439(x_3321889433);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321889434 = Temporary1;

  return result_3321889434;

}

function newNodeFromBaseType_3321889424(x_3321889426) {
  var result_3321889427 = null;

    result_3321889427 = newNode_3321889431(x_3321889426);

  return result_3321889427;

}

function newNode_3321889330(x_3321889333) {
  var result_3321889334 = null;

    var nodes_3321889335 = [];
    Label1: {
      var k_3321889419 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321889420 = null;
      var L_3321890429 = len_3271560356(x_3321889333);
      Label2: {
        var h_3321890431 = 0;
        var colontmp__3321890432 = 0;
        colontmp__3321890432 = (x_3321889333.data).length - 1;
        var res_3321890433 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321890433 <= colontmp__3321890432)) break Label4;
              h_3321890431 = res_3321890433;
              if (isFilled_1308622880(x_3321889333.data[chckIndx(h_3321890431, 0, (x_3321889333.data).length - 1)].Field0)) {
              k_3321889419 = nimCopy(k_3321889419, x_3321889333.data[chckIndx(h_3321890431, 0, (x_3321889333.data).length - 1)].Field1, NTI2046820355);
              v_3321889420 = x_3321889333.data[chckIndx(h_3321890431, 0, (x_3321889333.data).length - 1)].Field2;
              nodes_3321889335.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889234(k_3321889419), newNodeFromBaseType_3321889424(v_3321889420)));;
              if (!((len_3271560356(x_3321889333) == L_3321890429))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321890433 = addInt(res_3321890433, 1);
            }
        };
      };
    };
    result_3321889334 = {kind: 13, nodes: nimCopy(null, nodes_3321889335, NTI3321889179), value: []};

  return result_3321889334;

}

function newNodeFromBaseType_3321889314(x_3321889316) {
  var result_3321889317 = null;

    result_3321889317 = newNode_3321889330(x_3321889316);

  return result_3321889317;

}

function len_3271566461(t_3271566464) {
  var result_3271566465 = 0;

    result_3271566465 = t_3271566464.counter;

  return result_3271566465;

}

function newNode_3321889866(x_3321889868) {
  var result_3321889869 = null;

    result_3321889869 = {kind: 4, value: [67,101,108,108,66,117,105,108,100,101,114,70,117,110,99,116,105,111,110], nodes: []};

  return result_3321889869;

}

function newNodeFromBaseType_3321889859(x_3321889861) {
  var result_3321889862 = null;

    result_3321889862 = newNode_3321889866(x_3321889861);

  return result_3321889862;

}

function newNode_3321889844(x_3321889846) {
  var result_3321889847 = null;

    var nodes_3321889848 = [];
    nodes_3321889848.push(newNodeFromBaseType_3321889234(x_3321889846["Field0"]));;
    nodes_3321889848.push(newNodeFromBaseType_3321889859(x_3321889846["Field1"]));;
    result_3321889847 = {kind: 12, nodes: nimCopy(null, nodes_3321889848, NTI3321889554), value: []};

  return result_3321889847;

}

function newNodeFromBaseType_3321889837(x_3321889839) {
  var result_3321889840 = null;

    result_3321889840 = newNode_3321889844(x_3321889839);

  return result_3321889840;

}

function newNode_3321889828(x_3321889830) {
  var result_3321889831 = null;

    var nodes_3321889832 = [];
    Label1: {
      var e_3321889836 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_3321890463 = 0;
      var L_3321890464 = (x_3321889830).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3321890463 < L_3321890464)) break Label3;
            e_3321889836 = x_3321889830[chckIndx(i_3321890463, 0, (x_3321889830).length - 1)];
            nodes_3321889832.push(newNodeFromBaseType_3321889837(e_3321889836));;
            i_3321890463 = addInt(i_3321890463, 1);
            if (!(((x_3321889830).length == L_3321890464))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889831 = {kind: 10, nodes: nimCopy(null, nodes_3321889832, NTI3321889542), value: []};

  return result_3321889831;

}

function newNodeFromBaseType_3321889821(x_3321889823) {
  var result_3321889824 = null;

    result_3321889824 = newNode_3321889828(x_3321889823);

  return result_3321889824;

}

function newNode_3321889806(x_3321889809) {
  var result_3321889810 = null;

    var nodes_3321889811 = [];
    Label1: {
      var k_3321889816 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321889817 = [];
      var L_3321890456 = len_3271566461(x_3321889809);
      Label2: {
        var h_3321890458 = 0;
        var colontmp__3321890459 = 0;
        colontmp__3321890459 = (x_3321889809.data).length - 1;
        var res_3321890460 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321890460 <= colontmp__3321890459)) break Label4;
              h_3321890458 = res_3321890460;
              if (isFilled_1308622880(x_3321889809.data[chckIndx(h_3321890458, 0, (x_3321889809.data).length - 1)].Field0)) {
              k_3321889816 = nimCopy(k_3321889816, x_3321889809.data[chckIndx(h_3321890458, 0, (x_3321889809.data).length - 1)].Field1, NTI2046820355);
              v_3321889817 = x_3321889809.data[chckIndx(h_3321890458, 0, (x_3321889809.data).length - 1)].Field2;
              nodes_3321889811.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889234(k_3321889816), newNodeFromBaseType_3321889821(v_3321889817)));;
              if (!((len_3271566461(x_3321889809) == L_3321890456))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321890460 = addInt(res_3321890460, 1);
            }
        };
      };
    };
    result_3321889810 = {kind: 13, nodes: nimCopy(null, nodes_3321889811, NTI3321889529), value: []};

  return result_3321889810;

}

function newNodeFromBaseType_3321889790(x_3321889792) {
  var result_3321889793 = null;

    result_3321889793 = newNode_3321889806(x_3321889792);

  return result_3321889793;

}

function len_3271566768(t_3271566771) {
  var result_3271566772 = 0;

    result_3271566772 = t_3271566771.counter;

  return result_3271566772;

}

function newNode_3321889907(x_3321889910) {
  var result_3321889911 = null;

    var nodes_3321889912 = [];
    Label1: {
      var k_3321889917 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3321889918 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var L_3321890471 = len_3271566768(x_3321889910);
      Label2: {
        var h_3321890473 = 0;
        var colontmp__3321890474 = 0;
        colontmp__3321890474 = (x_3321889910.data).length - 1;
        var res_3321890475 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_3321890475 <= colontmp__3321890474)) break Label4;
              h_3321890473 = res_3321890475;
              if (isFilled_1308622880(x_3321889910.data[chckIndx(h_3321890473, 0, (x_3321889910.data).length - 1)].Field0)) {
              k_3321889917 = nimCopy(k_3321889917, x_3321889910.data[chckIndx(h_3321890473, 0, (x_3321889910.data).length - 1)].Field1, NTI2046820355);
              v_3321889918 = nimCopy(v_3321889918, x_3321889910.data[chckIndx(h_3321890473, 0, (x_3321889910.data).length - 1)].Field2, NTI2046820355);
              nodes_3321889912.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889234(k_3321889917), newNodeFromBaseType_3321889234(v_3321889918)));;
              if (!((len_3271566768(x_3321889910) == L_3321890471))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_3321890475 = addInt(res_3321890475, 1);
            }
        };
      };
    };
    result_3321889911 = {kind: 13, nodes: nimCopy(null, nodes_3321889912, NTI3321889601), value: []};

  return result_3321889911;

}

function newNodeFromBaseType_3321889891(x_3321889893) {
  var result_3321889894 = null;

    result_3321889894 = newNode_3321889907(x_3321889893);

  return result_3321889894;

}

function newNode_3321889782(x_3321889784) {
  var result_3321889785 = null;

    var nodes_3321889786 = [];
    nodes_3321889786.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,117,105,108,100,101,114,115]), newNodeFromBaseType_3321889790(x_3321889784.builders)));;
    nodes_3321889786.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,101,102,101,114,114,101,100,66,117,105,108,100,101,114,115]), newNodeFromBaseType_3321889891(x_3321889784.preferredBuilders)));;
    result_3321889785 = {kind: 14, value: [67,101,108,108,66,117,105,108,100,101,114,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321889786, NTI3321889513)};

  return result_3321889785;

}

function newNodeFromBaseType_3321889775(x_3321889777) {
  var result_3321889778 = null;

    result_3321889778 = newNode_3321889782(x_3321889777);

  return result_3321889778;

}

function newNode_3321889767(x_3321889769) {
    var Temporary1;

  var result_3321889770 = null;

    if (!((x_3321889769 == null))) {
    Temporary1 = newNodeFromBaseType_3321889775(x_3321889769);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321889770 = Temporary1;

  return result_3321889770;

}

function newNodeFromBaseType_3321889760(x_3321889762) {
  var result_3321889763 = null;

    result_3321889763 = newNode_3321889767(x_3321889762);

  return result_3321889763;

}

function newNode_3321889226(x_3321889228) {
  var result_3321889229 = null;

    var nodes_3321889230 = [];
    nodes_3321889230.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3321889228.id)));;
    nodes_3321889230.push(newFieldPairNode_3305111712(newNameNode_3305111683([118,101,114,115,105,111,110]), newNodeFromBaseType_3321889256(x_3321889228.version)));;
    nodes_3321889230.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115,101,115]), newNodeFromBaseType_3321889314(x_3321889228.classes)));;
    nodes_3321889230.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,117,105,108,100,101,114]), newNodeFromBaseType_3321889760(x_3321889228.builder)));;
    result_3321889229 = {kind: 14, value: [76,97,110,103,117,97,103,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3321889230, NTI3321889106)};

  return result_3321889229;

}

function newNodeFromBaseType_3321889219(x_3321889221) {
  var result_3321889222 = null;

    result_3321889222 = newNode_3321889226(x_3321889221);

  return result_3321889222;

}

function newNode_3321889211(x_3321889213) {
    var Temporary1;

  var result_3321889214 = null;

    if (!((x_3321889213 == null))) {
    Temporary1 = newNodeFromBaseType_3321889219(x_3321889213);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3321889214 = Temporary1;

  return result_3321889214;

}

function newNodeFromBaseType_3321889204(x_3321889206) {
  var result_3321889207 = null;

    result_3321889207 = newNode_3321889211(x_3321889206);

  return result_3321889207;

}

function HEX3Aanonymous_3321888825(builder_3321888826, node_3321888827) {
  var result_3321888828 = null;

  BeforeRet: {
    var cell_3321888829 = {id: newId_2046820597(), node: node_3321888827, m_type: NTI3338665994, text: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321888828 = cell_3321888829;
    break BeforeRet;
  };

  return result_3321888828;

}

function HEX3Aanonymous_3321888830(builder_3321888831, node_3321888832) {
  var result_3321888833 = null;

  BeforeRet: {
    var cell_3321888834 = {id: newId_2046820597(), node: node_3321888832, m_type: NTI3338665994, text: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321888833 = cell_3321888834;
    break BeforeRet;
  };

  return result_3321888833;

}

function HEX3Aanonymous_3321888835(builder_3321888836, node_3321888837) {
  var result_3321888838 = null;

  BeforeRet: {
    var cell_3321888839 = {id: newId_2046820597(), node: node_3321888837, property: nimCopy(null, IdIntegerLiteralValue_2986344539, NTI2046820355), m_type: NTI3338665995, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321888838 = cell_3321888839;
    break BeforeRet;
  };

  return result_3321888838;

}

function HEX3Aanonymous_3321888840(builder_3321888841, node_3321888842) {
  var result_3321888843 = null;

  BeforeRet: {
    var cell_3321888844 = {id: newId_2046820597(), node: node_3321888842, property: nimCopy(null, IdBoolLiteralValue_2986344535, NTI2046820355), m_type: NTI3338665995, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321888843 = cell_3321888844;
    break BeforeRet;
  };

  return result_3321888843;

}

function HEX3Aanonymous_3321888845(builder_3321888846, node_3321888847) {
  var result_3321888848 = null;

  BeforeRet: {
    var cell_3321888849 = {id: newId_2046820597(), node: node_3321888847, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    add_3338666073(cell_3321888849, {node: node_3321888847, text: [39], style: {noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
    add_3338666073(cell_3321888849, {node: node_3321888847, property: nimCopy(null, IdStringLiteralValue_2986344537, NTI2046820355), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
    add_3338666073(cell_3321888849, {node: node_3321888847, text: [39], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
    result_3321888848 = cell_3321888849;
    break BeforeRet;
  };

  return result_3321888848;

}

function HEX3Aanonymous_3321888850(builder_3321888851, node_3321888852) {
    
function HEX3Aanonymous_3321888855() {
        Label1: {
          var c_3321888859 = null;
          var colontmp__3321890138 = [];
          colontmp__3321890138 = children_3271564002(node_3321888852, IdNodeListChildren_2986344517);
          var i_3321890140 = 0;
          var L_3321890141 = (colontmp__3321890138).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890140 < L_3321890141)) break Label3;
                c_3321888859 = colontmp__3321890138[chckIndx(i_3321890140, 0, (colontmp__3321890138).length - 1)];
                add_3338666073(cell_3321888854, buildCell_3338666913(builder_3321888851, c_3321888859, false));
                i_3321890140 = addInt(i_3321890140, 1);
                if (!(((colontmp__3321890138).length == L_3321890141))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888853 = null;

  BeforeRet: {
    var cell_3321888854 = {id: newId_2046820597(), node: node_3321888852, layout: {kind: 2}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888854.fillChildren = HEX3Aanonymous_3321888855;
    result_3321888853 = cell_3321888854;
    break BeforeRet;
  };

  return result_3321888853;

}

function HEX3Aanonymous_3321888860(builder_3321888861, node_3321888862) {
    
function HEX3Aanonymous_3321888865() {
        Label1: {
          var c_3321888869 = null;
          var colontmp__3321890209 = [];
          colontmp__3321890209 = children_3271564002(node_3321888862, IdBlockChildren_2986344493);
          var i_3321890210 = 0;
          var L_3321890211 = (colontmp__3321890209).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890210 < L_3321890211)) break Label3;
                c_3321888869 = colontmp__3321890209[chckIndx(i_3321890210, 0, (colontmp__3321890209).length - 1)];
                add_3338666073(cell_3321888864, buildCell_3338666913(builder_3321888861, c_3321888869, false));
                i_3321890210 = addInt(i_3321890210, 1);
                if (!(((colontmp__3321890209).length == L_3321890211))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888863 = null;

  BeforeRet: {
    var cell_3321888864 = {id: newId_2046820597(), node: node_3321888862, layout: {kind: 2}, style: {indentChildren: true, onNewLine: false, addNewlineAfter: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888864.fillChildren = HEX3Aanonymous_3321888865;
    result_3321888863 = cell_3321888864;
    break BeforeRet;
  };

  return result_3321888863;

}

function HEX3Aanonymous_3321888870(builder_3321888871, node_3321888872) {
    
function HEX3Aanonymous_3321888875() {
        
function HEX3Aanonymous_3321888876(node_3321888879) {
          var result_3321888882 = false;

            result_3321888882 = hasChild_3271563991(node_3321888879, IdConstDeclType_2986344526);

          return result_3321888882;

        }

        add_3338666073(cell_3321888874, {node: node_3321888872, text: [99,111,110,115,116], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888874, {node: node_3321888872, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888874, {node: node_3321888872, text: [58], isVisible: HEX3Aanonymous_3321888876, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321888886 = null;
          var colontmp__3321890214 = [];
          colontmp__3321890214 = children_3271564002(node_3321888872, IdConstDeclType_2986344526);
          var i_3321890215 = 0;
          var L_3321890216 = (colontmp__3321890214).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890215 < L_3321890216)) break Label3;
                c_3321888886 = colontmp__3321890214[chckIndx(i_3321890215, 0, (colontmp__3321890214).length - 1)];
                add_3338666073(cell_3321888874, buildCell_3338666913(builder_3321888871, c_3321888886, false));
                i_3321890215 = addInt(i_3321890215, 1);
                if (!(((colontmp__3321890214).length == L_3321890216))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888874, {node: node_3321888872, text: [61], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321888890 = null;
          var colontmp__3321890219 = [];
          colontmp__3321890219 = children_3271564002(node_3321888872, IdConstDeclValue_2986344525);
          var i_3321890220 = 0;
          var L_3321890221 = (colontmp__3321890219).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890220 < L_3321890221)) break Label6;
                c_3321888890 = colontmp__3321890219[chckIndx(i_3321890220, 0, (colontmp__3321890219).length - 1)];
                add_3338666073(cell_3321888874, buildCell_3338666913(builder_3321888871, c_3321888890, false));
                i_3321890220 = addInt(i_3321890220, 1);
                if (!(((colontmp__3321890219).length == L_3321890221))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888873 = null;

  BeforeRet: {
    var cell_3321888874 = {id: newId_2046820597(), node: node_3321888872, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888874.fillChildren = HEX3Aanonymous_3321888875;
    result_3321888873 = cell_3321888874;
    break BeforeRet;
  };

  return result_3321888873;

}

function HEX3Aanonymous_3321888909(builder_3321888910, node_3321888911) {
    
function HEX3Aanonymous_3321888914() {
        
function HEX3Aanonymous_3321888915(node_3321888918) {
          var result_3321888921 = false;

            result_3321888921 = hasChild_3271563991(node_3321888918, IdLetDeclType_2986344523);

          return result_3321888921;

        }

        add_3338666073(cell_3321888913, {node: node_3321888911, text: [108,101,116], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888913, {node: node_3321888911, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888913, {node: node_3321888911, text: [58], isVisible: HEX3Aanonymous_3321888915, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321888925 = null;
          var colontmp__3321890228 = [];
          colontmp__3321890228 = children_3271564002(node_3321888911, IdLetDeclType_2986344523);
          var i_3321890229 = 0;
          var L_3321890230 = (colontmp__3321890228).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890229 < L_3321890230)) break Label3;
                c_3321888925 = colontmp__3321890228[chckIndx(i_3321890229, 0, (colontmp__3321890228).length - 1)];
                add_3338666073(cell_3321888913, buildCell_3338666913(builder_3321888910, c_3321888925, false));
                i_3321890229 = addInt(i_3321890229, 1);
                if (!(((colontmp__3321890228).length == L_3321890230))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888913, {node: node_3321888911, text: [61], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321888929 = null;
          var colontmp__3321890233 = [];
          colontmp__3321890233 = children_3271564002(node_3321888911, IdLetDeclValue_2986344522);
          var i_3321890234 = 0;
          var L_3321890235 = (colontmp__3321890233).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890234 < L_3321890235)) break Label6;
                c_3321888929 = colontmp__3321890233[chckIndx(i_3321890234, 0, (colontmp__3321890233).length - 1)];
                add_3338666073(cell_3321888913, buildCell_3338666913(builder_3321888910, c_3321888929, false));
                i_3321890234 = addInt(i_3321890234, 1);
                if (!(((colontmp__3321890233).length == L_3321890235))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888912 = null;

  BeforeRet: {
    var cell_3321888913 = {id: newId_2046820597(), node: node_3321888911, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888913.fillChildren = HEX3Aanonymous_3321888914;
    result_3321888912 = cell_3321888913;
    break BeforeRet;
  };

  return result_3321888912;

}

function HEX3Aanonymous_3321888930(builder_3321888931, node_3321888932) {
    
function HEX3Aanonymous_3321888935() {
        
function HEX3Aanonymous_3321888936(node_3321888939) {
          var result_3321888942 = false;

            result_3321888942 = hasChild_3271563991(node_3321888939, IdVarDeclType_2986344520);

          return result_3321888942;

        }
        
function HEX3Aanonymous_3321888947(node_3321888950) {
          var result_3321888953 = false;

            result_3321888953 = hasChild_3271563991(node_3321888950, IdVarDeclValue_2986344519);

          return result_3321888953;

        }

        add_3338666073(cell_3321888934, {node: node_3321888932, text: [118,97,114], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888934, {node: node_3321888932, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888934, {node: node_3321888932, text: [58], isVisible: HEX3Aanonymous_3321888936, style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321888946 = null;
          var colontmp__3321890238 = [];
          colontmp__3321890238 = children_3271564002(node_3321888932, IdVarDeclType_2986344520);
          var i_3321890239 = 0;
          var L_3321890240 = (colontmp__3321890238).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890239 < L_3321890240)) break Label3;
                c_3321888946 = colontmp__3321890238[chckIndx(i_3321890239, 0, (colontmp__3321890238).length - 1)];
                add_3338666073(cell_3321888934, buildCell_3338666913(builder_3321888931, c_3321888946, false));
                i_3321890239 = addInt(i_3321890239, 1);
                if (!(((colontmp__3321890238).length == L_3321890240))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888934, {node: node_3321888932, text: [61], isVisible: HEX3Aanonymous_3321888947, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321888957 = null;
          var colontmp__3321890243 = [];
          colontmp__3321890243 = children_3271564002(node_3321888932, IdVarDeclValue_2986344519);
          var i_3321890244 = 0;
          var L_3321890245 = (colontmp__3321890243).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890244 < L_3321890245)) break Label6;
                c_3321888957 = colontmp__3321890243[chckIndx(i_3321890244, 0, (colontmp__3321890243).length - 1)];
                add_3338666073(cell_3321888934, buildCell_3338666913(builder_3321888931, c_3321888957, false));
                i_3321890244 = addInt(i_3321890244, 1);
                if (!(((colontmp__3321890243).length == L_3321890245))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888933 = null;

  BeforeRet: {
    var cell_3321888934 = {id: newId_2046820597(), node: node_3321888932, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888934.fillChildren = HEX3Aanonymous_3321888935;
    result_3321888933 = cell_3321888934;
    break BeforeRet;
  };

  return result_3321888933;

}

function HEX3Aanonymous_3321888958(builder_3321888959, node_3321888960) {
    
function HEX3Aanonymous_3321888963() {
        Label1: {
          var c_3321888967 = null;
          var colontmp__3321890248 = [];
          colontmp__3321890248 = children_3271564002(node_3321888960, IdAssignmentTarget_2986344498);
          var i_3321890249 = 0;
          var L_3321890250 = (colontmp__3321890248).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890249 < L_3321890250)) break Label3;
                c_3321888967 = colontmp__3321890248[chckIndx(i_3321890249, 0, (colontmp__3321890248).length - 1)];
                add_3338666073(cell_3321888962, buildCell_3338666913(builder_3321888959, c_3321888967, false));
                i_3321890249 = addInt(i_3321890249, 1);
                if (!(((colontmp__3321890248).length == L_3321890250))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888962, {node: node_3321888960, text: [61], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321888971 = null;
          var colontmp__3321890253 = [];
          colontmp__3321890253 = children_3271564002(node_3321888960, IdAssignmentValue_2986344497);
          var i_3321890254 = 0;
          var L_3321890255 = (colontmp__3321890253).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890254 < L_3321890255)) break Label6;
                c_3321888971 = colontmp__3321890253[chckIndx(i_3321890254, 0, (colontmp__3321890253).length - 1)];
                add_3338666073(cell_3321888962, buildCell_3338666913(builder_3321888959, c_3321888971, false));
                i_3321890254 = addInt(i_3321890254, 1);
                if (!(((colontmp__3321890253).length == L_3321890255))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888961 = null;

  BeforeRet: {
    var cell_3321888962 = {id: newId_2046820597(), node: node_3321888960, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888962.fillChildren = HEX3Aanonymous_3321888963;
    result_3321888961 = cell_3321888962;
    break BeforeRet;
  };

  return result_3321888961;

}

function HEX3Aanonymous_3321888972(builder_3321888973, node_3321888974) {
    
function HEX3Aanonymous_3321888977() {
        
function HEX3Aanonymous_3321888982(node_3321888985) {
          var result_3321888988 = false;

            result_3321888988 = hasChild_3271563991(node_3321888985, IdParameterDeclValue_2986344504);

          return result_3321888988;

        }

        add_3338666073(cell_3321888976, {node: node_3321888974, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888976, {node: node_3321888974, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321888981 = null;
          var colontmp__3321890258 = [];
          colontmp__3321890258 = children_3271564002(node_3321888974, IdParameterDeclType_2986344505);
          var i_3321890259 = 0;
          var L_3321890260 = (colontmp__3321890258).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890259 < L_3321890260)) break Label3;
                c_3321888981 = colontmp__3321890258[chckIndx(i_3321890259, 0, (colontmp__3321890258).length - 1)];
                add_3338666073(cell_3321888976, buildCell_3338666913(builder_3321888973, c_3321888981, false));
                i_3321890259 = addInt(i_3321890259, 1);
                if (!(((colontmp__3321890258).length == L_3321890260))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888976, {node: node_3321888974, text: [61], isVisible: HEX3Aanonymous_3321888982, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321888992 = null;
          var colontmp__3321890263 = [];
          colontmp__3321890263 = children_3271564002(node_3321888974, IdParameterDeclValue_2986344504);
          var i_3321890264 = 0;
          var L_3321890265 = (colontmp__3321890263).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890264 < L_3321890265)) break Label6;
                c_3321888992 = colontmp__3321890263[chckIndx(i_3321890264, 0, (colontmp__3321890263).length - 1)];
                add_3338666073(cell_3321888976, buildCell_3338666913(builder_3321888973, c_3321888992, false));
                i_3321890264 = addInt(i_3321890264, 1);
                if (!(((colontmp__3321890263).length == L_3321890265))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888975 = null;

  BeforeRet: {
    var cell_3321888976 = {id: newId_2046820597(), node: node_3321888974, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888976.fillChildren = HEX3Aanonymous_3321888977;
    result_3321888975 = cell_3321888976;
    break BeforeRet;
  };

  return result_3321888975;

}

function HEX3Aanonymous_3321888993(builder_3321888994, node_3321888995) {
    
function HEX3Aanonymous_3321888998() {
        add_3338666073(cell_3321888997, {node: node_3321888995, text: [102,110], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321888997, {node: node_3321888995, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var i_3321889004 = 0;
          var c_3321889005 = null;
          var colontmp__3321890268 = [];
          colontmp__3321890268 = children_3271564002(node_3321888995, IdFunctionDefinitionParameters_2986344502);
          var i_3321890270 = 0;
          var L_3321890271 = (colontmp__3321890268).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890270 < L_3321890271)) break Label3;
                i_3321889004 = i_3321890270;
                c_3321889005 = colontmp__3321890268[chckIndx(i_3321890270, 0, (colontmp__3321890268).length - 1)];
                if ((0 < i_3321889004)) {
                add_3338666073(cell_3321888997, {node: node_3321888995, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                add_3338666073(cell_3321888997, buildCell_3338666913(builder_3321888994, c_3321889005, false));
                i_3321890270 = addInt(i_3321890270, 1);
                if (!(((colontmp__3321890268).length == L_3321890271))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888997, {node: node_3321888995, text: [41,58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321889009 = null;
          var colontmp__3321890274 = [];
          colontmp__3321890274 = children_3271564002(node_3321888995, IdFunctionDefinitionReturnType_2986344501);
          var i_3321890275 = 0;
          var L_3321890276 = (colontmp__3321890274).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890275 < L_3321890276)) break Label6;
                c_3321889009 = colontmp__3321890274[chckIndx(i_3321890275, 0, (colontmp__3321890274).length - 1)];
                add_3338666073(cell_3321888997, buildCell_3338666913(builder_3321888994, c_3321889009, false));
                i_3321890275 = addInt(i_3321890275, 1);
                if (!(((colontmp__3321890274).length == L_3321890276))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321888997, {node: node_3321888995, text: [61], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label7: {
          var c_3321889013 = null;
          var colontmp__3321890279 = [];
          colontmp__3321890279 = children_3271564002(node_3321888995, IdFunctionDefinitionBody_2986344500);
          var i_3321890280 = 0;
          var L_3321890281 = (colontmp__3321890279).length;
          Label8: {
              Label9: while (true) {
              if (!(i_3321890280 < L_3321890281)) break Label9;
                c_3321889013 = colontmp__3321890279[chckIndx(i_3321890280, 0, (colontmp__3321890279).length - 1)];
                add_3338666073(cell_3321888997, buildCell_3338666913(builder_3321888994, c_3321889013, false));
                i_3321890280 = addInt(i_3321890280, 1);
                if (!(((colontmp__3321890279).length == L_3321890281))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321888996 = null;

  BeforeRet: {
    var cell_3321888997 = {id: newId_2046820597(), node: node_3321888995, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321888997.fillChildren = HEX3Aanonymous_3321888998;
    result_3321888996 = cell_3321888997;
    break BeforeRet;
  };

  return result_3321888996;

}

function HEX3Aanonymous_3321889014(builder_3321889015, node_3321889016) {
    
function HEX3Aanonymous_3321889019() {
        Label1: {
          var c_3321889023 = null;
          var colontmp__3321890284 = [];
          colontmp__3321890284 = children_3271564002(node_3321889016, IdCallFunction_2986344515);
          var i_3321890285 = 0;
          var L_3321890286 = (colontmp__3321890284).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890285 < L_3321890286)) break Label3;
                c_3321889023 = colontmp__3321890284[chckIndx(i_3321890285, 0, (colontmp__3321890284).length - 1)];
                add_3338666073(cell_3321889018, buildCell_3338666913(builder_3321889015, c_3321889023, false));
                i_3321890285 = addInt(i_3321890285, 1);
                if (!(((colontmp__3321890284).length == L_3321890286))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889018, {node: node_3321889016, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var i_3321889029 = 0;
          var c_3321889030 = null;
          var colontmp__3321890289 = [];
          colontmp__3321890289 = children_3271564002(node_3321889016, IdCallArguments_2986344514);
          var i_3321890290 = 0;
          var L_3321890291 = (colontmp__3321890289).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890290 < L_3321890291)) break Label6;
                i_3321889029 = i_3321890290;
                c_3321889030 = colontmp__3321890289[chckIndx(i_3321890290, 0, (colontmp__3321890289).length - 1)];
                if ((0 < i_3321889029)) {
                add_3338666073(cell_3321889018, {node: node_3321889016, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                add_3338666073(cell_3321889018, buildCell_3338666913(builder_3321889015, c_3321889030, false));
                i_3321890290 = addInt(i_3321890290, 1);
                if (!(((colontmp__3321890289).length == L_3321890291))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889018, {node: node_3321889016, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});

      
    }

  var result_3321889017 = null;

  BeforeRet: {
    var cell_3321889018 = {id: newId_2046820597(), node: node_3321889016, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889018.fillChildren = HEX3Aanonymous_3321889019;
    result_3321889017 = cell_3321889018;
    break BeforeRet;
  };

  return result_3321889017;

}

function HEX3Aanonymous_3321889031(builder_3321889032, node_3321889033) {
    
function HEX3Aanonymous_3321889036() {
        add_3338666073(cell_3321889035, {node: node_3321889033, text: [105,102], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321889040 = null;
          var colontmp__3321890294 = [];
          colontmp__3321890294 = children_3271564002(node_3321889033, IdIfExpressionCondition_2986344512);
          var i_3321890295 = 0;
          var L_3321890296 = (colontmp__3321890294).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890295 < L_3321890296)) break Label3;
                c_3321889040 = colontmp__3321890294[chckIndx(i_3321890295, 0, (colontmp__3321890294).length - 1)];
                add_3338666073(cell_3321889035, buildCell_3338666913(builder_3321889032, c_3321889040, false));
                i_3321890295 = addInt(i_3321890295, 1);
                if (!(((colontmp__3321890294).length == L_3321890296))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889035, {node: node_3321889033, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321889044 = null;
          var colontmp__3321890299 = [];
          colontmp__3321890299 = children_3271564002(node_3321889033, IdIfExpressionThenCase_2986344511);
          var i_3321890300 = 0;
          var L_3321890301 = (colontmp__3321890299).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890300 < L_3321890301)) break Label6;
                c_3321889044 = colontmp__3321890299[chckIndx(i_3321890300, 0, (colontmp__3321890299).length - 1)];
                var cc_3321889045 = buildCell_3338666913(builder_3321889032, c_3321889044, false);
                add_3338666073(cell_3321889035, cc_3321889045);
                i_3321890300 = addInt(i_3321890300, 1);
                if (!(((colontmp__3321890299).length == L_3321890301))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label7: {
          var i_3321889051 = 0;
          var c_3321889052 = null;
          var colontmp__3321890304 = [];
          colontmp__3321890304 = children_3271564002(node_3321889033, IdIfExpressionElseCase_2986344510);
          var i_3321890305 = 0;
          var L_3321890306 = (colontmp__3321890304).length;
          Label8: {
              Label9: while (true) {
              if (!(i_3321890305 < L_3321890306)) break Label9;
                i_3321889051 = i_3321890305;
                c_3321889052 = colontmp__3321890304[chckIndx(i_3321890305, 0, (colontmp__3321890304).length - 1)];
                if ((i_3321889051 == 0)) {
                add_3338666073(cell_3321889035, {node: node_3321889033, text: [101,108,115,101,58], style: {onNewLine: true, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                add_3338666073(cell_3321889035, buildCell_3338666913(builder_3321889032, c_3321889052, false));
                i_3321890305 = addInt(i_3321890305, 1);
                if (!(((colontmp__3321890304).length == L_3321890306))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889034 = null;

  BeforeRet: {
    var cell_3321889035 = {id: newId_2046820597(), node: node_3321889033, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889035.fillChildren = HEX3Aanonymous_3321889036;
    result_3321889034 = cell_3321889035;
    break BeforeRet;
  };

  return result_3321889034;

}

function HEX3Aanonymous_3321889053(builder_3321889054, node_3321889055) {
    
function HEX3Aanonymous_3321889058() {
        add_3338666073(cell_3321889057, {node: node_3321889055, text: [119,104,105,108,101], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321889062 = null;
          var colontmp__3321890309 = [];
          colontmp__3321890309 = children_3271564002(node_3321889055, IdWhileExpressionCondition_2986344508);
          var i_3321890310 = 0;
          var L_3321890311 = (colontmp__3321890309).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890310 < L_3321890311)) break Label3;
                c_3321889062 = colontmp__3321890309[chckIndx(i_3321890310, 0, (colontmp__3321890309).length - 1)];
                add_3338666073(cell_3321889057, buildCell_3338666913(builder_3321889054, c_3321889062, false));
                i_3321890310 = addInt(i_3321890310, 1);
                if (!(((colontmp__3321890309).length == L_3321890311))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889057, {node: node_3321889055, text: [58], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321889066 = null;
          var colontmp__3321890314 = [];
          colontmp__3321890314 = children_3271564002(node_3321889055, IdWhileExpressionBody_2986344507);
          var i_3321890315 = 0;
          var L_3321890316 = (colontmp__3321890314).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890315 < L_3321890316)) break Label6;
                c_3321889066 = colontmp__3321890314[chckIndx(i_3321890315, 0, (colontmp__3321890314).length - 1)];
                add_3338666073(cell_3321889057, buildCell_3338666913(builder_3321889054, c_3321889066, false));
                i_3321890315 = addInt(i_3321890315, 1);
                if (!(((colontmp__3321890314).length == L_3321890316))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889056 = null;

  BeforeRet: {
    var cell_3321889057 = {id: newId_2046820597(), node: node_3321889055, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889057.fillChildren = HEX3Aanonymous_3321889058;
    result_3321889056 = cell_3321889057;
    break BeforeRet;
  };

  return result_3321889056;

}

function HEX3Aanonymous_3321889067(builder_3321889068, node_3321889069) {
      var Temporary1;

  var result_3321889070 = null;

  BeforeRet: {
    var cell_3321889071 = {id: newId_2046820597(), node: node_3321889069, reference: nimCopy(null, IdNodeReferenceTarget_2986344529, NTI2046820355), property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665996, child: null, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
      var oHEX60gensym2_3321889074 = resolveReference_3271564076(node_3321889069, IdNodeReferenceTarget_2986344529);
      if (!isSome_3338667064(oHEX60gensym2_3321889074)) Temporary1 = false; else {        var targetNode_3321889097 = get_3338667084(oHEX60gensym2_3321889074);
        Temporary1 = true;      }    if (Temporary1) {
    cell_3321889071.child = {id: newId_2046820597(), node: targetNode_3321889097, property: nimCopy(null, IdINamedName_2986344495, NTI2046820355), m_type: NTI3338665995, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    }
    
    result_3321889070 = cell_3321889071;
    break BeforeRet;
  };

  return result_3321889070;

}

function HEX3Aanonymous_3321889098(builder_3321889099, node_3321889100) {
    
function HEX3Aanonymous_3321889103() {
        Label1: {
          var c_3321889107 = null;
          var colontmp__3321890319 = [];
          colontmp__3321890319 = children_3271564002(node_3321889100, IdBinaryExpressionLeft_2986344531);
          var i_3321890320 = 0;
          var L_3321890321 = (colontmp__3321890319).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890320 < L_3321890321)) break Label3;
                c_3321889107 = colontmp__3321890319[chckIndx(i_3321890320, 0, (colontmp__3321890319).length - 1)];
                add_3338666073(cell_3321889102, buildCell_3338666913(builder_3321889099, c_3321889107, false));
                i_3321890320 = addInt(i_3321890320, 1);
                if (!(((colontmp__3321890319).length == L_3321890321))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889102, {node: node_3321889100, m_type: NTI3338665997, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321889111 = null;
          var colontmp__3321890324 = [];
          colontmp__3321890324 = children_3271564002(node_3321889100, IdBinaryExpressionRight_2986344532);
          var i_3321890325 = 0;
          var L_3321890326 = (colontmp__3321890324).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890325 < L_3321890326)) break Label6;
                c_3321889111 = colontmp__3321890324[chckIndx(i_3321890325, 0, (colontmp__3321890324).length - 1)];
                add_3338666073(cell_3321889102, buildCell_3338666913(builder_3321889099, c_3321889111, false));
                i_3321890325 = addInt(i_3321890325, 1);
                if (!(((colontmp__3321890324).length == L_3321890326))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889101 = null;

  BeforeRet: {
    var cell_3321889102 = {id: newId_2046820597(), node: node_3321889100, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889102.fillChildren = HEX3Aanonymous_3321889103;
    result_3321889101 = cell_3321889102;
    break BeforeRet;
  };

  return result_3321889101;

}

function HEX3Aanonymous_3321889130(builder_3321889131, node_3321889132) {
    
function HEX3Aanonymous_3321889135() {
        Label1: {
          var c_3321889139 = null;
          var colontmp__3321890329 = [];
          colontmp__3321890329 = children_3271564002(node_3321889132, IdBinaryExpressionLeft_2986344531);
          var i_3321890330 = 0;
          var L_3321890331 = (colontmp__3321890329).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890330 < L_3321890331)) break Label3;
                c_3321889139 = colontmp__3321890329[chckIndx(i_3321890330, 0, (colontmp__3321890329).length - 1)];
                add_3338666073(cell_3321889134, buildCell_3338666913(builder_3321889131, c_3321889139, false));
                i_3321890330 = addInt(i_3321890330, 1);
                if (!(((colontmp__3321890329).length == L_3321890331))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889134, {node: node_3321889132, text: [45,45,45,45,45,45], m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label4: {
          var c_3321889143 = null;
          var colontmp__3321890334 = [];
          colontmp__3321890334 = children_3271564002(node_3321889132, IdBinaryExpressionRight_2986344532);
          var i_3321890335 = 0;
          var L_3321890336 = (colontmp__3321890334).length;
          Label5: {
              Label6: while (true) {
              if (!(i_3321890335 < L_3321890336)) break Label6;
                c_3321889143 = colontmp__3321890334[chckIndx(i_3321890335, 0, (colontmp__3321890334).length - 1)];
                add_3338666073(cell_3321889134, buildCell_3338666913(builder_3321889131, c_3321889143, false));
                i_3321890335 = addInt(i_3321890335, 1);
                if (!(((colontmp__3321890334).length == L_3321890336))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889133 = null;

  BeforeRet: {
    var cell_3321889134 = {id: newId_2046820597(), node: node_3321889132, layout: {kind: 2}, inline: true, m_type: NTI3338665992, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889134.fillChildren = HEX3Aanonymous_3321889135;
    result_3321889133 = cell_3321889134;
    break BeforeRet;
  };

  return result_3321889133;

}

function HEX3Aanonymous_3321889144(builder_3321889145, node_3321889146) {
    
function HEX3Aanonymous_3321889149() {
        add_3338666073(cell_3321889148, {node: node_3321889146, style: {noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceLeft: false}, m_type: NTI3338665997, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var c_3321889153 = null;
          var colontmp__3321890339 = [];
          colontmp__3321890339 = children_3271564002(node_3321889146, IdUnaryExpressionChild_2986344481);
          var i_3321890340 = 0;
          var L_3321890341 = (colontmp__3321890339).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890340 < L_3321890341)) break Label3;
                c_3321889153 = colontmp__3321890339[chckIndx(i_3321890340, 0, (colontmp__3321890339).length - 1)];
                add_3338666073(cell_3321889148, buildCell_3338666913(builder_3321889145, c_3321889153, false));
                i_3321890340 = addInt(i_3321890340, 1);
                if (!(((colontmp__3321890339).length == L_3321890341))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

  var result_3321889147 = null;

  BeforeRet: {
    var cell_3321889148 = {id: newId_2046820597(), node: node_3321889146, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889148.fillChildren = HEX3Aanonymous_3321889149;
    result_3321889147 = cell_3321889148;
    break BeforeRet;
  };

  return result_3321889147;

}

function HEX3Aanonymous_3321889154(builder_3321889155, node_3321889156) {
  var result_3321889157 = null;

  BeforeRet: {
    var cell_3321889158 = {id: newId_2046820597(), node: node_3321889156, m_type: NTI3338665997, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321889157 = cell_3321889158;
    break BeforeRet;
  };

  return result_3321889157;

}

function HEX3Aanonymous_3321889159(builder_3321889160, node_3321889161) {
  var result_3321889162 = null;

  BeforeRet: {
    var cell_3321889163 = {id: newId_2046820597(), node: node_3321889161, m_type: NTI3338665997, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321889162 = cell_3321889163;
    break BeforeRet;
  };

  return result_3321889162;

}

function HEX3Aanonymous_3321889164(builder_3321889165, node_3321889166) {
  var result_3321889167 = null;

  BeforeRet: {
    var cell_3321889168 = {id: newId_2046820597(), node: node_3321889166, m_type: NTI3338665997, parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    result_3321889167 = cell_3321889168;
    break BeforeRet;
  };

  return result_3321889167;

}

function HEX3Aanonymous_3321889169(builder_3321889170, node_3321889171) {
    
function HEX3Aanonymous_3321889174() {
        add_3338666073(cell_3321889173, {node: node_3321889171, m_type: NTI3338665997, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321889173, {node: node_3321889171, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var i_3321889180 = 0;
          var c_3321889181 = null;
          var colontmp__3321890344 = [];
          colontmp__3321890344 = children_3271564002(node_3321889171, IdPrintArguments_2986344478);
          var i_3321890345 = 0;
          var L_3321890346 = (colontmp__3321890344).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890345 < L_3321890346)) break Label3;
                i_3321889180 = i_3321890345;
                c_3321889181 = colontmp__3321890344[chckIndx(i_3321890345, 0, (colontmp__3321890344).length - 1)];
                if ((0 < i_3321889180)) {
                add_3338666073(cell_3321889173, {node: node_3321889171, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                add_3338666073(cell_3321889173, buildCell_3338666913(builder_3321889170, c_3321889181, false));
                i_3321890345 = addInt(i_3321890345, 1);
                if (!(((colontmp__3321890344).length == L_3321890346))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889173, {node: node_3321889171, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});

      
    }

  var result_3321889172 = null;

  BeforeRet: {
    var cell_3321889173 = {id: newId_2046820597(), node: node_3321889171, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889173.fillChildren = HEX3Aanonymous_3321889174;
    result_3321889172 = cell_3321889173;
    break BeforeRet;
  };

  return result_3321889172;

}

function HEX3Aanonymous_3321889182(builder_3321889183, node_3321889184) {
    
function HEX3Aanonymous_3321889187() {
        add_3338666073(cell_3321889186, {node: node_3321889184, m_type: NTI3338665997, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        add_3338666073(cell_3321889186, {node: node_3321889184, text: [40], style: {noSpaceLeft: true, noSpaceRight: true, onNewLine: false, addNewlineAfter: false, indentChildren: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
        Label1: {
          var i_3321889193 = 0;
          var c_3321889194 = null;
          var colontmp__3321890349 = [];
          colontmp__3321890349 = children_3271564002(node_3321889184, IdBuildArguments_2986344479);
          var i_3321890350 = 0;
          var L_3321890351 = (colontmp__3321890349).length;
          Label2: {
              Label3: while (true) {
              if (!(i_3321890350 < L_3321890351)) break Label3;
                i_3321889193 = i_3321890350;
                c_3321889194 = colontmp__3321890349[chckIndx(i_3321890350, 0, (colontmp__3321890349).length - 1)];
                if ((0 < i_3321889193)) {
                add_3338666073(cell_3321889186, {node: node_3321889184, text: [44], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});
                }
                
                add_3338666073(cell_3321889186, buildCell_3338666913(builder_3321889183, c_3321889194, false));
                i_3321890350 = addInt(i_3321890350, 1);
                if (!(((colontmp__3321890349).length == L_3321890351))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        add_3338666073(cell_3321889186, {node: node_3321889184, text: [41], style: {noSpaceLeft: true, onNewLine: false, addNewlineAfter: false, indentChildren: false, noSpaceRight: false}, m_type: NTI3338665994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false});

      
    }

  var result_3321889185 = null;

  BeforeRet: {
    var cell_3321889186 = {id: newId_2046820597(), node: node_3321889184, layout: {kind: 1}, m_type: NTI3338665992, inline: false, children: [], parent: null, line: 0, fillChildren: null, filled: false, isVisible: null, style: null, disableSelection: false, increaseIndentBefore: false, decreaseIndentBefore: false, increaseIndentAfter: false, decreaseIndentAfter: false};
    cell_3321889186.fillChildren = HEX3Aanonymous_3321889187;
    result_3321889185 = cell_3321889186;
    break BeforeRet;
  };

  return result_3321889185;

}
var typeClass_3321888779 = newNodeClass_3271563384(IdType_2986344473, [84,121,112,101], [], null, [], true, false, [], [], []);
var stringTypeClass_3321888780 = newNodeClass_3271563384(IdString_2986344461, [83,116,114,105,110,103,84,121,112,101], [115,116,114,105,110,103], typeClass_3321888779, [], false, false, [], [], []);
var intTypeClass_3321888781 = newNodeClass_3271563384(IdInt_2986344460, [73,110,116,84,121,112,101], [105,110,116], typeClass_3321888779, [], false, false, [], [], []);
var voidTypeClass_3321888782 = newNodeClass_3271563384(IdVoid_2986344462, [86,111,105,100,84,121,112,101], [118,111,105,100], typeClass_3321888779, [], false, false, [], [], []);
var functionTypeClass_3321888783 = newNodeClass_3271563384(IdFunctionType_2986344475, [70,117,110,99,116,105,111,110,84,121,112,101], [], typeClass_3321888779, [], false, false, [], [{id: nimCopy(null, IdFunctionTypeReturnType_2986344476, NTI2046820355), role: [114,101,116,117,114,110,84,121,112,101], class: id_3271557318(typeClass_3321888779), count: 0}, {id: nimCopy(null, IdFunctionTypeParameterTypes_2986344477, NTI2046820355), role: [112,97,114,97,109,101,116,101,114,84,121,112,101,115], class: id_3271557318(typeClass_3321888779), count: 3}], []);
var namedInterface_3321888784 = newNodeClass_3271563384(IdINamed_2986344496, [73,78,97,109,101,100], [], null, [], true, true, [{id: nimCopy(null, IdINamedName_2986344495, NTI2046820355), role: [110,97,109,101], typ: 1}], [], []);
var expressionClass_3321888785 = newNodeClass_3271563384(IdExpression_2986344534, [69,120,112,114,101,115,115,105,111,110], [], null, [], true, false, [], [], []);
var binaryExpressionClass_3321888786 = newNodeClass_3271563384(IdBinaryExpression_2986344533, [66,105,110,97,114,121,69,120,112,114,101,115,115,105,111,110], [], expressionClass_3321888785, [], true, false, [], [{id: nimCopy(null, IdBinaryExpressionLeft_2986344531, NTI2046820355), role: [108,101,102,116], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdBinaryExpressionRight_2986344532, NTI2046820355), role: [114,105,103,104,116], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var unaryExpressionClass_3321888787 = newNodeClass_3271563384(IdUnaryExpression_2986344480, [66,105,110,97,114,121,69,120,112,114,101,115,115,105,111,110], [], expressionClass_3321888785, [], true, false, [], [{id: nimCopy(null, IdUnaryExpressionChild_2986344481, NTI2046820355), role: [99,104,105,108,100], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var emptyLineClass_3321888788 = newNodeClass_3271563384(IdEmptyLine_2986344492, [69,109,112,116,121,76,105,110,101], [], expressionClass_3321888785, [], false, false, [], [], []);
var addExpressionClass_3321888789 = newNodeClass_3271563384(IdAdd_2986344451, [66,105,110,97,114,121,65,100,100,69,120,112,114,101,115,115,105,111,110], [43], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var subExpressionClass_3321888790 = newNodeClass_3271563384(IdSub_2986344452, [66,105,110,97,114,121,83,117,98,69,120,112,114,101,115,115,105,111,110], [45], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var mulExpressionClass_3321888791 = newNodeClass_3271563384(IdMul_2986344453, [66,105,110,97,114,121,77,117,108,69,120,112,114,101,115,115,105,111,110], [42], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var divExpressionClass_3321888792 = newNodeClass_3271563384(IdDiv_2986344454, [66,105,110,97,114,121,68,105,118,69,120,112,114,101,115,115,105,111,110], [47], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var modExpressionClass_3321888793 = newNodeClass_3271563384(IdMod_2986344455, [66,105,110,97,114,121,77,111,100,69,120,112,114,101,115,115,105,111,110], [37], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var appendStringExpressionClass_3321888794 = newNodeClass_3271563384(IdAppendString_2986344459, [66,105,110,97,114,121,65,112,112,101,110,100,83,116,114,105,110,103,69,120,112,114,101,115,115,105,111,110], [38], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var lessExpressionClass_3321888795 = newNodeClass_3271563384(IdLess_2986344463, [66,105,110,97,114,121,76,101,115,115,69,120,112,114,101,115,115,105,111,110], [60], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var lessEqualExpressionClass_3321888796 = newNodeClass_3271563384(IdLessEqual_2986344464, [66,105,110,97,114,121,76,101,115,115,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [60,61], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var greaterExpressionClass_3321888797 = newNodeClass_3271563384(IdGreater_2986344465, [66,105,110,97,114,121,71,114,101,97,116,101,114,69,120,112,114,101,115,115,105,111,110], [62], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var greaterEqualExpressionClass_3321888798 = newNodeClass_3271563384(IdGreaterEqual_2986344466, [66,105,110,97,114,121,71,114,101,97,116,101,114,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [62,61], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var equalExpressionClass_3321888799 = newNodeClass_3271563384(IdEqual_2986344467, [66,105,110,97,114,121,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [61,61], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var notEqualExpressionClass_3321888800 = newNodeClass_3271563384(IdNotEqual_2986344468, [66,105,110,97,114,121,78,111,116,69,113,117,97,108,69,120,112,114,101,115,115,105,111,110], [33,61], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var andExpressionClass_3321888801 = newNodeClass_3271563384(IdAnd_2986344469, [66,105,110,97,114,121,65,110,100,69,120,112,114,101,115,115,105,111,110], [97,110,100], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var orExpressionClass_3321888802 = newNodeClass_3271563384(IdOr_2986344470, [66,105,110,97,114,121,79,114,69,120,112,114,101,115,115,105,111,110], [111,114], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var orderExpressionClass_3321888803 = newNodeClass_3271563384(IdOrder_2986344471, [66,105,110,97,114,121,79,114,100,101,114,69,120,112,114,101,115,115,105,111,110], [60,61,62], binaryExpressionClass_3321888786, [], false, false, [], [], []);
var negateExpressionClass_3321888804 = newNodeClass_3271563384(IdNegate_2986344456, [85,110,97,114,121,78,101,103,97,116,101,69,120,112,114,101,115,115,105,111,110], [45], unaryExpressionClass_3321888787, [], false, false, [], [], []);
var notExpressionClass_3321888805 = newNodeClass_3271563384(IdNot_2986344457, [85,110,97,114,121,78,111,116,69,120,112,114,101,115,115,105,111,110], [33], unaryExpressionClass_3321888787, [], false, false, [], [], []);
var printExpressionClass_3321888806 = newNodeClass_3271563384(IdPrint_2986344450, [80,114,105,110,116,69,120,112,114,101,115,115,105,111,110], [112,114,105,110,116], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdPrintArguments_2986344478, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557318(expressionClass_3321888785), count: 3}], []);
var buildExpressionClass_3321888807 = newNodeClass_3271563384(IdBuildString_2986344472, [66,117,105,108,100,69,120,112,114,101,115,115,105,111,110], [98,117,105,108,100], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdBuildArguments_2986344479, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557318(expressionClass_3321888785), count: 3}], []);
var emptyClass_3321888808 = newNodeClass_3271563384(IdEmpty_2986344528, [69,109,112,116,121], [], expressionClass_3321888785, [], false, false, [], [], []);
var nodeReferenceClass_3321888809 = newNodeClass_3271563384(IdNodeReference_2986344530, [78,111,100,101,82,101,102,101,114,101,110,99,101], [114,101,102], expressionClass_3321888785, [], false, false, [], [], [{id: nimCopy(null, IdNodeReferenceTarget_2986344529, NTI2046820355), role: [116,97,114,103,101,116], class: id_3271557318(expressionClass_3321888785)}]);
var numberLiteralClass_3321888810 = newNodeClass_3271563384(IdIntegerLiteral_2986344540, [73,110,116,101,103,101,114,76,105,116,101,114,97,108], [105,110,116], expressionClass_3321888785, [], false, false, [{id: nimCopy(null, IdIntegerLiteralValue_2986344539, NTI2046820355), role: [118,97,108,117,101], typ: 0}], [], []);
var stringLiteralClass_3321888811 = newNodeClass_3271563384(IdStringLiteral_2986344538, [83,116,114,105,110,103,76,105,116,101,114,97,108], [115,116,114,105,110,103], expressionClass_3321888785, [], false, false, [{id: nimCopy(null, IdStringLiteralValue_2986344537, NTI2046820355), role: [118,97,108,117,101], typ: 1}], [], []);
var boolLiteralClass_3321888812 = newNodeClass_3271563384(IdBoolLiteral_2986344536, [66,111,111,108,76,105,116,101,114,97,108], [98,111,111,108], expressionClass_3321888785, [], false, false, [{id: nimCopy(null, IdBoolLiteralValue_2986344535, NTI2046820355), role: [118,97,108,117,101], typ: 2}], [], []);
var constDeclClass_3321888813 = newNodeClass_3271563384(IdConstDecl_2986344527, [67,111,110,115,116,68,101,99,108], [99,111,110,115,116], expressionClass_3321888785, [namedInterface_3321888784], false, false, [], [{id: nimCopy(null, IdConstDeclType_2986344526, NTI2046820355), role: [116,121,112,101], class: id_3271557318(expressionClass_3321888785), count: 2}, {id: nimCopy(null, IdConstDeclValue_2986344525, NTI2046820355), role: [118,97,108,117,101], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var letDeclClass_3321888814 = newNodeClass_3271563384(IdLetDecl_2986344524, [76,101,116,68,101,99,108], [108,101,116], expressionClass_3321888785, [namedInterface_3321888784], false, false, [], [{id: nimCopy(null, IdLetDeclType_2986344523, NTI2046820355), role: [116,121,112,101], class: id_3271557318(expressionClass_3321888785), count: 2}, {id: nimCopy(null, IdLetDeclValue_2986344522, NTI2046820355), role: [118,97,108,117,101], class: id_3271557318(expressionClass_3321888785), count: 2}], []);
var varDeclClass_3321888815 = newNodeClass_3271563384(IdVarDecl_2986344521, [86,97,114,68,101,99,108], [118,97,114], expressionClass_3321888785, [namedInterface_3321888784], false, false, [], [{id: nimCopy(null, IdVarDeclType_2986344520, NTI2046820355), role: [116,121,112,101], class: id_3271557318(expressionClass_3321888785), count: 2}, {id: nimCopy(null, IdVarDeclValue_2986344519, NTI2046820355), role: [118,97,108,117,101], class: id_3271557318(expressionClass_3321888785), count: 2}], []);
var nodeListClass_3321888816 = newNodeClass_3271563384(IdNodeList_2986344518, [78,111,100,101,76,105,115,116], [], null, [], false, false, [], [{id: nimCopy(null, IdNodeListChildren_2986344517, NTI2046820355), role: [99,104,105,108,100,114,101,110], class: id_3271557318(expressionClass_3321888785), count: 3}], []);
var blockClass_3321888817 = newNodeClass_3271563384(IdBlock_2986344494, [66,108,111,99,107], [], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdBlockChildren_2986344493, NTI2046820355), role: [99,104,105,108,100,114,101,110], class: id_3271557318(expressionClass_3321888785), count: 3}], []);
var callClass_3321888818 = newNodeClass_3271563384(IdCall_2986344516, [67,97,108,108], [], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdCallFunction_2986344515, NTI2046820355), role: [102,117,110,99,116,105,111,110], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdCallArguments_2986344514, NTI2046820355), role: [97,114,103,117,109,101,110,116,115], class: id_3271557318(expressionClass_3321888785), count: 3}], []);
var ifClass_3321888819 = newNodeClass_3271563384(IdIfExpression_2986344513, [73,102,69,120,112,114,101,115,115,105,111,110], [105,102], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdIfExpressionCondition_2986344512, NTI2046820355), role: [99,111,110,100,105,116,105,111,110], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdIfExpressionThenCase_2986344511, NTI2046820355), role: [116,104,101,110,67,97,115,101], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdIfExpressionElseCase_2986344510, NTI2046820355), role: [101,108,115,101,67,97,115,101], class: id_3271557318(expressionClass_3321888785), count: 2}], []);
var whileClass_3321888820 = newNodeClass_3271563384(IdWhileExpression_2986344509, [87,104,105,108,101,69,120,112,114,101,115,115,105,111,110], [119,104,105,108,101], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdWhileExpressionCondition_2986344508, NTI2046820355), role: [99,111,110,100,105,116,105,111,110], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdWhileExpressionBody_2986344507, NTI2046820355), role: [98,111,100,121], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var parameterDeclClass_3321888821 = newNodeClass_3271563384(IdParameterDecl_2986344506, [80,97,114,97,109,101,116,101,114,68,101,99,108], [112,97,114,97,109,101,116,101,114], expressionClass_3321888785, [namedInterface_3321888784], false, false, [], [{id: nimCopy(null, IdParameterDeclType_2986344505, NTI2046820355), role: [116,121,112,101], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdParameterDeclValue_2986344504, NTI2046820355), role: [118,97,108,117,101], class: id_3271557318(expressionClass_3321888785), count: 2}], []);
var functionDefinitionClass_3321888822 = newNodeClass_3271563384(IdFunctionDefinition_2986344503, [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdFunctionDefinitionParameters_2986344502, NTI2046820355), role: [112,97,114,97,109,101,116,101,114,115], class: id_3271557318(parameterDeclClass_3321888821), count: 3}, {id: nimCopy(null, IdFunctionDefinitionReturnType_2986344501, NTI2046820355), role: [114,101,116,117,114,110,84,121,112,101], class: id_3271557318(expressionClass_3321888785), count: 2}, {id: nimCopy(null, IdFunctionDefinitionBody_2986344500, NTI2046820355), role: [98,111,100,121], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var assignmentClass_3321888823 = newNodeClass_3271563384(IdAssignment_2986344499, [65,115,115,105,103,110,109,101,110,116], [61], expressionClass_3321888785, [], false, false, [], [{id: nimCopy(null, IdAssignmentTarget_2986344498, NTI2046820355), role: [116,97,114,103,101,116], class: id_3271557318(expressionClass_3321888785), count: 0}, {id: nimCopy(null, IdAssignmentValue_2986344497, NTI2046820355), role: [118,97,108,117,101], class: id_3271557318(expressionClass_3321888785), count: 0}], []);
var builder_3321888824 = [newCellBuilder_3271564852()];
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(emptyLineClass_3321888788), idNone_2046820633(), HEX3Aanonymous_3321888825);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(emptyClass_3321888808), idNone_2046820633(), HEX3Aanonymous_3321888830);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(numberLiteralClass_3321888810), idNone_2046820633(), HEX3Aanonymous_3321888835);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(boolLiteralClass_3321888812), idNone_2046820633(), HEX3Aanonymous_3321888840);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(stringLiteralClass_3321888811), idNone_2046820633(), HEX3Aanonymous_3321888845);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(nodeListClass_3321888816), idNone_2046820633(), HEX3Aanonymous_3321888850);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(blockClass_3321888817), idNone_2046820633(), HEX3Aanonymous_3321888860);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(constDeclClass_3321888813), idNone_2046820633(), HEX3Aanonymous_3321888870);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(letDeclClass_3321888814), idNone_2046820633(), HEX3Aanonymous_3321888909);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(varDeclClass_3321888815), idNone_2046820633(), HEX3Aanonymous_3321888930);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(assignmentClass_3321888823), idNone_2046820633(), HEX3Aanonymous_3321888958);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(parameterDeclClass_3321888821), idNone_2046820633(), HEX3Aanonymous_3321888972);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(functionDefinitionClass_3321888822), idNone_2046820633(), HEX3Aanonymous_3321888993);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(callClass_3321888818), idNone_2046820633(), HEX3Aanonymous_3321889014);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(ifClass_3321888819), idNone_2046820633(), HEX3Aanonymous_3321889031);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(whileClass_3321888820), idNone_2046820633(), HEX3Aanonymous_3321889053);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(nodeReferenceClass_3321888809), idNone_2046820633(), HEX3Aanonymous_3321889067);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(binaryExpressionClass_3321888786), idNone_2046820633(), HEX3Aanonymous_3321889098);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(divExpressionClass_3321888792), idNone_2046820633(), HEX3Aanonymous_3321889130);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(unaryExpressionClass_3321888787), idNone_2046820633(), HEX3Aanonymous_3321889144);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(stringTypeClass_3321888780), idNone_2046820633(), HEX3Aanonymous_3321889154);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(voidTypeClass_3321888782), idNone_2046820633(), HEX3Aanonymous_3321889159);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(intTypeClass_3321888781), idNone_2046820633(), HEX3Aanonymous_3321889164);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(printExpressionClass_3321888806), idNone_2046820633(), HEX3Aanonymous_3321889169);
addBuilderFor_3271564866(builder_3321888824[0], id_3271557318(buildExpressionClass_3321888807), idNone_2046820633(), HEX3Aanonymous_3321889182);
var baseLanguage_3321889199 = newLanguage_3271557612(IdBaseLanguage_2986344474, [namedInterface_3321888784, typeClass_3321888779, stringTypeClass_3321888780, intTypeClass_3321888781, voidTypeClass_3321888782, functionTypeClass_3321888783, expressionClass_3321888785, binaryExpressionClass_3321888786, unaryExpressionClass_3321888787, emptyLineClass_3321888788, numberLiteralClass_3321888810, stringLiteralClass_3321888811, boolLiteralClass_3321888812, nodeReferenceClass_3321888809, emptyClass_3321888808, constDeclClass_3321888813, letDeclClass_3321888814, varDeclClass_3321888815, nodeListClass_3321888816, blockClass_3321888817, callClass_3321888818, ifClass_3321888819, whileClass_3321888820, parameterDeclClass_3321888821, functionDefinitionClass_3321888822, assignmentClass_3321888823, addExpressionClass_3321888789, subExpressionClass_3321888790, mulExpressionClass_3321888791, divExpressionClass_3321888792, modExpressionClass_3321888793, lessExpressionClass_3321888795, lessEqualExpressionClass_3321888796, greaterExpressionClass_3321888797, greaterEqualExpressionClass_3321888798, equalExpressionClass_3321888799, notEqualExpressionClass_3321888800, andExpressionClass_3321888801, orExpressionClass_3321888802, orderExpressionClass_3321888803, negateExpressionClass_3321888804, notExpressionClass_3321888805, appendStringExpressionClass_3321888794, printExpressionClass_3321888806, buildExpressionClass_3321888807], builder_3321888824[0]);
printNodes_3305112157([newTopPairNode_3305111686(newNameNode_3305111683([98,97,115,101,76,97,110,103,117,97,103,101]), newNodeFromBaseType_3321889204(baseLanguage_3321889199))]);

function newProject_3271557589() {
  var result_3271557590 = null;

    result_3271557590 = ({models: ({data: [], counter: 0}), builder: null});

  return result_3271557590;

}
var project_3254779953 = [newProject_3271557589()];

function initTable_3254780275(initialSize_3254780278) {
  var result_3254780284 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_3254780286 = slotsNeeded_1308622891(chckRange(initialSize_3254780278, 0, 2147483647));
    result_3254780284.counter = 0;
    result_3254780284.data = new Array(chckRange(correctSizeHEX60gensym14_3254780286, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_3254780286, 0, 2147483647) ; ++i) { result_3254780284.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }
  return result_3254780284;

}

function hash_3254780435(x_3254780437) {
  var result_3254780438 = 0;

    result_3254780438 = hashWangYi1_1325400244(x_3254780437);

  return result_3254780438;

}

function rawGet_3254780428(t_3254780431, key_3254780432, hc_3254780433, hc_3254780433_Idx) {
  var result_3254780434 = 0;

  BeforeRet: {
    hc_3254780433[hc_3254780433_Idx] = hash_3254780435(key_3254780432);
    if ((hc_3254780433[hc_3254780433_Idx] == 0)) {
    hc_3254780433[hc_3254780433_Idx] = 314159265;
    }
    
    if (((t_3254780431.data).length == 0)) {
    result_3254780434 = -1;
    break BeforeRet;
    }
    
    var h_3254780511 = (hc_3254780433[hc_3254780433_Idx] & (t_3254780431.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254780431.data[chckIndx(h_3254780511, 0, (t_3254780431.data).length - 1)].Field0)) break Label2;
          if (((t_3254780431.data[chckIndx(h_3254780511, 0, (t_3254780431.data).length - 1)].Field0 == hc_3254780433[hc_3254780433_Idx]) && (t_3254780431.data[chckIndx(h_3254780511, 0, (t_3254780431.data).length - 1)].Field1 == key_3254780432))) {
          result_3254780434 = h_3254780511;
          break BeforeRet;
          }
          
          h_3254780511 = nextTry_1308622883(h_3254780511, (t_3254780431.data).length - 1);
        }
    };
    result_3254780434 = subInt(-1, h_3254780511);
  };

  return result_3254780434;

}

function mustRehash_3254780906(t_3254780908) {
  var result_3254780909 = false;

    if (!((t_3254780908.counter < (t_3254780908.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254780909 = ((mulInt((t_3254780908.data).length, 2) < mulInt(t_3254780908.counter, 3)) || (subInt((t_3254780908.data).length, t_3254780908.counter) < 4));

  return result_3254780909;

}

function rawInsert_3254781515(t_3254781519, data_3254781520, data_3254781520_Idx, key_3254781521, val_3254781522, hc_3254781523, h_3254781524) {
    data_3254781520[data_3254781520_Idx][chckIndx(h_3254781524, 0, (data_3254781520[data_3254781520_Idx]).length - 1)].Field1 = key_3254781521;
    data_3254781520[data_3254781520_Idx][chckIndx(h_3254781524, 0, (data_3254781520[data_3254781520_Idx]).length - 1)].Field2 = nimCopy(data_3254781520[data_3254781520_Idx][chckIndx(h_3254781524, 0, (data_3254781520[data_3254781520_Idx]).length - 1)].Field2, val_3254781522, NTI3254780158);
    data_3254781520[data_3254781520_Idx][chckIndx(h_3254781524, 0, (data_3254781520[data_3254781520_Idx]).length - 1)].Field0 = hc_3254781523;

  
}

function enlarge_3254781109(t_3254781112) {
    var n_3254781115 = [];
    n_3254781115 = new Array(chckRange(mulInt((t_3254781112.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254781112.data).length, 2), 0, 2147483647) ; ++i) { n_3254781115[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }    var Temporary1 = t_3254781112.data; t_3254781112.data = n_3254781115; n_3254781115 = Temporary1;    Label2: {
      var i_3254781195 = 0;
      var colontmp__3254783804 = 0;
      colontmp__3254783804 = (n_3254781115).length - 1;
      var res_3254783805 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3254783805 <= colontmp__3254783804)) break Label4;
            i_3254781195 = res_3254783805;
            var eh_3254781273 = n_3254781115[chckIndx(i_3254781195, 0, (n_3254781115).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254781273)) {
            var j_3254781277 = (eh_3254781273 & (t_3254781112.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254781112.data[chckIndx(j_3254781277, 0, (t_3254781112.data).length - 1)].Field0)) break Label6;
                  j_3254781277 = nextTry_1308622883(j_3254781277, (t_3254781112.data).length - 1);
                }
            };
            rawInsert_3254781515(t_3254781112, t_3254781112, "data", n_3254781115[chckIndx(i_3254781195, 0, (n_3254781115).length - 1)].Field1, n_3254781115[chckIndx(i_3254781195, 0, (n_3254781115).length - 1)].Field2, eh_3254781273, j_3254781277);
            }
            
            res_3254783805 = addInt(res_3254783805, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254781765(t_3254781768, key_3254781769, hc_3254781770) {
  var result_3254781771 = 0;

  BeforeRet: {
    if (((t_3254781768.data).length == 0)) {
    result_3254781771 = -1;
    break BeforeRet;
    }
    
    var h_3254781838 = (hc_3254781770 & (t_3254781768.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254781768.data[chckIndx(h_3254781838, 0, (t_3254781768.data).length - 1)].Field0)) break Label2;
          if (((t_3254781768.data[chckIndx(h_3254781838, 0, (t_3254781768.data).length - 1)].Field0 == hc_3254781770) && (t_3254781768.data[chckIndx(h_3254781838, 0, (t_3254781768.data).length - 1)].Field1 == key_3254781769))) {
          result_3254781771 = h_3254781838;
          break BeforeRet;
          }
          
          h_3254781838 = nextTry_1308622883(h_3254781838, (t_3254781768.data).length - 1);
        }
    };
    result_3254781771 = subInt(-1, h_3254781838);
  };

  return result_3254781771;

}

function HEX5BHEX5DHEX3D_3254780351(t_3254780354, key_3254780355, val_3254780356) {
    if (((t_3254780354.data).length == 0)) {
    var correctSizeHEX60gensym17_3254780422 = slotsNeeded_1308622891(32);
    t_3254780354.counter = 0;
    t_3254780354.data = new Array(chckRange(correctSizeHEX60gensym17_3254780422, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_3254780422, 0, 2147483647) ; ++i) { t_3254780354.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }    }
    
    var hc_3254780427 = [0];
    var index_3254780759 = rawGet_3254780428(t_3254780354, key_3254780355, hc_3254780427, 0);
    if ((0 <= index_3254780759)) {
    t_3254780354.data[chckIndx(index_3254780759, 0, (t_3254780354.data).length - 1)].Field2 = nimCopy(t_3254780354.data[chckIndx(index_3254780759, 0, (t_3254780354.data).length - 1)].Field2, val_3254780356, NTI3254780158);
    }
    else {
      if (((t_3254780354.data).length == 0)) {
      var correctSizeHEX60gensym22_3254780901 = slotsNeeded_1308622891(32);
      t_3254780354.counter = 0;
      t_3254780354.data = new Array(chckRange(correctSizeHEX60gensym22_3254780901, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_3254780901, 0, 2147483647) ; ++i) { t_3254780354.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})}}; }      }
      
      if (mustRehash_3254780906(t_3254780354)) {
      enlarge_3254781109(t_3254780354);
      index_3254780759 = rawGetKnownHC_3254781765(t_3254780354, key_3254780355, hc_3254780427[0]);
      }
      
      index_3254780759 = subInt(-1, index_3254780759);
      rawInsert_3254781515(t_3254780354, t_3254780354, "data", key_3254780355, val_3254780356, hc_3254780427[0], index_3254780759);
      t_3254780354.counter = addInt(t_3254780354.counter, 1);
    }
    

  
}

function initTable_3254782823(initialSize_3254782826) {
  var result_3254782827 = ({data: [], counter: 0});

    var correctSizeHEX60gensym30_3254782829 = slotsNeeded_1308622891(chckRange(initialSize_3254782826, 0, 2147483647));
    result_3254782827.counter = 0;
    result_3254782827.data = new Array(chckRange(correctSizeHEX60gensym30_3254782829, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3254782829, 0, 2147483647) ; ++i) { result_3254782827.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3254782827;

}
var classes_3254780300 = [initTable_3254780275(32)];
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 0, {Field0: emptyClass_3321888808, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 1, {Field0: nodeReferenceClass_3321888809, Field1: nimCopy(null, IdNodeReferenceTarget_2986344529, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 2, {Field0: numberLiteralClass_3321888810, Field1: nimCopy(null, IdIntegerLiteralValue_2986344539, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 3, {Field0: stringLiteralClass_3321888811, Field1: nimCopy(null, IdStringLiteralValue_2986344537, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 4, {Field0: constDeclClass_3321888813, Field1: nimCopy(null, IdINamedName_2986344495, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 5, {Field0: letDeclClass_3321888814, Field1: nimCopy(null, IdINamedName_2986344495, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 6, {Field0: varDeclClass_3321888815, Field1: nimCopy(null, IdINamedName_2986344495, NTI2046820355)});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 7, {Field0: blockClass_3321888817, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 8, {Field0: callClass_3321888818, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 9, {Field0: ifClass_3321888819, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 10, {Field0: whileClass_3321888820, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 11, {Field0: functionDefinitionClass_3321888822, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 12, {Field0: parameterDeclClass_3321888821, Field1: idNone_2046820633()});
HEX5BHEX5DHEX3D_3254780351(classes_3254780300[0], 13, {Field0: assignmentClass_3321888823, Field1: idNone_2046820633()});
var binaryOperators_3254782834 = [initTable_3254782823(32)];
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdAdd_2986344451, addExpressionClass_3321888789);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdSub_2986344452, subExpressionClass_3321888790);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdMul_2986344453, mulExpressionClass_3321888791);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdDiv_2986344454, divExpressionClass_3321888792);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdMod_2986344455, modExpressionClass_3321888793);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdAppendString_2986344459, appendStringExpressionClass_3321888794);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdLess_2986344463, lessExpressionClass_3321888795);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdLessEqual_2986344464, lessEqualExpressionClass_3321888796);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdGreater_2986344465, greaterExpressionClass_3321888797);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdGreaterEqual_2986344466, greaterEqualExpressionClass_3321888798);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdEqual_2986344467, equalExpressionClass_3321888799);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdNotEqual_2986344468, notEqualExpressionClass_3321888800);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdAnd_2986344469, andExpressionClass_3321888801);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdOr_2986344470, orExpressionClass_3321888802);
HEX5BHEX5DHEX3D_3271557683(binaryOperators_3254782834[0], IdOrder_2986344471, orderExpressionClass_3321888803);
var unaryOperators_3254783679 = [initTable_3254782823(32)];
HEX5BHEX5DHEX3D_3271557683(unaryOperators_3254783679[0], IdNot_2986344457, notExpressionClass_3321888805);
HEX5BHEX5DHEX3D_3271557683(unaryOperators_3254783679[0], IdNegate_2986344456, negateExpressionClass_3321888804);

function nimStrToCStr(str_3254788576) {
  var result_3254788577 = null;

    result_3254788577 = toJSStr(str_3254788576);

  return result_3254788577;

}

function scroll_3254790716(self_3254790717, amount_3254790718) {
    HEX2BHEX3D_855640304(self_3254790717, "scrollOffset", amount_3254790718);
    markDirty_2415919143(self_3254790717);

  
}

function scrollJsWrapper2_3254790712(self_3254790774, amount_3254790775) {
    scroll_3254790716(self_3254790774, amount_3254790775);

  
}
editor_model_prototype.scroll2 = function(amount_ /* : float32 */) { return (scrollJsWrapper2_3254790712(this, amount_));};

function getModeConfig_3254790816(self_3254790817, mode_3254790818) {
  var result_3254790819 = null;

  BeforeRet: {
    result_3254790819 = getEventHandlerConfig_1291849162(self_3254790817.editor, ([101,100,105,116,111,114,46,109,111,100,101,108,46] || []).concat(mode_3254790818 || []));
    break BeforeRet;
  };

  return result_3254790819;

}

function setMode_3254790826(self_3254790827, mode_3254790828) {
        
function HEX3Aanonymous_3254790849(actionHEX60gensym160HEX60gensym161_3254790850, argHEX60gensym160HEX60gensym161_3254790851) {
          var result_3254790852 = 0;

          BeforeRet: {
            if (handlerHEX60gensym160_3254790837.config.handleActions) {
            var action_3254790853 = nimCopy(null, actionHEX60gensym160HEX60gensym161_3254790850, NTI33554449);
            var arg_3254790854 = nimCopy(null, argHEX60gensym160HEX60gensym161_3254790851, NTI33554449);
            var responseHEX60gensym160HEX60gensym161_3254790855 = handleAction_3254780151(self_3254790827, action_3254790853, arg_3254790854);
            if (handlerHEX60gensym160_3254790837.config.consumeAllActions) {
            result_3254790852 = 3;
            break BeforeRet;
            }
            
            result_3254790852 = responseHEX60gensym160HEX60gensym161_3254790855;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym160_3254790837.config.consumeAllActions) {
            result_3254790852 = 3;
            break BeforeRet;
            }
            else {
              result_3254790852 = 1;
              break BeforeRet;
            }
            }
          };

          return result_3254790852;

        }
        
function HEX3Aanonymous_3254790857(inputHEX60gensym160HEX60gensym162_3254790858) {
          var result_3254790859 = 0;

          BeforeRet: {
            if (handlerHEX60gensym160_3254790837.config.handleInputs) {
            var input_3254790860 = nimCopy(null, inputHEX60gensym160HEX60gensym162_3254790858, NTI33554449);
            result_3254790859 = 1;
            break BeforeRet;
            }
            else {
              result_3254790859 = 1;
              break BeforeRet;
            }
            
          };

          return result_3254790859;

        }

    if (((mode_3254790828).length == 0)) {
    self_3254790827.modeEventHandler = null;
    }
    else {
      var config_3254790829 = getModeConfig_3254790816(self_3254790827, mode_3254790828);
      Label1: {
        var handlerHEX60gensym160_3254790837 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym160_3254790837.config = config_3254790829;
        handlerHEX60gensym160_3254790837.dfaInternal = buildDFA_2113929279(config_3254790829);
        handlerHEX60gensym160_3254790837.handleAction = HEX3Aanonymous_3254790849;
        handlerHEX60gensym160_3254790837.handleInput = HEX3Aanonymous_3254790857;
      };
      self_3254790827.modeEventHandler = handlerHEX60gensym160_3254790837;
    }
    
    self_3254790827.currentMode = nimCopy(null, mode_3254790828, NTI33554449);

  
}

function setModeJsWrapper22_3254790822(self_3254790889, mode_3254790890) {
    setMode_3254790826(self_3254790889, mode_3254790890);

  
}
editor_model_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_3254790822(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_3254791979(self_3254791980) {
  var result_3254791981 = [];

  BeforeRet: {
    result_3254791981 = nimCopy(null, self_3254791980.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_3254791981;

}

function modeJsWrapper22_3254791975(self_3254792010) {
  var result_3254792011 = [];

    result_3254792011 = nimCopy(null, mode_3254791979(self_3254792010), NTI33554449);

  return result_3254792011;

}
editor_model_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_3254791975(this));};

function getContextWithMode_3254792036(self_3254792037, context_3254792038) {
  var result_3254792039 = [];

  BeforeRet: {
    result_3254792039 = nimCopy(null, (context_3254792038 || []).concat([46] || [],self_3254792037.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_3254792039;

}

function getContextWithModeJsWrapper22_3254792032(self_3254792069, context_3254792070) {
  var result_3254792071 = [];

    result_3254792071 = nimCopy(null, getContextWithMode_3254792036(self_3254792069, context_3254792070), NTI33554449);

  return result_3254792071;

}
editor_model_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_3254792032(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function some_3338666294(val_3338666296) {
  var result_3338666297 = ({val: null});

    if (!(!((val_3338666296 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3338666297.val = val_3338666296;

  return result_3338666297;

}

function getCellForCursor_3254780157(self_3254780158, cursor_3254780159, resolveCollection_3254780160) {
  var result_3254790668 = ({val: null});

  BeforeRet: {
    var cell_3254790669 = cursor_3254780159.cell;
    if (!(!((cell_3254790669 == null)))) {
    failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,50,46,110,105,109,40,54,50,52,44,32,51,41,32,96,99,101,108,108,46,105,115,78,111,116,78,105,108,96,32]);
    }
    
    var subCell_3254790678 = cell_3254790669;
    Label1: {
      var i_3254790682 = 0;
      var i_3254792184 = 0;
      var L_3254792185 = (cursor_3254780159.path).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792184 < L_3254792185)) break Label3;
            i_3254790682 = cursor_3254780159.path[chckIndx(i_3254792184, 0, (cursor_3254780159.path).length - 1)];
            if (isObj(subCell_3254790678.m_type, NTI3338665992)) {
            var collectionCell_3254790689 = subCell_3254790678;
            subCell_3254790678 = collectionCell_3254790689.children[chckIndx(clamp_1660945119(i_3254790682, 0, (collectionCell_3254790689.children).length - 1), 0, (collectionCell_3254790689.children).length - 1)];
            }
            else {
              break Label1;
            }
            
            i_3254792184 = addInt(i_3254792184, 1);
            if (!(((cursor_3254780159.path).length == L_3254792185))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((resolveCollection_3254780160 && isObj(subCell_3254790678.m_type, NTI3338665992))) {
    result_3254790668 = nimCopy(result_3254790668, some_3338666294(subCell_3254790678.children[chckIndx(cursor_3254780159.lastIndex, 0, (subCell_3254790678.children).length - 1)]), NTI3271562483);
    break BeforeRet;
    }
    
    result_3254790668 = nimCopy(result_3254790668, some_3338666294(subCell_3254790678), NTI3271562483);
    break BeforeRet;
  };

  return result_3254790668;

}

function isSome_3271567127(self_3271567129) {
  var result_3271567130 = false;

    result_3271567130 = !((self_3271567129.val == null));

  return result_3271567130;

}

function isNone_3271567155(self_3271567157) {
  var result_3271567158 = false;

    result_3271567158 = (self_3271567157.val == null);

  return result_3271567158;

}

function get_3271567147(self_3271567149) {
  var result_3271567150 = null;

    if (isNone_3271567155(self_3271567149)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271567150 = self_3271567149["val"];

  return result_3271567150;

}

function HEX3DHEX3D_3254791810(x_3254791812, y_3254791813) {
  var result_3254791814 = false;

  BeforeRet: {
    var sameObject_3254791821 = false;
    sameObject_3254791821 = x_3254791812 === y_3254791813
    if (sameObject_3254791821) {
    result_3254791814 = true;
    break BeforeRet;
    }
    
    if (!(((x_3254791812).length == (y_3254791813).length))) {
    result_3254791814 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3254791835 = 0;
      var colontmp__3254792193 = 0;
      colontmp__3254792193 = subInt((x_3254791812).length, 1);
      var res_3254792194 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_3254792194 <= colontmp__3254792193)) break Label3;
            i_3254791835 = res_3254792194;
            if (!((x_3254791812[chckIndx(i_3254791835, 0, (x_3254791812).length - 1)] == y_3254791813[chckIndx(i_3254791835, 0, (y_3254791813).length - 1)]))) {
            result_3254791814 = false;
            break BeforeRet;
            }
            
            res_3254792194 = addInt(res_3254792194, 1);
          }
      };
    };
    result_3254791814 = true;
    break BeforeRet;
  };

  return result_3254791814;

}

function HEX5BHEX5D_3254791885(s_3254791889, x_3254791890) {
  var result_3254791891 = [];

    var a_3254791893 = x_3254791890.a;
    var L_3254791895 = addInt(subInt(x_3254791890.b, a_3254791893), 1);
    result_3254791891 = new Array(chckRange(L_3254791895, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254791895, 0, 2147483647) ; ++i) { result_3254791891[i] = 0; }    Label1: {
      var i_3254791904 = 0;
      var i_3254792197 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792197 < L_3254791895)) break Label3;
            i_3254791904 = i_3254792197;
            result_3254791891[chckIndx(i_3254791904, 0, (result_3254791891).length - 1)] = s_3254791889[chckIndx(addInt(i_3254791904, a_3254791893), 0, (s_3254791889).length - 1)];
            i_3254792197 = addInt(i_3254792197, 1);
          }
      };
    };

  return result_3254791891;

}

function depth_3271564466(node_3271564467) {
  var result_3271564468 = 0;

    result_3271564468 = 0;
    var temp_3271564469 = node_3271564467.parent;
    Label1: {
        Label2: while (true) {
        if (!!((temp_3271564469 == null))) break Label2;
          result_3271564468 = addInt(result_3271564468, 1);
          temp_3271564469 = temp_3271564469.parent;
        }
    };

  return result_3271564468;

}

function ancestor_3271564457(node_3271564458, distance_3271564459) {
  var result_3271564460 = null;

    result_3271564460 = node_3271564458;
    Label1: {
      var i_3271564465 = 0;
      var res_3254792201 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_3254792201 <= distance_3271564459)) break Label3;
            i_3271564465 = res_3254792201;
            result_3271564460 = result_3271564460.parent;
            res_3254792201 = addInt(res_3254792201, 1);
          }
      };
    };

  return result_3271564460;

}

function indexOf_3338666080(self_3338666081, cell_3338666082) {
  var result_3338666083 = 0;

  BeforeRet: {
    result_3338666083 = 0;
    Label1: {
      var i_3338666117 = 0;
      var c_3338666118 = null;
      var i_3254792205 = 0;
      var L_3254792206 = (self_3338666081.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792205 < L_3254792206)) break Label3;
            i_3338666117 = i_3254792205;
            c_3338666118 = self_3338666081.children[chckIndx(i_3254792205, 0, (self_3338666081.children).length - 1)];
            if ((c_3338666118 == cell_3338666082)) {
            result_3338666083 = i_3338666117;
            break BeforeRet;
            }
            
            i_3254792205 = addInt(i_3254792205, 1);
            if (!(((self_3338666081.children).length == L_3254792206))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3338666083;

}

function index_3338666132(self_3338666133) {
  var result_3338666134 = 0;

  BeforeRet: {
    if ((self_3338666133.parent == null)) {
    result_3338666134 = -1;
    break BeforeRet;
    }
    
    result_3338666134 = indexOf_3338666080(self_3338666133.parent, self_3338666133);
    break BeforeRet;
  };

  return result_3338666134;

}

function ancestor_3338666050(cell_3338666051, targetParent_3338666052) {
  var result_3338666053 = null;

    result_3338666053 = cell_3338666051;
    Label1: {
        Label2: while (true) {
        if (!(!((result_3338666053.parent == null)) && !((result_3338666053.parent == targetParent_3338666052)))) break Label2;
          result_3338666053 = result_3338666053.parent;
        }
    };

  return result_3338666053;

}

function high_3338666184(self_3338666185) {
  var result_3338666186 = 0;

  BeforeRet: {
    if (isObj(self_3338666185.m_type, NTI3338665992)) {
    result_3338666186 = (self_3338666185.children).length - 1;
    break BeforeRet;
    }
    else {
      result_3338666186 = (getText_3338666018(self_3338666185)).length - 1;
      break BeforeRet;
    }
    
  };

  return result_3338666186;

}

function nodeRootCell_3254791563(cell_3254791564, targetNode_3254791572) {
      var Temporary1;

  var result_3254791573 = null;

    result_3254791573 = cell_3254791564;
      var oHEX60gensym190_3254791576 = nimCopy(null, targetNode_3254791572, NTI3271560184);
      if (!isSome_3338667064(oHEX60gensym190_3254791576)) Temporary1 = false; else {        var targetNode_3254791599 = get_3338667084(oHEX60gensym190_3254791576);
        Temporary1 = true;      }    if (Temporary1) {
    Label2: {
        Label3: while (true) {
        if (!(!((result_3254791573.parent == null)) && (!((result_3254791573.node == targetNode_3254791599)) || (result_3254791573.parent.node == cell_3254791564.node)))) break Label3;
          result_3254791573 = result_3254791573.parent;
        }
    };
    }
    else {
      Label4: {
          Label5: while (true) {
          if (!(!((result_3254791573.parent == null)) && (result_3254791573.parent.node == cell_3254791564.node))) break Label5;
            result_3254791573 = result_3254791573.parent;
          }
      };
    }
    

  return result_3254791573;

}

function combineCursors_3254791802(a_3254791803, b_3254791804) {
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_3254791805 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    if ((a_3254791803.node == b_3254791804.node)) {
    result_3254791805.node = a_3254791803.node;
    result_3254791805.cell = a_3254791803.cell;
    if (HEX3DHEX3D_3254791810(a_3254791803.path, b_3254791804.path)) {
    result_3254791805.path = nimCopy(null, a_3254791803.path, NTI3254779908);
    result_3254791805.firstIndex = a_3254791803.firstIndex;
    result_3254791805.lastIndex = b_3254791804.lastIndex;
    }
    else {
    if ((((a_3254791803.path).length == 0) || ((b_3254791804.path).length == 0))) {
    result_3254791805.path = nimCopy(null, [], NTI3003122753);
    result_3254791805.firstIndex = 0;
    result_3254791805.lastIndex = 0;
    if ((((a_3254791803.path).length == 0) && (0 < (b_3254791804.path).length))) {
    result_3254791805.firstIndex = a_3254791803.firstIndex;
    result_3254791805.lastIndex = b_3254791804.path[chckIndx(0, 0, (b_3254791804.path).length - 1)];
    }
    else {
    if (((0 < (a_3254791803.path).length) && ((b_3254791804.path).length == 0))) {
    result_3254791805.firstIndex = a_3254791803.path[chckIndx(0, 0, (a_3254791803.path).length - 1)];
    result_3254791805.lastIndex = b_3254791804.lastIndex;
    }
    }
    }
    else {
      var firstDifference_3254791858 = 0;
      Label1: {
        var i_3254791869 = 0;
        var colontmp__3254792188 = 0;
        colontmp__3254792188 = nimMin((a_3254791803.path).length - 1, (b_3254791804.path).length - 1);
        var res_3254792189 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_3254792189 <= colontmp__3254792188)) break Label3;
              i_3254791869 = res_3254792189;
              if (!((a_3254791803.path[chckIndx(i_3254791869, 0, (a_3254791803.path).length - 1)] == b_3254791804.path[chckIndx(i_3254791869, 0, (b_3254791804.path).length - 1)]))) {
              firstDifference_3254791858 = i_3254791869;
              break Label1;
              }
              
              res_3254792189 = addInt(res_3254792189, 1);
            }
        };
      };
      result_3254791805.path = nimCopy(null, HEX5BHEX5D_3254791885(a_3254791803.path, HEX2EHEX2E_805306418(0, subInt(firstDifference_3254791858, 1))), NTI3254786256);
      result_3254791805.firstIndex = a_3254791803.path[chckIndx(firstDifference_3254791858, 0, (a_3254791803.path).length - 1)];
      result_3254791805.lastIndex = b_3254791804.path[chckIndx(firstDifference_3254791858, 0, (b_3254791804.path).length - 1)];
    }
    }
    }
    else {
      var depthA_3254791905 = depth_3271564466(a_3254791803.node);
      var depthB_3254791906 = depth_3271564466(b_3254791804.node);
      var node1_3254791907 = a_3254791803.node;
      var node2_3254791908 = b_3254791804.node;
      var child_3254791909 = nimCopy(null, a_3254791803, NTI3254779907);
      if ((depthA_3254791905 < depthB_3254791906)) {
      child_3254791909 = nimCopy(child_3254791909, b_3254791804, NTI3254779907);
      node2_3254791908 = ancestor_3271564457(node2_3254791908, subInt(depthB_3254791906, depthA_3254791905));
      }
      else {
      if ((depthB_3254791906 < depthA_3254791905)) {
      child_3254791909 = nimCopy(child_3254791909, a_3254791803, NTI3254779907);
      node1_3254791907 = ancestor_3271564457(node1_3254791907, subInt(depthA_3254791905, depthB_3254791906));
      }
      }
      if ((node1_3254791907 == node2_3254791908)) {
      result_3254791805.node = node1_3254791907;
      if ((depthA_3254791905 < depthB_3254791906)) {
      Temporary4 = a_3254791803.cell;
      }
      else {
      Temporary4 = b_3254791804.cell;
      }
      
      result_3254791805.cell = Temporary4;
      result_3254791805.path = nimCopy(null, [], NTI3003122753);
      var childIndex_3254791918 = index_3338666132(ancestor_3338666050(child_3254791909.cell, result_3254791805.cell));
      if ((depthA_3254791905 < depthB_3254791906)) {
      if ((0 < (a_3254791803.path).length)) {
      Temporary5 = a_3254791803.path[chckIndx(0, 0, (a_3254791803.path).length - 1)];
      }
      else {
      Temporary5 = a_3254791803.firstIndex;
      }
      
      result_3254791805.firstIndex = Temporary5;
      result_3254791805.lastIndex = childIndex_3254791918;
      }
      else {
      if ((depthB_3254791906 < depthA_3254791905)) {
      result_3254791805.firstIndex = childIndex_3254791918;
      if ((0 < (b_3254791804.path).length)) {
      Temporary6 = b_3254791804.path[chckIndx(0, 0, (b_3254791804.path).length - 1)];
      }
      else {
      Temporary6 = b_3254791804.lastIndex;
      }
      
      result_3254791805.lastIndex = Temporary6;
      }
      else {
        result_3254791805.firstIndex = 0;
        result_3254791805.lastIndex = high_3338666184(result_3254791805.cell);
      }
      }
      break BeforeRet;
      }
      
      Label7: {
          Label8: while (true) {
          if (!((!((node1_3254791907.parent == node2_3254791908.parent)) && !((node1_3254791907.parent == null))) && !((node2_3254791908.parent == null)))) break Label8;
            node1_3254791907 = node1_3254791907.parent;
            node2_3254791908 = node2_3254791908.parent;
          }
      };
      if ((node1_3254791907.parent == node2_3254791908.parent)) {
      result_3254791805.node = node1_3254791907.parent;
      result_3254791805.cell = nodeRootCell_3254791563(a_3254791803.cell, some_3271563355(result_3254791805.node));
      result_3254791805.path = nimCopy(null, [], NTI3003122753);
      result_3254791805.firstIndex = index_3338666132(ancestor_3338666050(a_3254791803.cell, result_3254791805.cell));
      result_3254791805.lastIndex = index_3338666132(ancestor_3338666050(b_3254791804.cell, result_3254791805.cell));
      }
      else {
        result_3254791805 = nimCopy(result_3254791805, b_3254791804, NTI3254779907);
        break BeforeRet;
      }
      
    }
    
  };

  return result_3254791805;

}

function selectCursor_3254780184(a_3254780185, b_3254780186, combine_3254780187) {
  var result_3254791950 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    if (combine_3254780187) {
    result_3254791950 = nimCopy(result_3254791950, combineCursors_3254791802(a_3254780185, b_3254780186), NTI3254779907);
    break BeforeRet;
    }
    
    result_3254791950 = nimCopy(result_3254791950, b_3254780186, NTI3254779907);
    break BeforeRet;
  };

  return result_3254791950;

}

function moveCursorLeft_3254792101(self_3254792102, select_3254792103) {
      var Temporary1;

      var oHEX60gensym239_3254792106 = getCellForCursor_3254780157(self_3254792102, self_3254792102.cursor, true);
      if (!isSome_3271567127(oHEX60gensym239_3254792106)) Temporary1 = false; else {        var cell_3254792129 = get_3271567147(oHEX60gensym239_3254792106);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254792130 = getCursorLeft_3254791423(cell_3254792129, self_3254792102.cursor);
    if (!((newCursor_3254792130.node == null))) {
    self_3254792102.cursor = nimCopy(self_3254792102.cursor, selectCursor_3254780184(self_3254792102.cursor, newCursor_3254792130, select_3254792103), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792102);

  
}

function moveCursorLeftJsWrapper_3254792097(self_3254792162, select_3254792163) {
    moveCursorLeft_3254792101(self_3254792162, select_3254792163);

  
}
editor_model_prototype.moveCursorLeft = function(select_ /* : bool */) { return (moveCursorLeftJsWrapper_3254792097(this, select_));};

function moveCursorRight_3254792217(self_3254792218, select_3254792219) {
      var Temporary1;

      var oHEX60gensym251_3254792222 = getCellForCursor_3254780157(self_3254792218, self_3254792218.cursor, true);
      if (!isSome_3271567127(oHEX60gensym251_3254792222)) Temporary1 = false; else {        var cell_3254792245 = get_3271567147(oHEX60gensym251_3254792222);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254792246 = getCursorRight_3254791429(cell_3254792245, self_3254792218.cursor);
    if (!((newCursor_3254792246.node == null))) {
    self_3254792218.cursor = nimCopy(self_3254792218.cursor, selectCursor_3254780184(self_3254792218.cursor, newCursor_3254792246, select_3254792219), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792218);

  
}

function moveCursorRightJsWrapper_3254792213(self_3254792278, select_3254792279) {
    moveCursorRight_3254792217(self_3254792278, select_3254792279);

  
}
editor_model_prototype.moveCursorRight = function(select_ /* : bool */) { return (moveCursorRightJsWrapper_3254792213(this, select_));};

function isDecendant_3338666061(cell_3338666062, ancestor_3338666063) {
  var result_3338666064 = false;

  BeforeRet: {
    result_3338666064 = false;
    var temp_3338666065 = cell_3338666062;
    Label1: {
        Label2: while (true) {
        if (!!((temp_3338666065 == null))) break Label2;
          if ((temp_3338666065 == ancestor_3338666063)) {
          result_3338666064 = true;
          break BeforeRet;
          }
          
          temp_3338666065 = temp_3338666065.parent;
        }
    };
  };

  return result_3338666064;

}

function getPreviousCellInLine_3254791292(self_3254791293, cell_3254791294) {
  var result_3254791295 = null;

  BeforeRet: {
    if (((cell_3254791294.line < 0) && ((self_3254791293.logicalLines).length - 1 < cell_3254791294.line))) {
    result_3254791295 = cell_3254791294;
    break BeforeRet;
    }
    
    var line_3254791299 = nimCopy(null, self_3254791293.logicalLines[chckIndx(cell_3254791294.line, 0, (self_3254791293.logicalLines).length - 1)], NTI3254780000);
    var index_3254791300 = -1;
    Label1: {
      var i_3254791306 = 0;
      var c_3254791307 = null;
      var i_3254792391 = 0;
      var L_3254792392 = (line_3254791299).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792391 < L_3254792392)) break Label3;
            i_3254791306 = i_3254792391;
            c_3254791307 = line_3254791299[chckIndx(i_3254792391, 0, (line_3254791299).length - 1)];
            if ((isDecendant_3338666061(c_3254791307, cell_3254791294) && (index_3254791300 == -1))) {
            index_3254791300 = i_3254791306;
            }
            else {
            if ((c_3254791307 == cell_3254791294)) {
            index_3254791300 = i_3254791306;
            break Label1;
            }
            }
            i_3254792391 = addInt(i_3254792391, 1);
            if (!(((line_3254791299).length == L_3254792392))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((index_3254791300 == -1)) {
    index_3254791300 = 0;
    }
    
    if ((index_3254791300 == 0)) {
    Label4: {
      var k_3254791316 = 0;
      var colontmp__3254792395 = 0;
      colontmp__3254792395 = subInt(cell_3254791294.line, 1);
      var res_3254792396 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_3254792396 <= colontmp__3254792395)) break Label6;
            k_3254791316 = res_3254792396;
            var i_3254791317 = subInt(subInt(cell_3254791294.line, 1), k_3254791316);
            if ((0 < (self_3254791293.logicalLines[chckIndx(i_3254791317, 0, (self_3254791293.logicalLines).length - 1)]).length)) {
            result_3254791295 = self_3254791293.logicalLines[chckIndx(i_3254791317, 0, (self_3254791293.logicalLines).length - 1)][chckIndx((self_3254791293.logicalLines[chckIndx(i_3254791317, 0, (self_3254791293.logicalLines).length - 1)]).length - 1, 0, (self_3254791293.logicalLines[chckIndx(i_3254791317, 0, (self_3254791293.logicalLines).length - 1)]).length - 1)];
            break BeforeRet;
            }
            
            res_3254792396 = addInt(res_3254792396, 1);
          }
      };
    };
    result_3254791295 = cell_3254791294;
    break BeforeRet;
    }
    else {
      result_3254791295 = line_3254791299[chckIndx(subInt(index_3254791300, 1), 0, (line_3254791299).length - 1)];
      break BeforeRet;
    }
    
  };

  return result_3254791295;

}

function getPreviousInLineWhere_3254791361(self_3254791362, cell_3254791363, predicate_3254791366) {
  var result_3254791367 = null;

    result_3254791367 = getPreviousCellInLine_3254791292(self_3254791362, cell_3254791363);
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254791366(result_3254791367))) break Label2;
          var oldResult_3254791368 = result_3254791367;
          result_3254791367 = getPreviousCellInLine_3254791292(self_3254791362, result_3254791367);
          if ((result_3254791367 == oldResult_3254791368)) {
          break Label1;
          }
          
        }
    };

  return result_3254791367;

}

function editableHigh_3338666196(self_3338666197) {
  var result_3338666198 = 0;

  BeforeRet: {
    if ((!((self_3338666197.style == null)) && self_3338666197.style.noSpaceRight)) {
    result_3338666198 = subInt(high_3338666184(self_3338666197), 1);
    break BeforeRet;
    }
    
    result_3338666198 = high_3338666184(self_3338666197);
    break BeforeRet;
  };

  return result_3338666198;

}

function low_3338666165(self_3338666166) {
  var result_3338666167 = 0;

  BeforeRet: {
    if (isObj(self_3338666166.m_type, NTI3338665992)) {
    result_3338666167 = 0;
    break BeforeRet;
    }
    else {
      result_3338666167 = 0;
      break BeforeRet;
    }
    
  };

  return result_3338666167;

}

function editableLow_3338666178(self_3338666179) {
  var result_3338666180 = 0;

  BeforeRet: {
    if ((!((self_3338666179.style == null)) && self_3338666179.style.noSpaceLeft)) {
    result_3338666180 = addInt(low_3338666165(self_3338666179), 1);
    break BeforeRet;
    }
    
    result_3338666180 = low_3338666165(self_3338666179);
    break BeforeRet;
  };

  return result_3338666180;

}

function canSelect_3254780180(cell_3254780181) {
  var result_3254791441 = false;

  BeforeRet: {
    if ((!((cell_3254780181.isVisible == null)) && !(cell_3254780181.isVisible(cell_3254780181.node)))) {
    result_3254791441 = false;
    break BeforeRet;
    }
    
    if (cell_3254780181.disableSelection) {
    result_3254791441 = false;
    break BeforeRet;
    }
    
    if ((addInt(editableHigh_3338666196(cell_3254780181), 1) < editableLow_3338666178(cell_3254780181))) {
    result_3254791441 = false;
    break BeforeRet;
    }
    
    result_3254791441 = true;
    break BeforeRet;
  };

  return result_3254791441;

}

function getPreviousSelectableInLine_3254791385(self_3254791386, cell_3254791387) {
  var result_3254791388 = null;

  BeforeRet: {
    result_3254791388 = getPreviousInLineWhere_3254791361(self_3254791386, cell_3254791387, canSelect_3254780180);
    break BeforeRet;
  };

  return result_3254791388;

}

function nodeRootCellPath_3254791618(cell_3254791619) {
  var result_3254791622 = {Field0: null, Field1: []};

    result_3254791622.Field0 = cell_3254791619;
    result_3254791622.Field1 = nimCopy(null, [], NTI3003122753);
    Label1: {
        Label2: while (true) {
        if (!(!((result_3254791622.Field0.parent == null)) && (result_3254791622.Field0.parent.node == cell_3254791619.node))) break Label2;
          var index_3254791634 = indexOf_3338666080(result_3254791622.Field0.parent, cell_3254791619);
          result_3254791622.Field1.push(index_3254791634);;
          result_3254791622.Field0 = result_3254791622.Field0.parent;
        }
    };

  return result_3254791622;

}

function columnHEX3D_3254779991(cursor_3254779992, column_3254779993) {
    cursor_3254779992.firstIndex = column_3254779993;
    cursor_3254779992.lastIndex = column_3254779993;

  
}

function toCursor_3254780177(cell_3254780178, start_3254780179) {
  var result_3254791662 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

    var colontmp__3254792399 = nodeRootCellPath_3254791618(cell_3254780178);
    var rootCell_3254791663 = colontmp__3254792399["Field0"];
    var path_3254791664 = nimCopy(null, colontmp__3254792399["Field1"], NTI3254786068);
    result_3254791662[0].node = cell_3254780178.node;
    result_3254791662[0].cell = rootCell_3254791663;
    result_3254791662[0].path = nimCopy(null, path_3254791664, NTI3254786068);
    if (start_3254780179) {
    columnHEX3D_3254779991(result_3254791662[0], editableLow_3338666178(cell_3254780178));
    }
    else {
    columnHEX3D_3254779991(result_3254791662[0], addInt(editableHigh_3338666196(cell_3254780178), 1));
    }
    

  return result_3254791662[0];

}

function moveCursorLeftLine_3254792305(self_3254792306, select_3254792307) {
      var Temporary1;

      var oHEX60gensym263_3254792310 = getCellForCursor_3254780157(self_3254792306, self_3254792306.cursor, true);
      if (!isSome_3271567127(oHEX60gensym263_3254792310)) Temporary1 = false; else {        var cell_3254792333 = get_3271567147(oHEX60gensym263_3254792310);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254792334 = getCursorLeft_3254791423(cell_3254792333, self_3254792306.cursor);
    if ((newCursor_3254792334.node == self_3254792306.cursor.node)) {
    self_3254792306.cursor = nimCopy(self_3254792306.cursor, selectCursor_3254780184(self_3254792306.cursor, newCursor_3254792334, select_3254792307), NTI3254779907);
    }
    else {
      var nextCell_3254792339 = getPreviousSelectableInLine_3254791385(self_3254792306, cell_3254792333);
      newCursor_3254792334 = nimCopy(newCursor_3254792334, toCursor_3254780177(nextCell_3254792339, false), NTI3254779907);
      self_3254792306.cursor = nimCopy(self_3254792306.cursor, selectCursor_3254780184(self_3254792306.cursor, newCursor_3254792334, select_3254792307), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792306);

  
}

function moveCursorLeftLineJsWrapper_3254792301(self_3254792368, select_3254792369) {
    moveCursorLeftLine_3254792305(self_3254792368, select_3254792369);

  
}
editor_model_prototype.moveCursorLeftLine = function(select_ /* : bool */) { return (moveCursorLeftLineJsWrapper_3254792301(this, select_));};

function getNextCellInLine_3254791324(self_3254791325, cell_3254791326) {
  var result_3254791327 = null;

  BeforeRet: {
    if (((cell_3254791326.line < 0) && ((self_3254791325.logicalLines).length - 1 < cell_3254791326.line))) {
    result_3254791327 = cell_3254791326;
    break BeforeRet;
    }
    
    var line_3254791331 = nimCopy(null, self_3254791325.logicalLines[chckIndx(cell_3254791326.line, 0, (self_3254791325.logicalLines).length - 1)], NTI3254780000);
    var index_3254791335 = (line_3254791331).length - 1;
    Label1: {
      var i_3254791341 = 0;
      var c_3254791342 = null;
      var i_3254792493 = 0;
      var L_3254792494 = (line_3254791331).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792493 < L_3254792494)) break Label3;
            i_3254791341 = i_3254792493;
            c_3254791342 = line_3254791331[chckIndx(i_3254792493, 0, (line_3254791331).length - 1)];
            if (isDecendant_3338666061(c_3254791342, cell_3254791326)) {
            index_3254791335 = i_3254791341;
            }
            else {
            if ((c_3254791342 == cell_3254791326)) {
            index_3254791335 = i_3254791341;
            break Label1;
            }
            }
            i_3254792493 = addInt(i_3254792493, 1);
            if (!(((line_3254791331).length == L_3254792494))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((line_3254791331).length - 1 <= index_3254791335)) {
    Label4: {
      var i_3254791357 = 0;
      var colontmp__3254792497 = 0;
      var colontmp__3254792498 = 0;
      colontmp__3254792497 = addInt(cell_3254791326.line, 1);
      colontmp__3254792498 = (self_3254791325.logicalLines).length - 1;
      var res_3254792499 = colontmp__3254792497;
      Label5: {
          Label6: while (true) {
          if (!(res_3254792499 <= colontmp__3254792498)) break Label6;
            i_3254791357 = res_3254792499;
            if ((0 < (self_3254791325.logicalLines[chckIndx(i_3254791357, 0, (self_3254791325.logicalLines).length - 1)]).length)) {
            result_3254791327 = self_3254791325.logicalLines[chckIndx(i_3254791357, 0, (self_3254791325.logicalLines).length - 1)][chckIndx(0, 0, (self_3254791325.logicalLines[chckIndx(i_3254791357, 0, (self_3254791325.logicalLines).length - 1)]).length - 1)];
            break BeforeRet;
            }
            
            res_3254792499 = addInt(res_3254792499, 1);
          }
      };
    };
    result_3254791327 = cell_3254791326;
    break BeforeRet;
    }
    else {
      result_3254791327 = line_3254791331[chckIndx(addInt(index_3254791335, 1), 0, (line_3254791331).length - 1)];
      break BeforeRet;
    }
    
  };

  return result_3254791327;

}

function getNextInLineWhere_3254791373(self_3254791374, cell_3254791375, predicate_3254791378) {
  var result_3254791379 = null;

    result_3254791379 = getNextCellInLine_3254791324(self_3254791374, cell_3254791375);
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254791378(result_3254791379))) break Label2;
          var oldResult_3254791380 = result_3254791379;
          result_3254791379 = getNextCellInLine_3254791324(self_3254791374, result_3254791379);
          if ((result_3254791379 == oldResult_3254791380)) {
          break Label1;
          }
          
        }
    };

  return result_3254791379;

}

function getNextSelectableInLine_3254791407(self_3254791408, cell_3254791409) {
  var result_3254791410 = null;

  BeforeRet: {
    result_3254791410 = getNextInLineWhere_3254791373(self_3254791408, cell_3254791409, canSelect_3254780180);
    break BeforeRet;
  };

  return result_3254791410;

}

function moveCursorRightLine_3254792407(self_3254792408, select_3254792409) {
      var Temporary1;

      var oHEX60gensym274_3254792412 = getCellForCursor_3254780157(self_3254792408, self_3254792408.cursor, true);
      if (!isSome_3271567127(oHEX60gensym274_3254792412)) Temporary1 = false; else {        var cell_3254792435 = get_3271567147(oHEX60gensym274_3254792412);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254792436 = getCursorRight_3254791429(cell_3254792435, self_3254792408.cursor);
    if ((newCursor_3254792436.node == self_3254792408.cursor.node)) {
    self_3254792408.cursor = nimCopy(self_3254792408.cursor, selectCursor_3254780184(self_3254792408.cursor, newCursor_3254792436, select_3254792409), NTI3254779907);
    }
    else {
      var nextCell_3254792441 = getNextSelectableInLine_3254791407(self_3254792408, cell_3254792435);
      newCursor_3254792436 = nimCopy(newCursor_3254792436, toCursor_3254780177(nextCell_3254792441, true), NTI3254779907);
      self_3254792408.cursor = nimCopy(self_3254792408.cursor, selectCursor_3254780184(self_3254792408.cursor, newCursor_3254792436, select_3254792409), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792408);

  
}

function moveCursorRightLineJsWrapper_3254792403(self_3254792470, select_3254792471) {
    moveCursorRightLine_3254792407(self_3254792470, select_3254792471);

  
}
editor_model_prototype.moveCursorRightLine = function(select_ /* : bool */) { return (moveCursorRightLineJsWrapper_3254792403(this, select_));};

function moveCursorLineStart_3254792507(self_3254792508, select_3254792509) {
      var Temporary1;

      var oHEX60gensym285_3254792512 = getCellForCursor_3254780157(self_3254792508, self_3254792508.cursor, true);
      if (!isSome_3271567127(oHEX60gensym285_3254792512)) Temporary1 = false; else {        var cell_3254792535 = get_3271567147(oHEX60gensym285_3254792512);
        Temporary1 = true;      }    if (Temporary1) {
    if ((((0 <= cell_3254792535.line) && (cell_3254792535.line <= (self_3254792508.logicalLines).length - 1)) && (0 < (self_3254792508.logicalLines[chckIndx(cell_3254792535.line, 0, (self_3254792508.logicalLines).length - 1)]).length))) {
    var newCursor_3254792542 = toCursor_3254780177(self_3254792508.logicalLines[chckIndx(cell_3254792535.line, 0, (self_3254792508.logicalLines).length - 1)][chckIndx(0, 0, (self_3254792508.logicalLines[chckIndx(cell_3254792535.line, 0, (self_3254792508.logicalLines).length - 1)]).length - 1)], true);
    self_3254792508.cursor = nimCopy(self_3254792508.cursor, selectCursor_3254780184(self_3254792508.cursor, newCursor_3254792542, select_3254792509), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792508);

  
}

function moveCursorLineStartJsWrapper_3254792503(self_3254792571, select_3254792572) {
    moveCursorLineStart_3254792507(self_3254792571, select_3254792572);

  
}
editor_model_prototype.moveCursorLineStart = function(select_ /* : bool */) { return (moveCursorLineStartJsWrapper_3254792503(this, select_));};

function moveCursorLineEnd_3254792598(self_3254792599, select_3254792600) {
      var Temporary1;

      var oHEX60gensym298_3254792603 = getCellForCursor_3254780157(self_3254792599, self_3254792599.cursor, true);
      if (!isSome_3271567127(oHEX60gensym298_3254792603)) Temporary1 = false; else {        var cell_3254792626 = get_3271567147(oHEX60gensym298_3254792603);
        Temporary1 = true;      }    if (Temporary1) {
    if ((((0 <= cell_3254792626.line) && (cell_3254792626.line <= (self_3254792599.logicalLines).length - 1)) && (0 < (self_3254792599.logicalLines[chckIndx(cell_3254792626.line, 0, (self_3254792599.logicalLines).length - 1)]).length))) {
    var newCursor_3254792636 = toCursor_3254780177(self_3254792599.logicalLines[chckIndx(cell_3254792626.line, 0, (self_3254792599.logicalLines).length - 1)][chckIndx((self_3254792599.logicalLines[chckIndx(cell_3254792626.line, 0, (self_3254792599.logicalLines).length - 1)]).length - 1, 0, (self_3254792599.logicalLines[chckIndx(cell_3254792626.line, 0, (self_3254792599.logicalLines).length - 1)]).length - 1)], false);
    self_3254792599.cursor = nimCopy(self_3254792599.cursor, selectCursor_3254780184(self_3254792599.cursor, newCursor_3254792636, select_3254792600), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254792599);

  
}

function moveCursorLineEndJsWrapper_3254792594(self_3254792665, select_3254792666) {
    moveCursorLineEnd_3254792598(self_3254792665, select_3254792666);

  
}
editor_model_prototype.moveCursorLineEnd = function(select_ /* : bool */) { return (moveCursorLineEndJsWrapper_3254792594(this, select_));};

function closestInlineAncestor_3338666035(cell_3338666036) {
          var Temporary3;

  var result_3338666037 = null;

    result_3338666037 = cell_3338666036.parent;
    Label1: {
        Label2: while (true) {
          if (!!((result_3338666037 == null))) Temporary3 = false; else {            Temporary3 = !(result_3338666037.inline);          }        if (!Temporary3) break Label2;
          result_3338666037 = result_3338666037.parent;
        }
    };

  return result_3338666037;

}

function hasAncestor_3338666024(cell_3338666025, ancestor_3338666026) {
  var result_3338666027 = false;

  BeforeRet: {
    if ((cell_3338666025.parent == ancestor_3338666026)) {
    result_3338666027 = true;
    break BeforeRet;
    }
    
    if (!((cell_3338666025.parent == null))) {
    result_3338666027 = hasAncestor_3338666024(cell_3338666025.parent, ancestor_3338666026);
    break BeforeRet;
    }
    
    result_3338666027 = false;
    break BeforeRet;
  };

  return result_3338666027;

}

function moveCursorLineStartInline_3254792692(self_3254792693, select_3254792694) {
      var Temporary1;

  BeforeRet: {
      var oHEX60gensym311_3254792697 = getCellForCursor_3254780157(self_3254792693, self_3254792693.cursor, true);
      if (!isSome_3271567127(oHEX60gensym311_3254792697)) Temporary1 = false; else {        var cell_3254792720 = get_3271567147(oHEX60gensym311_3254792697);
        Temporary1 = true;      }    if (Temporary1) {
    var parent_3254792721 = closestInlineAncestor_3338666035(cell_3254792720);
    if ((parent_3254792721 == null)) {
    moveCursorLineStart_3254792507(self_3254792693, false);
    break BeforeRet;
    }
    
    var prevCell_3254792725 = cell_3254792720;
    Label2: {
        Label3: while (true) {
        if (!true) break Label3;
          var currentCell_3254792726 = getPreviousSelectableInLine_3254791385(self_3254792693, prevCell_3254792725);
          if (!((currentCell_3254792726.line == prevCell_3254792725.line))) {
          break Label2;
          }
          
          if (!(hasAncestor_3338666024(currentCell_3254792726, parent_3254792721))) {
          break Label2;
          }
          
          prevCell_3254792725 = currentCell_3254792726;
        }
    };
    var newCursor_3254792727 = toCursor_3254780177(prevCell_3254792725, true);
    self_3254792693.cursor = nimCopy(self_3254792693.cursor, selectCursor_3254780184(self_3254792693.cursor, newCursor_3254792727, select_3254792694), NTI3254779907);
    }
    
    markDirty_2415919143(self_3254792693);
  };

  
}

function moveCursorLineStartInlineJsWrapper_3254792688(self_3254792756, select_3254792757) {
    moveCursorLineStartInline_3254792692(self_3254792756, select_3254792757);

  
}
editor_model_prototype.moveCursorLineStartInline = function(select_ /* : bool */) { return (moveCursorLineStartInlineJsWrapper_3254792688(this, select_));};

function moveCursorLineEndInline_3254792785(self_3254792786, select_3254792787) {
      var Temporary1;

  BeforeRet: {
      var oHEX60gensym323_3254792790 = getCellForCursor_3254780157(self_3254792786, self_3254792786.cursor, true);
      if (!isSome_3271567127(oHEX60gensym323_3254792790)) Temporary1 = false; else {        var cell_3254792813 = get_3271567147(oHEX60gensym323_3254792790);
        Temporary1 = true;      }    if (Temporary1) {
    var parent_3254792814 = closestInlineAncestor_3338666035(cell_3254792813);
    if ((parent_3254792814 == null)) {
    moveCursorLineEnd_3254792598(self_3254792786, false);
    break BeforeRet;
    }
    
    var prevCell_3254792818 = cell_3254792813;
    Label2: {
        Label3: while (true) {
        if (!true) break Label3;
          var currentCell_3254792819 = getNextSelectableInLine_3254791407(self_3254792786, prevCell_3254792818);
          if (!((currentCell_3254792819.line == prevCell_3254792818.line))) {
          break Label2;
          }
          
          if (!(hasAncestor_3338666024(currentCell_3254792819, parent_3254792814))) {
          break Label2;
          }
          
          prevCell_3254792818 = currentCell_3254792819;
        }
    };
    var newCursor_3254792820 = toCursor_3254780177(prevCell_3254792818, false);
    self_3254792786.cursor = nimCopy(self_3254792786.cursor, selectCursor_3254780184(self_3254792786.cursor, newCursor_3254792820, select_3254792787), NTI3254779907);
    }
    
    markDirty_2415919143(self_3254792786);
  };

  
}

function moveCursorLineEndInlineJsWrapper_3254792781(self_3254792849, select_3254792850) {
    moveCursorLineEndInline_3254792785(self_3254792849, select_3254792850);

  
}
editor_model_prototype.moveCursorLineEndInline = function(select_ /* : bool */) { return (moveCursorLineEndInlineJsWrapper_3254792781(this, select_));};

function none_3254790989() {
  var result_3254790996 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

  return result_3254790996;

}

function rawGet_3254789393(t_3254789396, key_3254789397, hc_3254789398, hc_3254789398_Idx) {
  var result_3254789399 = 0;

  BeforeRet: {
    hc_3254789398[hc_3254789398_Idx] = hash_2046820630(key_3254789397);
    if ((hc_3254789398[hc_3254789398_Idx] == 0)) {
    hc_3254789398[hc_3254789398_Idx] = 314159265;
    }
    
    if (((t_3254789396.data).length == 0)) {
    result_3254789399 = -1;
    break BeforeRet;
    }
    
    var h_3254789467 = (hc_3254789398[hc_3254789398_Idx] & (t_3254789396.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254789396.data[chckIndx(h_3254789467, 0, (t_3254789396.data).length - 1)].Field0)) break Label2;
          if (((t_3254789396.data[chckIndx(h_3254789467, 0, (t_3254789396.data).length - 1)].Field0 == hc_3254789398[hc_3254789398_Idx]) && HEX3DHEX3D_2046820626(t_3254789396.data[chckIndx(h_3254789467, 0, (t_3254789396.data).length - 1)].Field1, key_3254789397))) {
          result_3254789399 = h_3254789467;
          break BeforeRet;
          }
          
          h_3254789467 = nextTry_1308622883(h_3254789467, (t_3254789396.data).length - 1);
        }
    };
    result_3254789399 = subInt(-1, h_3254789467);
  };

  return result_3254789399;

}

function getOrDefault_3254789383(t_3254789386, key_3254789387, default_3254789388) {
    var Temporary1;

  var result_3254789389 = null;

    var hcHEX60gensym118_3254789392 = [0];
    var indexHEX60gensym118_3254789720 = rawGet_3254789393(t_3254789386, key_3254789387, hcHEX60gensym118_3254789392, 0);
    if ((0 <= indexHEX60gensym118_3254789720)) {
    Temporary1 = t_3254789386.data[chckIndx(indexHEX60gensym118_3254789720, 0, (t_3254789386.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3254789388;
    }
    
    result_3254789389 = Temporary1;

  return result_3254789389;

}

function isNone_3254790099(self_3254790101) {
  var result_3254790102 = false;

    result_3254790102 = !(self_3254790101.has);

  return result_3254790102;

}

function some_3254791105(val_3254791107) {
  var result_3254791108 = ({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false});

    result_3254791108.has = true;
    result_3254791108.val = nimCopy(result_3254791108.val, val_3254791107, NTI3254779907);

  return result_3254791108;

}

function get_3254791137(self_3254791139) {
  var result_3254791140 = null;

  BeforeRet: {
    if (isNone_3254790099(self_3254791139)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254791140 = self_3254791139.val;
    break BeforeRet;
  };

  return result_3254791140;

}

function HEX2DHEX3D_2818594211(x_2818594213, x_2818594213_Idx, y_2818594214) {
    x_2818594213[x_2818594213_Idx] = (x_2818594213[x_2818594213_Idx] - y_2818594214);

  
}

function round_3254791158(x_3254791160) {
  var result_3254791161 = [0.0];

    if ((0.0 <= x_3254791160)) {
    result_3254791161[0] = Math.round(x_3254791160);
    }
    else {
      result_3254791161[0] = Math.ceil(x_3254791160);
      if ((0.5 <= (result_3254791161[0] - x_3254791160))) {
      HEX2DHEX3D_2818594211(result_3254791161, 0, 1.0);
      }
      
    }
    

  return result_3254791161[0];

}

function getCursorInLine_3254780165(self_3254780166, line_3254780167, xPos_3254780168) {
              var Temporary5;
              var Temporary6;

  var result_3254790916 = [({val: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), has: false})];

  BeforeRet: {
    if (!(contains_1191183809(HEX2EHEX2E_805306418(0, (self_3254780166.logicalLines).length - 1), line_3254780167))) {
    result_3254790916[0] = nimCopy(result_3254790916[0], none_3254790989(), NTI3254780079);
    break BeforeRet;
    }
    
    var line_3254790997 = nimCopy(null, self_3254780166.logicalLines[chckIndx(line_3254780167, 0, (self_3254780166.logicalLines).length - 1)], NTI3254780000);
    if (((line_3254790997).length == 0)) {
    result_3254790916[0] = nimCopy(result_3254790916[0], none_3254790989(), NTI3254780079);
    break BeforeRet;
    }
    
    var charWidth_3254791008 = charWidth_2768240799(self_3254780166.editor.platform);
    var closest_3254791009 = 10000000000.0;
    Label1: {
      var c_3254791013 = null;
      var i_3254792987 = 0;
      var L_3254792988 = (line_3254790997).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254792987 < L_3254792988)) break Label3;
            c_3254791013 = line_3254790997[chckIndx(i_3254792987, 0, (line_3254790997).length - 1)];
            Label4: {
              if (!(canSelect_3254780180(c_3254791013))) {
              break Label4;
              }
              
              var widget_3254791086 = getOrDefault_3254789383(self_3254780166.cellWidgetContext.cellToWidget, c_3254791013.id, null);
              if ((widget_3254791086 == null)) {
              break Label4;
              }
              
              if ((!((c_3254791013.style == null)) && c_3254791013.style.noSpaceLeft)) {
              Temporary5 = (widget_3254791086.lastBounds.x + charWidth_3254791008);
              }
              else {
              Temporary5 = widget_3254791086.lastBounds.x;
              }
              
              var xMin_3254791093 = Temporary5;
              if ((!((c_3254791013.style == null)) && c_3254791013.style.noSpaceRight)) {
              Temporary6 = ((widget_3254791086.lastBounds.x + widget_3254791086.lastBounds.w) - charWidth_3254791008);
              }
              else {
              Temporary6 = (widget_3254791086.lastBounds.x + widget_3254791086.lastBounds.w);
              }
              
              var xMax_3254791097 = Temporary6;
              if ((xPos_3254780168 < xMin_3254791093)) {
              if ((isNone_3254790099(result_3254790916[0]) || ((xMin_3254791093 - xPos_3254780168) < closest_3254791009))) {
              result_3254790916[0] = nimCopy(result_3254790916[0], some_3254791105(toCursor_3254780177(c_3254791013, true)), NTI3254780079);
              closest_3254791009 = (xMin_3254791093 - xPos_3254780168);
              }
              
              }
              else {
              if ((xMax_3254791097 < xPos_3254780168)) {
              if ((isNone_3254790099(result_3254790916[0]) || ((xPos_3254780168 - xMax_3254791097) < closest_3254791009))) {
              result_3254790916[0] = nimCopy(result_3254790916[0], some_3254791105(toCursor_3254780177(c_3254791013, false)), NTI3254780079);
              closest_3254791009 = (xPos_3254780168 - xMax_3254791097);
              }
              
              }
              else {
                result_3254790916[0] = nimCopy(result_3254790916[0], some_3254791105(toCursor_3254780177(c_3254791013, true)), NTI3254780079);
                var text_3254791123 = getText_3338666018(c_3254791013);
                if ((0 < (text_3254791123).length)) {
                var alpha_3254791124 = ((xPos_3254780168 - widget_3254791086.lastBounds.x) / widget_3254791086.lastBounds.w);
                get_3254791137(result_3254790916[0]).firstIndex = ((round_3254791158((alpha_3254791124 * (text_3254791123).length))) | 0);
                get_3254791137(result_3254790916[0]).lastIndex = ((round_3254791158((alpha_3254791124 * (text_3254791123).length))) | 0);
                }
                
                break BeforeRet;
              }
              }
            };
            i_3254792987 = addInt(i_3254792987, 1);
            if (!(((line_3254790997).length == L_3254792988))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3254790916[0];

}

function getCursorXPos_3254791184(self_3254791185, cursor_3254791186) {
      var Temporary1;

  var result_3254791187 = 0.0;

    result_3254791187 = 0.0;
      var oHEX60gensym172_3254791190 = getCellForCursor_3254780157(self_3254791185, cursor_3254791186, true);
      if (!isSome_3271567127(oHEX60gensym172_3254791190)) Temporary1 = false; else {        var cell_3254791213 = get_3271567147(oHEX60gensym172_3254791190);
        Temporary1 = true;      }    if (Temporary1) {
    var widget_3254791286 = getOrDefault_3254789383(self_3254791185.cellWidgetContext.cellToWidget, cell_3254791213.id, null);
    if (!((widget_3254791286 == null))) {
    var text_3254791290 = getText_3338666018(cell_3254791213);
    if (((text_3254791290).length == 0)) {
    result_3254791187 = widget_3254791286.lastBounds.x;
    }
    else {
      var alpha_3254791291 = (cursor_3254791186.lastIndex / (text_3254791290).length);
      result_3254791187 = ((widget_3254791286.lastBounds.x * (1.0 - alpha_3254791291)) + ((widget_3254791286.lastBounds.x + widget_3254791286.lastBounds.w) * alpha_3254791291));
    }
    
    }
    
    }
    

  return result_3254791187;

}

function isSome_3254790074(self_3254790076) {
  var result_3254790077 = false;

    result_3254790077 = self_3254790076.has;

  return result_3254790077;

}

function get_3254790091(self_3254790093) {
  var result_3254790094 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if (isNone_3254790099(self_3254790093)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254790094 = self_3254790093.val;

  return result_3254790094;

}

function moveCursorUp_3254792877(self_3254792878, select_3254792879) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym335_3254792882 = getCellForCursor_3254780157(self_3254792878, self_3254792878.cursor, true);
      if (!isSome_3271567127(oHEX60gensym335_3254792882)) Temporary1 = false; else {        var cell_3254792905 = get_3271567147(oHEX60gensym335_3254792882);
        Temporary1 = true;      }    if (Temporary1) {
    if (((0 < cell_3254792905.line) && (cell_3254792905.line <= (self_3254792878.logicalLines).length - 1))) {
      var oHEX60gensym337_3254792911 = getCursorInLine_3254780165(self_3254792878, subInt(cell_3254792905.line, 1), getCursorXPos_3254791184(self_3254792878, self_3254792878.cursor));
      if (!isSome_3254790074(oHEX60gensym337_3254792911)) Temporary2 = false; else {        var newCursor_3254792934 = nimCopy(null, get_3254790091(oHEX60gensym337_3254792911), NTI3254779907);
        Temporary2 = true;      }    if (Temporary2) {
    self_3254792878.cursor = nimCopy(self_3254792878.cursor, selectCursor_3254780184(self_3254792878.cursor, newCursor_3254792934, select_3254792879), NTI3254779907);
    }
    
    }
    
    }
    
    markDirty_2415919143(self_3254792878);

  
}

function moveCursorUpJsWrapper2_3254792873(self_3254792963, select_3254792964) {
    moveCursorUp_3254792877(self_3254792963, select_3254792964);

  
}
editor_model_prototype.moveCursorUp2 = function(select_ /* : bool */) { return (moveCursorUpJsWrapper2_3254792873(this, select_));};

function moveCursorDown_3254792997(self_3254792998, select_3254792999) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym348_3254793002 = getCellForCursor_3254780157(self_3254792998, self_3254792998.cursor, true);
      if (!isSome_3271567127(oHEX60gensym348_3254793002)) Temporary1 = false; else {        var cell_3254793025 = get_3271567147(oHEX60gensym348_3254793002);
        Temporary1 = true;      }    if (Temporary1) {
    if ((cell_3254793025.line < (self_3254792998.logicalLines).length - 1)) {
      var oHEX60gensym349_3254793031 = getCursorInLine_3254780165(self_3254792998, addInt(cell_3254793025.line, 1), getCursorXPos_3254791184(self_3254792998, self_3254792998.cursor));
      if (!isSome_3254790074(oHEX60gensym349_3254793031)) Temporary2 = false; else {        var newCursor_3254793054 = nimCopy(null, get_3254790091(oHEX60gensym349_3254793031), NTI3254779907);
        Temporary2 = true;      }    if (Temporary2) {
    self_3254792998.cursor = nimCopy(self_3254792998.cursor, selectCursor_3254780184(self_3254792998.cursor, newCursor_3254793054, select_3254792999), NTI3254779907);
    }
    
    }
    
    }
    
    markDirty_2415919143(self_3254792998);

  
}

function moveCursorDownJsWrapper2_3254792993(self_3254793083, select_3254793084) {
    moveCursorDown_3254792997(self_3254793083, select_3254793084);

  
}
editor_model_prototype.moveCursorDown2 = function(select_ /* : bool */) { return (moveCursorDownJsWrapper2_3254792993(this, select_));};

function getLastLeaf_3254791459(cell_3254791460) {
      var Temporary1;

  var result_3254791461 = null;

  BeforeRet: {
      if (!isObj(cell_3254791460.m_type, NTI3338665992)) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254791460.children).length);      }    if (Temporary1) {
    result_3254791461 = getLastLeaf_3254791459(cell_3254791460.children[chckIndx((cell_3254791460.children).length - 1, 0, (cell_3254791460.children).length - 1)]);
    break BeforeRet;
    }
    
    result_3254791461 = cell_3254791460;
    break BeforeRet;
  };

  return result_3254791461;

}

function previousDirect_3338666202(self_3338666203) {
  var result_3338666204 = null;

  BeforeRet: {
    var i_3338666205 = index_3338666132(self_3338666203);
    if (((i_3338666205 == -1) || (i_3338666205 < 1))) {
    result_3338666204 = null;
    break BeforeRet;
    }
    
    result_3338666204 = self_3338666203.parent.children[chckIndx(subInt(i_3338666205, 1), 0, (self_3338666203.parent.children).length - 1)];
    break BeforeRet;
  };

  return result_3338666204;

}

function getPreviousLeaf_3254791474(cell_3254791475, childIndex_3254791484) {
  var result_3254791485 = null;

  BeforeRet: {
    if (isObj(cell_3254791475.m_type, NTI3338665992)) {
    result_3254791485 = getLastLeaf_3254791459(cell_3254791475);
    break BeforeRet;
    }
    
    if ((cell_3254791475.parent == null)) {
    result_3254791485 = cell_3254791475;
    break BeforeRet;
    }
    
    var parent_3254791495 = cell_3254791475.parent;
    var index_3254791496 = indexOf_3338666080(parent_3254791495, cell_3254791475);
    if ((0 < index_3254791496)) {
    result_3254791485 = getLastLeaf_3254791459(parent_3254791495.children[chckIndx(subInt(index_3254791496, 1), 0, (parent_3254791495.children).length - 1)]);
    break BeforeRet;
    }
    else {
      var newParent_3254791497 = parent_3254791495;
      var parentIndex_3254791498 = index_3338666132(newParent_3254791497);
      Label1: {
          Label2: while (true) {
          if (!(!((parentIndex_3254791498 == -1)) && (parentIndex_3254791498 == 0))) break Label2;
            newParent_3254791497 = newParent_3254791497.parent;
            parentIndex_3254791498 = index_3338666132(newParent_3254791497);
          }
      };
      if ((0 < parentIndex_3254791498)) {
      var prevParent_3254791499 = previousDirect_3338666202(newParent_3254791497);
      result_3254791485 = getLastLeaf_3254791459(prevParent_3254791499);
      break BeforeRet;
      }
      
      result_3254791485 = cell_3254791475;
      break BeforeRet;
    }
    
  };

  return result_3254791485;

}

function getPreviousLeafWhere_3254791529(cell_3254791530, predicate_3254791533) {
  var result_3254791534 = null;

    result_3254791534 = getPreviousLeaf_3254791474(cell_3254791530, none_3003121842());
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254791533(result_3254791534))) break Label2;
          var oldResult_3254791535 = result_3254791534;
          result_3254791534 = getPreviousLeaf_3254791474(result_3254791534, none_3003121842());
          if ((result_3254791534 == oldResult_3254791535)) {
          break Label1;
          }
          
        }
    };

  return result_3254791534;

}

function getPreviousSelectableLeaf_3254791551(cell_3254791552) {
  var result_3254791553 = null;

  BeforeRet: {
    result_3254791553 = getPreviousLeafWhere_3254791529(cell_3254791552, canSelect_3254780180);
    break BeforeRet;
  };

  return result_3254791553;

}

function moveCursorLeftCell_3254793110(self_3254793111, select_3254793112) {
      var Temporary1;

      var oHEX60gensym360_3254793115 = getCellForCursor_3254780157(self_3254793111, self_3254793111.cursor, true);
      if (!isSome_3271567127(oHEX60gensym360_3254793115)) Temporary1 = false; else {        var cell_3254793138 = get_3271567147(oHEX60gensym360_3254793115);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254793139 = toCursor_3254780177(getPreviousSelectableLeaf_3254791551(cell_3254793138), false);
    if (!((newCursor_3254793139.node == null))) {
    self_3254793111.cursor = nimCopy(self_3254793111.cursor, selectCursor_3254780184(self_3254793111.cursor, newCursor_3254793139, select_3254793112), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254793111);

  
}

function moveCursorLeftCellJsWrapper_3254793106(self_3254793171, select_3254793172) {
    moveCursorLeftCell_3254793110(self_3254793171, select_3254793172);

  
}
editor_model_prototype.moveCursorLeftCell = function(select_ /* : bool */) { return (moveCursorLeftCellJsWrapper_3254793106(this, select_));};

function getFirstLeaf_3254791447(cell_3254791448) {
      var Temporary1;

  var result_3254791449 = null;

  BeforeRet: {
      if (!isObj(cell_3254791448.m_type, NTI3338665992)) Temporary1 = false; else {        Temporary1 = (0 < (cell_3254791448.children).length);      }    if (Temporary1) {
    result_3254791449 = getFirstLeaf_3254791447(cell_3254791448.children[chckIndx(0, 0, (cell_3254791448.children).length - 1)]);
    break BeforeRet;
    }
    
    result_3254791449 = cell_3254791448;
    break BeforeRet;
  };

  return result_3254791449;

}

function parentHigh_3338666138(self_3338666139) {
  var result_3338666140 = 0;

  BeforeRet: {
    if ((self_3338666139.parent == null)) {
    result_3338666140 = -1;
    break BeforeRet;
    }
    
    result_3338666140 = (self_3338666139.parent.children).length - 1;
    break BeforeRet;
  };

  return result_3338666140;

}

function nextDirect_3338666206(self_3338666207) {
      var Temporary1;

  var result_3338666208 = null;

  BeforeRet: {
    var i_3338666209 = index_3338666132(self_3338666207);
      if ((i_3338666209 == -1)) Temporary1 = true; else {        Temporary1 = ((self_3338666207.parent.children).length - 1 <= i_3338666209);      }    if (Temporary1) {
    result_3338666208 = null;
    break BeforeRet;
    }
    
    result_3338666208 = self_3338666207.parent.children[chckIndx(addInt(i_3338666209, 1), 0, (self_3338666207.parent.children).length - 1)];
    break BeforeRet;
  };

  return result_3338666208;

}

function getNextLeaf_3254791500(cell_3254791501, childIndex_3254791510) {
  var result_3254791511 = null;

  BeforeRet: {
    if (isObj(cell_3254791501.m_type, NTI3338665992)) {
    result_3254791511 = getFirstLeaf_3254791447(cell_3254791501);
    break BeforeRet;
    }
    
    if ((cell_3254791501.parent == null)) {
    result_3254791511 = cell_3254791501;
    break BeforeRet;
    }
    
    var parent_3254791521 = cell_3254791501.parent;
    var index_3254791522 = indexOf_3338666080(parent_3254791521, cell_3254791501);
    if ((index_3254791522 < (parent_3254791521.children).length - 1)) {
    result_3254791511 = getFirstLeaf_3254791447(parent_3254791521.children[chckIndx(addInt(index_3254791522, 1), 0, (parent_3254791521.children).length - 1)]);
    break BeforeRet;
    }
    else {
      var newParent_3254791526 = parent_3254791521;
      var parentIndex_3254791527 = index_3338666132(newParent_3254791526);
      Label1: {
          Label2: while (true) {
          if (!(!((parentIndex_3254791527 == -1)) && (parentHigh_3338666138(newParent_3254791526) <= parentIndex_3254791527))) break Label2;
            newParent_3254791526 = newParent_3254791526.parent;
            parentIndex_3254791527 = index_3338666132(newParent_3254791526);
          }
      };
      if ((parentIndex_3254791527 < parentHigh_3338666138(newParent_3254791526))) {
      var prevParent_3254791528 = nextDirect_3338666206(newParent_3254791526);
      result_3254791511 = getFirstLeaf_3254791447(prevParent_3254791528);
      break BeforeRet;
      }
      
      result_3254791511 = cell_3254791501;
      break BeforeRet;
    }
    
  };

  return result_3254791511;

}

function getNextLeafWhere_3254791540(cell_3254791541, predicate_3254791544) {
  var result_3254791545 = null;

    result_3254791545 = getNextLeaf_3254791500(cell_3254791541, none_3003121842());
    Label1: {
        Label2: while (true) {
        if (!!(predicate_3254791544(result_3254791545))) break Label2;
          var oldResult_3254791546 = result_3254791545;
          result_3254791545 = getNextLeaf_3254791500(result_3254791545, none_3003121842());
          if ((result_3254791545 == oldResult_3254791546)) {
          break Label1;
          }
          
        }
    };

  return result_3254791545;

}

function getNextSelectableLeaf_3254791554(cell_3254791555) {
  var result_3254791556 = null;

  BeforeRet: {
    result_3254791556 = getNextLeafWhere_3254791540(cell_3254791555, canSelect_3254780180);
    break BeforeRet;
  };

  return result_3254791556;

}

function moveCursorRightCell_3254793200(self_3254793201, select_3254793202) {
      var Temporary1;

      var oHEX60gensym372_3254793205 = getCellForCursor_3254780157(self_3254793201, self_3254793201.cursor, true);
      if (!isSome_3271567127(oHEX60gensym372_3254793205)) Temporary1 = false; else {        var cell_3254793228 = get_3271567147(oHEX60gensym372_3254793205);
        Temporary1 = true;      }    if (Temporary1) {
    var newCursor_3254793229 = toCursor_3254780177(getNextSelectableLeaf_3254791554(cell_3254793228), true);
    if (!((newCursor_3254793229.node == null))) {
    self_3254793201.cursor = nimCopy(self_3254793201.cursor, selectCursor_3254780184(self_3254793201.cursor, newCursor_3254793229, select_3254793202), NTI3254779907);
    }
    
    }
    
    markDirty_2415919143(self_3254793201);

  
}

function moveCursorRightCellJsWrapper_3254793196(self_3254793261, select_3254793262) {
    moveCursorRightCell_3254793200(self_3254793261, select_3254793262);

  
}
editor_model_prototype.moveCursorRightCell = function(select_ /* : bool */) { return (moveCursorRightCellJsWrapper_3254793196(this, select_));};

function isVisible_3254780182(cell_3254780183) {
  var result_3254791433 = false;

  BeforeRet: {
    if ((!((cell_3254780183.isVisible == null)) && !(cell_3254780183.isVisible(cell_3254780183.node)))) {
    result_3254791433 = false;
    break BeforeRet;
    }
    
    result_3254791433 = true;
    break BeforeRet;
  };

  return result_3254791433;

}

function getPreviousVisibleLeaf_3254791557(cell_3254791558) {
  var result_3254791559 = null;

  BeforeRet: {
    result_3254791559 = getPreviousLeafWhere_3254791529(cell_3254791558, isVisible_3254780182);
    break BeforeRet;
  };

  return result_3254791559;

}

function deleteLeft_3254793290(self_3254793291) {
      var Temporary1;

      var oHEX60gensym383_3254793294 = getCellForCursor_3254780157(self_3254793291, self_3254793291.cursor, true);
      if (!isSome_3271567127(oHEX60gensym383_3254793294)) Temporary1 = false; else {        var cell_3254793317 = get_3271567147(oHEX60gensym383_3254793294);
        Temporary1 = true;      }    if (Temporary1) {
    if ((self_3254793291.cursor.lastIndex <= editableLow_3338666178(cell_3254793317))) {
    var prev_3254793318 = getPreviousVisibleLeaf_3254791557(cell_3254793317);
    if (!((prev_3254793318 == cell_3254793317))) {
    var newCursor_3254793323 = handleDeleteLeft_3254791955(prev_3254793318, high_3338666184(prev_3254793318));
    if (!((newCursor_3254793323.node == null))) {
    self_3254793291.cursor = nimCopy(self_3254793291.cursor, newCursor_3254793323, NTI3254779907);
    }
    
    }
    
    }
    else {
      var newCursor_3254793327 = handleDeleteLeft_3254791955(cell_3254793317, self_3254793291.cursor.lastIndex);
      if (!((newCursor_3254793327.node == null))) {
      self_3254793291.cursor = nimCopy(self_3254793291.cursor, newCursor_3254793327, NTI3254779907);
      }
      
    }
    
    }
    
    markDirty_2415919143(self_3254793291);

  
}

function deleteLeftJsWrapper2_3254793286(self_3254793358) {
    deleteLeft_3254793290(self_3254793358);

  
}
editor_model_prototype.deleteLeft2 = function() { return (deleteLeftJsWrapper2_3254793286(this));};

function getNextVisibleLeaf_3254791560(cell_3254791561) {
  var result_3254791562 = null;

  BeforeRet: {
    result_3254791562 = getNextLeafWhere_3254791540(cell_3254791561, isVisible_3254780182);
    break BeforeRet;
  };

  return result_3254791562;

}

function deleteRight_3254793379(self_3254793380) {
      var Temporary1;

      var oHEX60gensym395_3254793383 = getCellForCursor_3254780157(self_3254793380, self_3254793380.cursor, true);
      if (!isSome_3271567127(oHEX60gensym395_3254793383)) Temporary1 = false; else {        var cell_3254793406 = get_3271567147(oHEX60gensym395_3254793383);
        Temporary1 = true;      }    if (Temporary1) {
    if ((addInt(editableHigh_3338666196(cell_3254793406), 1) <= self_3254793380.cursor.lastIndex)) {
    var prev_3254793407 = getNextVisibleLeaf_3254791560(cell_3254793406);
    if (!((prev_3254793407 == cell_3254793406))) {
    var newCursor_3254793412 = handleDeleteRight_3254791961(prev_3254793407, 0);
    if (!((newCursor_3254793412.node == null))) {
    self_3254793380.cursor = nimCopy(self_3254793380.cursor, newCursor_3254793412, NTI3254779907);
    }
    
    }
    
    }
    else {
      var newCursor_3254793416 = handleDeleteRight_3254791961(cell_3254793406, self_3254793380.cursor.lastIndex);
      if (!((newCursor_3254793416.node == null))) {
      self_3254793380.cursor = nimCopy(self_3254793380.cursor, newCursor_3254793416, NTI3254779907);
      }
      
    }
    
    }
    
    markDirty_2415919143(self_3254793380);

  
}

function deleteRightJsWrapper2_3254793375(self_3254793447) {
    deleteRight_3254793379(self_3254793447);

  
}
editor_model_prototype.deleteRight2 = function() { return (deleteRightJsWrapper2_3254793375(this));};

function replaceText_3338666307(cell_3338666308, slice_3338666310, text_3338666311) {
  var result_3338666312 = 0;

  BeforeRet: {
    var currentText_3338666313 = [getText_3338666018(cell_3338666308)];
    if ((slice_3338666310.a < slice_3338666310.b)) {
    delete_855639365(currentText_3338666313, 0, HEX2EHEX2E_805306418(slice_3338666310.a, subInt(slice_3338666310.b, 1)));
    }
    
    insert_33557745(currentText_3338666313, 0, text_3338666311, chckRange(slice_3338666310.a, 0, 2147483647));
    setText_3338666023(cell_3338666308, currentText_3338666313[0]);
    if (eqStrings(getText_3338666018(cell_3338666308), currentText_3338666313[0])) {
    result_3338666312 = addInt(slice_3338666310.a, (text_3338666311).length);
    break BeforeRet;
    }
    
    result_3338666312 = slice_3338666310.b;
    break BeforeRet;
  };

  return result_3338666312;

}

function orderedRange_3254779994(cursor_3254779995) {
  var result_3254779997 = ({a: 0, b: 0});

  BeforeRet: {
    result_3254779997 = nimCopy(result_3254779997, HEX2EHEX2E_805306418(nimMin(cursor_3254779995.firstIndex, cursor_3254779995.lastIndex), nimMax(cursor_3254779995.firstIndex, cursor_3254779995.lastIndex)), NTI805306392);
    break BeforeRet;
  };

  return result_3254779997;

}

function insertTextAtCursor_3254780162(self_3254780163, input_3254780164) {
      var Temporary1;

  var result_3254793471 = false;

  BeforeRet: {
      var oHEX60gensym410_3254793474 = getCellForCursor_3254780157(self_3254780163, self_3254780163.cursor, true);
      if (!isSome_3271567127(oHEX60gensym410_3254793474)) Temporary1 = false; else {        var cell_3254793497 = get_3271567147(oHEX60gensym410_3254793474);
        Temporary1 = true;      }    if (Temporary1) {
    var newColumn_3254793498 = replaceText_3338666307(cell_3254793497, orderedRange_3254779994(self_3254780163.cursor), input_3254780164);
    if (!((newColumn_3254793498 == self_3254780163.cursor.lastIndex))) {
    columnHEX3D_3254779991(self_3254780163.cursor, newColumn_3254793498);
    markDirty_2415919143(self_3254780163);
    result_3254793471 = true;
    break BeforeRet;
    }
    
    }
    
    result_3254793471 = false;
    break BeforeRet;
  };

  return result_3254793471;

}

function insertTextAtCursorJsWrapper_3254793464(self_3254793528, input_3254793529) {
  var result_3254793530 = false;

    result_3254793530 = insertTextAtCursor_3254780162(self_3254793528, input_3254793529);

  return result_3254793530;

}
editor_model_prototype.insertTextAtCursor = function(input_ /* : string */) { return (insertTextAtCursorJsWrapper_3254793464(this, input_ == undefined ? undefined : cstrToNimstr(input_)));};

function clear_3254788637(t_3254788640) {
    Label1: {
      var i_3254788708 = 0;
      var colontmp__3254793610 = 0;
      colontmp__3254793610 = (t_3254788640.data).length;
      var i_3254793611 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_3254793611 < colontmp__3254793610)) break Label3;
            i_3254788708 = i_3254793611;
            t_3254788640.data[chckIndx(i_3254788708, 0, (t_3254788640.data).length - 1)].Field0 = 0;
            t_3254788640.data[chckIndx(i_3254788708, 0, (t_3254788640.data).length - 1)].Field1 = nimCopy(t_3254788640.data[chckIndx(i_3254788708, 0, (t_3254788640.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_3254788640.data[chckIndx(i_3254788708, 0, (t_3254788640.data).length - 1)].Field2 = null;
            i_3254793611 = addInt(i_3254793611, 1);
          }
      };
    };
    t_3254788640.counter = 0;

  
}

function rootNodes_3271557403(selfHEX60gensym11_3271557404) {
  var result_3271557405 = [];

  BeforeRet: {
    result_3271557405 = nimCopy(null, selfHEX60gensym11_3271557404.rootNodes, NTI3271557200);
    break BeforeRet;
  };

  return result_3271557405;

}

function rawGet_3254784979(t_3254784982, key_3254784983, hc_3254784984, hc_3254784984_Idx) {
  var result_3254784985 = 0;

  BeforeRet: {
    hc_3254784984[hc_3254784984_Idx] = hash_2046820630(key_3254784983);
    if ((hc_3254784984[hc_3254784984_Idx] == 0)) {
    hc_3254784984[hc_3254784984_Idx] = 314159265;
    }
    
    if (((t_3254784982.data).length == 0)) {
    result_3254784985 = -1;
    break BeforeRet;
    }
    
    var h_3254785053 = (hc_3254784984[hc_3254784984_Idx] & (t_3254784982.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254784982.data[chckIndx(h_3254785053, 0, (t_3254784982.data).length - 1)].Field0)) break Label2;
          if (((t_3254784982.data[chckIndx(h_3254785053, 0, (t_3254784982.data).length - 1)].Field0 == hc_3254784984[hc_3254784984_Idx]) && HEX3DHEX3D_2046820626(t_3254784982.data[chckIndx(h_3254785053, 0, (t_3254784982.data).length - 1)].Field1, key_3254784983))) {
          result_3254784985 = h_3254785053;
          break BeforeRet;
          }
          
          h_3254785053 = nextTry_1308622883(h_3254785053, (t_3254784982.data).length - 1);
        }
    };
    result_3254784985 = subInt(-1, h_3254785053);
  };

  return result_3254784985;

}

function hasKey_3254787019(t_3254787022, key_3254787023) {
  var result_3254787024 = false;

    var hc_3254787025 = [0];
    result_3254787024 = (0 <= rawGet_3254784979(t_3254787022, key_3254787023, hc_3254787025, 0));

  return result_3254787024;

}

function contains_3254787013(t_3254787016, key_3254787017) {
  var result_3254787018 = false;

  BeforeRet: {
    result_3254787018 = hasKey_3254787019(t_3254787016, key_3254787017);
    break BeforeRet;
  };

  return result_3254787018;

}

function mustRehash_3254787311(t_3254787313) {
  var result_3254787314 = false;

    if (!((t_3254787313.counter < (t_3254787313.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254787314 = ((mulInt((t_3254787313.data).length, 2) < mulInt(t_3254787313.counter, 3)) || (subInt((t_3254787313.data).length, t_3254787313.counter) < 4));

  return result_3254787314;

}

function rawInsert_3254787920(t_3254787924, data_3254787925, data_3254787925_Idx, key_3254787926, val_3254787927, hc_3254787928, h_3254787929) {
    data_3254787925[data_3254787925_Idx][chckIndx(h_3254787929, 0, (data_3254787925[data_3254787925_Idx]).length - 1)].Field1 = nimCopy(data_3254787925[data_3254787925_Idx][chckIndx(h_3254787929, 0, (data_3254787925[data_3254787925_Idx]).length - 1)].Field1, key_3254787926, NTI2046820355);
    data_3254787925[data_3254787925_Idx][chckIndx(h_3254787929, 0, (data_3254787925[data_3254787925_Idx]).length - 1)].Field2 = val_3254787927;
    data_3254787925[data_3254787925_Idx][chckIndx(h_3254787929, 0, (data_3254787925[data_3254787925_Idx]).length - 1)].Field0 = hc_3254787928;

  
}

function enlarge_3254787514(t_3254787517) {
    var n_3254787520 = [];
    n_3254787520 = new Array(chckRange(mulInt((t_3254787517.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254787517.data).length, 2), 0, 2147483647) ; ++i) { n_3254787520[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3254787517.data; t_3254787517.data = n_3254787520; n_3254787520 = Temporary1;    Label2: {
      var i_3254787600 = 0;
      var colontmp__3254793621 = 0;
      colontmp__3254793621 = (n_3254787520).length - 1;
      var res_3254793622 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_3254793622 <= colontmp__3254793621)) break Label4;
            i_3254787600 = res_3254793622;
            var eh_3254787678 = n_3254787520[chckIndx(i_3254787600, 0, (n_3254787520).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254787678)) {
            var j_3254787682 = (eh_3254787678 & (t_3254787517.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254787517.data[chckIndx(j_3254787682, 0, (t_3254787517.data).length - 1)].Field0)) break Label6;
                  j_3254787682 = nextTry_1308622883(j_3254787682, (t_3254787517.data).length - 1);
                }
            };
            rawInsert_3254787920(t_3254787517, t_3254787517, "data", n_3254787520[chckIndx(i_3254787600, 0, (n_3254787520).length - 1)].Field1, n_3254787520[chckIndx(i_3254787600, 0, (n_3254787520).length - 1)].Field2, eh_3254787678, j_3254787682);
            }
            
            res_3254793622 = addInt(res_3254793622, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254788161(t_3254788164, key_3254788165, hc_3254788166) {
  var result_3254788167 = 0;

  BeforeRet: {
    if (((t_3254788164.data).length == 0)) {
    result_3254788167 = -1;
    break BeforeRet;
    }
    
    var h_3254788234 = (hc_3254788166 & (t_3254788164.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254788164.data[chckIndx(h_3254788234, 0, (t_3254788164.data).length - 1)].Field0)) break Label2;
          if (((t_3254788164.data[chckIndx(h_3254788234, 0, (t_3254788164.data).length - 1)].Field0 == hc_3254788166) && HEX3DHEX3D_2046820626(t_3254788164.data[chckIndx(h_3254788234, 0, (t_3254788164.data).length - 1)].Field1, key_3254788165))) {
          result_3254788167 = h_3254788234;
          break BeforeRet;
          }
          
          h_3254788234 = nextTry_1308622883(h_3254788234, (t_3254788164.data).length - 1);
        }
    };
    result_3254788167 = subInt(-1, h_3254788234);
  };

  return result_3254788167;

}

function HEX5BHEX5DHEX3D_3254787082(t_3254787085, key_3254787086, val_3254787087) {
    if (((t_3254787085.data).length == 0)) {
    var correctSizeHEX60gensym101_3254787152 = slotsNeeded_1308622891(32);
    t_3254787085.counter = 0;
    t_3254787085.data = new Array(chckRange(correctSizeHEX60gensym101_3254787152, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym101_3254787152, 0, 2147483647) ; ++i) { t_3254787085.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3254787157 = [0];
    var index_3254787164 = rawGet_3254784979(t_3254787085, key_3254787086, hc_3254787157, 0);
    if ((0 <= index_3254787164)) {
    t_3254787085.data[chckIndx(index_3254787164, 0, (t_3254787085.data).length - 1)].Field2 = val_3254787087;
    }
    else {
      if (((t_3254787085.data).length == 0)) {
      var correctSizeHEX60gensym104_3254787306 = slotsNeeded_1308622891(32);
      t_3254787085.counter = 0;
      t_3254787085.data = new Array(chckRange(correctSizeHEX60gensym104_3254787306, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym104_3254787306, 0, 2147483647) ; ++i) { t_3254787085.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3254787311(t_3254787085)) {
      enlarge_3254787514(t_3254787085);
      index_3254787164 = rawGetKnownHC_3254788161(t_3254787085, key_3254787086, hc_3254787157[0]);
      }
      
      index_3254787164 = subInt(-1, index_3254787164);
      rawInsert_3254787920(t_3254787085, t_3254787085, "data", key_3254787086, val_3254787087, hc_3254787157[0], index_3254787164);
      t_3254787085.counter = addInt(t_3254787085.counter, 1);
    }
    

  
}

function buildNodeCellMap_3254786947(self_3254786948, map_3254786951) {
    if ((!((self_3254786948.node == null)) && !(contains_3254787013(map_3254786951, self_3254786948.node.id)))) {
    HEX5BHEX5DHEX3D_3254787082(map_3254786951, self_3254786948.node.id, self_3254786948);
    }
    
    if (isObj(self_3254786948.m_type, NTI3338665992)) {
    Label1: {
      var c_3254788496 = null;
      var colontmp__3254793614 = [];
      colontmp__3254793614 = self_3254786948.children;
      var i_3254793615 = 0;
      var L_3254793616 = (colontmp__3254793614).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254793615 < L_3254793616)) break Label3;
            c_3254788496 = colontmp__3254793614[chckIndx(i_3254793615, 0, (colontmp__3254793614).length - 1)];
            buildNodeCellMap_3254786947(c_3254788496, map_3254786951);
            i_3254793615 = addInt(i_3254793615, 1);
            if (!(((colontmp__3254793614).length == L_3254793616))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function assignToLogicalLines_3254788497(self_3254788498, cell_3254788499, startLine_3254788500, currentLineEmpty_3254788501, currentLineEmpty_3254788501_Idx) {
              var Temporary4;

  var result_3254788502 = 0;

  BeforeRet: {
    if ((!((cell_3254788499.isVisible == null)) && !(cell_3254788499.isVisible(cell_3254788499.node)))) {
    result_3254788502 = startLine_3254788500;
    break BeforeRet;
    }
    
    cell_3254788499.line = startLine_3254788500;
    if (isObj(cell_3254788499.m_type, NTI3338665992)) {
    var coll_3254788512 = cell_3254788499;
    var vertical_3254788518 = (coll_3254788512.layout.kind == 2);
    var currentLine_3254788519 = startLine_3254788500;
    var maxLine_3254788520 = startLine_3254788500;
    var currentLineEmptyTemp_3254788521 = [currentLineEmpty_3254788501[currentLineEmpty_3254788501_Idx]];
    if (coll_3254788512.inline) {
    currentLineEmptyTemp_3254788521[0] = true;
    }
    
    Label1: {
      var i_3254788527 = 0;
      var c_3254788528 = null;
      var i_3254793626 = 0;
      var L_3254793627 = (coll_3254788512.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254793626 < L_3254793627)) break Label3;
            i_3254788527 = i_3254793626;
            c_3254788528 = coll_3254788512.children[chckIndx(i_3254793626, 0, (coll_3254788512.children).length - 1)];
            if ((vertical_3254788518 && ((0 < i_3254788527) || !(currentLineEmptyTemp_3254788521[0])))) {
            currentLineEmptyTemp_3254788521[0] = true;
            currentLine_3254788519 = maxLine_3254788520;
            currentLine_3254788519 = addInt(currentLine_3254788519, 1);
            maxLine_3254788520 = nimMax(maxLine_3254788520, currentLine_3254788519);
            }
            
            if (!((c_3254788528.style == null))) {
            if ((c_3254788528.style.onNewLine && !(currentLineEmptyTemp_3254788521[0]))) {
            currentLineEmptyTemp_3254788521[0] = true;
            currentLine_3254788519 = maxLine_3254788520;
            currentLine_3254788519 = addInt(currentLine_3254788519, 1);
            maxLine_3254788520 = nimMax(maxLine_3254788520, currentLine_3254788519);
            }
            
            }
            
            var newLine_3254788542 = assignToLogicalLines_3254788497(self_3254788498, c_3254788528, currentLine_3254788519, currentLineEmptyTemp_3254788521, 0);
              if (!isObj(c_3254788528.m_type, NTI3338665992)) Temporary4 = false; else {                Temporary4 = c_3254788528.inline;              }            if (!(Temporary4)) {
            currentLine_3254788519 = newLine_3254788542;
            }
            
            maxLine_3254788520 = nimMax(maxLine_3254788520, newLine_3254788542);
            if (!((c_3254788528.style == null))) {
            if (c_3254788528.style.addNewlineAfter) {
            currentLine_3254788519 = maxLine_3254788520;
            currentLineEmptyTemp_3254788521[0] = true;
            currentLine_3254788519 = addInt(currentLine_3254788519, 1);
            maxLine_3254788520 = nimMax(maxLine_3254788520, currentLine_3254788519);
            }
            
            }
            
            i_3254793626 = addInt(i_3254793626, 1);
            if (!(((coll_3254788512.children).length == L_3254793627))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(coll_3254788512.inline)) {
    currentLineEmpty_3254788501[currentLineEmpty_3254788501_Idx] = currentLineEmptyTemp_3254788521[0];
    }
    
    result_3254788502 = maxLine_3254788520;
    break BeforeRet;
    }
    else {
      Label5: {
          Label6: while (true) {
          if (!((self_3254788498.logicalLines).length <= startLine_3254788500)) break Label6;
            self_3254788498.logicalLines.push([]);;
          }
      };
      self_3254788498.logicalLines[chckIndx(startLine_3254788500, 0, (self_3254788498.logicalLines).length - 1)].push(cell_3254788499);;
      currentLineEmpty_3254788501[currentLineEmpty_3254788501_Idx] = false;
      result_3254788502 = startLine_3254788500;
      break BeforeRet;
    }
    
  };

  return result_3254788502;

}

function rebuildCells_3254780155(self_3254780156) {
    var builder_3254788580 = self_3254780156.document.builder;
    clear_3254788637(self_3254780156.nodeToCell);
    if (self_3254780156.logicalLines.length < 0) { for (var i = self_3254780156.logicalLines.length ; i < 0 ; ++i) self_3254780156.logicalLines.push([]); }
               else { self_3254780156.logicalLines.length = 0; };
    Label1: {
      var node_3254789187 = null;
      var colontmp__3254793605 = [];
      colontmp__3254793605 = rootNodes_3271557403(self_3254780156.document.model);
      var i_3254793606 = 0;
      var L_3254793607 = (colontmp__3254793605).length;
      Label2: {
          Label3: while (true) {
          if (!(i_3254793606 < L_3254793607)) break Label3;
            node_3254789187 = colontmp__3254793605[chckIndx(i_3254793606, 0, (colontmp__3254793605).length - 1)];
            var cell_3254789188 = buildCell_3338666913(builder_3254788580, node_3254789187, !(self_3254780156.useDefaultCellBuilder));
            buildNodeCellMap_3254786947(cell_3254789188, self_3254780156.nodeToCell);
            var temp_3254789189 = [true];
            var _ = assignToLogicalLines_3254788497(self_3254780156, cell_3254789188, 0, temp_3254789189, 0);
            i_3254793606 = addInt(i_3254793606, 1);
            if (!(((colontmp__3254793605).length == L_3254793607))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function toggleUseDefaultCellBuilder_3254793560(self_3254793561) {
    self_3254793561.useDefaultCellBuilder = !(self_3254793561.useDefaultCellBuilder);
    rebuildCells_3254780155(self_3254793561);
    markDirty_2415919143(self_3254793561);

  
}

function toggleUseDefaultCellBuilderJsWrapper_3254793556(self_3254793589) {
    toggleUseDefaultCellBuilder_3254793560(self_3254793589);

  
}
editor_model_prototype.toggleUseDefaultCellBuilder = function() { return (toggleUseDefaultCellBuilderJsWrapper_3254793556(this));};

function getBackend_1291854151(self_1291854152) {
  var result_1291854153 = 0;

  BeforeRet: {
    result_1291854153 = self_1291854152.backend;
    break BeforeRet;
  };

  return result_1291854153;

}

function getBackendJsWrapper_1291854147(self_1291854204) {
  var result_1291854205 = 0;

    result_1291854205 = getBackend_1291854151(self_1291854204);

  return result_1291854205;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854147(this));};

function isSome_2818579241(self_2818579243) {
  var result_2818579244 = false;

    result_2818579244 = !((self_2818579243.val == null));

  return result_2818579244;

}

function map_1291854424(self_1291854427, callback_1291854429) {
    var Temporary1;

  var result_1291854430 = ({val: [], has: false});

    if (isSome_2818579241(self_1291854427)) {
    Temporary1 = some_2281701410(callback_1291854429(self_1291854427.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_1291854430 = nimCopy(result_1291854430, Temporary1, NTI2348810261);

  return result_1291854430;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854591(a_1291854593, opt_1291854594) {
  var result_1291854595 = null;

    result_1291854595 = HEX25_1627391792(a_1291854593);

  return result_1291854595;

}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854658(a_1291854660) {
  var result_1291854661 = [];

    result_1291854661 = nimCopy(null, names_1291854663[chckIndx(subInt(a_1291854660, 0), 0, (names_1291854663).length - 1)], NTI33554449);

  return result_1291854661;

}

function toJson_1291854643(a_1291854645, opt_1291854646) {
    var Temporary1;

  var result_1291854647 = null;

    switch (opt_1291854646.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854645);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854658(a_1291854645), opt_1291854646);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854645, NTI1291845663), opt_1291854646);
      break;
    }
    result_1291854647 = Temporary1;

  return result_1291854647;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet237[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet238[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet239[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet240[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855175 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet241[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855175 = nimCopy(colontmp__1291855175, Temporary6.fields, NTI1627389966);
        var L_1291855176 = len_1627392114(colontmp__1291855175);
        if ((0 < colontmp__1291855175.counter)) {
        var h_1291855177 = colontmp__1291855175.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855177)) break Label8;
              var nxt_1291855179 = colontmp__1291855175.data[chckIndx(h_1291855177, 0, (colontmp__1291855175.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855175.data[chckIndx(h_1291855177, 0, (colontmp__1291855175.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855175.data[chckIndx(h_1291855177, 0, (colontmp__1291855175.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855175.data[chckIndx(h_1291855177, 0, (colontmp__1291855175.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet242[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855175) == L_1291855176))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855177 = nxt_1291855179;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855181 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet243[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855181 = Temporary11.elems;
        var i_1291855182 = 0;
        var L_1291855183 = (colontmp__1291855181).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855182 < L_1291855183)) break Label13;
              i_1627394330 = colontmp__1291855181[chckIndx(i_1291855182, 0, (colontmp__1291855181).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet244[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855182 = addInt(i_1291855182, 1);
              if (!(((colontmp__1291855181).length == L_1291855183))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818589144(a_2818589146, opt_2818589147) {
  var result_2818589148 = null;

    result_2818589148 = HEX25_1627391795(a_2818589146);

  return result_2818589148;

}

function symbolName_1291854792(a_1291854794) {
  var result_1291854795 = [];

    result_1291854795 = nimCopy(null, names_1291854797[chckIndx(subInt(a_1291854794, 0), 0, (names_1291854797).length - 1)], NTI33554449);

  return result_1291854795;

}

function toJson_1291854776(a_1291854778, opt_1291854779) {
    var Temporary1;

  var result_1291854780 = null;

    switch (opt_1291854779.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854778);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854792(a_1291854778), opt_1291854779);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854778, NTI1627389955), opt_1291854779);
      break;
    }
    result_1291854780 = Temporary1;

  return result_1291854780;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854886(a_1291854888, opt_1291854889) {
  var result_1291854890 = null;

    result_1291854890 = HEX25_1627391789(a_1291854888);

  return result_1291854890;

}

function toJson_1291854896(a_1291854898, opt_1291854899) {
  var result_1291854900 = null;

    result_1291854900 = HEX25_1627391792(a_1291854898);

  return result_1291854900;

}

function toJsonHook_1291854989(t_1291854993, opt_1291854994) {
  var result_1291854995 = null;

    result_1291854995 = newJObject_1627390051();
    Label1: {
      var k_1291855000 = [];
      var v_1291855001 = null;
      var L_1291855186 = len_1627392114(t_1291854993);
      if ((0 < t_1291854993.counter)) {
      var h_1291855187 = t_1291854993.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855187)) break Label3;
            var nxt_1291855189 = t_1291854993.data[chckIndx(h_1291855187, 0, (t_1291854993.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854993.data[chckIndx(h_1291855187, 0, (t_1291854993.data).length - 1)].Field0)) {
            k_1291855000 = t_1291854993.data[chckIndx(h_1291855187, 0, (t_1291854993.data).length - 1)].Field2;
            v_1291855001 = t_1291854993.data[chckIndx(h_1291855187, 0, (t_1291854993.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854995, k_1291855000, toJson_1291854747(v_1291855001, opt_1291854994));
            if (!((len_1627392114(t_1291854993) == L_1291855186))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855187 = nxt_1291855189;
          }
      };
      }
      
    };

  return result_1291854995;

}

function toJson_1291854911(a_1291854913, opt_1291854914) {
  var result_1291854915 = null;

    result_1291854915 = toJsonHook_1291854989(a_1291854913, opt_1291854914);

  return result_1291854915;

}

function toJson_1291855006(a_1291855008, opt_1291855009) {
  var result_1291855010 = null;

    result_1291855010 = newJArray_1627390082();
    Label1: {
      var ai_1291855017 = null;
      var i_1291855191 = 0;
      var L_1291855192 = (a_1291855008).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855191 < L_1291855192)) break Label3;
            ai_1291855017 = a_1291855008[chckIndx(i_1291855191, 0, (a_1291855008).length - 1)];
            add_1627390190(result_1291855010, toJson_1291854747(ai_1291855017, opt_1291855009));
            i_1291855191 = addInt(i_1291855191, 1);
            if (!(((a_1291855008).length == L_1291855192))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291855010;

}

function toJson_1291854759(a_1291854761, opt_1291854762) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854763 = null;

    result_1291854763 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854763, [105,115,85,110,113,117,111,116,101,100], toJson_2818589144(a_1291854761.isUnquoted, opt_1291854762));
    HEX5BHEX5DHEX3D_1627391903(result_1291854763, [107,105,110,100], toJson_1291854776(a_1291854761.kind, opt_1291854762));
    switch (a_1291854761.kind) {
    case 4:
      var Temporary1 = a_1291854761;
      if (ConstSet245[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854762));
      break;
    case 2:
      var Temporary2 = a_1291854761;
      if (ConstSet246[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [110,117,109], toJson_1291854886(Temporary2.num, opt_1291854762));
      break;
    case 3:
      var Temporary3 = a_1291854761;
      if (ConstSet247[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [102,110,117,109], toJson_1291854896(Temporary3.fnum, opt_1291854762));
      break;
    case 1:
      var Temporary4 = a_1291854761;
      if (ConstSet248[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [98,118,97,108], toJson_2818589144(Temporary4.bval, opt_1291854762));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854761;
      if (ConstSet249[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [102,105,101,108,100,115], toJson_1291854911(Temporary5.fields, opt_1291854762));
      break;
    case 6:
      var Temporary6 = a_1291854761;
      if (ConstSet250[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854763, [101,108,101,109,115], toJson_1291855006(Temporary6.elems, opt_1291854762));
      break;
    }

  return result_1291854763;

}

function toJson_1291854747(a_1291854749, opt_1291854750) {
  var result_1291854751 = null;

    switch (opt_1291854750.jsonNodeMode) {
    case 0:
      result_1291854751 = a_1291854749;
      break;
    case 1:
      result_1291854751 = copy_1627394272(a_1291854749);
      break;
    case 2:
      if ((a_1291854749 == null)) {
      result_1291854751 = newJNull_1627390049();
      }
      else {
        result_1291854751 = toJson_1291854759(a_1291854749, opt_1291854750);
      }
      
      break;
    }

  return result_1291854751;

}

function toJson_1291854630(a_1291854632, opt_1291854633) {
  var result_1291854634 = null;

    result_1291854634 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854634, [107,105,110,100], toJson_1291854643(a_1291854632.kind, opt_1291854633));
    HEX5BHEX5DHEX3D_1627391903(result_1291854634, [105,100], toJson_1811939932(a_1291854632.id, opt_1291854633));
    HEX5BHEX5DHEX3D_1627391903(result_1291854634, [110,97,109,101], toJson_1811939932(a_1291854632.name, opt_1291854633));
    HEX5BHEX5DHEX3D_1627391903(result_1291854634, [115,101,116,116,105,110,103,115], toJson_1291854747(a_1291854632.settings, opt_1291854633));

  return result_1291854634;

}

function toJson_1291854618(a_1291854620, opt_1291854621) {
  var result_1291854622 = null;

    result_1291854622 = newJArray_1627390082();
    Label1: {
      var ai_1291854629 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855171 = 0;
      var L_1291855172 = (a_1291854620).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855171 < L_1291855172)) break Label3;
            ai_1291854629 = a_1291854620[chckIndx(i_1291855171, 0, (a_1291854620).length - 1)];
            add_1627390190(result_1291854622, toJson_1291854630(ai_1291854629, opt_1291854621));
            i_1291855171 = addInt(i_1291855171, 1);
            if (!(((a_1291854620).length == L_1291855172))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854622;

}

function toJson_1291855034(a_1291855036, opt_1291855037) {
  var result_1291855038 = null;

    result_1291855038 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291855038, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291855036.filename, opt_1291855037));
    HEX5BHEX5DHEX3D_1627391903(result_1291855038, [97,115,116], toJson_2818589144(a_1291855036.ast, opt_1291855037));
    HEX5BHEX5DHEX3D_1627391903(result_1291855038, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291855036.languageID, opt_1291855037));
    HEX5BHEX5DHEX3D_1627391903(result_1291855038, [97,112,112,70,105,108,101], toJson_2818589144(a_1291855036.appFile, opt_1291855037));
    HEX5BHEX5DHEX3D_1627391903(result_1291855038, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291855036.workspaceId, opt_1291855037));

  return result_1291855038;

}

function toJson_1291855022(a_1291855024, opt_1291855025) {
  var result_1291855026 = null;

    result_1291855026 = newJArray_1627390082();
    Label1: {
      var ai_1291855033 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855196 = 0;
      var L_1291855197 = (a_1291855024).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855196 < L_1291855197)) break Label3;
            ai_1291855033 = a_1291855024[chckIndx(i_1291855196, 0, (a_1291855024).length - 1)];
            add_1627390190(result_1291855026, toJson_1291855034(ai_1291855033, opt_1291855025));
            i_1291855196 = addInt(i_1291855196, 1);
            if (!(((a_1291855024).length == L_1291855197))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291855026;

}

function toJson_1291854574(a_1291854576, opt_1291854577) {
  var result_1291854578 = null;

    result_1291854578 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [116,104,101,109,101], toJson_1811939932(a_1291854576.theme, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [102,111,110,116,83,105,122,101], toJson_1291854591(a_1291854576.fontSize, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854576.fontRegular, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854576.fontBold, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854576.fontItalic, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854576.fontBoldItalic, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854618(a_1291854576.workspaceFolders, opt_1291854577));
    HEX5BHEX5DHEX3D_1627391903(result_1291854578, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291855022(a_1291854576.openEditors, opt_1291854577));

  return result_1291854578;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet251[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855200 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet252[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855200 = nimCopy(colontmp__1291855200, Temporary3.fields, NTI1627389966);
        var L_1291855201 = len_1627392114(colontmp__1291855200);
        if ((0 < colontmp__1291855200.counter)) {
        var h_1291855202 = colontmp__1291855200.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855202)) break Label5;
              var nxt_1291855204 = colontmp__1291855200.data[chckIndx(h_1291855202, 0, (colontmp__1291855200.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855200.data[chckIndx(h_1291855202, 0, (colontmp__1291855200.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855200.data[chckIndx(h_1291855202, 0, (colontmp__1291855200.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855200.data[chckIndx(h_1291855202, 0, (colontmp__1291855200.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855200) == L_1291855201))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855202 = nxt_1291855204;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet253[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet254[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet255[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet256[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855206 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet257[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855206 = subInt((Temporary12.elems).length, 1);
        var res_1291855207 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855207 <= colontmp__1291855206)) break Label14;
              i_1627394476 = res_1291855207;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet258[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855207 = addInt(res_1291855207, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853872(self_1291853873) {
              var Temporary5;
            
function HEX3Aanonymous_1291854408(wf_1291854419) {
              var result_1291854422 = [];

                result_1291854422 = nimCopy(null, HEX24_2046820617(wf_1291854419.id), NTI33554449);

              return result_1291854422;

            }
            
function HEX3Aanonymous_1291854479(wf_1291854490) {
              var result_1291854493 = [];

                result_1291854493 = nimCopy(null, HEX24_2046820617(wf_1291854490.id), NTI33554449);

              return result_1291854493;

            }
            
function HEX3Aanonymous_1291854532(wf_1291854543) {
              var result_1291854546 = [];

                result_1291854546 = nimCopy(null, HEX24_2046820617(wf_1291854543.id), NTI33554449);

              return result_1291854546;

            }

    var state_1291854320 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854320.theme = nimCopy(null, self_1291853873.theme.path, NTI33554449);
    if ((self_1291853873.backend == 1)) {
    state_1291854320.fontSize = self_1291853873.loadedFontSize;
    }
    else {
      state_1291854320.fontSize = fontSize_2768240784(self_1291853873.platform);
    }
    
    state_1291854320.fontRegular = nimCopy(null, self_1291853873.fontRegular, NTI33554449);
    state_1291854320.fontBold = nimCopy(null, self_1291853873.fontBold, NTI33554449);
    state_1291854320.fontItalic = nimCopy(null, self_1291853873.fontItalic, NTI33554449);
    state_1291854320.fontBoldItalic = nimCopy(null, self_1291853873.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854348 = null;
      var i_1291855161 = 0;
      var L_1291855162 = (self_1291853873.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855161 < L_1291855162)) break Label3;
            workspaceFolder_1291854348 = self_1291853873.workspace.folders[chckIndx(i_1291855161, 0, (self_1291853873.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854348.m_type, NTI2264924164)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854348.m_type, NTI2399141893)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854348.m_type, NTI2281701380)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854370 = Temporary5;
              state_1291854320.workspaceFolders.push({kind: kind_1291854370, id: HEX24_2046820617(workspaceFolder_1291854348.id), name: nimCopy(null, workspaceFolder_1291854348.name, NTI33554449), settings: settings_2214592534(workspaceFolder_1291854348)});;
            };
            i_1291855161 = addInt(i_1291855161, 1);
            if (!(((self_1291853873.workspace.folders).length == L_1291855162))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854396 = null;
      var i_1291855166 = 0;
      var L_1291855167 = (self_1291853873.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855166 < L_1291855167)) break Label8;
            view_1291854396 = self_1291853873.views[chckIndx(i_1291855166, 0, (self_1291853873.views).length - 1)];
            if (isObj(view_1291854396.document.m_type, NTI2818572427)) {
            var textDocument_1291854403 = view_1291854396.document;
            state_1291854320.openEditors.push({filename: nimCopy(null, textDocument_1291854403.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854403.languageId, NTI33554449), appFile: textDocument_1291854403.appFile, workspaceId: get_2348810295(map_1291854424(textDocument_1291854403.workspace, HEX3Aanonymous_1291854408), [])});;
            }
            else {
            if (isObj(view_1291854396.document.m_type, NTI2969568612)) {
            var astDocument_1291854474 = view_1291854396.document;
            state_1291854320.openEditors.push({filename: nimCopy(null, astDocument_1291854474.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854474.appFile, workspaceId: get_2348810295(map_1291854424(astDocument_1291854474.workspace, HEX3Aanonymous_1291854479), [])});;
            }
            else {
            if (isObj(view_1291854396.document.m_type, NTI3254779944)) {
            var astDocument_1291854527 = view_1291854396.document;
            state_1291854320.openEditors.push({filename: nimCopy(null, astDocument_1291854527.filename, NTI33554449), ast: false, languageID: [97,109], appFile: astDocument_1291854527.appFile, workspaceId: get_2348810295(map_1291854424(astDocument_1291854527.workspace, HEX3Aanonymous_1291854532), [])});;
            }
            }}
            i_1291855166 = addInt(i_1291855166, 1);
            if (!(((self_1291853873.views).length == L_1291855167))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855067 = toJson_1291854574(state_1291854320, initToJsonOptions_1811939362());
    saveApplicationFile_2365587480(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855067, 2));
    saveApplicationFile_2365587480(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853873.options, 2));

  
}

function saveAppStateJsWrapper_1291854314(self_1291855148) {
    saveAppState_1291853872(self_1291855148);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854314(this));};

function requestRender_1291855215(self_1291855216, redrawEverything_1291855217) {
    requestRender_2768240746(self_1291855216.platform, redrawEverything_1291855217);

  
}

function requestRenderJsWrapper_1291855211(self_1291855245, redrawEverything_1291855246) {
    requestRender_1291855215(self_1291855245, redrawEverything_1291855246);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855211(this, redrawEverything_));};

function setHandleInputs_2113929570(config_2113929571, value_2113929572) {
    config_2113929571.handleInputs = value_2113929572;
    config_2113929571.revision = addInt(config_2113929571.revision, 1);

  
}

function setHandleInputs_1291855267(self_1291855268, context_1291855269, value_1291855270) {
    setHandleInputs_2113929570(getEventHandlerConfig_1291849162(self_1291855268, context_1291855269), value_1291855270);

  
}

function setHandleInputsJsWrapper_1291855263(self_1291855299, context_1291855300, value_1291855301) {
    setHandleInputs_1291855267(self_1291855299, context_1291855300, value_1291855301);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855263(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2113929577(config_2113929578, value_2113929579) {
    config_2113929578.handleActions = value_2113929579;
    config_2113929578.revision = addInt(config_2113929578.revision, 1);

  
}

function setHandleActions_1291855327(self_1291855328, context_1291855329, value_1291855330) {
    setHandleActions_2113929577(getEventHandlerConfig_1291849162(self_1291855328, context_1291855329), value_1291855330);

  
}

function setHandleActionsJsWrapper_1291855323(self_1291855359, context_1291855360, value_1291855361) {
    setHandleActions_1291855327(self_1291855359, context_1291855360, value_1291855361);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855323(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2113929584(config_2113929585, value_2113929586) {
    config_2113929585.consumeAllActions = value_2113929586;
    config_2113929585.revision = addInt(config_2113929585.revision, 1);

  
}

function setConsumeAllActions_1291855387(self_1291855388, context_1291855389, value_1291855390) {
    setConsumeAllActions_2113929584(getEventHandlerConfig_1291849162(self_1291855388, context_1291855389), value_1291855390);

  
}

function setConsumeAllActionsJsWrapper_1291855383(self_1291855419, context_1291855420, value_1291855421) {
    setConsumeAllActions_1291855387(self_1291855419, context_1291855420, value_1291855421);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855383(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2113929591(config_2113929592, value_2113929593) {
    config_2113929592.consumeAllInput = value_2113929593;
    config_2113929592.revision = addInt(config_2113929592.revision, 1);

  
}

function setConsumeAllInput_1291855447(self_1291855448, context_1291855449, value_1291855450) {
    setConsumeAllInput_2113929591(getEventHandlerConfig_1291849162(self_1291855448, context_1291855449), value_1291855450);

  
}

function setConsumeAllInputJsWrapper_1291855443(self_1291855479, context_1291855480, value_1291855481) {
    setConsumeAllInput_1291855447(self_1291855479, context_1291855480, value_1291855481);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855443(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855584(self_1291855585) {
    Label1: {
      var wf_1291855589 = null;
      var i_1291855627 = 0;
      var L_1291855628 = (self_1291855585.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855627 < L_1291855628)) break Label3;
            wf_1291855589 = self_1291855585.workspace.folders[chckIndx(i_1291855627, 0, (self_1291855585.workspace.folders).length - 1)];
            clearDirectoryCache_2214592538(wf_1291855589);
            i_1291855627 = addInt(i_1291855627, 1);
            if (!(((self_1291855585.workspace.folders).length == L_1291855628))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855580(self_1291855616) {
    clearWorkspaceCaches_1291855584(self_1291855616);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855580(this));};

function openWorkspaceKind_1291851101(workspaceFolder_1291851102) {
  var result_1291855503 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851102.m_type, NTI2264924164)) {
    result_1291855503 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851102.m_type, NTI2399141893)) {
    result_1291855503 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851102.m_type, NTI2281701380)) {
    result_1291855503 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,54,48,54,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855503;

}

function addWorkspaceFolder_1291851103(self_1291851104, workspaceFolder_1291851105) {
  var result_1291855530 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855534 = null;
      var i_1291855699 = 0;
      var L_1291855700 = (self_1291851104.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855699 < L_1291855700)) break Label3;
            wf_1291855534 = self_1291851104.workspace.folders[chckIndx(i_1291855699, 0, (self_1291851104.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851101(wf_1291855534) == openWorkspaceKind_1291851101(workspaceFolder_1291851105)) && HEX3DHEX3D_1627392026(settings_2214592534(wf_1291855534), settings_2214592534(workspaceFolder_1291851105)))) {
            result_1291855530 = false;
            break BeforeRet;
            }
            
            i_1291855699 = addInt(i_1291855699, 1);
            if (!(((self_1291851104.workspace.folders).length == L_1291855700))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820626(workspaceFolder_1291851105.id, idNone_2046820633())) {
    workspaceFolder_1291851105.id = nimCopy(workspaceFolder_1291851105.id, newId_2046820597(), NTI2046820355);
    }
    
    var fmtRes_1291855544 = [mnewString(0)];
    fmtRes_1291855544[0].push.apply(fmtRes_1291855544[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855544, 0, workspaceFolder_1291851105.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855544[0], NTI33554449)]);
    self_1291851104.workspace.folders.push(workspaceFolder_1291851105);;
    result_1291855530 = true;
    break BeforeRet;
  };

  return result_1291855530;

}

function initTable_2281703693(initialSize_2281703696) {
  var result_2281703697 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2281703699 = slotsNeeded_1308622891(chckRange(initialSize_2281703696, 0, 2147483647));
    result_2281703697.counter = 0;
    result_2281703697.data = new Array(chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647) ; ++i) { result_2281703697.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2281703697;

}

function newWorkspaceFolderGithub_2281703680(user_2281703681, repository_2281703682, branchOrHash_2281703683) {
  var result_2281703684 = null;

    result_2281703684 = ({m_type: NTI2281701380, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2281703692 = [mnewString(0)];
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2281703692, 0, user_2281703681, []);
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [47]);;
    formatValue_721420459(fmtRes_2281703692, 0, repository_2281703682, []);
    result_2281703684.baseUrl = nimCopy(null, fmtRes_2281703692[0], NTI33554449);
    result_2281703684.user = nimCopy(null, user_2281703681, NTI33554449);
    result_2281703684.repository = nimCopy(null, repository_2281703682, NTI33554449);
    result_2281703684.branchOrHash = nimCopy(null, branchOrHash_2281703683, NTI33554449);
    result_2281703684.cachedDirectoryListings = nimCopy(result_2281703684.cachedDirectoryListings, initTable_2281703693(32), NTI2281701388);
    result_2281703684.pathToSha = nimCopy(result_2281703684.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2281703712 = [mnewString(0)];
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2281703712, 0, user_2281703681, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, repository_2281703682, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, branchOrHash_2281703683, []);
    result_2281703684.name = nimCopy(null, fmtRes_2281703712[0], NTI33554449);

  return result_2281703684;

}

function openGithubWorkspace_1291855636(self_1291855637, user_1291855638, repository_1291855639, branchOrHash_1291855640) {
    var _ = addWorkspaceFolder_1291851103(self_1291855637, newWorkspaceFolderGithub_2281703680(user_1291855638, repository_1291855639, branchOrHash_1291855640));

  
}

function openGithubWorkspaceJsWrapper_1291855632(self_1291855670, user_1291855671, repository_1291855672, branchOrHash_1291855673) {
    openGithubWorkspace_1291855636(self_1291855670, user_1291855671, repository_1291855672, branchOrHash_1291855673);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855632(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2399144348(url_2399144349) {
  var result_2399144350 = null;

    result_2399144350 = ({m_type: NTI2399141893, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2399144350.baseUrl = nimCopy(null, url_2399144349, NTI33554449);
    var _ = updateWorkspaceName_2399142377(result_2399144350);

  return result_2399144350;

}

function openAbsytreeServerWorkspace_1291855708(self_1291855709, url_1291855710) {
    var _ = addWorkspaceFolder_1291851103(self_1291855709, newWorkspaceFolderAbsytreeServer_2399144348(url_1291855710));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855704(self_1291855738, url_1291855739) {
    openAbsytreeServerWorkspace_1291855708(self_1291855738, url_1291855739);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855704(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getFlag_1291848874(self_1291848875, flag_1291848876, default_1291848877) {
  var result_1291855764 = false;

  BeforeRet: {
    result_1291855764 = getOption_2818583615(self_1291848875, flag_1291848876, default_1291848877);
    break BeforeRet;
  };

  return result_1291855764;

}

function getFlagJsWrapper2_1291855756(self_1291855803, flag_1291855804, default_1291855805) {
  var result_1291855806 = false;

    result_1291855806 = getFlag_1291848874(self_1291855803, flag_1291855804, default_1291855805);

  return result_1291855806;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855756(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855840(editor_1291855842, path_1291855843, value_1291855844) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855842 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym274_1291855859 = nsuSplitString(path_1291855843, [46], -1);
      var nodeHEX60gensym274_1291855860 = editor_1291855842.options;
      Label2: {
        var keyHEX60gensym274_1291855879 = [];
        var colontmp__1291855947 = [];
        colontmp__1291855947 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym274_1291855859, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855948 = 0;
        var L_1291855949 = (colontmp__1291855947).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855948 < L_1291855949)) break Label4;
              keyHEX60gensym274_1291855879 = colontmp__1291855947[chckIndx(i_1291855948, 0, (colontmp__1291855947).length - 1)];
              if (!((nodeHEX60gensym274_1291855860.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym274_1291855860, keyHEX60gensym274_1291855879))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym274_1291855860, keyHEX60gensym274_1291855879, newJObject_1627390051());
              }
              
              nodeHEX60gensym274_1291855860 = HEX5BHEX5D_1627393037(nodeHEX60gensym274_1291855860, keyHEX60gensym274_1291855879);
              i_1291855948 = addInt(i_1291855948, 1);
              if (!(((colontmp__1291855947).length == L_1291855949))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym274_1291855860 == null) || !((nodeHEX60gensym274_1291855860.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym274_1291855860, HEX5BHEX5D_2701132581(pathItemsHEX60gensym274_1291855859, 1), newJBool_1627390046(value_1291855844));
    };
    requestRender_2768240746(editor_1291855842.platform, true);
  };

  
}

function setFlag_1291848951(self_1291848952, flag_1291848953, value_1291848954) {
    setOption_1291855840(self_1291848952, flag_1291848953, value_1291848954);

  
}

function setFlagJsWrapper2_1291855832(self_1291855923, flag_1291855924, value_1291855925) {
    setFlag_1291848951(self_1291855923, flag_1291855924, value_1291855925);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855832(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848955(self_1291848956, flag_1291848957) {
    setFlag_1291848951(self_1291848956, flag_1291848957, !(getFlag_1291848874(self_1291848956, flag_1291848957, false)));
    requestRender_2768240746(self_1291848956.platform, true);

  
}

function toggleFlagJsWrapper_1291855953(self_1291855987, flag_1291855988) {
    toggleFlag_1291848955(self_1291855987, flag_1291855988);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855953(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291856009(self_1291856010, option_1291856011, value_1291856012) {
  BeforeRet: {
    if ((self_1291856010 == null)) {
    break BeforeRet;
    }
    
    requestRender_2768240746(self_1291856010.platform, true);
    var pathItems_1291856016 = nsuSplitString(option_1291856011, [46], -1);
    var node_1291856017 = self_1291856010.options;
    Label1: {
      var key_1291856036 = [];
      var colontmp__1291856098 = [];
      colontmp__1291856098 = HEX5BHEX5D_2818589613(pathItems_1291856016, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856099 = 0;
      var L_1291856100 = (colontmp__1291856098).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856099 < L_1291856100)) break Label3;
            key_1291856036 = colontmp__1291856098[chckIndx(i_1291856099, 0, (colontmp__1291856098).length - 1)];
            if (!((node_1291856017.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291856017, key_1291856036))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291856017, key_1291856036, newJObject_1627390051());
            }
            
            node_1291856017 = HEX5BHEX5D_1627393037(node_1291856017, key_1291856036);
            i_1291856099 = addInt(i_1291856099, 1);
            if (!(((colontmp__1291856098).length == L_1291856100))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291856017 == null) || !((node_1291856017.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291856017, HEX5BHEX5D_2701132581(pathItems_1291856016, 1), value_1291856012);
  };

  
}

function setOptionJsWrapper_1291856005(self_1291856080, option_1291856081, value_1291856082) {
    setOption_1291856009(self_1291856080, option_1291856081, value_1291856082);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291856005(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856108(self_1291856109) {
    self_1291856109.closeRequested = true;

  
}

function quitJsWrapper_1291856104(self_1291856136) {
    quit_1291856108(self_1291856136);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856104(this));};

function changeFontSize_1291856152(self_1291856153, amount_1291856154) {
    fontSizeHEX3D_2768240776(self_1291856153.platform, (fontSize_2768240784(self_1291856153.platform) + amount_1291856154));
    requestRender_2768240746(self_1291856153.platform, true);

  
}

function changeFontSizeJsWrapper_1291856148(self_1291856182, amount_1291856183) {
    changeFontSize_1291856152(self_1291856182, amount_1291856183);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856148(this, amount_));};

function rawGet_1291848320(t_1291848323, key_1291848324, hc_1291848325, hc_1291848325_Idx) {
  var result_1291848326 = 0;

  BeforeRet: {
    hc_1291848325[hc_1291848325_Idx] = hash_1325400491(key_1291848324);
    if ((hc_1291848325[hc_1291848325_Idx] == 0)) {
    hc_1291848325[hc_1291848325_Idx] = 314159265;
    }
    
    if (((t_1291848323.data).length == 0)) {
    result_1291848326 = -1;
    break BeforeRet;
    }
    
    var h_1291848378 = (hc_1291848325[hc_1291848325_Idx] & (t_1291848323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0)) break Label2;
          if (((t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0 == hc_1291848325[hc_1291848325_Idx]) && eqStrings(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field1, key_1291848324))) {
          result_1291848326 = h_1291848378;
          break BeforeRet;
          }
          
          h_1291848378 = nextTry_1308622883(h_1291848378, (t_1291848323.data).length - 1);
        }
    };
    result_1291848326 = subInt(-1, h_1291848378);
  };

  return result_1291848326;

}

function mustRehash_1291851923(t_1291851925) {
  var result_1291851926 = false;

    if (!((t_1291851925.counter < (t_1291851925.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851926 = ((mulInt((t_1291851925.data).length, 2) < mulInt(t_1291851925.counter, 3)) || (subInt((t_1291851925.data).length, t_1291851925.counter) < 4));

  return result_1291851926;

}

function rawInsert_1291852372(t_1291852376, data_1291852377, data_1291852377_Idx, key_1291852378, val_1291852379, hc_1291852380, h_1291852381) {
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852378, NTI33554449);
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field2 = val_1291852379;
    data_1291852377[data_1291852377_Idx][chckIndx(h_1291852381, 0, (data_1291852377[data_1291852377_Idx]).length - 1)].Field0 = hc_1291852380;

  
}

function enlarge_1291852078(t_1291852081) {
    var n_1291852084 = [];
    n_1291852084 = new Array(chckRange(mulInt((t_1291852081.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852081.data).length, 2), 0, 2147483647) ; ++i) { n_1291852084[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852081.data; t_1291852081.data = n_1291852084; n_1291852084 = Temporary1;    Label2: {
      var i_1291852148 = 0;
      var colontmp__1291856510 = 0;
      colontmp__1291856510 = (n_1291852084).length - 1;
      var res_1291856511 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856511 <= colontmp__1291856510)) break Label4;
            i_1291852148 = res_1291856511;
            var eh_1291852202 = n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852202)) {
            var j_1291852206 = (eh_1291852202 & (t_1291852081.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852081.data[chckIndx(j_1291852206, 0, (t_1291852081.data).length - 1)].Field0)) break Label6;
                  j_1291852206 = nextTry_1308622883(j_1291852206, (t_1291852081.data).length - 1);
                }
            };
            rawInsert_1291852372(t_1291852081, t_1291852081, "data", n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field1, n_1291852084[chckIndx(i_1291852148, 0, (n_1291852084).length - 1)].Field2, eh_1291852202, j_1291852206);
            }
            
            res_1291856511 = addInt(res_1291856511, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852550(t_1291852553, key_1291852554, hc_1291852555) {
  var result_1291852556 = 0;

  BeforeRet: {
    if (((t_1291852553.data).length == 0)) {
    result_1291852556 = -1;
    break BeforeRet;
    }
    
    var h_1291852607 = (hc_1291852555 & (t_1291852553.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field0)) break Label2;
          if (((t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field0 == hc_1291852555) && eqStrings(t_1291852553.data[chckIndx(h_1291852607, 0, (t_1291852553.data).length - 1)].Field1, key_1291852554))) {
          result_1291852556 = h_1291852607;
          break BeforeRet;
          }
          
          h_1291852607 = nextTry_1308622883(h_1291852607, (t_1291852553.data).length - 1);
        }
    };
    result_1291852556 = subInt(-1, h_1291852607);
  };

  return result_1291852556;

}

function mgetOrPut_1291856234(t_1291856237, key_1291856238, val_1291856239) {
  var result_1291856240 = null;
  var result_1291856240_Idx = 0;

    if (((t_1291856237.data).length == 0)) {
    var correctSizeHEX60gensym331_1291856289 = slotsNeeded_1308622891(32);
    t_1291856237.counter = 0;
    t_1291856237.data = new Array(chckRange(correctSizeHEX60gensym331_1291856289, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym331_1291856289, 0, 2147483647) ; ++i) { t_1291856237.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856294 = [0];
    var index_1291856301 = rawGet_1291848320(t_1291856237, key_1291856238, hc_1291856294, 0);
    if ((index_1291856301 < 0)) {
    if (((t_1291856237.data).length == 0)) {
    var correctSizeHEX60gensym334_1291856350 = slotsNeeded_1308622891(32);
    t_1291856237.counter = 0;
    t_1291856237.data = new Array(chckRange(correctSizeHEX60gensym334_1291856350, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym334_1291856350, 0, 2147483647) ; ++i) { t_1291856237.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851923(t_1291856237)) {
    enlarge_1291852078(t_1291856237);
    index_1291856301 = rawGetKnownHC_1291852550(t_1291856237, key_1291856238, hc_1291856294[0]);
    }
    
    index_1291856301 = subInt(-1, index_1291856301);
    rawInsert_1291852372(t_1291856237, t_1291856237, "data", key_1291856238, val_1291856239, hc_1291856294[0], index_1291856301);
    t_1291856237.counter = addInt(t_1291856237.counter, 1);
    }
    
    result_1291856240 = t_1291856237.data[chckIndx(index_1291856301, 0, (t_1291856237.data).length - 1)]; result_1291856240_Idx = "Field2";

  return [result_1291856240, result_1291856240_Idx];

}

function changeLayoutProp_1291856204(self_1291856205, prop_1291856206, change_1291856207) {
    var Temporary1;

    HEX2BHEX3D_2147483761((Temporary1 = mgetOrPut_1291856234(self_1291856205.layout_props.props, prop_1291856206, 0.0), Temporary1)[0], Temporary1[1], change_1291856207);
    requestRender_2768240746(self_1291856205.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856200(self_1291856485, prop_1291856486, change_1291856487) {
    changeLayoutProp_1291856204(self_1291856485, prop_1291856486, change_1291856487);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856200(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856520(self_1291856521) {
    self_1291856521.statusBarOnTop = !(self_1291856521.statusBarOnTop);
    requestRender_2768240746(self_1291856521.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856516(self_1291856548) {
    toggleStatusBarLocation_1291856520(self_1291856548);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856516(this));};

function createEditorForDocument_1291848878(self_1291848879, document_1291848880) {
  var result_1291848881 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848904 = null;
      var i_1291856609 = 0;
      var L_1291856610 = (self_1291848879.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856609 < L_1291856610)) break Label3;
            editor_1291848904 = self_1291848879.editor_defaults[chckIndx(i_1291856609, 0, (self_1291848879.editor_defaults).length - 1)];
            if (canEdit_2415919228(editor_1291848904, document_1291848880)) {
            result_1291848881 = createWithDocument_2415919243(editor_1291848904, document_1291848880);
            break BeforeRet;
            }
            
            i_1291856609 = addInt(i_1291856609, 1);
            if (!(((self_1291848879.editor_defaults).length == L_1291856610))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2197815310(document_1291848880) || [])]);
    result_1291848881 = null;
    break BeforeRet;
  };

  return result_1291848881;

}

function createView_1291848958(self_1291848959, document_1291848960) {
    
function HEX3Aanonymous_1291848973() {
        requestRender_2768240746(self_1291848959.platform, false);

      
    }

    var editor_1291848961 = createEditorForDocument_1291848878(self_1291848959, document_1291848960);
    injectDependencies_1291847761(editor_1291848961, self_1291848959);
    var _ = subscribe_1291848997(editor_1291848961.onMarkedDirty, HEX3Aanonymous_1291848973);
    var view_1291849024 = {document: document_1291848960, editor: editor_1291848961};
    self_1291848959.views.push(view_1291849024);;
    self_1291848959.currentView = subInt((self_1291848959.views).length, 1);
    requestRender_2768240746(self_1291848959.platform, false);

  
}

function createView_1291856564(self_1291856565) {
    createView_1291848958(self_1291856565, newTextDocument_2818579088([], [], false));

  
}

function createViewJsWrapper_1291856560(self_1291856597) {
    createView_1291856564(self_1291856597);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856560(this));};

function delete_1291856620(x_1291856622, x_1291856622_Idx, i_1291856623) {
    x_1291856622[x_1291856622_Idx].splice(i_1291856623, 1);

  
}

function closeCurrentView_1291856618(self_1291856619) {
    unregister_2415919268(self_1291856619.views[chckIndx(self_1291856619.currentView, 0, (self_1291856619.views).length - 1)].editor);
    delete_1291856620(self_1291856619, "views", chckRange(self_1291856619.currentView, 0, 2147483647));
    self_1291856619.currentView = clamp_1660945119(self_1291856619.currentView, 0, subInt((self_1291856619.views).length, 1));
    requestRender_2768240746(self_1291856619.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856614(self_1291856676) {
    closeCurrentView_1291856618(self_1291856676);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856614(this));};

function insert_1291856710(x_1291856712, x_1291856712_Idx, item_1291856713, i_1291856714) {
    var it_1291856734 = null;
    x_1291856712[x_1291856712_Idx] = x_1291856712[x_1291856712_Idx] || []; x_1291856712[x_1291856712_Idx].splice(i_1291856714, 0, it_1291856734);
    x_1291856712[x_1291856712_Idx][chckIndx(i_1291856714, 0, (x_1291856712[x_1291856712_Idx]).length - 1)] = item_1291856713;

  
}

function moveCurrentViewToTop_1291856697(self_1291856698) {
    if ((0 < (self_1291856698.views).length)) {
    var view_1291856705 = self_1291856698.views[chckIndx(self_1291856698.currentView, 0, (self_1291856698.views).length - 1)];
    delete_1291856620(self_1291856698, "views", chckRange(self_1291856698.currentView, 0, 2147483647));
    insert_1291856710(self_1291856698, "views", view_1291856705, 0);
    }
    
    self_1291856698.currentView = 0;
    requestRender_2768240746(self_1291856698.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856693(self_1291856761) {
    moveCurrentViewToTop_1291856697(self_1291856761);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856693(this));};

function nextView_1291856778(self_1291856779) {
    var Temporary1;

    if (((self_1291856779.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856779.currentView, 1), (self_1291856779.views).length);
    }
    
    self_1291856779.currentView = Temporary1;
    requestRender_2768240746(self_1291856779.platform, false);

  
}

function nextViewJsWrapper_1291856774(self_1291856812) {
    nextView_1291856778(self_1291856812);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856774(this));};

function prevView_1291856828(self_1291856829) {
    var Temporary1;

    if (((self_1291856829.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856829.currentView, (self_1291856829.views).length), 1), (self_1291856829.views).length);
    }
    
    self_1291856829.currentView = Temporary1;
    requestRender_2768240746(self_1291856829.platform, false);

  
}

function prevViewJsWrapper_1291856824(self_1291856865) {
    prevView_1291856828(self_1291856865);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856824(this));};

function moveCurrentViewPrev_1291856881(self_1291856882) {
    if ((0 < (self_1291856882.views).length)) {
    var view_1291856889 = self_1291856882.views[chckIndx(self_1291856882.currentView, 0, (self_1291856882.views).length - 1)];
    var index_1291856896 = modInt(subInt(addInt(self_1291856882.currentView, (self_1291856882.views).length), 1), (self_1291856882.views).length);
    delete_1291856620(self_1291856882, "views", chckRange(self_1291856882.currentView, 0, 2147483647));
    insert_1291856710(self_1291856882, "views", view_1291856889, chckRange(index_1291856896, 0, 2147483647));
    self_1291856882.currentView = index_1291856896;
    }
    
    requestRender_2768240746(self_1291856882.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856877(self_1291856932) {
    moveCurrentViewPrev_1291856881(self_1291856932);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856877(this));};

function moveCurrentViewNext_1291856948(self_1291856949) {
    if ((0 < (self_1291856949.views).length)) {
    var view_1291856956 = self_1291856949.views[chckIndx(self_1291856949.currentView, 0, (self_1291856949.views).length - 1)];
    var index_1291856960 = modInt(addInt(self_1291856949.currentView, 1), (self_1291856949.views).length);
    delete_1291856620(self_1291856949, "views", chckRange(self_1291856949.currentView, 0, 2147483647));
    insert_1291856710(self_1291856949, "views", view_1291856956, chckRange(index_1291856960, 0, 2147483647));
    self_1291856949.currentView = index_1291856960;
    }
    
    requestRender_2768240746(self_1291856949.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856944(self_1291856996) {
    moveCurrentViewNext_1291856948(self_1291856996);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856944(this));};

function setLayout_1291857012(self_1291857013, layout_1291857014) {
    var Temporary1;

    switch (toJSStr(layout_1291857014)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291857013.layout = Temporary1;
    requestRender_2768240746(self_1291857013.platform, false);

  
}

function setLayoutJsWrapper_1291857008(self_1291857078, layout_1291857079) {
    setLayout_1291857012(self_1291857078, layout_1291857079);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291857008(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851061(self_1291851062) {
  var result_1291851063 = null;

    result_1291851063 = self_1291851062.commandLineTextEditor;

  return result_1291851063;

}

function commandLine_1291857100(self_1291857101, initialValue_1291857102) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291857101).document, [nimCopy(null, initialValue_1291857102, NTI33554449)]);
    self_1291857101.commandLineMode = true;
    requestRender_2768240746(self_1291857101.platform, false);

  
}

function commandLineJsWrapper_1291857096(self_1291857134, initialValue_1291857135) {
    commandLine_1291857100(self_1291857134, initialValue_1291857135);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291857096(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291857156(self_1291857157) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291857157).document, [[]]);
    self_1291857157.commandLineMode = false;
    requestRender_2768240746(self_1291857157.platform, false);

  
}

function exitCommandLineJsWrapper_1291857152(self_1291857188) {
    exitCommandLine_1291857156(self_1291857188);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291857152(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857279 = 0;
      var L_1291857280 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857279 < L_1291857280)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857279, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857279 = addInt(i_1291857279, 1);
            if (!(((a_1593835606).length == L_1291857280))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2113930650(action_2113930651) {
  var result_2113930654 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2113930660 = find_1593835603(action_2113930651, 32);
    if ((spaceIndex_2113930660 == -1)) {
    var colontmp__1291857274 = nimCopy(null, action_2113930651, NTI33554449);
    var colontmp__1291857275 = [];
    result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857274, NTI33554449), Field1: nimCopy(null, colontmp__1291857275, NTI33554449)}, NTI2113929938);
    break BeforeRet;
    }
    else {
      var colontmp__1291857276 = HEX5BHEX5D_855639291(action_2113930651, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2113930660, 1)));
      var colontmp__1291857277 = HEX5BHEX5D_855639319(action_2113930651, HEX2EHEX2E_1040187488(addInt(spaceIndex_2113930660, 1), 1));
      result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857276, NTI33554449), Field1: nimCopy(null, colontmp__1291857277, NTI33554449)}, NTI2113929938);
      break BeforeRet;
    }
    
  };

  return result_2113930654;

}

function executeCommandLine_1291857204(self_1291857205) {
  var result_1291857206 = false;

  BeforeRet: {
    try {
    self_1291857205.commandLineMode = false;
    var colontmp__1291857273 = parseAction_2113930650(nsuJoinSep(content_2818574085(getCommandLineTextEditor_1291851061(self_1291857205).document), []));
    var action_1291857207 = nimCopy(null, colontmp__1291857273["Field0"], NTI33554449);
    var arg_1291857208 = nimCopy(null, colontmp__1291857273["Field1"], NTI33554449);
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851061(self_1291857205).document, [[]]);
    if (nsuStartsWith(arg_1291857208, [92])) {
    arg_1291857208 = nimCopy(null, HEX24_1627394481(newJString_1627389994(HEX5BHEX5D_855639319(arg_1291857208, HEX2EHEX2E_1040187488(1, 1)))), NTI33554449);
    }
    
    result_1291857206 = handleAction_1291848870(self_1291857205, action_1291857207, arg_1291857208);
    break BeforeRet;
    } finally {
    requestRender_2768240746(self_1291857205.platform, false);
    }
  };

  return result_1291857206;

}

function executeCommandLineJsWrapper_1291857200(self_1291857258) {
  var result_1291857259 = false;

    result_1291857259 = executeCommandLine_1291857204(self_1291857258);

  return result_1291857259;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857200(this));};

function writeFile_1291857312(self_1291857313, path_1291857314, app_1291857315) {
    try {
    if ((((0 <= self_1291857313.currentView) && (self_1291857313.currentView < (self_1291857313.views).length)) && !((self_1291857313.views[chckIndx(self_1291857313.currentView, 0, (self_1291857313.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2197815316(self_1291857313.views[chckIndx(self_1291857313.currentView, 0, (self_1291857313.views).length - 1)].document, path_1291857314, app_1291857315);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857327 = [mnewString(0)];
    fmtRes_1291857327[0].push.apply(fmtRes_1291857327[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857327, 0, path_1291857314, []);
    fmtRes_1291857327[0].push.apply(fmtRes_1291857327[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857327, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857327[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857313.platform, false);
    }

  
}

function writeFileJsWrapper_1291857308(self_1291857356, path_1291857357, app_1291857358) {
    writeFile_1291857312(self_1291857356, path_1291857357, app_1291857358);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857308(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857384(self_1291857385, path_1291857386) {
    try {
    if ((((0 <= self_1291857385.currentView) && (self_1291857385.currentView < (self_1291857385.views).length)) && !((self_1291857385.views[chckIndx(self_1291857385.currentView, 0, (self_1291857385.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2197815320(self_1291857385.views[chckIndx(self_1291857385.currentView, 0, (self_1291857385.views).length - 1)].document, path_1291857386);
    handleDocumentChanged_2415919265(self_1291857385.views[chckIndx(self_1291857385.currentView, 0, (self_1291857385.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857398 = [mnewString(0)];
    fmtRes_1291857398[0].push.apply(fmtRes_1291857398[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857398, 0, path_1291857386, []);
    fmtRes_1291857398[0].push.apply(fmtRes_1291857398[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857398, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857398[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857385.platform, false);
    }

  
}

function loadFileJsWrapper_1291857380(self_1291857426, path_1291857427) {
    loadFile_1291857384(self_1291857426, path_1291857427);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857380(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2969571554(filename_2969571555, app_2969571556, workspaceFolder_2969571558) {
  var result_2969571559 = null;

    result_2969571559 = ({m_type: NTI2969568612, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2969571559.filename = nimCopy(null, filename_2969571555, NTI33554449);
    result_2969571559.rootNode = {kind: 7, parent: null, id: newId_2046820597(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2969571559.symbols = nimCopy(result_2969571559.symbols, initTable_3019905097(32), NTI3087008713);
    result_2969571559.appFile = app_2969571556;
    result_2969571559.workspace = nimCopy(result_2969571559.workspace, workspaceFolder_2969571558, NTI2197815306);
    if ((0 < (filename_2969571555).length)) {
    load_2197815320(result_2969571559, []);
    }
    

  return result_2969571559;

}

function none_1291855571() {
  var result_1291855577 = ({val: null});

  return result_1291855577;

}

function newModel_3271558972(id_3271558973) {
  var result_3271558974 = null;

    result_3271558974 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), rootNodes: [], languages: [], importedModels: [], classesToLanguages: ({data: [], counter: 0}), nodes: ({data: [], counter: 0})});
    result_3271558974.id = nimCopy(result_3271558974.id, id_3271558973, NTI2046820355);

  return result_3271558974;

}

function mustRehash_3271560976(t_3271560978) {
  var result_3271560979 = false;

    if (!((t_3271560978.counter < (t_3271560978.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271560979 = ((mulInt((t_3271560978.data).length, 2) < mulInt(t_3271560978.counter, 3)) || (subInt((t_3271560978.data).length, t_3271560978.counter) < 4));

  return result_3271560979;

}

function rawInsert_3271561425(t_3271561429, data_3271561430, data_3271561430_Idx, key_3271561431, val_3271561432, hc_3271561433, h_3271561434) {
    data_3271561430[data_3271561430_Idx][chckIndx(h_3271561434, 0, (data_3271561430[data_3271561430_Idx]).length - 1)].Field1 = nimCopy(data_3271561430[data_3271561430_Idx][chckIndx(h_3271561434, 0, (data_3271561430[data_3271561430_Idx]).length - 1)].Field1, key_3271561431, NTI2046820355);
    data_3271561430[data_3271561430_Idx][chckIndx(h_3271561434, 0, (data_3271561430[data_3271561430_Idx]).length - 1)].Field2 = val_3271561432;
    data_3271561430[data_3271561430_Idx][chckIndx(h_3271561434, 0, (data_3271561430[data_3271561430_Idx]).length - 1)].Field0 = hc_3271561433;

  
}

function enlarge_3271561131(t_3271561134) {
    var n_3271561137 = [];
    n_3271561137 = new Array(chckRange(mulInt((t_3271561134.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271561134.data).length, 2), 0, 2147483647) ; ++i) { n_3271561137[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271561134.data; t_3271561134.data = n_3271561137; n_3271561137 = Temporary1;    Label2: {
      var i_3271561201 = 0;
      var colontmp__1291857592 = 0;
      colontmp__1291857592 = (n_3271561137).length - 1;
      var res_1291857593 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857593 <= colontmp__1291857592)) break Label4;
            i_3271561201 = res_1291857593;
            var eh_3271561255 = n_3271561137[chckIndx(i_3271561201, 0, (n_3271561137).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271561255)) {
            var j_3271561259 = (eh_3271561255 & (t_3271561134.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271561134.data[chckIndx(j_3271561259, 0, (t_3271561134.data).length - 1)].Field0)) break Label6;
                  j_3271561259 = nextTry_1308622883(j_3271561259, (t_3271561134.data).length - 1);
                }
            };
            rawInsert_3271561425(t_3271561134, t_3271561134, "data", n_3271561137[chckIndx(i_3271561201, 0, (n_3271561137).length - 1)].Field1, n_3271561137[chckIndx(i_3271561201, 0, (n_3271561137).length - 1)].Field2, eh_3271561255, j_3271561259);
            }
            
            res_1291857593 = addInt(res_1291857593, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271561594(t_3271561597, key_3271561598, hc_3271561599) {
  var result_3271561600 = 0;

  BeforeRet: {
    if (((t_3271561597.data).length == 0)) {
    result_3271561600 = -1;
    break BeforeRet;
    }
    
    var h_3271561651 = (hc_3271561599 & (t_3271561597.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271561597.data[chckIndx(h_3271561651, 0, (t_3271561597.data).length - 1)].Field0)) break Label2;
          if (((t_3271561597.data[chckIndx(h_3271561651, 0, (t_3271561597.data).length - 1)].Field0 == hc_3271561599) && HEX3DHEX3D_2046820626(t_3271561597.data[chckIndx(h_3271561651, 0, (t_3271561597.data).length - 1)].Field1, key_3271561598))) {
          result_3271561600 = h_3271561651;
          break BeforeRet;
          }
          
          h_3271561651 = nextTry_1308622883(h_3271561651, (t_3271561597.data).length - 1);
        }
    };
    result_3271561600 = subInt(-1, h_3271561651);
  };

  return result_3271561600;

}

function HEX5BHEX5DHEX3D_3271560570(t_3271560573, key_3271560574, val_3271560575) {
    if (((t_3271560573.data).length == 0)) {
    var correctSizeHEX60gensym57_3271560625 = slotsNeeded_1308622891(32);
    t_3271560573.counter = 0;
    t_3271560573.data = new Array(chckRange(correctSizeHEX60gensym57_3271560625, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym57_3271560625, 0, 2147483647) ; ++i) { t_3271560573.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271560630 = [0];
    var index_3271560869 = rawGet_3271560631(t_3271560573, key_3271560574, hc_3271560630, 0);
    if ((0 <= index_3271560869)) {
    t_3271560573.data[chckIndx(index_3271560869, 0, (t_3271560573.data).length - 1)].Field2 = val_3271560575;
    }
    else {
      if (((t_3271560573.data).length == 0)) {
      var correctSizeHEX60gensym62_3271560971 = slotsNeeded_1308622891(32);
      t_3271560573.counter = 0;
      t_3271560573.data = new Array(chckRange(correctSizeHEX60gensym62_3271560971, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_3271560971, 0, 2147483647) ; ++i) { t_3271560573.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271560976(t_3271560573)) {
      enlarge_3271561131(t_3271560573);
      index_3271560869 = rawGetKnownHC_3271561594(t_3271560573, key_3271560574, hc_3271560630[0]);
      }
      
      index_3271560869 = subInt(-1, index_3271560869);
      rawInsert_3271561425(t_3271560573, t_3271560573, "data", key_3271560574, val_3271560575, hc_3271560630[0], index_3271560869);
      t_3271560573.counter = addInt(t_3271560573.counter, 1);
    }
    

  
}

function addLanguage_3271560301(self_3271560302, language_3271560303) {
    self_3271560302.languages.push(language_3271560303);;
    Label1: {
      var c_3271560529 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var L_1291857584 = len_3271560356(language_3271560303.classes);
      Label2: {
        var h_1291857586 = 0;
        var colontmp__1291857587 = 0;
        colontmp__1291857587 = (language_3271560303.classes.data).length - 1;
        var res_1291857588 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857588 <= colontmp__1291857587)) break Label4;
              h_1291857586 = res_1291857588;
              if (isFilled_1308622880(language_3271560303.classes.data[chckIndx(h_1291857586, 0, (language_3271560303.classes.data).length - 1)].Field0)) {
              c_3271560529 = language_3271560303.classes.data[chckIndx(h_1291857586, 0, (language_3271560303.classes.data).length - 1)].Field1;
              HEX5BHEX5DHEX3D_3271560570(self_3271560302.classesToLanguages, c_3271560529, language_3271560303);
              if (!((len_3271560356(language_3271560303.classes) == L_1291857584))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857588 = addInt(res_1291857588, 1);
            }
        };
      };
    };

  
}

function isSome_3271564413(self_3271564415) {
  var result_3271564416 = false;

    result_3271564416 = self_3271564415.has;

  return result_3271564416;

}

function isNone_3271564438(self_3271564440) {
  var result_3271564441 = false;

    result_3271564441 = !(self_3271564440.has);

  return result_3271564441;

}

function get_3271564430(self_3271564432) {
  var result_3271564433 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    if (isNone_3271564438(self_3271564432)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3271564433 = self_3271564432.val;

  return result_3271564433;

}

function hasProperty_3271564138(node_3271564139, role_3271564140) {
  var result_3271564141 = false;

  BeforeRet: {
    result_3271564141 = false;
    Label1: {
      var c_3271564164 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_1291857613 = 0;
      var L_1291857614 = (node_3271564139.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857613 < L_1291857614)) break Label3;
            c_3271564164 = node_3271564139.properties[chckIndx(i_1291857613, 0, (node_3271564139.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564164.Field0, role_3271564140)) {
            result_3271564141 = true;
            break BeforeRet;
            }
            
            i_1291857613 = addInt(i_1291857613, 1);
            if (!(((node_3271564139.properties).length == L_1291857614))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271564141;

}

function getDefaultValue_3271564320(typ_3271564323) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3271564324 = ({kind: 0, intValue: 0, stringValue: [], boolValue: false});

    result_3271564324 = nimCopy(result_3271564324, {kind: typ_3271564323, intValue: 0, stringValue: [], boolValue: false}, NTI3271557124);
    switch (typ_3271564323) {
    case 2:
      var Temporary1 = result_3271564324;
      if (ConstSet259[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      Temporary1.boolValue = false;
      break;
    case 0:
      var Temporary2 = result_3271564324;
      if (ConstSet260[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      Temporary2.intValue = 0;
      break;
    case 1:
      var Temporary3 = result_3271564324;
      if (ConstSet261[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      Temporary3.stringValue = nimCopy(null, [], NTI33554449);
      break;
    }

  return result_3271564324;

}

function hasChildList_3271563947(node_3271563948, role_3271563949) {
  var result_3271563950 = false;

  BeforeRet: {
    result_3271563950 = false;
    Label1: {
      var c_3271563972 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_1291857617 = 0;
      var L_1291857618 = (node_3271563948.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857617 < L_1291857618)) break Label3;
            c_3271563972 = node_3271563948.childLists[chckIndx(i_1291857617, 0, (node_3271563948.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271563972.Field0, role_3271563949)) {
            result_3271563950 = true;
            break BeforeRet;
            }
            
            i_1291857617 = addInt(i_1291857617, 1);
            if (!(((node_3271563948.childLists).length == L_1291857618))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271563950;

}

function hasReference_3271564023(node_3271564024, role_3271564025) {
  var result_3271564026 = false;

  BeforeRet: {
    result_3271564026 = false;
    Label1: {
      var c_3271564049 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_1291857621 = 0;
      var L_1291857622 = (node_3271564024.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857621 < L_1291857622)) break Label3;
            c_3271564049 = node_3271564024.references[chckIndx(i_1291857621, 0, (node_3271564024.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564049.Field0, role_3271564025)) {
            result_3271564026 = true;
            break BeforeRet;
            }
            
            i_1291857621 = addInt(i_1291857621, 1);
            if (!(((node_3271564024.references).length == L_1291857622))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3271564026;

}

function addMissingFieldsForClass_3271564306(self_3271564307, class_3271564308) {
    Label1: {
      var inter_3271564312 = null;
      var i_1291857597 = 0;
      var L_1291857598 = (class_3271564308.interfaces).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857597 < L_1291857598)) break Label3;
            inter_3271564312 = class_3271564308.interfaces[chckIndx(i_1291857597, 0, (class_3271564308.interfaces).length - 1)];
            addMissingFieldsForClass_3271564306(self_3271564307, inter_3271564312);
            i_1291857597 = addInt(i_1291857597, 1);
            if (!(((class_3271564308.interfaces).length == L_1291857598))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((class_3271564308.base == null))) {
    addMissingFieldsForClass_3271564306(self_3271564307, class_3271564308.base);
    }
    
    Label4: {
      var desc_3271564319 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0});
      var i_1291857601 = 0;
      var L_1291857602 = (class_3271564308.properties).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291857601 < L_1291857602)) break Label6;
            desc_3271564319 = class_3271564308.properties[chckIndx(i_1291857601, 0, (class_3271564308.properties).length - 1)];
            if (!(hasProperty_3271564138(self_3271564307, desc_3271564319.id))) {
            self_3271564307.properties.push({Field0: nimCopy(null, desc_3271564319.id, NTI2046820355), Field1: getDefaultValue_3271564320(desc_3271564319.typ)});;
            }
            
            i_1291857601 = addInt(i_1291857601, 1);
            if (!(((class_3271564308.properties).length == L_1291857602))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label7: {
      var desc_3271564341 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0}), count: 0});
      var i_1291857605 = 0;
      var L_1291857606 = (class_3271564308.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291857605 < L_1291857606)) break Label9;
            desc_3271564341 = class_3271564308.children[chckIndx(i_1291857605, 0, (class_3271564308.children).length - 1)];
            if (!(hasChildList_3271563947(self_3271564307, desc_3271564341.id))) {
            self_3271564307.childLists.push({Field0: nimCopy(null, desc_3271564341.id, NTI2046820355), Field1: []});;
            }
            
            i_1291857605 = addInt(i_1291857605, 1);
            if (!(((class_3271564308.children).length == L_1291857606))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var desc_3271564353 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], class: ({padding: 0, time: 0, fuzz: 0, count: 0})});
      var i_1291857609 = 0;
      var L_1291857610 = (class_3271564308.references).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291857609 < L_1291857610)) break Label12;
            desc_3271564353 = class_3271564308.references[chckIndx(i_1291857609, 0, (class_3271564308.references).length - 1)];
            if (!(hasReference_3271564023(self_3271564307, desc_3271564353.id))) {
            self_3271564307.references.push({Field0: nimCopy(null, desc_3271564353.id, NTI2046820355), Field1: idNone_2046820633()});;
            }
            
            i_1291857609 = addInt(i_1291857609, 1);
            if (!(((class_3271564308.references).length == L_1291857610))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function newAstNode_3271564392(class_3271564393, id_3271564407) {
    var Temporary1;

  var result_3271564408 = null;

    if (isSome_3271564413(id_3271564407)) {
    Temporary1 = get_3271564430(id_3271564407);
    }
    else {
    Temporary1 = newId_2046820597();
    }
    
    var id_3271564444 = nimCopy(null, Temporary1, NTI2046820355);
    result_3271564408 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), class: ({padding: 0, time: 0, fuzz: 0, count: 0}), model: null, parent: null, role: ({padding: 0, time: 0, fuzz: 0, count: 0}), properties: [], references: [], childLists: []});
    result_3271564408.id = nimCopy(result_3271564408.id, id_3271564444, NTI2046820355);
    result_3271564408.class = nimCopy(result_3271564408.class, class_3271564393.id, NTI2046820355);
    addMissingFieldsForClass_3271564306(result_3271564408, class_3271564393);

  return result_3271564408;

}

function none_3271564399() {
  var result_3271564406 = ({val: ({padding: 0, time: 0, fuzz: 0, count: 0}), has: false});

  return result_3271564406;

}

function forEach_3271557506(node_3271557507, f_3271557510) {
    f_3271557510(node_3271557507);
    Label1: {
      var item_3271557533 = null;
      var i_1291857633 = 0;
      var L_1291857634 = (node_3271557507.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857633 < L_1291857634)) break Label3;
            item_3271557533 = node_3271557507.childLists[chckIndx(i_1291857633, 0, (node_3271557507.childLists).length - 1)];
            Label4: {
              var c_3271557556 = null;
              var i_1291857630 = 0;
              var L_1291857631 = (item_3271557533.Field1).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_1291857630 < L_1291857631)) break Label6;
                    c_3271557556 = item_3271557533.Field1[chckIndx(i_1291857630, 0, (item_3271557533.Field1).length - 1)];
                    forEach_3271557506(c_3271557556, f_3271557510);
                    i_1291857630 = addInt(i_1291857630, 1);
                    if (!(((item_3271557533.Field1).length == L_1291857631))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_1291857633 = addInt(i_1291857633, 1);
            if (!(((node_3271557507.childLists).length == L_1291857634))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function mustRehash_3271562289(t_3271562291) {
  var result_3271562292 = false;

    if (!((t_3271562291.counter < (t_3271562291.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271562292 = ((mulInt((t_3271562291.data).length, 2) < mulInt(t_3271562291.counter, 3)) || (subInt((t_3271562291.data).length, t_3271562291.counter) < 4));

  return result_3271562292;

}

function rawInsert_3271562738(t_3271562742, data_3271562743, data_3271562743_Idx, key_3271562744, val_3271562745, hc_3271562746, h_3271562747) {
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field1 = nimCopy(data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field1, key_3271562744, NTI2046820355);
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field2 = val_3271562745;
    data_3271562743[data_3271562743_Idx][chckIndx(h_3271562747, 0, (data_3271562743[data_3271562743_Idx]).length - 1)].Field0 = hc_3271562746;

  
}

function enlarge_3271562444(t_3271562447) {
    var n_3271562450 = [];
    n_3271562450 = new Array(chckRange(mulInt((t_3271562447.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271562447.data).length, 2), 0, 2147483647) ; ++i) { n_3271562450[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271562447.data; t_3271562447.data = n_3271562450; n_3271562450 = Temporary1;    Label2: {
      var i_3271562514 = 0;
      var colontmp__1291857638 = 0;
      colontmp__1291857638 = (n_3271562450).length - 1;
      var res_1291857639 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857639 <= colontmp__1291857638)) break Label4;
            i_3271562514 = res_1291857639;
            var eh_3271562568 = n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271562568)) {
            var j_3271562572 = (eh_3271562568 & (t_3271562447.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271562447.data[chckIndx(j_3271562572, 0, (t_3271562447.data).length - 1)].Field0)) break Label6;
                  j_3271562572 = nextTry_1308622883(j_3271562572, (t_3271562447.data).length - 1);
                }
            };
            rawInsert_3271562738(t_3271562447, t_3271562447, "data", n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field1, n_3271562450[chckIndx(i_3271562514, 0, (n_3271562450).length - 1)].Field2, eh_3271562568, j_3271562572);
            }
            
            res_1291857639 = addInt(res_1291857639, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271562916(t_3271562919, key_3271562920, hc_3271562921) {
  var result_3271562922 = 0;

  BeforeRet: {
    if (((t_3271562919.data).length == 0)) {
    result_3271562922 = -1;
    break BeforeRet;
    }
    
    var h_3271562973 = (hc_3271562921 & (t_3271562919.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271562919.data[chckIndx(h_3271562973, 0, (t_3271562919.data).length - 1)].Field0)) break Label2;
          if (((t_3271562919.data[chckIndx(h_3271562973, 0, (t_3271562919.data).length - 1)].Field0 == hc_3271562921) && HEX3DHEX3D_2046820626(t_3271562919.data[chckIndx(h_3271562973, 0, (t_3271562919.data).length - 1)].Field1, key_3271562920))) {
          result_3271562922 = h_3271562973;
          break BeforeRet;
          }
          
          h_3271562973 = nextTry_1308622883(h_3271562973, (t_3271562919.data).length - 1);
        }
    };
    result_3271562922 = subInt(-1, h_3271562973);
  };

  return result_3271562922;

}

function HEX5BHEX5DHEX3D_3271561883(t_3271561886, key_3271561887, val_3271561888) {
    if (((t_3271561886.data).length == 0)) {
    var correctSizeHEX60gensym72_3271561938 = slotsNeeded_1308622891(32);
    t_3271561886.counter = 0;
    t_3271561886.data = new Array(chckRange(correctSizeHEX60gensym72_3271561938, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym72_3271561938, 0, 2147483647) ; ++i) { t_3271561886.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271561943 = [0];
    var index_3271562182 = rawGet_3271561944(t_3271561886, key_3271561887, hc_3271561943, 0);
    if ((0 <= index_3271562182)) {
    t_3271561886.data[chckIndx(index_3271562182, 0, (t_3271561886.data).length - 1)].Field2 = val_3271561888;
    }
    else {
      if (((t_3271561886.data).length == 0)) {
      var correctSizeHEX60gensym77_3271562284 = slotsNeeded_1308622891(32);
      t_3271561886.counter = 0;
      t_3271561886.data = new Array(chckRange(correctSizeHEX60gensym77_3271562284, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_3271562284, 0, 2147483647) ; ++i) { t_3271561886.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271562289(t_3271561886)) {
      enlarge_3271562444(t_3271561886);
      index_3271562182 = rawGetKnownHC_3271562916(t_3271561886, key_3271561887, hc_3271561943[0]);
      }
      
      index_3271562182 = subInt(-1, index_3271562182);
      rawInsert_3271562738(t_3271561886, t_3271561886, "data", key_3271561887, val_3271561888, hc_3271561943[0], index_3271562182);
      t_3271561886.counter = addInt(t_3271561886.counter, 1);
    }
    

  
}

function add_3271564763(node_3271564764, role_3271564765, child_3271564766) {
    
function HEX3Aanonymous_3271564774(nHEX60gensym128_3271564775) {
        var n_3271564776 = nHEX60gensym128_3271564775;
        n_3271564776.model = node_3271564764.model;
        HEX5BHEX5DHEX3D_3271561883(node_3271564764.model.nodes, n_3271564776.id, n_3271564776);

      
    }

  BeforeRet: {
    if ((child_3271564766 == null)) {
    break BeforeRet;
    }
    
    if (HEX3DHEX3D_2046820626(child_3271564766.id, idNone_2046820633())) {
    child_3271564766.id = nimCopy(child_3271564766.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3271564766.parent = node_3271564764;
    child_3271564766.role = nimCopy(child_3271564766.role, role_3271564765, NTI2046820355);
    if (!((node_3271564764.model == null))) {
    forEach_3271557506(child_3271564766, HEX3Aanonymous_3271564774);
    }
    
    Label1: {
      var c_3271564826 = null;
      var i_1291857625 = 0;
      var L_1291857626 = (node_3271564764.childLists).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857625 < L_1291857626)) break Label3;
            c_3271564826 = node_3271564764.childLists[chckIndx(i_1291857625, 0, (node_3271564764.childLists).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564826.Field0, role_3271564765)) {
            c_3271564826.Field1.push(child_3271564766);;
            break BeforeRet;
            }
            
            i_1291857625 = addInt(i_1291857625, 1);
            if (!(((node_3271564764.childLists).length == L_1291857626))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var fmtRes_3271564835 = [mnewString(0)];
    fmtRes_3271564835[0].push.apply(fmtRes_3271564835[0], [85,110,107,110,111,119,110,32,114,111,108,101,32]);;
    formatValue_3036676344(fmtRes_3271564835, 0, role_3271564765, []);
    fmtRes_3271564835[0].push.apply(fmtRes_3271564835[0], [32,102,111,114,32,110,111,100,101,32]);;
    formatValue_3036676344(fmtRes_3271564835, 0, node_3271564764.id, []);
    fmtRes_3271564835[0].push.apply(fmtRes_3271564835[0], [32,111,102,32,99,108,97,115,115,32]);;
    formatValue_3036676344(fmtRes_3271564835, 0, node_3271564764.class, []);
    raiseException({message: nimCopy(null, fmtRes_3271564835[0], NTI33554449), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
  };

  
}

function addRootNode_3271561832(self_3271561833, node_3271561834) {
    
function HEX3Aanonymous_3271561840(nHEX60gensym70_3271561841) {
        var n_3271561842 = nHEX60gensym70_3271561841;
        n_3271561842.model = self_3271561833;
        HEX5BHEX5DHEX3D_3271561883(self_3271561833.nodes, n_3271561842.id, n_3271561842);

      
    }

    self_3271561833.rootNodes.push(node_3271561834);;
    forEach_3271557506(node_3271561834, HEX3Aanonymous_3271561840);

  
}

function languages_3271557415(selfHEX60gensym12_3271557416) {
  var result_3271557417 = [];

  BeforeRet: {
    result_3271557417 = nimCopy(null, selfHEX60gensym12_3271557416.languages, NTI3271557201);
    break BeforeRet;
  };

  return result_3271557417;

}

function addBuilder_3271566410(self_3271566411, other_3271566412) {
    Label1: {
      var pair_3271566696 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var L_1291857648 = len_3271566461(other_3271566412.builders);
      Label2: {
        var h_1291857650 = 0;
        var colontmp__1291857651 = 0;
        colontmp__1291857651 = (other_3271566412.builders.data).length - 1;
        var res_1291857652 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857652 <= colontmp__1291857651)) break Label4;
              h_1291857650 = res_1291857652;
              if (isFilled_1308622880(other_3271566412.builders.data[chckIndx(h_1291857650, 0, (other_3271566412.builders.data).length - 1)].Field0)) {
              pair_3271566696 = nimCopy(pair_3271566696, {Field0: nimCopy(null, other_3271566412.builders.data[chckIndx(h_1291857650, 0, (other_3271566412.builders.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, other_3271566412.builders.data[chckIndx(h_1291857650, 0, (other_3271566412.builders.data).length - 1)].Field2, NTI3271557163)}, NTI3271562157);
              Label5: {
                var builder_3271566719 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
                var colontmp__1291857644 = [];
                colontmp__1291857644 = pair_3271566696["Field1"];
                var i_1291857645 = 0;
                var L_1291857646 = (colontmp__1291857644).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_1291857645 < L_1291857646)) break Label7;
                      builder_3271566719 = colontmp__1291857644[chckIndx(i_1291857645, 0, (colontmp__1291857644).length - 1)];
                      addBuilderFor_3271564866(self_3271566411, pair_3271566696["Field0"], builder_3271566719["Field0"], builder_3271566719["Field1"]);
                      i_1291857645 = addInt(i_1291857645, 1);
                      if (!(((colontmp__1291857644).length == L_1291857646))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_3271566461(other_3271566412.builders) == L_1291857648))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857652 = addInt(res_1291857652, 1);
            }
        };
      };
    };
    Label8: {
      var pair_3271566994 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var L_1291857655 = len_3271566768(other_3271566412.preferredBuilders);
      Label9: {
        var h_1291857657 = 0;
        var colontmp__1291857658 = 0;
        colontmp__1291857658 = (other_3271566412.preferredBuilders.data).length - 1;
        var res_1291857659 = 0;
        Label10: {
            Label11: while (true) {
            if (!(res_1291857659 <= colontmp__1291857658)) break Label11;
              h_1291857657 = res_1291857659;
              if (isFilled_1308622880(other_3271566412.preferredBuilders.data[chckIndx(h_1291857657, 0, (other_3271566412.preferredBuilders.data).length - 1)].Field0)) {
              pair_3271566994 = nimCopy(pair_3271566994, {Field0: nimCopy(null, other_3271566412.preferredBuilders.data[chckIndx(h_1291857657, 0, (other_3271566412.preferredBuilders.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, other_3271566412.preferredBuilders.data[chckIndx(h_1291857657, 0, (other_3271566412.preferredBuilders.data).length - 1)].Field2, NTI2046820355)}, NTI3271562310);
              HEX5BHEX5DHEX3D_3003122010(self_3271566411.preferredBuilders, pair_3271566994["Field0"], pair_3271566994["Field1"]);
              if (!((len_3271566768(other_3271566412.preferredBuilders) == L_1291857655))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857659 = addInt(res_1291857659, 1);
            }
        };
      };
    };

  
}

function builder_3271557492(selfHEX60gensym19_3271557493) {
  var result_3271557494 = null;

  BeforeRet: {
    result_3271557494 = selfHEX60gensym19_3271557493.builder;
    break BeforeRet;
  };

  return result_3271557494;

}

function rawGet_3271559100(t_3271559103, key_3271559104, hc_3271559105, hc_3271559105_Idx) {
  var result_3271559106 = 0;

  BeforeRet: {
    hc_3271559105[hc_3271559105_Idx] = hash_2046820630(key_3271559104);
    if ((hc_3271559105[hc_3271559105_Idx] == 0)) {
    hc_3271559105[hc_3271559105_Idx] = 314159265;
    }
    
    if (((t_3271559103.data).length == 0)) {
    result_3271559106 = -1;
    break BeforeRet;
    }
    
    var h_3271559157 = (hc_3271559105[hc_3271559105_Idx] & (t_3271559103.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271559103.data[chckIndx(h_3271559157, 0, (t_3271559103.data).length - 1)].Field0)) break Label2;
          if (((t_3271559103.data[chckIndx(h_3271559157, 0, (t_3271559103.data).length - 1)].Field0 == hc_3271559105[hc_3271559105_Idx]) && HEX3DHEX3D_2046820626(t_3271559103.data[chckIndx(h_3271559157, 0, (t_3271559103.data).length - 1)].Field1, key_3271559104))) {
          result_3271559106 = h_3271559157;
          break BeforeRet;
          }
          
          h_3271559157 = nextTry_1308622883(h_3271559157, (t_3271559103.data).length - 1);
        }
    };
    result_3271559106 = subInt(-1, h_3271559157);
  };

  return result_3271559106;

}

function mustRehash_3271559445(t_3271559447) {
  var result_3271559448 = false;

    if (!((t_3271559447.counter < (t_3271559447.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271559448 = ((mulInt((t_3271559447.data).length, 2) < mulInt(t_3271559447.counter, 3)) || (subInt((t_3271559447.data).length, t_3271559447.counter) < 4));

  return result_3271559448;

}

function rawInsert_3271559894(t_3271559898, data_3271559899, data_3271559899_Idx, key_3271559900, val_3271559901, hc_3271559902, h_3271559903) {
    data_3271559899[data_3271559899_Idx][chckIndx(h_3271559903, 0, (data_3271559899[data_3271559899_Idx]).length - 1)].Field1 = nimCopy(data_3271559899[data_3271559899_Idx][chckIndx(h_3271559903, 0, (data_3271559899[data_3271559899_Idx]).length - 1)].Field1, key_3271559900, NTI2046820355);
    data_3271559899[data_3271559899_Idx][chckIndx(h_3271559903, 0, (data_3271559899[data_3271559899_Idx]).length - 1)].Field2 = val_3271559901;
    data_3271559899[data_3271559899_Idx][chckIndx(h_3271559903, 0, (data_3271559899[data_3271559899_Idx]).length - 1)].Field0 = hc_3271559902;

  
}

function enlarge_3271559600(t_3271559603) {
    var n_3271559606 = [];
    n_3271559606 = new Array(chckRange(mulInt((t_3271559603.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271559603.data).length, 2), 0, 2147483647) ; ++i) { n_3271559606[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3271559603.data; t_3271559603.data = n_3271559606; n_3271559606 = Temporary1;    Label2: {
      var i_3271559670 = 0;
      var colontmp__1291857664 = 0;
      colontmp__1291857664 = (n_3271559606).length - 1;
      var res_1291857665 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857665 <= colontmp__1291857664)) break Label4;
            i_3271559670 = res_1291857665;
            var eh_3271559724 = n_3271559606[chckIndx(i_3271559670, 0, (n_3271559606).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271559724)) {
            var j_3271559728 = (eh_3271559724 & (t_3271559603.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271559603.data[chckIndx(j_3271559728, 0, (t_3271559603.data).length - 1)].Field0)) break Label6;
                  j_3271559728 = nextTry_1308622883(j_3271559728, (t_3271559603.data).length - 1);
                }
            };
            rawInsert_3271559894(t_3271559603, t_3271559603, "data", n_3271559606[chckIndx(i_3271559670, 0, (n_3271559606).length - 1)].Field1, n_3271559606[chckIndx(i_3271559670, 0, (n_3271559606).length - 1)].Field2, eh_3271559724, j_3271559728);
            }
            
            res_1291857665 = addInt(res_1291857665, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271560063(t_3271560066, key_3271560067, hc_3271560068) {
  var result_3271560069 = 0;

  BeforeRet: {
    if (((t_3271560066.data).length == 0)) {
    result_3271560069 = -1;
    break BeforeRet;
    }
    
    var h_3271560120 = (hc_3271560068 & (t_3271560066.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271560066.data[chckIndx(h_3271560120, 0, (t_3271560066.data).length - 1)].Field0)) break Label2;
          if (((t_3271560066.data[chckIndx(h_3271560120, 0, (t_3271560066.data).length - 1)].Field0 == hc_3271560068) && HEX3DHEX3D_2046820626(t_3271560066.data[chckIndx(h_3271560120, 0, (t_3271560066.data).length - 1)].Field1, key_3271560067))) {
          result_3271560069 = h_3271560120;
          break BeforeRet;
          }
          
          h_3271560120 = nextTry_1308622883(h_3271560120, (t_3271560066.data).length - 1);
        }
    };
    result_3271560069 = subInt(-1, h_3271560120);
  };

  return result_3271560069;

}

function HEX5BHEX5DHEX3D_3271559039(t_3271559042, key_3271559043, val_3271559044) {
    if (((t_3271559042.data).length == 0)) {
    var correctSizeHEX60gensym41_3271559094 = slotsNeeded_1308622891(32);
    t_3271559042.counter = 0;
    t_3271559042.data = new Array(chckRange(correctSizeHEX60gensym41_3271559094, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_3271559094, 0, 2147483647) ; ++i) { t_3271559042.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3271559099 = [0];
    var index_3271559338 = rawGet_3271559100(t_3271559042, key_3271559043, hc_3271559099, 0);
    if ((0 <= index_3271559338)) {
    t_3271559042.data[chckIndx(index_3271559338, 0, (t_3271559042.data).length - 1)].Field2 = val_3271559044;
    }
    else {
      if (((t_3271559042.data).length == 0)) {
      var correctSizeHEX60gensym46_3271559440 = slotsNeeded_1308622891(32);
      t_3271559042.counter = 0;
      t_3271559042.data = new Array(chckRange(correctSizeHEX60gensym46_3271559440, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym46_3271559440, 0, 2147483647) ; ++i) { t_3271559042.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3271559445(t_3271559042)) {
      enlarge_3271559600(t_3271559042);
      index_3271559338 = rawGetKnownHC_3271560063(t_3271559042, key_3271559043, hc_3271559099[0]);
      }
      
      index_3271559338 = subInt(-1, index_3271559338);
      rawInsert_3271559894(t_3271559042, t_3271559042, "data", key_3271559043, val_3271559044, hc_3271559099[0], index_3271559338);
      t_3271559042.counter = addInt(t_3271559042.counter, 1);
    }
    

  
}

function addModel_3271558996(self_3271558997, model_3271558998) {
    HEX5BHEX5DHEX3D_3271559039(self_3271558997.models, model_3271558998.id, model_3271558998);

  
}

function newModelDocument_3254780191(filename_3254780192, app_3254780193, workspaceFolder_3254780195) {
  var result_3254780196 = null;

    result_3254780196 = ({m_type: NTI3254779944, filename: [], model: null, project: null, undoOps: [], redoOps: [], onNodeInserted: ({handlers: []}), onChanged: ({handlers: []}), builder: null, appFile: false, workspace: ({val: null})});
    result_3254780196.filename = nimCopy(null, filename_3254780192, NTI33554449);
    result_3254780196.appFile = app_3254780193;
    result_3254780196.workspace = nimCopy(result_3254780196.workspace, workspaceFolder_3254780195, NTI2197815306);
    result_3254780196.project = project_3254779953[0];
    var testModel_3254780200 = newModel_3271558972(newId_2046820597());
    addLanguage_3271560301(testModel_3254780200, baseLanguage_3321889199);
    var a_3254780201 = newAstNode_3271564392(stringLiteralClass_3321888811, none_3271564399());
    var b_3254780202 = newAstNode_3271564392(nodeReferenceClass_3321888809, none_3271564399());
    var c_3254780203 = newAstNode_3271564392(binaryExpressionClass_3321888786, none_3271564399());
    add_3271564763(c_3254780203, IdBinaryExpressionLeft_2986344531, a_3254780201);
    add_3271564763(c_3254780203, IdBinaryExpressionRight_2986344532, b_3254780202);
    addRootNode_3271561832(testModel_3254780200, c_3254780203);
    result_3254780196.model = testModel_3254780200;
    result_3254780196.builder = newCellBuilder_3271564852();
    Label1: {
      var language_3254780226 = null;
      var colontmp__1291857574 = [];
      colontmp__1291857574 = languages_3271557415(result_3254780196.model);
      var i_1291857576 = 0;
      var L_1291857577 = (colontmp__1291857574).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857576 < L_1291857577)) break Label3;
            language_3254780226 = colontmp__1291857574[chckIndx(i_1291857576, 0, (colontmp__1291857574).length - 1)];
            addBuilder_3271566410(result_3254780196.builder, builder_3271557492(language_3254780226));
            i_1291857576 = addInt(i_1291857576, 1);
            if (!(((colontmp__1291857574).length == L_1291857577))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    addModel_3271558996(project_3254779953[0], result_3254780196.model);
    project_3254779953[0].builder = result_3254780196.builder;
    if ((0 < (filename_3254780192).length)) {
    load_2197815320(result_3254780196, []);
    }
    

  return result_3254780196;

}

function newTextDocument_1291857484(filename_1291857486, content_1291857487, app_1291857488) {
  var result_1291857489 = null;

    result_1291857489 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857493 = result_1291857489;
    self_1291857493.filename = nimCopy(null, filename_1291857486, NTI33554449);
    self_1291857493.currentTree = null;
    self_1291857493.appFile = app_1291857488;
    var _ = initTreesitter_2818578870(self_1291857493);
    var language_1291857494 = getLanguageForFile_2902458372(filename_1291857486);
    if (isSome_2348810304(language_1291857494)) {
    self_1291857493.languageId = nimCopy(null, get_2818578907(language_1291857494), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857493, content_1291857487);

  return result_1291857489;

}

function openFile_1291857467(self_1291857468, path_1291857469, app_1291857470) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857469, [46,97,115,116])) {
    createView_1291848958(self_1291857468, newAstDocument_2969571554(path_1291857469, app_1291857470, none_1291855571()));
    }
    else {
    if (nsuEndsWith(path_1291857469, [46,97,109])) {
    createView_1291848958(self_1291857468, newModelDocument_3254780191(path_1291857469, app_1291857470, none_1291855571()));
    }
    else {
      if (app_1291857470) {
      Temporary3 = loadApplicationFile_2365587474(fs_2365587509, path_1291857469);
      }
      else {
      Temporary3 = loadFile_2365587463(fs_2365587509, path_1291857469);
      }
      
      var file_1291857483 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848958(self_1291857468, newTextDocument_1291857484(path_1291857469, nsuSplitLines(file_1291857483, false), app_1291857470));
    }
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857521 = [mnewString(0)];
    fmtRes_1291857521[0].push.apply(fmtRes_1291857521[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857521, 0, path_1291857469, []);
    fmtRes_1291857521[0].push.apply(fmtRes_1291857521[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857521, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857521[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857468.platform, false);
    }

  
}

function openFileJsWrapper_1291857463(self_1291857550, path_1291857551, app_1291857552) {
    openFile_1291857467(self_1291857550, path_1291857551, app_1291857552);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857463(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857730(self_1291857731) {
    var Temporary1;

    if ((((0 <= self_1291857731.currentView) && (self_1291857731.currentView < (self_1291857731.views).length)) && !((self_1291857731.views[chckIndx(self_1291857731.currentView, 0, (self_1291857731.views).length - 1)].document == null)))) {
    if (isObj(self_1291857731.views[chckIndx(self_1291857731.currentView, 0, (self_1291857731.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291857731.views[chckIndx(self_1291857731.currentView, 0, (self_1291857731.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857731.views[chckIndx(self_1291857731.currentView, 0, (self_1291857731.views).length - 1)].document.filename;
    }
    
    var filename_1291857747 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857747));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857726(self_1291857774) {
    removeFromLocalStorage_1291857730(self_1291857774);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857726(this));};

function loadFromFile_2516586059(path_2516586060) {
  var result_2516586062 = ({val: null});

  return result_2516586062;

}

function isSome_1291851014(self_1291851016) {
  var result_1291851017 = false;

    result_1291851017 = !((self_1291851016.val == null));

  return result_1291851017;

}

function isNone_1291851042(self_1291851044) {
  var result_1291851045 = false;

    result_1291851045 = (self_1291851044.val == null);

  return result_1291851045;

}

function get_1291851034(self_1291851036) {
  var result_1291851037 = null;

    if (isNone_1291851042(self_1291851036)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851037 = self_1291851036["val"];

  return result_1291851037;

}

function loadTheme_1291857790(self_1291857791, name_1291857792) {
      var Temporary2;

    try {
      var fmtRes_1291857797 = [mnewString(0)];
      fmtRes_1291857797[0].push.apply(fmtRes_1291857797[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857797, 0, name_1291857792, []);
      fmtRes_1291857797[0].push.apply(fmtRes_1291857797[0], [46,106,115,111,110]);;
      var oHEX60gensym514_1291857800 = loadFromFile_2516586059(fmtRes_1291857797[0]);
      if (!isSome_1291851014(oHEX60gensym514_1291857800)) Temporary2 = false; else {        var theme_1291857823 = get_1291851034(oHEX60gensym514_1291857800);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857791.theme = theme_1291857823;
    }
    else {
      var fmtRes_1291857828 = [mnewString(0)];
      fmtRes_1291857828[0].push.apply(fmtRes_1291857828[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857828, 0, name_1291857792, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857828[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2768240746(self_1291857791.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857786(self_1291857856, name_1291857857) {
    loadTheme_1291857790(self_1291857856, name_1291857857);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857786(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet264[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet265[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet267[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet268[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291858135 = it_1442840587.prev;
    var colontmp__1291858136 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291858135, Field1: colontmp__1291858136}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet269[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet270[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet266[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet271[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet272[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet273[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet274[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet262[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet263[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function chooseTheme_1291857878(self_1291857879) {
    
function HEX3Aanonymous_1291857882(popup_1291857883, text_1291857884) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857898(a_1291857916, b_1291857917) {
          var result_1291857922 = 0;

            result_1291857922 = cmp_2969583905(a_1291857916.score, b_1291857917.score);

          return result_1291857922;

        }

      var result_1291857885 = [];

        Label1: {
          var file_1291857886 = [];
          var stack_1291858103 = [[[]]];
          var checkDir_1291858104 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291858103[0]).length)) break Label3;
                var d_1291858106 = pop_1560281227(stack_1291858103, 0);
                Label4: {
                  var k_1291858108 = 0;
                  var p_1291858109 = [];
                  var colontmp__1291858110 = [];
                  colontmp__1291858110 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291858106);
                  Label5: {
                    var k_1291858120 = 0;
                    var v_1291858121 = [];
                    var colontmp__1291858122 = [];
                    colontmp__1291858122 = staticWalkDir_1560281124(colontmp__1291858110, true);
                    var i_1291858123 = 0;
                    var L_1291858124 = (colontmp__1291858122).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291858123 < L_1291858124)) break Label7;
                          k_1291858120 = colontmp__1291858122[chckIndx(i_1291858123, 0, (colontmp__1291858122).length - 1)]["Field0"];
                          v_1291858121 = colontmp__1291858122[chckIndx(i_1291858123, 0, (colontmp__1291858122).length - 1)]["Field1"];
                          k_1291858108 = k_1291858120;
                          p_1291858109 = v_1291858121;
                          var rel_1291858126 = HEX2F_1426063446(d_1291858106, p_1291858109);
                          if (((ConstSet275[k_1291858108] != undefined) && (ConstSet276[k_1291858108] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291858126, NTI33554449);
                          stack_1291858103[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet277[k_1291858108] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291858126;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291858126);
                          }
                          
                          file_1291857886 = Temporary9;
                          if (nsuEndsWith(file_1291857886, [46,106,115,111,110])) {
                          var name_1291858127 = nimCopy(null, nossplitFile(file_1291857886).Field1, NTI33554449);
                          var score_1291858128 = fuzzyMatchSmart_1979711572(text_1291857884, name_1291858127, true);
                          var fmtRes_1291858129 = [mnewString(0)];
                          fmtRes_1291858129[0].push.apply(fmtRes_1291858129[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291858129, 0, file_1291857886, []);
                          result_1291857885.push({name: nimCopy(null, name_1291858127, NTI33554449), path: nimCopy(null, fmtRes_1291858129[0], NTI33554449), score: score_1291858128, m_type: NTI1291848506});;
                          }
                          
                          }
                          
                          i_1291858123 = addInt(i_1291858123, 1);
                          if (!(((colontmp__1291858122).length == L_1291858124))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291858104 = false;
              }
          };
        };
        sort_2969582524(result_1291857885, HEX3Aanonymous_1291857898, 0);

      return result_1291857885;

    }
    
function HEX3Aanonymous_1291857945(item_1291857946) {
          var Temporary1;

          var oHEX60gensym525_1291857949 = loadFromFile_2516586059(item_1291857946.path);
          if (!isSome_1291851014(oHEX60gensym525_1291857949)) Temporary1 = false; else {            var theme_1291857972 = get_1291851034(oHEX60gensym525_1291857949);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857879.theme = theme_1291857972;
        }
        

      
    }
    
function HEX3Aanonymous_1291857973(item_1291857974) {
          var Temporary1;

          var oHEX60gensym526_1291857977 = loadFromFile_2516586059(item_1291857974.path);
          if (!isSome_1291851014(oHEX60gensym526_1291857977)) Temporary1 = false; else {            var theme_1291858000 = get_1291851034(oHEX60gensym526_1291857977);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857879.theme = theme_1291858000;
        }
        

      
    }
    
function HEX3Aanonymous_1291858001() {
          var Temporary1;

          var oHEX60gensym527_1291858004 = loadFromFile_2516586059(originalTheme_1291857880);
          if (!isSome_1291851014(oHEX60gensym527_1291858004)) Temporary1 = false; else {            var theme_1291858027 = get_1291851034(oHEX60gensym527_1291858004);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857879.theme = theme_1291858027;
        }
        

      
    }

    try {
    var originalTheme_1291857880 = nimCopy(null, self_1291857879.theme.path, NTI33554449);
    var popup_1291857881 = newSelectorPopup_3187671933(self_1291857879);
    popup_1291857881.getCompletions = HEX3Aanonymous_1291857882;
    popup_1291857881.handleItemSelected = HEX3Aanonymous_1291857945;
    popup_1291857881.handleItemConfirmed = HEX3Aanonymous_1291857973;
    popup_1291857881.handleCanceled = HEX3Aanonymous_1291858001;
    updateCompletions_3187671226(popup_1291857881);
    pushPopup_1291849060(self_1291857879, popup_1291857881);
    } finally {
    requestRender_2768240746(self_1291857879.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857874(self_1291858063) {
    chooseTheme_1291857878(self_1291858063);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857874(this));};

function cancel_2499805208(token_2499805209) {
    token_2499805209.canceled = true;

  
}

function newCancellationToken_2499805188() {
  var result_2499805189 = null;

    result_2499805189 = {canceled: false};

  return result_2499805189;

}

function canceled_2499805210(token_2499805211) {
  var result_2499805212 = false;

    result_2499805212 = token_2499805211.canceled;

  return result_2499805212;

}
async function iterateDirectoryRec_1291858244(self_1291858245, folder_1291858246, path_1291858247, cancellationToken_1291858248, callback_1291858251) {
  var result_1291858253 = null;

  BeforeRet: {
    var path_1291858259 = nimCopy(null, path_1291858247, NTI33554449);
    var resultItems_1291858260 = [];
    var folders_1291858261 = [];
    if (canceled_2499805210(cancellationToken_1291858248)) {
    result_1291858253 = undefined;
    break BeforeRet;
    }
    
    var items_1291858266 = (await getDirectoryListing_2214592561(folder_1291858246, path_1291858259));
    if (canceled_2499805210(cancellationToken_1291858248)) {
    result_1291858253 = undefined;
    break BeforeRet;
    }
    
    Label1: {
      var file_1291858270 = [];
      var i_1291858570 = 0;
      var L_1291858571 = (items_1291858266.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858570 < L_1291858571)) break Label3;
            file_1291858270 = items_1291858266.files[chckIndx(i_1291858570, 0, (items_1291858266.files).length - 1)];
            resultItems_1291858260.push(HEX2F_1426063446(path_1291858259, file_1291858270));;
            i_1291858570 = addInt(i_1291858570, 1);
            if (!(((items_1291858266.files).length == L_1291858571))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291858278 = [];
      var i_1291858574 = 0;
      var L_1291858575 = (items_1291858266.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858574 < L_1291858575)) break Label6;
            dir_1291858278 = items_1291858266.folders[chckIndx(i_1291858574, 0, (items_1291858266.folders).length - 1)];
            folders_1291858261.push(HEX2F_1426063446(path_1291858259, dir_1291858278));;
            i_1291858574 = addInt(i_1291858574, 1);
            if (!(((items_1291858266.folders).length == L_1291858575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291858251(resultItems_1291858260);
    if (canceled_2499805210(cancellationToken_1291858248)) {
    result_1291858253 = undefined;
    break BeforeRet;
    }
    
    var futs_1291858284 = [];
    Label7: {
      var dir_1291858288 = [];
      var i_1291858578 = 0;
      var L_1291858579 = (folders_1291858261).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858578 < L_1291858579)) break Label9;
            dir_1291858288 = folders_1291858261[chckIndx(i_1291858578, 0, (folders_1291858261).length - 1)];
            futs_1291858284.push(iterateDirectoryRec_1291858244(self_1291858245, folder_1291858246, dir_1291858288, cancellationToken_1291858248, callback_1291858251));;
            i_1291858578 = addInt(i_1291858578, 1);
            if (!(((folders_1291858261).length == L_1291858579))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858315 = null;
      var i_1291858583 = 0;
      var L_1291858584 = (futs_1291858284).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858583 < L_1291858584)) break Label12;
            fut_1291858315 = futs_1291858284[chckIndx(i_1291858583, 0, (futs_1291858284).length - 1)];
            (await fut_1291858315);
            i_1291858583 = addInt(i_1291858583, 1);
            if (!(((futs_1291858284).length == L_1291858584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291858253 = undefined;
    break BeforeRet;
  };

  return result_1291858253;

}

function some_1291855558(val_1291855560) {
  var result_1291855561 = ({val: null});

    if (!(!((val_1291855560 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855561.val = val_1291855560;

  return result_1291855561;

}

function loadWorkspaceFile_1291857442(self_1291857443, path_1291857444, folder_1291857445) {
    try {
    if ((((0 <= self_1291857443.currentView) && (self_1291857443.currentView < (self_1291857443.views).length)) && !((self_1291857443.views[chckIndx(self_1291857443.currentView, 0, (self_1291857443.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857443.views[chckIndx(self_1291857443.currentView, 0, (self_1291857443.views).length - 1)].document.workspace = nimCopy(self_1291857443.views[chckIndx(self_1291857443.currentView, 0, (self_1291857443.views).length - 1)].document.workspace, some_1291855558(folder_1291857445), NTI2197815306);
    load_2197815320(self_1291857443.views[chckIndx(self_1291857443.currentView, 0, (self_1291857443.views).length - 1)].document, path_1291857444);
    handleDocumentChanged_2415919265(self_1291857443.views[chckIndx(self_1291857443.currentView, 0, (self_1291857443.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857460 = [mnewString(0)];
    fmtRes_1291857460[0].push.apply(fmtRes_1291857460[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857460, 0, path_1291857444, []);
    fmtRes_1291857460[0].push.apply(fmtRes_1291857460[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857460, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857460[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857443.platform, false);
    }

  
}

function isNone_2818579269(self_2818579271) {
  var result_2818579272 = false;

    result_2818579272 = (self_2818579271.val == null);

  return result_2818579272;

}

function get_1291858461(self_1291858463) {
  var result_1291858464 = null;
  var result_1291858464_Idx = 0;

  BeforeRet: {
    if (isNone_2818579269(self_1291858463)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858464 = self_1291858463; result_1291858464_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858464, result_1291858464_Idx];

}

function newTextDocument_1291857682(filename_1291857684, content_1291857685, app_1291857686) {
  var result_1291857687 = null;

    result_1291857687 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857691 = result_1291857687;
    self_1291857691.filename = nimCopy(null, filename_1291857684, NTI33554449);
    self_1291857691.currentTree = null;
    self_1291857691.appFile = app_1291857686;
    var _ = initTreesitter_2818578870(self_1291857691);
    var language_1291857692 = getLanguageForFile_2902458372(filename_1291857684);
    if (isSome_2348810304(language_1291857692)) {
    self_1291857691.languageId = nimCopy(null, get_2818578907(language_1291857692), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857691, content_1291857685);

  return result_1291857687;

}
async function updateDocumentContent_1291857283(self_1291857284, document_1291857285, path_1291857286, folder_1291857287) {
  var result_1291857289 = null;

  BeforeRet: {
    var content_1291857299 = (await loadFile_2214592545(folder_1291857287, path_1291857286));
    if (isObj(document_1291857285.m_type, NTI2818572427)) {
    contentHEX3D_2818573948(document_1291857285, content_1291857299);
    }
    
    result_1291857289 = undefined;
    break BeforeRet;
  };

  return result_1291857289;

}

function openWorkspaceFile_1291857668(self_1291857669, path_1291857670, folder_1291857671) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857670, [46,97,115,116])) {
    createView_1291848958(self_1291857669, newAstDocument_2969571554(path_1291857670, false, some_1291855558(folder_1291857671)));
    }
    else {
    if (nsuEndsWith(path_1291857670, [46,97,109])) {
    createView_1291848958(self_1291857669, newModelDocument_3254780191(path_1291857670, false, some_1291855558(folder_1291857671)));
    }
    else {
      var document_1291857715 = newTextDocument_1291857682(path_1291857670, [], false);
      document_1291857715.workspace = nimCopy(document_1291857715.workspace, some_1291855558(folder_1291857671), NTI2197815306);
      var _ = updateDocumentContent_1291857283(self_1291857669, document_1291857715, path_1291857670, folder_1291857671);
      createView_1291848958(self_1291857669, document_1291857715);
    }
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857723 = [mnewString(0)];
    fmtRes_1291857723[0].push.apply(fmtRes_1291857723[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857723, 0, path_1291857670, []);
    fmtRes_1291857723[0].push.apply(fmtRes_1291857723[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857723, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857723[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857669.platform, false);
    }

  
}

function chooseFile_1291858344(self_1291858345, view_1291858346) {
    async function HEX3Aanonymous_1291858349(popup_1291858350, text_1291858351) {
                text_1291858351 = nimCopy(null, text_1291858351, NTI33554449);
                
function HEX3Aanonymous_1291858368(files_1291858369) {
                    
function HEX3Aanonymous_1291858389(a_1291858407, b_1291858408) {
                      var result_1291858413 = 0;

                        result_1291858413 = cmp_2969583905(a_1291858407.score, b_1291858408.score);

                      return result_1291858413;

                    }

                    var folder_1291858370 = folder_1291858367;
                    Label1: {
                      var file_1291858374 = [];
                      var i_1291858563 = 0;
                      var L_1291858564 = (files_1291858369).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858563 < L_1291858564)) break Label3;
                            file_1291858374 = files_1291858369[chckIndx(i_1291858563, 0, (files_1291858369).length - 1)];
                            var name_1291858375 = nimCopy(null, nossplitFile(file_1291858374).Field1, NTI33554449);
                            var score_1291858376 = fuzzyMatchSmart_1979711572(text_1291858351, name_1291858375, true);
                            var fmtRes_1291858381 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858381, 0, file_1291858374, []);
                            popup_1291858350.completions.push({path: nimCopy(null, fmtRes_1291858381[0], NTI33554449), score: score_1291858376, workspaceFolder: some_1291855558(folder_1291858370), m_type: NTI1291848508});;
                            i_1291858563 = addInt(i_1291858563, 1);
                            if (!(((files_1291858369).length == L_1291858564))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_2969582524(popup_1291858350.completions, HEX3Aanonymous_1291858389, 0);
                    markDirty_2483027989(popup_1291858350);

                  
                }

      var result_1291858353 = null;

      BeforeRet: {
        if (!((popup_1291858350.cancellationToken == null))) {
        cancel_2499805208(popup_1291858350.cancellationToken);
        }
        
        var cancellationToken_1291858362 = newCancellationToken_2499805188();
        popup_1291858350.cancellationToken = cancellationToken_1291858362;
        Label1: {
          var folder_1291858366 = null;
          var i_1291858566 = 0;
          var L_1291858567 = (self_1291858345.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858566 < L_1291858567)) break Label3;
                folder_1291858366 = self_1291858345.workspace.folders[chckIndx(i_1291858566, 0, (self_1291858345.workspace.folders).length - 1)];
                var folder_1291858367 = folder_1291858366;
                (await iterateDirectoryRec_1291858244(self_1291858345, folder_1291858367, [], cancellationToken_1291858362, HEX3Aanonymous_1291858368));
                i_1291858566 = addInt(i_1291858566, 1);
                if (!(((self_1291858345.workspace.folders).length == L_1291858567))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858353 = undefined;
        break BeforeRet;
      };

      return result_1291858353;

    }
    view_1291858346 = nimCopy(null, view_1291858346, NTI33554449);
    
function HEX3Aanonymous_1291858440(item_1291858441) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858346)) {
        case "current":
          if (isSome_2818579241(item_1291858441.workspaceFolder)) {
          loadWorkspaceFile_1291857442(self_1291858345, item_1291858441.path, (Temporary1 = get_1291858461(item_1291858441.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857384(self_1291858345, item_1291858441.path);
          }
          
          break;
        case "new":
          if (isSome_2818579241(item_1291858441.workspaceFolder)) {
          openWorkspaceFile_1291857668(self_1291858345, item_1291858441.path, (Temporary2 = get_1291858461(item_1291858441.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857467(self_1291858345, item_1291858441.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858508 = [mnewString(0)];
          fmtRes_1291858508[0].push.apply(fmtRes_1291858508[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858508, 0, view_1291858346, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858508[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858347 = newSelectorPopup_3187671933(self_1291858345);
    popup_1291858347.getCompletionsAsyncIter = HEX3Aanonymous_1291858349;
    popup_1291858347.handleItemConfirmed = HEX3Aanonymous_1291858440;
    updateCompletions_3187671226(popup_1291858347);
    pushPopup_1291849060(self_1291858345, popup_1291858347);
    } finally {
    requestRender_2768240746(self_1291858345.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858340(self_1291858545, view_1291858546) {
    chooseFile_1291858344(self_1291858545, view_1291858546);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858340(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858592(self_1291858593, token_1291858594) {
    saveApplicationFile_2365587480(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858594);

  
}

function setGithubAccessTokenJsWrapper_1291858588(self_1291858622, token_1291858623) {
    setGithubAccessToken_1291858592(self_1291858622, token_1291858623);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858588(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858644(self_1291858645) {
    try {
    if (!((self_1291858645.scriptContext == null))) {
++excHandler;
    try {
    reload_2751463441(self_1291858645.scriptContext);
    if (!(self_1291858645.initializeCalled)) {
    var _ = false;
    self_1291858645.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858658 = mnewString(0);
    fmtRes_1291858658.push.apply(fmtRes_1291858658, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858658, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291858645.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858640(self_1291858685) {
    reloadConfig_1291858644(self_1291858685);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858640(this));};

function logOptions_1291858701(self_1291858702) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858702.options, 2)]);

  
}

function logOptionsJsWrapper_1291858697(self_1291858729) {
    logOptions_1291858701(self_1291858729);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858697(this));};

function clear_2113930247(t_2113930250) {
    Label1: {
      var i_2113930302 = 0;
      var colontmp__1291858792 = 0;
      colontmp__1291858792 = (t_2113930250.data).length;
      var i_1291858793 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858793 < colontmp__1291858792)) break Label3;
            i_2113930302 = i_1291858793;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field0 = 0;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858793 = addInt(i_1291858793, 1);
          }
      };
    };
    t_2113930250.counter = 0;

  
}

function clearCommands_2113930205(config_2113930206) {
    clear_2113930247(config_2113930206.commands);
    config_2113930206.revision = addInt(config_2113930206.revision, 1);

  
}

function clearCommands_1291858745(self_1291858746, context_1291858747) {
    clearCommands_2113930205(getEventHandlerConfig_1291849162(self_1291858746, context_1291858747));

  
}

function clearCommandsJsWrapper_1291858741(self_1291858775, context_1291858776) {
    clearCommands_1291858745(self_1291858775, context_1291858776);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858741(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853924(t_1291853927) {
  var result_1291853928 = 0;

    result_1291853928 = t_1291853927.counter;

  return result_1291853928;

}

function getAllEditors_1291858801(self_1291858802) {
  var result_1291858803 = [];

    Label1: {
      var id_1291859024 = 0;
      var L_1291859088 = len_1291853924(self_1291858802.editors);
      Label2: {
        var h_1291859090 = 0;
        var colontmp__1291859091 = 0;
        colontmp__1291859091 = (self_1291858802.editors.data).length - 1;
        var res_1291859092 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291859092 <= colontmp__1291859091)) break Label4;
              h_1291859090 = res_1291859092;
              if (isFilled_1308622880(self_1291858802.editors.data[chckIndx(h_1291859090, 0, (self_1291858802.editors.data).length - 1)].Field0)) {
              id_1291859024 = self_1291858802.editors.data[chckIndx(h_1291859090, 0, (self_1291858802.editors.data).length - 1)]["Field1"];
              result_1291858803.push(id_1291859024);;
              if (!((len_1291853924(self_1291858802.editors) == L_1291859088))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291859092 = addInt(res_1291859092, 1);
            }
        };
      };
    };

  return result_1291858803;

}

function getAllEditorsJsWrapper_1291858797(self_1291859056) {
  var result_1291859057 = [];

    result_1291859057 = nimCopy(null, getAllEditors_1291858801(self_1291859056), NTI1291854642);

  return result_1291859057;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858797(this));};

function getModeConfig_1291859094(self_1291859095, mode_1291859096) {
  var result_1291859097 = null;

  BeforeRet: {
    result_1291859097 = getEventHandlerConfig_1291849162(self_1291859095, ([101,100,105,116,111,114,46] || []).concat(mode_1291859096 || []));
    break BeforeRet;
  };

  return result_1291859097;

}

function setMode_1291859104(self_1291859105, mode_1291859106) {
        
function HEX3Aanonymous_1291859127(actionHEX60gensym612HEX60gensym613_1291859128, argHEX60gensym612HEX60gensym613_1291859129) {
            var Temporary1;

          var result_1291859130 = 0;

          BeforeRet: {
            if (handlerHEX60gensym612_1291859115.config.handleActions) {
            var action_1291859131 = nimCopy(null, actionHEX60gensym612HEX60gensym613_1291859128, NTI33554449);
            var arg_1291859132 = nimCopy(null, argHEX60gensym612HEX60gensym613_1291859129, NTI33554449);
            if (handleAction_1291848870(self_1291859105, action_1291859131, arg_1291859132)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym612HEX60gensym613_1291859133 = Temporary1;
            if (handlerHEX60gensym612_1291859115.config.consumeAllActions) {
            result_1291859130 = 3;
            break BeforeRet;
            }
            
            result_1291859130 = responseHEX60gensym612HEX60gensym613_1291859133;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym612_1291859115.config.consumeAllActions) {
            result_1291859130 = 3;
            break BeforeRet;
            }
            else {
              result_1291859130 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291859130;

        }
        
function HEX3Aanonymous_1291859135(inputHEX60gensym612HEX60gensym614_1291859136) {
          var result_1291859137 = 0;

          BeforeRet: {
            if (handlerHEX60gensym612_1291859115.config.handleInputs) {
            var input_1291859138 = nimCopy(null, inputHEX60gensym612HEX60gensym614_1291859136, NTI33554449);
            result_1291859137 = 1;
            break BeforeRet;
            }
            else {
              result_1291859137 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291859137;

        }

    try {
    if (((mode_1291859106).length == 0)) {
    self_1291859105.modeEventHandler = null;
    }
    else {
      var config_1291859107 = getModeConfig_1291859094(self_1291859105, mode_1291859106);
      Label2: {
        var handlerHEX60gensym612_1291859115 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym612_1291859115.config = config_1291859107;
        handlerHEX60gensym612_1291859115.dfaInternal = buildDFA_2113929279(config_1291859107);
        handlerHEX60gensym612_1291859115.handleAction = HEX3Aanonymous_1291859127;
        handlerHEX60gensym612_1291859115.handleInput = HEX3Aanonymous_1291859135;
      };
      self_1291859105.modeEventHandler = handlerHEX60gensym612_1291859115;
    }
    
    self_1291859105.currentMode = nimCopy(null, mode_1291859106, NTI33554449);
    } finally {
    requestRender_2768240746(self_1291859105.platform, false);
    }

  
}

function setModeJsWrapper222_1291859100(self_1291859166, mode_1291859167) {
    setMode_1291859104(self_1291859166, mode_1291859167);

  
}
editor_prototype.setMode222 = function(mode_ /* : string */) { return (setModeJsWrapper222_1291859100(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291859189(self_1291859190) {
  var result_1291859191 = [];

  BeforeRet: {
    result_1291859191 = nimCopy(null, self_1291859190.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291859191;

}

function modeJsWrapper222_1291859185(self_1291859219) {
  var result_1291859220 = [];

    result_1291859220 = nimCopy(null, mode_1291859189(self_1291859219), NTI33554449);

  return result_1291859220;

}
editor_prototype.mode222 = function() { return toJSStr(modeJsWrapper222_1291859185(this));};

function getContextWithMode_1291859240(self_1291859241, context_1291859242) {
  var result_1291859243 = [];

  BeforeRet: {
    result_1291859243 = nimCopy(null, (context_1291859242 || []).concat([46] || [],self_1291859241.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291859243;

}

function getContextWithModeJsWrapper222_1291859236(self_1291859272, context_1291859273) {
  var result_1291859274 = [];

    result_1291859274 = nimCopy(null, getContextWithMode_1291859240(self_1291859272, context_1291859273), NTI33554449);

  return result_1291859274;

}
editor_prototype.getContextWithMode222 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper222_1291859236(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859525(action_1291859526, arg_1291859527) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848870(gEditor, action_1291859526, arg_1291859527);
  };

  
}

function scriptRunActionJsWrapper_1291859522(action_1291859536, arg_1291859537) {
    scriptRunAction_1291859525(action_1291859536, arg_1291859537);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859522(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859562(message_1291859563) {
    var fmtRes_1291859568 = [mnewString(0)];
    fmtRes_1291859568[0].push.apply(fmtRes_1291859568[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859568, 0, message_1291859563, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859568[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859559(message_1291859573) {
    scriptLog_1291859562(message_1291859573);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859559(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859667 = 0;
      colontmp__1291859667 = (n_1795163066).length - 1;
      var res_1291859668 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859668 <= colontmp__1291859667)) break Label4;
            i_1795163130 = res_1291859668;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859668 = addInt(res_1291859668, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2113929598(config_2113929599, keys_2113929600, action_2113929601) {
    HEX5BHEX5DHEX3D_1795162732(config_2113929599.commands, keys_2113929600, action_2113929601);
    config_2113929599.revision = addInt(config_2113929599.revision, 1);

  
}

function addCommandScript_1291859594(self_1291859595, context_1291859596, keys_1291859597, action_1291859598, arg_1291859599) {
    var Temporary1;

    if (((arg_1291859599).length == 0)) {
    Temporary1 = action_1291859598;
    }
    else {
    Temporary1 = (action_1291859598 || []).concat([32] || [],arg_1291859599 || []);
    }
    
    var command_1291859600 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291859595, context_1291859596), keys_1291859597, command_1291859600);

  
}

function addCommandScriptJsWrapper_1291859590(self_1291859631, context_1291859632, keys_1291859633, action_1291859634, arg_1291859635) {
    addCommandScript_1291859594(self_1291859631, context_1291859632, keys_1291859633, action_1291859634, arg_1291859635);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859590(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2113929695(t_2113929698, key_2113929699) {
    var hc_2113929700 = [0];
    var i_2113929707 = rawGet_1795162457(t_2113929698, key_2113929699, hc_2113929700, 0);
    var mskHEX60gensym36_2113929711 = (t_2113929698.data).length - 1;
    if ((0 <= i_2113929707)) {
    t_2113929698.counter = subInt(t_2113929698.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2113929718 = i_2113929707;
            var rHEX60gensym36_2113929719 = jHEX60gensym36_2113929718;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 = 0;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2113929707 = (addInt(i_2113929707, 1) & mskHEX60gensym36_2113929711);
                  if (isEmpty_1308622877(t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2113929719 = (t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 & mskHEX60gensym36_2113929711);
                  if (!(((((rHEX60gensym36_2113929719 <= i_2113929707) && (jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719)) || ((jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719) && (i_2113929707 < jHEX60gensym36_2113929718))) || ((i_2113929707 < jHEX60gensym36_2113929718) && (rHEX60gensym36_2113929719 <= i_2113929707))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)] = nimCopy(t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)], t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2113929652(config_2113929653, keys_2113929654) {
    del_2113929695(config_2113929653.commands, keys_2113929654);
    config_2113929653.revision = addInt(config_2113929653.revision, 1);

  
}

function removeCommand_1291859677(self_1291859678, context_1291859679, keys_1291859680) {
    removeCommand_2113929652(getEventHandlerConfig_1291849162(self_1291859678, context_1291859679), keys_1291859680);

  
}

function removeCommandJsWrapper_1291859673(self_1291859709, context_1291859710, keys_1291859711) {
    removeCommand_1291859677(self_1291859709, context_1291859710, keys_1291859711);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859673(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859738() {
  var result_1291859739 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859739 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859739 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859739 = -1;
    break BeforeRet;
  };

  return result_1291859739;

}

function getActivePopupJsWrapper_1291859735() {
  var result_1291859756 = 0;

    result_1291859756 = getActivePopup_1291859738();

  return result_1291859756;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859735());};

function getActiveEditor_1291859775() {
  var result_1291859776 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859776 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859776 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859776 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859776 = -1;
    break BeforeRet;
  };

  return result_1291859776;

}

function getActiveEditorJsWrapper_1291859772() {
  var result_1291859787 = 0;

    result_1291859787 = getActiveEditor_1291859775();

  return result_1291859787;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859772());};

function getActiveEditor2_1291859806(self_1291859807) {
  var result_1291859808 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859808 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859808 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859808 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859808 = null;
    break BeforeRet;
  };

  return result_1291859808;

}

function getActiveEditor2JsWrapper_1291859803(self_1291859842) {
  var result_1291859843 = null;

    result_1291859843 = getActiveEditor2_1291859806(self_1291859842);

  return result_1291859843;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859803(this));};

function loadCurrentConfig_1291859850(self_1291859851) {
    createView_1291848958(self_1291859851, newTextDocument_2818579088([99,111,110,102,105,103,46,106,115], loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859846(self_1291859883) {
    loadCurrentConfig_1291859850(self_1291859883);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859846(this));};

function sourceCurrentDocument_1291859899(self_1291859900) {
    var editor_1291859905 = getActiveEditor2_1291859806(self_1291859900);
    if (isObj(editor_1291859905.m_type, NTI2818572510)) {
    var document_1291859912 = editor_1291859905.document;
    var contentStrict_1291859913 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818574088(document_1291859912) || []);
    rawEcho(contentStrict_1291859913);
      var fmtRes_1291859918 = [mnewString(0)];
      fmtRes_1291859918[0].push.apply(fmtRes_1291859918[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859918, 0, document_1291859912.filename, []);
      fmtRes_1291859918[0].push.apply(fmtRes_1291859918[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859918[0]))) {
    eval(toJSStr(contentStrict_1291859913));
    }
    else {
      var fmtRes_1291859923 = mnewString(0);
      fmtRes_1291859923.push.apply(fmtRes_1291859923, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859923, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859895(self_1291859950) {
    sourceCurrentDocument_1291859899(self_1291859950);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859895(this));};

function getEditor_1291859965(index_1291859966) {
  var result_1291859967 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859967 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291859966) && (index_1291859966 < (gEditor.views).length))) {
    result_1291859967 = gEditor.views[chckIndx(index_1291859966, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859967 = -1;
    break BeforeRet;
  };

  return result_1291859967;

}

function getEditorJsWrapper_1291859962(index_1291859979) {
  var result_1291859980 = 0;

    result_1291859980 = getEditor_1291859965(index_1291859979);

  return result_1291859980;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291859962(index_));};

function rawGet_1291845908(t_1291845911, key_1291845912, hc_1291845913, hc_1291845913_Idx) {
  var result_1291845914 = 0;

  BeforeRet: {
    hc_1291845913[hc_1291845913_Idx] = hash_1325400236(key_1291845912);
    if ((hc_1291845913[hc_1291845913_Idx] == 0)) {
    hc_1291845913[hc_1291845913_Idx] = 314159265;
    }
    
    if (((t_1291845911.data).length == 0)) {
    result_1291845914 = -1;
    break BeforeRet;
    }
    
    var h_1291845968 = (hc_1291845913[hc_1291845913_Idx] & (t_1291845911.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0)) break Label2;
          if (((t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0 == hc_1291845913[hc_1291845913_Idx]) && (t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field1 == key_1291845912))) {
          result_1291845914 = h_1291845968;
          break BeforeRet;
          }
          
          h_1291845968 = nextTry_1308622883(h_1291845968, (t_1291845911.data).length - 1);
        }
    };
    result_1291845914 = subInt(-1, h_1291845968);
  };

  return result_1291845914;

}

function hasKey_1291850717(t_1291850720, key_1291850721) {
  var result_1291850722 = false;

    var hc_1291850723 = [0];
    result_1291850722 = (0 <= rawGet_1291845908(t_1291850720, key_1291850721, hc_1291850723, 0));

  return result_1291850722;

}

function contains_1291850711(t_1291850714, key_1291850715) {
  var result_1291850716 = false;

  BeforeRet: {
    result_1291850716 = hasKey_1291850717(t_1291850714, key_1291850715);
    break BeforeRet;
  };

  return result_1291850716;

}

function some_1291850863(val_1291850865) {
  var result_1291850866 = ({val: null});

    if (!(!((val_1291850865 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850866.val = val_1291850865;

  return result_1291850866;

}

function HEX5BHEX5D_1291850783(t_1291850786, key_1291850787) {
  var result_1291850788 = null;
  var result_1291850788_Idx = 0;

    var hcHEX60gensym22_1291850789 = [0];
    var indexHEX60gensym22_1291850796 = rawGet_1291845908(t_1291850786, key_1291850787, hcHEX60gensym22_1291850789, 0);
    if ((0 <= indexHEX60gensym22_1291850796)) {
    result_1291850788 = t_1291850786.data[chckIndx(indexHEX60gensym22_1291850796, 0, (t_1291850786.data).length - 1)]; result_1291850788_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_1291850787);
    }
    

  return [result_1291850788, result_1291850788_Idx];

}

function none_1291850879() {
  var result_1291850885 = ({val: null});

  return result_1291850885;

}

function getEditorForId_1291850661(self_1291850662, id_1291850663) {
    var Temporary1;

  var result_1291850668 = ({val: null});

  BeforeRet: {
    if (contains_1291850711(self_1291850662.editors, id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863((Temporary1 = HEX5BHEX5D_1291850783(self_1291850662.editors, id_1291850663), Temporary1)[0][Temporary1[1]]), NTI1291848319);
    break BeforeRet;
    }
    
    if ((self_1291850662.commandLineTextEditor.id == id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863(self_1291850662.commandLineTextEditor), NTI1291848319);
    break BeforeRet;
    }
    
    result_1291850668 = nimCopy(result_1291850668, none_1291850879(), NTI1291848319);
    break BeforeRet;
  };

  return result_1291850668;

}

function isSome_2818583961(self_2818583963) {
  var result_2818583964 = false;

    result_2818583964 = !((self_2818583963.val == null));

  return result_2818583964;

}

function isNone_2818583989(self_2818583991) {
  var result_2818583992 = false;

    result_2818583992 = (self_2818583991.val == null);

  return result_2818583992;

}

function get_2818583981(self_2818583983) {
  var result_2818583984 = null;

    if (isNone_2818583989(self_2818583983)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583984 = self_2818583983["val"];

  return result_2818583984;

}

function scriptIsTextEditor_1291860004(editorId_1291860005) {
      var Temporary1;

  var result_1291860006 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860006 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym739_1291860012 = getEditorForId_1291850661(gEditor, editorId_1291860005);
      if (!isSome_2818583961(oHEX60gensym739_1291860012)) Temporary1 = false; else {        var editor_1291860035 = get_2818583981(oHEX60gensym739_1291860012);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860006 = isObj(editor_1291860035.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291860006 = false;
    break BeforeRet;
  };

  return result_1291860006;

}

function scriptIsTextEditorJsWrapper_1291860001(editorId_1291860047) {
  var result_1291860048 = false;

    result_1291860048 = scriptIsTextEditor_1291860004(editorId_1291860047);

  return result_1291860048;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291860001(editorId_));};

function scriptIsAstEditor_1291860073(editorId_1291860074) {
      var Temporary1;

  var result_1291860075 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860075 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym748_1291860081 = getEditorForId_1291850661(gEditor, editorId_1291860074);
      if (!isSome_2818583961(oHEX60gensym748_1291860081)) Temporary1 = false; else {        var editor_1291860104 = get_2818583981(oHEX60gensym748_1291860081);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860075 = isObj(editor_1291860104.m_type, NTI2969568641);
    break BeforeRet;
    }
    
    result_1291860075 = false;
    break BeforeRet;
  };

  return result_1291860075;

}

function scriptIsAstEditorJsWrapper_1291860070(editorId_1291860116) {
  var result_1291860117 = false;

    result_1291860117 = scriptIsAstEditor_1291860073(editorId_1291860116);

  return result_1291860117;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291860070(editorId_));};

function scriptIsModelEditor_1291860141(editorId_1291860142) {
      var Temporary1;

  var result_1291860143 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860143 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym757_1291860149 = getEditorForId_1291850661(gEditor, editorId_1291860142);
      if (!isSome_2818583961(oHEX60gensym757_1291860149)) Temporary1 = false; else {        var editor_1291860172 = get_2818583981(oHEX60gensym757_1291860149);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860143 = isObj(editor_1291860172.m_type, NTI3254779983);
    break BeforeRet;
    }
    
    result_1291860143 = false;
    break BeforeRet;
  };

  return result_1291860143;

}

function scriptIsModelEditorJsWrapper_1291860138(editorId_1291860184) {
  var result_1291860185 = false;

    result_1291860185 = scriptIsModelEditor_1291860141(editorId_1291860184);

  return result_1291860185;

}
editor_prototype.scriptIsModelEditor = function(editorId_ /* : EditorId */) { return (scriptIsModelEditorJsWrapper_1291860138(editorId_));};

function scriptRunActionFor_1291860209(editorId_1291860210, action_1291860211, arg_1291860212) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym767_1291860218 = getEditorForId_1291850661(gEditor, editorId_1291860210);
      if (!isSome_2818583961(oHEX60gensym767_1291860218)) Temporary2 = false; else {        var editor_1291860241 = get_2818583981(oHEX60gensym767_1291860218);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860241.eventHandler.handleAction(action_1291860211, arg_1291860212);
    }
    else {
      var oHEX60gensym768_1291860244 = getPopupForId_1291850895(gEditor, editorId_1291860210);
      if (!isSome_3187671416(oHEX60gensym768_1291860244)) Temporary3 = false; else {        var popup_1291860267 = get_3187671436(oHEX60gensym768_1291860244);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291860267.eventHandler.handleAction(action_1291860211, arg_1291860212);
    }
    }
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291860206(editorId_1291860278, action_1291860279, arg_1291860280) {
    scriptRunActionFor_1291860209(editorId_1291860278, action_1291860279, arg_1291860280);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291860206(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291860310(editorId_1291860311, text_1291860312) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym777_1291860318 = getEditorForId_1291850661(gEditor, editorId_1291860311);
      if (!isSome_2818583961(oHEX60gensym777_1291860318)) Temporary2 = false; else {        var editor_1291860341 = get_2818583981(oHEX60gensym777_1291860318);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860341.eventHandler.handleInput(text_1291860312);
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291860307(editorId_1291860349, text_1291860350) {
    scriptInsertTextInto_1291860310(editorId_1291860349, text_1291860350);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291860307(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291860375(editorId_1291860376) {
      var Temporary2;

  var result_1291860377 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291860439 = {Field0: 0, Field1: 0};
    var colontmp__1291860440 = {Field0: 0, Field1: 0};
    result_1291860377 = nimCopy(result_1291860377, {Field0: nimCopy(null, colontmp__1291860439, NTI2449473546), Field1: nimCopy(null, colontmp__1291860440, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym786_1291860383 = getEditorForId_1291850661(gEditor, editorId_1291860376);
      if (!isSome_2818583961(oHEX60gensym786_1291860383)) Temporary2 = false; else {        var editor_1291860406 = get_2818583981(oHEX60gensym786_1291860383);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860406.m_type, NTI2818572510)) {
    var editor_1291860413 = editor_1291860406;
    result_1291860377 = nimCopy(result_1291860377, selection_2818572805(editor_1291860413), NTI2449473548);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291860441 = {Field0: 0, Field1: 0};
    var colontmp__1291860442 = {Field0: 0, Field1: 0};
    result_1291860377 = nimCopy(result_1291860377, {Field0: nimCopy(null, colontmp__1291860441, NTI2449473546), Field1: nimCopy(null, colontmp__1291860442, NTI2449473546)}, NTI2449473548);
    break BeforeRet;
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  return result_1291860377;

}

function scriptTextEditorSelectionJsWrapper_1291860372(editorId_1291860419) {
  var result_1291860420 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860420 = nimCopy(result_1291860420, scriptTextEditorSelection_1291860375(editorId_1291860419), NTI2449473548);

  return result_1291860420;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291860372(editorId_));};

function scriptSetTextEditorSelection_1291860448(editorId_1291860449, selection_1291860450) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym795_1291860456 = getEditorForId_1291850661(gEditor, editorId_1291860449);
      if (!isSome_2818583961(oHEX60gensym795_1291860456)) Temporary2 = false; else {        var editor_1291860479 = get_2818583981(oHEX60gensym795_1291860456);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860479.m_type, NTI2818572510)) {
    selectionHEX3D_2818572811(editor_1291860479, selection_1291860450);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291860445(editorId_1291860491, selection_1291860492) {
    scriptSetTextEditorSelection_1291860448(editorId_1291860491, selection_1291860492);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291860445(editorId_, selection_));};

function scriptTextEditorSelections_1291860517(editorId_1291860518) {
      var Temporary1;

  var result_1291860519 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860519 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856027);
    break BeforeRet;
    }
    
      var oHEX60gensym804_1291860529 = getEditorForId_1291850661(gEditor, editorId_1291860518);
      if (!isSome_2818583961(oHEX60gensym804_1291860529)) Temporary1 = false; else {        var editor_1291860552 = get_2818583981(oHEX60gensym804_1291860529);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860552.m_type, NTI2818572510)) {
    var editor_1291860559 = editor_1291860552;
    result_1291860519 = nimCopy(null, selections_2818572802(editor_1291860559), NTI2449473556);
    break BeforeRet;
    }
    
    }
    
    result_1291860519 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856027);
    break BeforeRet;
  };

  return result_1291860519;

}

function scriptTextEditorSelectionsJsWrapper_1291860514(editorId_1291860569) {
  var result_1291860570 = [];

    result_1291860570 = nimCopy(null, scriptTextEditorSelections_1291860517(editorId_1291860569), NTI1291856014);

  return result_1291860570;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860514(editorId_));};

function scriptSetTextEditorSelections_1291860594(editorId_1291860595, selections_1291860596) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym813_1291860602 = getEditorForId_1291850661(gEditor, editorId_1291860595);
      if (!isSome_2818583961(oHEX60gensym813_1291860602)) Temporary2 = false; else {        var editor_1291860625 = get_2818583981(oHEX60gensym813_1291860602);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860625.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573083(editor_1291860625, selections_1291860596);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860591(editorId_1291860637, selections_1291860638) {
    scriptSetTextEditorSelections_1291860594(editorId_1291860637, selections_1291860638);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860591(editorId_, selections_));};

function scriptGetTextEditorLine_1291860663(editorId_1291860664, line_1291860665) {
      var Temporary1;
    var Temporary2;

  var result_1291860666 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860666 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym823_1291860672 = getEditorForId_1291850661(gEditor, editorId_1291860664);
      if (!isSome_2818583961(oHEX60gensym823_1291860672)) Temporary1 = false; else {        var editor_1291860695 = get_2818583981(oHEX60gensym823_1291860672);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860695.m_type, NTI2818572510)) {
    var editor_1291860702 = editor_1291860695;
    if (((0 <= line_1291860665) && (line_1291860665 < (content_2818574085(editor_1291860702.document)).length))) {
    result_1291860666 = nimCopy(null, (Temporary2 = content_2818574085(editor_1291860702.document), Temporary2)[chckIndx(line_1291860665, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860666 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860666;

}

function scriptGetTextEditorLineJsWrapper_1291860660(editorId_1291860712, line_1291860713) {
  var result_1291860714 = [];

    result_1291860714 = nimCopy(null, scriptGetTextEditorLine_1291860663(editorId_1291860712, line_1291860713), NTI33554449);

  return result_1291860714;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860660(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860743(editorId_1291860744) {
      var Temporary1;

  var result_1291860745 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860745 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym833_1291860751 = getEditorForId_1291850661(gEditor, editorId_1291860744);
      if (!isSome_2818583961(oHEX60gensym833_1291860751)) Temporary1 = false; else {        var editor_1291860774 = get_2818583981(oHEX60gensym833_1291860751);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860774.m_type, NTI2818572510)) {
    var editor_1291860781 = editor_1291860774;
    result_1291860745 = (content_2818574085(editor_1291860781.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860745 = 0;
    break BeforeRet;
  };

  return result_1291860745;

}

function scriptGetTextEditorLineCountJsWrapper_1291860740(editorId_1291860790) {
  var result_1291860791 = 0;

    result_1291860791 = scriptGetTextEditorLineCount_1291860743(editorId_1291860790);

  return result_1291860791;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860740(editorId_));};

function scriptGetOptionInt_1291860826(path_1291860827, default_1291860828) {
  var result_1291860829 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860829 = default_1291860828;
      break BeforeRet;
      }
      
      var nodeHEX60gensym843_1291860834 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860827, [46], -1));
      if ((nodeHEX60gensym843_1291860834 == null)) {
      result_1291860829 = default_1291860828;
      break BeforeRet;
      }
      
    };
    result_1291860829 = getInt_1627390118(nodeHEX60gensym843_1291860834, default_1291860828);
  };

  return result_1291860829;

}

function scriptGetOptionIntJsWrapper_1291860823(path_1291860844, default_1291860845) {
  var result_1291860846 = 0;

    result_1291860846 = scriptGetOptionInt_1291860826(path_1291860844, default_1291860845);

  return result_1291860846;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860823(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860876(path_1291860877, default_1291860878) {
  var result_1291860879 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860879 = default_1291860878;
      break BeforeRet;
      }
      
      var nodeHEX60gensym853_1291860884 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860877, [46], -1));
      if ((nodeHEX60gensym853_1291860884 == null)) {
      result_1291860879 = default_1291860878;
      break BeforeRet;
      }
      
    };
    result_1291860879 = getFloat_1627390140(nodeHEX60gensym853_1291860884, default_1291860878);
  };

  return result_1291860879;

}

function scriptGetOptionFloatJsWrapper_1291860873(path_1291860894, default_1291860895) {
  var result_1291860896 = 0.0;

    result_1291860896 = scriptGetOptionFloat_1291860876(path_1291860894, default_1291860895);

  return result_1291860896;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860873(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860984(path_1291860985, default_1291860986) {
  var result_1291860987 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860987 = default_1291860986;
      break BeforeRet;
      }
      
      var nodeHEX60gensym869_1291860992 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860985, [46], -1));
      if ((nodeHEX60gensym869_1291860992 == null)) {
      result_1291860987 = default_1291860986;
      break BeforeRet;
      }
      
    };
    result_1291860987 = getBool_1627390147(nodeHEX60gensym869_1291860992, default_1291860986);
  };

  return result_1291860987;

}

function scriptGetOptionBoolJsWrapper_1291860981(path_1291861002, default_1291861003) {
  var result_1291861004 = false;

    result_1291861004 = scriptGetOptionBool_1291860984(path_1291861002, default_1291861003);

  return result_1291861004;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860981(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291861034(path_1291861035, default_1291861036) {
  var result_1291861037 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291861037 = nimCopy(null, default_1291861036, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym879_1291861042 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291861035, [46], -1));
      if ((nodeHEX60gensym879_1291861042 == null)) {
      result_1291861037 = nimCopy(null, default_1291861036, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291861037 = nimCopy(null, getStr_1627390106(nodeHEX60gensym879_1291861042, default_1291861036), NTI33554449);
  };

  return result_1291861037;

}

function scriptGetOptionStringJsWrapper_1291861031(path_1291861052, default_1291861053) {
  var result_1291861054 = [];

    result_1291861054 = nimCopy(null, scriptGetOptionString_1291861034(path_1291861052, default_1291861053), NTI33554449);

  return result_1291861054;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291861031(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291861084(path_1291861085, value_1291861086) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym888_1291861093 = nsuSplitString(path_1291861085, [46], -1);
      var nodeHEX60gensym888_1291861094 = gEditor.options;
      Label3: {
        var keyHEX60gensym888_1291861113 = [];
        var colontmp__1291861157 = [];
        colontmp__1291861157 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym888_1291861093, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861158 = 0;
        var L_1291861159 = (colontmp__1291861157).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861158 < L_1291861159)) break Label5;
              keyHEX60gensym888_1291861113 = colontmp__1291861157[chckIndx(i_1291861158, 0, (colontmp__1291861157).length - 1)];
              if (!((nodeHEX60gensym888_1291861094.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym888_1291861094, keyHEX60gensym888_1291861113))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym888_1291861094, keyHEX60gensym888_1291861113, newJObject_1627390051());
              }
              
              nodeHEX60gensym888_1291861094 = HEX5BHEX5D_1627393037(nodeHEX60gensym888_1291861094, keyHEX60gensym888_1291861113);
              i_1291861158 = addInt(i_1291861158, 1);
              if (!(((colontmp__1291861157).length == L_1291861159))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym888_1291861094 == null) || !((nodeHEX60gensym888_1291861094.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym888_1291861094, HEX5BHEX5D_2701132581(pathItemsHEX60gensym888_1291861093, 1), newJInt_1627390040(value_1291861086));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291861081(path_1291861134, value_1291861135) {
    scriptSetOptionInt_1291861084(path_1291861134, value_1291861135);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291861081(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291861166(path_1291861167, value_1291861168) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym902_1291861175 = nsuSplitString(path_1291861167, [46], -1);
      var nodeHEX60gensym902_1291861176 = gEditor.options;
      Label3: {
        var keyHEX60gensym902_1291861195 = [];
        var colontmp__1291861239 = [];
        colontmp__1291861239 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym902_1291861175, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861240 = 0;
        var L_1291861241 = (colontmp__1291861239).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861240 < L_1291861241)) break Label5;
              keyHEX60gensym902_1291861195 = colontmp__1291861239[chckIndx(i_1291861240, 0, (colontmp__1291861239).length - 1)];
              if (!((nodeHEX60gensym902_1291861176.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym902_1291861176, keyHEX60gensym902_1291861195))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym902_1291861176, keyHEX60gensym902_1291861195, newJObject_1627390051());
              }
              
              nodeHEX60gensym902_1291861176 = HEX5BHEX5D_1627393037(nodeHEX60gensym902_1291861176, keyHEX60gensym902_1291861195);
              i_1291861240 = addInt(i_1291861240, 1);
              if (!(((colontmp__1291861239).length == L_1291861241))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym902_1291861176 == null) || !((nodeHEX60gensym902_1291861176.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym902_1291861176, HEX5BHEX5D_2701132581(pathItemsHEX60gensym902_1291861175, 1), newJFloat_1627390043(value_1291861168));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291861163(path_1291861216, value_1291861217) {
    scriptSetOptionFloat_1291861166(path_1291861216, value_1291861217);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291861163(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291861248(path_1291861249, value_1291861250) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym916_1291861257 = nsuSplitString(path_1291861249, [46], -1);
      var nodeHEX60gensym916_1291861258 = gEditor.options;
      Label3: {
        var keyHEX60gensym916_1291861277 = [];
        var colontmp__1291861321 = [];
        colontmp__1291861321 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym916_1291861257, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861322 = 0;
        var L_1291861323 = (colontmp__1291861321).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861322 < L_1291861323)) break Label5;
              keyHEX60gensym916_1291861277 = colontmp__1291861321[chckIndx(i_1291861322, 0, (colontmp__1291861321).length - 1)];
              if (!((nodeHEX60gensym916_1291861258.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym916_1291861258, keyHEX60gensym916_1291861277))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym916_1291861258, keyHEX60gensym916_1291861277, newJObject_1627390051());
              }
              
              nodeHEX60gensym916_1291861258 = HEX5BHEX5D_1627393037(nodeHEX60gensym916_1291861258, keyHEX60gensym916_1291861277);
              i_1291861322 = addInt(i_1291861322, 1);
              if (!(((colontmp__1291861321).length == L_1291861323))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym916_1291861258 == null) || !((nodeHEX60gensym916_1291861258.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym916_1291861258, HEX5BHEX5D_2701132581(pathItemsHEX60gensym916_1291861257, 1), newJBool_1627390046(value_1291861250));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291861245(path_1291861298, value_1291861299) {
    scriptSetOptionBool_1291861248(path_1291861298, value_1291861299);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291861245(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291861330(path_1291861331, value_1291861332) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym930_1291861339 = nsuSplitString(path_1291861331, [46], -1);
      var nodeHEX60gensym930_1291861340 = gEditor.options;
      Label3: {
        var keyHEX60gensym930_1291861359 = [];
        var colontmp__1291861403 = [];
        colontmp__1291861403 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym930_1291861339, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861404 = 0;
        var L_1291861405 = (colontmp__1291861403).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861404 < L_1291861405)) break Label5;
              keyHEX60gensym930_1291861359 = colontmp__1291861403[chckIndx(i_1291861404, 0, (colontmp__1291861403).length - 1)];
              if (!((nodeHEX60gensym930_1291861340.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym930_1291861340, keyHEX60gensym930_1291861359))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym930_1291861340, keyHEX60gensym930_1291861359, newJObject_1627390051());
              }
              
              nodeHEX60gensym930_1291861340 = HEX5BHEX5D_1627393037(nodeHEX60gensym930_1291861340, keyHEX60gensym930_1291861359);
              i_1291861404 = addInt(i_1291861404, 1);
              if (!(((colontmp__1291861403).length == L_1291861405))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym930_1291861340 == null) || !((nodeHEX60gensym930_1291861340.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym930_1291861340, HEX5BHEX5D_2701132581(pathItemsHEX60gensym930_1291861339, 1), newJString_1627389994(value_1291861332));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291861327(path_1291861380, value_1291861381) {
    scriptSetOptionString_1291861330(path_1291861380, value_1291861381);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291861327(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847822(t_1291847825, key_1291847826, hc_1291847827, hc_1291847827_Idx) {
  var result_1291847828 = 0;

  BeforeRet: {
    hc_1291847827[hc_1291847827_Idx] = hash_1325400491(key_1291847826);
    if ((hc_1291847827[hc_1291847827_Idx] == 0)) {
    hc_1291847827[hc_1291847827_Idx] = 314159265;
    }
    
    if (((t_1291847825.data).length == 0)) {
    result_1291847828 = -1;
    break BeforeRet;
    }
    
    var h_1291847880 = (hc_1291847827[hc_1291847827_Idx] & (t_1291847825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0)) break Label2;
          if (((t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0 == hc_1291847827[hc_1291847827_Idx]) && eqStrings(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field1, key_1291847826))) {
          result_1291847828 = h_1291847880;
          break BeforeRet;
          }
          
          h_1291847880 = nextTry_1308622883(h_1291847880, (t_1291847825.data).length - 1);
        }
    };
    result_1291847828 = subInt(-1, h_1291847880);
  };

  return result_1291847828;

}

function mustRehash_3036680175(t_3036680177) {
  var result_3036680178 = false;

    if (!((t_3036680177.counter < (t_3036680177.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036680178 = ((mulInt((t_3036680177.data).length, 2) < mulInt(t_3036680177.counter, 3)) || (subInt((t_3036680177.data).length, t_3036680177.counter) < 4));

  return result_3036680178;

}

function rawInsert_3036680868(t_3036680872, data_3036680873, data_3036680873_Idx, key_3036680874, val_3036680875, hc_3036680876, h_3036680877) {
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field1 = nimCopy(null, key_3036680874, NTI33554449);
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field2 = val_3036680875;
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field0 = hc_3036680876;

  
}

function enlarge_3036680432(t_3036680435) {
    var n_3036680438 = [];
    n_3036680438 = new Array(chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647) ; ++i) { n_3036680438[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3036680435.data; t_3036680435.data = n_3036680438; n_3036680438 = Temporary1;    Label2: {
      var i_3036680536 = 0;
      var colontmp__1291861492 = 0;
      colontmp__1291861492 = (n_3036680438).length - 1;
      var res_1291861493 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291861493 <= colontmp__1291861492)) break Label4;
            i_3036680536 = res_1291861493;
            var eh_3036680617 = n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036680617)) {
            var j_3036680621 = (eh_3036680617 & (t_3036680435.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036680435.data[chckIndx(j_3036680621, 0, (t_3036680435.data).length - 1)].Field0)) break Label6;
                  j_3036680621 = nextTry_1308622883(j_3036680621, (t_3036680435.data).length - 1);
                }
            };
            rawInsert_3036680868(t_3036680435, t_3036680435, "data", n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field1, n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field2, eh_3036680617, j_3036680621);
            }
            
            res_1291861493 = addInt(res_1291861493, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036681118(t_3036681121, key_3036681122, hc_3036681123) {
  var result_3036681124 = 0;

  BeforeRet: {
    if (((t_3036681121.data).length == 0)) {
    result_3036681124 = -1;
    break BeforeRet;
    }
    
    var h_3036681209 = (hc_3036681123 & (t_3036681121.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0)) break Label2;
          if (((t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0 == hc_3036681123) && eqStrings(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field1, key_3036681122))) {
          result_3036681124 = h_3036681209;
          break BeforeRet;
          }
          
          h_3036681209 = nextTry_1308622883(h_3036681209, (t_3036681121.data).length - 1);
        }
    };
    result_3036681124 = subInt(-1, h_3036681209);
  };

  return result_3036681124;

}

function HEX5BHEX5DHEX3D_3036679907(t_3036679910, key_3036679911, val_3036679912) {
    if (((t_3036679910.data).length == 0)) {
    var correctSizeHEX60gensym30_3036679995 = slotsNeeded_1308622891(32);
    t_3036679910.counter = 0;
    t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3036680000 = [0];
    var index_3036680007 = rawGet_1291847822(t_3036679910, key_3036679911, hc_3036680000, 0);
    if ((0 <= index_3036680007)) {
    t_3036679910.data[chckIndx(index_3036680007, 0, (t_3036679910.data).length - 1)].Field2 = val_3036679912;
    }
    else {
      if (((t_3036679910.data).length == 0)) {
      var correctSizeHEX60gensym33_3036680170 = slotsNeeded_1308622891(32);
      t_3036679910.counter = 0;
      t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3036680175(t_3036679910)) {
      enlarge_3036680432(t_3036679910);
      index_3036680007 = rawGetKnownHC_3036681118(t_3036679910, key_3036679911, hc_3036680000[0]);
      }
      
      index_3036680007 = subInt(-1, index_3036680007);
      rawInsert_3036680868(t_3036679910, t_3036679910, "data", key_3036679911, val_3036679912, hc_3036680000[0], index_3036680007);
      t_3036679910.counter = addInt(t_3036679910.counter, 1);
    }
    

  
}

function scriptSetCallback_1291861412(path_1291861413, id_1291861414) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3036679907(gEditor.callbacks, path_1291861413, id_1291861414);
  };

  
}

function scriptSetCallbackJsWrapper_1291861409(path_1291861469, id_1291861470) {
    scriptSetCallback_1291861412(path_1291861469, id_1291861470);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291861409(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3388997666(initialSize_3388997669) {
  var result_3388997675 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3388997677 = slotsNeeded_1308622891(chckRange(initialSize_3388997669, 0, 2147483647));
    result_3388997675.counter = 0;
    result_3388997675.data = new Array(chckRange(correctSizeHEX60gensym0_3388997677, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3388997677, 0, 2147483647) ; ++i) { result_3388997675.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3388997675;

}
var commandLineWidget_3388997662 = [null];
var mainStack_3388997663 = [null];
var viewPanel_3388997664 = [null];
var mainPanel_3388997665 = [null];
var widgetsPerEditor_3388997691 = [initTable_3388997666(32)];

function new_536870929() {
  var result_536870932 = null;

  BeforeRet: {
    var r_536870934 = null;
    r_536870934 = ({m_type: NTI3489660939, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], currentEvent: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870932 = r_536870934;
    break BeforeRet;
  };

  return result_536870932;

}

function subscribe_1291851159(event_1291851161, callback_1291851163) {
  var result_1291851164 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851164 = nimCopy(result_1291851164, newId_2046820597(), NTI2046820355);
    event_1291851161.handlers.push({Field0: nimCopy(null, result_1291851164, NTI2046820355), Field1: callback_1291851163});;

  return result_1291851164;

}

function anyInProgress_2113930737(handlers_2113930738) {
  var result_2113930739 = false;

  BeforeRet: {
    Label1: {
      var h_2113930753 = null;
      var i_536871016 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871016 < (handlers_2113930738).length)) break Label3;
            h_2113930753 = handlers_2113930738[chckIndx(i_536871016, 0, (handlers_2113930738).length - 1)];
            if (!((h_2113930753.state.current == 0))) {
            result_2113930739 = true;
            break BeforeRet;
            }
            
            i_536871016 = addInt(i_536871016, 1);
          }
      };
    };
    result_2113930739 = false;
    break BeforeRet;
  };

  return result_2113930739;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2113929567(handler_2113929568) {
  var result_2113929569 = null;

  BeforeRet: {
    if ((handler_2113929568.revision < handler_2113929568.config.revision)) {
    handler_2113929568.dfaInternal = buildDFA_2113929279(handler_2113929568.config);
    handler_2113929568.revision = handler_2113929568.config.revision;
    }
    
    result_2113929569 = handler_2113929568.dfaInternal;
    break BeforeRet;
  };

  return result_2113929569;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet280)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet281))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet282)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2113930703(handler_2113930704, handler_2113930704_Idx, input_2113930705, modifiers_2113930706, handleUnknownAsInput_2113930707) {
  var result_2113930708 = 0;

  BeforeRet: {
    if (!((input_2113930705 == 0))) {
    var prevState_2113930709 = nimCopy(null, handler_2113930704[handler_2113930704_Idx].state, NTI2013265955);
    handler_2113930704[handler_2113930704_Idx].state = nimCopy(handler_2113930704[handler_2113930704_Idx].state, step_2013266020(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state, input_2113930705, modifiers_2113930706), NTI2013265955);
    if ((handler_2113930704[handler_2113930704_Idx].state.current == 0)) {
    if ((prevState_2113930709.current == 0)) {
    if ((((handleUnknownAsInput_2113930707 && (0 < input_2113930705)) && SetEq(SetPlus(modifiers_2113930706, ConstSet278), ConstSet279)) && !((handler_2113930704[handler_2113930704_Idx].handleInput == null)))) {
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleInput(inputToString_2013267082(input_2113930705, ConstSet283));
    break BeforeRet;
    }
    
    result_2113930708 = 1;
    break BeforeRet;
    }
    else {
      result_2113930708 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current)) {
    var colontmp__536871018 = parseAction_2113930650(getAction_2013267075(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current));
    var action_2113930722 = nimCopy(null, colontmp__536871018["Field0"], NTI33554449);
    var arg_2113930723 = nimCopy(null, colontmp__536871018["Field1"], NTI33554449);
    handler_2113930704[handler_2113930704_Idx].state.current = getDefaultState_2013267071(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current);
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleAction(action_2113930722, arg_2113930723);
    break BeforeRet;
    }
    else {
      result_2113930708 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2113930708 = 0;
      break BeforeRet;
    }
    
  };

  return result_2113930708;

}

function reset_2113930643(handler_2113930644, handler_2113930644_Idx) {
    handler_2113930644[handler_2113930644_Idx].state = nimCopy(handler_2113930644[handler_2113930644_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2113930763(handlers_2113930764, input_2113930765, modifiers_2113930766) {
            var Temporary4;

  var result_2113930767 = false;

    var anyInProgress_2113930768 = anyInProgress_2113930737(handlers_2113930764);
    var allowHandlingUnknownAsInput_2113930769 = true;
    Label1: {
      var i_2113930778 = 0;
      var colontmp__536871011 = 0;
      colontmp__536871011 = (handlers_2113930764).length;
      var i_536871012 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871012 < colontmp__536871011)) break Label3;
            i_2113930778 = i_536871012;
            var handlerIndex_2113930782 = subInt(subInt((handlers_2113930764).length, i_2113930778), 1);
            var handler_2113930783 = [handlers_2113930764[chckIndx(handlerIndex_2113930782, 0, (handlers_2113930764).length - 1)]];
            if (((anyInProgress_2113930768 && !((handler_2113930783[0].state.current == 0))) || (!(anyInProgress_2113930768) && (handler_2113930783[0].state.current == 0)))) {
            Temporary4 = handleEvent_2113930703(handler_2113930783, 0, input_2113930765, modifiers_2113930766, allowHandlingUnknownAsInput_2113930769);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2113930784 = Temporary4;
            if (!((response_2113930784 == 1))) {
            result_2113930767 = true;
            }
            
            switch (response_2113930784) {
            case 3:
              allowHandlingUnknownAsInput_2113930769 = false;
              Label5: {
                var k_2113930831 = 0;
                var h_2113930832 = null;
                var i_536871008 = 0;
                var L_536871009 = (handlers_2113930764).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871008 < L_536871009)) break Label7;
                      k_2113930831 = i_536871008;
                      h_2113930832 = handlers_2113930764[chckIndx(i_536871008, 0, (handlers_2113930764).length - 1)];
                      if (!((k_2113930831 == handlerIndex_2113930782))) {
                      var h_2113930833 = [h_2113930832];
                      reset_2113930643(h_2113930833, 0);
                      }
                      
                      i_536871008 = addInt(i_536871008, 1);
                      if (!(((handlers_2113930764).length == L_536871009))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2113930769 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2113930783[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871012 = addInt(i_536871012, 1);
          }
      };
    };

  return result_2113930767;

}

function add_2969575620(x_2969575622, x_2969575622_Idx, y_2969575623) {
    var Temporary1;

    var xl_2969575627 = (x_2969575622[x_2969575622_Idx]).length;
    if (x_2969575622[x_2969575622_Idx].length < (Temporary1 = chckRange(addInt(xl_2969575627, (y_2969575623).length), 0, 2147483647), Temporary1)) { for (var i = x_2969575622[x_2969575622_Idx].length ; i < Temporary1 ; ++i) x_2969575622[x_2969575622_Idx].push(null); }
               else { x_2969575622[x_2969575622_Idx].length = Temporary1; };
    Label2: {
      var i_2969575642 = 0;
      var colontmp__536871020 = 0;
      colontmp__536871020 = (y_2969575623).length - 1;
      var res_536871021 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871021 <= colontmp__536871020)) break Label4;
            i_2969575642 = res_536871021;
            x_2969575622[x_2969575622_Idx][chckIndx(addInt(xl_2969575627, i_2969575642), 0, (x_2969575622[x_2969575622_Idx]).length - 1)] = y_2969575623[chckIndx(i_2969575642, 0, (y_2969575623).length - 1)];
            res_536871021 = addInt(res_536871021, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291859293(self_1291859294) {
  var result_1291859295 = [[]];

    result_1291859295[0] = nimCopy(null, [self_1291859294.eventHandler], NTI2466250766);
    var modeOnTop_1291859309 = getOption_2818583615(self_1291859294, getContextWithMode_1291859240(self_1291859294, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291859294.modeEventHandler == null)) && !(modeOnTop_1291859309))) {
    result_1291859295[0].push(self_1291859294.modeEventHandler);;
    }
    
    if (self_1291859294.commandLineMode) {
    add_2969575620(result_1291859295, 0, getEventHandlers_2415919261(getCommandLineTextEditor_1291851061(self_1291859294)));
    result_1291859295[0].push(self_1291859294.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291859294.popups).length)) {
    add_2969575620(result_1291859295, 0, getEventHandlers_2483028027(self_1291859294.popups[chckIndx((self_1291859294.popups).length - 1, 0, (self_1291859294.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291859294.currentView) && (self_1291859294.currentView < (self_1291859294.views).length))) {
    add_2969575620(result_1291859295, 0, getEventHandlers_2415919261(self_1291859294.views[chckIndx(self_1291859294.currentView, 0, (self_1291859294.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291859294.modeEventHandler == null)) && modeOnTop_1291859309)) {
    result_1291859295[0].push(self_1291859294.modeEventHandler);;
    }
    

  return result_1291859295[0];

}

function handleKeyPress_1291851064(self_1291851065, input_1291851066, modifiers_1291851067) {
    if (handleEvent_2113930763(currentEventHandlers_1291859293(self_1291851065), input_1291851066, modifiers_1291851067)) {
    preventDefault_2768240809(self_1291851065.platform);
    }
    

  
}

function handleKeyRelease_1291851068(self_1291851069, input_1291851070, modifiers_1291851071) {
  
}

function handleRune_1291851072(self_1291851073, input_1291851074, modifiers_1291851075) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851074)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851074, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851075;
    }
    else {
    Temporary1 = ConstSet284;
    }
    
    var modifiers_1291859510 = nimCopy(null, Temporary1, NTI2013265950);
    if (handleEvent_2113930763(currentEventHandlers_1291859293(self_1291851073), input_1291851074, modifiers_1291859510)) {
    preventDefault_2768240809(self_1291851073.platform);
    }
    

  
}

function subscribe_1291851329(event_1291851331, callback_1291851333) {
  var result_1291851334 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851334 = nimCopy(result_1291851334, newId_2046820597(), NTI2046820355);
    event_1291851331.handlers.push({Field0: nimCopy(null, result_1291851334, NTI2046820355), Field1: callback_1291851333});;

  return result_1291851334;

}

function contains_2130706614(a_2130706615, b_2130706616) {
  var result_2130706617 = false;

  BeforeRet: {
    result_2130706617 = ((((a_2130706615.x <= b_2130706616.x) && (b_2130706616.x <= (a_2130706615.x + a_2130706615.w))) && (a_2130706615.y <= b_2130706616.y)) && (b_2130706616.y <= (a_2130706615.y + a_2130706615.h)));
    break BeforeRet;
  };

  return result_2130706617;

}

function handleMousePress_1291851076(self_1291851077, button_1291851078, modifiers_1291851079, mousePosWindow_1291851080) {
  BeforeRet: {
    Label1: {
      var i_1291859364 = 0;
      var colontmp__536871024 = 0;
      colontmp__536871024 = (self_1291851077.popups).length - 1;
      var res_536871025 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871025 <= colontmp__536871024)) break Label3;
            i_1291859364 = res_536871025;
            var popup_1291859368 = self_1291851077.popups[chckIndx(subInt((self_1291851077.popups).length - 1, i_1291859364), 0, (self_1291851077.popups).length - 1)];
            if (contains_2130706614(popup_1291859368.lastBounds, mousePosWindow_1291851080)) {
            handleMousePress_2483028038(popup_1291859368, button_1291851078, mousePosWindow_1291851080);
            break BeforeRet;
            }
            
            res_536871025 = addInt(res_536871025, 1);
          }
      };
    };
    var rects_1291859372 = layoutViews_1291848236(self_1291851077.layout, self_1291851077.layout_props, self_1291851077.lastBounds, (self_1291851077.views).length);
    Label4: {
      var i_1291859405 = 0;
      var view_1291859406 = null;
      var i_536871029 = 0;
      var L_536871030 = (self_1291851077.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871029 < L_536871030)) break Label6;
            i_1291859405 = i_536871029;
            view_1291859406 = self_1291851077.views[chckIndx(i_536871029, 0, (self_1291851077.views).length - 1)];
            if (((rects_1291859372).length <= i_1291859405)) {
            break BeforeRet;
            }
            
            if (contains_2130706614(rects_1291859372[chckIndx(i_1291859405, 0, (rects_1291859372).length - 1)], mousePosWindow_1291851080)) {
            self_1291851077.currentView = i_1291859405;
            handleMousePress_2415919278(view_1291859406.editor, button_1291851078, mousePosWindow_1291851080);
            break BeforeRet;
            }
            
            i_536871029 = addInt(i_536871029, 1);
            if (!(((self_1291851077.views).length == L_536871030))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851081(self_1291851082, button_1291851083, modifiers_1291851084, mousePosWindow_1291851085) {
  BeforeRet: {
    Label1: {
      var i_1291859423 = 0;
      var colontmp__536871033 = 0;
      colontmp__536871033 = (self_1291851082.popups).length - 1;
      var res_536871034 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871034 <= colontmp__536871033)) break Label3;
            i_1291859423 = res_536871034;
            var popup_1291859427 = self_1291851082.popups[chckIndx(subInt((self_1291851082.popups).length - 1, i_1291859423), 0, (self_1291851082.popups).length - 1)];
            if (contains_2130706614(popup_1291859427.lastBounds, mousePosWindow_1291851085)) {
            handleMouseRelease_2483028043(popup_1291859427, button_1291851083, mousePosWindow_1291851085);
            break BeforeRet;
            }
            
            res_536871034 = addInt(res_536871034, 1);
          }
      };
    };
    var rects_1291859431 = layoutViews_1291848236(self_1291851082.layout, self_1291851082.layout_props, self_1291851082.lastBounds, (self_1291851082.views).length);
    Label4: {
      var i_1291859437 = 0;
      var view_1291859438 = null;
      var i_536871037 = 0;
      var L_536871038 = (self_1291851082.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871037 < L_536871038)) break Label6;
            i_1291859437 = i_536871037;
            view_1291859438 = self_1291851082.views[chckIndx(i_536871037, 0, (self_1291851082.views).length - 1)];
            if (((rects_1291859431).length <= i_1291859437)) {
            break BeforeRet;
            }
            
            if (((self_1291851082.currentView == i_1291859437) && contains_2130706614(rects_1291859431[chckIndx(i_1291859437, 0, (rects_1291859431).length - 1)], mousePosWindow_1291851085))) {
            handleMouseRelease_2415919283(view_1291859438.editor, button_1291851083, mousePosWindow_1291851085);
            break BeforeRet;
            }
            
            i_536871037 = addInt(i_536871037, 1);
            if (!(((self_1291851082.views).length == L_536871038))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851450(event_1291851452, callback_1291851454) {
  var result_1291851455 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851455 = nimCopy(result_1291851455, newId_2046820597(), NTI2046820355);
    event_1291851452.handlers.push({Field0: nimCopy(null, result_1291851455, NTI2046820355), Field1: callback_1291851454});;

  return result_1291851455;

}

function handleMouseMove_1291851086(self_1291851087, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091) {
  BeforeRet: {
    Label1: {
      var i_1291859455 = 0;
      var colontmp__536871041 = 0;
      colontmp__536871041 = (self_1291851087.popups).length - 1;
      var res_536871042 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871042 <= colontmp__536871041)) break Label3;
            i_1291859455 = res_536871042;
            var popup_1291859459 = self_1291851087.popups[chckIndx(subInt((self_1291851087.popups).length - 1, i_1291859455), 0, (self_1291851087.popups).length - 1)];
            if (contains_2130706614(popup_1291859459.lastBounds, mousePosWindow_1291851088)) {
            handleMouseMove_2483028050(popup_1291859459, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091);
            break BeforeRet;
            }
            
            res_536871042 = addInt(res_536871042, 1);
          }
      };
    };
    var rects_1291859463 = layoutViews_1291848236(self_1291851087.layout, self_1291851087.layout_props, self_1291851087.lastBounds, (self_1291851087.views).length);
    Label4: {
      var i_1291859469 = 0;
      var view_1291859470 = null;
      var i_536871045 = 0;
      var L_536871046 = (self_1291851087.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871045 < L_536871046)) break Label6;
            i_1291859469 = i_536871045;
            view_1291859470 = self_1291851087.views[chckIndx(i_536871045, 0, (self_1291851087.views).length - 1)];
            if (((rects_1291859463).length <= i_1291859469)) {
            break BeforeRet;
            }
            
            if (((self_1291851087.currentView == i_1291859469) && contains_2130706614(rects_1291859463[chckIndx(i_1291859469, 0, (rects_1291859463).length - 1)], mousePosWindow_1291851088))) {
            handleMouseMove_2415919290(view_1291859470.editor, mousePosWindow_1291851088, mousePosDelta_1291851089, modifiers_1291851090, buttons_1291851091);
            break BeforeRet;
            }
            
            i_536871045 = addInt(i_536871045, 1);
            if (!(((self_1291851087.views).length == L_536871046))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851522(event_1291851524, callback_1291851526) {
  var result_1291851527 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851527 = nimCopy(result_1291851527, newId_2046820597(), NTI2046820355);
    event_1291851524.handlers.push({Field0: nimCopy(null, result_1291851527, NTI2046820355), Field1: callback_1291851526});;

  return result_1291851527;

}

function handleScroll_1291851092(self_1291851093, scroll_1291851094, mousePosWindow_1291851095, modifiers_1291851096) {
  BeforeRet: {
    Label1: {
      var i_1291859486 = 0;
      var colontmp__536871049 = 0;
      colontmp__536871049 = (self_1291851093.popups).length - 1;
      var res_536871050 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871050 <= colontmp__536871049)) break Label3;
            i_1291859486 = res_536871050;
            var popup_1291859490 = self_1291851093.popups[chckIndx(subInt((self_1291851093.popups).length - 1, i_1291859486), 0, (self_1291851093.popups).length - 1)];
            if (contains_2130706614(popup_1291859490.lastBounds, mousePosWindow_1291851095)) {
            handleScroll_2483028033(popup_1291859490, scroll_1291851094, mousePosWindow_1291851095);
            break BeforeRet;
            }
            
            res_536871050 = addInt(res_536871050, 1);
          }
      };
    };
    Label4: {
      var i_1291859496 = 0;
      var view_1291859497 = null;
      var i_536871053 = 0;
      var L_536871054 = (self_1291851093.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871053 < L_536871054)) break Label6;
            i_1291859496 = i_536871053;
            view_1291859497 = self_1291851093.views[chckIndx(i_536871053, 0, (self_1291851093.views).length - 1)];
            if (contains_2130706614(view_1291859497.editor.lastContentBounds, mousePosWindow_1291851095)) {
            handleScroll_2415919273(view_1291859497.editor, scroll_1291851094, mousePosWindow_1291851095);
            break BeforeRet;
            }
            
            i_536871053 = addInt(i_536871053, 1);
            if (!(((self_1291851093.views).length == L_536871054))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851594(event_1291851596, callback_1291851598) {
  var result_1291851599 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851599 = nimCopy(result_1291851599, newId_2046820597(), NTI2046820355);
    event_1291851596.handlers.push({Field0: nimCopy(null, result_1291851599, NTI2046820355), Field1: callback_1291851598});;

  return result_1291851599;

}

function handleDropFile_1291851097(self_1291851098, path_1291851099, content_1291851100) {
    createView_1291848958(self_1291851098, newTextDocument_2818579088(path_1291851099, content_1291851100, false));

  
}

function subscribe_1291851666(event_1291851668, callback_1291851670) {
  var result_1291851671 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851671 = nimCopy(result_1291851671, newId_2046820597(), NTI2046820355);
    event_1291851668.handlers.push({Field0: nimCopy(null, result_1291851671, NTI2046820355), Field1: callback_1291851670});;

  return result_1291851671;

}

function initTable_1291851681(initialSize_1291851684) {
  var result_1291851685 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_1291851687 = slotsNeeded_1308622891(chckRange(initialSize_1291851684, 0, 2147483647));
    result_1291851685.counter = 0;
    result_1291851685.data = new Array(chckRange(correctSizeHEX60gensym59_1291851687, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_1291851687, 0, 2147483647) ; ++i) { result_1291851685.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851685;

}

function HEX5BHEX5DHEX3D_1291851750(t_1291851753, key_1291851754, val_1291851755) {
    if (((t_1291851753.data).length == 0)) {
    var correctSizeHEX60gensym62_1291851804 = slotsNeeded_1308622891(32);
    t_1291851753.counter = 0;
    t_1291851753.data = new Array(chckRange(correctSizeHEX60gensym62_1291851804, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_1291851804, 0, 2147483647) ; ++i) { t_1291851753.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851809 = [0];
    var index_1291851816 = rawGet_1291848320(t_1291851753, key_1291851754, hc_1291851809, 0);
    if ((0 <= index_1291851816)) {
    t_1291851753.data[chckIndx(index_1291851816, 0, (t_1291851753.data).length - 1)].Field2 = val_1291851755;
    }
    else {
      if (((t_1291851753.data).length == 0)) {
      var correctSizeHEX60gensym65_1291851918 = slotsNeeded_1308622891(32);
      t_1291851753.counter = 0;
      t_1291851753.data = new Array(chckRange(correctSizeHEX60gensym65_1291851918, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym65_1291851918, 0, 2147483647) ; ++i) { t_1291851753.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851923(t_1291851753)) {
      enlarge_1291852078(t_1291851753);
      index_1291851816 = rawGetKnownHC_1291852550(t_1291851753, key_1291851754, hc_1291851809[0]);
      }
      
      index_1291851816 = subInt(-1, index_1291851816);
      rawInsert_1291852372(t_1291851753, t_1291851753, "data", key_1291851754, val_1291851755, hc_1291851809[0], index_1291851816);
      t_1291851753.counter = addInt(t_1291851753.counter, 1);
    }
    

  
}

function toTable_1291851676(pairs_1291851679) {
  var result_1291851680 = [({data: [], counter: 0})];

    result_1291851680[0] = nimCopy(result_1291851680[0], initTable_1291851681((pairs_1291851679).length), NTI1291845654);
    Label1: {
      var key_1291851708 = [];
      var val_1291851709 = 0.0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < (pairs_1291851679).length)) break Label3;
            key_1291851708 = pairs_1291851679[chckIndx(i_536871058, 0, (pairs_1291851679).length - 1)]["Field0"];
            val_1291851709 = pairs_1291851679[chckIndx(i_536871058, 0, (pairs_1291851679).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851750(result_1291851680[0], key_1291851708, val_1291851709);
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_1291851680[0];

}

function rawGet_2516583429(t_2516583432, key_2516583433, hc_2516583434, hc_2516583434_Idx) {
  var result_2516583435 = 0;

  BeforeRet: {
    hc_2516583434[hc_2516583434_Idx] = hash_1325400491(key_2516583433);
    if ((hc_2516583434[hc_2516583434_Idx] == 0)) {
    hc_2516583434[hc_2516583434_Idx] = 314159265;
    }
    
    if (((t_2516583432.data).length == 0)) {
    result_2516583435 = -1;
    break BeforeRet;
    }
    
    var h_2516583486 = (hc_2516583434[hc_2516583434_Idx] & (t_2516583432.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0)) break Label2;
          if (((t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0 == hc_2516583434[hc_2516583434_Idx]) && eqStrings(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field1, key_2516583433))) {
          result_2516583435 = h_2516583486;
          break BeforeRet;
          }
          
          h_2516583486 = nextTry_1308622883(h_2516583486, (t_2516583432.data).length - 1);
        }
    };
    result_2516583435 = subInt(-1, h_2516583486);
  };

  return result_2516583435;

}

function mustRehash_2516583774(t_2516583776) {
  var result_2516583777 = false;

    if (!((t_2516583776.counter < (t_2516583776.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516583777 = ((mulInt((t_2516583776.data).length, 2) < mulInt(t_2516583776.counter, 3)) || (subInt((t_2516583776.data).length, t_2516583776.counter) < 4));

  return result_2516583777;

}

function rawInsert_2516584223(t_2516584227, data_2516584228, data_2516584228_Idx, key_2516584229, val_2516584230, hc_2516584231, h_2516584232) {
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field1 = nimCopy(null, key_2516584229, NTI33554449);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2 = nimCopy(data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2, val_2516584230, NTI2550136835);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field0 = hc_2516584231;

  
}

function enlarge_2516583929(t_2516583932) {
    var n_2516583935 = [];
    n_2516583935 = new Array(chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647) ; ++i) { n_2516583935[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2516583932.data; t_2516583932.data = n_2516583935; n_2516583935 = Temporary1;    Label2: {
      var i_2516583999 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2516583935).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2516583999 = res_536871064;
            var eh_2516584053 = n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516584053)) {
            var j_2516584057 = (eh_2516584053 & (t_2516583932.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516583932.data[chckIndx(j_2516584057, 0, (t_2516583932.data).length - 1)].Field0)) break Label6;
                  j_2516584057 = nextTry_1308622883(j_2516584057, (t_2516583932.data).length - 1);
                }
            };
            rawInsert_2516584223(t_2516583932, t_2516583932, "data", n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field1, n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field2, eh_2516584053, j_2516584057);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516584392(t_2516584395, key_2516584396, hc_2516584397) {
  var result_2516584398 = 0;

  BeforeRet: {
    if (((t_2516584395.data).length == 0)) {
    result_2516584398 = -1;
    break BeforeRet;
    }
    
    var h_2516584449 = (hc_2516584397 & (t_2516584395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0)) break Label2;
          if (((t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0 == hc_2516584397) && eqStrings(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field1, key_2516584396))) {
          result_2516584398 = h_2516584449;
          break BeforeRet;
          }
          
          h_2516584449 = nextTry_1308622883(h_2516584449, (t_2516584395.data).length - 1);
        }
    };
    result_2516584398 = subInt(-1, h_2516584449);
  };

  return result_2516584398;

}

function HEX5BHEX5DHEX3D_2516583368(t_2516583371, key_2516583372, val_2516583373) {
    if (((t_2516583371.data).length == 0)) {
    var correctSizeHEX60gensym23_2516583423 = slotsNeeded_1308622891(32);
    t_2516583371.counter = 0;
    t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2516583428 = [0];
    var index_2516583667 = rawGet_2516583429(t_2516583371, key_2516583372, hc_2516583428, 0);
    if ((0 <= index_2516583667)) {
    t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2 = nimCopy(t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2, val_2516583373, NTI2550136835);
    }
    else {
      if (((t_2516583371.data).length == 0)) {
      var correctSizeHEX60gensym28_2516583769 = slotsNeeded_1308622891(32);
      t_2516583371.counter = 0;
      t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2516583774(t_2516583371)) {
      enlarge_2516583929(t_2516583371);
      index_2516583667 = rawGetKnownHC_2516584392(t_2516583371, key_2516583372, hc_2516583428[0]);
      }
      
      index_2516583667 = subInt(-1, index_2516583667);
      rawInsert_2516584223(t_2516583371, t_2516583371, "data", key_2516583372, val_2516583373, hc_2516583428[0], index_2516583667);
      t_2516583371.counter = addInt(t_2516583371.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet285[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871069 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871069 < L_2533359907)) break Label3;
            i_2533359912 = i_536871069;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871069 = addInt(i_536871069, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2516582448(text_2516582449) {
    var Temporary1;

  var result_2516582450 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2516582449, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2516582451 = Temporary1;
    if (((text_2516582449).length == addInt(6, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHex_2533359858(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(8, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(3, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(4, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 2)) || [])), NTI2550136835);
    result_2516582450.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2516582449, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2516582449, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2516582450 = nimCopy(result_2516582450, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2516582450;

}

function rawGet_2516582665(t_2516582668, key_2516582669, hc_2516582670, hc_2516582670_Idx) {
  var result_2516582671 = 0;

  BeforeRet: {
    hc_2516582670[hc_2516582670_Idx] = hash_1325400491(key_2516582669);
    if ((hc_2516582670[hc_2516582670_Idx] == 0)) {
    hc_2516582670[hc_2516582670_Idx] = 314159265;
    }
    
    if (((t_2516582668.data).length == 0)) {
    result_2516582671 = -1;
    break BeforeRet;
    }
    
    var h_2516582723 = (hc_2516582670[hc_2516582670_Idx] & (t_2516582668.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0)) break Label2;
          if (((t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0 == hc_2516582670[hc_2516582670_Idx]) && eqStrings(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field1, key_2516582669))) {
          result_2516582671 = h_2516582723;
          break BeforeRet;
          }
          
          h_2516582723 = nextTry_1308622883(h_2516582723, (t_2516582668.data).length - 1);
        }
    };
    result_2516582671 = subInt(-1, h_2516582723);
  };

  return result_2516582671;

}

function mustRehash_2516584939(t_2516584941) {
  var result_2516584942 = false;

    if (!((t_2516584941.counter < (t_2516584941.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516584942 = ((mulInt((t_2516584941.data).length, 2) < mulInt(t_2516584941.counter, 3)) || (subInt((t_2516584941.data).length, t_2516584941.counter) < 4));

  return result_2516584942;

}

function rawInsert_2516585388(t_2516585392, data_2516585393, data_2516585393_Idx, key_2516585394, val_2516585395, hc_2516585396, h_2516585397) {
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field1 = nimCopy(null, key_2516585394, NTI33554449);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2 = nimCopy(data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2, val_2516585395, NTI2516582404);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field0 = hc_2516585396;

  
}

function enlarge_2516585094(t_2516585097) {
    var n_2516585100 = [];
    n_2516585100 = new Array(chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647) ; ++i) { n_2516585100[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2516585097.data; t_2516585097.data = n_2516585100; n_2516585100 = Temporary1;    Label2: {
      var i_2516585164 = 0;
      var colontmp__536871074 = 0;
      colontmp__536871074 = (n_2516585100).length - 1;
      var res_536871075 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871075 <= colontmp__536871074)) break Label4;
            i_2516585164 = res_536871075;
            var eh_2516585218 = n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516585218)) {
            var j_2516585222 = (eh_2516585218 & (t_2516585097.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516585097.data[chckIndx(j_2516585222, 0, (t_2516585097.data).length - 1)].Field0)) break Label6;
                  j_2516585222 = nextTry_1308622883(j_2516585222, (t_2516585097.data).length - 1);
                }
            };
            rawInsert_2516585388(t_2516585097, t_2516585097, "data", n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field1, n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field2, eh_2516585218, j_2516585222);
            }
            
            res_536871075 = addInt(res_536871075, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516585557(t_2516585560, key_2516585561, hc_2516585562) {
  var result_2516585563 = 0;

  BeforeRet: {
    if (((t_2516585560.data).length == 0)) {
    result_2516585563 = -1;
    break BeforeRet;
    }
    
    var h_2516585614 = (hc_2516585562 & (t_2516585560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0)) break Label2;
          if (((t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0 == hc_2516585562) && eqStrings(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field1, key_2516585561))) {
          result_2516585563 = h_2516585614;
          break BeforeRet;
          }
          
          h_2516585614 = nextTry_1308622883(h_2516585614, (t_2516585560.data).length - 1);
        }
    };
    result_2516585563 = subInt(-1, h_2516585614);
  };

  return result_2516585563;

}

function HEX5BHEX5DHEX3D_2516584766(t_2516584769, key_2516584770, val_2516584771) {
    if (((t_2516584769.data).length == 0)) {
    var correctSizeHEX60gensym37_2516584820 = slotsNeeded_1308622891(32);
    t_2516584769.counter = 0;
    t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2516584825 = [0];
    var index_2516584832 = rawGet_2516582665(t_2516584769, key_2516584770, hc_2516584825, 0);
    if ((0 <= index_2516584832)) {
    t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2 = nimCopy(t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2, val_2516584771, NTI2516582404);
    }
    else {
      if (((t_2516584769.data).length == 0)) {
      var correctSizeHEX60gensym40_2516584934 = slotsNeeded_1308622891(32);
      t_2516584769.counter = 0;
      t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2516584939(t_2516584769)) {
      enlarge_2516585094(t_2516584769);
      index_2516584832 = rawGetKnownHC_2516585557(t_2516584769, key_2516584770, hc_2516584825[0]);
      }
      
      index_2516584832 = subInt(-1, index_2516584832);
      rawInsert_2516585388(t_2516584769, t_2516584769, "data", key_2516584770, val_2516584771, hc_2516584825[0], index_2516584832);
      t_2516584769.counter = addInt(t_2516584769.counter, 1);
    }
    

  
}

function some_2516583251(val_2516583253) {
  var result_2516583254 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2516583254.has = true;
    result_2516583254.val = nimCopy(result_2516583254.val, val_2516583253, NTI2550136835);

  return result_2516583254;

}

function defaultTheme_2516586063() {
  var result_2516586064 = null;

    result_2516586064 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2516586064.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2516586064.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2516582448([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516584766(result_2516586064.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2516583251(parseHexVar_2516582448([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet286, NTI2516582423), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2516586064;

}

function setTheme_1291851004(self_1291851005, path_1291851006) {
      var Temporary1;

      var oHEX60gensym57_1291851009 = loadFromFile_2516586059(path_1291851006);
      if (!isSome_1291851014(oHEX60gensym57_1291851009)) Temporary1 = false; else {        var theme_1291851060 = get_1291851034(oHEX60gensym57_1291851009);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851005.theme = theme_1291851060;
    }
    
    requestRender_2768240746(self_1291851005.platform, false);

  
}

function symbolName_1291854224(a_1291854226) {
  var result_1291854227 = [];

    result_1291854227 = nimCopy(null, names_1291854229[chckIndx(subInt(a_1291854226, 0), 0, (names_1291854229).length - 1)], NTI33554449);

  return result_1291854227;

}

function toJson_1291854208(a_1291854210, opt_1291854211) {
    var Temporary1;

  var result_1291854212 = null;

    switch (opt_1291854211.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854210);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854224(a_1291854210), opt_1291854211);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854210, NTI2449473554), opt_1291854211);
      break;
    }
    result_1291854212 = Temporary1;

  return result_1291854212;

}

function none_1291854116() {
  var result_1291854122 = ({val: null});

  return result_1291854122;

}

function some_1291854123(val_1291854125) {
  var result_1291854126 = ({val: null});

    if (!(!((val_1291854125 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854126.val = val_1291854125;

  return result_1291854126;

}

function getEditor_1291854107() {
  var result_1291854112 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854112 = nimCopy(result_1291854112, none_1291854116(), NTI1291850607);
    break BeforeRet;
    }
    
    result_1291854112 = nimCopy(result_1291854112, some_1291854123(gEditor), NTI1291850607);
    break BeforeRet;
  };

  return result_1291854112;

}

function isNone_1291854161(self_1291854163) {
  var result_1291854164 = false;

    result_1291854164 = (self_1291854163.val == null);

  return result_1291854164;

}

function get_1291854181(self_1291854183) {
  var result_1291854184 = null;

    if (isNone_1291854161(self_1291854183)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854184 = self_1291854183["val"];

  return result_1291854184;

}

function getBackendScript_1291854146_1291854154() {
  var result_1291854155 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym145_1291854156 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym145_1291854156)) {
      break BeforeRet;
      }
      
    };
    result_1291854155 = getBackend_1291854151(get_1291854181(rHEX60gensym145_1291854156));
  };

  return result_1291854155;

}

function getBackendApi_1291854206(HEX3Atmp_1291854148) {
  var result_1291854207 = null;

  BeforeRet: {
    result_1291854207 = newJNull_1627390049();
++excHandler;
    try {
    result_1291854207 = toJson_1291854208(getBackendScript_1291854146_1291854154(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym151_1291854305 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854310 = [mnewString(0)];
    fmtRes_1291854310[0].push.apply(fmtRes_1291854310[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854310, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym151_1291854305 || [],fmtRes_1291854310[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854207;

}

function saveAppStateScript_1291854313_1291855122() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym156_1291855123 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym156_1291855123)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853872(get_1291854181(rHEX60gensym156_1291855123));
  };

  
}

function saveAppStateApi_1291855149(HEX3Atmp_1291854315) {
  var result_1291855150 = null;

    result_1291855150 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291854313_1291855122();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym161_1291855151 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291855156 = [mnewString(0)];
    fmtRes_1291855156[0].push.apply(fmtRes_1291855156[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855156, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym161_1291855151 || [],fmtRes_1291855156[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855150;

}

function requestRenderScript_1291855210_1291855218(redrawEverything_1291855219) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym172_1291855220 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym172_1291855220)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855215(get_1291854181(rHEX60gensym172_1291855220), redrawEverything_1291855219);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet287[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet288), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet289[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818585107(node_2818585110) {
  var result_2818585112 = [false];

    var jsonPath_2818585113 = [[]];
    result_2818585112[0] = false;
    initFromJson_1627395343(result_2818585112, 0, node_2818585110, jsonPath_2818585113, 0);

  return result_2818585112[0];

}

function fromJson_2818585096(a_2818585098, a_2818585098_Idx, b_2818585099, opt_2818585100) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585099, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818585099}));
    }
    
    a_2818585098[a_2818585098_Idx] = to_2818585107(b_2818585099);

  
}

function jsonTo_2818585090(b_2818585092, opt_2818585094) {
  var result_2818585095 = [false];

    fromJson_2818585096(result_2818585095, 0, b_2818585092, opt_2818585094);

  return result_2818585095[0];

}

function requestRenderApi_1291855247(HEX3Atmp_1291855212) {
      var Temporary3;

  var result_1291855248 = null;

    result_1291855248 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855212))) {
      Temporary3 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855212, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291855210_1291855218(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym177_1291855254 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291855259 = [mnewString(0)];
    fmtRes_1291855259[0].push.apply(fmtRes_1291855259[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855259, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym177_1291855254 || [],fmtRes_1291855259[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855248;

}

function setHandleInputsScript_1291855262_1291855271(context_1291855272, value_1291855273) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym183_1291855274 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym183_1291855274)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855267(get_1291854181(rHEX60gensym183_1291855274), context_1291855272, value_1291855273);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet290[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet291), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet292[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855302(HEX3Atmp_1291855264) {
  var result_1291855303 = null;

    result_1291855303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291855262_1291855271(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855264, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855264, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym188_1291855314 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291855319 = [mnewString(0)];
    fmtRes_1291855319[0].push.apply(fmtRes_1291855319[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855319, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym188_1291855314 || [],fmtRes_1291855319[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855303;

}

function setHandleActionsScript_1291855322_1291855331(context_1291855332, value_1291855333) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym193_1291855334 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym193_1291855334)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855327(get_1291854181(rHEX60gensym193_1291855334), context_1291855332, value_1291855333);
  };

  
}

function setHandleActionsApi_1291855362(HEX3Atmp_1291855324) {
  var result_1291855363 = null;

    result_1291855363 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291855322_1291855331(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855324, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855324, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym198_1291855374 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291855379 = [mnewString(0)];
    fmtRes_1291855379[0].push.apply(fmtRes_1291855379[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855379, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym198_1291855374 || [],fmtRes_1291855379[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855363;

}

function setConsumeAllActionsScript_1291855382_1291855391(context_1291855392, value_1291855393) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym203_1291855394 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym203_1291855394)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855387(get_1291854181(rHEX60gensym203_1291855394), context_1291855392, value_1291855393);
  };

  
}

function setConsumeAllActionsApi_1291855422(HEX3Atmp_1291855384) {
  var result_1291855423 = null;

    result_1291855423 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291855382_1291855391(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855384, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855384, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym208_1291855434 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291855439 = [mnewString(0)];
    fmtRes_1291855439[0].push.apply(fmtRes_1291855439[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855439, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym208_1291855434 || [],fmtRes_1291855439[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855423;

}

function setConsumeAllInputScript_1291855442_1291855451(context_1291855452, value_1291855453) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym213_1291855454 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym213_1291855454)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855447(get_1291854181(rHEX60gensym213_1291855454), context_1291855452, value_1291855453);
  };

  
}

function setConsumeAllInputApi_1291855482(HEX3Atmp_1291855444) {
  var result_1291855483 = null;

    result_1291855483 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291855442_1291855451(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855444, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855444, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym218_1291855494 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291855499 = [mnewString(0)];
    fmtRes_1291855499[0].push.apply(fmtRes_1291855499[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855499, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym218_1291855494 || [],fmtRes_1291855499[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855483;

}

function clearWorkspaceCachesScript_1291855579_1291855590() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym226_1291855591 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym226_1291855591)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855584(get_1291854181(rHEX60gensym226_1291855591));
  };

  
}

function clearWorkspaceCachesApi_1291855617(HEX3Atmp_1291855581) {
  var result_1291855618 = null;

    result_1291855618 = newJNull_1627390049();
++excHandler;
    try {
    clearWorkspaceCachesScript_1291855579_1291855590();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym231_1291855619 = [99,108,101,97,114,87,111,114,107,115,112,97,99,101,67,97,99,104,101,115];
    var fmtRes_1291855624 = [mnewString(0)];
    fmtRes_1291855624[0].push.apply(fmtRes_1291855624[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855624, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym231_1291855619 || [],fmtRes_1291855624[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855618;

}

function openGithubWorkspaceScript_1291855631_1291855641(user_1291855642, repository_1291855643, branchOrHash_1291855644) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym237_1291855645 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym237_1291855645)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855636(get_1291854181(rHEX60gensym237_1291855645), user_1291855642, repository_1291855643, branchOrHash_1291855644);
  };

  
}

function openGithubWorkspaceApi_1291855674(HEX3Atmp_1291855633) {
  var result_1291855675 = null;

    result_1291855675 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291855631_1291855641(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855633, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855633, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855633, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym242_1291855691 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855696 = [mnewString(0)];
    fmtRes_1291855696[0].push.apply(fmtRes_1291855696[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855696, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym242_1291855691 || [],fmtRes_1291855696[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855675;

}

function openAbsytreeServerWorkspaceScript_1291855703_1291855711(url_1291855712) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym246_1291855713 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym246_1291855713)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855708(get_1291854181(rHEX60gensym246_1291855713), url_1291855712);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855740(HEX3Atmp_1291855705) {
  var result_1291855741 = null;

    result_1291855741 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291855703_1291855711(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855705, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym251_1291855747 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855752 = [mnewString(0)];
    fmtRes_1291855752[0].push.apply(fmtRes_1291855752[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855752, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym251_1291855747 || [],fmtRes_1291855752[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855741;

}

function getFlagScript2_1291855755_1291855774(flag_1291855775, default_1291855776) {
  var result_1291855777 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym256_1291855778 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym256_1291855778)) {
      break BeforeRet;
      }
      
    };
    result_1291855777 = getFlag_1291848874(get_1291854181(rHEX60gensym256_1291855778), flag_1291855775, default_1291855776);
  };

  return result_1291855777;

}

function getFlagApi2_1291855807(HEX3Atmp_1291855757) {
      var Temporary4;

  var result_1291855808 = null;

  BeforeRet: {
    result_1291855808 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291855757))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855757, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291855808 = toJson_2818589144(getFlagScript2_1291855755_1291855774(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855757, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym262_1291855823 = [103,101,116,70,108,97,103];
    var fmtRes_1291855828 = [mnewString(0)];
    fmtRes_1291855828[0].push.apply(fmtRes_1291855828[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855828, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym262_1291855823 || [],fmtRes_1291855828[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855808;

}

function setFlagScript2_1291855831_1291855895(flag_1291855896, value_1291855897) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym268_1291855898 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym268_1291855898)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848951(get_1291854181(rHEX60gensym268_1291855898), flag_1291855896, value_1291855897);
  };

  
}

function setFlagApi2_1291855926(HEX3Atmp_1291855833) {
  var result_1291855927 = null;

    result_1291855927 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291855831_1291855895(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855833, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855833, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym273_1291855938 = [115,101,116,70,108,97,103];
    var fmtRes_1291855943 = [mnewString(0)];
    fmtRes_1291855943[0].push.apply(fmtRes_1291855943[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855943, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym273_1291855938 || [],fmtRes_1291855943[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855927;

}

function toggleFlagScript_1291855952_1291855960(flag_1291855961) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym282_1291855962 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym282_1291855962)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848955(get_1291854181(rHEX60gensym282_1291855962), flag_1291855961);
  };

  
}

function toggleFlagApi_1291855989(HEX3Atmp_1291855954) {
  var result_1291855990 = null;

    result_1291855990 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291855952_1291855960(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855954, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym287_1291855996 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291856001 = [mnewString(0)];
    fmtRes_1291856001[0].push.apply(fmtRes_1291856001[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856001, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym287_1291855996 || [],fmtRes_1291856001[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855990;

}

function setOptionScript_1291856004_1291856052(option_1291856053, value_1291856054) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym292_1291856055 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym292_1291856055)) {
      break BeforeRet;
      }
      
    };
    setOption_1291856009(get_1291854181(rHEX60gensym292_1291856055), option_1291856053, value_1291856054);
  };

  
}

function setOptionApi_1291856083(HEX3Atmp_1291856006) {
  var result_1291856084 = null;

    result_1291856084 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291856004_1291856052(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856006, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291856006, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym297_1291856090 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291856095 = [mnewString(0)];
    fmtRes_1291856095[0].push.apply(fmtRes_1291856095[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856095, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym297_1291856090 || [],fmtRes_1291856095[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856084;

}

function quitScript_1291856103_1291856110() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym305_1291856111 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym305_1291856111)) {
      break BeforeRet;
      }
      
    };
    quit_1291856108(get_1291854181(rHEX60gensym305_1291856111));
  };

  
}

function quitApi_1291856137(HEX3Atmp_1291856105) {
  var result_1291856138 = null;

    result_1291856138 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291856103_1291856110();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym310_1291856139 = [113,117,105,116];
    var fmtRes_1291856144 = [mnewString(0)];
    fmtRes_1291856144[0].push.apply(fmtRes_1291856144[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856144, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym310_1291856139 || [],fmtRes_1291856144[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856138;

}

function changeFontSizeScript_1291856147_1291856155(amount_1291856156) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym314_1291856157 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym314_1291856157)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856152(get_1291854181(rHEX60gensym314_1291856157), amount_1291856156);
  };

  
}

function initFromJson_2818586511(dst_2818586513, dst_2818586513_Idx, jsonNode_2818586514, jsonPath_2818586515, jsonPath_2818586515_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818586514.kind == 4)) {
    var Temporary1 = jsonNode_2818586514;
    if (ConstSet293[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818586520 = NaN;
      dst_2818586513[dst_2818586513_Idx] = b_2818586520;
      break;
    case "inf":
      var b_2818586521 = Infinity;
      dst_2818586513[dst_2818586513_Idx] = b_2818586521;
      break;
    case "-inf":
      var b_2818586522 = -Infinity;
      dst_2818586513[dst_2818586513_Idx] = b_2818586522;
      break;
    default: 
      var Temporary2 = jsonNode_2818586514;
      if (ConstSet294[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818586514, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818586515[jsonPath_2818586515_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet295[jsonNode_2818586514.kind] != undefined))) {
      var msgHEX60gensym400_2818586536 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet296), nimCopy(null, jsonPath_2818586515[jsonPath_2818586515_Idx], NTI33554449), reprEnum(jsonNode_2818586514.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym400_2818586536, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818586514.kind == 3)) {
      var Temporary3 = jsonNode_2818586514;
      if (ConstSet297[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818586513[dst_2818586513_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818586514;
        if (ConstSet298[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818586513[dst_2818586513_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818586500(node_2818586503) {
  var result_2818586505 = [0.0];

    var jsonPath_2818586506 = [[]];
    result_2818586505[0] = 0.0;
    initFromJson_2818586511(result_2818586505, 0, node_2818586503, jsonPath_2818586506, 0);

  return result_2818586505[0];

}

function fromJson_2818586485(a_2818586487, a_2818586487_Idx, b_2818586488, opt_2818586489) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818586488, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818586488}));
    }
    
    a_2818586487[a_2818586487_Idx] = to_2818586500(b_2818586488);

  
}

function jsonTo_2818586479(b_2818586481, opt_2818586483) {
  var result_2818586484 = [0.0];

    fromJson_2818586485(result_2818586484, 0, b_2818586481, opt_2818586483);

  return result_2818586484[0];

}

function changeFontSizeApi_1291856184(HEX3Atmp_1291856149) {
  var result_1291856185 = null;

    result_1291856185 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291856147_1291856155(jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_1291856149, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym319_1291856191 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291856196 = [mnewString(0)];
    fmtRes_1291856196[0].push.apply(fmtRes_1291856196[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856196, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym319_1291856191 || [],fmtRes_1291856196[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856185;

}

function changeLayoutPropScript_1291856199_1291856457(prop_1291856458, change_1291856459) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym324_1291856460 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym324_1291856460)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856204(get_1291854181(rHEX60gensym324_1291856460), prop_1291856458, change_1291856459);
  };

  
}

function changeLayoutPropApi_1291856488(HEX3Atmp_1291856201) {
  var result_1291856489 = null;

    result_1291856489 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291856199_1291856457(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856201, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_1291856201, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym329_1291856500 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291856505 = [mnewString(0)];
    fmtRes_1291856505[0].push.apply(fmtRes_1291856505[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856505, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym329_1291856500 || [],fmtRes_1291856505[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856489;

}

function toggleStatusBarLocationScript_1291856515_1291856522() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym338_1291856523 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym338_1291856523)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856520(get_1291854181(rHEX60gensym338_1291856523));
  };

  
}

function toggleStatusBarLocationApi_1291856549(HEX3Atmp_1291856517) {
  var result_1291856550 = null;

    result_1291856550 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291856515_1291856522();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym343_1291856551 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291856556 = [mnewString(0)];
    fmtRes_1291856556[0].push.apply(fmtRes_1291856556[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856556, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym343_1291856551 || [],fmtRes_1291856556[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856550;

}

function createViewScript_1291856559_1291856571() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym346_1291856572 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym346_1291856572)) {
      break BeforeRet;
      }
      
    };
    createView_1291856564(get_1291854181(rHEX60gensym346_1291856572));
  };

  
}

function createViewApi_1291856598(HEX3Atmp_1291856561) {
  var result_1291856599 = null;

    result_1291856599 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291856559_1291856571();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym351_1291856600 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291856605 = [mnewString(0)];
    fmtRes_1291856605[0].push.apply(fmtRes_1291856605[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856605, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym351_1291856600 || [],fmtRes_1291856605[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856599;

}

function closeCurrentViewScript_1291856613_1291856650() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym354_1291856651 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym354_1291856651)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856618(get_1291854181(rHEX60gensym354_1291856651));
  };

  
}

function closeCurrentViewApi_1291856677(HEX3Atmp_1291856615) {
  var result_1291856678 = null;

    result_1291856678 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291856613_1291856650();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym359_1291856679 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291856684 = [mnewString(0)];
    fmtRes_1291856684[0].push.apply(fmtRes_1291856684[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856684, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym359_1291856679 || [],fmtRes_1291856684[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856678;

}

function moveCurrentViewToTopScript_1291856692_1291856735() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym364_1291856736 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym364_1291856736)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856697(get_1291854181(rHEX60gensym364_1291856736));
  };

  
}

function moveCurrentViewToTopApi_1291856762(HEX3Atmp_1291856694) {
  var result_1291856763 = null;

    result_1291856763 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291856692_1291856735();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym369_1291856764 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291856769 = [mnewString(0)];
    fmtRes_1291856769[0].push.apply(fmtRes_1291856769[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856769, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym369_1291856764 || [],fmtRes_1291856769[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856763;

}

function nextViewScript_1291856773_1291856786() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym375_1291856787 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym375_1291856787)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856778(get_1291854181(rHEX60gensym375_1291856787));
  };

  
}

function nextViewApi_1291856813(HEX3Atmp_1291856775) {
  var result_1291856814 = null;

    result_1291856814 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291856773_1291856786();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym380_1291856815 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291856820 = [mnewString(0)];
    fmtRes_1291856820[0].push.apply(fmtRes_1291856820[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856820, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym380_1291856815 || [],fmtRes_1291856820[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856814;

}

function prevViewScript_1291856823_1291856839() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym383_1291856840 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym383_1291856840)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856828(get_1291854181(rHEX60gensym383_1291856840));
  };

  
}

function prevViewApi_1291856866(HEX3Atmp_1291856825) {
  var result_1291856867 = null;

    result_1291856867 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291856823_1291856839();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym388_1291856868 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291856873 = [mnewString(0)];
    fmtRes_1291856873[0].push.apply(fmtRes_1291856873[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856873, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym388_1291856868 || [],fmtRes_1291856873[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856867;

}

function moveCurrentViewPrevScript_1291856876_1291856906() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym391_1291856907 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym391_1291856907)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856881(get_1291854181(rHEX60gensym391_1291856907));
  };

  
}

function moveCurrentViewPrevApi_1291856933(HEX3Atmp_1291856878) {
  var result_1291856934 = null;

    result_1291856934 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291856876_1291856906();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym396_1291856935 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291856940 = [mnewString(0)];
    fmtRes_1291856940[0].push.apply(fmtRes_1291856940[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856940, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym396_1291856935 || [],fmtRes_1291856940[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856934;

}

function moveCurrentViewNextScript_1291856943_1291856970() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym400_1291856971 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym400_1291856971)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856948(get_1291854181(rHEX60gensym400_1291856971));
  };

  
}

function moveCurrentViewNextApi_1291856997(HEX3Atmp_1291856945) {
  var result_1291856998 = null;

    result_1291856998 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291856943_1291856970();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym405_1291856999 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291857004 = [mnewString(0)];
    fmtRes_1291857004[0].push.apply(fmtRes_1291857004[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857004, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym405_1291856999 || [],fmtRes_1291857004[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856998;

}

function setLayoutScript_1291857007_1291857051(layout_1291857052) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym410_1291857053 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym410_1291857053)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291857012(get_1291854181(rHEX60gensym410_1291857053), layout_1291857052);
  };

  
}

function setLayoutApi_1291857080(HEX3Atmp_1291857009) {
  var result_1291857081 = null;

    result_1291857081 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291857007_1291857051(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857009, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym415_1291857087 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291857092 = [mnewString(0)];
    fmtRes_1291857092[0].push.apply(fmtRes_1291857092[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857092, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym415_1291857087 || [],fmtRes_1291857092[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857081;

}

function commandLineScript_1291857095_1291857107(initialValue_1291857108) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym419_1291857109 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym419_1291857109)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291857100(get_1291854181(rHEX60gensym419_1291857109), initialValue_1291857108);
  };

  
}

function commandLineApi_1291857136(HEX3Atmp_1291857097) {
      var Temporary3;

  var result_1291857137 = null;

    result_1291857137 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857097))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857097, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291857095_1291857107(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym424_1291857143 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857148 = [mnewString(0)];
    fmtRes_1291857148[0].push.apply(fmtRes_1291857148[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857148, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym424_1291857143 || [],fmtRes_1291857148[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857137;

}

function exitCommandLineScript_1291857151_1291857162() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym428_1291857163 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym428_1291857163)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291857156(get_1291854181(rHEX60gensym428_1291857163));
  };

  
}

function exitCommandLineApi_1291857189(HEX3Atmp_1291857153) {
  var result_1291857190 = null;

    result_1291857190 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291857151_1291857162();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym433_1291857191 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857196 = [mnewString(0)];
    fmtRes_1291857196[0].push.apply(fmtRes_1291857196[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857196, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym433_1291857191 || [],fmtRes_1291857196[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857190;

}

function executeCommandLineScript_1291857199_1291857231() {
  var result_1291857232 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym436_1291857233 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym436_1291857233)) {
      break BeforeRet;
      }
      
    };
    result_1291857232 = executeCommandLine_1291857204(get_1291854181(rHEX60gensym436_1291857233));
  };

  return result_1291857232;

}

function executeCommandLineApi_1291857260(HEX3Atmp_1291857201) {
  var result_1291857261 = null;

  BeforeRet: {
    result_1291857261 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857261 = toJson_2818589144(executeCommandLineScript_1291857199_1291857231(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym442_1291857266 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857271 = [mnewString(0)];
    fmtRes_1291857271[0].push.apply(fmtRes_1291857271[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857271, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym442_1291857266 || [],fmtRes_1291857271[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857261;

}

function writeFileScript_1291857307_1291857328(path_1291857329, app_1291857330) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym453_1291857331 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym453_1291857331)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857312(get_1291854181(rHEX60gensym453_1291857331), path_1291857329, app_1291857330);
  };

  
}

function writeFileApi_1291857359(HEX3Atmp_1291857309) {
      var Temporary3;
      var Temporary5;

  var result_1291857360 = null;

    result_1291857360 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857309))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857309, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291857309))) {
      Temporary5 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291857309, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291857307_1291857328(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym458_1291857371 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291857376 = [mnewString(0)];
    fmtRes_1291857376[0].push.apply(fmtRes_1291857376[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857376, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym458_1291857371 || [],fmtRes_1291857376[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857360;

}

function loadFileScript_1291857379_1291857399(path_1291857400) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym467_1291857401 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym467_1291857401)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857384(get_1291854181(rHEX60gensym467_1291857401), path_1291857400);
  };

  
}

function loadFileApi_1291857428(HEX3Atmp_1291857381) {
      var Temporary3;

  var result_1291857429 = null;

    result_1291857429 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857381))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857381, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291857379_1291857399(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym472_1291857435 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291857440 = [mnewString(0)];
    fmtRes_1291857440[0].push.apply(fmtRes_1291857440[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857440, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym472_1291857435 || [],fmtRes_1291857440[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857429;

}

function openFileScript_1291857462_1291857522(path_1291857523, app_1291857524) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym484_1291857525 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym484_1291857525)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857467(get_1291854181(rHEX60gensym484_1291857525), path_1291857523, app_1291857524);
  };

  
}

function openFileApi_1291857553(HEX3Atmp_1291857464) {
      var Temporary4;

  var result_1291857554 = null;

    result_1291857554 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857464))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291857464, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291857462_1291857522(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857464, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym489_1291857565 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291857570 = [mnewString(0)];
    fmtRes_1291857570[0].push.apply(fmtRes_1291857570[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857570, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym489_1291857565 || [],fmtRes_1291857570[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857554;

}

function removeFromLocalStorageScript_1291857725_1291857748() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym496_1291857749 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym496_1291857749)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857730(get_1291854181(rHEX60gensym496_1291857749));
  };

  
}

function removeFromLocalStorageApi_1291857775(HEX3Atmp_1291857727) {
  var result_1291857776 = null;

    result_1291857776 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291857725_1291857748();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym501_1291857777 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291857782 = [mnewString(0)];
    fmtRes_1291857782[0].push.apply(fmtRes_1291857782[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857782, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym501_1291857777 || [],fmtRes_1291857782[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857776;

}

function loadThemeScript_1291857785_1291857829(name_1291857830) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym507_1291857831 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym507_1291857831)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857790(get_1291854181(rHEX60gensym507_1291857831), name_1291857830);
  };

  
}

function loadThemeApi_1291857858(HEX3Atmp_1291857787) {
  var result_1291857859 = null;

    result_1291857859 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291857785_1291857829(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857787, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym512_1291857865 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291857870 = [mnewString(0)];
    fmtRes_1291857870[0].push.apply(fmtRes_1291857870[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857870, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym512_1291857865 || [],fmtRes_1291857870[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857859;

}

function chooseThemeScript_1291857873_1291858037() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym518_1291858038 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym518_1291858038)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857878(get_1291854181(rHEX60gensym518_1291858038));
  };

  
}

function chooseThemeApi_1291858064(HEX3Atmp_1291857875) {
  var result_1291858065 = null;

    result_1291858065 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291857873_1291858037();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym523_1291858066 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291858071 = [mnewString(0)];
    fmtRes_1291858071[0].push.apply(fmtRes_1291858071[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858071, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym523_1291858066 || [],fmtRes_1291858071[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858065;

}

function chooseFileScript_1291858339_1291858518(view_1291858519) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym542_1291858520 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym542_1291858520)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858344(get_1291854181(rHEX60gensym542_1291858520), view_1291858519);
  };

  
}

function chooseFileApi_1291858547(HEX3Atmp_1291858341) {
      var Temporary3;

  var result_1291858548 = null;

    result_1291858548 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291858341))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858341, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858339_1291858518(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym547_1291858554 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291858559 = [mnewString(0)];
    fmtRes_1291858559[0].push.apply(fmtRes_1291858559[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858559, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym547_1291858554 || [],fmtRes_1291858559[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858548;

}

function setGithubAccessTokenScript_1291858587_1291858595(token_1291858596) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym559_1291858597 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym559_1291858597)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858592(get_1291854181(rHEX60gensym559_1291858597), token_1291858596);
  };

  
}

function setGithubAccessTokenApi_1291858624(HEX3Atmp_1291858589) {
  var result_1291858625 = null;

    result_1291858625 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291858587_1291858595(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858589, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym564_1291858631 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291858636 = [mnewString(0)];
    fmtRes_1291858636[0].push.apply(fmtRes_1291858636[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858636, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym564_1291858631 || [],fmtRes_1291858636[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858625;

}

function reloadConfigScript_1291858639_1291858659() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym567_1291858660 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym567_1291858660)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858644(get_1291854181(rHEX60gensym567_1291858660));
  };

  
}

function reloadConfigApi_1291858686(HEX3Atmp_1291858641) {
  var result_1291858687 = null;

    result_1291858687 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291858639_1291858659();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_1291858688 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291858693 = [mnewString(0)];
    fmtRes_1291858693[0].push.apply(fmtRes_1291858693[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858693, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_1291858688 || [],fmtRes_1291858693[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858687;

}

function logOptionsScript_1291858696_1291858703() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym577_1291858704 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym577_1291858704)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858701(get_1291854181(rHEX60gensym577_1291858704));
  };

  
}

function logOptionsApi_1291858730(HEX3Atmp_1291858698) {
  var result_1291858731 = null;

    result_1291858731 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291858696_1291858703();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym582_1291858732 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291858737 = [mnewString(0)];
    fmtRes_1291858737[0].push.apply(fmtRes_1291858737[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858737, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym582_1291858732 || [],fmtRes_1291858737[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858731;

}

function clearCommandsScript_1291858740_1291858748(context_1291858749) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym586_1291858750 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym586_1291858750)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858745(get_1291854181(rHEX60gensym586_1291858750), context_1291858749);
  };

  
}

function clearCommandsApi_1291858777(HEX3Atmp_1291858742) {
  var result_1291858778 = null;

    result_1291858778 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291858740_1291858748(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858742, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym591_1291858784 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291858789 = [mnewString(0)];
    fmtRes_1291858789[0].push.apply(fmtRes_1291858789[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858789, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym591_1291858784 || [],fmtRes_1291858789[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858778;

}

function toJson_2818585166(a_2818585168, opt_2818585169) {
  var result_2818585170 = null;

    result_2818585170 = HEX25_1627391779(a_2818585168);

  return result_2818585170;

}

function toJson_1291859060(a_1291859062, opt_1291859063) {
  var result_1291859064 = null;

    result_1291859064 = newJArray_1627390082();
    Label1: {
      var ai_1291859071 = 0;
      var i_536871157 = 0;
      var L_536871158 = (a_1291859062).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871157 < L_536871158)) break Label3;
            ai_1291859071 = a_1291859062[chckIndx(i_536871157, 0, (a_1291859062).length - 1)];
            add_1627390190(result_1291859064, toJson_2818585166(ai_1291859071, opt_1291859063));
            i_536871157 = addInt(i_536871157, 1);
            if (!(((a_1291859062).length == L_536871158))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291859064;

}

function getAllEditorsScript_1291858796_1291859029() {
  var result_1291859030 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym594_1291859031 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym594_1291859031)) {
      break BeforeRet;
      }
      
    };
    result_1291859030 = nimCopy(null, getAllEditors_1291858801(get_1291854181(rHEX60gensym594_1291859031)), NTI1291854642);
  };

  return result_1291859030;

}

function getAllEditorsApi_1291859058(HEX3Atmp_1291858798) {
  var result_1291859059 = null;

  BeforeRet: {
    result_1291859059 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859059 = toJson_1291859060(getAllEditorsScript_1291858796_1291859029(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_1291859076 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291859081 = [mnewString(0)];
    fmtRes_1291859081[0].push.apply(fmtRes_1291859081[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859081, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_1291859076 || [],fmtRes_1291859081[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859059;

}

function setModeScript222_1291859099_1291859139(mode_1291859140) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym606_1291859141 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym606_1291859141)) {
      break BeforeRet;
      }
      
    };
    setMode_1291859104(get_1291854181(rHEX60gensym606_1291859141), mode_1291859140);
  };

  
}

function setModeApi222_1291859168(HEX3Atmp_1291859101) {
  var result_1291859169 = null;

    result_1291859169 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript222_1291859099_1291859139(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859101, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym611_1291859175 = [115,101,116,77,111,100,101];
    var fmtRes_1291859180 = [mnewString(0)];
    fmtRes_1291859180[0].push.apply(fmtRes_1291859180[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859180, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym611_1291859175 || [],fmtRes_1291859180[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859169;

}

function modeScript222_1291859184_1291859192() {
  var result_1291859193 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym617_1291859194 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym617_1291859194)) {
      break BeforeRet;
      }
      
    };
    result_1291859193 = nimCopy(null, mode_1291859189(get_1291854181(rHEX60gensym617_1291859194)), NTI33554449);
  };

  return result_1291859193;

}

function modeApi222_1291859221(HEX3Atmp_1291859186) {
  var result_1291859222 = null;

  BeforeRet: {
    result_1291859222 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859222 = toJson_1811939932(modeScript222_1291859184_1291859192(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym623_1291859227 = [109,111,100,101];
    var fmtRes_1291859232 = [mnewString(0)];
    fmtRes_1291859232[0].push.apply(fmtRes_1291859232[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859232, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym623_1291859227 || [],fmtRes_1291859232[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859222;

}

function getContextWithModeScript222_1291859235_1291859244(context_1291859245) {
  var result_1291859246 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym627_1291859247 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym627_1291859247)) {
      break BeforeRet;
      }
      
    };
    result_1291859246 = nimCopy(null, getContextWithMode_1291859240(get_1291854181(rHEX60gensym627_1291859247), context_1291859245), NTI33554449);
  };

  return result_1291859246;

}

function getContextWithModeApi222_1291859275(HEX3Atmp_1291859237) {
  var result_1291859276 = null;

  BeforeRet: {
    result_1291859276 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859276 = toJson_1811939932(getContextWithModeScript222_1291859235_1291859244(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859237, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym633_1291859286 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291859291 = [mnewString(0)];
    fmtRes_1291859291[0].push.apply(fmtRes_1291859291[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859291, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym633_1291859286 || [],fmtRes_1291859291[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859276;

}

function scriptRunActionScript_1291859521_1291859531(action_1291859532, arg_1291859533) {
    scriptRunAction_1291859525(action_1291859532, arg_1291859533);

  
}

function scriptRunActionApi_1291859538(HEX3Atmp_1291859523) {
  var result_1291859539 = null;

    result_1291859539 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291859521_1291859531(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859523, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859523, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym648_1291859550 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291859555 = [mnewString(0)];
    fmtRes_1291859555[0].push.apply(fmtRes_1291859555[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859555, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym648_1291859550 || [],fmtRes_1291859555[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859539;

}

function scriptLogScript_1291859558_1291859569(message_1291859570) {
    scriptLog_1291859562(message_1291859570);

  
}

function scriptLogApi_1291859574(HEX3Atmp_1291859560) {
  var result_1291859575 = null;

    result_1291859575 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291859558_1291859569(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859560, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym655_1291859581 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291859586 = [mnewString(0)];
    fmtRes_1291859586[0].push.apply(fmtRes_1291859586[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859586, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym655_1291859581 || [],fmtRes_1291859586[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859575;

}

function addCommandScriptScript_1291859589_1291859601(context_1291859602, keys_1291859603, action_1291859604, arg_1291859605) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym663_1291859606 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym663_1291859606)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859594(get_1291854181(rHEX60gensym663_1291859606), context_1291859602, keys_1291859603, action_1291859604, arg_1291859605);
  };

  
}

function addCommandScriptApi_1291859636(HEX3Atmp_1291859591) {
      var Temporary6;

  var result_1291859637 = null;

    result_1291859637 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291859591))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859591, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291859589_1291859601(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859591, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859591, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859591, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym668_1291859658 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291859663 = [mnewString(0)];
    fmtRes_1291859663[0].push.apply(fmtRes_1291859663[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859663, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym668_1291859658 || [],fmtRes_1291859663[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859637;

}

function removeCommandScript_1291859672_1291859681(context_1291859682, keys_1291859683) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym674_1291859684 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym674_1291859684)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859677(get_1291854181(rHEX60gensym674_1291859684), context_1291859682, keys_1291859683);
  };

  
}

function removeCommandApi_1291859712(HEX3Atmp_1291859674) {
  var result_1291859713 = null;

    result_1291859713 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291859672_1291859681(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859674, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859674, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_1291859724 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291859729 = [mnewString(0)];
    fmtRes_1291859729[0].push.apply(fmtRes_1291859729[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859729, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_1291859724 || [],fmtRes_1291859729[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859713;

}

function getActivePopupScript_1291859734_1291859752() {
  var result_1291859753 = 0;

    result_1291859753 = getActivePopup_1291859738();

  return result_1291859753;

}

function getActivePopupApi_1291859757(HEX3Atmp_1291859736) {
  var result_1291859758 = null;

  BeforeRet: {
    result_1291859758 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859758 = toJson_2818585166(getActivePopupScript_1291859734_1291859752(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym686_1291859763 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291859768 = [mnewString(0)];
    fmtRes_1291859768[0].push.apply(fmtRes_1291859768[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859768, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym686_1291859763 || [],fmtRes_1291859768[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859758;

}

function getActiveEditorScript_1291859771_1291859783() {
  var result_1291859784 = 0;

    result_1291859784 = getActiveEditor_1291859775();

  return result_1291859784;

}

function getActiveEditorApi_1291859788(HEX3Atmp_1291859773) {
  var result_1291859789 = null;

  BeforeRet: {
    result_1291859789 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859789 = toJson_2818585166(getActiveEditorScript_1291859771_1291859783(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym694_1291859794 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291859799 = [mnewString(0)];
    fmtRes_1291859799[0].push.apply(fmtRes_1291859799[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859799, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym694_1291859794 || [],fmtRes_1291859799[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859789;

}

function loadCurrentConfigScript_1291859845_1291859857() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym706_1291859858 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym706_1291859858)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859850(get_1291854181(rHEX60gensym706_1291859858));
  };

  
}

function loadCurrentConfigApi_1291859884(HEX3Atmp_1291859847) {
  var result_1291859885 = null;

    result_1291859885 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291859845_1291859857();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym711_1291859886 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291859891 = [mnewString(0)];
    fmtRes_1291859891[0].push.apply(fmtRes_1291859891[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859891, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym711_1291859886 || [],fmtRes_1291859891[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859885;

}

function sourceCurrentDocumentScript_1291859894_1291859924() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym714_1291859925 = getEditor_1291854107();
      if (isNone_1291854161(rHEX60gensym714_1291859925)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859899(get_1291854181(rHEX60gensym714_1291859925));
  };

  
}

function sourceCurrentDocumentApi_1291859951(HEX3Atmp_1291859896) {
  var result_1291859952 = null;

    result_1291859952 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291859894_1291859924();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym719_1291859953 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291859958 = [mnewString(0)];
    fmtRes_1291859958[0].push.apply(fmtRes_1291859958[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859958, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym719_1291859953 || [],fmtRes_1291859958[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859952;

}

function getEditorScript_1291859961_1291859974(index_1291859975) {
  var result_1291859976 = 0;

    result_1291859976 = getEditor_1291859965(index_1291859975);

  return result_1291859976;

}

function getEditorApi_1291859981(HEX3Atmp_1291859963) {
  var result_1291859982 = null;

  BeforeRet: {
    result_1291859982 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859982 = toJson_2818585166(getEditorScript_1291859961_1291859974(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859963, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym729_1291859992 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291859997 = [mnewString(0)];
    fmtRes_1291859997[0].push.apply(fmtRes_1291859997[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859997, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym729_1291859992 || [],fmtRes_1291859997[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859982;

}

function scriptIsTextEditorScript_1291860000_1291860042(editorId_1291860043) {
  var result_1291860044 = false;

    result_1291860044 = scriptIsTextEditor_1291860004(editorId_1291860043);

  return result_1291860044;

}

function scriptIsTextEditorApi_1291860049(HEX3Atmp_1291860002) {
  var result_1291860050 = null;

  BeforeRet: {
    result_1291860050 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860050 = toJson_2818589144(scriptIsTextEditorScript_1291860000_1291860042(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860002, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym738_1291860060 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291860065 = [mnewString(0)];
    fmtRes_1291860065[0].push.apply(fmtRes_1291860065[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860065, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym738_1291860060 || [],fmtRes_1291860065[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860050;

}

function scriptIsAstEditorScript_1291860069_1291860111(editorId_1291860112) {
  var result_1291860113 = false;

    result_1291860113 = scriptIsAstEditor_1291860073(editorId_1291860112);

  return result_1291860113;

}

function scriptIsAstEditorApi_1291860118(HEX3Atmp_1291860071) {
  var result_1291860119 = null;

  BeforeRet: {
    result_1291860119 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860119 = toJson_2818589144(scriptIsAstEditorScript_1291860069_1291860111(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860071, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym747_1291860129 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291860134 = [mnewString(0)];
    fmtRes_1291860134[0].push.apply(fmtRes_1291860134[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860134, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym747_1291860129 || [],fmtRes_1291860134[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860119;

}

function scriptIsModelEditorScript_1291860137_1291860179(editorId_1291860180) {
  var result_1291860181 = false;

    result_1291860181 = scriptIsModelEditor_1291860141(editorId_1291860180);

  return result_1291860181;

}

function scriptIsModelEditorApi_1291860186(HEX3Atmp_1291860139) {
  var result_1291860187 = null;

  BeforeRet: {
    result_1291860187 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860187 = toJson_2818589144(scriptIsModelEditorScript_1291860137_1291860179(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860139, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym756_1291860197 = [115,99,114,105,112,116,73,115,77,111,100,101,108,69,100,105,116,111,114];
    var fmtRes_1291860202 = [mnewString(0)];
    fmtRes_1291860202[0].push.apply(fmtRes_1291860202[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860202, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym756_1291860197 || [],fmtRes_1291860202[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860187;

}

function scriptRunActionForScript_1291860205_1291860272(editorId_1291860273, action_1291860274, arg_1291860275) {
    scriptRunActionFor_1291860209(editorId_1291860273, action_1291860274, arg_1291860275);

  
}

function scriptRunActionForApi_1291860281(HEX3Atmp_1291860207) {
  var result_1291860282 = null;

    result_1291860282 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291860205_1291860272(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860207, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860207, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860207, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_1291860298 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291860303 = [mnewString(0)];
    fmtRes_1291860303[0].push.apply(fmtRes_1291860303[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860303, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_1291860298 || [],fmtRes_1291860303[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860282;

}

function scriptInsertTextIntoScript_1291860306_1291860344(editorId_1291860345, text_1291860346) {
    scriptInsertTextInto_1291860310(editorId_1291860345, text_1291860346);

  
}

function scriptInsertTextIntoApi_1291860351(HEX3Atmp_1291860308) {
  var result_1291860352 = null;

    result_1291860352 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291860306_1291860344(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860308, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860308, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym776_1291860363 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291860368 = [mnewString(0)];
    fmtRes_1291860368[0].push.apply(fmtRes_1291860368[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860368, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym776_1291860363 || [],fmtRes_1291860368[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860352;

}

function toJson_2818585153(a_2818585155, opt_2818585156) {
  var result_2818585157 = null;

    result_2818585157 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585157, [108,105,110,101], toJson_2818585166(a_2818585155["Field0"], opt_2818585156));
    HEX5BHEX5DHEX3D_1627391903(result_2818585157, [99,111,108,117,109,110], toJson_2818585166(a_2818585155["Field1"], opt_2818585156));

  return result_2818585157;

}

function toJson_2818585140(a_2818585142, opt_2818585143) {
  var result_2818585144 = null;

    result_2818585144 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585144, [102,105,114,115,116], toJson_2818585153(a_2818585142["Field0"], opt_2818585143));
    HEX5BHEX5DHEX3D_1627391903(result_2818585144, [108,97,115,116], toJson_2818585153(a_2818585142["Field1"], opt_2818585143));

  return result_2818585144;

}

function scriptTextEditorSelectionScript_1291860371_1291860414(editorId_1291860415) {
  var result_1291860416 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860416 = nimCopy(result_1291860416, scriptTextEditorSelection_1291860375(editorId_1291860415), NTI2449473548);

  return result_1291860416;

}

function scriptTextEditorSelectionApi_1291860421(HEX3Atmp_1291860373) {
  var result_1291860422 = null;

  BeforeRet: {
    result_1291860422 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860422 = toJson_2818585140(scriptTextEditorSelectionScript_1291860371_1291860414(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860373, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym785_1291860432 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860437 = [mnewString(0)];
    fmtRes_1291860437[0].push.apply(fmtRes_1291860437[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860437, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym785_1291860432 || [],fmtRes_1291860437[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860422;

}

function scriptSetTextEditorSelectionScript_1291860444_1291860486(editorId_1291860487, selection_1291860488) {
    scriptSetTextEditorSelection_1291860448(editorId_1291860487, selection_1291860488);

  
}

function fromJson_2818584951(a_2818584953, b_2818584954, opt_2818584955) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584954, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584954}));
    }
    
    if (!((b_2818584954.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584954.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584981 = 0;
    var numMatchedHEX60gensym25_2818584982 = 0;
    numHEX60gensym25_2818584981 = addInt(numHEX60gensym25_2818584981, 1);
    if (hasKey_1627393154(b_2818584954, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584982 = addInt(numMatchedHEX60gensym25_2818584982, 1);
    fromJson_2818584054(a_2818584953, "Field0", HEX5BHEX5D_1627393037(b_2818584954, [108,105,110,101]), opt_2818584955);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584981 = addInt(numHEX60gensym25_2818584981, 1);
    if (hasKey_1627393154(b_2818584954, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584982 = addInt(numMatchedHEX60gensym25_2818584982, 1);
    fromJson_2818584054(a_2818584953, "Field1", HEX5BHEX5D_1627393037(b_2818584954, [99,111,108,117,109,110]), opt_2818584955);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
      }
      
    }
    }
    if ((opt_2818584955.allowExtraKeys && opt_2818584955.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584955.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584954) == numMatchedHEX60gensym25_2818584982);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584954) == numHEX60gensym25_2818584981) && (numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982));
    }
    }}
    var okHEX60gensym25_2818585043 = Temporary1;
    if (!(okHEX60gensym25_2818585043)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584954)), HEX24_369098760(numHEX60gensym25_2818584981), [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
    }
    

  
}

function fromJson_2818584897(a_2818584899, b_2818584900, opt_2818584901) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584900, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584900}));
    }
    
    if (!((b_2818584900.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584900.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584927 = 0;
    var numMatchedHEX60gensym25_2818584928 = 0;
    numHEX60gensym25_2818584927 = addInt(numHEX60gensym25_2818584927, 1);
    if (hasKey_1627393154(b_2818584900, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584928 = addInt(numMatchedHEX60gensym25_2818584928, 1);
    fromJson_2818584951(a_2818584899["Field0"], HEX5BHEX5D_1627393037(b_2818584900, [102,105,114,115,116]), opt_2818584901);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584927 = addInt(numHEX60gensym25_2818584927, 1);
    if (hasKey_1627393154(b_2818584900, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584928 = addInt(numMatchedHEX60gensym25_2818584928, 1);
    fromJson_2818584951(a_2818584899["Field1"], HEX5BHEX5D_1627393037(b_2818584900, [108,97,115,116]), opt_2818584901);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
      }
      
    }
    }
    if ((opt_2818584901.allowExtraKeys && opt_2818584901.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584901.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584900) == numMatchedHEX60gensym25_2818584928);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584900) == numHEX60gensym25_2818584927) && (numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928));
    }
    }}
    var okHEX60gensym25_2818585081 = Temporary1;
    if (!(okHEX60gensym25_2818585081)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584900)), HEX24_369098760(numHEX60gensym25_2818584927), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
    }
    

  
}

function jsonTo_2818586097(b_2818586099, opt_2818586101) {
  var result_2818586102 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584897(result_2818586102[0], b_2818586099, opt_2818586101);

  return result_2818586102[0];

}

function scriptSetTextEditorSelectionApi_1291860493(HEX3Atmp_1291860446) {
  var result_1291860494 = null;

    result_1291860494 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291860444_1291860486(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860446, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586097(HEX5BHEX5D_1627393116(HEX3Atmp_1291860446, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym794_1291860505 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860510 = [mnewString(0)];
    fmtRes_1291860510[0].push.apply(fmtRes_1291860510[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860510, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym794_1291860505 || [],fmtRes_1291860510[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860494;

}

function toJson_2818585128(a_2818585130, opt_2818585131) {
  var result_2818585132 = null;

    result_2818585132 = newJArray_1627390082();
    Label1: {
      var ai_2818585139 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871193 = 0;
      var L_536871194 = (a_2818585130).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871193 < L_536871194)) break Label3;
            ai_2818585139 = a_2818585130[chckIndx(i_536871193, 0, (a_2818585130).length - 1)];
            add_1627390190(result_2818585132, toJson_2818585140(ai_2818585139, opt_2818585131));
            i_536871193 = addInt(i_536871193, 1);
            if (!(((a_2818585130).length == L_536871194))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818585132;

}

function scriptTextEditorSelectionsScript_1291860513_1291860564(editorId_1291860565) {
  var result_1291860566 = [];

    result_1291860566 = nimCopy(null, scriptTextEditorSelections_1291860517(editorId_1291860565), NTI1291856014);

  return result_1291860566;

}

function scriptTextEditorSelectionsApi_1291860571(HEX3Atmp_1291860515) {
  var result_1291860572 = null;

  BeforeRet: {
    result_1291860572 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860572 = toJson_2818585128(scriptTextEditorSelectionsScript_1291860513_1291860564(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860515, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym803_1291860582 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860587 = [mnewString(0)];
    fmtRes_1291860587[0].push.apply(fmtRes_1291860587[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860587, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym803_1291860582 || [],fmtRes_1291860587[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860572;

}

function scriptSetTextEditorSelectionsScript_1291860590_1291860632(editorId_1291860633, selections_1291860634) {
    scriptSetTextEditorSelections_1291860594(editorId_1291860633, selections_1291860634);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet299[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818584842(a_2818584844, a_2818584844_Idx, b_2818584845, opt_2818584846) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584845, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818584845}));
    }
    
    if (a_2818584844[a_2818584844_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818584845), 0, 2147483647), Temporary1)) { for (var i = a_2818584844[a_2818584844_Idx].length ; i < Temporary1 ; ++i) a_2818584844[a_2818584844_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818584844[a_2818584844_Idx].length = Temporary1; };
    Label2: {
      var i_2818584895 = 0;
      var val_2818584896 = null;
      var colontmp__536871199 = [];
      colontmp__536871199 = getElems_1627390175(b_2818584845, []);
      var i_536871201 = 0;
      var L_536871202 = (colontmp__536871199).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871201 < L_536871202)) break Label4;
            i_2818584895 = i_536871201;
            val_2818584896 = colontmp__536871199[chckIndx(i_536871201, 0, (colontmp__536871199).length - 1)];
            fromJson_2818584897(a_2818584844[a_2818584844_Idx][chckIndx(i_2818584895, 0, (a_2818584844[a_2818584844_Idx]).length - 1)], val_2818584896, opt_2818584846);
            i_536871201 = addInt(i_536871201, 1);
            if (!(((colontmp__536871199).length == L_536871202))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818584836(b_2818584838, opt_2818584840) {
  var result_2818584841 = [[]];

    fromJson_2818584842(result_2818584841, 0, b_2818584838, opt_2818584840);

  return result_2818584841[0];

}

function scriptSetTextEditorSelectionsApi_1291860639(HEX3Atmp_1291860592) {
  var result_1291860640 = null;

    result_1291860640 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291860590_1291860632(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860592, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_1291860592, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym812_1291860651 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860656 = [mnewString(0)];
    fmtRes_1291860656[0].push.apply(fmtRes_1291860656[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860656, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym812_1291860651 || [],fmtRes_1291860656[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860640;

}

function scriptGetTextEditorLineScript_1291860659_1291860706(editorId_1291860707, line_1291860708) {
  var result_1291860709 = [];

    result_1291860709 = nimCopy(null, scriptGetTextEditorLine_1291860663(editorId_1291860707, line_1291860708), NTI33554449);

  return result_1291860709;

}

function scriptGetTextEditorLineApi_1291860715(HEX3Atmp_1291860661) {
  var result_1291860716 = null;

  BeforeRet: {
    result_1291860716 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860716 = toJson_1811939932(scriptGetTextEditorLineScript_1291860659_1291860706(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860661, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860661, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_1291860731 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291860736 = [mnewString(0)];
    fmtRes_1291860736[0].push.apply(fmtRes_1291860736[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860736, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_1291860731 || [],fmtRes_1291860736[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860716;

}

function scriptGetTextEditorLineCountScript_1291860739_1291860785(editorId_1291860786) {
  var result_1291860787 = 0;

    result_1291860787 = scriptGetTextEditorLineCount_1291860743(editorId_1291860786);

  return result_1291860787;

}

function scriptGetTextEditorLineCountApi_1291860792(HEX3Atmp_1291860741) {
  var result_1291860793 = null;

  BeforeRet: {
    result_1291860793 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860793 = toJson_2818585166(scriptGetTextEditorLineCountScript_1291860739_1291860785(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860741, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_1291860803 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291860808 = [mnewString(0)];
    fmtRes_1291860808[0].push.apply(fmtRes_1291860808[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860808, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_1291860803 || [],fmtRes_1291860808[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860793;

}

function scriptGetOptionIntScript_1291860822_1291860838(path_1291860839, default_1291860840) {
  var result_1291860841 = 0;

    result_1291860841 = scriptGetOptionInt_1291860826(path_1291860839, default_1291860840);

  return result_1291860841;

}

function scriptGetOptionIntApi_1291860847(HEX3Atmp_1291860824) {
  var result_1291860848 = null;

  BeforeRet: {
    result_1291860848 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860848 = toJson_2818585166(scriptGetOptionIntScript_1291860822_1291860838(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860824, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860824, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym842_1291860863 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860868 = [mnewString(0)];
    fmtRes_1291860868[0].push.apply(fmtRes_1291860868[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860868, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym842_1291860863 || [],fmtRes_1291860868[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860848;

}

function scriptGetOptionFloatScript_1291860872_1291860888(path_1291860889, default_1291860890) {
  var result_1291860891 = 0.0;

    result_1291860891 = scriptGetOptionFloat_1291860876(path_1291860889, default_1291860890);

  return result_1291860891;

}

function initFromJson_1291860936(dst_1291860938, dst_1291860938_Idx, jsonNode_1291860939, jsonPath_1291860940, jsonPath_1291860940_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860939.kind == 4)) {
    var Temporary1 = jsonNode_1291860939;
    if (ConstSet300[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860945 = NaN;
      dst_1291860938[dst_1291860938_Idx] = b_1291860945;
      break;
    case "inf":
      var b_1291860946 = Infinity;
      dst_1291860938[dst_1291860938_Idx] = b_1291860946;
      break;
    case "-inf":
      var b_1291860947 = -Infinity;
      dst_1291860938[dst_1291860938_Idx] = b_1291860947;
      break;
    default: 
      var Temporary2 = jsonNode_1291860939;
      if (ConstSet301[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860939, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860940[jsonPath_1291860940_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet302[jsonNode_1291860939.kind] != undefined))) {
      var msgHEX60gensym856_1291860961 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet303), nimCopy(null, jsonPath_1291860940[jsonPath_1291860940_Idx], NTI33554449), reprEnum(jsonNode_1291860939.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym856_1291860961, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860939.kind == 3)) {
      var Temporary3 = jsonNode_1291860939;
      if (ConstSet304[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860938[dst_1291860938_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860939;
        if (ConstSet305[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860938[dst_1291860938_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860925(node_1291860928) {
  var result_1291860930 = [0.0];

    var jsonPath_1291860931 = [[]];
    result_1291860930[0] = 0.0;
    initFromJson_1291860936(result_1291860930, 0, node_1291860928, jsonPath_1291860931, 0);

  return result_1291860930[0];

}

function fromJson_1291860910(a_1291860912, a_1291860912_Idx, b_1291860913, opt_1291860914) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860913, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860913}));
    }
    
    a_1291860912[a_1291860912_Idx] = to_1291860925(b_1291860913);

  
}

function jsonTo_1291860904(b_1291860906, opt_1291860908) {
  var result_1291860909 = [0.0];

    fromJson_1291860910(result_1291860909, 0, b_1291860906, opt_1291860908);

  return result_1291860909[0];

}

function scriptGetOptionFloatApi_1291860897(HEX3Atmp_1291860874) {
  var result_1291860898 = null;

  BeforeRet: {
    result_1291860898 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860898 = toJson_1291854896(scriptGetOptionFloatScript_1291860872_1291860888(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860874, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860904(HEX5BHEX5D_1627393116(HEX3Atmp_1291860874, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym852_1291860971 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860976 = [mnewString(0)];
    fmtRes_1291860976[0].push.apply(fmtRes_1291860976[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860976, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym852_1291860971 || [],fmtRes_1291860976[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860898;

}

function scriptGetOptionBoolScript_1291860980_1291860996(path_1291860997, default_1291860998) {
  var result_1291860999 = false;

    result_1291860999 = scriptGetOptionBool_1291860984(path_1291860997, default_1291860998);

  return result_1291860999;

}

function scriptGetOptionBoolApi_1291861005(HEX3Atmp_1291860982) {
  var result_1291861006 = null;

  BeforeRet: {
    result_1291861006 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291861006 = toJson_2818589144(scriptGetOptionBoolScript_1291860980_1291860996(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860982, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291860982, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym868_1291861021 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861026 = [mnewString(0)];
    fmtRes_1291861026[0].push.apply(fmtRes_1291861026[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861026, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym868_1291861021 || [],fmtRes_1291861026[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291861006;

}

function scriptGetOptionStringScript_1291861030_1291861046(path_1291861047, default_1291861048) {
  var result_1291861049 = [];

    result_1291861049 = nimCopy(null, scriptGetOptionString_1291861034(path_1291861047, default_1291861048), NTI33554449);

  return result_1291861049;

}

function scriptGetOptionStringApi_1291861055(HEX3Atmp_1291861032) {
  var result_1291861056 = null;

  BeforeRet: {
    result_1291861056 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291861056 = toJson_1811939932(scriptGetOptionStringScript_1291861030_1291861046(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861032, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861032, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym878_1291861071 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861076 = [mnewString(0)];
    fmtRes_1291861076[0].push.apply(fmtRes_1291861076[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861076, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym878_1291861071 || [],fmtRes_1291861076[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291861056;

}

function scriptSetOptionIntScript_1291861080_1291861129(path_1291861130, value_1291861131) {
    scriptSetOptionInt_1291861084(path_1291861130, value_1291861131);

  
}

function scriptSetOptionIntApi_1291861136(HEX3Atmp_1291861082) {
  var result_1291861137 = null;

    result_1291861137 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291861080_1291861129(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861082, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291861082, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym887_1291861148 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291861153 = [mnewString(0)];
    fmtRes_1291861153[0].push.apply(fmtRes_1291861153[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861153, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym887_1291861148 || [],fmtRes_1291861153[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861137;

}

function scriptSetOptionFloatScript_1291861162_1291861211(path_1291861212, value_1291861213) {
    scriptSetOptionFloat_1291861166(path_1291861212, value_1291861213);

  
}

function scriptSetOptionFloatApi_1291861218(HEX3Atmp_1291861164) {
  var result_1291861219 = null;

    result_1291861219 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291861162_1291861211(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861164, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860904(HEX5BHEX5D_1627393116(HEX3Atmp_1291861164, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym901_1291861230 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291861235 = [mnewString(0)];
    fmtRes_1291861235[0].push.apply(fmtRes_1291861235[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861235, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym901_1291861230 || [],fmtRes_1291861235[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861219;

}

function scriptSetOptionBoolScript_1291861244_1291861293(path_1291861294, value_1291861295) {
    scriptSetOptionBool_1291861248(path_1291861294, value_1291861295);

  
}

function scriptSetOptionBoolApi_1291861300(HEX3Atmp_1291861246) {
  var result_1291861301 = null;

    result_1291861301 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291861244_1291861293(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861246, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291861246, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym915_1291861312 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861317 = [mnewString(0)];
    fmtRes_1291861317[0].push.apply(fmtRes_1291861317[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861317, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym915_1291861312 || [],fmtRes_1291861317[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861301;

}

function scriptSetOptionStringScript_1291861326_1291861375(path_1291861376, value_1291861377) {
    scriptSetOptionString_1291861330(path_1291861376, value_1291861377);

  
}

function scriptSetOptionStringApi_1291861382(HEX3Atmp_1291861328) {
  var result_1291861383 = null;

    result_1291861383 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291861326_1291861375(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861328, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861328, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym929_1291861394 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861399 = [mnewString(0)];
    fmtRes_1291861399[0].push.apply(fmtRes_1291861399[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861399, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym929_1291861394 || [],fmtRes_1291861399[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861383;

}

function scriptSetCallbackScript_1291861408_1291861464(path_1291861465, id_1291861466) {
    scriptSetCallback_1291861412(path_1291861465, id_1291861466);

  
}

function scriptSetCallbackApi_1291861471(HEX3Atmp_1291861410) {
  var result_1291861472 = null;

    result_1291861472 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291861408_1291861464(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861410, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291861410, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym943_1291861483 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291861488 = [mnewString(0)];
    fmtRes_1291861488[0].push.apply(fmtRes_1291861488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym943_1291861483 || [],fmtRes_1291861488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861472;

}

function dispatch_1291861499(command_1291861498, arg_1291861497) {
    var Temporary1;

  var result_1291861501 = ({val: null});

    switch (toJSStr(command_1291861498)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818593612(getBackendApi_1291854206(arg_1291861497));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818593612(saveAppStateApi_1291855149(arg_1291861497));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818593612(requestRenderApi_1291855247(arg_1291861497));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818593612(setHandleInputsApi_1291855302(arg_1291861497));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818593612(setHandleActionsApi_1291855362(arg_1291861497));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818593612(setConsumeAllActionsApi_1291855422(arg_1291861497));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818593612(setConsumeAllInputApi_1291855482(arg_1291861497));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2818593612(clearWorkspaceCachesApi_1291855617(arg_1291861497));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818593612(openGithubWorkspaceApi_1291855674(arg_1291861497));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818593612(openAbsytreeServerWorkspaceApi_1291855740(arg_1291861497));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593612(getFlagApi2_1291855807(arg_1291861497));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593612(setFlagApi2_1291855926(arg_1291861497));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818593612(toggleFlagApi_1291855989(arg_1291861497));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818593612(setOptionApi_1291856083(arg_1291861497));
      break;
    case "quit":
      Temporary1 = some_2818593612(quitApi_1291856137(arg_1291861497));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818593612(changeFontSizeApi_1291856184(arg_1291861497));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818593612(changeLayoutPropApi_1291856488(arg_1291861497));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818593612(toggleStatusBarLocationApi_1291856549(arg_1291861497));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818593612(createViewApi_1291856598(arg_1291861497));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818593612(closeCurrentViewApi_1291856677(arg_1291861497));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818593612(moveCurrentViewToTopApi_1291856762(arg_1291861497));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818593612(nextViewApi_1291856813(arg_1291861497));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818593612(prevViewApi_1291856866(arg_1291861497));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818593612(moveCurrentViewPrevApi_1291856933(arg_1291861497));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818593612(moveCurrentViewNextApi_1291856997(arg_1291861497));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818593612(setLayoutApi_1291857080(arg_1291861497));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818593612(commandLineApi_1291857136(arg_1291861497));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818593612(exitCommandLineApi_1291857189(arg_1291861497));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818593612(executeCommandLineApi_1291857260(arg_1291861497));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818593612(writeFileApi_1291857359(arg_1291861497));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818593612(loadFileApi_1291857428(arg_1291861497));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818593612(openFileApi_1291857553(arg_1291861497));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818593612(removeFromLocalStorageApi_1291857775(arg_1291861497));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818593612(loadThemeApi_1291857858(arg_1291861497));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818593612(chooseThemeApi_1291858064(arg_1291861497));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818593612(chooseFileApi_1291858547(arg_1291861497));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818593612(setGithubAccessTokenApi_1291858624(arg_1291861497));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818593612(reloadConfigApi_1291858686(arg_1291861497));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818593612(logOptionsApi_1291858730(arg_1291861497));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818593612(clearCommandsApi_1291858777(arg_1291861497));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818593612(getAllEditorsApi_1291859058(arg_1291861497));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi222_1291859168(arg_1291861497));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi222_1291859221(arg_1291861497));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi222_1291859275(arg_1291861497));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818593612(scriptRunActionApi_1291859538(arg_1291861497));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818593612(scriptLogApi_1291859574(arg_1291861497));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818593612(addCommandScriptApi_1291859636(arg_1291861497));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818593612(removeCommandApi_1291859712(arg_1291861497));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818593612(getActivePopupApi_1291859757(arg_1291861497));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818593612(getActiveEditorApi_1291859788(arg_1291861497));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818593612(loadCurrentConfigApi_1291859884(arg_1291861497));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818593612(sourceCurrentDocumentApi_1291859951(arg_1291861497));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818593612(getEditorApi_1291859981(arg_1291861497));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818593612(scriptIsTextEditorApi_1291860049(arg_1291861497));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818593612(scriptIsAstEditorApi_1291860118(arg_1291861497));
      break;
    case "scriptIsModelEditor":
    case "script-is-model-editor":
      Temporary1 = some_2818593612(scriptIsModelEditorApi_1291860186(arg_1291861497));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818593612(scriptRunActionForApi_1291860281(arg_1291861497));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818593612(scriptInsertTextIntoApi_1291860351(arg_1291861497));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818593612(scriptTextEditorSelectionApi_1291860421(arg_1291861497));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818593612(scriptSetTextEditorSelectionApi_1291860493(arg_1291861497));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818593612(scriptTextEditorSelectionsApi_1291860571(arg_1291861497));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818593612(scriptSetTextEditorSelectionsApi_1291860639(arg_1291861497));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818593612(scriptGetTextEditorLineApi_1291860715(arg_1291861497));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818593612(scriptGetTextEditorLineCountApi_1291860792(arg_1291861497));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818593612(scriptGetOptionIntApi_1291860847(arg_1291861497));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818593612(scriptGetOptionFloatApi_1291860897(arg_1291861497));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818593612(scriptGetOptionBoolApi_1291861005(arg_1291861497));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818593612(scriptGetOptionStringApi_1291861055(arg_1291861497));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818593612(scriptSetOptionIntApi_1291861136(arg_1291861497));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818593612(scriptSetOptionFloatApi_1291861218(arg_1291861497));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818593612(scriptSetOptionBoolApi_1291861300(arg_1291861497));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818593612(scriptSetOptionStringApi_1291861382(arg_1291861497));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818593612(scriptSetCallbackApi_1291861471(arg_1291861497));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_1291861501 = nimCopy(result_1291861501, Temporary1, NTI2818585760);

  return result_1291861501;

}

function handleAction_1291848870(self_1291848871, action_1291848872, arg_1291848873) {
  var result_1291861731 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848872, NTI33554449), nimCopy(null, arg_1291848873, NTI33554449)])]);
    var args_1291861732 = newJArray_1627390082();
    Label1: {
      var a_1291861733 = null;
      var colontmp__536871079 = null;
      colontmp__536871079 = newStringStream_1660945417(arg_1291848873);
      var p_536871080 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871080[0], colontmp__536871079, [], false);
      try {
      var _ = getTok_1694499270(p_536871080[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871080[0].tok == 1))) break Label4;
            a_1291861733 = parseJson_1627395211(p_536871080[0], false, false, 0);
            add_1627390190(args_1291861732, a_1291861733);
          }
      };
      } finally {
      close_1694498967(p_536871080[0]);
      }
    };
++excHandler;
    try {
    if (handleGlobalAction_2751463463(self_1291848871.scriptContext, action_1291848872, args_1291861732)) {
    result_1291861731 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861738 = [mnewString(0)];
    fmtRes_1291861738[0].push.apply(fmtRes_1291861738[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861738, 0, action_1291848872, []);
    fmtRes_1291861738[0].push.apply(fmtRes_1291861738[0], [32]);;
    formatValue_721420459(fmtRes_1291861738, 0, arg_1291848873, []);
    fmtRes_1291861738[0].push.apply(fmtRes_1291861738[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861738, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861738[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861731 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291861731 = isSome_2818593879(dispatch_1291861499(action_1291848872, args_1291861732));
    break BeforeRet;
  };

  return result_1291861731;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet306[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853195(s_1291853197) {
    var Temporary1;

  var result_1291853198 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853197))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853197 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853198 = Temporary1;

  return result_1291853198;

}

function fromJson_1291853183(a_1291853185, a_1291853185_Idx, b_1291853186, opt_1291853187) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853186, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853186}));
    }
    
    switch (b_1291853186.kind) {
    case 2:
      a_1291853185[a_1291853185_Idx] = chckRange(getBiggestInt_1627390129(b_1291853186, 0), 0, 2);
      break;
    case 4:
      a_1291853185[a_1291853185_Idx] = parseEnum_1291853195(getStr_1627390106(b_1291853186, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853233 = [mnewString(0)];
      fmtRes_1291853233[0].push.apply(fmtRes_1291853233[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853233, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853233[0].push.apply(fmtRes_1291853233[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853233, 0, pretty_1627394477(b_1291853186, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853233[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853298(a_1291853300, a_1291853300_Idx, b_1291853301, opt_1291853302) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853301, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853301}));
    }
    
    a_1291853300[a_1291853300_Idx] = b_1291853301;

  
}

function fromJson_1291853125(a_1291853127, b_1291853128, opt_1291853129) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853128, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853128}));
    }
    
    if (!((b_1291853128.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853128.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853164 = 0;
    var numMatchedHEX60gensym16_1291853165 = 0;
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1291853183(a_1291853127, "kind", HEX5BHEX5D_1627393037(b_1291853128, [107,105,110,100]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [105,100])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1811939890(a_1291853127, "id", HEX5BHEX5D_1627393037(b_1291853128, [105,100]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1811939890(a_1291853127, "name", HEX5BHEX5D_1627393037(b_1291853128, [110,97,109,101]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853164 = addInt(numHEX60gensym16_1291853164, 1);
    if (hasKey_1627393154(b_1291853128, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853165 = addInt(numMatchedHEX60gensym16_1291853165, 1);
    fromJson_1291853298(a_1291853127, "settings", HEX5BHEX5D_1627393037(b_1291853128, [115,101,116,116,105,110,103,115]), opt_1291853129);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
      }
      
    }
    }
    if ((opt_1291853129.allowExtraKeys && opt_1291853129.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853129.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165);
    }
    else {
    if (opt_1291853129.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853128) == numMatchedHEX60gensym16_1291853165);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853128) == numHEX60gensym16_1291853164) && (numHEX60gensym16_1291853164 == numMatchedHEX60gensym16_1291853165));
    }
    }}
    var okHEX60gensym16_1291853321 = Temporary1;
    if (!(okHEX60gensym16_1291853321)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853128)), HEX24_369098760(numHEX60gensym16_1291853164), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853128, 2)]));
    }
    

  
}

function fromJson_1291853097(a_1291853099, a_1291853099_Idx, b_1291853100, opt_1291853101) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853100, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853100}));
    }
    
    if (a_1291853099[a_1291853099_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853100), 0, 2147483647), Temporary1)) { for (var i = a_1291853099[a_1291853099_Idx].length ; i < Temporary1 ; ++i) a_1291853099[a_1291853099_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853099[a_1291853099_Idx].length = Temporary1; };
    Label2: {
      var i_1291853123 = 0;
      var val_1291853124 = null;
      var colontmp__536871226 = [];
      colontmp__536871226 = getElems_1627390175(b_1291853100, []);
      var i_536871227 = 0;
      var L_536871228 = (colontmp__536871226).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871227 < L_536871228)) break Label4;
            i_1291853123 = i_536871227;
            val_1291853124 = colontmp__536871226[chckIndx(i_536871227, 0, (colontmp__536871226).length - 1)];
            fromJson_1291853125(a_1291853099[a_1291853099_Idx][chckIndx(i_1291853123, 0, (a_1291853099[a_1291853099_Idx]).length - 1)], val_1291853124, opt_1291853101);
            i_536871227 = addInt(i_536871227, 1);
            if (!(((colontmp__536871226).length == L_536871228))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853370(a_1291853372, b_1291853373, opt_1291853374) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853373, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853373}));
    }
    
    if (!((b_1291853373.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853373.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853409 = 0;
    var numMatchedHEX60gensym16_1291853410 = 0;
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "filename", HEX5BHEX5D_1627393037(b_1291853373, [102,105,108,101,110,97,109,101]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [97,115,116])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_2818585096(a_1291853372, "ast", HEX5BHEX5D_1627393037(b_1291853373, [97,115,116]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "languageID", HEX5BHEX5D_1627393037(b_1291853373, [108,97,110,103,117,97,103,101,73,68]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_2818585096(a_1291853372, "appFile", HEX5BHEX5D_1627393037(b_1291853373, [97,112,112,70,105,108,101]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853409 = addInt(numHEX60gensym16_1291853409, 1);
    if (hasKey_1627393154(b_1291853373, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853410 = addInt(numMatchedHEX60gensym16_1291853410, 1);
    fromJson_1811939890(a_1291853372, "workspaceId", HEX5BHEX5D_1627393037(b_1291853373, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853374);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
      }
      
    }
    }
    if ((opt_1291853374.allowExtraKeys && opt_1291853374.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853374.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410);
    }
    else {
    if (opt_1291853374.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853373) == numMatchedHEX60gensym16_1291853410);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853373) == numHEX60gensym16_1291853409) && (numHEX60gensym16_1291853409 == numMatchedHEX60gensym16_1291853410));
    }
    }}
    var okHEX60gensym16_1291853529 = Temporary1;
    if (!(okHEX60gensym16_1291853529)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853373)), HEX24_369098760(numHEX60gensym16_1291853409), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853373, 2)]));
    }
    

  
}

function fromJson_1291853342(a_1291853344, a_1291853344_Idx, b_1291853345, opt_1291853346) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853345, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853345}));
    }
    
    if (a_1291853344[a_1291853344_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853345), 0, 2147483647), Temporary1)) { for (var i = a_1291853344[a_1291853344_Idx].length ; i < Temporary1 ; ++i) a_1291853344[a_1291853344_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853344[a_1291853344_Idx].length = Temporary1; };
    Label2: {
      var i_1291853368 = 0;
      var val_1291853369 = null;
      var colontmp__536871231 = [];
      colontmp__536871231 = getElems_1627390175(b_1291853345, []);
      var i_536871232 = 0;
      var L_536871233 = (colontmp__536871231).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871232 < L_536871233)) break Label4;
            i_1291853368 = i_536871232;
            val_1291853369 = colontmp__536871231[chckIndx(i_536871232, 0, (colontmp__536871231).length - 1)];
            fromJson_1291853370(a_1291853344[a_1291853344_Idx][chckIndx(i_1291853368, 0, (a_1291853344[a_1291853344_Idx]).length - 1)], val_1291853369, opt_1291853346);
            i_536871232 = addInt(i_536871232, 1);
            if (!(((colontmp__536871231).length == L_536871233))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852899(a_1291852901, b_1291852902, opt_1291852903) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852902, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852902}));
    }
    
    if (!((b_1291852902.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852902.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852946 = 0;
    var numMatchedHEX60gensym16_1291852947 = 0;
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "theme", HEX5BHEX5D_1627393037(b_1291852902, [116,104,101,109,101]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_2818586485(a_1291852901, "fontSize", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,83,105,122,101]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontRegular", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontBold", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,66,111,108,100]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontItalic", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,73,116,97,108,105,99]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1811939890(a_1291852901, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852902, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1291853097(a_1291852901, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852902, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852946 = addInt(numHEX60gensym16_1291852946, 1);
    if (hasKey_1627393154(b_1291852902, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852947 = addInt(numMatchedHEX60gensym16_1291852947, 1);
    fromJson_1291853342(a_1291852901, "openEditors", HEX5BHEX5D_1627393037(b_1291852902, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852903);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
      }
      
    }
    }
    if ((opt_1291852903.allowExtraKeys && opt_1291852903.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852903.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947);
    }
    else {
    if (opt_1291852903.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852902) == numMatchedHEX60gensym16_1291852947);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852902) == numHEX60gensym16_1291852946) && (numHEX60gensym16_1291852946 == numMatchedHEX60gensym16_1291852947));
    }
    }}
    var okHEX60gensym16_1291853541 = Temporary1;
    if (!(okHEX60gensym16_1291853541)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852902)), HEX24_369098760(numHEX60gensym16_1291852946), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852902, 2)]));
    }
    

  
}

function jsonTo_1291852893(b_1291852895, opt_1291852897) {
  var result_1291852898 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852899(result_1291852898[0], b_1291852895, opt_1291852897);

  return result_1291852898[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871236 = 0;
        colontmp__536871236 = len_1627395282(x_1627395286);
        var i_536871237 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871237 < colontmp__536871236)) break Label3;
              i_1627395293 = i_536871237;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871237 = addInt(i_536871237, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2264924264(path_2264924265) {
  var result_2264924266 = null;

    result_2264924266 = ({m_type: NTI2264924164, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2264924266.path = nimCopy(null, path_2264924265, NTI33554449);
    var fmtRes_2264924274 = [mnewString(0)];
    fmtRes_2264924274[0].push.apply(fmtRes_2264924274[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2264924274, 0, absolutePath_1426063704(path_2264924265, nosgetCurrentDir()), []);
    result_2264924266.name = nimCopy(null, fmtRes_2264924274[0], NTI33554449);

  return result_2264924266;

}

function newWorkspaceFolderLocal_2264924293(settings_2264924294) {
  var result_2264924295 = null;

  BeforeRet: {
    var path_2264924296 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2264924294, [112,97,116,104]), []);
    result_2264924295 = newWorkspaceFolderLocal_2264924264(path_2264924296);
    break BeforeRet;
  };

  return result_2264924295;

}

function newWorkspaceFolderAbsytreeServer_2399144372(settings_2399144373) {
  var result_2399144374 = null;

  BeforeRet: {
    var url_2399144375 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2399144373, [98,97,115,101,85,114,108]), []);
    result_2399144374 = newWorkspaceFolderAbsytreeServer_2399144348(url_2399144375);
    break BeforeRet;
  };

  return result_2399144374;

}

function newWorkspaceFolderGithub_2281703740(settings_2281703741) {
  var result_2281703742 = null;

  BeforeRet: {
    var user_2281703743 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [117,115,101,114]), []);
    var repository_2281703744 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2281703745 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2281703742 = newWorkspaceFolderGithub_2281703680(user_2281703743, repository_2281703744, branchOrHash_2281703745);
    break BeforeRet;
  };

  return result_2281703742;

}

function formatValue_1291853583(result_1291853585, result_1291853585_Idx, value_1291853586, specifier_1291853587) {
    formatValue_721420459(result_1291853585, result_1291853585_Idx, reprEnum(value_1291853586, NTI1291845663), specifier_1291853587);

  
}

function new_1291853620() {
  var result_1291853623 = null;

  BeforeRet: {
    var r_1291853625 = null;
    r_1291853625 = ({m_type: NTI2801795076});
    result_1291853623 = r_1291853625;
    break BeforeRet;
  };

  return result_1291853623;

}

function getWorkspaceFolder_1291851106(self_1291851107, id_1291851108) {
  var result_1291855553 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855557 = null;
      var i_536871240 = 0;
      var L_536871241 = (self_1291851107.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871240 < L_536871241)) break Label3;
            wf_1291855557 = self_1291851107.workspace.folders[chckIndx(i_536871240, 0, (self_1291851107.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820626(wf_1291855557.id, id_1291851108)) {
            result_1291855553 = nimCopy(result_1291855553, some_1291855558(wf_1291855557), NTI2197815306);
            break BeforeRet;
            }
            
            i_536871240 = addInt(i_536871240, 1);
            if (!(((self_1291851107.workspace.folders).length == L_536871241))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855553 = nimCopy(result_1291855553, none_1291855571(), NTI2197815306);
    break BeforeRet;
  };

  return result_1291855553;

}

function newTextDocument_2818579082(filename_2818579083, app_2818579084, workspaceFolder_2818579086) {
  var result_2818579087 = null;

    result_2818579087 = newTextDocument_2818579088(filename_2818579083, [], app_2818579084);
    result_2818579087.workspace = nimCopy(result_2818579087.workspace, workspaceFolder_2818579086, NTI2197815306);
    load_2197815320(result_2818579087, []);

  return result_2818579087;

}

function newEditor_1291851110(backend_1291851111, platform_1291851112) {
    
function HEX3Aanonymous_1291851126(event_1291851144) {
        handleKeyPress_1291851064(self_1291851114, event_1291851144.Field0, event_1291851144.Field1);

      
    }
    
function HEX3Aanonymous_1291851198(event_1291851216) {
        handleKeyRelease_1291851068(self_1291851114, event_1291851216.Field0, event_1291851216.Field1);

      
    }
    
function HEX3Aanonymous_1291851247(event_1291851265) {
        handleRune_1291851072(self_1291851114, event_1291851265.Field0, event_1291851265.Field1);

      
    }
    
function HEX3Aanonymous_1291851296(event_1291851314) {
        handleMousePress_1291851076(self_1291851114, event_1291851314.Field0, event_1291851314.Field1, event_1291851314.Field2);

      
    }
    
function HEX3Aanonymous_1291851368(event_1291851386) {
        handleMouseRelease_1291851081(self_1291851114, event_1291851386.Field0, event_1291851386.Field1, event_1291851386.Field2);

      
    }
    
function HEX3Aanonymous_1291851417(event_1291851435) {
        handleMouseMove_1291851086(self_1291851114, event_1291851435.Field0, event_1291851435.Field1, event_1291851435.Field2, event_1291851435.Field3);

      
    }
    
function HEX3Aanonymous_1291851489(event_1291851507) {
        handleScroll_1291851092(self_1291851114, event_1291851507.Field1, event_1291851507.Field0, event_1291851507.Field2);

      
    }
    
function HEX3Aanonymous_1291851561(event_1291851579) {
        handleDropFile_1291851097(self_1291851114, event_1291851579.Field0, event_1291851579.Field1);

      
    }
    
function HEX3Aanonymous_1291851633() {
        self_1291851114.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852841(actionHEX60gensym73HEX60gensym74_1291852842, argHEX60gensym73HEX60gensym74_1291852843) {
          var Temporary1;

        var result_1291852844 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852829.config.handleActions) {
          var action_1291852845 = nimCopy(null, actionHEX60gensym73HEX60gensym74_1291852842, NTI33554449);
          var arg_1291852846 = nimCopy(null, argHEX60gensym73HEX60gensym74_1291852843, NTI33554449);
          if (handleAction_1291848870(self_1291851114, action_1291852845, arg_1291852846)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym73HEX60gensym74_1291852847 = Temporary1;
          if (handlerHEX60gensym73_1291852829.config.consumeAllActions) {
          result_1291852844 = 3;
          break BeforeRet;
          }
          
          result_1291852844 = responseHEX60gensym73HEX60gensym74_1291852847;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym73_1291852829.config.consumeAllActions) {
          result_1291852844 = 3;
          break BeforeRet;
          }
          else {
            result_1291852844 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852844;

      }
      
function HEX3Aanonymous_1291852849(inputHEX60gensym73HEX60gensym75_1291852850) {
        var result_1291852851 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852829.config.handleInputs) {
          var input_1291852852 = nimCopy(null, inputHEX60gensym73HEX60gensym75_1291852850, NTI33554449);
          result_1291852851 = 1;
          break BeforeRet;
          }
          else {
            result_1291852851 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852851;

      }
      
function HEX3Aanonymous_1291852872(actionHEX60gensym76HEX60gensym77_1291852873, argHEX60gensym76HEX60gensym77_1291852874) {
          var Temporary1;

        var result_1291852875 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852860.config.handleActions) {
          var action_1291852876 = nimCopy(null, actionHEX60gensym76HEX60gensym77_1291852873, NTI33554449);
          var arg_1291852877 = nimCopy(null, argHEX60gensym76HEX60gensym77_1291852874, NTI33554449);
          if (handleAction_1291848870(self_1291851114, action_1291852876, arg_1291852877)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym76HEX60gensym77_1291852878 = Temporary1;
          if (handlerHEX60gensym76_1291852860.config.consumeAllActions) {
          result_1291852875 = 3;
          break BeforeRet;
          }
          
          result_1291852875 = responseHEX60gensym76HEX60gensym77_1291852878;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym76_1291852860.config.consumeAllActions) {
          result_1291852875 = 3;
          break BeforeRet;
          }
          else {
            result_1291852875 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852875;

      }
      
function HEX3Aanonymous_1291852880(inputHEX60gensym76HEX60gensym78_1291852881) {
        var result_1291852882 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852860.config.handleInputs) {
          var input_1291852883 = nimCopy(null, inputHEX60gensym76HEX60gensym78_1291852881, NTI33554449);
          result_1291852882 = 1;
          break BeforeRet;
          }
          else {
            result_1291852882 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852882;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
              var Temporary20;
                var Temporary22;

  var result_1291851113 = null;

  BeforeRet: {
    var self_1291851114 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: 0.0, timer: 0.0, frameTimer: 0.0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851114 = createWithPrototype(editor_prototype, self_1291851114);
    gEditor = self_1291851114;
    self_1291851114.platform = platform_1291851112;
    self_1291851114.backend = backend_1291851111;
    self_1291851114.statusBarOnTop = false;
    var _ = subscribe_1291851159(platform_1291851112.onKeyPress, HEX3Aanonymous_1291851126);
    var _ = subscribe_1291851159(platform_1291851112.onKeyRelease, HEX3Aanonymous_1291851198);
    var _ = subscribe_1291851159(platform_1291851112.onRune, HEX3Aanonymous_1291851247);
    var _ = subscribe_1291851329(platform_1291851112.onMousePress, HEX3Aanonymous_1291851296);
    var _ = subscribe_1291851329(platform_1291851112.onMouseRelease, HEX3Aanonymous_1291851368);
    var _ = subscribe_1291851450(platform_1291851112.onMouseMove, HEX3Aanonymous_1291851417);
    var _ = subscribe_1291851522(platform_1291851112.onScroll, HEX3Aanonymous_1291851489);
    var _ = subscribe_1291851594(platform_1291851112.onDropFile, HEX3Aanonymous_1291851561);
    var _ = subscribe_1291851666(platform_1291851112.onCloseRequested, HEX3Aanonymous_1291851633);
    self_1291851114.timer = startTimer_2080374869();
    self_1291851114.frameTimer = startTimer_2080374869();
    self_1291851114.layout = {m_type: NTI1291845643};
    self_1291851114.layout_props = {props: toTable_1291851676([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2768240776(self_1291851114.platform, 20.0);
    self_1291851114.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851114.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851114.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851114.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851114.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2969568641, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI3254779983, editor: null, document: null, modeEventHandler: null, currentMode: [], nodeToCell: ({data: [], counter: 0}), logicalLines: [], cellWidgetContext: null, cursor: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), useDefaultCellBuilder: false, scrollOffset: 0.0, previousBaseIndex: [], lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849426);
    self_1291851114.workspace = ({folders: []});
    self_1291851114.theme = defaultTheme_2516586063();
    setTheme_1291851004(self_1291851114, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851114.currentView = 0;
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851114.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym73_1291852829 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym73_1291852829.config = getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]);
      handlerHEX60gensym73_1291852829.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851114, [101,100,105,116,111,114]));
      handlerHEX60gensym73_1291852829.handleAction = HEX3Aanonymous_1291852841;
      handlerHEX60gensym73_1291852829.handleInput = HEX3Aanonymous_1291852849;
    };
    self_1291851114.eventHandler = handlerHEX60gensym73_1291852829;
    Label2: {
      var handlerHEX60gensym76_1291852860 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym76_1291852860.config = getEventHandlerConfig_1291849162(self_1291851114, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym76_1291852860.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851114, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym76_1291852860.handleAction = HEX3Aanonymous_1291852872;
      handlerHEX60gensym76_1291852860.handleInput = HEX3Aanonymous_1291852880;
    };
    self_1291851114.commandLineEventHandler = handlerHEX60gensym76_1291852860;
    self_1291851114.commandLineMode = false;
    self_1291851114.commandLineTextEditor = newTextEditor_2818594009(newTextDocument_2818579088([], [], false), self_1291851114);
    self_1291851114.commandLineTextEditor.renderHeader = false;
    self_1291851114.commandLineTextEditor.lineNumbers = nimCopy(self_1291851114.commandLineTextEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    getCommandLineTextEditor_1291851061(self_1291851114).hideCursorWhenInactive = true;
    var state_1291852892 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852892 = nimCopy(state_1291852892, jsonTo_1291852893(parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851004(self_1291851114, state_1291852892.theme);
    self_1291851114.loadedFontSize = state_1291852892.fontSize;
    fontSizeHEX3D_2768240776(self_1291851114.platform, state_1291852892.fontSize);
    if ((0 < (state_1291852892.fontRegular).length)) {
    self_1291851114.fontRegular = nimCopy(null, state_1291852892.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontBold).length)) {
    self_1291851114.fontBold = nimCopy(null, state_1291852892.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontItalic).length)) {
    self_1291851114.fontItalic = nimCopy(null, state_1291852892.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852892.fontBoldItalic).length)) {
    self_1291851114.fontBoldItalic = nimCopy(null, state_1291852892.fontBoldItalic, NTI33554449);
    }
    
    self_1291851114.options = parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853549 = [mnewString(0)];
    fmtRes_1291853549[0].push.apply(fmtRes_1291853549[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853549, 0, pretty_1627394477(self_1291851114.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853549[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853554 = [mnewString(0)];
    fmtRes_1291853554[0].push.apply(fmtRes_1291853554[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853554, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853554[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851114, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853577 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870985 = 0;
      var L_536870986 = (state_1291852892.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870985 < L_536870986)) break Label6;
            wf_1291853577 = state_1291852892.workspaceFolders[chckIndx(i_536870985, 0, (state_1291852892.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853577.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2264924293(wf_1291853577.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2399144372(wf_1291853577.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2281703740(wf_1291853577.settings);
                break;
              default: 
                var fmtRes_1291853582 = [mnewString(0)];
                fmtRes_1291853582[0].push.apply(fmtRes_1291853582[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853583(fmtRes_1291853582, 0, wf_1291853577.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853582[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853591 = Temporary8;
              folder_1291853591.id = nimCopy(folder_1291853591.id, parseId_2046820640(wf_1291853577.id), NTI2046820355);
              folder_1291853591.name = nimCopy(null, wf_1291853577.name, NTI33554449);
              if (addWorkspaceFolder_1291851103(self_1291851114, folder_1291853591)) {
              var fmtRes_1291853596 = [mnewString(0)];
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853596, 0, folder_1291853591.name, []);
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [32,40]);;
              formatValue_3036676344(fmtRes_1291853596, 0, folder_1291853591.id, []);
              fmtRes_1291853596[0].push.apply(fmtRes_1291853596[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853596[0], NTI33554449)]);
              }
              
            };
            i_536870985 = addInt(i_536870985, 1);
            if (!(((state_1291852892.workspaceFolders).length == L_536870986))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853606 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853611 = HEX7BHEX7D_1627393316(self_1291851114.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853611 == null))) {
    Label10: {
      var sp_1291853615 = null;
      if (!((searchPathsJson_1291853611.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853611.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870995 = null;
        var colontmp__536870996 = [];
        var Temporary12 = searchPathsJson_1291853611;
        if (ConstSet307[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870996 = Temporary12.elems;
        var i_536870997 = 0;
        var L_536870998 = (colontmp__536870996).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870997 < L_536870998)) break Label14;
              i_536870995 = colontmp__536870996[chckIndx(i_536870997, 0, (colontmp__536870996).length - 1)];
              sp_1291853615 = i_536870995;
              searchPaths_1291853606.push(getStr_1627390106(sp_1291853615, []));;
              i_536870997 = addInt(i_536870997, 1);
              if (!(((colontmp__536870996).length == L_536870998))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851114.scriptContext = new_1291853620();
    init_2751463438(self_1291851114.scriptContext, []);
    var _ = false;
    self_1291851114.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853656 = [mnewString(0)];
    fmtRes_1291853656[0].push.apply(fmtRes_1291853656[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853656, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853656[0], 10);;
    formatValue_721420459(fmtRes_1291853656, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853656[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851114, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853679 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871002 = 0;
      var L_536871003 = (state_1291852892.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871002 < L_536871003)) break Label17;
            editorState_1291853679 = state_1291852892.openEditors[chckIndx(i_536871002, 0, (state_1291852892.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853680 = getWorkspaceFolder_1291851106(self_1291851114, parseId_2046820640(editorState_1291853679.workspaceId));
              if (editorState_1291853679.ast) {
              Temporary19 = newAstDocument_2969571554(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
              }
              else {
              if (nsuEndsWith(editorState_1291853679.filename, [46,97,109])) {
++excHandler;
              try {
              Temporary20 = newModelDocument_3254780191(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              var fmtRes_1291853685 = [mnewString(0)];
              fmtRes_1291853685[0].push.apply(fmtRes_1291853685[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
              formatValue_721420459(fmtRes_1291853685, 0, editorState_1291853679.filename, []);
              fmtRes_1291853685[0].push.apply(fmtRes_1291853685[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
              formatValue_721420459(fmtRes_1291853685, 0, getCurrentExceptionMsg_33556469(), []);
              log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853685[0], NTI33554449)]);
              break Label18;
              lastJSError = prevJSError;
              } finally {
              }
              Temporary19 = Temporary20;
              }
              else {
++excHandler;
                try {
                Temporary22 = newTextDocument_2818579082(editorState_1291853679.filename, editorState_1291853679.appFile, workspaceFolder_1291853680);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853690 = [mnewString(0)];
                fmtRes_1291853690[0].push.apply(fmtRes_1291853690[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853690, 0, editorState_1291853679.filename, []);
                fmtRes_1291853690[0].push.apply(fmtRes_1291853690[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853690, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853690[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary22;
              }
              }
              var document_1291853691 = Temporary19;
              createView_1291848958(self_1291851114, document_1291853691);
            };
            i_536871002 = addInt(i_536871002, 1);
            if (!(((state_1291852892.openEditors).length == L_536871003))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851113 = self_1291851114;
    break BeforeRet;
  };

  return result_1291851113;

}

function fromJsonHook_2516583208(color_2516583209, jsonNode_2516583210) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2516583210.kind == 0)) {
    color_2516583209 = nimCopy(color_2516583209, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2516583210;
    if (ConstSet309[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2516583209 = nimCopy(color_2516583209, parseHexVar_2516582448(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2516583240(a_2516583242, b_2516583243, opt_2516583244) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583243, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2516583243}));
    }
    
    fromJsonHook_2516583208(a_2516583242, b_2516583243);

  
}

function jsonTo_2516583234(b_2516583236, opt_2516583238) {
  var result_2516583239 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2516583240(result_2516583239[0], b_2516583236, opt_2516583238);

  return result_2516583239[0];

}

function hasKey_2516582658(t_2516582661, key_2516582662) {
  var result_2516582663 = false;

    var hc_2516582664 = [0];
    result_2516582663 = (0 <= rawGet_2516582665(t_2516582661, key_2516582662, hc_2516582664, 0));

  return result_2516582663;

}

function contains_2516582652(t_2516582655, key_2516582656) {
  var result_2516582657 = false;

  BeforeRet: {
    result_2516582657 = hasKey_2516582658(t_2516582655, key_2516582656);
    break BeforeRet;
  };

  return result_2516582657;

}

function none_2516583264() {
  var result_2516583271 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2516583271;

}

function HEX5BHEX5D_2516582957(t_2516582960, key_2516582961) {
  var result_2516582962 = null;

    var hcHEX60gensym22_2516582963 = [0];
    var indexHEX60gensym22_2516582970 = rawGet_2516582665(t_2516582960, key_2516582961, hcHEX60gensym22_2516582963, 0);
    if ((0 <= indexHEX60gensym22_2516582970)) {
    result_2516582962 = t_2516582960.data[chckIndx(indexHEX60gensym22_2516582970, 0, (t_2516582960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2516582961);
    }
    

  return result_2516582962;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2516583215(style_2516583216, jsonNode_2516583217) {
    var Temporary1;

    style_2516583216 = nimCopy(style_2516583216, ConstSet314, NTI2516582915);
    var Temporary1 = jsonNode_2516583217;
    if (ConstSet315[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2516583218 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2516583218, [105,116,97,108,105,99])) {
    style_2516583216[0] = true;
    }
    
    if (contains_855639877(text_2516583218, [98,111,108,100])) {
    style_2516583216[2] = true;
    }
    
    if (contains_855639877(text_2516583218, [117,110,100,101,114,108,105,110,101])) {
    style_2516583216[1] = true;
    }
    

  
}

function fromJson_2516583278(a_2516583280, b_2516583281, opt_2516583282) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583281, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2516583281}));
    }
    
    fromJsonHook_2516583215(a_2516583280, b_2516583281);

  
}

function jsonTo_2516583272(b_2516583274, opt_2516583276) {
  var result_2516583277 = [{}];

    fromJson_2516583278(result_2516583277[0], b_2516583274, opt_2516583276);

  return result_2516583277[0];

}

function jsonToTheme_2516583298(json_2516583299, opt_2516583300) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2516583301 = null;

    result_2516583301 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2516583301.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2516583299, [116,121,112,101])) {
    result_2516583301.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2516583301.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,115])) {
    Label1: {
      var key_2516583321 = [];
      var value_2516583322 = null;
      var colontmp__536871244 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,115]);
      if (ConstSet308[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871244 = nimCopy(colontmp__536871244, Temporary2.fields, NTI1627389966);
      var L_536871245 = len_1627392114(colontmp__536871244);
      if ((0 < colontmp__536871244.counter)) {
      var h_536871246 = colontmp__536871244.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871246)) break Label4;
            var nxt_536871248 = colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field0)) {
            var colontmp__536871250 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871244.data[chckIndx(h_536871246, 0, (colontmp__536871244.data).length - 1)].Field3}, NTI1627391161);
            key_2516583321 = colontmp__536871250["Field0"];
            value_2516583322 = colontmp__536871250["Field1"];
            HEX5BHEX5DHEX3D_2516583368(result_2516583301.colors, key_2516583321, jsonTo_2516583234(value_2516583322, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871244) == L_536871245))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871246 = nxt_536871248;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2516584633 = null;
      var colontmp__536871261 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet310[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871261 = Temporary6.elems;
      var i_536871262 = 0;
      var L_536871263 = (colontmp__536871261).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871262 < L_536871263)) break Label8;
            item_2516584633 = colontmp__536871261[chckIndx(i_536871262, 0, (colontmp__536871261).length - 1)];
            var scopes_2516584638 = [];
            if (hasKey_1627393154(item_2516584633, [115,99,111,112,101])) {
            var scope_2516584639 = HEX5BHEX5D_1627393037(item_2516584633, [115,99,111,112,101]);
            if ((scope_2516584639.kind == 4)) {
            var Temporary9 = scope_2516584639;
            if (ConstSet311[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2516584638.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2516584651 = null;
                var colontmp__536871253 = [];
                var Temporary12 = scope_2516584639;
                if (ConstSet312[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871253 = Temporary12.elems;
                var i_536871254 = 0;
                var L_536871255 = (colontmp__536871253).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871254 < L_536871255)) break Label14;
                      scopeName_2516584651 = colontmp__536871253[chckIndx(i_536871254, 0, (colontmp__536871253).length - 1)];
                      var Temporary15 = scopeName_2516584651;
                      if (ConstSet313[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2516584638.push(Temporary16);;
                      i_536871254 = addInt(i_536871254, 1);
                      if (!(((colontmp__536871253).length == L_536871255))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2516584638.push([46]);;
            }
            
            var settings_2516584660 = HEX5BHEX5D_1627393037(item_2516584633, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2516584664 = [];
              var i_536871258 = 0;
              var L_536871259 = (scopes_2516584638).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871258 < L_536871259)) break Label19;
                    scope_2516584664 = scopes_2516584638[chckIndx(i_536871258, 0, (scopes_2516584638).length - 1)];
                    if (!(contains_2516582652(result_2516583301.tokenColors, scope_2516584664))) {
                    HEX5BHEX5DHEX3D_2516584766(result_2516583301.tokenColors, scope_2516584664, {foreground: none_2516583264(), background: none_2516583264(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle, jsonTo_2516583272(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2516582423);
                    }
                    
                    i_536871258 = addInt(i_536871258, 1);
                    if (!(((scopes_2516584638).length == L_536871259))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871262 = addInt(i_536871262, 1);
            if (!(((colontmp__536871261).length == L_536871263))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2516583301;

}

function some_2516586018(val_2516586020) {
  var result_2516586021 = ({val: null});

    if (!(!((val_2516586020 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2516586021.val = val_2516586020;

  return result_2516586021;

}

function none_2516586043() {
  var result_2516586049 = ({val: null});

  return result_2516586049;

}

function loadFromString_2516586008(input_2516586009, path_2516586010) {
  var result_2516586015 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2516586016 = parseJson_1627395313(input_2516586009);
    var newTheme_2516586017 = jsonToTheme_2516583298(json_2516586016, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2516586017.path = nimCopy(null, path_2516586010, NTI33554449);
    result_2516586015 = nimCopy(result_2516586015, some_2516586018(newTheme_2516586017), NTI2516584388);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2516586036 = [mnewString(0)];
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, path_2516586010, []);
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [58,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586036[0], NTI33554449)]);
    var fmtRes_2516586042 = [mnewString(0)];
    formatValue_721420459(fmtRes_2516586042, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586042[0], NTI33554449)]);
    result_2516586015 = nimCopy(result_2516586015, none_2516586043(), NTI2516584388);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2516586015;

}
  var Temporary278;
var rend_536870947 = [new_536870929()];
init_2768240764(rend_536870947[0]);
var initializedEditor_536870948 = [false];
var ed_536870949 = [newEditor_1291851110(2, rend_536870947[0])];
  var oHEX60gensym0_536870953 = loadFromString_2516586008(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851014(oHEX60gensym0_536870953)) Temporary278 = false; else {    var theme_536870976 = get_1291851034(oHEX60gensym0_536870953);
    Temporary278 = true;  }if (Temporary278) {
ed_536870949[0].theme = theme_536870976;
}

setLayout_1291857012(ed_536870949[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870977 = [0.0];
var frameIndex_536870978 = [0];
var hasRequestedRerender_536870979 = [false];
var isRenderInProgress_536870980 = [false];

function add_2785018068(self_2785018069, child_2785018070) {
    child_2785018070.parent = self_2785018069;
    self_2785018069.children.push(child_2785018070);;

  
}

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function setLen_2785018061(self_2785018062, len_2785018063) {
    if (self_2785018062.children.length < chckRange(len_2785018063, 0, 2147483647)) { for (var i = self_2785018062.children.length ; i < chckRange(len_2785018063, 0, 2147483647) ; ++i) self_2785018062.children.push(null); }
               else { self_2785018062.children.length = chckRange(len_2785018063, 0, 2147483647); };

  
}

function rawGet_3388997778(t_3388997781, key_3388997782, hc_3388997783, hc_3388997783_Idx) {
  var result_3388997784 = 0;

  BeforeRet: {
    hc_3388997783[hc_3388997783_Idx] = hash_1325400236(key_3388997782);
    if ((hc_3388997783[hc_3388997783_Idx] == 0)) {
    hc_3388997783[hc_3388997783_Idx] = 314159265;
    }
    
    if (((t_3388997781.data).length == 0)) {
    result_3388997784 = -1;
    break BeforeRet;
    }
    
    var h_3388997839 = (hc_3388997783[hc_3388997783_Idx] & (t_3388997781.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field0)) break Label2;
          if (((t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field0 == hc_3388997783[hc_3388997783_Idx]) && (t_3388997781.data[chckIndx(h_3388997839, 0, (t_3388997781.data).length - 1)].Field1 == key_3388997782))) {
          result_3388997784 = h_3388997839;
          break BeforeRet;
          }
          
          h_3388997839 = nextTry_1308622883(h_3388997839, (t_3388997781.data).length - 1);
        }
    };
    result_3388997784 = subInt(-1, h_3388997839);
  };

  return result_3388997784;

}

function hasKey_3388997771(t_3388997774, key_3388997775) {
  var result_3388997776 = false;

    var hc_3388997777 = [0];
    result_3388997776 = (0 <= rawGet_3388997778(t_3388997774, key_3388997775, hc_3388997777, 0));

  return result_3388997776;

}

function contains_3388997765(t_3388997768, key_3388997769) {
  var result_3388997770 = false;

  BeforeRet: {
    result_3388997770 = hasKey_3388997771(t_3388997768, key_3388997769);
    break BeforeRet;
  };

  return result_3388997770;

}

function HEX5BHEX5D_3388998064(t_3388998067, key_3388998068) {
  var result_3388998069 = null;
  var result_3388998069_Idx = 0;

    var hcHEX60gensym22_3388998070 = [0];
    var indexHEX60gensym22_3388998077 = rawGet_3388997778(t_3388998067, key_3388998068, hcHEX60gensym22_3388998070, 0);
    if ((0 <= indexHEX60gensym22_3388998077)) {
    result_3388998069 = t_3388998067.data[chckIndx(indexHEX60gensym22_3388998077, 0, (t_3388998067.data).length - 1)]; result_3388998069_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3388998068);
    }
    

  return [result_3388998069, result_3388998069_Idx];

}

function mustRehash_3388998356(t_3388998358) {
  var result_3388998359 = false;

    if (!((t_3388998358.counter < (t_3388998358.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3388998359 = ((mulInt((t_3388998358.data).length, 2) < mulInt(t_3388998358.counter, 3)) || (subInt((t_3388998358.data).length, t_3388998358.counter) < 4));

  return result_3388998359;

}

function rawInsert_3388998805(t_3388998809, data_3388998810, data_3388998810_Idx, key_3388998811, val_3388998812, hc_3388998813, h_3388998814) {
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field1 = key_3388998811;
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field2 = val_3388998812;
    data_3388998810[data_3388998810_Idx][chckIndx(h_3388998814, 0, (data_3388998810[data_3388998810_Idx]).length - 1)].Field0 = hc_3388998813;

  
}

function enlarge_3388998511(t_3388998514) {
    var n_3388998517 = [];
    n_3388998517 = new Array(chckRange(mulInt((t_3388998514.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3388998514.data).length, 2), 0, 2147483647) ; ++i) { n_3388998517[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3388998514.data; t_3388998514.data = n_3388998517; n_3388998517 = Temporary1;    Label2: {
      var i_3388998581 = 0;
      var colontmp__536871862 = 0;
      colontmp__536871862 = (n_3388998517).length - 1;
      var res_536871863 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871863 <= colontmp__536871862)) break Label4;
            i_3388998581 = res_536871863;
            var eh_3388998635 = n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field0;
            if (isFilled_1308622880(eh_3388998635)) {
            var j_3388998639 = (eh_3388998635 & (t_3388998514.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3388998514.data[chckIndx(j_3388998639, 0, (t_3388998514.data).length - 1)].Field0)) break Label6;
                  j_3388998639 = nextTry_1308622883(j_3388998639, (t_3388998514.data).length - 1);
                }
            };
            rawInsert_3388998805(t_3388998514, t_3388998514, "data", n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field1, n_3388998517[chckIndx(i_3388998581, 0, (n_3388998517).length - 1)].Field2, eh_3388998635, j_3388998639);
            }
            
            res_536871863 = addInt(res_536871863, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3388998974(t_3388998977, key_3388998978, hc_3388998979) {
  var result_3388998980 = 0;

  BeforeRet: {
    if (((t_3388998977.data).length == 0)) {
    result_3388998980 = -1;
    break BeforeRet;
    }
    
    var h_3388999031 = (hc_3388998979 & (t_3388998977.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field0)) break Label2;
          if (((t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field0 == hc_3388998979) && (t_3388998977.data[chckIndx(h_3388999031, 0, (t_3388998977.data).length - 1)].Field1 == key_3388998978))) {
          result_3388998980 = h_3388999031;
          break BeforeRet;
          }
          
          h_3388999031 = nextTry_1308622883(h_3388999031, (t_3388998977.data).length - 1);
        }
    };
    result_3388998980 = subInt(-1, h_3388999031);
  };

  return result_3388998980;

}

function HEX5BHEX5DHEX3D_3388998183(t_3388998186, key_3388998187, val_3388998188) {
    if (((t_3388998186.data).length == 0)) {
    var correctSizeHEX60gensym5_3388998237 = slotsNeeded_1308622891(32);
    t_3388998186.counter = 0;
    t_3388998186.data = new Array(chckRange(correctSizeHEX60gensym5_3388998237, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3388998237, 0, 2147483647) ; ++i) { t_3388998186.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3388998242 = [0];
    var index_3388998249 = rawGet_3388997778(t_3388998186, key_3388998187, hc_3388998242, 0);
    if ((0 <= index_3388998249)) {
    t_3388998186.data[chckIndx(index_3388998249, 0, (t_3388998186.data).length - 1)].Field2 = val_3388998188;
    }
    else {
      if (((t_3388998186.data).length == 0)) {
      var correctSizeHEX60gensym8_3388998351 = slotsNeeded_1308622891(32);
      t_3388998186.counter = 0;
      t_3388998186.data = new Array(chckRange(correctSizeHEX60gensym8_3388998351, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3388998351, 0, 2147483647) ; ++i) { t_3388998186.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3388998356(t_3388998186)) {
      enlarge_3388998511(t_3388998186);
      index_3388998249 = rawGetKnownHC_3388998974(t_3388998186, key_3388998187, hc_3388998242[0]);
      }
      
      index_3388998249 = subInt(-1, index_3388998249);
      rawInsert_3388998805(t_3388998186, t_3388998186, "data", key_3388998187, val_3388998188, hc_3388998242[0], index_3388998249);
      t_3388998186.counter = addInt(t_3388998186.counter, 1);
    }
    

  
}

function activeHEX3D_2415919215(self_2415919216, newActive_2415919217) {
    if (!((newActive_2415919217 == self_2415919216.active))) {
    markDirty_2415919143(self_2415919216);
    }
    
    self_2415919216.active = newActive_2415919217;

  
}

function HEX5BHEX5D_3388999224(s_3388999228, x_3388999229) {
  var result_3388999230 = [];

    var a_3388999232 = x_3388999229.a;
    var L_3388999238 = addInt(subInt(subInt((s_3388999228).length, x_3388999229.b), a_3388999232), 1);
    result_3388999230 = new Array(chckRange(L_3388999238, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3388999238, 0, 2147483647) ; ++i) { result_3388999230[i] = null; }    Label1: {
      var i_3388999247 = 0;
      var i_536871867 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871867 < L_3388999238)) break Label3;
            i_3388999247 = i_536871867;
            result_3388999230[chckIndx(i_3388999247, 0, (result_3388999230).length - 1)] = s_3388999228[chckIndx(addInt(i_3388999247, a_3388999232), 0, (s_3388999228).length - 1)];
            i_536871867 = addInt(i_536871867, 1);
          }
      };
    };

  return result_3388999230;

}

function find_3388999452(a_3388999455, item_3388999456) {
  var result_3388999457 = 0;

  BeforeRet: {
    result_3388999457 = 0;
    Label1: {
      var i_3388999470 = null;
      var i_536871871 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871871 < (a_3388999455).length)) break Label3;
            i_3388999470 = a_3388999455[chckIndx(i_536871871, 0, (a_3388999455).length - 1)];
            if ((i_3388999470 == item_3388999456)) {
            break BeforeRet;
            }
            
            result_3388999457 = addInt(result_3388999457, 1);
            i_536871871 = addInt(i_536871871, 1);
          }
      };
    };
    result_3388999457 = -1;
  };

  return result_3388999457;

}

function contains_3388999447(a_3388999449, item_3388999450) {
  var result_3388999451 = false;

  BeforeRet: {
    result_3388999451 = (0 <= find_3388999452(a_3388999449, item_3388999450));
    break BeforeRet;
  };

  return result_3388999451;

}

function contains_2130706618(a_2130706619, b_2130706620) {
  var result_2130706621 = false;

  BeforeRet: {
    result_2130706621 = ((((a_2130706619.x <= b_2130706620.x) && ((b_2130706620.x + b_2130706620.w) <= (a_2130706619.x + a_2130706619.w))) && (a_2130706619.y <= b_2130706620.y)) && ((b_2130706620.y + b_2130706620.h) <= (a_2130706619.y + a_2130706619.h)));
    break BeforeRet;
  };

  return result_2130706621;

}

function invalidate_2785018426(self_2785018427, currentIndex_2785018428, rect_2785018429) {
  BeforeRet: {
    if ((!(intersects_2130706609(self_2785018427.lastBounds, rect_2785018429)) || ((currentIndex_2785018428 <= self_2785018427.lastInvalidation) && contains_2130706618(self_2785018427.lastInvalidationRect, rect_2785018429)))) {
    break BeforeRet;
    }
    
    self_2785018427.lastInvalidationRect = nimCopy(self_2785018427.lastInvalidationRect, and_2147483732(rect_2785018429, self_2785018427.lastBounds), NTI2147483653);
    self_2785018427.lastInvalidation = currentIndex_2785018428;
    if (isObj(self_2785018427.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018439 = null;
      var colontmp__536871874 = [];
      colontmp__536871874 = self_2785018427.children;
      var i_536871875 = 0;
      var L_536871876 = (colontmp__536871874).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871875 < L_536871876)) break Label3;
            c_2785018439 = colontmp__536871874[chckIndx(i_536871875, 0, (colontmp__536871874).length - 1)];
            invalidate_2785018426(c_2785018439, currentIndex_2785018428, self_2785018427.lastInvalidationRect);
            i_536871875 = addInt(i_536871875, 1);
            if (!(((colontmp__536871874).length == L_536871876))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018427.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018449 = null;
      var colontmp__536871879 = [];
      colontmp__536871879 = self_2785018427.children;
      var i_536871880 = 0;
      var L_536871881 = (colontmp__536871879).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871880 < L_536871881)) break Label6;
            c_2785018449 = colontmp__536871879[chckIndx(i_536871880, 0, (colontmp__536871879).length - 1)];
            invalidate_2785018426(c_2785018449, currentIndex_2785018428, self_2785018427.lastInvalidationRect);
            i_536871880 = addInt(i_536871880, 1);
            if (!(((colontmp__536871879).length == L_536871881))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018427.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018459 = null;
      var colontmp__536871884 = [];
      colontmp__536871884 = self_2785018427.children;
      var i_536871885 = 0;
      var L_536871886 = (colontmp__536871884).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871885 < L_536871886)) break Label9;
            c_2785018459 = colontmp__536871884[chckIndx(i_536871885, 0, (colontmp__536871884).length - 1)];
            invalidate_2785018426(c_2785018459, currentIndex_2785018428, self_2785018427.lastInvalidationRect);
            i_536871885 = addInt(i_536871885, 1);
            if (!(((colontmp__536871884).length == L_536871886))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018427.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018469 = null;
      var colontmp__536871889 = [];
      colontmp__536871889 = self_2785018427.children;
      var i_536871890 = 0;
      var L_536871891 = (colontmp__536871889).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871890 < L_536871891)) break Label12;
            c_2785018469 = colontmp__536871889[chckIndx(i_536871890, 0, (colontmp__536871889).length - 1)];
            invalidate_2785018426(c_2785018469, currentIndex_2785018428, self_2785018427.lastInvalidationRect);
            i_536871890 = addInt(i_536871890, 1);
            if (!(((colontmp__536871889).length == L_536871891))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function len_2785018025(self_2785018026) {
  var result_2785018027 = 0;

    result_2785018027 = (self_2785018026.children).length;

  return result_2785018027;

}

function HEX5BHEX5D_2785018021(self_2785018022, index_2785018023) {
  var result_2785018024 = null;

    result_2785018024 = self_2785018022.children[chckIndx(index_2785018023, 0, (self_2785018022.children).length - 1)];

  return result_2785018024;

}

function hasKey_3221226060(t_3221226063, key_3221226064) {
  var result_3221226065 = false;

    var hc_3221226066 = [0];
    result_3221226065 = (0 <= rawGet_2516583429(t_3221226063, key_3221226064, hc_3221226066, 0));

  return result_3221226065;

}

function contains_3221226054(t_3221226057, key_3221226058) {
  var result_3221226059 = false;

  BeforeRet: {
    result_3221226059 = hasKey_3221226060(t_3221226057, key_3221226058);
    break BeforeRet;
  };

  return result_3221226059;

}

function HEX5BHEX5D_3221226144(t_3221226147, key_3221226148) {
  var result_3221226149 = null;

    var hcHEX60gensym22_3221226150 = [0];
    var indexHEX60gensym22_3221226157 = rawGet_2516583429(t_3221226147, key_3221226148, hcHEX60gensym22_3221226150, 0);
    if ((0 <= indexHEX60gensym22_3221226157)) {
    result_3221226149 = t_3221226147.data[chckIndx(indexHEX60gensym22_3221226157, 0, (t_3221226147.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3221226148);
    }
    

  return result_3221226149;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871898 = 0;
      var colontmp__536871899 = 0;
      colontmp__536871898 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871899 = start_855639774;
      var res_536871900 = colontmp__536871898;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871899 <= res_536871900)) break Label5;
            i_855639789 = res_536871900;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871895 = 0;
              colontmp__536871895 = subInt((sub_855639773).length, 1);
              var res_536871896 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871896 <= colontmp__536871895)) break Label8;
                    j_855639794 = res_536871896;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871896 = addInt(res_536871896, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871900 = subInt(res_536871900, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3439329461(table_3439329463, key_3439329464, default_3439329465) {
  var result_3439329466 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3221226054(table_3439329463, key_3439329464)) {
    result_3439329466 = nimCopy(result_3439329466, HEX5BHEX5D_3221226144(table_3439329463, key_3439329464), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3439329572 = nsuRFindStr(key_3439329464, [46], 0, -1);
    if (!((index_3439329572 == -1))) {
    result_3439329466 = nimCopy(result_3439329466, getCascading_3439329461(table_3439329463, HEX5BHEX5D_855639291(key_3439329464, HEX2EHEX2E_805306418(0, subInt(index_3439329572, 1))), default_3439329465), NTI2550136835);
    break BeforeRet;
    }
    
    result_3439329466 = nimCopy(result_3439329466, default_3439329465, NTI2550136835);
    break BeforeRet;
  };

  return result_3439329466;

}

function color_3439329450(theme_3439329452, name_3439329453, default_3439329454) {
  var result_3439329455 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3439329455 = nimCopy(result_3439329455, getCascading_3439329461(theme_3439329452.colors, name_3439329453, color_2634022945(default_3439329454)), NTI2550136835);
    break BeforeRet;
  };

  return result_3439329455;

}

function HEX3DHEX3D_2785018339(x_2785018341, y_2785018342) {
  var result_2785018343 = false;

  BeforeRet: {
    if (!((x_2785018341.r == y_2785018342.r))) {
    result_2785018343 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018341.g == y_2785018342.g))) {
    result_2785018343 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018341.b == y_2785018342.b))) {
    result_2785018343 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018341.a == y_2785018342.a))) {
    result_2785018343 = false;
    break BeforeRet;
    }
    
    result_2785018343 = true;
    break BeforeRet;
  };

  return result_2785018343;

}

function updateForegroundColor_2785018335(self_2785018336, color_2785018337, frameIndex_2785018338) {
    if (!(HEX3DHEX3D_2785018339(self_2785018336.foregroundColor, color_2785018337))) {
    self_2785018336.lastHierarchyChange = nimMax(self_2785018336.lastHierarchyChange, frameIndex_2785018338);
    }
    
    self_2785018336.foregroundColor = nimCopy(self_2785018336.foregroundColor, color_2785018337, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2785018357(self_2785018358, currentIndex_2785018359) {
    if (isObj(self_2785018358.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018369 = null;
      var colontmp__536871903 = [];
      colontmp__536871903 = self_2785018358.children;
      var i_536871904 = 0;
      var L_536871905 = (colontmp__536871903).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871904 < L_536871905)) break Label3;
            c_2785018369 = colontmp__536871903[chckIndx(i_536871904, 0, (colontmp__536871903).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018357(c_2785018369, currentIndex_2785018359);
            self_2785018358.lastHierarchyChange = nimMax(nimMax(self_2785018358.lastHierarchyChange, c_2785018369.lastHierarchyChange), c_2785018369.lastBoundsChange);
            i_536871904 = addInt(i_536871904, 1);
            if (!(((colontmp__536871903).length == L_536871905))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018358.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018379 = null;
      var colontmp__536871908 = [];
      colontmp__536871908 = self_2785018358.children;
      var i_536871909 = 0;
      var L_536871910 = (colontmp__536871908).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871909 < L_536871910)) break Label6;
            c_2785018379 = colontmp__536871908[chckIndx(i_536871909, 0, (colontmp__536871908).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018357(c_2785018379, currentIndex_2785018359);
            self_2785018358.lastHierarchyChange = nimMax(nimMax(self_2785018358.lastHierarchyChange, c_2785018379.lastHierarchyChange), c_2785018379.lastBoundsChange);
            i_536871909 = addInt(i_536871909, 1);
            if (!(((colontmp__536871908).length == L_536871910))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018358.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018390 = null;
      var colontmp__536871913 = [];
      colontmp__536871913 = self_2785018358.children;
      var i_536871914 = 0;
      var L_536871915 = (colontmp__536871913).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871914 < L_536871915)) break Label9;
            c_2785018390 = colontmp__536871913[chckIndx(i_536871914, 0, (colontmp__536871913).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018357(c_2785018390, currentIndex_2785018359);
            self_2785018358.lastHierarchyChange = nimMax(nimMax(self_2785018358.lastHierarchyChange, c_2785018390.lastHierarchyChange), c_2785018390.lastBoundsChange);
            i_536871914 = addInt(i_536871914, 1);
            if (!(((colontmp__536871913).length == L_536871915))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018358.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018401 = null;
      var colontmp__536871918 = [];
      colontmp__536871918 = self_2785018358.children;
      var i_536871919 = 0;
      var L_536871920 = (colontmp__536871918).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871919 < L_536871920)) break Label12;
            c_2785018401 = colontmp__536871918[chckIndx(i_536871919, 0, (colontmp__536871918).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018357(c_2785018401, currentIndex_2785018359);
            self_2785018358.lastHierarchyChange = nimMax(nimMax(self_2785018358.lastHierarchyChange, c_2785018401.lastHierarchyChange), c_2785018401.lastBoundsChange);
            i_536871919 = addInt(i_536871919, 1);
            if (!(((colontmp__536871918).length == L_536871920))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018358.m_type, NTI2785017879)) {
    if (!(eqStrings(self_2785018358.text, self_2785018358.lastRenderedText))) {
    self_2785018358.lastHierarchyChange = nimMax(self_2785018358.lastHierarchyChange, currentIndex_2785018359);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3388997650(self_3388997651, frameIndex_3388997652, statusBarWidget_3388997653) {
    var Temporary1;

    var statusWidget_3388997654 = null;
    var commandLineWidget_3388997655 = null;
    if ((len_2785018025(statusBarWidget_3388997653) == 0)) {
    statusWidget_3388997654 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.5)}, NTI2785017869), lastHierarchyChange: frameIndex_3388997652, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(statusBarWidget_3388997653, statusWidget_3388997654);
    commandLineWidget_3388997655 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.5), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3388997652, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(statusBarWidget_3388997653, commandLineWidget_3388997655);
    layoutWidget_2785018519(statusWidget_3388997654, statusBarWidget_3388997653.lastBounds, frameIndex_3388997652, self_3388997651.platform.layoutOptions);
    layoutWidget_2785018519(commandLineWidget_3388997655, statusBarWidget_3388997653.lastBounds, frameIndex_3388997652, self_3388997651.platform.layoutOptions);
    }
    else {
      statusWidget_3388997654 = HEX5BHEX5D_2785018021(statusBarWidget_3388997653, 0);
      commandLineWidget_3388997655 = HEX5BHEX5D_2785018021(statusBarWidget_3388997653, 1);
    }
    
    var textColor_3388997661 = color_3439329450(self_3388997651.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3388997651.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3388997651.currentMode;
    }
    
    statusWidget_3388997654.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2785018335(statusWidget_3388997654, textColor_3388997661, frameIndex_3388997652);
    updateLastHierarchyChangeFromChildren_2785018357(statusWidget_3388997654, frameIndex_3388997652);
    statusBarWidget_3388997653.lastHierarchyChange = nimMax(statusBarWidget_3388997653.lastHierarchyChange, statusWidget_3388997654.lastHierarchyChange);
    activeHEX3D_2415919215(getCommandLineTextEditor_1291851061(self_3388997651), self_3388997651.commandLineMode);
    updateWidget_3405774859(getCommandLineTextEditor_1291851061(self_3388997651), self_3388997651, commandLineWidget_3388997655, frameIndex_3388997652);
    statusBarWidget_3388997653.lastHierarchyChange = nimMax(statusBarWidget_3388997653.lastHierarchyChange, commandLineWidget_3388997655.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2785018470(self_2785018471, currentIndex_2785018472, recurse_2785018473) {
    if (isObj(self_2785018471.m_type, NTI2785017871)) {
    Label1: {
      var c_2785018483 = null;
      var colontmp__536871923 = [];
      colontmp__536871923 = self_2785018471.children;
      var i_536871924 = 0;
      var L_536871925 = (colontmp__536871923).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871924 < L_536871925)) break Label3;
            c_2785018483 = colontmp__536871923[chckIndx(i_536871924, 0, (colontmp__536871923).length - 1)];
            if (recurse_2785018473) {
            updateInvalidationFromChildren_2785018470(c_2785018483, currentIndex_2785018472, recurse_2785018473);
            }
            
            self_2785018471.lastInvalidation = nimMax(nimMax(self_2785018471.lastInvalidation, c_2785018483.lastInvalidation), currentIndex_2785018472);
            i_536871924 = addInt(i_536871924, 1);
            if (!(((colontmp__536871923).length == L_536871925))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018471.m_type, NTI2785017873)) {
    Label4: {
      var c_2785018493 = null;
      var colontmp__536871928 = [];
      colontmp__536871928 = self_2785018471.children;
      var i_536871929 = 0;
      var L_536871930 = (colontmp__536871928).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871929 < L_536871930)) break Label6;
            c_2785018493 = colontmp__536871928[chckIndx(i_536871929, 0, (colontmp__536871928).length - 1)];
            if (recurse_2785018473) {
            updateInvalidationFromChildren_2785018470(c_2785018493, currentIndex_2785018472, recurse_2785018473);
            }
            
            self_2785018471.lastInvalidation = nimMax(nimMax(self_2785018471.lastInvalidation, c_2785018493.lastInvalidation), currentIndex_2785018472);
            i_536871929 = addInt(i_536871929, 1);
            if (!(((colontmp__536871928).length == L_536871930))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018471.m_type, NTI2785017875)) {
    Label7: {
      var c_2785018503 = null;
      var colontmp__536871933 = [];
      colontmp__536871933 = self_2785018471.children;
      var i_536871934 = 0;
      var L_536871935 = (colontmp__536871933).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871934 < L_536871935)) break Label9;
            c_2785018503 = colontmp__536871933[chckIndx(i_536871934, 0, (colontmp__536871933).length - 1)];
            if (recurse_2785018473) {
            updateInvalidationFromChildren_2785018470(c_2785018503, currentIndex_2785018472, recurse_2785018473);
            }
            
            self_2785018471.lastInvalidation = nimMax(nimMax(self_2785018471.lastInvalidation, c_2785018503.lastInvalidation), currentIndex_2785018472);
            i_536871934 = addInt(i_536871934, 1);
            if (!(((colontmp__536871933).length == L_536871935))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018471.m_type, NTI2785017877)) {
    Label10: {
      var c_2785018513 = null;
      var colontmp__536871938 = [];
      colontmp__536871938 = self_2785018471.children;
      var i_536871939 = 0;
      var L_536871940 = (colontmp__536871938).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871939 < L_536871940)) break Label12;
            c_2785018513 = colontmp__536871938[chckIndx(i_536871939, 0, (colontmp__536871938).length - 1)];
            if (recurse_2785018473) {
            updateInvalidationFromChildren_2785018470(c_2785018513, currentIndex_2785018472, recurse_2785018473);
            }
            
            self_2785018471.lastInvalidation = nimMax(nimMax(self_2785018471.lastInvalidation, c_2785018513.lastInvalidation), currentIndex_2785018472);
            i_536871939 = addInt(i_536871939, 1);
            if (!(((colontmp__536871938).length == L_536871940))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3388997701(self_3388997702, frameIndex_3388997703) {
            var Temporary4;
            var Temporary8;

    if ((self_3388997702.widget == null)) {
    mainStack_3388997663[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), right: -1.0, logLayout: false, m_type: NTI2785017873, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3388997702.widget = mainStack_3388997663[0];
    mainPanel_3388997665[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3388997663[0].children.push(mainPanel_3388997665[0]);;
    viewPanel_3388997664[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), bottom: (-2.0 * totalLineHeight_2768240810(self_3388997702.platform)), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(mainPanel_3388997665[0], viewPanel_3388997664[0]);
    commandLineWidget_3388997662[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 1.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: (-2.0 * totalLineHeight_2768240810(self_3388997702.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    add_2785018068(mainPanel_3388997665[0], commandLineWidget_3388997662[0]);
    layoutWidget_2785018519(self_3388997702.widget, rect_2147483672(vec2_2164261725(0.0, 0.0), size_2768240760(self_3388997702.platform)), frameIndex_3388997703, self_3388997702.platform.layoutOptions);
    }
    
    setLen_2785018061(viewPanel_3388997664[0], 0);
    var rects_3388997714 = layoutViews_1291848236(self_3388997702.layout, self_3388997702.layout_props, rect_2147483666(0.0, 0.0, 1.0, 1.0), (self_3388997702.views).length);
    Label1: {
      var i_3388997720 = 0;
      var view_3388997721 = null;
      var i_536871839 = 0;
      var L_536871840 = (self_3388997702.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871839 < L_536871840)) break Label3;
            i_3388997720 = i_536871839;
            view_3388997721 = self_3388997702.views[chckIndx(i_536871839, 0, (self_3388997702.views).length - 1)];
            var widget_3388997722 = null;
            if (contains_3388997765(widgetsPerEditor_3388997691[0], view_3388997721.editor.id)) {
            widget_3388997722 = (Temporary4 = HEX5BHEX5D_3388998064(widgetsPerEditor_3388997691[0], view_3388997721.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3388997722 = {lastHierarchyChange: frameIndex_3388997703, logLayout: false, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3388998183(widgetsPerEditor_3388997691[0], view_3388997721.editor.id, widget_3388997722);
            }
            
            if ((i_3388997720 < (rects_3388997714).length)) {
            var colontmp__536871837 = xy_2147483680(rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)]);
            var colontmp__536871838 = vec2_2164261725((rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].x + rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].w), (rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].y + rects_3388997714[chckIndx(i_3388997720, 0, (rects_3388997714).length - 1)].h));
            widget_3388997722.anchor = nimCopy(widget_3388997722.anchor, {Field0: nimCopy(null, colontmp__536871837, NTI2164261152), Field1: nimCopy(null, colontmp__536871838, NTI2164261152)}, NTI2785017869);
            layoutWidget_2785018519(widget_3388997722, viewPanel_3388997664[0].lastBounds, frameIndex_3388997703, self_3388997702.platform.layoutOptions);
            add_2785018068(viewPanel_3388997664[0], widget_3388997722);
            activeHEX3D_2415919215(view_3388997721.editor, (self_3388997702.currentView == i_3388997720));
            updateWidget_3405774859(view_3388997721.editor, self_3388997702, widget_3388997722, frameIndex_3388997703);
            viewPanel_3388997664[0].lastHierarchyChange = nimMax(viewPanel_3388997664[0].lastHierarchyChange, widget_3388997722.lastHierarchyChange);
            }
            
            i_536871839 = addInt(i_536871839, 1);
            if (!(((self_3388997702.views).length == L_536871840))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3388997665[0].lastHierarchyChange = nimMax(mainPanel_3388997665[0].lastHierarchyChange, viewPanel_3388997664[0].lastHierarchyChange);
    var lastPopups_3388999248 = HEX5BHEX5D_3388999224(mainStack_3388997663[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3388997663[0].children.length < 1) { for (var i = mainStack_3388997663[0].children.length ; i < 1 ; ++i) mainStack_3388997663[0].children.push(null); }
               else { mainStack_3388997663[0].children.length = 1; };
    Label5: {
      var i_3388999285 = 0;
      var popup_3388999286 = null;
      var i_536871846 = 0;
      var L_536871847 = (self_3388997702.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871846 < L_536871847)) break Label7;
            i_3388999285 = i_536871846;
            popup_3388999286 = self_3388997702.popups[chckIndx(i_536871846, 0, (self_3388997702.popups).length - 1)];
            var widget_3388999287 = null;
            if (contains_3388997765(widgetsPerEditor_3388997691[0], popup_3388999286.id)) {
            widget_3388999287 = (Temporary8 = HEX5BHEX5D_3388998064(widgetsPerEditor_3388997691[0], popup_3388999286.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3388999287 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3388997703, logLayout: false, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3388998183(widgetsPerEditor_3388997691[0], popup_3388999286.id, widget_3388999287);
            }
            
            var colontmp__536871843 = vec2_2164261725(0.25, 0.25);
            var colontmp__536871844 = vec2_2164261725(0.75, 0.75);
            widget_3388999287.anchor = nimCopy(widget_3388999287.anchor, {Field0: nimCopy(null, colontmp__536871843, NTI2164261152), Field1: nimCopy(null, colontmp__536871844, NTI2164261152)}, NTI2785017869);
            layoutWidget_2785018519(widget_3388999287, mainStack_3388997663[0].lastBounds, frameIndex_3388997703, self_3388997702.platform.layoutOptions);
            mainStack_3388997663[0].children.push(widget_3388999287);;
            updateWidget_3405774865(popup_3388999286, self_3388997702, widget_3388999287, frameIndex_3388997703);
            mainStack_3388997663[0].lastHierarchyChange = nimMax(mainStack_3388997663[0].lastHierarchyChange, widget_3388999287.lastHierarchyChange);
            i_536871846 = addInt(i_536871846, 1);
            if (!(((self_3388997702.popups).length == L_536871847))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3388999446 = null;
      var i_536871856 = 0;
      var L_536871857 = (lastPopups_3388999248).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871856 < L_536871857)) break Label11;
            p_3388999446 = lastPopups_3388999248[chckIndx(i_536871856, 0, (lastPopups_3388999248).length - 1)];
            Label12: {
              if (contains_3388999447(mainStack_3388997663[0].children, p_3388999446)) {
              break Label12;
              }
              
              Label13: {
                var c_3388999483 = null;
                var i_536871853 = 0;
                var L_536871854 = (mainStack_3388997663[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871853 < L_536871854)) break Label15;
                      c_3388999483 = mainStack_3388997663[0].children[chckIndx(i_536871853, 0, (mainStack_3388997663[0].children).length - 1)];
                      invalidate_2785018426(c_3388999483, frameIndex_3388997703, p_3388999446.lastBounds);
                      i_536871853 = addInt(i_536871853, 1);
                      if (!(((mainStack_3388997663[0].children).length == L_536871854))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871856 = addInt(i_536871856, 1);
            if (!(((lastPopups_3388999248).length == L_536871857))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3388997650(self_3388997702, frameIndex_3388997703, commandLineWidget_3388997662[0]);
    mainPanel_3388997665[0].lastHierarchyChange = nimMax(mainPanel_3388997665[0].lastHierarchyChange, commandLineWidget_3388997662[0].lastHierarchyChange);
    mainStack_3388997663[0].lastHierarchyChange = nimMax(mainStack_3388997663[0].lastHierarchyChange, mainPanel_3388997665[0].lastHierarchyChange);
    updateInvalidationFromChildren_2785018470(mainStack_3388997663[0], -1, false);
    self_3388997702.widget.lastHierarchyChange = nimMax(self_3388997702.widget.lastHierarchyChange, commandLineWidget_3388997662[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3388999484(self_3388999485, size_3388999486, frameIndex_3388999487) {
  BeforeRet: {
    self_3388999485.lastBounds = nimCopy(self_3388999485.lastBounds, rect_2147483672(vec2_2164261725(0.0, 0.0), size_3388999486), NTI2147483653);
    if ((self_3388999485.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2785018519(self_3388999485.widget, self_3388999485.lastBounds, frameIndex_3388999487, self_3388999485.platform.layoutOptions);
  };

  
}

function requestRender_536871265(redrawEverything_536871266) {
    
function HEX3Aanonymous_536871267(time_536871268) {
        hasRequestedRerender_536870979[0] = false;
        isRenderInProgress_536870980[0] = true;
        try {
        try {
        var layoutTime_536871274 = 0.0;
        var updateTime_536871275 = 0.0;
        var renderTime_536871276 = 0.0;
        Label3: {
          ed_536870949[0].frameTimer = startTimer_2080374869();
          var updateTimer_536871277 = startTimer_2080374869();
          updateWidgetTree_3388997701(ed_536870949[0], frameIndex_536870978[0]);
          updateTime_536871275 = ms_2080374842(elapsed_2080374866(updateTimer_536871277));
          var layoutTimer_536871278 = startTimer_2080374869();
          layoutWidgetTree_3388999484(ed_536870949[0], size_2768240760(rend_536870947[0]), frameIndex_536870978[0]);
          layoutTime_536871274 = ms_2080374842(elapsed_2080374866(layoutTimer_536871278));
          var renderTimer_536871279 = startTimer_2080374869();
          render_2768240751(rend_536870947[0], ed_536870949[0].widget, frameIndex_536870978[0]);
          renderTime_536871276 = ms_2080374842(elapsed_2080374866(renderTimer_536871279));
          frameTime_536870977[0] = ms_2080374842(elapsed_2080374866(ed_536870949[0].frameTimer));
        };
        if ((20.0 < frameTime_536870977[0])) {
        var fmtRes_536871284 = [mnewString(0)];
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [70,114,97,109,101,58,32]);;
        formatValue_2785018156(fmtRes_536871284, 0, frameTime_536870977[0], [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,32,40,117,58,32]);;
        formatValue_2785018156(fmtRes_536871284, 0, updateTime_536871275, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,44,32,108,58,32]);;
        formatValue_2785018156(fmtRes_536871284, 0, layoutTime_536871274, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,44,32,114,58,32]);;
        formatValue_2785018156(fmtRes_536871284, 0, renderTime_536871276, [62,53,46,50]);
        fmtRes_536871284[0].push.apply(fmtRes_536871284[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871284[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870978[0] = addInt(frameIndex_536870978[0], 1);
        }
        } finally {
        isRenderInProgress_536870980[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870948[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870979[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870980[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871267);
  };

  
}

function subscribe_536871752(event_536871754, callback_536871756) {
  var result_536871757 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871757 = nimCopy(result_536871757, newId_2046820597(), NTI2046820355);
    event_536871754.handlers.push({Field0: nimCopy(null, result_536871757, NTI2046820355), Field1: callback_536871756});;

  return result_536871757;

}

function HEX3Aanonymous_536871334(event_536871352) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871383(event_536871401) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871432(event_536871450) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871481(event_536871499) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871530(event_536871548) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871579(event_536871597) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871628(event_536871646) {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871677() {
    requestRender_536871265(false);

  
}

function HEX3Aanonymous_536871726(redrawEverything_536871727) {
    requestRender_536871265(redrawEverything_536871727);

  
}
var _ = subscribe_1291851159(rend_536870947[0].onKeyPress, HEX3Aanonymous_536871334);
var _ = subscribe_1291851159(rend_536870947[0].onKeyRelease, HEX3Aanonymous_536871383);
var _ = subscribe_1291851159(rend_536870947[0].onRune, HEX3Aanonymous_536871432);
var _ = subscribe_1291851329(rend_536870947[0].onMousePress, HEX3Aanonymous_536871481);
var _ = subscribe_1291851329(rend_536870947[0].onMouseRelease, HEX3Aanonymous_536871530);
var _ = subscribe_1291851450(rend_536870947[0].onMouseMove, HEX3Aanonymous_536871579);
var _ = subscribe_1291851522(rend_536870947[0].onScroll, HEX3Aanonymous_536871628);
var _ = subscribe_1291851666(rend_536870947[0].onCloseRequested, HEX3Aanonymous_536871677);
var _ = subscribe_536871752(rend_536870947[0].onResized, HEX3Aanonymous_536871726);
Label316: {
  setHandleInputs_1291855267(ed_536870949[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291861330([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291861248([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859594(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859594(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870948[0] = true;
requestRender_536871265(false);
const hiXorLoJs_override_mask = BigInt("0xffffffffffffffff");
const hiXorLoJs_override_shift = BigInt("64");
function hiXorLoJs_override(a, b) {
    var prod = (a * b);
    return ((prod >> hiXorLoJs_override_shift) ^ (prod & hiXorLoJs_override_mask));
}

var hashWangYi1_override_c1 = BigInt("0xa0761d6478bd642f");
var hashWangYi1_override_c2 = BigInt("0xe7037ed1a0b428db");
var hashWangYi1_override_c3 = BigInt("0xeb44accab455d16d");

function hashWangYi1_override(x) {
    if (typeof BigInt != 'undefined') {
        var res = hiXorLoJs_override(hiXorLoJs_override(hashWangYi1_override_c1, (BigInt(x) ^ hashWangYi1_override_c2)), hashWangYi1_override_c3);
        return Number(BigInt.asIntN(32, res));
    }
    else {
        return (x & 4294967295);
    }
}

let nimCopyCounters = new Map();
let nimCopyTimers = new Map();
let breakOnCopyType = null;
let stats = []

function clearNimCopyStats() {
    nimCopyCounters.clear();
    nimCopyTimers.clear();
}

function dumpNimCopyStatsImpl(desc, map, sortBy, setBreakOnCopyTypeIndex) {
    let values = []
    for (let entry of map.entries()) {
        values.push(entry)
    }

    values.sort((a, b) => b[1][sortBy] - a[1][sortBy])

    stats = values

    console.log(desc)

    let i = 0;
    for (let [type, stat] of values) {
        if (i == setBreakOnCopyTypeIndex) {
            breakOnCopyType = type
        }
        console.log(stat, ": ", type)
        i++
        if (i > 20) {
          break
        }
    }
}

function selectType(setBreakOnCopyTypeIndex) {
    if (setBreakOnCopyTypeIndex < stats.length) {
        breakOnCopyType = stats[setBreakOnCopyTypeIndex][0]
    }
}

function dumpNimCopyStats(sortBy, setBreakOnCopyTypeIndex) {
    //dumpNimCopyStatsImpl("Counts: ", nimCopyCounters)
    dumpNimCopyStatsImpl("Times: ", nimCopyTimers, sortBy || 0, setBreakOnCopyTypeIndex)
}

function nimCopyOverride(dest, src, ti) {
    if (ti === breakOnCopyType) {
      debugger;
    }

    let existing = nimCopyCounters.get(ti) || 0;
    nimCopyCounters.set(ti, existing + 1)

    let start = Date.now()
    let result = window._old_nimCopy(dest, src, ti);
    let elapsed = Date.now() - start

    let existingTime = nimCopyTimers.get(ti) || [0, 0];
    nimCopyTimers.set(ti, [existingTime[0] + elapsed, existingTime[1] + 1])

    return result;
}


function hashWangYi1_1325400278(x_1325400280) {
  var result_1325400281 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym10_1325400300 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym10_1325400301 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym10_1325400302 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym10_1325400303 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym10_1325400300, (BigInt(x_1325400280) ^ P1HEX60gensym10_1325400301)), P58HEX60gensym10_1325400302);
    result_1325400281 = Number((() => { const i = resHEX60gensym10_1325400303, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400281 = (x_1325400280 & 4294967295);
    }
    

  return result_1325400281;

}

function hashWangYi1_536871964(x_536871966) {
  var result_536871967 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_536871980 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_536871981 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_536871982 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_536871983 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_536871980, (BigInt(x_536871966) ^ P1HEX60gensym6_536871981)), P58HEX60gensym6_536871982);
    result_536871967 = Number((() => { const i = resHEX60gensym6_536871983, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_536871967 = (x_536871966 & 4294967295);
    }
    

  return result_536871967;

}
window._old_hashWangYi1_1325400278 = hashWangYi1_1325400278;
window.hashWangYi1_1325400278 = hashWangYi1_override;
window._old_hashWangYi1_1325400244 = hashWangYi1_1325400244;
window.hashWangYi1_1325400244 = hashWangYi1_override;
window._old_hashWangYi1_536871964 = hashWangYi1_536871964;
window.hashWangYi1_536871964 = hashWangYi1_override;

function formatValue_1291848865(result_1291848867, result_1291848867_Idx, value_1291848868, specifier_1291848869) {
    formatValue_721420459(result_1291848867, result_1291848867_Idx, HEX24_1627394481(value_1291848868), specifier_1291848869);

  
}

function handleUnknownDocumentEditorAction_1291848854(self_1291848855, editor_1291848856, action_1291848857, args_1291848858) {
  var result_1291848859 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (handleUnknownDocumentEditorAction_2751463456(self_1291848855.scriptContext, editor_1291848856, action_1291848857, args_1291848858)) {
    result_1291848859 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848864 = [mnewString(0)];
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848864, 0, action_1291848857, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [32]);;
    formatValue_1291848865(fmtRes_1291848864, 0, args_1291848858, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848864, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848864[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848859 = 0;
    break BeforeRet;
  };

  return result_1291848859;

}

function insert_2818593850(x_2818593852, x_2818593852_Idx, item_2818593853, i_2818593854) {
    var it_2818593874 = null;
    x_2818593852[x_2818593852_Idx] = x_2818593852[x_2818593852_Idx] || []; x_2818593852[x_2818593852_Idx].splice(i_2818593854, 0, it_2818593874);
    x_2818593852[x_2818593852_Idx][chckIndx(i_2818593854, 0, (x_2818593852[x_2818593852_Idx]).length - 1)] = item_2818593853;

  
}

function toJson_2818584041(self_2818584042, opt_2818584043) {
  var result_2818584044 = null;

    result_2818584044 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [105,100], newJInt_1627390040(self_2818584042.id));

  return result_2818584044;

}

function none_2818583947() {
  var result_2818583953 = ({val: null});

  return result_2818583953;

}

function some_2818584006(val_2818584008) {
  var result_2818584009 = ({val: null});

    if (!(!((val_2818584008 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818584009.val = val_2818584008;

  return result_2818584009;

}

function getTextDocumentEditor_2818583937(wrapper_2818583938) {
      var Temporary1;

  var result_2818583943 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
    }
    
      var oHEX60gensym171_2818583956 = getEditorForId_1291850661(gEditor, wrapper_2818583938.id);
      if (!isSome_2818583961(oHEX60gensym171_2818583956)) Temporary1 = false; else {        var editor_2818583998 = get_2818583981(oHEX60gensym171_2818583956);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583998.m_type, NTI2818572510)) {
    result_2818583943 = nimCopy(result_2818583943, some_2818584006(editor_2818583998), NTI2818578635);
    break BeforeRet;
    }
    
    }
    
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
  };

  return result_2818583943;

}

function isNone_2818584298(self_2818584300) {
  var result_2818584301 = false;

    result_2818584301 = (self_2818584300.val == null);

  return result_2818584301;

}

function get_2818584318(self_2818584320) {
  var result_2818584321 = null;

    if (isNone_2818584298(self_2818584320)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818584321 = self_2818584320["val"];

  return result_2818584321;

}

function setModeScript_2818584183_2818584290(self_2818584291, mode_2818584292) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_2818584293 = getTextDocumentEditor_2818583937(self_2818584291);
      if (isNone_2818584298(rHEX60gensym182_2818584293)) {
      break BeforeRet;
      }
      
    };
    setMode_2818584223(get_2818584318(rHEX60gensym182_2818584293), mode_2818584292);
  };

  
}

function fromJsonHook_2818584045(t_2818584046, jsonNode_2818584047) {
    t_2818584046.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2818584047, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818584358(a_2818584360, b_2818584361, opt_2818584362) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584361, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818584361}));
    }
    
    fromJsonHook_2818584045(a_2818584360, b_2818584361);

  
}

function jsonTo_2818584352(b_2818584354, opt_2818584356) {
  var result_2818584357 = [({id: 0})];

    fromJson_2818584358(result_2818584357[0], b_2818584354, opt_2818584356);

  return result_2818584357[0];

}

function setModeApi_2818584350(HEX3Atmp_2818584186) {
  var result_2818584351 = null;

    result_2818584351 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2818584183_2818584290(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_2818584374 = [115,101,116,77,111,100,101];
    var fmtRes_2818584379 = [mnewString(0)];
    fmtRes_2818584379[0].push.apply(fmtRes_2818584379[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584379, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_2818584374 || [],fmtRes_2818584379[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584351;

}

function modeScript_2818584474_2818584482(self_2818584483) {
  var result_2818584484 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym196_2818584485 = getTextDocumentEditor_2818583937(self_2818584483);
      if (isNone_2818584298(rHEX60gensym196_2818584485)) {
      break BeforeRet;
      }
      
    };
    result_2818584484 = nimCopy(null, mode_2818584479(get_2818584318(rHEX60gensym196_2818584485)), NTI33554449);
  };

  return result_2818584484;

}

function modeApi_2818584512(HEX3Atmp_2818584476) {
  var result_2818584513 = null;

  BeforeRet: {
    result_2818584513 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818584513 = toJson_1811939932(modeScript_2818584474_2818584482(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584476, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym202_2818584523 = [109,111,100,101];
    var fmtRes_2818584528 = [mnewString(0)];
    fmtRes_2818584528[0].push.apply(fmtRes_2818584528[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584528, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym202_2818584523 || [],fmtRes_2818584528[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584513;

}

function getContextWithModeScript_2818584531_2818584540(self_2818584541, context_2818584542) {
  var result_2818584543 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym206_2818584544 = getTextDocumentEditor_2818583937(self_2818584541);
      if (isNone_2818584298(rHEX60gensym206_2818584544)) {
      break BeforeRet;
      }
      
    };
    result_2818584543 = nimCopy(null, getContextWithMode_2818583609(get_2818584318(rHEX60gensym206_2818584544), context_2818584542), NTI33554449);
  };

  return result_2818584543;

}

function getContextWithModeApi_2818584572(HEX3Atmp_2818584533) {
  var result_2818584573 = null;

  BeforeRet: {
    result_2818584573 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818584573 = toJson_1811939932(getContextWithModeScript_2818584531_2818584540(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584533, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584533, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym212_2818584588 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818584593 = [mnewString(0)];
    fmtRes_2818584593[0].push.apply(fmtRes_2818584593[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584593, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym212_2818584588 || [],fmtRes_2818584593[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584573;

}

function updateTargetColumnScript_2818584596_2818584604(self_2818584605, cursor_2818584606) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym216_2818584607 = getTextDocumentEditor_2818583937(self_2818584605);
      if (isNone_2818584298(rHEX60gensym216_2818584607)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818584601(get_2818584318(rHEX60gensym216_2818584607), cursor_2818584606);
  };

  
}

function parseEnum_2818584659(s_2818584661) {
    var Temporary1;

  var result_2818584662 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818584661))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818584661 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818584662 = Temporary1;

  return result_2818584662;

}

function fromJson_2818584647(a_2818584649, a_2818584649_Idx, b_2818584650, opt_2818584651) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584650, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818584650}));
    }
    
    switch (b_2818584650.kind) {
    case 2:
      a_2818584649[a_2818584649_Idx] = chckRange(getBiggestInt_1627390129(b_2818584650, 0), 0, 4);
      break;
    case 4:
      a_2818584649[a_2818584649_Idx] = parseEnum_2818584659(getStr_1627390106(b_2818584650, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818584687 = [mnewString(0)];
      fmtRes_2818584687[0].push.apply(fmtRes_2818584687[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818584687, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818584687[0].push.apply(fmtRes_2818584687[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818584687, 0, pretty_1627394477(b_2818584650, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818584687[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818584641(b_2818584643, opt_2818584645) {
  var result_2818584646 = [0];

    fromJson_2818584647(result_2818584646, 0, b_2818584643, opt_2818584645);

  return result_2818584646[0];

}

function updateTargetColumnApi_2818584634(HEX3Atmp_2818584598) {
  var result_2818584635 = null;

    result_2818584635 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2818584596_2818584604(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584598, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818584598, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym221_2818584691 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2818584696 = [mnewString(0)];
    fmtRes_2818584696[0].push.apply(fmtRes_2818584696[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584696, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym221_2818584691 || [],fmtRes_2818584696[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584635;

}

function invertSelectionScript_2818584713_2818584720(self_2818584721) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym230_2818584722 = getTextDocumentEditor_2818583937(self_2818584721);
      if (isNone_2818584298(rHEX60gensym230_2818584722)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818584718(get_2818584318(rHEX60gensym230_2818584722));
  };

  
}

function invertSelectionApi_2818584748(HEX3Atmp_2818584715) {
  var result_2818584749 = null;

    result_2818584749 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2818584713_2818584720(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584715, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym235_2818584755 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818584760 = [mnewString(0)];
    fmtRes_2818584760[0].push.apply(fmtRes_2818584760[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584760, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym235_2818584755 || [],fmtRes_2818584760[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584749;

}

function insertScript_2818584776_2818584789(self_2818584790, selections_2818584791, text_2818584792, notify_2818584793, record_2818584794, autoIndent_2818584795) {
  var result_2818584796 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym243_2818584797 = getTextDocumentEditor_2818583937(self_2818584790);
      if (isNone_2818584298(rHEX60gensym243_2818584797)) {
      break BeforeRet;
      }
      
    };
    result_2818584796 = nimCopy(null, insert_2818584781(get_2818584318(rHEX60gensym243_2818584797), selections_2818584791, text_2818584792, notify_2818584793, record_2818584794, autoIndent_2818584795), NTI2818579318);
  };

  return result_2818584796;

}

function insertApi_2818584829(HEX3Atmp_2818584778) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2818584830 = null;

  BeforeRet: {
    result_2818584830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary8 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary10 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2818584830 = toJson_2818585128(insertScript_2818584776_2818584789(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym249_2818585184 = [105,110,115,101,114,116];
    var fmtRes_2818585189 = [mnewString(0)];
    fmtRes_2818585189[0].push.apply(fmtRes_2818585189[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585189, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym249_2818585184 || [],fmtRes_2818585189[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584830;

}

function deleteScript_2818585277_2818585288(self_2818585289, selections_2818585290, notify_2818585291, record_2818585292) {
  var result_2818585293 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym276_2818585294 = getTextDocumentEditor_2818583937(self_2818585289);
      if (isNone_2818584298(rHEX60gensym276_2818585294)) {
      break BeforeRet;
      }
      
    };
    result_2818585293 = nimCopy(null, delete_2818585282(get_2818584318(rHEX60gensym276_2818585294), selections_2818585290, notify_2818585291, record_2818585292), NTI2818579834);
  };

  return result_2818585293;

}

function deleteApi_2818585324(HEX3Atmp_2818585279) {
      var Temporary5;
      var Temporary7;

  var result_2818585325 = null;

  BeforeRet: {
    result_2818585325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818585279))) {
      Temporary5 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818585279))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2818585325 = toJson_2818585128(deleteScript_2818585277_2818585288(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym282_2818585350 = [100,101,108,101,116,101];
    var fmtRes_2818585355 = [mnewString(0)];
    fmtRes_2818585355[0].push.apply(fmtRes_2818585355[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585355, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym282_2818585350 || [],fmtRes_2818585355[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818585325;

}

function selectPrevScript_2818585393_2818585567(self_2818585568) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym287_2818585569 = getTextDocumentEditor_2818583937(self_2818585568);
      if (isNone_2818584298(rHEX60gensym287_2818585569)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818585398(get_2818584318(rHEX60gensym287_2818585569));
  };

  
}

function selectPrevApi_2818585595(HEX3Atmp_2818585395) {
  var result_2818585596 = null;

    result_2818585596 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2818585393_2818585567(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585395, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym292_2818585602 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818585607 = [mnewString(0)];
    fmtRes_2818585607[0].push.apply(fmtRes_2818585607[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585607, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym292_2818585602 || [],fmtRes_2818585607[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585596;

}

function selectNextScript_2818585611_2818585762(self_2818585763) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym298_2818585764 = getTextDocumentEditor_2818583937(self_2818585763);
      if (isNone_2818584298(rHEX60gensym298_2818585764)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818585616(get_2818584318(rHEX60gensym298_2818585764));
  };

  
}

function selectNextApi_2818585790(HEX3Atmp_2818585613) {
  var result_2818585791 = null;

    result_2818585791 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2818585611_2818585762(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585613, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym303_2818585797 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818585802 = [mnewString(0)];
    fmtRes_2818585802[0].push.apply(fmtRes_2818585802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym303_2818585797 || [],fmtRes_2818585802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585791;

}

function selectInsideScript_2818585805_2818585824(self_2818585825, cursor_2818585826) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym308_2818585827 = getTextDocumentEditor_2818583937(self_2818585825);
      if (isNone_2818584298(rHEX60gensym308_2818585827)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818585810(get_2818584318(rHEX60gensym308_2818585827), cursor_2818585826);
  };

  
}

function jsonTo_2818585861(b_2818585863, opt_2818585865) {
  var result_2818585866 = [{Field0: 0, Field1: 0}];

    fromJson_2818584951(result_2818585866[0], b_2818585863, opt_2818585865);

  return result_2818585866[0];

}

function selectInsideApi_2818585854(HEX3Atmp_2818585807) {
  var result_2818585855 = null;

    result_2818585855 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2818585805_2818585824(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585807, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818585807, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym313_2818585872 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2818585877 = [mnewString(0)];
    fmtRes_2818585877[0].push.apply(fmtRes_2818585877[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585877, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym313_2818585872 || [],fmtRes_2818585877[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585855;

}

function selectInsideCurrentScript_2818585882_2818585889(self_2818585890) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_2818585891 = getTextDocumentEditor_2818583937(self_2818585890);
      if (isNone_2818584298(rHEX60gensym317_2818585891)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818585887(get_2818584318(rHEX60gensym317_2818585891));
  };

  
}

function selectInsideCurrentApi_2818585917(HEX3Atmp_2818585884) {
  var result_2818585918 = null;

    result_2818585918 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2818585882_2818585889(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585884, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym322_2818585924 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2818585929 = [mnewString(0)];
    fmtRes_2818585929[0].push.apply(fmtRes_2818585929[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585929, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym322_2818585924 || [],fmtRes_2818585929[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585918;

}

function selectLineScript_2818585932_2818585940(self_2818585941, line_2818585942) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym326_2818585943 = getTextDocumentEditor_2818583937(self_2818585941);
      if (isNone_2818584298(rHEX60gensym326_2818585943)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585937(get_2818584318(rHEX60gensym326_2818585943), line_2818585942);
  };

  
}

function selectLineApi_2818585970(HEX3Atmp_2818585934) {
  var result_2818585971 = null;

    result_2818585971 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2818585932_2818585940(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585934, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818585934, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym331_2818585982 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2818585987 = [mnewString(0)];
    fmtRes_2818585987[0].push.apply(fmtRes_2818585987[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585987, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym331_2818585982 || [],fmtRes_2818585987[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585971;

}

function selectLineCurrentScript_2818585990_2818585997(self_2818585998) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym334_2818585999 = getTextDocumentEditor_2818583937(self_2818585998);
      if (isNone_2818584298(rHEX60gensym334_2818585999)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585995(get_2818584318(rHEX60gensym334_2818585999));
  };

  
}

function selectLineCurrentApi_2818586025(HEX3Atmp_2818585992) {
  var result_2818586026 = null;

    result_2818586026 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2818585990_2818585997(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585992, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym339_2818586032 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2818586037 = [mnewString(0)];
    fmtRes_2818586037[0].push.apply(fmtRes_2818586037[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586037, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym339_2818586032 || [],fmtRes_2818586037[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586026;

}

function selectParentTsScript_2818586040_2818586060(self_2818586061, selection_2818586062) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym343_2818586063 = getTextDocumentEditor_2818583937(self_2818586061);
      if (isNone_2818584298(rHEX60gensym343_2818586063)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818586045(get_2818584318(rHEX60gensym343_2818586063), selection_2818586062);
  };

  
}

function selectParentTsApi_2818586090(HEX3Atmp_2818586042) {
  var result_2818586091 = null;

    result_2818586091 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2818586040_2818586060(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586042, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586097(HEX5BHEX5D_1627393116(HEX3Atmp_2818586042, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym348_2818586108 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2818586113 = [mnewString(0)];
    fmtRes_2818586113[0].push.apply(fmtRes_2818586113[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586113, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym348_2818586108 || [],fmtRes_2818586113[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586091;

}

function selectParentCurrentTsScript_2818586123_2818586130(self_2818586131) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym352_2818586132 = getTextDocumentEditor_2818583937(self_2818586131);
      if (isNone_2818584298(rHEX60gensym352_2818586132)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818586128(get_2818584318(rHEX60gensym352_2818586132));
  };

  
}

function selectParentCurrentTsApi_2818586158(HEX3Atmp_2818586125) {
  var result_2818586159 = null;

    result_2818586159 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2818586123_2818586130(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586125, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym357_2818586165 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2818586170 = [mnewString(0)];
    fmtRes_2818586170[0].push.apply(fmtRes_2818586170[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586170, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym357_2818586165 || [],fmtRes_2818586170[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586159;

}

function insertTextScript_2818586176_2818586185(self_2818586186, text_2818586187) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym362_2818586188 = getTextDocumentEditor_2818583937(self_2818586186);
      if (isNone_2818584298(rHEX60gensym362_2818586188)) {
      break BeforeRet;
      }
      
    };
    insertText_2818586181(get_2818584318(rHEX60gensym362_2818586188), text_2818586187);
  };

  
}

function insertTextApi_2818586215(HEX3Atmp_2818586178) {
  var result_2818586216 = null;

    result_2818586216 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2818586176_2818586185(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586178, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586178, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym367_2818586227 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2818586232 = [mnewString(0)];
    fmtRes_2818586232[0].push.apply(fmtRes_2818586232[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586232, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym367_2818586227 || [],fmtRes_2818586232[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586216;

}

function undoScript_2818586248_2818586303(self_2818586304) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym372_2818586305 = getTextDocumentEditor_2818583937(self_2818586304);
      if (isNone_2818584298(rHEX60gensym372_2818586305)) {
      break BeforeRet;
      }
      
    };
    undo_2818586253(get_2818584318(rHEX60gensym372_2818586305));
  };

  
}

function undoApi_2818586331(HEX3Atmp_2818586250) {
  var result_2818586332 = null;

    result_2818586332 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2818586248_2818586303(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586250, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym377_2818586338 = [117,110,100,111];
    var fmtRes_2818586343 = [mnewString(0)];
    fmtRes_2818586343[0].push.apply(fmtRes_2818586343[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586343, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym377_2818586338 || [],fmtRes_2818586343[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586332;

}

function redoScript_2818586350_2818586383(self_2818586384) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_2818586385 = getTextDocumentEditor_2818583937(self_2818586384);
      if (isNone_2818584298(rHEX60gensym382_2818586385)) {
      break BeforeRet;
      }
      
    };
    redo_2818586355(get_2818584318(rHEX60gensym382_2818586385));
  };

  
}

function redoApi_2818586411(HEX3Atmp_2818586352) {
  var result_2818586412 = null;

    result_2818586412 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2818586350_2818586383(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586352, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_2818586418 = [114,101,100,111];
    var fmtRes_2818586423 = [mnewString(0)];
    fmtRes_2818586423[0].push.apply(fmtRes_2818586423[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586423, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_2818586418 || [],fmtRes_2818586423[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586412;

}

function scrollTextScript_2818586430_2818586442(self_2818586443, amount_2818586444) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym392_2818586445 = getTextDocumentEditor_2818583937(self_2818586443);
      if (isNone_2818584298(rHEX60gensym392_2818586445)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818586435(get_2818584318(rHEX60gensym392_2818586445), amount_2818586444);
  };

  
}

function scrollTextApi_2818586472(HEX3Atmp_2818586432) {
  var result_2818586473 = null;

    result_2818586473 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2818586430_2818586442(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym397_2818586542 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2818586547 = [mnewString(0)];
    fmtRes_2818586547[0].push.apply(fmtRes_2818586547[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586547, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym397_2818586542 || [],fmtRes_2818586547[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586473;

}

function duplicateLastSelectionScript_2818586550_2818586599(self_2818586600) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym406_2818586601 = getTextDocumentEditor_2818583937(self_2818586600);
      if (isNone_2818584298(rHEX60gensym406_2818586601)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818586555(get_2818584318(rHEX60gensym406_2818586601));
  };

  
}

function duplicateLastSelectionApi_2818586627(HEX3Atmp_2818586552) {
  var result_2818586628 = null;

    result_2818586628 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2818586550_2818586599(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586552, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym411_2818586634 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586639 = [mnewString(0)];
    fmtRes_2818586639[0].push.apply(fmtRes_2818586639[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586639, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym411_2818586634 || [],fmtRes_2818586639[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586628;

}

function addCursorBelowScript_2818586650_2818586669(self_2818586670) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym414_2818586671 = getTextDocumentEditor_2818583937(self_2818586670);
      if (isNone_2818584298(rHEX60gensym414_2818586671)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818586655(get_2818584318(rHEX60gensym414_2818586671));
  };

  
}

function addCursorBelowApi_2818586697(HEX3Atmp_2818586652) {
  var result_2818586698 = null;

    result_2818586698 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2818586650_2818586669(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586652, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym419_2818586704 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2818586709 = [mnewString(0)];
    fmtRes_2818586709[0].push.apply(fmtRes_2818586709[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586709, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym419_2818586704 || [],fmtRes_2818586709[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586698;

}

function addCursorAboveScript_2818586716_2818586735(self_2818586736) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym422_2818586737 = getTextDocumentEditor_2818583937(self_2818586736);
      if (isNone_2818584298(rHEX60gensym422_2818586737)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818586721(get_2818584318(rHEX60gensym422_2818586737));
  };

  
}

function addCursorAboveApi_2818586763(HEX3Atmp_2818586718) {
  var result_2818586764 = null;

    result_2818586764 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2818586716_2818586735(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586718, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym427_2818586770 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2818586775 = [mnewString(0)];
    fmtRes_2818586775[0].push.apply(fmtRes_2818586775[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586775, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym427_2818586770 || [],fmtRes_2818586775[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586764;

}

function getPrevFindResultScript_2818586778_2818587058(self_2818587059, cursor_2818587060, offset_2818587061) {
  var result_2818587062 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym432_2818587063 = getTextDocumentEditor_2818583937(self_2818587059);
      if (isNone_2818584298(rHEX60gensym432_2818587063)) {
      break BeforeRet;
      }
      
    };
    result_2818587062 = nimCopy(result_2818587062, getPrevFindResult_2818583550(get_2818584318(rHEX60gensym432_2818587063), cursor_2818587060, offset_2818587061), NTI2449473548);
  };

  return result_2818587062;

}

function getPrevFindResultApi_2818587092(HEX3Atmp_2818586780) {
      var Temporary5;

  var result_2818587093 = null;

  BeforeRet: {
    result_2818587093 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586780))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587093 = toJson_2818585140(getPrevFindResultScript_2818586778_2818587058(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym438_2818587113 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587118 = [mnewString(0)];
    fmtRes_2818587118[0].push.apply(fmtRes_2818587118[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587118, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym438_2818587113 || [],fmtRes_2818587118[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587093;

}

function getNextFindResultScript_2818587129_2818587302(self_2818587303, cursor_2818587304, offset_2818587305) {
  var result_2818587306 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym444_2818587307 = getTextDocumentEditor_2818583937(self_2818587303);
      if (isNone_2818584298(rHEX60gensym444_2818587307)) {
      break BeforeRet;
      }
      
    };
    result_2818587306 = nimCopy(result_2818587306, getNextFindResult_2818583554(get_2818584318(rHEX60gensym444_2818587307), cursor_2818587304, offset_2818587305), NTI2449473548);
  };

  return result_2818587306;

}

function getNextFindResultApi_2818587336(HEX3Atmp_2818587131) {
      var Temporary5;

  var result_2818587337 = null;

  BeforeRet: {
    result_2818587337 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587131))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587337 = toJson_2818585140(getNextFindResultScript_2818587129_2818587302(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2818587357 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587362 = [mnewString(0)];
    fmtRes_2818587362[0].push.apply(fmtRes_2818587362[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587362, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2818587357 || [],fmtRes_2818587362[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587337;

}

function addNextFindResultToSelectionScript_2818587375_2818587390(self_2818587391) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym454_2818587392 = getTextDocumentEditor_2818583937(self_2818587391);
      if (isNone_2818584298(rHEX60gensym454_2818587392)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818587380(get_2818584318(rHEX60gensym454_2818587392));
  };

  
}

function addNextFindResultToSelectionApi_2818587418(HEX3Atmp_2818587377) {
  var result_2818587419 = null;

    result_2818587419 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2818587375_2818587390(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587377, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym459_2818587425 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587430 = [mnewString(0)];
    fmtRes_2818587430[0].push.apply(fmtRes_2818587430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym459_2818587425 || [],fmtRes_2818587430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587419;

}

function addPrevFindResultToSelectionScript_2818587433_2818587448(self_2818587449) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym462_2818587450 = getTextDocumentEditor_2818583937(self_2818587449);
      if (isNone_2818584298(rHEX60gensym462_2818587450)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818587438(get_2818584318(rHEX60gensym462_2818587450));
  };

  
}

function addPrevFindResultToSelectionApi_2818587476(HEX3Atmp_2818587435) {
  var result_2818587477 = null;

    result_2818587477 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2818587433_2818587448(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587435, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym467_2818587483 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587488 = [mnewString(0)];
    fmtRes_2818587488[0].push.apply(fmtRes_2818587488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym467_2818587483 || [],fmtRes_2818587488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587477;

}

function setAllFindResultToSelectionScript_2818587491_2818587822(self_2818587823) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym470_2818587824 = getTextDocumentEditor_2818583937(self_2818587823);
      if (isNone_2818584298(rHEX60gensym470_2818587824)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818587496(get_2818584318(rHEX60gensym470_2818587824));
  };

  
}

function setAllFindResultToSelectionApi_2818587850(HEX3Atmp_2818587493) {
  var result_2818587851 = null;

    result_2818587851 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2818587491_2818587822(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587493, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym475_2818587857 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587862 = [mnewString(0)];
    fmtRes_2818587862[0].push.apply(fmtRes_2818587862[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587862, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym475_2818587857 || [],fmtRes_2818587862[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587851;

}

function clearSelectionsScript_2818587880_2818587893(self_2818587894) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym480_2818587895 = getTextDocumentEditor_2818583937(self_2818587894);
      if (isNone_2818584298(rHEX60gensym480_2818587895)) {
      break BeforeRet;
      }
      
    };
    clearSelections_2818587885(get_2818584318(rHEX60gensym480_2818587895));
  };

  
}

function clearSelectionsApi_2818587921(HEX3Atmp_2818587882) {
  var result_2818587922 = null;

    result_2818587922 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearSelectionsScript_2818587880_2818587893(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587882, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym485_2818587928 = [99,108,101,97,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_2818587933 = [mnewString(0)];
    fmtRes_2818587933[0].push.apply(fmtRes_2818587933[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587933, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym485_2818587928 || [],fmtRes_2818587933[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587922;

}

function moveCursorColumnScript_2818587936_2818587964(self_2818587965, distance_2818587966, cursor_2818587967, all_2818587968) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym492_2818587969 = getTextDocumentEditor_2818583937(self_2818587965);
      if (isNone_2818584298(rHEX60gensym492_2818587969)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818587941(get_2818584318(rHEX60gensym492_2818587969), distance_2818587966, cursor_2818587967, all_2818587968);
  };

  
}

function moveCursorColumnApi_2818587998(HEX3Atmp_2818587938) {
      var Temporary5;
      var Temporary7;

  var result_2818587999 = null;

    result_2818587999 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587938))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587938))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2818587936_2818587964(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym497_2818588020 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2818588025 = [mnewString(0)];
    fmtRes_2818588025[0].push.apply(fmtRes_2818588025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym497_2818588020 || [],fmtRes_2818588025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587999;

}

function moveCursorLineScript_2818588044_2818588054(self_2818588055, distance_2818588056, cursor_2818588057, all_2818588058) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym505_2818588059 = getTextDocumentEditor_2818583937(self_2818588055);
      if (isNone_2818584298(rHEX60gensym505_2818588059)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818588049(get_2818584318(rHEX60gensym505_2818588059), distance_2818588056, cursor_2818588057, all_2818588058);
  };

  
}

function moveCursorLineApi_2818588088(HEX3Atmp_2818588046) {
      var Temporary5;
      var Temporary7;

  var result_2818588089 = null;

    result_2818588089 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588046))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588046))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2818588044_2818588054(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym510_2818588110 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2818588115 = [mnewString(0)];
    fmtRes_2818588115[0].push.apply(fmtRes_2818588115[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588115, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym510_2818588110 || [],fmtRes_2818588115[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588089;

}

function moveCursorHomeScript_2818588118_2818588127(self_2818588128, cursor_2818588129, all_2818588130) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_2818588131 = getTextDocumentEditor_2818583937(self_2818588128);
      if (isNone_2818584298(rHEX60gensym517_2818588131)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818588123(get_2818584318(rHEX60gensym517_2818588131), cursor_2818588129, all_2818588130);
  };

  
}

function moveCursorHomeApi_2818588159(HEX3Atmp_2818588120) {
      var Temporary4;
      var Temporary6;

  var result_2818588160 = null;

    result_2818588160 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588120))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588120))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2818588118_2818588127(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_2818588176 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2818588181 = [mnewString(0)];
    fmtRes_2818588181[0].push.apply(fmtRes_2818588181[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588181, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_2818588176 || [],fmtRes_2818588181[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588160;

}

function moveCursorEndScript_2818588186_2818588195(self_2818588196, cursor_2818588197, all_2818588198) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym529_2818588199 = getTextDocumentEditor_2818583937(self_2818588196);
      if (isNone_2818584298(rHEX60gensym529_2818588199)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818588191(get_2818584318(rHEX60gensym529_2818588199), cursor_2818588197, all_2818588198);
  };

  
}

function moveCursorEndApi_2818588227(HEX3Atmp_2818588188) {
      var Temporary4;
      var Temporary6;

  var result_2818588228 = null;

    result_2818588228 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588188))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588188))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2818588186_2818588195(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym534_2818588244 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2818588249 = [mnewString(0)];
    fmtRes_2818588249[0].push.apply(fmtRes_2818588249[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588249, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym534_2818588244 || [],fmtRes_2818588249[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588228;

}

function moveCursorToScript_2818588254_2818588271(self_2818588272, str_2818588273, cursor_2818588274, all_2818588275) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym542_2818588276 = getTextDocumentEditor_2818583937(self_2818588272);
      if (isNone_2818584298(rHEX60gensym542_2818588276)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818588259(get_2818584318(rHEX60gensym542_2818588276), str_2818588273, cursor_2818588274, all_2818588275);
  };

  
}

function moveCursorToApi_2818588305(HEX3Atmp_2818588256) {
      var Temporary5;
      var Temporary7;

  var result_2818588306 = null;

    result_2818588306 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588256))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588256))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2818588254_2818588271(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym547_2818588327 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2818588332 = [mnewString(0)];
    fmtRes_2818588332[0].push.apply(fmtRes_2818588332[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588332, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym547_2818588327 || [],fmtRes_2818588332[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588306;

}

function moveCursorBeforeScript_2818588337_2818588354(self_2818588355, str_2818588356, cursor_2818588357, all_2818588358) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2818588359 = getTextDocumentEditor_2818583937(self_2818588355);
      if (isNone_2818584298(rHEX60gensym556_2818588359)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818588342(get_2818584318(rHEX60gensym556_2818588359), str_2818588356, cursor_2818588357, all_2818588358);
  };

  
}

function moveCursorBeforeApi_2818588388(HEX3Atmp_2818588339) {
      var Temporary5;
      var Temporary7;

  var result_2818588389 = null;

    result_2818588389 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588339))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588339))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2818588337_2818588354(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym561_2818588410 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2818588415 = [mnewString(0)];
    fmtRes_2818588415[0].push.apply(fmtRes_2818588415[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588415, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym561_2818588410 || [],fmtRes_2818588415[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588389;

}

function moveCursorNextFindResultScript_2818588420_2818588429(self_2818588430, cursor_2818588431, all_2818588432) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2818588433 = getTextDocumentEditor_2818583937(self_2818588430);
      if (isNone_2818584298(rHEX60gensym569_2818588433)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818588425(get_2818584318(rHEX60gensym569_2818588433), cursor_2818588431, all_2818588432);
  };

  
}

function moveCursorNextFindResultApi_2818588461(HEX3Atmp_2818588422) {
      var Temporary4;
      var Temporary6;

  var result_2818588462 = null;

    result_2818588462 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588422))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588422))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818588420_2818588429(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym574_2818588478 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588483 = [mnewString(0)];
    fmtRes_2818588483[0].push.apply(fmtRes_2818588483[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588483, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym574_2818588478 || [],fmtRes_2818588483[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588462;

}

function moveCursorPrevFindResultScript_2818588486_2818588495(self_2818588496, cursor_2818588497, all_2818588498) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2818588499 = getTextDocumentEditor_2818583937(self_2818588496);
      if (isNone_2818584298(rHEX60gensym581_2818588499)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818588491(get_2818584318(rHEX60gensym581_2818588499), cursor_2818588497, all_2818588498);
  };

  
}

function moveCursorPrevFindResultApi_2818588527(HEX3Atmp_2818588488) {
      var Temporary4;
      var Temporary6;

  var result_2818588528 = null;

    result_2818588528 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588488))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588488))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818588486_2818588495(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_2818588544 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588549 = [mnewString(0)];
    fmtRes_2818588549[0].push.apply(fmtRes_2818588549[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588549, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_2818588544 || [],fmtRes_2818588549[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588528;

}

function scrollToCursorScript_2818588552_2818588560(self_2818588561, cursor_2818588562) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2818588563 = getTextDocumentEditor_2818583937(self_2818588561);
      if (isNone_2818584298(rHEX60gensym592_2818588563)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818584038(get_2818584318(rHEX60gensym592_2818588563), cursor_2818588562);
  };

  
}

function scrollToCursorApi_2818588590(HEX3Atmp_2818588554) {
      var Temporary4;

  var result_2818588591 = null;

    result_2818588591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588554))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588554, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2818588552_2818588560(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588554, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_2818588602 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2818588607 = [mnewString(0)];
    fmtRes_2818588607[0].push.apply(fmtRes_2818588607[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588607, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_2818588602 || [],fmtRes_2818588607[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588591;

}

function reloadTreesitterScript_2818588610_2818588617(self_2818588618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym601_2818588619 = getTextDocumentEditor_2818583937(self_2818588618);
      if (isNone_2818584298(rHEX60gensym601_2818588619)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818588615(get_2818584318(rHEX60gensym601_2818588619));
  };

  
}

function reloadTreesitterApi_2818588645(HEX3Atmp_2818588612) {
  var result_2818588646 = null;

    result_2818588646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2818588610_2818588617(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588612, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym606_2818588652 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2818588657 = [mnewString(0)];
    fmtRes_2818588657[0].push.apply(fmtRes_2818588657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym606_2818588652 || [],fmtRes_2818588657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588646;

}

function deleteLeftScript_2818588666_2818588681(self_2818588682) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym610_2818588683 = getTextDocumentEditor_2818583937(self_2818588682);
      if (isNone_2818584298(rHEX60gensym610_2818588683)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818588671(get_2818584318(rHEX60gensym610_2818588683));
  };

  
}

function deleteLeftApi_2818588709(HEX3Atmp_2818588668) {
  var result_2818588710 = null;

    result_2818588710 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2818588666_2818588681(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588668, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym615_2818588716 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2818588721 = [mnewString(0)];
    fmtRes_2818588721[0].push.apply(fmtRes_2818588721[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588721, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym615_2818588716 || [],fmtRes_2818588721[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588710;

}

function deleteRightScript_2818588730_2818588745(self_2818588746) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym618_2818588747 = getTextDocumentEditor_2818583937(self_2818588746);
      if (isNone_2818584298(rHEX60gensym618_2818588747)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818588735(get_2818584318(rHEX60gensym618_2818588747));
  };

  
}

function deleteRightApi_2818588773(HEX3Atmp_2818588732) {
  var result_2818588774 = null;

    result_2818588774 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2818588730_2818588745(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588732, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym623_2818588780 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2818588785 = [mnewString(0)];
    fmtRes_2818588785[0].push.apply(fmtRes_2818588785[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588785, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym623_2818588780 || [],fmtRes_2818588785[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588774;

}

function getCommandCountScript_2818588794_2818588802(self_2818588803) {
  var result_2818588804 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym626_2818588805 = getTextDocumentEditor_2818583937(self_2818588803);
      if (isNone_2818584298(rHEX60gensym626_2818588805)) {
      break BeforeRet;
      }
      
    };
    result_2818588804 = getCommandCount_2818588799(get_2818584318(rHEX60gensym626_2818588805));
  };

  return result_2818588804;

}

function getCommandCountApi_2818588832(HEX3Atmp_2818588796) {
  var result_2818588833 = null;

  BeforeRet: {
    result_2818588833 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818588833 = toJson_2818585166(getCommandCountScript_2818588794_2818588802(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588796, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2818588843 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588848 = [mnewString(0)];
    fmtRes_2818588848[0].push.apply(fmtRes_2818588848[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588848, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2818588843 || [],fmtRes_2818588848[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588833;

}

function setCommandCountScript_2818588851_2818588859(self_2818588860, count_2818588861) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2818588862 = getTextDocumentEditor_2818583937(self_2818588860);
      if (isNone_2818584298(rHEX60gensym636_2818588862)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818588856(get_2818584318(rHEX60gensym636_2818588862), count_2818588861);
  };

  
}

function setCommandCountApi_2818588889(HEX3Atmp_2818588853) {
  var result_2818588890 = null;

    result_2818588890 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2818588851_2818588859(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588853, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588853, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2818588901 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588906 = [mnewString(0)];
    fmtRes_2818588906[0].push.apply(fmtRes_2818588906[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588906, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2818588901 || [],fmtRes_2818588906[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588890;

}

function setCommandCountRestoreScript_2818588909_2818588917(self_2818588918, count_2818588919) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym645_2818588920 = getTextDocumentEditor_2818583937(self_2818588918);
      if (isNone_2818584298(rHEX60gensym645_2818588920)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818588914(get_2818584318(rHEX60gensym645_2818588920), count_2818588919);
  };

  
}

function setCommandCountRestoreApi_2818588947(HEX3Atmp_2818588911) {
  var result_2818588948 = null;

    result_2818588948 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2818588909_2818588917(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588911, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588911, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym650_2818588959 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2818588964 = [mnewString(0)];
    fmtRes_2818588964[0].push.apply(fmtRes_2818588964[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588964, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym650_2818588959 || [],fmtRes_2818588964[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588948;

}

function updateCommandCountScript_2818588967_2818588975(self_2818588976, digit_2818588977) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym654_2818588978 = getTextDocumentEditor_2818583937(self_2818588976);
      if (isNone_2818584298(rHEX60gensym654_2818588978)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818588972(get_2818584318(rHEX60gensym654_2818588978), digit_2818588977);
  };

  
}

function updateCommandCountApi_2818589005(HEX3Atmp_2818588969) {
  var result_2818589006 = null;

    result_2818589006 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2818588967_2818588975(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588969, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588969, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym659_2818589017 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818589022 = [mnewString(0)];
    fmtRes_2818589022[0].push.apply(fmtRes_2818589022[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589022, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym659_2818589017 || [],fmtRes_2818589022[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589006;

}

function setFlagScript_2818589025_2818589034(self_2818589035, name_2818589036, value_2818589037) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym664_2818589038 = getTextDocumentEditor_2818583937(self_2818589035);
      if (isNone_2818584298(rHEX60gensym664_2818589038)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818589030(get_2818584318(rHEX60gensym664_2818589038), name_2818589036, value_2818589037);
  };

  
}

function setFlagApi_2818589066(HEX3Atmp_2818589027) {
  var result_2818589067 = null;

    result_2818589067 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2818589025_2818589034(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym669_2818589083 = [115,101,116,70,108,97,103];
    var fmtRes_2818589088 = [mnewString(0)];
    fmtRes_2818589088[0].push.apply(fmtRes_2818589088[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589088, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym669_2818589083 || [],fmtRes_2818589088[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589067;

}

function getFlagScript_2818589091_2818589100(self_2818589101, name_2818589102) {
  var result_2818589103 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym673_2818589104 = getTextDocumentEditor_2818583937(self_2818589101);
      if (isNone_2818584298(rHEX60gensym673_2818589104)) {
      break BeforeRet;
      }
      
    };
    result_2818589103 = getFlag_2818589096(get_2818584318(rHEX60gensym673_2818589104), name_2818589102);
  };

  return result_2818589103;

}

function getFlagApi_2818589132(HEX3Atmp_2818589093) {
  var result_2818589133 = null;

  BeforeRet: {
    result_2818589133 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589133 = toJson_2818589144(getFlagScript_2818589091_2818589100(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589093, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589093, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_2818589153 = [103,101,116,70,108,97,103];
    var fmtRes_2818589158 = [mnewString(0)];
    fmtRes_2818589158[0].push.apply(fmtRes_2818589158[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589158, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_2818589153 || [],fmtRes_2818589158[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589133;

}

function runActionScript_2818589161_2818589175(self_2818589176, action_2818589177, args_2818589178) {
  var result_2818589179 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym684_2818589180 = getTextDocumentEditor_2818583937(self_2818589176);
      if (isNone_2818584298(rHEX60gensym684_2818589180)) {
      break BeforeRet;
      }
      
    };
    result_2818589179 = runAction_2818589166(get_2818584318(rHEX60gensym684_2818589180), action_2818589177, args_2818589178);
  };

  return result_2818589179;

}

function runActionApi_2818589209(HEX3Atmp_2818589163) {
  var result_2818589210 = null;

  BeforeRet: {
    result_2818589210 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2818589210 = toJson_2818589144(runActionScript_2818589161_2818589175(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym690_2818589225 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2818589230 = [mnewString(0)];
    fmtRes_2818589230[0].push.apply(fmtRes_2818589230[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589230, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym690_2818589225 || [],fmtRes_2818589230[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589210;

}

function findWordBoundaryScript_2818589236_2818589272(self_2818589273, cursor_2818589274) {
  var result_2818589275 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym694_2818589276 = getTextDocumentEditor_2818583937(self_2818589273);
      if (isNone_2818584298(rHEX60gensym694_2818589276)) {
      break BeforeRet;
      }
      
    };
    result_2818589275 = nimCopy(result_2818589275, findWordBoundary_2818589241(get_2818584318(rHEX60gensym694_2818589276), cursor_2818589274), NTI2449473548);
  };

  return result_2818589275;

}

function findWordBoundaryApi_2818589304(HEX3Atmp_2818589238) {
  var result_2818589305 = null;

  BeforeRet: {
    result_2818589305 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589305 = toJson_2818585140(findWordBoundaryScript_2818589236_2818589272(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589238, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818589238, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym700_2818589320 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2818589325 = [mnewString(0)];
    fmtRes_2818589325[0].push.apply(fmtRes_2818589325[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589325, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym700_2818589320 || [],fmtRes_2818589325[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589305;

}

function getSelectionForMoveScript_2818589330_2818589433(self_2818589434, cursor_2818589435, move_2818589436, count_2818589437) {
  var result_2818589438 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym710_2818589439 = getTextDocumentEditor_2818583937(self_2818589434);
      if (isNone_2818584298(rHEX60gensym710_2818589439)) {
      break BeforeRet;
      }
      
    };
    result_2818589438 = nimCopy(result_2818589438, getSelectionForMove_2818589335(get_2818584318(rHEX60gensym710_2818589439), cursor_2818589435, move_2818589436, count_2818589437), NTI2449473548);
  };

  return result_2818589438;

}

function getSelectionForMoveApi_2818589469(HEX3Atmp_2818589332) {
      var Temporary6;

  var result_2818589470 = null;

  BeforeRet: {
    result_2818589470 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589332))) {
      Temporary6 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2818589470 = toJson_2818585140(getSelectionForMoveScript_2818589330_2818589433(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym716_2818589495 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2818589500 = [mnewString(0)];
    fmtRes_2818589500[0].push.apply(fmtRes_2818589500[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589500, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym716_2818589495 || [],fmtRes_2818589500[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589470;

}

function setMoveScript_2818589575_2818589771(self_2818589772, args_2818589773) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym732_2818589774 = getTextDocumentEditor_2818583937(self_2818589772);
      if (isNone_2818584298(rHEX60gensym732_2818589774)) {
      break BeforeRet;
      }
      
    };
    setMove_2818589580(get_2818584318(rHEX60gensym732_2818589774), args_2818589773);
  };

  
}

function HEX5BHEX5D_2818589815(a_2818589818, x_2818589819) {
  var result_2818589820 = null;

    if (!((a_2818589818.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818589820 = newJArray_1627390082();
    var xa_2818589831 = x_2818589819.a;
    var L_2818589833 = addInt(subInt(subInt(len_1627392983(a_2818589818), x_2818589819.b), xa_2818589831), 1);
    Label1: {
      var i_2818589838 = 0;
      var i_536872146 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872146 < L_2818589833)) break Label3;
            i_2818589838 = i_536872146;
            add_1627390190(result_2818589820, HEX5BHEX5D_1627393116(a_2818589818, addInt(i_2818589838, xa_2818589831)));
            i_536872146 = addInt(i_536872146, 1);
          }
      };
    };

  return result_2818589820;

}

function setMoveApi_2818589801(HEX3Atmp_2818589577) {
  var result_2818589802 = null;

    result_2818589802 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2818589575_2818589771(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589577, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818589815(HEX3Atmp_2818589577, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym737_2818589839 = [115,101,116,77,111,118,101];
    var fmtRes_2818589844 = [mnewString(0)];
    fmtRes_2818589844[0].push.apply(fmtRes_2818589844[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589844, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym737_2818589839 || [],fmtRes_2818589844[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589802;

}

function deleteMoveScript_2818589867_2818589907(self_2818589908, move_2818589909, which_2818589910, all_2818589911) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym759_2818589912 = getTextDocumentEditor_2818583937(self_2818589908);
      if (isNone_2818584298(rHEX60gensym759_2818589912)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818589872(get_2818584318(rHEX60gensym759_2818589912), move_2818589909, which_2818589910, all_2818589911);
  };

  
}

function deleteMoveApi_2818589941(HEX3Atmp_2818589869) {
      var Temporary5;
      var Temporary7;

  var result_2818589942 = null;

    result_2818589942 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589869))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589869))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2818589867_2818589907(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym764_2818589963 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2818589968 = [mnewString(0)];
    fmtRes_2818589968[0].push.apply(fmtRes_2818589968[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589968, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym764_2818589963 || [],fmtRes_2818589968[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589942;

}

function selectMoveScript_2818589971_2818590036(self_2818590037, move_2818590038, which_2818590039, all_2818590040) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym772_2818590041 = getTextDocumentEditor_2818583937(self_2818590037);
      if (isNone_2818584298(rHEX60gensym772_2818590041)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818589976(get_2818584318(rHEX60gensym772_2818590041), move_2818590038, which_2818590039, all_2818590040);
  };

  
}

function selectMoveApi_2818590070(HEX3Atmp_2818589973) {
      var Temporary5;
      var Temporary7;

  var result_2818590071 = null;

    result_2818590071 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589973))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589973))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2818589971_2818590036(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym777_2818590092 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2818590097 = [mnewString(0)];
    fmtRes_2818590097[0].push.apply(fmtRes_2818590097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym777_2818590092 || [],fmtRes_2818590097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590071;

}

function changeMoveScript_2818590100_2818590140(self_2818590141, move_2818590142, which_2818590143, all_2818590144) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym786_2818590145 = getTextDocumentEditor_2818583937(self_2818590141);
      if (isNone_2818584298(rHEX60gensym786_2818590145)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818590105(get_2818584318(rHEX60gensym786_2818590145), move_2818590142, which_2818590143, all_2818590144);
  };

  
}

function changeMoveApi_2818590174(HEX3Atmp_2818590102) {
      var Temporary5;
      var Temporary7;

  var result_2818590175 = null;

    result_2818590175 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590102))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590102))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2818590100_2818590140(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym791_2818590196 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2818590201 = [mnewString(0)];
    fmtRes_2818590201[0].push.apply(fmtRes_2818590201[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590201, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym791_2818590196 || [],fmtRes_2818590201[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590175;

}

function moveLastScript_2818590204_2818590252(self_2818590253, move_2818590254, which_2818590255, all_2818590256, count_2818590257) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym800_2818590258 = getTextDocumentEditor_2818583937(self_2818590253);
      if (isNone_2818584298(rHEX60gensym800_2818590258)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818590209(get_2818584318(rHEX60gensym800_2818590258), move_2818590254, which_2818590255, all_2818590256, count_2818590257);
  };

  
}

function moveLastApi_2818590288(HEX3Atmp_2818590206) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590289 = null;

    result_2818590289 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary9 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2818590204_2818590252(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym805_2818590315 = [109,111,118,101,76,97,115,116];
    var fmtRes_2818590320 = [mnewString(0)];
    fmtRes_2818590320[0].push.apply(fmtRes_2818590320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym805_2818590315 || [],fmtRes_2818590320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590289;

}

function moveFirstScript_2818590331_2818590379(self_2818590380, move_2818590381, which_2818590382, all_2818590383, count_2818590384) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym815_2818590385 = getTextDocumentEditor_2818583937(self_2818590380);
      if (isNone_2818584298(rHEX60gensym815_2818590385)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818590336(get_2818584318(rHEX60gensym815_2818590385), move_2818590381, which_2818590382, all_2818590383, count_2818590384);
  };

  
}

function moveFirstApi_2818590415(HEX3Atmp_2818590333) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590416 = null;

    result_2818590416 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary9 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2818590331_2818590379(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym820_2818590442 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2818590447 = [mnewString(0)];
    fmtRes_2818590447[0].push.apply(fmtRes_2818590447[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590447, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym820_2818590442 || [],fmtRes_2818590447[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590416;

}

function setSearchQueryScript_2818590450_2818590472(self_2818590473, query_2818590474) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2818590475 = getTextDocumentEditor_2818583937(self_2818590473);
      if (isNone_2818584298(rHEX60gensym827_2818590475)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818590455(get_2818584318(rHEX60gensym827_2818590475), query_2818590474);
  };

  
}

function setSearchQueryApi_2818590502(HEX3Atmp_2818590452) {
  var result_2818590503 = null;

    result_2818590503 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2818590450_2818590472(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590452, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590452, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2818590514 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2818590519 = [mnewString(0)];
    fmtRes_2818590519[0].push.apply(fmtRes_2818590519[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590519, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2818590514 || [],fmtRes_2818590519[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590503;

}

function setSearchQueryFromMoveScript_2818590542_2818590552(self_2818590553, move_2818590554, count_2818590555) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym837_2818590556 = getTextDocumentEditor_2818583937(self_2818590553);
      if (isNone_2818584298(rHEX60gensym837_2818590556)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818590547(get_2818584318(rHEX60gensym837_2818590556), move_2818590554, count_2818590555);
  };

  
}

function setSearchQueryFromMoveApi_2818590584(HEX3Atmp_2818590544) {
      var Temporary5;

  var result_2818590585 = null;

    result_2818590585 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590544))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818590542_2818590552(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym842_2818590601 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2818590606 = [mnewString(0)];
    fmtRes_2818590606[0].push.apply(fmtRes_2818590606[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590606, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym842_2818590601 || [],fmtRes_2818590606[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590585;

}

function gotoDefinitionScript_2818593065_2818593072(self_2818593073) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym882_2818593074 = getTextDocumentEditor_2818583937(self_2818593073);
      if (isNone_2818584298(rHEX60gensym882_2818593074)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818593070(get_2818584318(rHEX60gensym882_2818593074));
  };

  
}

function gotoDefinitionApi_2818593100(HEX3Atmp_2818593067) {
  var result_2818593101 = null;

    result_2818593101 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2818593065_2818593072(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593067, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym887_2818593107 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2818593112 = [mnewString(0)];
    fmtRes_2818593112[0].push.apply(fmtRes_2818593112[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593112, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym887_2818593107 || [],fmtRes_2818593112[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593101;

}

function getCompletionsScript_2818593129_2818593136(self_2818593137) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym891_2818593138 = getTextDocumentEditor_2818583937(self_2818593137);
      if (isNone_2818584298(rHEX60gensym891_2818593138)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818593134(get_2818584318(rHEX60gensym891_2818593138));
  };

  
}

function getCompletionsApi_2818593164(HEX3Atmp_2818593131) {
  var result_2818593165 = null;

    result_2818593165 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2818593129_2818593136(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593131, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym896_2818593171 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593176 = [mnewString(0)];
    fmtRes_2818593176[0].push.apply(fmtRes_2818593176[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593176, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym896_2818593171 || [],fmtRes_2818593176[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593165;

}

function hideCompletionsScript_2818593215_2818593222(self_2818593223) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym900_2818593224 = getTextDocumentEditor_2818583937(self_2818593223);
      if (isNone_2818584298(rHEX60gensym900_2818593224)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818593220(get_2818584318(rHEX60gensym900_2818593224));
  };

  
}

function hideCompletionsApi_2818593250(HEX3Atmp_2818593217) {
  var result_2818593251 = null;

    result_2818593251 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2818593215_2818593222(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593217, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_2818593257 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593262 = [mnewString(0)];
    fmtRes_2818593262[0].push.apply(fmtRes_2818593262[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593262, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_2818593257 || [],fmtRes_2818593262[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593251;

}

function selectPrevCompletionScript_2818593265_2818593289(self_2818593290) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym908_2818593291 = getTextDocumentEditor_2818583937(self_2818593290);
      if (isNone_2818584298(rHEX60gensym908_2818593291)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818593270(get_2818584318(rHEX60gensym908_2818593291));
  };

  
}

function selectPrevCompletionApi_2818593317(HEX3Atmp_2818593267) {
  var result_2818593318 = null;

    result_2818593318 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2818593265_2818593289(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593267, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym913_2818593324 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593329 = [mnewString(0)];
    fmtRes_2818593329[0].push.apply(fmtRes_2818593329[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593329, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym913_2818593324 || [],fmtRes_2818593329[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593318;

}

function selectNextCompletionScript_2818593332_2818593356(self_2818593357) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym917_2818593358 = getTextDocumentEditor_2818583937(self_2818593357);
      if (isNone_2818584298(rHEX60gensym917_2818593358)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818593337(get_2818584318(rHEX60gensym917_2818593358));
  };

  
}

function selectNextCompletionApi_2818593384(HEX3Atmp_2818593334) {
  var result_2818593385 = null;

    result_2818593385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2818593332_2818593356(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593334, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym922_2818593391 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593396 = [mnewString(0)];
    fmtRes_2818593396[0].push.apply(fmtRes_2818593396[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593396, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym922_2818593391 || [],fmtRes_2818593396[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593385;

}

function applySelectedCompletionScript_2818593399_2818593539(self_2818593540) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym926_2818593541 = getTextDocumentEditor_2818583937(self_2818593540);
      if (isNone_2818584298(rHEX60gensym926_2818593541)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818593404(get_2818584318(rHEX60gensym926_2818593541));
  };

  
}

function applySelectedCompletionApi_2818593567(HEX3Atmp_2818593401) {
  var result_2818593568 = null;

    result_2818593568 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2818593399_2818593539(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593401, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym931_2818593574 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593579 = [mnewString(0)];
    fmtRes_2818593579[0].push.apply(fmtRes_2818593579[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593579, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym931_2818593574 || [],fmtRes_2818593579[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593568;

}

function dispatch_2818593606(command_2818593605, arg_2818593604) {
    var Temporary1;

  var result_2818593611 = ({val: null});

    switch (toJSStr(command_2818593605)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi_2818584350(arg_2818593604));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi_2818584512(arg_2818593604));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi_2818584572(arg_2818593604));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818593612(updateTargetColumnApi_2818584634(arg_2818593604));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818593612(invertSelectionApi_2818584748(arg_2818593604));
      break;
    case "insert":
      Temporary1 = some_2818593612(insertApi_2818584829(arg_2818593604));
      break;
    case "delete":
      Temporary1 = some_2818593612(deleteApi_2818585324(arg_2818593604));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593612(selectPrevApi_2818585595(arg_2818593604));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593612(selectNextApi_2818585790(arg_2818593604));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818593612(selectInsideApi_2818585854(arg_2818593604));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818593612(selectInsideCurrentApi_2818585917(arg_2818593604));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818593612(selectLineApi_2818585970(arg_2818593604));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818593612(selectLineCurrentApi_2818586025(arg_2818593604));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818593612(selectParentTsApi_2818586090(arg_2818593604));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818593612(selectParentCurrentTsApi_2818586158(arg_2818593604));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818593612(insertTextApi_2818586215(arg_2818593604));
      break;
    case "undo":
      Temporary1 = some_2818593612(undoApi_2818586331(arg_2818593604));
      break;
    case "redo":
      Temporary1 = some_2818593612(redoApi_2818586411(arg_2818593604));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818593612(scrollTextApi_2818586472(arg_2818593604));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818593612(duplicateLastSelectionApi_2818586627(arg_2818593604));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818593612(addCursorBelowApi_2818586697(arg_2818593604));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818593612(addCursorAboveApi_2818586763(arg_2818593604));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818593612(getPrevFindResultApi_2818587092(arg_2818593604));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818593612(getNextFindResultApi_2818587336(arg_2818593604));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818593612(addNextFindResultToSelectionApi_2818587418(arg_2818593604));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818593612(addPrevFindResultToSelectionApi_2818587476(arg_2818593604));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818593612(setAllFindResultToSelectionApi_2818587850(arg_2818593604));
      break;
    case "clearSelections":
    case "clear-selections":
      Temporary1 = some_2818593612(clearSelectionsApi_2818587921(arg_2818593604));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818593612(moveCursorColumnApi_2818587998(arg_2818593604));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818593612(moveCursorLineApi_2818588088(arg_2818593604));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818593612(moveCursorHomeApi_2818588159(arg_2818593604));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818593612(moveCursorEndApi_2818588227(arg_2818593604));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818593612(moveCursorToApi_2818588305(arg_2818593604));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818593612(moveCursorBeforeApi_2818588388(arg_2818593604));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818593612(moveCursorNextFindResultApi_2818588461(arg_2818593604));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818593612(moveCursorPrevFindResultApi_2818588527(arg_2818593604));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818593612(scrollToCursorApi_2818588590(arg_2818593604));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818593612(reloadTreesitterApi_2818588645(arg_2818593604));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593612(deleteLeftApi_2818588709(arg_2818593604));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593612(deleteRightApi_2818588773(arg_2818593604));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818593612(getCommandCountApi_2818588832(arg_2818593604));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818593612(setCommandCountApi_2818588889(arg_2818593604));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818593612(setCommandCountRestoreApi_2818588947(arg_2818593604));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818593612(updateCommandCountApi_2818589005(arg_2818593604));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593612(setFlagApi_2818589066(arg_2818593604));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593612(getFlagApi_2818589132(arg_2818593604));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818593612(runActionApi_2818589209(arg_2818593604));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818593612(findWordBoundaryApi_2818589304(arg_2818593604));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818593612(getSelectionForMoveApi_2818589469(arg_2818593604));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818593612(setMoveApi_2818589801(arg_2818593604));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818593612(deleteMoveApi_2818589941(arg_2818593604));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818593612(selectMoveApi_2818590070(arg_2818593604));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818593612(changeMoveApi_2818590174(arg_2818593604));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818593612(moveLastApi_2818590288(arg_2818593604));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818593612(moveFirstApi_2818590415(arg_2818593604));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818593612(setSearchQueryApi_2818590502(arg_2818593604));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818593612(setSearchQueryFromMoveApi_2818590584(arg_2818593604));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818593612(gotoDefinitionApi_2818593100(arg_2818593604));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818593612(getCompletionsApi_2818593164(arg_2818593604));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818593612(hideCompletionsApi_2818593250(arg_2818593604));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593612(selectPrevCompletionApi_2818593317(arg_2818593604));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593612(selectNextCompletionApi_2818593384(arg_2818593604));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593612(applySelectedCompletionApi_2818593567(arg_2818593604));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_2818593611 = nimCopy(result_2818593611, Temporary1, NTI2818585760);

  return result_2818593611;

}

function isNone_2818593896(self_2818593898) {
  var result_2818593899 = false;

    result_2818593899 = (self_2818593898.val == null);

  return result_2818593899;

}

function handleActionInternal_2818572659(self_2818572660, action_2818572661, args_2818572662) {
    var Temporary3;

  var result_2818593831 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3)) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3))) {
          break Label1;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593831 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572662;
    if (ConstSet316[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818593850(Temporary3, "elems", toJson_2818584041({id: self_2818572660.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818593879(dispatch_2818593606(action_2818572661, args_2818572662))) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label5;
          if (isNone_2818593896(dispatch_2818593606(action_2818572661, args_2818572662))) {
          break Label4;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593831 = 3;
    break BeforeRet;
    }
    
    result_2818593831 = 1;
    break BeforeRet;
  };

  return result_2818593831;

}

function handleAction_2818572655(self_2818572656, action_2818572657, arg_2818572658) {
  var result_2818593913 = 0;

  BeforeRet: {
    var args_2818593914 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818593915 = null;
      var colontmp__536871985 = null;
      colontmp__536871985 = newStringStream_1660945417(arg_2818572658);
      var p_536871986 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871986[0], colontmp__536871985, [], false);
      try {
      var _ = getTok_1694499270(p_536871986[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871986[0].tok == 1))) break Label5;
            a_2818593915 = parseJson_1627395211(p_536871986[0], false, false, 0);
            add_1627390190(args_2818593914, a_2818593915);
          }
      };
      } finally {
      close_1694498967(p_536871986[0]);
      }
    };
    result_2818593913 = handleActionInternal_2818572659(self_2818572656, action_2818572657, args_2818593914);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818593920 = [mnewString(0)];
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818593920, 0, action_2818572657, []);
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818593920, 0, arg_2818572658, []);
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818593920[0], NTI33554449)]);
    result_2818593913 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818593913;

}

function hasKey_1291847815(t_1291847818, key_1291847819) {
  var result_1291847820 = false;

    var hc_1291847821 = [0];
    result_1291847820 = (0 <= rawGet_1291847822(t_1291847818, key_1291847819, hc_1291847821, 0));

  return result_1291847820;

}

function contains_1291847809(t_1291847812, key_1291847813) {
  var result_1291847814 = false;

  BeforeRet: {
    result_1291847814 = hasKey_1291847815(t_1291847812, key_1291847813);
    break BeforeRet;
  };

  return result_1291847814;

}

function HEX5BHEX5D_1291848114(t_1291848117, key_1291848118) {
  var result_1291848119 = null;
  var result_1291848119_Idx = 0;

    var hcHEX60gensym22_1291848120 = [0];
    var indexHEX60gensym22_1291848127 = rawGet_1291847822(t_1291848117, key_1291848118, hcHEX60gensym22_1291848120, 0);
    if ((0 <= indexHEX60gensym22_1291848127)) {
    result_1291848119 = t_1291848117.data[chckIndx(indexHEX60gensym22_1291848127, 0, (t_1291848117.data).length - 1)]; result_1291848119_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848118);
    }
    

  return [result_1291848119, result_1291848119_Idx];

}

function invokeCallback_1291847762(self_1291847763, context_1291847764, args_1291847765) {
    var Temporary1;

  var result_1291847766 = false;

  BeforeRet: {
    if (!(contains_1291847809(self_1291847763.callbacks, context_1291847764))) {
    result_1291847766 = false;
    break BeforeRet;
    }
    
    var id_1291848184 = (Temporary1 = HEX5BHEX5D_1291848114(self_1291847763.callbacks, context_1291847764), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847766 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848195 = [mnewString(0)];
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2701131945(fmtRes_1291848195, 0, id_1291848184, []);
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848195, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848195[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847766 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847766;

}

function handleInput_2818572663(self_2818572664, input_2818572665) {
  var result_2818593924 = 0;

  BeforeRet: {
    if (invokeCallback_1291847762(self_2818572664.editor, getContextWithMode_2818583609(self_2818572664, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572665))) {
    result_2818593924 = 3;
    break BeforeRet;
    }
    
    insertText_2818586181(self_2818572664, input_2818572665);
    result_2818593924 = 3;
    break BeforeRet;
  };

  return result_2818593924;

}

function toJson_2969578814(self_2969578815, opt_2969578816) {
  var result_2969578817 = null;

    result_2969578817 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969578817, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2969578817, [105,100], newJInt_1627390040(self_2969578815.id));

  return result_2969578817;

}

function none_2969578746() {
  var result_2969578752 = ({val: null});

  return result_2969578752;

}

function some_2969578786(val_2969578788) {
  var result_2969578789 = ({val: null});

    if (!(!((val_2969578788 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969578789.val = val_2969578788;

  return result_2969578789;

}

function getAstDocumentEditor_2969578736(wrapper_2969578737) {
      var Temporary1;

  var result_2969578742 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2969578742 = nimCopy(result_2969578742, none_2969578746(), NTI2969574382);
    break BeforeRet;
    }
    
      var oHEX60gensym531_2969578755 = getEditorForId_1291850661(gEditor, wrapper_2969578737.id);
      if (!isSome_2818583961(oHEX60gensym531_2969578755)) Temporary1 = false; else {        var editor_2969578778 = get_2818583981(oHEX60gensym531_2969578755);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2969578778.m_type, NTI2969568641)) {
    result_2969578742 = nimCopy(result_2969578742, some_2969578786(editor_2969578778), NTI2969574382);
    break BeforeRet;
    }
    
    }
    
    result_2969578742 = nimCopy(result_2969578742, none_2969578746(), NTI2969574382);
    break BeforeRet;
  };

  return result_2969578742;

}

function isNone_2969578845(self_2969578847) {
  var result_2969578848 = false;

    result_2969578848 = (self_2969578847.val == null);

  return result_2969578848;

}

function get_2969578865(self_2969578867) {
  var result_2969578868 = null;

    if (isNone_2969578845(self_2969578867)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969578868 = self_2969578867["val"];

  return result_2969578868;

}

function moveCursorScript_2969578827_2969578837(self_2969578838, direction_2969578839) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_2969578840 = getAstDocumentEditor_2969578736(self_2969578838);
      if (isNone_2969578845(rHEX60gensym536_2969578840)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2969578832(get_2969578865(rHEX60gensym536_2969578840), direction_2969578839);
  };

  
}

function fromJsonHook_2969578818(t_2969578819, jsonNode_2969578820) {
    t_2969578819.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2969578820, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2969578898(a_2969578900, b_2969578901, opt_2969578902) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969578901, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2969578901}));
    }
    
    fromJsonHook_2969578818(a_2969578900, b_2969578901);

  
}

function jsonTo_2969578892(b_2969578894, opt_2969578896) {
  var result_2969578897 = [({id: 0})];

    fromJson_2969578898(result_2969578897[0], b_2969578894, opt_2969578896);

  return result_2969578897[0];

}

function moveCursorApi_2969578890(HEX3Atmp_2969578829) {
  var result_2969578891 = null;

    result_2969578891 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2969578827_2969578837(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969578829, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2969578829, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_2969578914 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2969578919 = [mnewString(0)];
    fmtRes_2969578919[0].push.apply(fmtRes_2969578919[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969578919, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_2969578914 || [],fmtRes_2969578919[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969578891;

}

function moveCursorUpScript_2969578993_2969579012(self_2969579013) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym548_2969579014 = getAstDocumentEditor_2969578736(self_2969579013);
      if (isNone_2969578845(rHEX60gensym548_2969579014)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2969578998(get_2969578865(rHEX60gensym548_2969579014));
  };

  
}

function moveCursorUpApi_2969579040(HEX3Atmp_2969578995) {
  var result_2969579041 = null;

    result_2969579041 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2969578993_2969579012(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969578995, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym553_2969579047 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2969579052 = [mnewString(0)];
    fmtRes_2969579052[0].push.apply(fmtRes_2969579052[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579052, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym553_2969579047 || [],fmtRes_2969579052[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579041;

}

function moveCursorDownScript_2969579055_2969579062(self_2969579063) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym559_2969579064 = getAstDocumentEditor_2969578736(self_2969579063);
      if (isNone_2969578845(rHEX60gensym559_2969579064)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2969579060(get_2969578865(rHEX60gensym559_2969579064));
  };

  
}

function moveCursorDownApi_2969579090(HEX3Atmp_2969579057) {
  var result_2969579091 = null;

    result_2969579091 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2969579055_2969579062(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579057, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym564_2969579097 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2969579102 = [mnewString(0)];
    fmtRes_2969579102[0].push.apply(fmtRes_2969579102[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579102, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym564_2969579097 || [],fmtRes_2969579102[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579091;

}

function moveCursorNextScript_2969579105_2969579119(self_2969579120) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_2969579121 = getAstDocumentEditor_2969578736(self_2969579120);
      if (isNone_2969578845(rHEX60gensym568_2969579121)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2969579110(get_2969578865(rHEX60gensym568_2969579121));
  };

  
}

function moveCursorNextApi_2969579147(HEX3Atmp_2969579107) {
  var result_2969579148 = null;

    result_2969579148 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2969579105_2969579119(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579107, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_2969579154 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2969579159 = [mnewString(0)];
    fmtRes_2969579159[0].push.apply(fmtRes_2969579159[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579159, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_2969579154 || [],fmtRes_2969579159[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579148;

}

function moveCursorPrevScript_2969579173_2969579186(self_2969579187) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym577_2969579188 = getAstDocumentEditor_2969578736(self_2969579187);
      if (isNone_2969578845(rHEX60gensym577_2969579188)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2969579178(get_2969578865(rHEX60gensym577_2969579188));
  };

  
}

function moveCursorPrevApi_2969579214(HEX3Atmp_2969579175) {
  var result_2969579215 = null;

    result_2969579215 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2969579173_2969579186(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579175, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym582_2969579221 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2969579226 = [mnewString(0)];
    fmtRes_2969579226[0].push.apply(fmtRes_2969579226[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579226, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym582_2969579221 || [],fmtRes_2969579226[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579215;

}

function moveCursorNextLineScript_2969579239_2969579272(self_2969579273) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym586_2969579274 = getAstDocumentEditor_2969578736(self_2969579273);
      if (isNone_2969578845(rHEX60gensym586_2969579274)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2969579244(get_2969578865(rHEX60gensym586_2969579274));
  };

  
}

function moveCursorNextLineApi_2969579300(HEX3Atmp_2969579241) {
  var result_2969579301 = null;

    result_2969579301 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2969579239_2969579272(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579241, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym591_2969579307 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2969579312 = [mnewString(0)];
    fmtRes_2969579312[0].push.apply(fmtRes_2969579312[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579312, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym591_2969579307 || [],fmtRes_2969579312[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579301;

}

function moveCursorPrevLineScript_2969579324_2969579357(self_2969579358) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym595_2969579359 = getAstDocumentEditor_2969578736(self_2969579358);
      if (isNone_2969578845(rHEX60gensym595_2969579359)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2969579329(get_2969578865(rHEX60gensym595_2969579359));
  };

  
}

function moveCursorPrevLineApi_2969579385(HEX3Atmp_2969579326) {
  var result_2969579386 = null;

    result_2969579386 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2969579324_2969579357(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579326, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_2969579392 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2969579397 = [mnewString(0)];
    fmtRes_2969579397[0].push.apply(fmtRes_2969579397[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579397, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_2969579392 || [],fmtRes_2969579397[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579386;

}

function selectContainingScript_2969579410_2969579574(self_2969579575, container_2969579576) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym605_2969579577 = getAstDocumentEditor_2969578736(self_2969579575);
      if (isNone_2969578845(rHEX60gensym605_2969579577)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2969579415(get_2969578865(rHEX60gensym605_2969579577), container_2969579576);
  };

  
}

function selectContainingApi_2969579604(HEX3Atmp_2969579412) {
  var result_2969579605 = null;

    result_2969579605 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2969579410_2969579574(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579412, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969579412, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym610_2969579616 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2969579621 = [mnewString(0)];
    fmtRes_2969579621[0].push.apply(fmtRes_2969579621[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579621, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym610_2969579616 || [],fmtRes_2969579621[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579605;

}

function deleteSelectedScript_2969579624_2969579634(self_2969579635) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym619_2969579636 = getAstDocumentEditor_2969578736(self_2969579635);
      if (isNone_2969578845(rHEX60gensym619_2969579636)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2969579629(get_2969578865(rHEX60gensym619_2969579636));
  };

  
}

function deleteSelectedApi_2969579662(HEX3Atmp_2969579626) {
  var result_2969579663 = null;

    result_2969579663 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2969579624_2969579634(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579626, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_2969579669 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2969579674 = [mnewString(0)];
    fmtRes_2969579674[0].push.apply(fmtRes_2969579674[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579674, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_2969579669 || [],fmtRes_2969579674[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579663;

}

function copySelectedScript_2969579731_2969579741(self_2969579742) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym627_2969579743 = getAstDocumentEditor_2969578736(self_2969579742);
      if (isNone_2969578845(rHEX60gensym627_2969579743)) {
      break BeforeRet;
      }
      
    };
    copySelected_2969579736(get_2969578865(rHEX60gensym627_2969579743));
  };

  
}

function copySelectedApi_2969579769(HEX3Atmp_2969579733) {
  var result_2969579770 = null;

    result_2969579770 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2969579731_2969579741(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579733, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2969579776 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2969579781 = [mnewString(0)];
    fmtRes_2969579781[0].push.apply(fmtRes_2969579781[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579781, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2969579776 || [],fmtRes_2969579781[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579770;

}

function finishEditScript_2969579799_2969579849(self_2969579850, apply_2969579851) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2969579852 = getAstDocumentEditor_2969578736(self_2969579850);
      if (isNone_2969578845(rHEX60gensym636_2969579852)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2969575583(get_2969578865(rHEX60gensym636_2969579852), apply_2969579851);
  };

  
}

function finishEditApi_2969579879(HEX3Atmp_2969579801) {
  var result_2969579880 = null;

    result_2969579880 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2969579799_2969579849(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579801, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2969579801, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2969579891 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2969579896 = [mnewString(0)];
    fmtRes_2969579896[0].push.apply(fmtRes_2969579896[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579896, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2969579891 || [],fmtRes_2969579896[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579880;

}

function undoScript2_2969579939_2969579972(self_2969579973) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym647_2969579974 = getAstDocumentEditor_2969578736(self_2969579973);
      if (isNone_2969578845(rHEX60gensym647_2969579974)) {
      break BeforeRet;
      }
      
    };
    undo_2969579944(get_2969578865(rHEX60gensym647_2969579974));
  };

  
}

function undoApi2_2969580000(HEX3Atmp_2969579941) {
  var result_2969580001 = null;

    result_2969580001 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2969579939_2969579972(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969579941, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym652_2969580007 = [117,110,100,111];
    var fmtRes_2969580012 = [mnewString(0)];
    fmtRes_2969580012[0].push.apply(fmtRes_2969580012[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580012, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym652_2969580007 || [],fmtRes_2969580012[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580001;

}

function redoScript2_2969580016_2969580049(self_2969580050) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym656_2969580051 = getAstDocumentEditor_2969578736(self_2969580050);
      if (isNone_2969578845(rHEX60gensym656_2969580051)) {
      break BeforeRet;
      }
      
    };
    redo_2969580021(get_2969578865(rHEX60gensym656_2969580051));
  };

  
}

function redoApi2_2969580077(HEX3Atmp_2969580018) {
  var result_2969580078 = null;

    result_2969580078 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2969580016_2969580049(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580018, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym661_2969580084 = [114,101,100,111];
    var fmtRes_2969580089 = [mnewString(0)];
    fmtRes_2969580089[0].push.apply(fmtRes_2969580089[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580089, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym661_2969580084 || [],fmtRes_2969580089[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580078;

}

function insertAfterSmartScript_2969580092_2969580217(self_2969580218, nodeTemplate_2969580219) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym666_2969580220 = getAstDocumentEditor_2969578736(self_2969580218);
      if (isNone_2969578845(rHEX60gensym666_2969580220)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2969580097(get_2969578865(rHEX60gensym666_2969580220), nodeTemplate_2969580219);
  };

  
}

function insertAfterSmartApi_2969580247(HEX3Atmp_2969580094) {
  var result_2969580248 = null;

    result_2969580248 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2969580092_2969580217(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580094, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580094, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym671_2969580259 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2969580264 = [mnewString(0)];
    fmtRes_2969580264[0].push.apply(fmtRes_2969580264[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580264, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym671_2969580259 || [],fmtRes_2969580264[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580248;

}

function insertAfterScript_2969580447_2969580540(self_2969580541, nodeTemplate_2969580542) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym679_2969580543 = getAstDocumentEditor_2969578736(self_2969580541);
      if (isNone_2969578845(rHEX60gensym679_2969580543)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2969580452(get_2969578865(rHEX60gensym679_2969580543), nodeTemplate_2969580542);
  };

  
}

function insertAfterApi_2969580570(HEX3Atmp_2969580449) {
  var result_2969580571 = null;

    result_2969580571 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2969580447_2969580540(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580449, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580449, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym684_2969580582 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2969580587 = [mnewString(0)];
    fmtRes_2969580587[0].push.apply(fmtRes_2969580587[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580587, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym684_2969580582 || [],fmtRes_2969580587[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580571;

}

function insertBeforeScript_2969580602_2969580694(self_2969580695, nodeTemplate_2969580696) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym691_2969580697 = getAstDocumentEditor_2969578736(self_2969580695);
      if (isNone_2969578845(rHEX60gensym691_2969580697)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2969580607(get_2969578865(rHEX60gensym691_2969580697), nodeTemplate_2969580696);
  };

  
}

function insertBeforeApi_2969580724(HEX3Atmp_2969580604) {
  var result_2969580725 = null;

    result_2969580725 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2969580602_2969580694(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580604, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580604, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym696_2969580736 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2969580741 = [mnewString(0)];
    fmtRes_2969580741[0].push.apply(fmtRes_2969580741[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580741, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym696_2969580736 || [],fmtRes_2969580741[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580725;

}

function insertChildScript_2969580756_2969580847(self_2969580848, nodeTemplate_2969580849) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym703_2969580850 = getAstDocumentEditor_2969578736(self_2969580848);
      if (isNone_2969578845(rHEX60gensym703_2969580850)) {
      break BeforeRet;
      }
      
    };
    insertChild_2969580761(get_2969578865(rHEX60gensym703_2969580850), nodeTemplate_2969580849);
  };

  
}

function insertChildApi_2969580877(HEX3Atmp_2969580758) {
  var result_2969580878 = null;

    result_2969580878 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2969580756_2969580847(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580758, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580758, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym708_2969580889 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2969580894 = [mnewString(0)];
    fmtRes_2969580894[0].push.apply(fmtRes_2969580894[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580894, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym708_2969580889 || [],fmtRes_2969580894[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580878;

}

function replaceScript_2969580909_2969580954(self_2969580955, nodeTemplate_2969580956) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_2969580957 = getAstDocumentEditor_2969578736(self_2969580955);
      if (isNone_2969578845(rHEX60gensym715_2969580957)) {
      break BeforeRet;
      }
      
    };
    replace_2969580914(get_2969578865(rHEX60gensym715_2969580957), nodeTemplate_2969580956);
  };

  
}

function replaceApi_2969580984(HEX3Atmp_2969580911) {
  var result_2969580985 = null;

    result_2969580985 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2969580909_2969580954(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969580911, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580911, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_2969580996 = [114,101,112,108,97,99,101];
    var fmtRes_2969581001 = [mnewString(0)];
    fmtRes_2969581001[0].push.apply(fmtRes_2969581001[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581001, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_2969580996 || [],fmtRes_2969581001[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580985;

}

function replaceEmptyScript_2969581016_2969581065(self_2969581066, nodeTemplate_2969581067) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym725_2969581068 = getAstDocumentEditor_2969578736(self_2969581066);
      if (isNone_2969578845(rHEX60gensym725_2969581068)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2969581021(get_2969578865(rHEX60gensym725_2969581068), nodeTemplate_2969581067);
  };

  
}

function replaceEmptyApi_2969581095(HEX3Atmp_2969581018) {
  var result_2969581096 = null;

    result_2969581096 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2969581016_2969581065(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581018, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581018, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2969581107 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2969581112 = [mnewString(0)];
    fmtRes_2969581112[0].push.apply(fmtRes_2969581112[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581112, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2969581107 || [],fmtRes_2969581112[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581096;

}

function replaceParentScript_2969581127_2969581144(self_2969581145) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym734_2969581146 = getAstDocumentEditor_2969578736(self_2969581145);
      if (isNone_2969578845(rHEX60gensym734_2969581146)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2969581132(get_2969578865(rHEX60gensym734_2969581146));
  };

  
}

function replaceParentApi_2969581172(HEX3Atmp_2969581129) {
  var result_2969581173 = null;

    result_2969581173 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2969581127_2969581144(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581129, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_2969581179 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2969581184 = [mnewString(0)];
    fmtRes_2969581184[0].push.apply(fmtRes_2969581184[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581184, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_2969581179 || [],fmtRes_2969581184[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581173;

}

function wrapScript_2969581187_2969581256(self_2969581257, nodeTemplate_2969581258) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym743_2969581259 = getAstDocumentEditor_2969578736(self_2969581257);
      if (isNone_2969578845(rHEX60gensym743_2969581259)) {
      break BeforeRet;
      }
      
    };
    wrap_2969581192(get_2969578865(rHEX60gensym743_2969581259), nodeTemplate_2969581258);
  };

  
}

function wrapApi_2969581286(HEX3Atmp_2969581189) {
  var result_2969581287 = null;

    result_2969581287 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2969581187_2969581256(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581189, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581189, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym748_2969581298 = [119,114,97,112];
    var fmtRes_2969581303 = [mnewString(0)];
    fmtRes_2969581303[0].push.apply(fmtRes_2969581303[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581303, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym748_2969581298 || [],fmtRes_2969581303[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581287;

}

function editPrevEmptyScript_2969581330_2969581343(self_2969581344) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2969581345 = getAstDocumentEditor_2969578736(self_2969581344);
      if (isNone_2969578845(rHEX60gensym752_2969581345)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2969581335(get_2969578865(rHEX60gensym752_2969581345));
  };

  
}

function editPrevEmptyApi_2969581371(HEX3Atmp_2969581332) {
  var result_2969581372 = null;

    result_2969581372 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2969581330_2969581343(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581332, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2969581378 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2969581383 = [mnewString(0)];
    fmtRes_2969581383[0].push.apply(fmtRes_2969581383[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581383, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2969581378 || [],fmtRes_2969581383[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581372;

}

function editNextEmptyScript_2969581393_2969581414(self_2969581415) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym761_2969581416 = getAstDocumentEditor_2969578736(self_2969581415);
      if (isNone_2969578845(rHEX60gensym761_2969581416)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2969581398(get_2969578865(rHEX60gensym761_2969581416));
  };

  
}

function editNextEmptyApi_2969581442(HEX3Atmp_2969581395) {
  var result_2969581443 = null;

    result_2969581443 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2969581393_2969581414(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581395, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_2969581449 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2969581454 = [mnewString(0)];
    fmtRes_2969581454[0].push.apply(fmtRes_2969581454[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581454, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_2969581449 || [],fmtRes_2969581454[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581443;

}

function renameScript_2969581470_2969581477(self_2969581478) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym770_2969581479 = getAstDocumentEditor_2969578736(self_2969581478);
      if (isNone_2969578845(rHEX60gensym770_2969581479)) {
      break BeforeRet;
      }
      
    };
    rename_2969581475(get_2969578865(rHEX60gensym770_2969581479));
  };

  
}

function renameApi_2969581505(HEX3Atmp_2969581472) {
  var result_2969581506 = null;

    result_2969581506 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2969581470_2969581477(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581472, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_2969581512 = [114,101,110,97,109,101];
    var fmtRes_2969581517 = [mnewString(0)];
    fmtRes_2969581517[0].push.apply(fmtRes_2969581517[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581517, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_2969581512 || [],fmtRes_2969581517[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581506;

}

function selectPrevCompletionScript2_2969581520_2969581544(self_2969581545) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym778_2969581546 = getAstDocumentEditor_2969578736(self_2969581545);
      if (isNone_2969578845(rHEX60gensym778_2969581546)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2969581525(get_2969578865(rHEX60gensym778_2969581546));
  };

  
}

function selectPrevCompletionApi2_2969581572(HEX3Atmp_2969581522) {
  var result_2969581573 = null;

    result_2969581573 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2969581520_2969581544(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581522, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym783_2969581579 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581584 = [mnewString(0)];
    fmtRes_2969581584[0].push.apply(fmtRes_2969581584[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581584, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym783_2969581579 || [],fmtRes_2969581584[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581573;

}

function selectNextCompletionScript2_2969581587_2969581611(self_2969581612) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym787_2969581613 = getAstDocumentEditor_2969578736(self_2969581612);
      if (isNone_2969578845(rHEX60gensym787_2969581613)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2969581592(get_2969578865(rHEX60gensym787_2969581613));
  };

  
}

function selectNextCompletionApi2_2969581639(HEX3Atmp_2969581589) {
  var result_2969581640 = null;

    result_2969581640 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2969581587_2969581611(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581589, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym792_2969581646 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581651 = [mnewString(0)];
    fmtRes_2969581651[0].push.apply(fmtRes_2969581651[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581651, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym792_2969581646 || [],fmtRes_2969581651[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581640;

}

function applySelectedCompletionScript2_2969581654_2969581774(self_2969581775) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym796_2969581776 = getAstDocumentEditor_2969578736(self_2969581775);
      if (isNone_2969578845(rHEX60gensym796_2969581776)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2969581659(get_2969578865(rHEX60gensym796_2969581776));
  };

  
}

function applySelectedCompletionApi2_2969581802(HEX3Atmp_2969581656) {
  var result_2969581803 = null;

    result_2969581803 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2969581654_2969581774(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581656, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym801_2969581809 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581814 = [mnewString(0)];
    fmtRes_2969581814[0].push.apply(fmtRes_2969581814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym801_2969581809 || [],fmtRes_2969581814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581803;

}

function cancelAndNextCompletionScript_2969581865_2969581872(self_2969581873) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym811_2969581874 = getAstDocumentEditor_2969578736(self_2969581873);
      if (isNone_2969578845(rHEX60gensym811_2969581874)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2969581870(get_2969578865(rHEX60gensym811_2969581874));
  };

  
}

function cancelAndNextCompletionApi_2969581900(HEX3Atmp_2969581867) {
  var result_2969581901 = null;

    result_2969581901 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2969581865_2969581872(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581867, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym816_2969581907 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581912 = [mnewString(0)];
    fmtRes_2969581912[0].push.apply(fmtRes_2969581912[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581912, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym816_2969581907 || [],fmtRes_2969581912[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581901;

}

function cancelAndPrevCompletionScript_2969581915_2969581922(self_2969581923) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym819_2969581924 = getAstDocumentEditor_2969578736(self_2969581923);
      if (isNone_2969578845(rHEX60gensym819_2969581924)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2969581920(get_2969578865(rHEX60gensym819_2969581924));
  };

  
}

function cancelAndPrevCompletionApi_2969581950(HEX3Atmp_2969581917) {
  var result_2969581951 = null;

    result_2969581951 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2969581915_2969581922(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581917, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym824_2969581957 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581962 = [mnewString(0)];
    fmtRes_2969581962[0].push.apply(fmtRes_2969581962[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581962, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym824_2969581957 || [],fmtRes_2969581962[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581951;

}

function cancelAndDeleteScript_2969581965_2969581975(self_2969581976) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2969581977 = getAstDocumentEditor_2969578736(self_2969581976);
      if (isNone_2969578845(rHEX60gensym827_2969581977)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2969581970(get_2969578865(rHEX60gensym827_2969581977));
  };

  
}

function cancelAndDeleteApi_2969582003(HEX3Atmp_2969581967) {
  var result_2969582004 = null;

    result_2969582004 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2969581965_2969581975(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969581967, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2969582010 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2969582015 = [mnewString(0)];
    fmtRes_2969582015[0].push.apply(fmtRes_2969582015[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582015, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2969582010 || [],fmtRes_2969582015[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582004;

}

function moveNodeToPrevSpaceScript_2969582018_2969582129(self_2969582130) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym835_2969582131 = getAstDocumentEditor_2969578736(self_2969582130);
      if (isNone_2969578845(rHEX60gensym835_2969582131)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2969582023(get_2969578865(rHEX60gensym835_2969582131));
  };

  
}

function moveNodeToPrevSpaceApi_2969582157(HEX3Atmp_2969582020) {
  var result_2969582158 = null;

    result_2969582158 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2969582018_2969582129(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582020, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym840_2969582164 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2969582169 = [mnewString(0)];
    fmtRes_2969582169[0].push.apply(fmtRes_2969582169[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582169, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym840_2969582164 || [],fmtRes_2969582169[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582158;

}

function moveNodeToNextSpaceScript_2969582180_2969582292(self_2969582293) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2969582294 = getAstDocumentEditor_2969578736(self_2969582293);
      if (isNone_2969578845(rHEX60gensym848_2969582294)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2969582185(get_2969578865(rHEX60gensym848_2969582294));
  };

  
}

function moveNodeToNextSpaceApi_2969582320(HEX3Atmp_2969582182) {
  var result_2969582321 = null;

    result_2969582321 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2969582180_2969582292(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582182, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym853_2969582327 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2969582332 = [mnewString(0)];
    fmtRes_2969582332[0].push.apply(fmtRes_2969582332[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582332, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym853_2969582327 || [],fmtRes_2969582332[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582321;

}

function selectPrevScript2_2969582346_2969582353(self_2969582354) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym860_2969582355 = getAstDocumentEditor_2969578736(self_2969582354);
      if (isNone_2969578845(rHEX60gensym860_2969582355)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2969582351(get_2969578865(rHEX60gensym860_2969582355));
  };

  
}

function selectPrevApi2_2969582381(HEX3Atmp_2969582348) {
  var result_2969582382 = null;

    result_2969582382 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2969582346_2969582353(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582348, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym865_2969582388 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2969582393 = [mnewString(0)];
    fmtRes_2969582393[0].push.apply(fmtRes_2969582393[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582393, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym865_2969582388 || [],fmtRes_2969582393[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582382;

}

function selectNextScript2_2969582397_2969582404(self_2969582405) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym868_2969582406 = getAstDocumentEditor_2969578736(self_2969582405);
      if (isNone_2969578845(rHEX60gensym868_2969582406)) {
      break BeforeRet;
      }
      
    };
    selectNext_2969582402(get_2969578865(rHEX60gensym868_2969582406));
  };

  
}

function selectNextApi2_2969582432(HEX3Atmp_2969582399) {
  var result_2969582433 = null;

    result_2969582433 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2969582397_2969582404(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582399, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym873_2969582439 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2969582444 = [mnewString(0)];
    fmtRes_2969582444[0].push.apply(fmtRes_2969582444[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582444, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym873_2969582439 || [],fmtRes_2969582444[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582433;

}

function openGotoSymbolPopupScript_2969582465_2969582711(self_2969582712) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym877_2969582713 = getAstDocumentEditor_2969578736(self_2969582712);
      if (isNone_2969578845(rHEX60gensym877_2969582713)) {
      break BeforeRet;
      }
      
    };
    openGotoSymbolPopup_2969582470(get_2969578865(rHEX60gensym877_2969582713));
  };

  
}

function openGotoSymbolPopupApi_2969582739(HEX3Atmp_2969582467) {
  var result_2969582740 = null;

    result_2969582740 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openGotoSymbolPopupScript_2969582465_2969582711(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582467, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym882_2969582746 = [111,112,101,110,71,111,116,111,83,121,109,98,111,108,80,111,112,117,112];
    var fmtRes_2969582751 = [mnewString(0)];
    fmtRes_2969582751[0].push.apply(fmtRes_2969582751[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582751, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym882_2969582746 || [],fmtRes_2969582751[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582740;

}

function gotoScript_2969582887_2969583317(self_2969583318, where_2969583319) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym890_2969583320 = getAstDocumentEditor_2969578736(self_2969583318);
      if (isNone_2969578845(rHEX60gensym890_2969583320)) {
      break BeforeRet;
      }
      
    };
    goto_2969582892(get_2969578865(rHEX60gensym890_2969583320), where_2969583319);
  };

  
}

function gotoApi_2969583347(HEX3Atmp_2969582889) {
  var result_2969583348 = null;

    result_2969583348 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2969582887_2969583317(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969582889, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969582889, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym895_2969583359 = [103,111,116,111];
    var fmtRes_2969583364 = [mnewString(0)];
    fmtRes_2969583364[0].push.apply(fmtRes_2969583364[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583364, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym895_2969583359 || [],fmtRes_2969583364[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583348;

}

function runSelectedFunctionScript_2969583457_2969583683(self_2969583684) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym913_2969583685 = getAstDocumentEditor_2969578736(self_2969583684);
      if (isNone_2969578845(rHEX60gensym913_2969583685)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2969583462(get_2969578865(rHEX60gensym913_2969583685));
  };

  
}

function runSelectedFunctionApi_2969583711(HEX3Atmp_2969583459) {
  var result_2969583712 = null;

    result_2969583712 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2969583457_2969583683(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969583459, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym918_2969583718 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2969583723 = [mnewString(0)];
    fmtRes_2969583723[0].push.apply(fmtRes_2969583723[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583723, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym918_2969583718 || [],fmtRes_2969583723[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583712;

}

function toggleOptionScript_2969583735_2969583743(self_2969583744, name_2969583745) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym936_2969583746 = getAstDocumentEditor_2969578736(self_2969583744);
      if (isNone_2969578845(rHEX60gensym936_2969583746)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2969583740(get_2969578865(rHEX60gensym936_2969583746), name_2969583745);
  };

  
}

function toggleOptionApi_2969583773(HEX3Atmp_2969583737) {
  var result_2969583774 = null;

    result_2969583774 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2969583735_2969583743(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969583737, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583737, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym941_2969583785 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2969583790 = [mnewString(0)];
    fmtRes_2969583790[0].push.apply(fmtRes_2969583790[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583790, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym941_2969583785 || [],fmtRes_2969583790[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583774;

}

function runLastCommandScript_2969583797_2969583805(self_2969583806, which_2969583807) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym945_2969583808 = getAstDocumentEditor_2969578736(self_2969583806);
      if (isNone_2969578845(rHEX60gensym945_2969583808)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2969583802(get_2969578865(rHEX60gensym945_2969583808), which_2969583807);
  };

  
}

function runLastCommandApi_2969583835(HEX3Atmp_2969583799) {
  var result_2969583836 = null;

    result_2969583836 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2969583797_2969583805(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969583799, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583799, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym950_2969583847 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2969583852 = [mnewString(0)];
    fmtRes_2969583852[0].push.apply(fmtRes_2969583852[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583852, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym950_2969583847 || [],fmtRes_2969583852[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583836;

}

function selectCenterNodeScript_2969583855_2969584119(self_2969584120) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym953_2969584121 = getAstDocumentEditor_2969578736(self_2969584120);
      if (isNone_2969578845(rHEX60gensym953_2969584121)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2969583860(get_2969578865(rHEX60gensym953_2969584121));
  };

  
}

function selectCenterNodeApi_2969584147(HEX3Atmp_2969583857) {
  var result_2969584148 = null;

    result_2969584148 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2969583855_2969584119(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969583857, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym958_2969584154 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2969584159 = [mnewString(0)];
    fmtRes_2969584159[0].push.apply(fmtRes_2969584159[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584159, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym958_2969584154 || [],fmtRes_2969584159[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584148;

}

function scrollScript_2969584191_2969584203(self_2969584204, amount_2969584205) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym970_2969584206 = getAstDocumentEditor_2969578736(self_2969584204);
      if (isNone_2969578845(rHEX60gensym970_2969584206)) {
      break BeforeRet;
      }
      
    };
    scroll_2969584196(get_2969578865(rHEX60gensym970_2969584206), amount_2969584205);
  };

  
}

function scrollApi_2969584233(HEX3Atmp_2969584193) {
  var result_2969584234 = null;

    result_2969584234 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2969584191_2969584203(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584193, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_2969584193, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym975_2969584245 = [115,99,114,111,108,108];
    var fmtRes_2969584250 = [mnewString(0)];
    fmtRes_2969584250[0].push.apply(fmtRes_2969584250[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584250, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym975_2969584245 || [],fmtRes_2969584250[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584234;

}

function scrollOutputScript_2969584253_2969584272(self_2969584273, arg_2969584274) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym979_2969584275 = getAstDocumentEditor_2969578736(self_2969584273);
      if (isNone_2969578845(rHEX60gensym979_2969584275)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2969584258(get_2969578865(rHEX60gensym979_2969584275), arg_2969584274);
  };

  
}

function scrollOutputApi_2969584302(HEX3Atmp_2969584255) {
  var result_2969584303 = null;

    result_2969584303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2969584253_2969584272(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584255, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584255, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym984_2969584314 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2969584319 = [mnewString(0)];
    fmtRes_2969584319[0].push.apply(fmtRes_2969584319[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584319, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym984_2969584314 || [],fmtRes_2969584319[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584303;

}

function dumpContextScript_2969584322_2969584329(self_2969584330) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym987_2969584331 = getAstDocumentEditor_2969578736(self_2969584330);
      if (isNone_2969578845(rHEX60gensym987_2969584331)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2969584327(get_2969578865(rHEX60gensym987_2969584331));
  };

  
}

function dumpContextApi_2969584357(HEX3Atmp_2969584324) {
  var result_2969584358 = null;

    result_2969584358 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2969584322_2969584329(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584324, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym992_2969584364 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2969584369 = [mnewString(0)];
    fmtRes_2969584369[0].push.apply(fmtRes_2969584369[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584369, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym992_2969584364 || [],fmtRes_2969584369[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584358;

}

function setModeScript2_2969584464_2969584504(self_2969584505, mode_2969584506) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym996_2969584507 = getAstDocumentEditor_2969578736(self_2969584505);
      if (isNone_2969578845(rHEX60gensym996_2969584507)) {
      break BeforeRet;
      }
      
    };
    setMode_2969584469(get_2969578865(rHEX60gensym996_2969584507), mode_2969584506);
  };

  
}

function setModeApi2_2969584534(HEX3Atmp_2969584466) {
  var result_2969584535 = null;

    result_2969584535 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2969584464_2969584504(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584466, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584466, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1001_2969584546 = [115,101,116,77,111,100,101];
    var fmtRes_2969584551 = [mnewString(0)];
    fmtRes_2969584551[0].push.apply(fmtRes_2969584551[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584551, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1001_2969584546 || [],fmtRes_2969584551[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584535;

}

function modeScript2_2969584555_2969584563(self_2969584564) {
  var result_2969584565 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1007_2969584566 = getAstDocumentEditor_2969578736(self_2969584564);
      if (isNone_2969578845(rHEX60gensym1007_2969584566)) {
      break BeforeRet;
      }
      
    };
    result_2969584565 = nimCopy(null, mode_2969584560(get_2969578865(rHEX60gensym1007_2969584566)), NTI33554449);
  };

  return result_2969584565;

}

function modeApi2_2969584593(HEX3Atmp_2969584557) {
  var result_2969584594 = null;

  BeforeRet: {
    result_2969584594 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2969584594 = toJson_1811939932(modeScript2_2969584555_2969584563(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584557, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1013_2969584604 = [109,111,100,101];
    var fmtRes_2969584609 = [mnewString(0)];
    fmtRes_2969584609[0].push.apply(fmtRes_2969584609[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584609, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1013_2969584604 || [],fmtRes_2969584609[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584594;

}

function getContextWithModeScript2_2969584612_2969584621(self_2969584622, context_2969584623) {
  var result_2969584624 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1017_2969584625 = getAstDocumentEditor_2969578736(self_2969584622);
      if (isNone_2969578845(rHEX60gensym1017_2969584625)) {
      break BeforeRet;
      }
      
    };
    result_2969584624 = nimCopy(null, getContextWithMode_2969584617(get_2969578865(rHEX60gensym1017_2969584625), context_2969584623), NTI33554449);
  };

  return result_2969584624;

}

function getContextWithModeApi2_2969584653(HEX3Atmp_2969584614) {
  var result_2969584654 = null;

  BeforeRet: {
    result_2969584654 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2969584654 = toJson_1811939932(getContextWithModeScript2_2969584612_2969584621(jsonTo_2969578892(HEX5BHEX5D_1627393116(HEX3Atmp_2969584614, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584614, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1023_2969584669 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2969584674 = [mnewString(0)];
    fmtRes_2969584674[0].push.apply(fmtRes_2969584674[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584674, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1023_2969584669 || [],fmtRes_2969584674[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584654;

}

function dispatch_2969584679(command_2969584678, arg_2969584677) {
    var Temporary1;

  var result_2969584681 = ({val: null});

    switch (toJSStr(command_2969584678)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818593612(moveCursorApi_2969578890(arg_2969584677));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593612(moveCursorUpApi_2969579040(arg_2969584677));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593612(moveCursorDownApi_2969579090(arg_2969584677));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818593612(moveCursorNextApi_2969579147(arg_2969584677));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818593612(moveCursorPrevApi_2969579214(arg_2969584677));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818593612(moveCursorNextLineApi_2969579300(arg_2969584677));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818593612(moveCursorPrevLineApi_2969579385(arg_2969584677));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818593612(selectContainingApi_2969579604(arg_2969584677));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818593612(deleteSelectedApi_2969579662(arg_2969584677));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818593612(copySelectedApi_2969579769(arg_2969584677));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818593612(finishEditApi_2969579879(arg_2969584677));
      break;
    case "undo":
      Temporary1 = some_2818593612(undoApi2_2969580000(arg_2969584677));
      break;
    case "redo":
      Temporary1 = some_2818593612(redoApi2_2969580077(arg_2969584677));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818593612(insertAfterSmartApi_2969580247(arg_2969584677));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818593612(insertAfterApi_2969580570(arg_2969584677));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818593612(insertBeforeApi_2969580724(arg_2969584677));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818593612(insertChildApi_2969580877(arg_2969584677));
      break;
    case "replace":
      Temporary1 = some_2818593612(replaceApi_2969580984(arg_2969584677));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818593612(replaceEmptyApi_2969581095(arg_2969584677));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818593612(replaceParentApi_2969581172(arg_2969584677));
      break;
    case "wrap":
      Temporary1 = some_2818593612(wrapApi_2969581286(arg_2969584677));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818593612(editPrevEmptyApi_2969581371(arg_2969584677));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818593612(editNextEmptyApi_2969581442(arg_2969584677));
      break;
    case "rename":
      Temporary1 = some_2818593612(renameApi_2969581505(arg_2969584677));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593612(selectPrevCompletionApi2_2969581572(arg_2969584677));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593612(selectNextCompletionApi2_2969581639(arg_2969584677));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593612(applySelectedCompletionApi2_2969581802(arg_2969584677));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818593612(cancelAndNextCompletionApi_2969581900(arg_2969584677));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818593612(cancelAndPrevCompletionApi_2969581950(arg_2969584677));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818593612(cancelAndDeleteApi_2969582003(arg_2969584677));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818593612(moveNodeToPrevSpaceApi_2969582157(arg_2969584677));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818593612(moveNodeToNextSpaceApi_2969582320(arg_2969584677));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593612(selectPrevApi2_2969582381(arg_2969584677));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593612(selectNextApi2_2969582432(arg_2969584677));
      break;
    case "openGotoSymbolPopup":
    case "open-goto-symbol-popup":
      Temporary1 = some_2818593612(openGotoSymbolPopupApi_2969582739(arg_2969584677));
      break;
    case "goto":
      Temporary1 = some_2818593612(gotoApi_2969583347(arg_2969584677));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818593612(runSelectedFunctionApi_2969583711(arg_2969584677));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818593612(toggleOptionApi_2969583773(arg_2969584677));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818593612(runLastCommandApi_2969583835(arg_2969584677));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818593612(selectCenterNodeApi_2969584147(arg_2969584677));
      break;
    case "scroll":
      Temporary1 = some_2818593612(scrollApi_2969584233(arg_2969584677));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818593612(scrollOutputApi_2969584302(arg_2969584677));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818593612(dumpContextApi_2969584357(arg_2969584677));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi2_2969584534(arg_2969584677));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi2_2969584593(arg_2969584677));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi2_2969584653(arg_2969584677));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_2969584681 = nimCopy(result_2969584681, Temporary1, NTI2818585760);

  return result_2969584681;

}

function handleAction_2969583792(self_2969583793, action_2969583794, arg_2969583795) {
  var result_2969584830 = 0;

  BeforeRet: {
    var args_2969584831 = newJArray_1627390082();
    add_1627390190(args_2969584831, toJson_2969578814({id: self_2969583793.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2969584832 = null;
      var colontmp__536872195 = null;
      colontmp__536872195 = newStringStream_1660945417(arg_2969583795);
      var p_536872196 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872196[0], colontmp__536872195, [], false);
      try {
      var _ = getTok_1694499270(p_536872196[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872196[0].tok == 1))) break Label4;
            a_2969584832 = parseJson_1627395211(p_536872196[0], false, false, 0);
            add_1627390190(args_2969584831, a_2969584832);
          }
      };
      } finally {
      close_1694498967(p_536872196[0]);
      }
    };
    var newLastCommand_2969584833 = {Field0: nimCopy(null, action_2969583794, NTI33554449), Field1: nimCopy(null, arg_2969583795, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2969583793.editor, self_2969583793, action_2969583794, args_2969584831) == 3)) {
    result_2969584830 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593879(dispatch_2969584679(action_2969583794, args_2969584831))) {
    result_2969584830 = 3;
    break BeforeRet;
    }
    
    result_2969584830 = 1;
    break BeforeRet;
    } finally {
    self_2969583793.lastCommand = nimCopy(self_2969583793.lastCommand, newLastCommand_2969584833, NTI2969568667);
    }
  };

  return result_2969584830;

}

function toJson_3254789272(self_3254789273, opt_3254789274) {
  var result_3254789275 = null;

    result_3254789275 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3254789275, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,109,111,100,101,108]));
    HEX5BHEX5DHEX3D_1627391903(result_3254789275, [105,100], newJInt_1627390040(self_3254789273.id));

  return result_3254789275;

}

function none_3254790595() {
  var result_3254790601 = ({val: null});

  return result_3254790601;

}

function some_3254790635(val_3254790637) {
  var result_3254790638 = ({val: null});

    if (!(!((val_3254790637 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3254790638.val = val_3254790637;

  return result_3254790638;

}

function getModelDocumentEditor_3254790585(wrapper_3254790586) {
      var Temporary1;

  var result_3254790591 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3254790591 = nimCopy(result_3254790591, none_3254790595(), NTI3254785384);
    break BeforeRet;
    }
    
      var oHEX60gensym135_3254790604 = getEditorForId_1291850661(gEditor, wrapper_3254790586.id);
      if (!isSome_2818583961(oHEX60gensym135_3254790604)) Temporary1 = false; else {        var editor_3254790627 = get_2818583981(oHEX60gensym135_3254790604);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3254790627.m_type, NTI3254779983)) {
    result_3254790591 = nimCopy(result_3254790591, some_3254790635(editor_3254790627), NTI3254785384);
    break BeforeRet;
    }
    
    }
    
    result_3254790591 = nimCopy(result_3254790591, none_3254790595(), NTI3254785384);
    break BeforeRet;
  };

  return result_3254790591;

}

function isNone_3254790731(self_3254790733) {
  var result_3254790734 = false;

    result_3254790734 = (self_3254790733.val == null);

  return result_3254790734;

}

function get_3254790751(self_3254790753) {
  var result_3254790754 = null;

    if (isNone_3254790731(self_3254790753)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3254790754 = self_3254790753["val"];

  return result_3254790754;

}

function scrollScript2_3254790711_3254790723(self_3254790724, amount_3254790725) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym143_3254790726 = getModelDocumentEditor_3254790585(self_3254790724);
      if (isNone_3254790731(rHEX60gensym143_3254790726)) {
      break BeforeRet;
      }
      
    };
    scroll_3254790716(get_3254790751(rHEX60gensym143_3254790726), amount_3254790725);
  };

  
}

function fromJsonHook_3254789276(t_3254789277, jsonNode_3254789278) {
    t_3254789277.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_3254789278, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3254790784(a_3254790786, b_3254790787, opt_3254790788) {
    if (!(!(HEX3DHEX3D_1627392026(b_3254790787, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [77,111,100,101,108,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_3254790787}));
    }
    
    fromJsonHook_3254789276(a_3254790786, b_3254790787);

  
}

function jsonTo_3254790778(b_3254790780, opt_3254790782) {
  var result_3254790783 = [({id: 0})];

    fromJson_3254790784(result_3254790783[0], b_3254790780, opt_3254790782);

  return result_3254790783[0];

}

function scrollApi2_3254790776(HEX3Atmp_3254790713) {
  var result_3254790777 = null;

    result_3254790777 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript2_3254790711_3254790723(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254790713, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_3254790713, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym148_3254790800 = [115,99,114,111,108,108];
    var fmtRes_3254790805 = [mnewString(0)];
    fmtRes_3254790805[0].push.apply(fmtRes_3254790805[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254790805, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym148_3254790800 || [],fmtRes_3254790805[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254790777;

}

function setModeScript22_3254790821_3254790861(self_3254790862, mode_3254790863) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym154_3254790864 = getModelDocumentEditor_3254790585(self_3254790862);
      if (isNone_3254790731(rHEX60gensym154_3254790864)) {
      break BeforeRet;
      }
      
    };
    setMode_3254790826(get_3254790751(rHEX60gensym154_3254790864), mode_3254790863);
  };

  
}

function setModeApi22_3254790891(HEX3Atmp_3254790823) {
  var result_3254790892 = null;

    result_3254790892 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript22_3254790821_3254790861(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254790823, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254790823, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym159_3254790903 = [115,101,116,77,111,100,101];
    var fmtRes_3254790908 = [mnewString(0)];
    fmtRes_3254790908[0].push.apply(fmtRes_3254790908[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254790908, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym159_3254790903 || [],fmtRes_3254790908[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254790892;

}

function modeScript22_3254791974_3254791982(self_3254791983) {
  var result_3254791984 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym213_3254791985 = getModelDocumentEditor_3254790585(self_3254791983);
      if (isNone_3254790731(rHEX60gensym213_3254791985)) {
      break BeforeRet;
      }
      
    };
    result_3254791984 = nimCopy(null, mode_3254791979(get_3254790751(rHEX60gensym213_3254791985)), NTI33554449);
  };

  return result_3254791984;

}

function modeApi22_3254792012(HEX3Atmp_3254791976) {
  var result_3254792013 = null;

  BeforeRet: {
    result_3254792013 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_3254792013 = toJson_1811939932(modeScript22_3254791974_3254791982(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254791976, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym219_3254792023 = [109,111,100,101];
    var fmtRes_3254792028 = [mnewString(0)];
    fmtRes_3254792028[0].push.apply(fmtRes_3254792028[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792028, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym219_3254792023 || [],fmtRes_3254792028[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3254792013;

}

function getContextWithModeScript22_3254792031_3254792040(self_3254792041, context_3254792042) {
  var result_3254792043 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym223_3254792044 = getModelDocumentEditor_3254790585(self_3254792041);
      if (isNone_3254790731(rHEX60gensym223_3254792044)) {
      break BeforeRet;
      }
      
    };
    result_3254792043 = nimCopy(null, getContextWithMode_3254792036(get_3254790751(rHEX60gensym223_3254792044), context_3254792042), NTI33554449);
  };

  return result_3254792043;

}

function getContextWithModeApi22_3254792072(HEX3Atmp_3254792033) {
  var result_3254792073 = null;

  BeforeRet: {
    result_3254792073 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_3254792073 = toJson_1811939932(getContextWithModeScript22_3254792031_3254792040(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792033, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254792033, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym229_3254792088 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_3254792093 = [mnewString(0)];
    fmtRes_3254792093[0].push.apply(fmtRes_3254792093[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792093, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym229_3254792088 || [],fmtRes_3254792093[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3254792073;

}

function moveCursorLeftScript_3254792096_3254792134(self_3254792135, select_3254792136) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym233_3254792137 = getModelDocumentEditor_3254790585(self_3254792135);
      if (isNone_3254790731(rHEX60gensym233_3254792137)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeft_3254792101(get_3254790751(rHEX60gensym233_3254792137), select_3254792136);
  };

  
}

function moveCursorLeftApi_3254792164(HEX3Atmp_3254792098) {
      var Temporary4;

  var result_3254792165 = null;

    result_3254792165 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792098))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792098, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLeftScript_3254792096_3254792134(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792098, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym238_3254792176 = [109,111,118,101,67,117,114,115,111,114,76,101,102,116];
    var fmtRes_3254792181 = [mnewString(0)];
    fmtRes_3254792181[0].push.apply(fmtRes_3254792181[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792181, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym238_3254792176 || [],fmtRes_3254792181[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792165;

}

function moveCursorRightScript_3254792212_3254792250(self_3254792251, select_3254792252) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_3254792253 = getModelDocumentEditor_3254790585(self_3254792251);
      if (isNone_3254790731(rHEX60gensym245_3254792253)) {
      break BeforeRet;
      }
      
    };
    moveCursorRight_3254792217(get_3254790751(rHEX60gensym245_3254792253), select_3254792252);
  };

  
}

function moveCursorRightApi_3254792280(HEX3Atmp_3254792214) {
      var Temporary4;

  var result_3254792281 = null;

    result_3254792281 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792214))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792214, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorRightScript_3254792212_3254792250(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792214, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym250_3254792292 = [109,111,118,101,67,117,114,115,111,114,82,105,103,104,116];
    var fmtRes_3254792297 = [mnewString(0)];
    fmtRes_3254792297[0].push.apply(fmtRes_3254792297[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792297, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym250_3254792292 || [],fmtRes_3254792297[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792281;

}

function moveCursorLeftLineScript_3254792300_3254792340(self_3254792341, select_3254792342) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym257_3254792343 = getModelDocumentEditor_3254790585(self_3254792341);
      if (isNone_3254790731(rHEX60gensym257_3254792343)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeftLine_3254792305(get_3254790751(rHEX60gensym257_3254792343), select_3254792342);
  };

  
}

function moveCursorLeftLineApi_3254792370(HEX3Atmp_3254792302) {
      var Temporary4;

  var result_3254792371 = null;

    result_3254792371 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792302))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792302, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLeftLineScript_3254792300_3254792340(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792302, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym262_3254792382 = [109,111,118,101,67,117,114,115,111,114,76,101,102,116,76,105,110,101];
    var fmtRes_3254792387 = [mnewString(0)];
    fmtRes_3254792387[0].push.apply(fmtRes_3254792387[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792387, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym262_3254792382 || [],fmtRes_3254792387[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792371;

}

function moveCursorRightLineScript_3254792402_3254792442(self_3254792443, select_3254792444) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym268_3254792445 = getModelDocumentEditor_3254790585(self_3254792443);
      if (isNone_3254790731(rHEX60gensym268_3254792445)) {
      break BeforeRet;
      }
      
    };
    moveCursorRightLine_3254792407(get_3254790751(rHEX60gensym268_3254792445), select_3254792444);
  };

  
}

function moveCursorRightLineApi_3254792472(HEX3Atmp_3254792404) {
      var Temporary4;

  var result_3254792473 = null;

    result_3254792473 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792404))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792404, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorRightLineScript_3254792402_3254792442(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792404, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym273_3254792484 = [109,111,118,101,67,117,114,115,111,114,82,105,103,104,116,76,105,110,101];
    var fmtRes_3254792489 = [mnewString(0)];
    fmtRes_3254792489[0].push.apply(fmtRes_3254792489[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792489, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym273_3254792484 || [],fmtRes_3254792489[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792473;

}

function moveCursorLineStartScript_3254792502_3254792543(self_3254792544, select_3254792545) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym279_3254792546 = getModelDocumentEditor_3254790585(self_3254792544);
      if (isNone_3254790731(rHEX60gensym279_3254792546)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineStart_3254792507(get_3254790751(rHEX60gensym279_3254792546), select_3254792545);
  };

  
}

function moveCursorLineStartApi_3254792573(HEX3Atmp_3254792504) {
      var Temporary4;

  var result_3254792574 = null;

    result_3254792574 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792504))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792504, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLineStartScript_3254792502_3254792543(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792504, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym284_3254792585 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101,83,116,97,114,116];
    var fmtRes_3254792590 = [mnewString(0)];
    fmtRes_3254792590[0].push.apply(fmtRes_3254792590[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792590, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym284_3254792585 || [],fmtRes_3254792590[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792574;

}

function moveCursorLineEndScript_3254792593_3254792637(self_3254792638, select_3254792639) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym292_3254792640 = getModelDocumentEditor_3254790585(self_3254792638);
      if (isNone_3254790731(rHEX60gensym292_3254792640)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineEnd_3254792598(get_3254790751(rHEX60gensym292_3254792640), select_3254792639);
  };

  
}

function moveCursorLineEndApi_3254792667(HEX3Atmp_3254792595) {
      var Temporary4;

  var result_3254792668 = null;

    result_3254792668 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792595))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792595, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLineEndScript_3254792593_3254792637(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792595, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym297_3254792679 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101,69,110,100];
    var fmtRes_3254792684 = [mnewString(0)];
    fmtRes_3254792684[0].push.apply(fmtRes_3254792684[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792684, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym297_3254792679 || [],fmtRes_3254792684[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792668;

}

function moveCursorLineStartInlineScript_3254792687_3254792728(self_3254792729, select_3254792730) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym305_3254792731 = getModelDocumentEditor_3254790585(self_3254792729);
      if (isNone_3254790731(rHEX60gensym305_3254792731)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineStartInline_3254792692(get_3254790751(rHEX60gensym305_3254792731), select_3254792730);
  };

  
}

function moveCursorLineStartInlineApi_3254792758(HEX3Atmp_3254792689) {
      var Temporary4;

  var result_3254792759 = null;

    result_3254792759 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792689))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792689, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLineStartInlineScript_3254792687_3254792728(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792689, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym310_3254792770 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101,83,116,97,114,116,73,110,108,105,110,101];
    var fmtRes_3254792775 = [mnewString(0)];
    fmtRes_3254792775[0].push.apply(fmtRes_3254792775[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792775, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym310_3254792770 || [],fmtRes_3254792775[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792759;

}

function moveCursorLineEndInlineScript_3254792780_3254792821(self_3254792822, select_3254792823) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_3254792824 = getModelDocumentEditor_3254790585(self_3254792822);
      if (isNone_3254790731(rHEX60gensym317_3254792824)) {
      break BeforeRet;
      }
      
    };
    moveCursorLineEndInline_3254792785(get_3254790751(rHEX60gensym317_3254792824), select_3254792823);
  };

  
}

function moveCursorLineEndInlineApi_3254792851(HEX3Atmp_3254792782) {
      var Temporary4;

  var result_3254792852 = null;

    result_3254792852 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792782))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792782, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLineEndInlineScript_3254792780_3254792821(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792782, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym322_3254792863 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101,69,110,100,73,110,108,105,110,101];
    var fmtRes_3254792868 = [mnewString(0)];
    fmtRes_3254792868[0].push.apply(fmtRes_3254792868[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792868, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym322_3254792863 || [],fmtRes_3254792868[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792852;

}

function moveCursorUpScript2_3254792872_3254792935(self_3254792936, select_3254792937) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym329_3254792938 = getModelDocumentEditor_3254790585(self_3254792936);
      if (isNone_3254790731(rHEX60gensym329_3254792938)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_3254792877(get_3254790751(rHEX60gensym329_3254792938), select_3254792937);
  };

  
}

function moveCursorUpApi2_3254792965(HEX3Atmp_3254792874) {
      var Temporary4;

  var result_3254792966 = null;

    result_3254792966 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792874))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792874, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorUpScript2_3254792872_3254792935(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792874, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym334_3254792977 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_3254792982 = [mnewString(0)];
    fmtRes_3254792982[0].push.apply(fmtRes_3254792982[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254792982, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym334_3254792977 || [],fmtRes_3254792982[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254792966;

}

function moveCursorDownScript2_3254792992_3254793055(self_3254793056, select_3254793057) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym342_3254793058 = getModelDocumentEditor_3254790585(self_3254793056);
      if (isNone_3254790731(rHEX60gensym342_3254793058)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_3254792997(get_3254790751(rHEX60gensym342_3254793058), select_3254793057);
  };

  
}

function moveCursorDownApi2_3254793085(HEX3Atmp_3254792994) {
      var Temporary4;

  var result_3254793086 = null;

    result_3254793086 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254792994))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254792994, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorDownScript2_3254792992_3254793055(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254792994, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym347_3254793097 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_3254793102 = [mnewString(0)];
    fmtRes_3254793102[0].push.apply(fmtRes_3254793102[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793102, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym347_3254793097 || [],fmtRes_3254793102[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793086;

}

function moveCursorLeftCellScript_3254793105_3254793143(self_3254793144, select_3254793145) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym354_3254793146 = getModelDocumentEditor_3254790585(self_3254793144);
      if (isNone_3254790731(rHEX60gensym354_3254793146)) {
      break BeforeRet;
      }
      
    };
    moveCursorLeftCell_3254793110(get_3254790751(rHEX60gensym354_3254793146), select_3254793145);
  };

  
}

function moveCursorLeftCellApi_3254793173(HEX3Atmp_3254793107) {
      var Temporary4;

  var result_3254793174 = null;

    result_3254793174 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254793107))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254793107, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorLeftCellScript_3254793105_3254793143(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793107, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym359_3254793185 = [109,111,118,101,67,117,114,115,111,114,76,101,102,116,67,101,108,108];
    var fmtRes_3254793190 = [mnewString(0)];
    fmtRes_3254793190[0].push.apply(fmtRes_3254793190[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793190, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym359_3254793185 || [],fmtRes_3254793190[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793174;

}

function moveCursorRightCellScript_3254793195_3254793233(self_3254793234, select_3254793235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym366_3254793236 = getModelDocumentEditor_3254790585(self_3254793234);
      if (isNone_3254790731(rHEX60gensym366_3254793236)) {
      break BeforeRet;
      }
      
    };
    moveCursorRightCell_3254793200(get_3254790751(rHEX60gensym366_3254793236), select_3254793235);
  };

  
}

function moveCursorRightCellApi_3254793263(HEX3Atmp_3254793197) {
      var Temporary4;

  var result_3254793264 = null;

    result_3254793264 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_3254793197))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_3254793197, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    moveCursorRightCellScript_3254793195_3254793233(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793197, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym371_3254793275 = [109,111,118,101,67,117,114,115,111,114,82,105,103,104,116,67,101,108,108];
    var fmtRes_3254793280 = [mnewString(0)];
    fmtRes_3254793280[0].push.apply(fmtRes_3254793280[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793280, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym371_3254793275 || [],fmtRes_3254793280[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793264;

}

function deleteLeftScript2_3254793285_3254793331(self_3254793332) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym377_3254793333 = getModelDocumentEditor_3254790585(self_3254793332);
      if (isNone_3254790731(rHEX60gensym377_3254793333)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_3254793290(get_3254790751(rHEX60gensym377_3254793333));
  };

  
}

function deleteLeftApi2_3254793359(HEX3Atmp_3254793287) {
  var result_3254793360 = null;

    result_3254793360 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript2_3254793285_3254793331(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793287, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym382_3254793366 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_3254793371 = [mnewString(0)];
    fmtRes_3254793371[0].push.apply(fmtRes_3254793371[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793371, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym382_3254793366 || [],fmtRes_3254793371[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793360;

}

function deleteRightScript2_3254793374_3254793420(self_3254793421) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym389_3254793422 = getModelDocumentEditor_3254790585(self_3254793421);
      if (isNone_3254790731(rHEX60gensym389_3254793422)) {
      break BeforeRet;
      }
      
    };
    deleteRight_3254793379(get_3254790751(rHEX60gensym389_3254793422));
  };

  
}

function deleteRightApi2_3254793448(HEX3Atmp_3254793376) {
  var result_3254793449 = null;

    result_3254793449 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript2_3254793374_3254793420(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793376, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym394_3254793455 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_3254793460 = [mnewString(0)];
    fmtRes_3254793460[0].push.apply(fmtRes_3254793460[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793460, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym394_3254793455 || [],fmtRes_3254793460[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793449;

}

function insertTextAtCursorScript_3254793463_3254793499(self_3254793500, input_3254793501) {
  var result_3254793502 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym403_3254793503 = getModelDocumentEditor_3254790585(self_3254793500);
      if (isNone_3254790731(rHEX60gensym403_3254793503)) {
      break BeforeRet;
      }
      
    };
    result_3254793502 = insertTextAtCursor_3254780162(get_3254790751(rHEX60gensym403_3254793503), input_3254793501);
  };

  return result_3254793502;

}

function insertTextAtCursorApi_3254793531(HEX3Atmp_3254793465) {
  var result_3254793532 = null;

  BeforeRet: {
    result_3254793532 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_3254793532 = toJson_2818589144(insertTextAtCursorScript_3254793463_3254793499(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793465, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_3254793465, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym409_3254793547 = [105,110,115,101,114,116,84,101,120,116,65,116,67,117,114,115,111,114];
    var fmtRes_3254793552 = [mnewString(0)];
    fmtRes_3254793552[0].push.apply(fmtRes_3254793552[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793552, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym409_3254793547 || [],fmtRes_3254793552[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3254793532;

}

function toggleUseDefaultCellBuilderScript_3254793555_3254793562(self_3254793563) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym414_3254793564 = getModelDocumentEditor_3254790585(self_3254793563);
      if (isNone_3254790731(rHEX60gensym414_3254793564)) {
      break BeforeRet;
      }
      
    };
    toggleUseDefaultCellBuilder_3254793560(get_3254790751(rHEX60gensym414_3254793564));
  };

  
}

function toggleUseDefaultCellBuilderApi_3254793590(HEX3Atmp_3254793557) {
  var result_3254793591 = null;

    result_3254793591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleUseDefaultCellBuilderScript_3254793555_3254793562(jsonTo_3254790778(HEX5BHEX5D_1627393116(HEX3Atmp_3254793557, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym419_3254793597 = [116,111,103,103,108,101,85,115,101,68,101,102,97,117,108,116,67,101,108,108,66,117,105,108,100,101,114];
    var fmtRes_3254793602 = [mnewString(0)];
    fmtRes_3254793602[0].push.apply(fmtRes_3254793602[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3254793602, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym419_3254793597 || [],fmtRes_3254793602[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3254793591;

}

function dispatch_3254793633(command_3254793632, arg_3254793631) {
    var Temporary1;

  var result_3254793635 = ({val: null});

    switch (toJSStr(command_3254793632)) {
    case "scroll":
      Temporary1 = some_2818593612(scrollApi2_3254790776(arg_3254793631));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi22_3254790891(arg_3254793631));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi22_3254792012(arg_3254793631));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi22_3254792072(arg_3254793631));
      break;
    case "moveCursorLeft":
    case "move-cursor-left":
      Temporary1 = some_2818593612(moveCursorLeftApi_3254792164(arg_3254793631));
      break;
    case "moveCursorRight":
    case "move-cursor-right":
      Temporary1 = some_2818593612(moveCursorRightApi_3254792280(arg_3254793631));
      break;
    case "moveCursorLeftLine":
    case "move-cursor-left-line":
      Temporary1 = some_2818593612(moveCursorLeftLineApi_3254792370(arg_3254793631));
      break;
    case "moveCursorRightLine":
    case "move-cursor-right-line":
      Temporary1 = some_2818593612(moveCursorRightLineApi_3254792472(arg_3254793631));
      break;
    case "moveCursorLineStart":
    case "move-cursor-line-start":
      Temporary1 = some_2818593612(moveCursorLineStartApi_3254792573(arg_3254793631));
      break;
    case "moveCursorLineEnd":
    case "move-cursor-line-end":
      Temporary1 = some_2818593612(moveCursorLineEndApi_3254792667(arg_3254793631));
      break;
    case "moveCursorLineStartInline":
    case "move-cursor-line-start-inline":
      Temporary1 = some_2818593612(moveCursorLineStartInlineApi_3254792758(arg_3254793631));
      break;
    case "moveCursorLineEndInline":
    case "move-cursor-line-end-inline":
      Temporary1 = some_2818593612(moveCursorLineEndInlineApi_3254792851(arg_3254793631));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593612(moveCursorUpApi2_3254792965(arg_3254793631));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593612(moveCursorDownApi2_3254793085(arg_3254793631));
      break;
    case "moveCursorLeftCell":
    case "move-cursor-left-cell":
      Temporary1 = some_2818593612(moveCursorLeftCellApi_3254793173(arg_3254793631));
      break;
    case "moveCursorRightCell":
    case "move-cursor-right-cell":
      Temporary1 = some_2818593612(moveCursorRightCellApi_3254793263(arg_3254793631));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593612(deleteLeftApi2_3254793359(arg_3254793631));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593612(deleteRightApi2_3254793448(arg_3254793631));
      break;
    case "insertTextAtCursor":
    case "insert-text-at-cursor":
      Temporary1 = some_2818593612(insertTextAtCursorApi_3254793531(arg_3254793631));
      break;
    case "toggleUseDefaultCellBuilder":
    case "toggle-use-default-cell-builder":
      Temporary1 = some_2818593612(toggleUseDefaultCellBuilderApi_3254793590(arg_3254793631));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_3254793635 = nimCopy(result_3254793635, Temporary1, NTI2818585760);

  return result_3254793635;

}

function handleAction_3254780151(self_3254780152, action_3254780153, arg_3254780154) {
  var result_3254793706 = 0;

  BeforeRet: {
    var args_3254793707 = newJArray_1627390082();
    add_1627390190(args_3254793707, toJson_3254789272({id: self_3254780152.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3254793708 = null;
      var colontmp__536872308 = null;
      colontmp__536872308 = newStringStream_1660945417(arg_3254780154);
      var p_536872309 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872309[0], colontmp__536872308, [], false);
      try {
      var _ = getTok_1694499270(p_536872309[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872309[0].tok == 1))) break Label4;
            a_3254793708 = parseJson_1627395211(p_536872309[0], false, false, 0);
            add_1627390190(args_3254793707, a_3254793708);
          }
      };
      } finally {
      close_1694498967(p_536872309[0]);
      }
    };
    if ((handleUnknownDocumentEditorAction_1291848854(self_3254780152.editor, self_3254780152, action_3254780153, args_3254793707) == 3)) {
    result_3254793706 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593879(dispatch_3254793633(action_3254780153, args_3254793707))) {
    result_3254793706 = 3;
    break BeforeRet;
    }
    
    result_3254793706 = 1;
    break BeforeRet;
  };

  return result_3254793706;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872376 = 0;
      colontmp__536872376 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872377 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872377 <= colontmp__536872376)) break Label3;
            i_855638867 = res_536872377;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872377 = addInt(res_536872377, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872380 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872381 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872382 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872380, NTI1191182360), Field1: colontmp__536872381, Field2: colontmp__536872382}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872383 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872383["Field0"];
    var m_1191182547 = colontmp__536872383["Field1"];
    var d_1191182548 = colontmp__536872383["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872379 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872379["Field0"];
    var m_1191183687 = colontmp__536872379["Field1"];
    var y_1191183688 = colontmp__536872379["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872368 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872368 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872368, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872368 = addInt(i_536872368, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet317[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872373 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872373 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872373, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872373 = addInt(i_536872373, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2399141915(self_2399141916) {
  var result_2399141917 = false;

    result_2399141917 = false;

  return result_2399141917;

}

function isReadOnly_2281701431(self_2281701432) {
  var result_2281701433 = false;

    result_2281701433 = true;

  return result_2281701433;

}

function isReadOnly_2264924176(self_2264924177) {
  var result_2264924178 = false;

    result_2264924178 = false;

  return result_2264924178;

}

function isReadOnly_2214592526(self_2214592527) {
  var result_2214592528 = false;

    result_2214592528 = true;

  return result_2214592528;

}

function isReadOnly_2214592529(self_2214592527) {
  var result_2214592530 = false;

  BeforeRet: {
    chckNilDisp(self_2214592527);
    if (isObj(self_2214592527.m_type, NTI2399141893)) {
    result_2214592530 = isReadOnly_2399141915(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2281701380)) {
    result_2214592530 = isReadOnly_2281701431(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2264924164)) {
    result_2214592530 = isReadOnly_2264924176(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2214592520)) {
    result_2214592530 = isReadOnly_2214592526(self_2214592527);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592530;

}

function settings_2399141918(self_2399141919) {
  var result_2399141920 = null;

    result_2399141920 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2399141920, [98,97,115,101,85,114,108], newJString_1627389994(self_2399141919.baseUrl));

  return result_2399141920;

}

function settings_2281701434(self_2281701435) {
  var result_2281701436 = null;

    result_2281701436 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,97,115,101,85,114,108], newJString_1627389994(self_2281701435.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [117,115,101,114], newJString_1627389994(self_2281701435.user));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2281701435.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2281701435.branchOrHash));

  return result_2281701436;

}

function settings_2264924169(self_2264924170) {
  var result_2264924171 = null;

    result_2264924171 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2264924171, [112,97,116,104], newJString_1627389994(self_2264924170.path));

  return result_2264924171;

}

function settings_2214592531(self_2214592532) {
  var result_2214592533 = null;

  return result_2214592533;

}

function settings_2214592534(self_2214592532) {
  var result_2214592535 = null;

  BeforeRet: {
    chckNilDisp(self_2214592532);
    if (isObj(self_2214592532.m_type, NTI2399141893)) {
    result_2214592535 = settings_2399141918(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2281701380)) {
    result_2214592535 = settings_2281701434(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2264924164)) {
    result_2214592535 = settings_2264924169(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2214592520)) {
    result_2214592535 = settings_2214592531(self_2214592532);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592535;

}

function clear_2399141963(t_2399141966) {
    Label1: {
      var i_2399142019 = 0;
      var colontmp__536872385 = 0;
      colontmp__536872385 = (t_2399141966.data).length;
      var i_536872386 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872386 < colontmp__536872385)) break Label3;
            i_2399142019 = i_536872386;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field0 = 0;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2 = nimCopy(t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2, ({done: false, listing: ({files: [], folders: []})}), NTI2399141891);
            i_536872386 = addInt(i_536872386, 1);
          }
      };
    };
    t_2399141966.counter = 0;

  
}

function clearDirectoryCache_2399141921(self_2399141922) {
    clear_2399141963(self_2399141922.cachedDirectoryListings);

  
}

function clear_2281701479(t_2281701482) {
    Label1: {
      var i_2281701535 = 0;
      var colontmp__536872389 = 0;
      colontmp__536872389 = (t_2281701482.data).length;
      var i_536872390 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872390 < colontmp__536872389)) break Label3;
            i_2281701535 = i_536872390;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field0 = 0;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2 = nimCopy(t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2, ({files: [], folders: []}), NTI2214592517);
            i_536872390 = addInt(i_536872390, 1);
          }
      };
    };
    t_2281701482.counter = 0;

  
}

function clearDirectoryCache_2281701437(self_2281701438) {
    clear_2281701479(self_2281701438.cachedDirectoryListings);

  
}

function clearDirectoryCache_2214592536(self_2214592537) {
  
}

function clearDirectoryCache_2214592538(self_2214592537) {
    chckNilDisp(self_2214592537);
    if (isObj(self_2214592537.m_type, NTI2399141893)) {
    clearDirectoryCache_2399141921(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2281701380)) {
    clearDirectoryCache_2281701437(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2214592520)) {
    clearDirectoryCache_2214592536(self_2214592537);
    }
    }}

  
}
async function httpGet_2348810256(url_2348810257, authToken_2348810271) {
  var result_2348810273 = null;

  BeforeRet: {
    var cstr_2348810313 = (await getAsyncJs(toJSStr(url_2348810257), toJSStr(get_2348810295(authToken_2348810271, []))));
    result_2348810273 = cstrToNimstr(cstr_2348810313);
    break BeforeRet;
  };

  return result_2348810273;

}
async function loadFile_2399142382(self_2399142383, relativePath_2399142384) {
    var Temporary1;

  var result_2399142386 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142384, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142384, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142384;
    }
    
    var relativePath_2399142414 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142415 = (self_2399142383.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142414 || []);
    var fmtRes_2399142420 = [mnewString(0)];
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142420, 0, url_2399142415, []);
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142420[0], NTI33554449)]);
    result_2399142386 = (await httpGet_2348810256(url_2399142415, none_2348810263()));
    break BeforeRet;
  };

  return result_2399142386;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2382364741(t_2382364744, key_2382364745) {
  var result_2382364746 = false;

  BeforeRet: {
    result_2382364746 = hasKey_1795162450(t_2382364744, key_2382364745);
    break BeforeRet;
  };

  return result_2382364746;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2382364695(self_2382364696, name_2382364697) {
    var Temporary1;

  var result_2382364698 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2382364697)) !== null)) {
    result_2382364698 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2382364697))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2382364741(cachedAppFiles_2382364694[0], name_2382364697))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2382364694[0], name_2382364697, cstrToNimstr(loadFileSync(toJSStr(name_2382364697))));
    }
    
    result_2382364698 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2382364694[0], name_2382364697), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2382364698;

}

function loadApplicationFile_2365587470(self_2365587471, name_2365587472) {
  var result_2365587473 = [];

  return result_2365587473;

}

function loadApplicationFile_2365587474(self_2365587471, name_2365587472) {
  var result_2365587475 = [];

  BeforeRet: {
    chckNilDisp(self_2365587471);
    if (isObj(self_2365587471.m_type, NTI2382364676)) {
    result_2365587475 = loadApplicationFile_2382364695(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587471.m_type, NTI2365587460)) {
    result_2365587475 = loadApplicationFile_2365587470(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    }
  };

  return result_2365587475;

}

function getAccessToken_2281701406() {
  var result_2281701408 = ({val: [], has: false});

  BeforeRet: {
    var token_2281701409 = loadApplicationFile_2365587474(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2281701409).length)) {
    result_2281701408 = nimCopy(result_2281701408, some_2281701410(token_2281701409), NTI2348810261);
    break BeforeRet;
    }
    
    result_2281701408 = nimCopy(result_2281701408, none_2348810263(), NTI2348810261);
    break BeforeRet;
  };

  return result_2281701408;

}

function decode_2315256303(s_2315256304) {
    
function decodeSize_2315256306(size_2315256307) {
      var result_2315256308 = 0;

      BeforeRet: {
        result_2315256308 = addInt(divInt(mulInt(size_2315256307, 3), 4), 6);
        break BeforeRet;
      };

      return result_2315256308;

    }
    var Temporary1;

  var result_2315256305 = [];

  BeforeRet: {
    if (((s_2315256304).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2315256305.length < (Temporary1 = chckRange(decodeSize_2315256306((s_2315256304).length), 0, 2147483647), Temporary1)) { for (var i = result_2315256305.length; i < Temporary1; ++i) result_2315256305.push(0); }
         else {result_2315256305.length = Temporary1; };
    var inputIndex_2315256313 = 0;
    var outputIndex_2315256314 = 0;
    var inputLen_2315256315 = (s_2315256304).length;
    var inputEnds_2315256316 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet318[s_2315256304[chckIndx(subInt(inputLen_2315256315, 1), 0, (s_2315256304).length - 1)]] != undefined)) break Label3;
          inputLen_2315256315 = subInt(inputLen_2315256315, 1);
        }
    };
    inputEnds_2315256316 = subInt(inputLen_2315256315, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2315256313 <= inputEnds_2315256316)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet319[s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]] != undefined)) break Label7;
                inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
              }
          };
          var a_2315256338 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((a_2315256338 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var b_2315256351 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((b_2315256351 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var c_2315256364 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((c_2315256364 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var d_2315256377 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((d_2315256377 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256338 << 2) | (b_2315256351 >> 4)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256351 << 4) | (c_2315256364 >> 2)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((c_2315256364 << 6) | (d_2315256377 >> 0)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
        }
    };
    var leftLen_2315256426 = absInt(modInt(subInt(inputIndex_2315256313, inputLen_2315256315), 4));
    if ((leftLen_2315256426 == 2)) {
    var a_2315256430 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256430 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256443 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256443 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256430 << 2) | (b_2315256443 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    else {
    if ((leftLen_2315256426 == 3)) {
    var a_2315256469 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256469 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256482 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256482 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var c_2315256495 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((c_2315256495 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256469 << 2) | (b_2315256482 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256482 << 4) | (c_2315256495 >> 2)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    }
    if (result_2315256305.length < chckRange(outputIndex_2315256314, 0, 2147483647)) { for (var i = result_2315256305.length; i < chckRange(outputIndex_2315256314, 0, 2147483647); ++i) result_2315256305.push(0); }
         else {result_2315256305.length = chckRange(outputIndex_2315256314, 0, 2147483647); };
  };

  return result_2315256305;

}
async function loadFile_2281701875(self_2281701876, relativePath_2281701877) {
    var Temporary1;

  var result_2281701879 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2281701877, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2281701877, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2281701877;
    }
    
    var relativePath_2281701907 = nimCopy(null, Temporary1, NTI33554449);
    var url_2281701908 = (self_2281701876.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2281701907 || [],[63,114,101,102,61] || [],self_2281701876.branchOrHash || []);
    var fmtRes_2281701913 = [mnewString(0)];
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2281701913, 0, url_2281701908, []);
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281701913[0], NTI33554449)]);
    var token_2281701914 = getAccessToken_2281701406();
    var response_2281701919 = (await httpGet_2348810256(url_2281701908, token_2281701914));
++excHandler;
    try {
    var jsn_2281701920 = parseJson_1627395313(response_2281701919);
    if (hasKey_1627393154(jsn_2281701920, [99,111,110,116,101,110,116])) {
    var contentBase64_2281701921 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2281701920, [99,111,110,116,101,110,116]), []);
    var content_2281701922 = decode_2315256303(contentBase64_2281701921);
    result_2281701879 = content_2281701922;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281701930 = [mnewString(0)];
    fmtRes_2281701930[0].push.apply(fmtRes_2281701930[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281701930, 0, response_2281701919, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281701930[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281701879 = [];
    break BeforeRet;
  };

  return result_2281701879;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2264924172(self_2264924173, relativePath_2264924174) {
  var result_2264924175 = [];

    result_2264924175 = nimCopy(null, HEX2F_1426063446(self_2264924173.path, relativePath_2264924174), NTI33554449);

  return result_2264924175;

}
async function loadFile_2264924200(self_2264924201, relativePath_2264924202) {
  var result_2264924204 = null;

  BeforeRet: {
    result_2264924204 = readFile_503316918(getAbsolutePath_2264924172(self_2264924201, relativePath_2264924202));
    break BeforeRet;
  };

  return result_2264924204;

}

function loadFile_2214592539(self_2214592540, relativePath_2214592541) {
  var result_2214592544 = null;

  return result_2214592544;

}

function loadFile_2214592545(self_2214592540, relativePath_2214592541) {
  var result_2214592546 = null;

  BeforeRet: {
    chckNilDisp(self_2214592540);
    if (isObj(self_2214592540.m_type, NTI2399141893)) {
    result_2214592546 = loadFile_2399142382(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2281701380)) {
    result_2214592546 = loadFile_2281701875(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2264924164)) {
    result_2214592546 = loadFile_2264924200(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2214592520)) {
    result_2214592546 = loadFile_2214592539(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592546;

}
async function httpPost_2348810327(url_2348810328, content_2348810329, authToken_2348810338) {
  var result_2348810340 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2348810328), toJSStr(content_2348810329), toJSStr(get_2348810295(authToken_2348810338, []))));
    result_2348810340 = undefined;
    break BeforeRet;
  };

  return result_2348810340;

}
async function saveFile_2399142429(self_2399142430, relativePath_2399142431, content_2399142432) {
    var Temporary1;

  var result_2399142434 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142431, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142431, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142431;
    }
    
    var relativePath_2399142458 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142459 = (self_2399142430.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142458 || []);
    var fmtRes_2399142464 = [mnewString(0)];
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142464, 0, url_2399142459, []);
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142464[0], NTI33554449)]);
    (await httpPost_2348810327(url_2399142459, content_2399142432, none_2348810263()));
    result_2399142434 = undefined;
    break BeforeRet;
  };

  return result_2399142434;

}
async function saveFile_2281701935(self_2281701936, relativePath_2281701937, content_2281701938) {
  var result_2281701940 = null;

  BeforeRet: {
    result_2281701940 = undefined;
    break BeforeRet;
  };

  return result_2281701940;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2264924227(self_2264924228, relativePath_2264924229, content_2264924230) {
  var result_2264924232 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2264924172(self_2264924228, relativePath_2264924229), content_2264924230);
    result_2264924232 = undefined;
    break BeforeRet;
  };

  return result_2264924232;

}

function saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592552 = null;

  return result_2214592552;

}

function saveFile_2214592553(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592554 = null;

  BeforeRet: {
    chckNilDisp(self_2214592548);
    if (isObj(self_2214592548.m_type, NTI2399141893)) {
    result_2214592554 = saveFile_2399142429(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2281701380)) {
    result_2214592554 = saveFile_2281701935(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2264924164)) {
    result_2214592554 = saveFile_2264924227(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2214592520)) {
    result_2214592554 = saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592554;

}

function rawGet_2399142566(t_2399142569, key_2399142570, hc_2399142571, hc_2399142571_Idx) {
  var result_2399142572 = 0;

  BeforeRet: {
    hc_2399142571[hc_2399142571_Idx] = hash_1325400491(key_2399142570);
    if ((hc_2399142571[hc_2399142571_Idx] == 0)) {
    hc_2399142571[hc_2399142571_Idx] = 314159265;
    }
    
    if (((t_2399142569.data).length == 0)) {
    result_2399142572 = -1;
    break BeforeRet;
    }
    
    var h_2399142623 = (hc_2399142571[hc_2399142571_Idx] & (t_2399142569.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0)) break Label2;
          if (((t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0 == hc_2399142571[hc_2399142571_Idx]) && eqStrings(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field1, key_2399142570))) {
          result_2399142572 = h_2399142623;
          break BeforeRet;
          }
          
          h_2399142623 = nextTry_1308622883(h_2399142623, (t_2399142569.data).length - 1);
        }
    };
    result_2399142572 = subInt(-1, h_2399142623);
  };

  return result_2399142572;

}

function hasKey_2399142559(t_2399142562, key_2399142563) {
  var result_2399142564 = false;

    var hc_2399142565 = [0];
    result_2399142564 = (0 <= rawGet_2399142566(t_2399142562, key_2399142563, hc_2399142565, 0));

  return result_2399142564;

}

function contains_2399142553(t_2399142556, key_2399142557) {
  var result_2399142558 = false;

  BeforeRet: {
    result_2399142558 = hasKey_2399142559(t_2399142556, key_2399142557);
    break BeforeRet;
  };

  return result_2399142558;

}

function HEX5BHEX5D_2399142857(t_2399142860, key_2399142861) {
  var result_2399142862 = null;

    var hcHEX60gensym22_2399142863 = [0];
    var indexHEX60gensym22_2399142870 = rawGet_2399142566(t_2399142860, key_2399142861, hcHEX60gensym22_2399142863, 0);
    if ((0 <= indexHEX60gensym22_2399142870)) {
    result_2399142862 = t_2399142860.data[chckIndx(indexHEX60gensym22_2399142870, 0, (t_2399142860.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2399142861);
    }
    

  return result_2399142862;

}

function mustRehash_2399143261(t_2399143263) {
  var result_2399143264 = false;

    if (!((t_2399143263.counter < (t_2399143263.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2399143264 = ((mulInt((t_2399143263.data).length, 2) < mulInt(t_2399143263.counter, 3)) || (subInt((t_2399143263.data).length, t_2399143263.counter) < 4));

  return result_2399143264;

}

function rawInsert_2399143710(t_2399143714, data_2399143715, data_2399143715_Idx, key_2399143716, val_2399143717, hc_2399143718, h_2399143719) {
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field1 = nimCopy(null, key_2399143716, NTI33554449);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2 = nimCopy(data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2, val_2399143717, NTI2399141891);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field0 = hc_2399143718;

  
}

function enlarge_2399143416(t_2399143419) {
    var n_2399143422 = [];
    n_2399143422 = new Array(chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647) ; ++i) { n_2399143422[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    var Temporary1 = t_2399143419.data; t_2399143419.data = n_2399143422; n_2399143422 = Temporary1;    Label2: {
      var i_2399143486 = 0;
      var colontmp__536872400 = 0;
      colontmp__536872400 = (n_2399143422).length - 1;
      var res_536872401 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872401 <= colontmp__536872400)) break Label4;
            i_2399143486 = res_536872401;
            var eh_2399143540 = n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field0;
            if (isFilled_1308622880(eh_2399143540)) {
            var j_2399143544 = (eh_2399143540 & (t_2399143419.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2399143419.data[chckIndx(j_2399143544, 0, (t_2399143419.data).length - 1)].Field0)) break Label6;
                  j_2399143544 = nextTry_1308622883(j_2399143544, (t_2399143419.data).length - 1);
                }
            };
            rawInsert_2399143710(t_2399143419, t_2399143419, "data", n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field1, n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field2, eh_2399143540, j_2399143544);
            }
            
            res_536872401 = addInt(res_536872401, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2399143879(t_2399143882, key_2399143883, hc_2399143884) {
  var result_2399143885 = 0;

  BeforeRet: {
    if (((t_2399143882.data).length == 0)) {
    result_2399143885 = -1;
    break BeforeRet;
    }
    
    var h_2399143936 = (hc_2399143884 & (t_2399143882.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0)) break Label2;
          if (((t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0 == hc_2399143884) && eqStrings(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field1, key_2399143883))) {
          result_2399143885 = h_2399143936;
          break BeforeRet;
          }
          
          h_2399143936 = nextTry_1308622883(h_2399143936, (t_2399143882.data).length - 1);
        }
    };
    result_2399143885 = subInt(-1, h_2399143936);
  };

  return result_2399143885;

}

function HEX5BHEX5DHEX3D_2399143088(t_2399143091, key_2399143092, val_2399143093) {
    if (((t_2399143091.data).length == 0)) {
    var correctSizeHEX60gensym25_2399143142 = slotsNeeded_1308622891(32);
    t_2399143091.counter = 0;
    t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    }
    
    var hc_2399143147 = [0];
    var index_2399143154 = rawGet_2399142566(t_2399143091, key_2399143092, hc_2399143147, 0);
    if ((0 <= index_2399143154)) {
    t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2 = nimCopy(t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2, val_2399143093, NTI2399141891);
    }
    else {
      if (((t_2399143091.data).length == 0)) {
      var correctSizeHEX60gensym28_2399143256 = slotsNeeded_1308622891(32);
      t_2399143091.counter = 0;
      t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }      }
      
      if (mustRehash_2399143261(t_2399143091)) {
      enlarge_2399143416(t_2399143091);
      index_2399143154 = rawGetKnownHC_2399143879(t_2399143091, key_2399143092, hc_2399143147[0]);
      }
      
      index_2399143154 = subInt(-1, index_2399143154);
      rawInsert_2399143710(t_2399143091, t_2399143091, "data", key_2399143092, val_2399143093, hc_2399143147[0], index_2399143154);
      t_2399143091.counter = addInt(t_2399143091.counter, 1);
    }
    

  
}

function parseDirectoryListing_2399142469(self_2399142470, basePath_2399142471, jsn_2399142472) {
        var Temporary3;
        var Temporary8;

  var result_2399142473 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2399142472, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]).kind == 6))) {
    var files_2399142478 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]);
    Label1: {
      var item_2399142479 = null;
      if (!((files_2399142478.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2399142478.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872406 = null;
        var colontmp__536872407 = [];
        var Temporary3 = files_2399142478;
        if (ConstSet320[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872407 = Temporary3.elems;
        var i_536872408 = 0;
        var L_536872409 = (colontmp__536872407).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872408 < L_536872409)) break Label5;
              i_536872406 = colontmp__536872407[chckIndx(i_536872408, 0, (colontmp__536872407).length - 1)];
              item_2399142479 = i_536872406;
              result_2399142473.files.push(getStr_1627390106(item_2399142479, []));;
              i_536872408 = addInt(i_536872408, 1);
              if (!(((colontmp__536872407).length == L_536872409))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2399142472, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2399142488 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2399142489 = null;
      if (!((folders_2399142488.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2399142488.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872413 = null;
        var colontmp__536872414 = [];
        var Temporary8 = folders_2399142488;
        if (ConstSet321[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872414 = Temporary8.elems;
        var i_536872415 = 0;
        var L_536872416 = (colontmp__536872414).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872415 < L_536872416)) break Label10;
              i_536872413 = colontmp__536872414[chckIndx(i_536872415, 0, (colontmp__536872414).length - 1)];
              item_2399142489 = i_536872413;
              result_2399142473.folders.push(getStr_1627390106(item_2399142489, []));;
              i_536872415 = addInt(i_536872415, 1);
              if (!(((colontmp__536872414).length == L_536872416))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2399142473;

}
async function getDirectoryListing_2399142497(self_2399142498, relativePath_2399142499) {
    var Temporary3;

  var result_2399142501 = null;

  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499) && !(HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done))) break Label2;
          (await (new Promise(resolve => setTimeout(resolve, 2))));
        }
    };
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: false, listing: ({files: [], folders: []})});
    if ((((relativePath_2399142499).length == 0) || eqStrings(relativePath_2399142499, [46]))) {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2399142499 || []);
    }
    
    var url_2399144117 = nimCopy(null, Temporary3, NTI33554449);
    var response_2399144122 = (await httpGet_2348810256(url_2399144117, none_2348810263()));
++excHandler;
    try {
    var jsn_2399144123 = parseJson_1627395313(response_2399144122);
    var listing_2399144124 = parseDirectoryListing_2399142469(self_2399142498, relativePath_2399142499, jsn_2399144123);
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: true, listing: nimCopy(null, listing_2399144124, NTI2214592517)});
    result_2399142501 = listing_2399144124;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2399144178 = [mnewString(0)];
    fmtRes_2399144178[0].push.apply(fmtRes_2399144178[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2399144178, 0, response_2399144122, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2399144178[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done = true;
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    result_2399142501 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2399142501;

}

function rawGet_2281702091(t_2281702094, key_2281702095, hc_2281702096, hc_2281702096_Idx) {
  var result_2281702097 = 0;

  BeforeRet: {
    hc_2281702096[hc_2281702096_Idx] = hash_1325400491(key_2281702095);
    if ((hc_2281702096[hc_2281702096_Idx] == 0)) {
    hc_2281702096[hc_2281702096_Idx] = 314159265;
    }
    
    if (((t_2281702094.data).length == 0)) {
    result_2281702097 = -1;
    break BeforeRet;
    }
    
    var h_2281702148 = (hc_2281702096[hc_2281702096_Idx] & (t_2281702094.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0)) break Label2;
          if (((t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0 == hc_2281702096[hc_2281702096_Idx]) && eqStrings(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field1, key_2281702095))) {
          result_2281702097 = h_2281702148;
          break BeforeRet;
          }
          
          h_2281702148 = nextTry_1308622883(h_2281702148, (t_2281702094.data).length - 1);
        }
    };
    result_2281702097 = subInt(-1, h_2281702148);
  };

  return result_2281702097;

}

function hasKey_2281702084(t_2281702087, key_2281702088) {
  var result_2281702089 = false;

    var hc_2281702090 = [0];
    result_2281702089 = (0 <= rawGet_2281702091(t_2281702087, key_2281702088, hc_2281702090, 0));

  return result_2281702089;

}

function contains_2281702078(t_2281702081, key_2281702082) {
  var result_2281702083 = false;

  BeforeRet: {
    result_2281702083 = hasKey_2281702084(t_2281702081, key_2281702082);
    break BeforeRet;
  };

  return result_2281702083;

}

function HEX5BHEX5D_2281702382(t_2281702385, key_2281702386) {
  var result_2281702387 = null;

    var hcHEX60gensym22_2281702388 = [0];
    var indexHEX60gensym22_2281702395 = rawGet_2281702091(t_2281702385, key_2281702386, hcHEX60gensym22_2281702388, 0);
    if ((0 <= indexHEX60gensym22_2281702395)) {
    result_2281702387 = t_2281702385.data[chckIndx(indexHEX60gensym22_2281702395, 0, (t_2281702385.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2281702386);
    }
    

  return result_2281702387;

}

function parseDirectoryListing_2281701946(self_2281701947, basePath_2281701948, jsn_2281701949) {
        var Temporary3;

  var result_2281701950 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2281701949, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]).kind == 6))) {
    var tree_2281701955 = HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]);
    Label1: {
      var item_2281701956 = null;
      if (!((tree_2281701955.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2281701955.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872422 = null;
        var colontmp__536872423 = [];
        var Temporary3 = tree_2281701955;
        if (ConstSet322[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872423 = Temporary3.elems;
        var i_536872424 = 0;
        var L_536872425 = (colontmp__536872423).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872424 < L_536872425)) break Label5;
              i_536872422 = colontmp__536872423[chckIndx(i_536872424, 0, (colontmp__536872423).length - 1)];
              item_2281701956 = i_536872422;
              Label6: {
                if (!((item_2281701956.kind == 5))) {
                break Label6;
                }
                
                var path_2281701961 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [112,97,116,104]), []);
                var typ_2281701962 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [116,121,112,101]), []);
                var url_2281701963 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [117,114,108]), []);
                var sha_2281701964 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2281701947.pathToSha, HEX2F_1426063446(basePath_2281701948, path_2281701961), sha_2281701964);
                switch (toJSStr(typ_2281701962)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872424 = addInt(i_536872424, 1);
              if (!(((colontmp__536872423).length == L_536872425))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2281701950;

}

function mustRehash_2281702804(t_2281702806) {
  var result_2281702807 = false;

    if (!((t_2281702806.counter < (t_2281702806.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2281702807 = ((mulInt((t_2281702806.data).length, 2) < mulInt(t_2281702806.counter, 3)) || (subInt((t_2281702806.data).length, t_2281702806.counter) < 4));

  return result_2281702807;

}

function rawInsert_2281703253(t_2281703257, data_2281703258, data_2281703258_Idx, key_2281703259, val_2281703260, hc_2281703261, h_2281703262) {
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field1 = nimCopy(null, key_2281703259, NTI33554449);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2 = nimCopy(data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2, val_2281703260, NTI2214592517);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field0 = hc_2281703261;

  
}

function enlarge_2281702959(t_2281702962) {
    var n_2281702965 = [];
    n_2281702965 = new Array(chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647) ; ++i) { n_2281702965[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2281702962.data; t_2281702962.data = n_2281702965; n_2281702965 = Temporary1;    Label2: {
      var i_2281703029 = 0;
      var colontmp__536872429 = 0;
      colontmp__536872429 = (n_2281702965).length - 1;
      var res_536872430 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872430 <= colontmp__536872429)) break Label4;
            i_2281703029 = res_536872430;
            var eh_2281703083 = n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field0;
            if (isFilled_1308622880(eh_2281703083)) {
            var j_2281703087 = (eh_2281703083 & (t_2281702962.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2281702962.data[chckIndx(j_2281703087, 0, (t_2281702962.data).length - 1)].Field0)) break Label6;
                  j_2281703087 = nextTry_1308622883(j_2281703087, (t_2281702962.data).length - 1);
                }
            };
            rawInsert_2281703253(t_2281702962, t_2281702962, "data", n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field1, n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field2, eh_2281703083, j_2281703087);
            }
            
            res_536872430 = addInt(res_536872430, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2281703422(t_2281703425, key_2281703426, hc_2281703427) {
  var result_2281703428 = 0;

  BeforeRet: {
    if (((t_2281703425.data).length == 0)) {
    result_2281703428 = -1;
    break BeforeRet;
    }
    
    var h_2281703479 = (hc_2281703427 & (t_2281703425.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0)) break Label2;
          if (((t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0 == hc_2281703427) && eqStrings(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field1, key_2281703426))) {
          result_2281703428 = h_2281703479;
          break BeforeRet;
          }
          
          h_2281703479 = nextTry_1308622883(h_2281703479, (t_2281703425.data).length - 1);
        }
    };
    result_2281703428 = subInt(-1, h_2281703479);
  };

  return result_2281703428;

}

function HEX5BHEX5DHEX3D_2281702631(t_2281702634, key_2281702635, val_2281702636) {
    if (((t_2281702634.data).length == 0)) {
    var correctSizeHEX60gensym22_2281702685 = slotsNeeded_1308622891(32);
    t_2281702634.counter = 0;
    t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2281702690 = [0];
    var index_2281702697 = rawGet_2281702091(t_2281702634, key_2281702635, hc_2281702690, 0);
    if ((0 <= index_2281702697)) {
    t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2 = nimCopy(t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2, val_2281702636, NTI2214592517);
    }
    else {
      if (((t_2281702634.data).length == 0)) {
      var correctSizeHEX60gensym25_2281702799 = slotsNeeded_1308622891(32);
      t_2281702634.counter = 0;
      t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2281702804(t_2281702634)) {
      enlarge_2281702959(t_2281702634);
      index_2281702697 = rawGetKnownHC_2281703422(t_2281702634, key_2281702635, hc_2281702690[0]);
      }
      
      index_2281702697 = subInt(-1, index_2281702697);
      rawInsert_2281703253(t_2281702634, t_2281702634, "data", key_2281702635, val_2281702636, hc_2281702690[0], index_2281702697);
      t_2281702634.counter = addInt(t_2281702634.counter, 1);
    }
    

  
}
async function getDirectoryListing_2281702022(self_2281702023, relativePath_2281702024) {
    var Temporary1;
    var Temporary2;

  var result_2281702026 = null;

  BeforeRet: {
    if (contains_2281702078(self_2281702023.cachedDirectoryListings, relativePath_2281702024)) {
    result_2281702026 = HEX5BHEX5D_2281702382(self_2281702023.cachedDirectoryListings, relativePath_2281702024);
    break BeforeRet;
    }
    
    var fmtRes_2281702468 = [mnewString(0)];
    fmtRes_2281702468[0].push.apply(fmtRes_2281702468[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2281702468, 0, self_2281702023.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281702468[0], NTI33554449)]);
    var token_2281702469 = getAccessToken_2281701406();
    if ((((relativePath_2281702024).length == 0) || eqStrings(relativePath_2281702024, [46]))) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2281702023.branchOrHash || []);
    }
    else {
    if (contains_2382364741(self_2281702023.pathToSha, relativePath_2281702024)) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2281702023.pathToSha, relativePath_2281702024), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2281702579 = [mnewString(0)];
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2281702579, 0, relativePath_2281702024, []);
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281702579[0], NTI33554449)]);
      result_2281702026 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2281702583 = nimCopy(null, Temporary1, NTI33554449);
    var response_2281702588 = (await httpGet_2348810256(url_2281702583, token_2281702469));
++excHandler;
    try {
    var jsn_2281702589 = parseJson_1627395313(response_2281702588);
    var listing_2281702590 = parseDirectoryListing_2281701946(self_2281702023, relativePath_2281702024, jsn_2281702589);
    HEX5BHEX5DHEX3D_2281702631(self_2281702023.cachedDirectoryListings, relativePath_2281702024, listing_2281702590);
    result_2281702026 = listing_2281702590;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281703667 = [mnewString(0)];
    fmtRes_2281703667[0].push.apply(fmtRes_2281703667[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281703667, 0, response_2281702588, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281703667[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281702026 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2281702026;

}
async function getDirectoryListing_2264924250(self_2264924251, relativePath_2264924252) {
  var result_2264924254 = null;

  return result_2264924254;

}

function getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557) {
  var result_2214592560 = null;

  return result_2214592560;

}

function getDirectoryListing_2214592561(self_2214592556, relativePath_2214592557) {
  var result_2214592562 = null;

  BeforeRet: {
    chckNilDisp(self_2214592556);
    if (isObj(self_2214592556.m_type, NTI2399141893)) {
    result_2214592562 = getDirectoryListing_2399142497(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2281701380)) {
    result_2214592562 = getDirectoryListing_2281702022(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2264924164)) {
    result_2214592562 = getDirectoryListing_2264924250(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2214592520)) {
    result_2214592562 = getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592562;

}

function loadFile_2382364680(self_2382364681, path_2382364682) {
  var result_2382364683 = [];

  BeforeRet: {
    result_2382364683 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2382364682))), NTI33554449);
    break BeforeRet;
  };

  return result_2382364683;

}

function loadFile_2365587459(self_2365587460, path_2365587461) {
  var result_2365587462 = [];

  return result_2365587462;

}

function loadFile_2365587463(self_2365587460, path_2365587461) {
  var result_2365587464 = [];

  BeforeRet: {
    chckNilDisp(self_2365587460);
    if (isObj(self_2365587460.m_type, NTI2382364676)) {
    result_2365587464 = loadFile_2382364680(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587460.m_type, NTI2365587460)) {
    result_2365587464 = loadFile_2365587459(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    }
  };

  return result_2365587464;

}

function saveFile_2382364684(self_2382364685, path_2382364686, content_2382364687) {
  
}

function saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468) {
  
}

function saveFile_2365587469(self_2365587466, path_2365587467, content_2365587468) {
    chckNilDisp(self_2365587466);
    if (isObj(self_2365587466.m_type, NTI2382364676)) {
    saveFile_2382364684(self_2365587466, path_2365587467, content_2365587468);
    }
    else {
    if (isObj(self_2365587466.m_type, NTI2365587460)) {
    saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468);
    }
    }

  
}

function saveApplicationFile_2382364856(self_2382364857, name_2382364858, content_2382364859) {
    window.localStorage.setItem(toJSStr(name_2382364858), toJSStr(content_2382364859));

  
}

function saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479) {
  
}

function saveApplicationFile_2365587480(self_2365587477, name_2365587478, content_2365587479) {
    chckNilDisp(self_2365587477);
    if (isObj(self_2365587477.m_type, NTI2382364676)) {
    saveApplicationFile_2382364856(self_2365587477, name_2365587478, content_2365587479);
    }
    else {
    if (isObj(self_2365587477.m_type, NTI2365587460)) {
    saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479);
    }
    }

  
}
async function updateWorkspaceName_2399142357(self_2399142358) {
  var result_2399142360 = null;

  BeforeRet: {
    var url_2399142366 = (self_2399142358.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2399142371 = (await httpGet_2348810256(url_2399142366, none_2348810263()));
    var fmtRes_2399142376 = [mnewString(0)];
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2399142376, 0, self_2399142358.baseUrl, []);
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [47]);;
    formatValue_721420459(fmtRes_2399142376, 0, localFolder_2399142371, []);
    self_2399142358.name = nimCopy(null, fmtRes_2399142376[0], NTI33554449);
    result_2399142360 = undefined;
    break BeforeRet;
  };

  return result_2399142360;

}
async function updateWorkspaceName_2399142377(self_2399142358) {
  var result_2399142378 = null;

  BeforeRet: {
    result_2399142378 = updateWorkspaceName_2399142357(self_2399142358);
    break BeforeRet;
  };

  return result_2399142378;

}

function HEX24_3254780188(document_3254780189) {
  var result_3254780190 = [];

  BeforeRet: {
    result_3254780190 = nimCopy(null, document_3254780189.filename, NTI33554449);
    break BeforeRet;
  };

  return result_3254780190;

}

function HEX24_2969571551(document_2969571552) {
  var result_2969571553 = [];

  BeforeRet: {
    result_2969571553 = nimCopy(null, document_2969571552.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2969571553;

}

function HEX24_2818579226(document_2818579227) {
  var result_2818579228 = [];

  BeforeRet: {
    result_2818579228 = nimCopy(null, document_2818579227.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818579228;

}

function HEX24_2197815307(document_2197815308) {
  var result_2197815309 = [];

  BeforeRet: {
    result_2197815309 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2197815309;

}

function HEX24_2197815310(document_2197815308) {
  var result_2197815311 = [];

  BeforeRet: {
    chckNilDisp(document_2197815308);
    if (isObj(document_2197815308.m_type, NTI3254779944)) {
    result_2197815311 = HEX24_3254780188(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2969568612)) {
    result_2197815311 = HEX24_2969571551(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2818572427)) {
    result_2197815311 = HEX24_2818579226(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2197815300)) {
    result_2197815311 = HEX24_2197815307(document_2197815308);
    break BeforeRet;
    }
    }}}
  };

  return result_2197815311;

}

function save_3254780263(self_3254780264, filename_3254780265, app_3254780266) {
    var Temporary1;

    if ((0 < (filename_3254780265).length)) {
    Temporary1 = filename_3254780265;
    }
    else {
    Temporary1 = self_3254780264.filename;
    }
    
    self_3254780264.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_3254780264.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_3254780272 = [mnewString(0)];
    fmtRes_3254780272[0].push.apply(fmtRes_3254780272[0], [91,109,111,100,101,108,100,111,99,93,32,83,97,118,105,110,103,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254780272, 0, self_3254780264.filename, []);
    fmtRes_3254780272[0].push.apply(fmtRes_3254780272[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254780272[0], NTI33554449)]);

  
}

function toJson_3003123902(kind_3003123903, opt_3003123904) {
  var result_3003123905 = null;

  BeforeRet: {
    result_3003123905 = newJString_1627389994(reprEnum(kind_3003123903, NTI3003121667));
    break BeforeRet;
  };

  return result_3003123905;

}

function toJson_2046820654(id_2046820655, opt_2046820656) {
  var result_2046820657 = null;

  BeforeRet: {
    result_2046820657 = newJString_1627389994(HEX24_2046820617(id_2046820655));
    break BeforeRet;
  };

  return result_2046820657;

}

function join_3003123944(a_3003123946, sep_3003123947) {
  var result_3003123948 = [];

    result_3003123948 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3003123963 = 0;
      var x_3003123964 = 0;
      var i_536872439 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872439 < (a_3003123946).length)) break Label3;
            i_3003123963 = i_536872439;
            x_3003123964 = a_3003123946[chckIndx(i_536872439, 0, (a_3003123946).length - 1)];
            if ((0 < i_3003123963)) {
            result_3003123948.push.apply(result_3003123948, sep_3003123947);;
            }
            
            result_3003123948.push.apply(result_3003123948, HEX24_369098760(x_3003123964));;
            i_536872439 = addInt(i_536872439, 1);
          }
      };
    };

  return result_3003123948;

}

function toJson_3003123936(node_3003123937, opt_3003123938) {
  var result_3003123939 = null;

    result_3003123939 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [107,105,110,100], toJson_3003123902(node_3003123937.kind, opt_3003123938));
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [105,100], toJson_2046820654(node_3003123937.id, opt_3003123938));
    if (!(HEX3DHEX3D_2046820626(node_3003123937.reff, null_2046820646))) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [114,101,102,102], toJson_2046820654(node_3003123937.reff, opt_3003123938));
    }
    
    if ((0 < (node_3003123937.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [116,101,120,116], toJson_1811939932(node_3003123937.text, opt_3003123938));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [112,97,116,104], newJString_1627389994(join_3003123944(path_3003123619(node_3003123937), [44,32])));
    if ((0 < len_3003121752(node_3003123937))) {
    var children_3003123965 = newJArray_1627390082();
    Label1: {
      var child_3003123969 = null;
      var i_536872434 = 0;
      var L_536872435 = (node_3003123937.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872434 < L_536872435)) break Label3;
            child_3003123969 = node_3003123937.children[chckIndx(i_536872434, 0, (node_3003123937.children).length - 1)];
            add_1627390190(children_3003123965, toJson_3003123936(child_3003123969, opt_3003123938));
            i_536872434 = addInt(i_536872434, 1);
            if (!(((node_3003123937.children).length == L_536872435))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [99,104,105,108,100,114,101,110], children_3003123965);
    }
    

  return result_3003123939;

}

function get_2818579261(self_2818579263) {
  var result_2818579264 = null;

    if (isNone_2818579269(self_2818579263)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579264 = self_2818579263["val"];

  return result_2818579264;

}

function saveHtml_2969571577(self_2969571578) {
  
}

function save_2969571579(self_2969571580, filename_2969571581, app_2969571582) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2969571581).length)) {
    Temporary1 = filename_2969571581;
    }
    else {
    Temporary1 = self_2969571580.filename;
    }
    
    self_2969571580.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2969571580.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2969571588 = [mnewString(0)];
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571588, 0, self_2969571580.filename, []);
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571588[0], NTI33554449)]);
    var serialized_2969571589 = toJson_3003123936(self_2969571580.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym79_2969571592 = nimCopy(null, self_2969571580.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym79_2969571592)) Temporary2 = false; else {        var ws_2969571615 = get_2818579261(oHEX60gensym79_2969571592);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2969571615, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    if (self_2969571580.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    }
    saveHtml_2969571577(self_2969571580);

  
}

function save_2818579229(self_2818579230, filename_2818579231, app_2818579232) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579231).length)) {
    Temporary1 = filename_2818579231;
    }
    else {
    Temporary1 = self_2818579230.filename;
    }
    
    self_2818579230.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818579230.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579230.appFile = app_2818579232;
      var oHEX60gensym103_2818579236 = nimCopy(null, self_2818579230.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym103_2818579236)) Temporary2 = false; else {        var ws_2818579287 = get_2818579261(oHEX60gensym103_2818579236);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2818579287, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    if (self_2818579230.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    }

  
}

function save_2197815312(self_2197815313, filename_2197815314, app_2197815315) {
  
}

function save_2197815316(self_2197815313, filename_2197815314, app_2197815315) {
    chckNilDisp(self_2197815313);
    if (isObj(self_2197815313.m_type, NTI3254779944)) {
    save_3254780263(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2969568612)) {
    save_2969571579(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2818572427)) {
    save_2818579229(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2197815300)) {
    save_2197815312(self_2197815313, filename_2197815314, app_2197815315);
    }
    }}}

  
}

function parseEnum_3003123912(s_3003123914, default_3003123915) {
    var Temporary1;

  var result_3003123916 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3003123914))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_3003123915;
      break;
    }
    result_3003123916 = Temporary1;

  return result_3003123916;

}

function fromJsonHook_3003123909(t_3003123910, t_3003123910_Idx, jsonNode_3003123911) {
    var Temporary1;

    var Temporary1 = jsonNode_3003123911;
    if (ConstSet323[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_3003123910[t_3003123910_Idx] = parseEnum_3003123912(Temporary1.str, 0);

  
}

function fromJson_3003123980(a_3003123982, a_3003123982_Idx, b_3003123983, opt_3003123984) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003123983, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_3003123983}));
    }
    
    fromJsonHook_3003123909(a_3003123982, a_3003123982_Idx, b_3003123983);

  
}

function jsonTo_3003123974(b_3003123976, opt_3003123978) {
  var result_3003123979 = [0];

    fromJson_3003123980(result_3003123979, 0, b_3003123976, opt_3003123978);

  return result_3003123979[0];

}

function raiseKeyError_3254783986(key_3254783988) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(reprEnum(key_3254783988, NTI3003121667) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3254783895(t_3254783898, key_3254783899) {
  var result_3254783900 = null;

    var hcHEX60gensym22_3254783901 = [0];
    var indexHEX60gensym22_3254783908 = rawGet_3254780428(t_3254783898, key_3254783899, hcHEX60gensym22_3254783901, 0);
    if ((0 <= indexHEX60gensym22_3254783908)) {
    result_3254783900 = t_3254783898.data[chckIndx(indexHEX60gensym22_3254783908, 0, (t_3254783898.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3254783986(key_3254783899);
    }
    

  return result_3254783900;

}

function some_3254784011(val_3254784013) {
  var result_3254784014 = ({val: ({padding: 0, time: 0, fuzz: 0, count: 0}), has: false});

    result_3254784014.has = true;
    result_3254784014.val = nimCopy(result_3254784014.val, val_3254784013, NTI2046820355);

  return result_3254784014;

}

function fromJsonHook_2046820647(id_2046820648, json_2046820649) {
    var Temporary1;

    if ((json_2046820649.kind == 4)) {
    var Temporary1 = json_2046820649;
    if (ConstSet324[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820648 = nimCopy(id_2046820648, parseId_2046820640(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820648 = nimCopy(id_2046820648, null_2046820646, NTI2046820355);
    }
    

  
}

function fromJson_3003123997(a_3003123999, b_3003124000, opt_3003124001) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003124000, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_3003124000}));
    }
    
    fromJsonHook_2046820647(a_3003123999, b_3003124000);

  
}

function jsonTo_3003123991(b_3003123993, opt_3003123995) {
  var result_3003123996 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_3003123997(result_3003123996[0], b_3003123993, opt_3003123995);

  return result_3003123996[0];

}

function setReference_3271564094(node_3271564095, role_3271564096, target_3271564097) {
    Label1: {
      var c_3271564119 = null;
      var i_536872477 = 0;
      var L_536872478 = (node_3271564095.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872477 < L_536872478)) break Label3;
            c_3271564119 = node_3271564095.references[chckIndx(i_536872477, 0, (node_3271564095.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564119.Field0, role_3271564096)) {
            c_3271564119.Field1 = nimCopy(c_3271564119.Field1, target_3271564097, NTI2046820355);
            break Label1;
            }
            
            i_536872477 = addInt(i_536872477, 1);
            if (!(((node_3271564095.references).length == L_536872478))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function setProperty_3271564241(node_3271564242, role_3271564243, value_3271564244) {
    Label1: {
      var c_3271564266 = null;
      var i_536872482 = 0;
      var L_536872483 = (node_3271564242.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872482 < L_536872483)) break Label3;
            c_3271564266 = node_3271564242.properties[chckIndx(i_536872482, 0, (node_3271564242.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564266.Field0, role_3271564243)) {
            c_3271564266.Field1 = nimCopy(c_3271564266.Field1, value_3271564244, NTI3271557124);
            break Label1;
            }
            
            i_536872482 = addInt(i_536872482, 1);
            if (!(((node_3271564242.properties).length == L_536872483))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function hasKey_3254784152(t_3254784155, key_3254784156) {
  var result_3254784157 = false;

    var hc_3254784158 = [0];
    result_3254784157 = (0 <= rawGet_3271557744(t_3254784155, key_3254784156, hc_3254784158, 0));

  return result_3254784157;

}

function contains_3254784146(t_3254784149, key_3254784150) {
  var result_3254784151 = false;

  BeforeRet: {
    result_3254784151 = hasKey_3254784152(t_3254784149, key_3254784150);
    break BeforeRet;
  };

  return result_3254784151;

}

function HEX5BHEX5D_3254784242(t_3254784245, key_3254784246) {
  var result_3254784247 = null;
  var result_3254784247_Idx = 0;

    var hcHEX60gensym22_3254784248 = [0];
    var indexHEX60gensym22_3254784255 = rawGet_3271557744(t_3254784245, key_3254784246, hcHEX60gensym22_3254784248, 0);
    if ((0 <= indexHEX60gensym22_3254784255)) {
    result_3254784247 = t_3254784245.data[chckIndx(indexHEX60gensym22_3254784255, 0, (t_3254784245.data).length - 1)]; result_3254784247_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3254784246);
    }
    

  return [result_3254784247, result_3254784247_Idx];

}

function HEX5BHEX5D_3254784523(s_3254784527, x_3254784528) {
  var result_3254784529 = [];

    var a_3254784531 = x_3254784528.a;
    var L_3254784536 = addInt(subInt(subInt((s_3254784527).length, x_3254784528.b), a_3254784531), 1);
    result_3254784529 = new Array(chckRange(L_3254784536, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254784536, 0, 2147483647) ; ++i) { result_3254784529[i] = null; }    Label1: {
      var i_3254784545 = 0;
      var i_536872486 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872486 < L_3254784536)) break Label3;
            i_3254784545 = i_536872486;
            result_3254784529[chckIndx(i_3254784545, 0, (result_3254784529).length - 1)] = s_3254784527[chckIndx(addInt(i_3254784545, a_3254784531), 0, (s_3254784527).length - 1)];
            i_536872486 = addInt(i_536872486, 1);
          }
      };
    };

  return result_3254784529;

}

function toModel_3254783808(json_3254783809, root_3254783810) {
    var Temporary1;
      var Temporary8;
      var Temporary9;
        var Temporary23;

  var result_3254783811 = null;

  BeforeRet: {
    var kind_3254783817 = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3254783809, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    var data_3254784005 = nimCopy(null, HEX5BHEX5D_3254783895(classes_3254780300[0], kind_3254783817), NTI3254780158);
    var node_3254784016 = newAstNode_3271564392(data_3254784005.Field0, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    if ((kind_3254783817 == 0)) {
    result_3254783811 = null;
    break BeforeRet;
    }
    
    if (hasKey_1627393154(json_3254783809, [114,101,102,102])) {
    var target_3254784026 = jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false});
    if (HEX3DHEX3D_2046820626(target_3254784026, IdString_2986344461)) {
    node_3254784016 = newAstNode_3271564392(stringTypeClass_3321888780, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    if (HEX3DHEX3D_2046820626(target_3254784026, IdInt_2986344460)) {
    node_3254784016 = newAstNode_3271564392(intTypeClass_3321888781, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    if (HEX3DHEX3D_2046820626(target_3254784026, IdVoid_2986344462)) {
    node_3254784016 = newAstNode_3271564392(voidTypeClass_3321888782, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
    }
    else {
    setReference_3271564094(node_3254784016, data_3254784005.Field1, target_3254784026);
    }
    }}
    }
    
    if (hasKey_1627393154(json_3254783809, [116,101,120,116])) {
    if ((kind_3254783817 == 2)) {
    setProperty_3271564241(node_3254784016, data_3254784005.Field1, {kind: 0, intValue: nsuParseInt(jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3254783809, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false})), stringValue: [], boolValue: false});
    }
    else {
    setProperty_3271564241(node_3254784016, data_3254784005.Field1, {kind: 1, stringValue: jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3254783809, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), intValue: 0, boolValue: false});
    }
    
    }
    
    if (hasKey_1627393154(json_3254783809, [99,104,105,108,100,114,101,110])) {
    var Temporary1 = HEX5BHEX5D_1627393037(json_3254783809, [99,104,105,108,100,114,101,110]);
    if (ConstSet325[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var children_3254784065 = nimCopy(null, Temporary1.elems, NTI1627389974);
    switch (kind_3254783817) {
    case 7:
      if (root_3254783810) {
      node_3254784016 = newAstNode_3271564392(nodeListClass_3321888816, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label2: {
        var c_3254784077 = null;
        var i_536872447 = 0;
        var L_536872448 = (children_3254784065).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872447 < L_536872448)) break Label4;
              c_3254784077 = children_3254784065[chckIndx(i_536872447, 0, (children_3254784065).length - 1)];
              add_3271564763(node_3254784016, IdNodeListChildren_2986344517, toModel_3254783808(c_3254784077, false));
              add_3271564763(node_3254784016, IdNodeListChildren_2986344517, newAstNode_3271564392(emptyLineClass_3321888788, none_3271564399()));
              i_536872447 = addInt(i_536872447, 1);
              if (!(((children_3254784065).length == L_536872448))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        Label5: {
          var c_3254784081 = null;
          var i_536872451 = 0;
          var L_536872452 = (children_3254784065).length;
          Label6: {
              Label7: while (true) {
              if (!(i_536872451 < L_536872452)) break Label7;
                c_3254784081 = children_3254784065[chckIndx(i_536872451, 0, (children_3254784065).length - 1)];
                add_3271564763(node_3254784016, IdBlockChildren_2986344493, toModel_3254783808(c_3254784081, false));
                i_536872451 = addInt(i_536872451, 1);
                if (!(((children_3254784065).length == L_536872452))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      break;
    case 4:
      add_3271564763(node_3254784016, IdConstDeclValue_2986344525, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      break;
    case 5:
      add_3271564763(node_3254784016, IdLetDeclType_2986344523, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdLetDeclValue_2986344522, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      break;
    case 6:
      add_3271564763(node_3254784016, IdVarDeclType_2986344520, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdVarDeclValue_2986344519, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      break;
    case 8:
      var fun_3254784087 = jsonTo_3003123991(HEX5BHEX5D_1627393037(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false});
      if (contains_3254784146(binaryOperators_3254782834[0], fun_3254784087)) {
      node_3254784016 = newAstNode_3271564392((Temporary8 = HEX5BHEX5D_3254784242(binaryOperators_3254782834[0], fun_3254784087), Temporary8)[0][Temporary8[1]], some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      add_3271564763(node_3254784016, IdBinaryExpressionLeft_2986344531, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdBinaryExpressionRight_2986344532, toModel_3254783808(children_3254784065[chckIndx(2, 0, (children_3254784065).length - 1)], false));
      }
      else {
      if (contains_3254784146(unaryOperators_3254783679[0], fun_3254784087)) {
      node_3254784016 = newAstNode_3271564392((Temporary9 = HEX5BHEX5D_3254784242(unaryOperators_3254783679[0], fun_3254784087), Temporary9)[0][Temporary9[1]], some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      add_3271564763(node_3254784016, IdUnaryExpressionChild_2986344481, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      }
      else {
      if (HEX3DHEX3D_2046820626(fun_3254784087, IdPrint_2986344450)) {
      node_3254784016 = newAstNode_3271564392(printExpressionClass_3321888806, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label10: {
        var c_3254784549 = null;
        var colontmp__536872455 = [];
        colontmp__536872455 = HEX5BHEX5D_3254784523(children_3254784065, HEX2EHEX2E_1040187488(1, 1));
        var i_536872456 = 0;
        var L_536872457 = (colontmp__536872455).length;
        Label11: {
            Label12: while (true) {
            if (!(i_536872456 < L_536872457)) break Label12;
              c_3254784549 = colontmp__536872455[chckIndx(i_536872456, 0, (colontmp__536872455).length - 1)];
              add_3271564763(node_3254784016, IdPrintArguments_2986344478, toModel_3254783808(c_3254784549, false));
              i_536872456 = addInt(i_536872456, 1);
              if (!(((colontmp__536872455).length == L_536872457))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
      if (HEX3DHEX3D_2046820626(fun_3254784087, IdBuildString_2986344472)) {
      node_3254784016 = newAstNode_3271564392(buildExpressionClass_3321888807, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3254783809, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
      Label13: {
        var c_3254784576 = null;
        var colontmp__536872460 = [];
        colontmp__536872460 = HEX5BHEX5D_3254784523(children_3254784065, HEX2EHEX2E_1040187488(1, 1));
        var i_536872461 = 0;
        var L_536872462 = (colontmp__536872460).length;
        Label14: {
            Label15: while (true) {
            if (!(i_536872461 < L_536872462)) break Label15;
              c_3254784576 = colontmp__536872460[chckIndx(i_536872461, 0, (colontmp__536872460).length - 1)];
              add_3271564763(node_3254784016, IdBuildArguments_2986344479, toModel_3254783808(c_3254784576, false));
              i_536872461 = addInt(i_536872461, 1);
              if (!(((colontmp__536872460).length == L_536872462))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        add_3271564763(node_3254784016, IdCallFunction_2986344515, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
        Label16: {
          var c_3254784595 = null;
          var colontmp__536872465 = [];
          colontmp__536872465 = HEX5BHEX5D_3254784523(children_3254784065, HEX2EHEX2E_1040187488(1, 1));
          var i_536872466 = 0;
          var L_536872467 = (colontmp__536872465).length;
          Label17: {
              Label18: while (true) {
              if (!(i_536872466 < L_536872467)) break Label18;
                c_3254784595 = colontmp__536872465[chckIndx(i_536872466, 0, (colontmp__536872465).length - 1)];
                add_3271564763(node_3254784016, IdCallArguments_2986344514, toModel_3254783808(c_3254784595, false));
                i_536872466 = addInt(i_536872466, 1);
                if (!(((colontmp__536872465).length == L_536872467))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      }}}
      break;
    case 9:
      add_3271564763(node_3254784016, IdIfExpressionCondition_2986344512, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdIfExpressionThenCase_2986344511, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      var nodeTemp_3254784596 = node_3254784016;
      var i_3254784597 = 2;
      Label19: {
          Label20: while (true) {
          if (!(addInt(i_3254784597, 1) < (children_3254784065).length)) break Label20;
            try {
            var el_3254784605 = newAstNode_3271564392(ifClass_3321888819, none_3271564399());
            add_3271564763(el_3254784605, IdIfExpressionCondition_2986344512, toModel_3254783808(children_3254784065[chckIndx(i_3254784597, 0, (children_3254784065).length - 1)], false));
            add_3271564763(el_3254784605, IdIfExpressionThenCase_2986344511, toModel_3254783808(children_3254784065[chckIndx(addInt(i_3254784597, 1), 0, (children_3254784065).length - 1)], false));
            add_3271564763(nodeTemp_3254784596, IdIfExpressionElseCase_2986344510, el_3254784605);
            nodeTemp_3254784596 = el_3254784605;
            } finally {
            i_3254784597 = addInt(i_3254784597, 2);
            }
          }
      };
      if ((i_3254784597 < (children_3254784065).length)) {
      add_3271564763(nodeTemp_3254784596, IdIfExpressionElseCase_2986344510, toModel_3254783808(children_3254784065[chckIndx(i_3254784597, 0, (children_3254784065).length - 1)], false));
      }
      
      break;
    case 10:
      add_3271564763(node_3254784016, IdWhileExpressionCondition_2986344508, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdWhileExpressionBody_2986344507, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      break;
    case 13:
      add_3271564763(node_3254784016, IdAssignmentTarget_2986344498, toModel_3254783808(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdAssignmentValue_2986344497, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      break;
    case 11:
      if (hasKey_1627393154(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], [99,104,105,108,100,114,101,110])) {
      Label22: {
        var c_3254784612 = null;
        var colontmp__536872471 = [];
        var Temporary23 = HEX5BHEX5D_1627393037(children_3254784065[chckIndx(0, 0, (children_3254784065).length - 1)], [99,104,105,108,100,114,101,110]);
        if (ConstSet326[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI1627389955)); }
        colontmp__536872471 = Temporary23.elems;
        var i_536872472 = 0;
        var L_536872473 = (colontmp__536872471).length;
        Label24: {
            Label25: while (true) {
            if (!(i_536872472 < L_536872473)) break Label25;
              c_3254784612 = colontmp__536872471[chckIndx(i_536872472, 0, (colontmp__536872471).length - 1)];
              var param_3254784621 = newAstNode_3271564392(parameterDeclClass_3321888821, some_3254784011(jsonTo_3003123991(HEX5BHEX5D_1627393037(c_3254784612, [105,100]), {allowExtraKeys: false, allowMissingKeys: false})));
              setProperty_3271564241(param_3254784621, IdINamedName_2986344495, {kind: 1, stringValue: jsonTo_1811939884(HEX5BHEX5D_1627393037(c_3254784612, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), intValue: 0, boolValue: false});
              add_3271564763(param_3254784621, IdParameterDeclType_2986344505, toModel_3254783808(HEX5BHEX5D_1627393116(HEX5BHEX5D_1627393037(c_3254784612, [99,104,105,108,100,114,101,110]), 0), false));
              add_3271564763(node_3254784016, IdFunctionDefinitionParameters_2986344502, param_3254784621);
              i_536872472 = addInt(i_536872472, 1);
              if (!(((colontmp__536872471).length == L_536872473))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      
      add_3271564763(node_3254784016, IdFunctionDefinitionReturnType_2986344501, toModel_3254783808(children_3254784065[chckIndx(1, 0, (children_3254784065).length - 1)], false));
      add_3271564763(node_3254784016, IdFunctionDefinitionBody_2986344500, toModel_3254783808(children_3254784065[chckIndx(2, 0, (children_3254784065).length - 1)], false));
      break;
    default: 
      break;
    }
    }
    
    result_3254783811 = node_3254784016;
    break BeforeRet;
  };

  return result_3254783811;

}

function addQuoted_3271567285(s_3271567287, s_3271567287_Idx, x_3271567288) {
    s_3271567287[s_3271567287_Idx].push.apply(s_3271567287[s_3271567287_Idx], reprEnum(x_3271567288, NTI3271557123));;

  
}

function addQuoted_3271567326(s_3271567328, s_3271567328_Idx, x_3271567329) {
    s_3271567328[s_3271567328_Idx].push.apply(s_3271567328[s_3271567328_Idx], nimBoolToStr(x_3271567329));;

  
}

function HEX24_3271567256(x_3271567258) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3271567259 = [[]];

    result_3271567259[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym159_3271567270 = 0;
    if ((0 < countHEX60gensym159_3271567270)) {
    result_3271567259[0].push.apply(result_3271567259[0], [44,32]);;
    }
    
    result_3271567259[0].push.apply(result_3271567259[0], [107,105,110,100]);;
    result_3271567259[0].push.apply(result_3271567259[0], [58,32]);;
    countHEX60gensym159_3271567270 += 1;
    addQuoted_3271567285(result_3271567259, 0, x_3271567258.kind);
    switch (x_3271567258.kind) {
    case 0:
      if ((0 < countHEX60gensym159_3271567270)) {
      result_3271567259[0].push.apply(result_3271567259[0], [44,32]);;
      }
      
      result_3271567259[0].push.apply(result_3271567259[0], [105,110,116,86,97,108,117,101]);;
      result_3271567259[0].push.apply(result_3271567259[0], [58,32]);;
      countHEX60gensym159_3271567270 += 1;
      var Temporary1 = x_3271567258;
      if (ConstSet327[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      addQuoted_855639425(result_3271567259, 0, Temporary1.intValue);
      break;
    case 1:
      if ((0 < countHEX60gensym159_3271567270)) {
      result_3271567259[0].push.apply(result_3271567259[0], [44,32]);;
      }
      
      result_3271567259[0].push.apply(result_3271567259[0], [115,116,114,105,110,103,86,97,108,117,101]);;
      result_3271567259[0].push.apply(result_3271567259[0], [58,32]);;
      countHEX60gensym159_3271567270 += 1;
      var Temporary2 = x_3271567258;
      if (ConstSet328[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      addQuoted_1593835572(result_3271567259, 0, Temporary2.stringValue);
      break;
    case 2:
      if ((0 < countHEX60gensym159_3271567270)) {
      result_3271567259[0].push.apply(result_3271567259[0], [44,32]);;
      }
      
      result_3271567259[0].push.apply(result_3271567259[0], [98,111,111,108,86,97,108,117,101]);;
      result_3271567259[0].push.apply(result_3271567259[0], [58,32]);;
      countHEX60gensym159_3271567270 += 1;
      var Temporary3 = x_3271567258;
      if (ConstSet329[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      addQuoted_3271567326(result_3271567259, 0, Temporary3.boolValue);
      break;
    }
    result_3271567259[0].push.apply(result_3271567259[0], [41]);;

  return result_3271567259[0];

}

function HEX24_3271567215(node_3271567216, recursive_3271567217) {
              var Temporary4;
                var Temporary5;
              var Temporary9;
                var Temporary10;
              var Temporary15;
                var Temporary16;
                    var Temporary20;

  var result_3271567218 = [];

  BeforeRet: {
    var class_3271567219 = nodeClass_3271557504(node_3271567216);
    if ((class_3271567219 == null)) {
    result_3271567218.push.apply(result_3271567218, HEX24_2046820617(node_3271567216.class));;
    }
    else {
    result_3271567218.push.apply(result_3271567218, class_3271567219.name);;
    }
    
    result_3271567218.push.apply(result_3271567218, ([40,105,100,58,32] || []).concat(HEX24_2046820617(node_3271567216.id) || [],[41,58] || []));;
    Label1: {
      var role_3271567226 = null;
      var i_536872489 = 0;
      var L_536872490 = (node_3271567216.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872489 < L_536872490)) break Label3;
            role_3271567226 = node_3271567216.properties[chckIndx(i_536872489, 0, (node_3271567216.properties).length - 1)];
            result_3271567218.push.apply(result_3271567218, [10,226,148,130,32]);;
              if (!!((class_3271567219 == null))) Temporary4 = false; else {                var oHEX60gensym158_3271567232 = propertyDescription_3271563803(class_3271567219, role_3271567226.Field0);
                if (!isSome_3271563858(oHEX60gensym158_3271567232)) Temporary5 = false; else {                  var desc_3271567255 = nimCopy(null, get_3271563875(oHEX60gensym158_3271567232), NTI3271557125);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            result_3271567218.push.apply(result_3271567218, desc_3271567255.role);;
            }
            else {
            result_3271567218.push.apply(result_3271567218, HEX24_2046820617(role_3271567226.Field0));;
            }
            
            result_3271567218.push.apply(result_3271567218, [58,32]);;
            result_3271567218.push.apply(result_3271567218, HEX24_3271567256(role_3271567226.Field1));;
            i_536872489 = addInt(i_536872489, 1);
            if (!(((node_3271567216.properties).length == L_536872490))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var role_3271567335 = null;
      var i_536872493 = 0;
      var L_536872494 = (node_3271567216.references).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872493 < L_536872494)) break Label8;
            role_3271567335 = node_3271567216.references[chckIndx(i_536872493, 0, (node_3271567216.references).length - 1)];
            result_3271567218.push.apply(result_3271567218, [10,226,148,130,32]);;
              if (!!((class_3271567219 == null))) Temporary9 = false; else {                var oHEX60gensym173_3271567341 = nodeReferenceDescription_3271563515(class_3271567219, role_3271567335.Field0);
                if (!isSome_3271563570(oHEX60gensym173_3271567341)) Temporary10 = false; else {                  var desc_3271567364 = nimCopy(null, get_3271563587(oHEX60gensym173_3271567341), NTI3271557128);
                  Temporary10 = true;                }                Temporary9 = Temporary10;              }            if (Temporary9) {
            result_3271567218.push.apply(result_3271567218, desc_3271567364.role);;
            }
            else {
            result_3271567218.push.apply(result_3271567218, HEX24_2046820617(role_3271567335.Field0));;
            }
            
            result_3271567218.push.apply(result_3271567218, [58,32]);;
            result_3271567218.push.apply(result_3271567218, HEX24_2046820617(role_3271567335.Field1));;
            i_536872493 = addInt(i_536872493, 1);
            if (!(((node_3271567216.references).length == L_536872494))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(recursive_3271567217)) {
    break BeforeRet;
    }
    
    var roleIndex_3271567365 = 0;
    Label11: {
      var role_3271567369 = null;
      var i_536872501 = 0;
      var L_536872502 = (node_3271567216.childLists).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872501 < L_536872502)) break Label13;
            role_3271567369 = node_3271567216.childLists[chckIndx(i_536872501, 0, (node_3271567216.childLists).length - 1)];
            try {
            result_3271567218.push.apply(result_3271567218, [10,226,148,130,32]);;
              if (!!((class_3271567219 == null))) Temporary15 = false; else {                var oHEX60gensym175_3271567380 = nodeChildDescription_3271563659(class_3271567219, role_3271567369.Field0);
                if (!isSome_3271563714(oHEX60gensym175_3271567380)) Temporary16 = false; else {                  var desc_3271567403 = nimCopy(null, get_3271563731(oHEX60gensym175_3271567380), NTI3271557127);
                  Temporary16 = true;                }                Temporary15 = Temporary16;              }            if (Temporary15) {
            result_3271567218.push.apply(result_3271567218, desc_3271567403.role);;
            }
            else {
            result_3271567218.push.apply(result_3271567218, HEX24_2046820617(role_3271567369.Field0));;
            }
            
            result_3271567218.push.apply(result_3271567218, [58]);;
            Label17: {
              var i_3271567436 = 0;
              var c_3271567437 = null;
              var i_536872498 = 0;
              var L_536872499 = (role_3271567369.Field1).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536872498 < L_536872499)) break Label19;
                    i_3271567436 = i_536872498;
                    c_3271567437 = role_3271567369.Field1[chckIndx(i_536872498, 0, (role_3271567369.Field1).length - 1)];
                    if (((i_3271567436 == (role_3271567369.Field1).length - 1) && (roleIndex_3271567365 == (node_3271567216.childLists).length - 1))) {
                    result_3271567218.push.apply(result_3271567218, [10,226,148,148,226,148,128,226,148,128,226,148,128]);;
                    }
                    else {
                    result_3271567218.push.apply(result_3271567218, [10,226,148,156,226,148,128,226,148,128,226,148,128]);;
                    }
                    
                    if (((i_3271567436 < (role_3271567369.Field1).length - 1) || (roleIndex_3271567365 < (node_3271567216.childLists).length - 1))) {
                    Temporary20 = [226,148,130,32,32,32];
                    }
                    else {
                    Temporary20 = [32,32,32,32];
                    }
                    
                    var indent_3271567450 = nimCopy(null, Temporary20, NTI33554449);
                    result_3271567218.push.apply(result_3271567218, HEX5BHEX5D_855639319(nsuIndent(HEX24_3271567215(c_3271567437, recursive_3271567217), 1, indent_3271567450), HEX2EHEX2E_1040187488((indent_3271567450).length, 1)));;
                    i_536872498 = addInt(i_536872498, 1);
                    if (!(((role_3271567369.Field1).length == L_536872499))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872501 = addInt(i_536872501, 1);
            if (!(((node_3271567216.childLists).length == L_536872502))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
            } finally {
            roleIndex_3271567365 = addInt(roleIndex_3271567365, 1);
            }
          }
      };
    };
  };

  return result_3271567218;

}

function invoke_3254784759(event_3254784761, arg_3254784762) {
    Label1: {
      var h_3254784785 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872506 = 0;
      var L_536872507 = (event_3254784761.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872506 < L_536872507)) break Label3;
            h_3254784785 = event_3254784761.handlers[chckIndx(i_536872506, 0, (event_3254784761.handlers).length - 1)];
            h_3254784785.Field1(arg_3254784762);
            i_536872506 = addInt(i_536872506, 1);
            if (!(((event_3254784761.handlers).length == L_536872507))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}
async function loadAsync_3254784666(self_3254784667) {
      var Temporary2;

  var result_3254784669 = null;

  BeforeRet: {
    var fmtRes_3254784679 = [mnewString(0)];
    fmtRes_3254784679[0].push.apply(fmtRes_3254784679[0], [91,109,111,100,101,108,100,111,99,93,32,76,111,97,100,105,110,103,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254784679, 0, self_3254784667.filename, []);
    fmtRes_3254784679[0].push.apply(fmtRes_3254784679[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254784679[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_3254784680 = [];
      var oHEX60gensym44_3254784683 = nimCopy(null, self_3254784667.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym44_3254784683)) Temporary2 = false; else {        var ws_3254784706 = get_2818579261(oHEX60gensym44_3254784683);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_3254784680 = nimCopy(null, (await loadFile_2214592545(ws_3254784706, self_3254784667.filename)), NTI33554449);
    }
    else {
    if (self_3254784667.appFile) {
    jsonText_3254784680 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_3254784667.filename), NTI33554449);
    }
    else {
      jsonText_3254784680 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_3254784667.filename), NTI33554449);
    }
    }
    var json_3254784711 = parseJson_1627395313(jsonText_3254784680);
    var testModel_3254784712 = newModel_3271558972(newId_2046820597());
    addLanguage_3271560301(testModel_3254784712, baseLanguage_3321889199);
    var root_3254784713 = toModel_3254783808(json_3254784711, true);
    addRootNode_3271561832(testModel_3254784712, root_3254784713);
    self_3254784667.model = testModel_3254784712;
    self_3254784667.builder = newCellBuilder_3271564852();
    Label3: {
      var language_3254784717 = null;
      var colontmp__536872442 = [];
      colontmp__536872442 = languages_3271557415(self_3254784667.model);
      var i_536872443 = 0;
      var L_536872444 = (colontmp__536872442).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872443 < L_536872444)) break Label5;
            language_3254784717 = colontmp__536872442[chckIndx(i_536872443, 0, (colontmp__536872442).length - 1)];
            addBuilder_3271566410(self_3254784667.builder, builder_3271557492(language_3254784717));
            i_536872443 = addInt(i_536872443, 1);
            if (!(((colontmp__536872442).length == L_536872444))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    addModel_3271558996(project_3254779953[0], self_3254784667.model);
    project_3254779953[0].builder = self_3254784667.builder;
    var uiae_3254784718 = HEX24_3271567215(root_3254784713, true);
    var fmtRes_3254784723 = [mnewString(0)];
    fmtRes_3254784723[0].push.apply(fmtRes_3254784723[0], [91,109,111,100,101,108,100,111,99,93,32,76,111,97,100,32,110,101,119,32,109,111,100,101,108,32]);;
    formatValue_721420459(fmtRes_3254784723, 0, uiae_3254784718, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3254784723[0], NTI33554449)]);
    if (self_3254784667.undoOps.length < 0) { for (var i = self_3254784667.undoOps.length ; i < 0 ; ++i) self_3254784667.undoOps.push(null); }
               else { self_3254784667.undoOps.length = 0; };
    if (self_3254784667.redoOps.length < 0) { for (var i = self_3254784667.redoOps.length ; i < 0 ; ++i) self_3254784667.redoOps.push(null); }
               else { self_3254784667.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_3254784736 = [mnewString(0)];
    fmtRes_3254784736[0].push.apply(fmtRes_3254784736[0], [91,109,111,100,101,108,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,109,111,100,101,108,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_3254784736, 0, self_3254784667.filename, []);
    fmtRes_3254784736[0].push.apply(fmtRes_3254784736[0], [39,58,32]);;
    formatValue_721420459(fmtRes_3254784736, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3254784736[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    invoke_3254784759(self_3254784667.onChanged, self_3254784667);
    result_3254784669 = undefined;
    break BeforeRet;
  };

  return result_3254784669;

}

function load_3254784806(self_3254784807, filename_3254784808) {
    var Temporary1;

    if ((0 < (filename_3254784808).length)) {
    Temporary1 = filename_3254784808;
    }
    else {
    Temporary1 = self_3254784807.filename;
    }
    
    var filename_3254784809 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_3254784809).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_3254784807.filename = nimCopy(null, filename_3254784809, NTI33554449);
    var _ = loadAsync_3254784666(self_3254784807);

  
}

function jsonToAstNode_3003123970(json_3003123971, opt_3003123972) {
        var Temporary3;

  var result_3003123973 = null;

    result_3003123973 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_3003123973.kind = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3003123971, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_3003123973.id = nimCopy(result_3003123973.id, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_3003123971, [114,101,102,102])) {
    result_3003123973.reff = nimCopy(result_3003123973.reff, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_3003123971, [116,101,120,116])) {
    result_3003123973.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3003123971, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_3003123971, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_3003124018 = null;
      var colontmp__536872517 = null;
      colontmp__536872517 = HEX5BHEX5D_1627393037(json_3003123971, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872517.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872517.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872519 = null;
        var colontmp__536872520 = [];
        var Temporary3 = colontmp__536872517;
        if (ConstSet330[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872520 = Temporary3.elems;
        var i_536872521 = 0;
        var L_536872522 = (colontmp__536872520).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872521 < L_536872522)) break Label5;
              i_536872519 = colontmp__536872520[chckIndx(i_536872521, 0, (colontmp__536872520).length - 1)];
              child_3003124018 = i_536872519;
              add_3003121702(result_3003123973, jsonToAstNode_3003123970(child_3003124018, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872521 = addInt(i_536872521, 1);
              if (!(((colontmp__536872520).length == L_536872522))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_3003123973;

}

function clear_3019955856(t_3019955859) {
    t_3019955859.clear();

  
}

function clear_3019956016(t_3019956019) {
    t_3019956019.clear();

  
}

function clear_3019956098(t_3019956101) {
    t_3019956101.clear();

  
}

function clear_3019956180(t_3019956183) {
    t_3019956183.clear();

  
}

function clear_3019956262(t_3019956265) {
    t_3019956265.clear();

  
}

function clear_3019956344(t_3019956347) {
    t_3019956347.clear();

  
}

function clear_3019956426(t_3019956429) {
    t_3019956429.clear();

  
}

function clear_3019956508(t_3019956511) {
    t_3019956511.clear();

  
}

function clear_3019956590(t_3019956593) {
    t_3019956593.clear();

  
}

function clear_3019956672(t_3019956675) {
    t_3019956675.clear();

  
}

function clear_3019956754(t_3019956757) {
    t_3019956757.clear();

  
}

function clear_3019956836(t_3019956839) {
    t_3019956839.clear();

  
}

function clear_3019956918(t_3019956921) {
    t_3019956921.clear();

  
}

function clear_3019957000(t_3019957003) {
    t_3019957003.clear();

  
}

function clear_3019957082(t_3019957085) {
    t_3019957085.clear();

  
}

function deleteAllNodesAndSymbols_3019955776(ctx_3019955777) {
    ctx_3019955777.depGraph.revision = addInt(ctx_3019955777.depGraph.revision, 1);
    clear_3019955856(ctx_3019955777.depGraph.changed);
    clear_3019955856(ctx_3019955777.depGraph.verified);
    clear_3019956016(ctx_3019955777.depGraph.fingerprints);
    clear_3019956098(ctx_3019955777.depGraph.dependencies);
    clear_3019956180(ctx_3019955777.itemsAstNode);
    clear_3019956262(ctx_3019955777.itemsSymbol);
    clear_3019956344(ctx_3019955777.itemsNodeLayoutInput);
    clear_3019956426(ctx_3019955777.itemsFunctionExecutionContext);
    clear_3019956508(ctx_3019955777.queryCacheType);
    clear_3019956590(ctx_3019955777.queryCacheValue);
    clear_3019956672(ctx_3019955777.queryCacheSymbolType);
    clear_3019956754(ctx_3019955777.queryCacheSymbolValue);
    clear_3019956836(ctx_3019955777.queryCacheSymbol);
    clear_3019956918(ctx_3019955777.queryCacheSymbols);
    clear_3019957000(ctx_3019955777.queryCacheFunctionExecution);
    clear_3019957082(ctx_3019955777.queryCacheNodeLayout);

  
}

function clear_2969571738(t_2969571741) {
    Label1: {
      var i_2969571809 = 0;
      var colontmp__536872525 = 0;
      colontmp__536872525 = (t_2969571741.data).length;
      var i_536872526 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872526 < colontmp__536872525)) break Label3;
            i_2969571809 = i_536872526;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field0 = 0;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1 = nimCopy(t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field2 = null;
            i_536872526 = addInt(i_536872526, 1);
          }
      };
    };
    t_2969571741.counter = 0;

  
}
async function loadAsync_2969571620(self_2969571621) {
      var Temporary2;

  var result_2969571623 = null;

  BeforeRet: {
    var fmtRes_2969571633 = [mnewString(0)];
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571633, 0, self_2969571621.filename, []);
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571633[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2969571634 = [];
      var oHEX60gensym86_2969571637 = nimCopy(null, self_2969571621.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym86_2969571637)) Temporary2 = false; else {        var ws_2969571660 = get_2818579261(oHEX60gensym86_2969571637);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2969571634 = nimCopy(null, (await loadFile_2214592545(ws_2969571660, self_2969571621.filename)), NTI33554449);
    }
    else {
    if (self_2969571621.appFile) {
    jsonText_2969571634 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    else {
      jsonText_2969571634 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    }
    var json_2969571665 = parseJson_1627395313(jsonText_2969571634);
    var newAst_2969571666 = jsonToAstNode_3003123970(json_2969571665, {allowExtraKeys: false, allowMissingKeys: false});
    var fmtRes_2969571671 = [mnewString(0)];
    fmtRes_2969571671[0].push.apply(fmtRes_2969571671[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,32,110,101,119,32,97,115,116,32]);;
    formatValue_3087008590(fmtRes_2969571671, 0, newAst_2969571666, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571671[0], NTI33554449)]);
    deleteAllNodesAndSymbols_3019955776(ctx_2969567289);
    Label3: {
      var symbol_2969571681 = null;
      var L_536872510 = len_3019954306(ctx_2969567289.globalScope);
      Label4: {
        var h_536872512 = 0;
        var colontmp__536872513 = 0;
        colontmp__536872513 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872514 = 0;
        Label5: {
            Label6: while (true) {
            if (!(res_536872514 <= colontmp__536872513)) break Label6;
              h_536872512 = res_536872514;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872512, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969571681 = ctx_2969567289.globalScope.data[chckIndx(h_536872512, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969571681);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872510))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872514 = addInt(res_536872514, 1);
            }
        };
      };
    };
    clear_2969571738(self_2969571621.nodes);
    self_2969571621.rootNode = newAst_2969571666;
    handleNodeInserted_2969571616(self_2969571621, self_2969571621.rootNode);
    if (self_2969571621.undoOps.length < 0) { for (var i = self_2969571621.undoOps.length ; i < 0 ; ++i) self_2969571621.undoOps.push(null); }
               else { self_2969571621.undoOps.length = 0; };
    if (self_2969571621.redoOps.length < 0) { for (var i = self_2969571621.redoOps.length ; i < 0 ; ++i) self_2969571621.redoOps.push(null); }
               else { self_2969571621.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2969572293 = [mnewString(0)];
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969572293, 0, self_2969571621.filename, []);
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969572293[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2969571577(self_2969571621);
    result_2969571623 = undefined;
    break BeforeRet;
  };

  return result_2969571623;

}

function load_2969572294(self_2969572295, filename_2969572296) {
    var Temporary1;

    if ((0 < (filename_2969572296).length)) {
    Temporary1 = filename_2969572296;
    }
    else {
    Temporary1 = self_2969572295.filename;
    }
    
    var filename_2969572297 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2969572297).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2969572295.filename = nimCopy(null, filename_2969572297, NTI33554449);
    var _ = loadAsync_2969571620(self_2969572295);

  
}
async function loadAsync_2818579298(self_2818579299, ws_2818579300) {
  var result_2818579302 = null;

  BeforeRet: {
    contentHEX3D_2818573948(self_2818579299, (await loadFile_2214592545(ws_2818579300, self_2818579299.filename)));
    result_2818579302 = undefined;
    break BeforeRet;
  };

  return result_2818579302;

}

function load_2818579312(self_2818579313, filename_2818579314) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579314).length)) {
    Temporary1 = filename_2818579314;
    }
    else {
    Temporary1 = self_2818579313.filename;
    }
    
    var filename_2818579315 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818579315).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579313.filename = nimCopy(null, filename_2818579315, NTI33554449);
      var oHEX60gensym112_2818579319 = nimCopy(null, self_2818579313.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym112_2818579319)) Temporary2 = false; else {        var ws_2818579342 = get_2818579261(oHEX60gensym112_2818579319);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2818579298(self_2818579313, ws_2818579342);
    }
    else {
    if (self_2818579313.appFile) {
    contentHEX3D_2818573948(self_2818579313, loadApplicationFile_2365587474(fs_2365587509, self_2818579313.filename));
    }
    else {
    contentHEX3D_2818573948(self_2818579313, loadFile_2365587463(fs_2365587509, self_2818579313.filename));
    }
    }

  
}

function load_2197815317(self_2197815318, filename_2197815319) {
  
}

function load_2197815320(self_2197815318, filename_2197815319) {
    chckNilDisp(self_2197815318);
    if (isObj(self_2197815318.m_type, NTI3254779944)) {
    load_3254784806(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2969568612)) {
    load_2969572294(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2818572427)) {
    load_2818579312(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2197815300)) {
    load_2197815317(self_2197815318, filename_2197815319);
    }
    }}}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872545 = 0;
      var L_536872546 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872545 < L_536872546)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872545, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872545 = addInt(i_536872545, 1);
            if (!(((a_2919239717).length == L_536872546))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function del_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    var xl_2919239737 = subInt((x_2919239732[x_2919239732_Idx]).length, 1);
    x_2919239732[x_2919239732_Idx][chckIndx(i_2919239733, 0, (x_2919239732[x_2919239732_Idx]).length - 1)] = x_2919239732[x_2919239732_Idx][chckIndx(xl_2919239737, 0, (x_2919239732[x_2919239732_Idx]).length - 1)];
    if (x_2919239732[x_2919239732_Idx].length < chckRange(xl_2919239737, 0, 2147483647)) { for (var i = x_2919239732[x_2919239732_Idx].length ; i < chckRange(xl_2919239737, 0, 2147483647) ; ++i) x_2919239732[x_2919239732_Idx].push(0); }
               else { x_2919239732[x_2919239732_Idx].length = chckRange(xl_2919239737, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872533 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872535 = 0;
        var colontmp__536872536 = 0;
        colontmp__536872536 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872537 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872537 <= colontmp__536872536)) break Label4;
              h_536872535 = res_536872537;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872535, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872540 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872535, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872535, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872540["Field0"];
              list_2919239713 = colontmp__536872540["Field1"][0]; list_2919239713_Idx = colontmp__536872540["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              del_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872533))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872537 = addInt(res_536872537, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818579148(self_2818579149) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818579149.tsParser == null))) {
    deinit_2885681592(self_2818579149.tsParser);
    self_2818579149.tsParser = null;
    }
    
    if (isSome_2818579157(self_2818579149.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818579177(self_2818579149.languageServer), Temporary1)[0][Temporary1[1]], self_2818579149.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818579177(self_2818579149.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818579149.languageServer = nimCopy(self_2818579149.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818579224(self_2818579225) {
    destroy_2818579148(self_2818579225.document);

  
}

function shutdown_2415919221(self_2415919222) {
  
}

function shutdown_2415919223(self_2415919222) {
    chckNilDisp(self_2415919222);
    if (isObj(self_2415919222.m_type, NTI2818572510)) {
    shutdown_2818579224(self_2415919222);
    }
    else {
    if (isObj(self_2415919222.m_type, NTI2415919108)) {
    shutdown_2415919221(self_2415919222);
    }
    }

  
}

function canEdit_3254790291(self_3254790292, document_3254790293) {
  var result_3254790294 = false;

  BeforeRet: {
    if (isObj(document_3254790293.m_type, NTI3254779944)) {
    result_3254790294 = true;
    break BeforeRet;
    }
    else {
      result_3254790294 = false;
      break BeforeRet;
    }
    
  };

  return result_3254790294;

}

function canEdit_2969575591(self_2969575592, document_2969575593) {
  var result_2969575594 = false;

  BeforeRet: {
    if (isObj(document_2969575593.m_type, NTI2969568612)) {
    result_2969575594 = true;
    break BeforeRet;
    }
    else {
      result_2969575594 = false;
      break BeforeRet;
    }
    
  };

  return result_2969575594;

}

function canEdit_2818580265(self_2818580266, document_2818580267) {
  var result_2818580268 = false;

  BeforeRet: {
    if (isObj(document_2818580267.m_type, NTI2818572427)) {
    result_2818580268 = true;
    break BeforeRet;
    }
    else {
      result_2818580268 = false;
      break BeforeRet;
    }
    
  };

  return result_2818580268;

}

function canEdit_2415919224(self_2415919225, document_2415919226) {
  var result_2415919227 = false;

  BeforeRet: {
    result_2415919227 = false;
    break BeforeRet;
  };

  return result_2415919227;

}

function canEdit_2415919228(self_2415919225, document_2415919226) {
  var result_2415919229 = false;

  BeforeRet: {
    chckNilDisp(self_2415919225);
    if (isObj(self_2415919225.m_type, NTI3254779983)) {
    result_2415919229 = canEdit_3254790291(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2969568641)) {
    result_2415919229 = canEdit_2969575591(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2818572510)) {
    result_2415919229 = canEdit_2818580265(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2415919108)) {
    result_2415919229 = canEdit_2415919224(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919229;

}

function subscribe_3254790365(event_3254790367, callback_3254790369) {
  var result_3254790370 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254790370 = nimCopy(result_3254790370, newId_2046820597(), NTI2046820355);
    event_3254790367.handlers.push({Field0: nimCopy(null, result_3254790370, NTI2046820355), Field1: callback_3254790369});;

  return result_3254790370;

}

function handleNodeInserted_3254780147(self_3254780148, doc_3254780149, node_3254780150) {
  
}

function subscribe_3254790437(event_3254790439, callback_3254790441) {
  var result_3254790442 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3254790442 = nimCopy(result_3254790442, newId_2046820597(), NTI2046820355);
    event_3254790439.handlers.push({Field0: nimCopy(null, result_3254790442, NTI2046820355), Field1: callback_3254790441});;

  return result_3254790442;

}

function getOrDefault_3254784970(t_3254784973, key_3254784974) {
  var result_3254784975 = null;

    var hcHEX60gensym56_3254784978 = [0];
    var indexHEX60gensym56_3254785306 = rawGet_3254784979(t_3254784973, key_3254784974, hcHEX60gensym56_3254784978, 0);
    if ((0 <= indexHEX60gensym56_3254785306)) {
    result_3254784975 = t_3254784973.data[chckIndx(indexHEX60gensym56_3254785306, 0, (t_3254784973.data).length - 1)].Field2;
    }
    

  return result_3254784975;

}

function handleDocumentChanged_3254789194(self_3254789195, document_3254789196) {
    var Temporary1;

    rebuildCells_3254780155(self_3254789195);
    self_3254789195.cursor = nimCopy(self_3254789195.cursor, {node: (Temporary1 = rootNodes_3271557403(self_3254789195.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], path: [0], firstIndex: 0, lastIndex: 0, cell: null}, NTI3254779907);
    self_3254789195.cursor.cell = getOrDefault_3254784970(self_3254789195.nodeToCell, self_3254789195.cursor.node.id);
    markDirty_2415919143(self_3254789195);

  
}

function createWithDocument_3254790316(__3254790317, document_3254790318) {
    
function HEX3Aanonymous_3254790332(d_3254790350) {
        handleNodeInserted_3254780147(self_3254790320, d_3254790350["Field0"], d_3254790350["Field1"]);

      
    }
    
function HEX3Aanonymous_3254790404(d_3254790422) {
        handleDocumentChanged_3254789194(self_3254790320, d_3254790422);

      
    }
    var Temporary1;

  var result_3254790319 = null;

  BeforeRet: {
    var self_3254790320 = {eventHandler: null, document: document_3254790318, m_type: NTI3254779983, editor: null, modeEventHandler: null, currentMode: [], nodeToCell: ({data: [], counter: 0}), logicalLines: [], cellWidgetContext: null, cursor: ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null}), useDefaultCellBuilder: false, scrollOffset: 0.0, previousBaseIndex: [], lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    self_3254790320 = createWithPrototype(editor_model_prototype, self_3254790320);
    init_2415919138(self_3254790320);
    var _ = subscribe_3254790365(self_3254790320.document.onNodeInserted, HEX3Aanonymous_3254790332);
    var _ = subscribe_3254790437(self_3254790320.document.onChanged, HEX3Aanonymous_3254790404);
    rebuildCells_3254780155(self_3254790320);
    self_3254790320.cursor = nimCopy(self_3254790320.cursor, {node: (Temporary1 = rootNodes_3271557403(self_3254790320.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], path: [0], firstIndex: 0, lastIndex: 0, cell: null}, NTI3254779907);
    self_3254790320.cursor.cell = getOrDefault_3254784970(self_3254790320.nodeToCell, self_3254790320.cursor.node.id);
    result_3254790319 = self_3254790320;
    break BeforeRet;
  };

  return result_3254790319;

}

function addQuoted_2969575101(s_2969575103, s_2969575103_Idx, x_2969575104) {
    s_2969575103[s_2969575103_Idx].push.apply(s_2969575103[s_2969575103_Idx], HEX24_3003123671(x_2969575104));;

  
}

function HEX24_2969575090(self_2969575092) {
  var result_2969575093 = [[]];

    if (isSome_3003123546(self_2969575092)) {
    result_2969575093[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2969575101(result_2969575093, 0, self_2969575092.val);
    result_2969575093[0].push.apply(result_2969575093[0], [41]);;
    }
    else {
      result_2969575093[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2969575093[0];

}

function formatValue_2969575023(result_2969575025, result_2969575025_Idx, value_2969575026, specifier_2969575027) {
    formatValue_721420459(result_2969575025, result_2969575025_Idx, HEX24_2969575090(value_2969575026), specifier_2969575027);

  
}

function handleNodeInserted_2969575005(self_2969575006, doc_2969575007, node_2969575008) {
      var Temporary1;
      var Temporary2;

    if (!((doc_2969575007.rootNode == self_2969575006.lastRootNode))) {
    nodeHEX3D_2969570829(self_2969575006, HEX5BHEX5D_3003121748(doc_2969575007.rootNode, 0));
    self_2969575006.lastRootNode = doc_2969575007.rootNode;
    }
    
    var fmtRes_2969575017 = [mnewString(0)];
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969575017, 0, node_2969575008, []);
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [44,32]);;
    formatValue_2969575023(fmtRes_2969575017, 0, self_2969575006.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575017[0], NTI33554449)]);
      var oHEX60gensym113_2969575113 = nimCopy(null, self_2969575006.deletedNode, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym113_2969575113)) Temporary2 = false; else {        var deletedNode_2969575136 = get_3003123566(oHEX60gensym113_2969575113);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2969575136 == node_2969575008);      }    if (Temporary1) {
    self_2969575006.deletedNode = nimCopy(self_2969575006.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969575008)), NTI3003121783);
    var fmtRes_2969575148 = mnewString(0);
    fmtRes_2969575148.push.apply(fmtRes_2969575148, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575148, NTI33554449)]);
    }
    
    markDirty_2415919143(self_2969575006);

  
}

function createWithDocument_2969585181(self_2969585182, document_2969585183) {
    
function HEX3Aanonymous_2969585186(doc_2969585187, node_2969585188) {
        handleNodeInserted_2969575005(editor_2969585185, doc_2969585187, node_2969585188);

      
    }

  var result_2969585184 = null;

  BeforeRet: {
    var editor_2969585185 = {eventHandler: null, document: document_2969585183, textDocument: null, textEditor: null, m_type: NTI2969568641, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2969585185 = createWithPrototype(editor_ast_prototype, editor_2969585185);
    init_2415919138(editor_2969585185);
    editor_2969585185.document.onNodeInserted.push(HEX3Aanonymous_2969585186);;
    editor_2969585185.selectedCompletion = 0;
    editor_2969585185.completions = nimCopy(null, [], NTI3204448274);
    Label1: {
      var tmpHEX60gensym1082_2969585202 = null;
      Label2: {
        var res_2969585208 = null;
        res_2969585208 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2969585208.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      };
    };
    add_3003121702(editor_2969585185.document.rootNode, res_2969585208);
    Label4: {
      var c_2969585221 = null;
      var i_536872551 = 0;
      var L_536872552 = (editor_2969585185.document.rootNode.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872551 < L_536872552)) break Label6;
            c_2969585221 = editor_2969585185.document.rootNode.children[chckIndx(i_536872551, 0, (editor_2969585185.document.rootNode.children).length - 1)];
            handleNodeInserted_2969571616(editor_2969585185.document, c_2969585221);
            i_536872551 = addInt(i_536872551, 1);
            if (!(((editor_2969585185.document.rootNode.children).length == L_536872552))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3019954804(ctx_2969567289, editor_2969585185.document.rootNode);
    nodeHEX3D_2969570829(editor_2969585185, HEX5BHEX5D_3003121748(editor_2969585185.document.rootNode, 0));
    result_2969585184 = editor_2969585185;
    break BeforeRet;
  };

  return result_2969585184;

}

function createWithDocument_2818594085(self_2818594086, document_2818594087) {
    
function HEX3Aanonymous_2818594108(__2818594109) {
        handleTextDocumentTextChanged_2818593991(editor_2818594089);

      
    }

  var result_2818594088 = null;

  BeforeRet: {
    var editor_2818594089 = createTextEditorInstance_2818593993();
    editor_2818594089.document = document_2818594087;
    init_2415919138(editor_2818594089);
    if (((editor_2818594089.document.lines).length == 0)) {
    editor_2818594089.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818594057(editor_2818594089.document.textChanged, HEX3Aanonymous_2818594108);
    result_2818594088 = editor_2818594089;
    break BeforeRet;
  };

  return result_2818594088;

}

function createWithDocument_2415919230(self_2415919231, document_2415919232) {
  var result_2415919233 = null;

  BeforeRet: {
    result_2415919233 = null;
    break BeforeRet;
  };

  return result_2415919233;

}

function createWithDocument_2415919243(self_2415919231, document_2415919232) {
  var result_2415919244 = null;

  BeforeRet: {
    chckNilDisp(self_2415919231);
    if (isObj(self_2415919231.m_type, NTI3254779983)) {
    result_2415919244 = createWithDocument_3254790316(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2969568641)) {
    result_2415919244 = createWithDocument_2969585181(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2818572510)) {
    result_2415919244 = createWithDocument_2818594085(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2415919108)) {
    result_2415919244 = createWithDocument_2415919230(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919244;

}

function getEventHandlers_2969575602(self_2969575603) {
  var result_2969575604 = [[]];

    result_2969575604[0].push(self_2969575603.eventHandler);;
    if (!((self_2969575603.modeEventHandler == null))) {
    result_2969575604[0].push(self_2969575603.modeEventHandler);;
    }
    
    if (!((self_2969575603.textEditor == null))) {
    add_2969575620(result_2969575604, 0, getEventHandlers_2415919261(self_2969575603.textEditor));
    result_2969575604[0].push(self_2969575603.textEditEventHandler);;
    }
    

  return result_2969575604[0];

}

function getEventHandlers_2818580276(self_2818580277) {
  var result_2818580278 = [];

    result_2818580278 = nimCopy(null, [self_2818580277.eventHandler], NTI2466250766);
    if (!((self_2818580277.modeEventHandler == null))) {
    result_2818580278.push(self_2818580277.modeEventHandler);;
    }
    
    if (self_2818580277.showCompletions) {
    result_2818580278.push(self_2818580277.completionEventHandler);;
    }
    

  return result_2818580278;

}

function getEventHandlers_2466250757(self_2466250758) {
  var result_2466250759 = [];

  BeforeRet: {
    result_2466250759 = nimCopy(null, [self_2466250758.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2466250759;

}

function getEventHandlers_3254790302(self_3254790303) {
  var result_3254790304 = [];

    result_3254790304.push(self_3254790303.eventHandler);;
    if (!((self_3254790303.modeEventHandler == null))) {
    result_3254790304.push(self_3254790303.modeEventHandler);;
    }
    

  return result_3254790304;

}

function getEventHandlers_2415919245(self_2415919246) {
  var result_2415919247 = [];

  BeforeRet: {
    result_2415919247 = nimCopy(null, [], NTI2415919187);
    break BeforeRet;
  };

  return result_2415919247;

}

function getEventHandlers_2415919261(self_2415919246) {
  var result_2415919262 = [];

  BeforeRet: {
    chckNilDisp(self_2415919246);
    if (isObj(self_2415919246.m_type, NTI2969568641)) {
    result_2415919262 = getEventHandlers_2969575602(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2818572510)) {
    result_2415919262 = getEventHandlers_2818580276(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2466250756)) {
    result_2415919262 = getEventHandlers_2466250757(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI3254779983)) {
    result_2415919262 = getEventHandlers_3254790302(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2415919108)) {
    result_2415919262 = getEventHandlers_2415919245(self_2415919246);
    break BeforeRet;
    }
    }}}}
  };

  return result_2415919262;

}

function newNode_3254785420(x_3254785422) {
  var result_3254785423 = null;

    var nodes_3254785424 = [];
    Label1: {
      var e_3254785428 = 0;
      var i_536872555 = 0;
      var L_536872556 = (x_3254785422).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872555 < L_536872556)) break Label3;
            e_3254785428 = x_3254785422[chckIndx(i_536872555, 0, (x_3254785422).length - 1)];
            nodes_3254785424.push(newNodeFromBaseType_3321889256(e_3254785428));;
            i_536872555 = addInt(i_536872555, 1);
            if (!(((x_3254785422).length == L_536872556))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254785423 = {kind: 10, nodes: nimCopy(null, nodes_3254785424, NTI3254782693), value: []};

  return result_3254785423;

}

function newNodeFromBaseType_3254785413(x_3254785415) {
  var result_3254785416 = null;

    result_3254785416 = newNode_3254785420(x_3254785415);

  return result_3254785416;

}

function newNode_3254785528(x_3254785530) {
  var result_3254785531 = null;

    var nodes_3254785532 = [];
    Label1: {
      var e_3254785536 = null;
      var i_536872559 = 0;
      var L_536872560 = (x_3254785530).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872559 < L_536872560)) break Label3;
            e_3254785536 = x_3254785530[chckIndx(i_536872559, 0, (x_3254785530).length - 1)];
            nodes_3254785532.push(newNodeFromBaseType_3254785440(e_3254785536));;
            i_536872559 = addInt(i_536872559, 1);
            if (!(((x_3254785530).length == L_536872560))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254785531 = {kind: 10, nodes: nimCopy(null, nodes_3254785532, NTI3254782772), value: []};

  return result_3254785531;

}

function newNodeFromBaseType_3254785521(x_3254785523) {
  var result_3254785524 = null;

    result_3254785524 = newNode_3254785528(x_3254785523);

  return result_3254785524;

}

function newNode_3254785555(x_3254785557) {
  var result_3254785558 = null;

    var nodes_3254785559 = [];
    Label1: {
      var e_3254785563 = null;
      var i_536872563 = 0;
      var L_536872564 = (x_3254785557).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872563 < L_536872564)) break Label3;
            e_3254785563 = x_3254785557[chckIndx(i_536872563, 0, (x_3254785557).length - 1)];
            nodes_3254785559.push(newNodeFromBaseType_3321889204(e_3254785563));;
            i_536872563 = addInt(i_536872563, 1);
            if (!(((x_3254785557).length == L_536872564))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254785558 = {kind: 10, nodes: nimCopy(null, nodes_3254785559, NTI3254782794), value: []};

  return result_3254785558;

}

function newNodeFromBaseType_3254785548(x_3254785550) {
  var result_3254785551 = null;

    result_3254785551 = newNode_3254785555(x_3254785550);

  return result_3254785551;

}

function newNode_3254785582(x_3254785584) {
  var result_3254785585 = null;

    var nodes_3254785586 = [];
    Label1: {
      var e_3254785609 = null;
      var i_536872568 = 0;
      var L_536872569 = (x_3254785584).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872568 < L_536872569)) break Label3;
            e_3254785609 = x_3254785584[chckIndx(i_536872568, 0, (x_3254785584).length - 1)];
            nodes_3254785586.push(newNodeFromBaseType_3254785484(e_3254785609));;
            i_536872568 = addInt(i_536872568, 1);
            if (!(((x_3254785584).length == L_536872569))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254785585 = {kind: 10, nodes: nimCopy(null, nodes_3254785586, NTI3254782816), value: []};

  return result_3254785585;

}

function newNodeFromBaseType_3254785575(x_3254785577) {
  var result_3254785578 = null;

    result_3254785578 = newNode_3254785582(x_3254785577);

  return result_3254785578;

}

function len_3254785716(t_3254785719) {
  var result_3254785720 = 0;

    result_3254785720 = t_3254785719.counter;

  return result_3254785720;

}

function newNode_3254785646(x_3254785649) {
  var result_3254785650 = null;

    var nodes_3254785651 = [];
    Label1: {
      var k_3254786039 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3254786040 = null;
      var L_536872576 = len_3254785716(x_3254785649);
      Label2: {
        var h_536872578 = 0;
        var colontmp__536872579 = 0;
        colontmp__536872579 = (x_3254785649.data).length - 1;
        var res_536872580 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872580 <= colontmp__536872579)) break Label4;
              h_536872578 = res_536872580;
              if (isFilled_1308622880(x_3254785649.data[chckIndx(h_536872578, 0, (x_3254785649.data).length - 1)].Field0)) {
              k_3254786039 = nimCopy(k_3254786039, x_3254785649.data[chckIndx(h_536872578, 0, (x_3254785649.data).length - 1)].Field1, NTI2046820355);
              v_3254786040 = x_3254785649.data[chckIndx(h_536872578, 0, (x_3254785649.data).length - 1)].Field2;
              nodes_3254785651.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889234(k_3254786039), newNodeFromBaseType_3321889204(v_3254786040)));;
              if (!((len_3254785716(x_3254785649) == L_536872576))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872580 = addInt(res_536872580, 1);
            }
        };
      };
    };
    result_3254785650 = {kind: 13, nodes: nimCopy(null, nodes_3254785651, NTI3254782860), value: []};

  return result_3254785650;

}

function newNodeFromBaseType_3254785630(x_3254785632) {
  var result_3254785633 = null;

    result_3254785633 = newNode_3254785646(x_3254785632);

  return result_3254785633;

}

function len_3254786141(t_3254786144) {
  var result_3254786145 = 0;

    result_3254786145 = t_3254786144.counter;

  return result_3254786145;

}

function newNode_3254786071(x_3254786074) {
  var result_3254786075 = null;

    var nodes_3254786076 = [];
    Label1: {
      var k_3254786464 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var v_3254786465 = null;
      var L_536872587 = len_3254786141(x_3254786074);
      Label2: {
        var h_536872589 = 0;
        var colontmp__536872590 = 0;
        colontmp__536872590 = (x_3254786074.data).length - 1;
        var res_536872591 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872591 <= colontmp__536872590)) break Label4;
              h_536872589 = res_536872591;
              if (isFilled_1308622880(x_3254786074.data[chckIndx(h_536872589, 0, (x_3254786074.data).length - 1)].Field0)) {
              k_3254786464 = nimCopy(k_3254786464, x_3254786074.data[chckIndx(h_536872589, 0, (x_3254786074.data).length - 1)].Field1, NTI2046820355);
              v_3254786465 = x_3254786074.data[chckIndx(h_536872589, 0, (x_3254786074.data).length - 1)].Field2;
              nodes_3254786076.push(newFieldPairNode_3305111712(newNodeFromBaseType_3321889234(k_3254786464), newNodeFromBaseType_3254785440(v_3254786465)));;
              if (!((len_3254786141(x_3254786074) == L_536872587))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872591 = addInt(res_536872591, 1);
            }
        };
      };
    };
    result_3254786075 = {kind: 13, nodes: nimCopy(null, nodes_3254786076, NTI3254783059), value: []};

  return result_3254786075;

}

function newNodeFromBaseType_3254786055(x_3254786057) {
  var result_3254786058 = null;

    result_3254786058 = newNode_3254786071(x_3254786057);

  return result_3254786058;

}

function newNode_3254785506(x_3254785508) {
  var result_3254785509 = null;

    var nodes_3254785510 = [];
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3254785508.id)));;
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,111,116,78,111,100,101,115]), newNodeFromBaseType_3254785521(x_3254785508.rootNodes)));;
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,97,110,103,117,97,103,101,115]), newNodeFromBaseType_3254785548(x_3254785508.languages)));;
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,109,112,111,114,116,101,100,77,111,100,101,108,115]), newNodeFromBaseType_3254785575(x_3254785508.importedModels)));;
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115,101,115,84,111,76,97,110,103,117,97,103,101,115]), newNodeFromBaseType_3254785630(x_3254785508.classesToLanguages)));;
    nodes_3254785510.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101,115]), newNodeFromBaseType_3254786055(x_3254785508.nodes)));;
    result_3254785509 = {kind: 14, value: [77,111,100,101,108,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254785510, NTI3254782757)};

  return result_3254785509;

}

function newNodeFromBaseType_3254785499(x_3254785501) {
  var result_3254785502 = null;

    result_3254785502 = newNode_3254785506(x_3254785501);

  return result_3254785502;

}

function newNode_3254785491(x_3254785493) {
    var Temporary1;

  var result_3254785494 = null;

    if (!((x_3254785493 == null))) {
    Temporary1 = newNodeFromBaseType_3254785499(x_3254785493);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254785494 = Temporary1;

  return result_3254785494;

}

function newNodeFromBaseType_3254785484(x_3254785486) {
  var result_3254785487 = null;

    result_3254785487 = newNode_3254785491(x_3254785486);

  return result_3254785487;

}

function newNode_3254786546(x_3254786548) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3254786549 = null;

    var nodes_3254786550 = [];
    nodes_3254786550.push(newFieldPairNode_3305111712(newNameNode_3305111683([107,105,110,100]), newNodeFromBaseType_3321889576(x_3254786548.kind)));;
    switch (x_3254786548.kind) {
    case 0:
      var Temporary1 = x_3254786548;
      if (ConstSet331[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3271557123)); }
      nodes_3254786550.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,116,86,97,108,117,101]), newNodeFromBaseType_3321889256(Temporary1.intValue)));;
      break;
    case 1:
      var Temporary2 = x_3254786548;
      if (ConstSet332[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      nodes_3254786550.push(newFieldPairNode_3305111712(newNameNode_3305111683([115,116,114,105,110,103,86,97,108,117,101]), newNodeFromBaseType_3321889461(Temporary2.stringValue)));;
      break;
    case 2:
      var Temporary3 = x_3254786548;
      if (ConstSet333[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      nodes_3254786550.push(newFieldPairNode_3305111712(newNameNode_3305111683([98,111,111,108,86,97,108,117,101]), newNodeFromBaseType_3321889513(Temporary3.boolValue)));;
      break;
    }
    result_3254786549 = {kind: 14, value: [80,114,111,112,101,114,116,121,86,97,108,117,101], nodes: nimCopy(null, nodes_3254786550, NTI3254783295)};

  return result_3254786549;

}

function newNodeFromBaseType_3254786539(x_3254786541) {
  var result_3254786542 = null;

    result_3254786542 = newNode_3254786546(x_3254786541);

  return result_3254786542;

}

function newNode_3254786524(x_3254786526) {
  var result_3254786527 = null;

    var nodes_3254786528 = [];
    nodes_3254786528.push(newNodeFromBaseType_3321889234(x_3254786526["Field0"]));;
    nodes_3254786528.push(newNodeFromBaseType_3254786539(x_3254786526["Field1"]));;
    result_3254786527 = {kind: 12, nodes: nimCopy(null, nodes_3254786528, NTI3254783280), value: []};

  return result_3254786527;

}

function newNodeFromBaseType_3254786517(x_3254786519) {
  var result_3254786520 = null;

    result_3254786520 = newNode_3254786524(x_3254786519);

  return result_3254786520;

}

function newNode_3254786508(x_3254786510) {
  var result_3254786511 = null;

    var nodes_3254786512 = [];
    Label1: {
      var e_3254786516 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_536872594 = 0;
      var L_536872595 = (x_3254786510).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872594 < L_536872595)) break Label3;
            e_3254786516 = x_3254786510[chckIndx(i_536872594, 0, (x_3254786510).length - 1)];
            nodes_3254786512.push(newNodeFromBaseType_3254786517(e_3254786516));;
            i_536872594 = addInt(i_536872594, 1);
            if (!(((x_3254786510).length == L_536872595))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254786511 = {kind: 10, nodes: nimCopy(null, nodes_3254786512, NTI3254783268), value: []};

  return result_3254786511;

}

function newNodeFromBaseType_3254786501(x_3254786503) {
  var result_3254786504 = null;

    result_3254786504 = newNode_3254786508(x_3254786503);

  return result_3254786504;

}

function newNode_3254786620(x_3254786622) {
  var result_3254786623 = null;

    var nodes_3254786624 = [];
    nodes_3254786624.push(newNodeFromBaseType_3321889234(x_3254786622["Field0"]));;
    nodes_3254786624.push(newNodeFromBaseType_3321889234(x_3254786622["Field1"]));;
    result_3254786623 = {kind: 12, nodes: nimCopy(null, nodes_3254786624, NTI3254783356), value: []};

  return result_3254786623;

}

function newNodeFromBaseType_3254786613(x_3254786615) {
  var result_3254786616 = null;

    result_3254786616 = newNode_3254786620(x_3254786615);

  return result_3254786616;

}

function newNode_3254786604(x_3254786606) {
  var result_3254786607 = null;

    var nodes_3254786608 = [];
    Label1: {
      var e_3254786612 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_536872598 = 0;
      var L_536872599 = (x_3254786606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872598 < L_536872599)) break Label3;
            e_3254786612 = x_3254786606[chckIndx(i_536872598, 0, (x_3254786606).length - 1)];
            nodes_3254786608.push(newNodeFromBaseType_3254786613(e_3254786612));;
            i_536872598 = addInt(i_536872598, 1);
            if (!(((x_3254786606).length == L_536872599))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254786607 = {kind: 10, nodes: nimCopy(null, nodes_3254786608, NTI3254783344), value: []};

  return result_3254786607;

}

function newNodeFromBaseType_3254786597(x_3254786599) {
  var result_3254786600 = null;

    result_3254786600 = newNode_3254786604(x_3254786599);

  return result_3254786600;

}

function newNode_3254786673(x_3254786675) {
  var result_3254786676 = null;

    var nodes_3254786677 = [];
    nodes_3254786677.push(newNodeFromBaseType_3321889234(x_3254786675["Field0"]));;
    nodes_3254786677.push(newNodeFromBaseType_3254785521(x_3254786675["Field1"]));;
    result_3254786676 = {kind: 12, nodes: nimCopy(null, nodes_3254786677, NTI3254783396), value: []};

  return result_3254786676;

}

function newNodeFromBaseType_3254786666(x_3254786668) {
  var result_3254786669 = null;

    result_3254786669 = newNode_3254786673(x_3254786668);

  return result_3254786669;

}

function newNode_3254786657(x_3254786659) {
  var result_3254786660 = null;

    var nodes_3254786661 = [];
    Label1: {
      var e_3254786665 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: []};
      var i_536872602 = 0;
      var L_536872603 = (x_3254786659).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872602 < L_536872603)) break Label3;
            e_3254786665 = x_3254786659[chckIndx(i_536872602, 0, (x_3254786659).length - 1)];
            nodes_3254786661.push(newNodeFromBaseType_3254786666(e_3254786665));;
            i_536872602 = addInt(i_536872602, 1);
            if (!(((x_3254786659).length == L_536872603))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254786660 = {kind: 10, nodes: nimCopy(null, nodes_3254786661, NTI3254783384), value: []};

  return result_3254786660;

}

function newNodeFromBaseType_3254786650(x_3254786652) {
  var result_3254786653 = null;

    result_3254786653 = newNode_3254786657(x_3254786652);

  return result_3254786653;

}

function newNode_3254785462(x_3254785464) {
  var result_3254785465 = null;

    var nodes_3254785466 = [];
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3254785464.id)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,108,97,115,115]), newNodeFromBaseType_3321889234(x_3254785464.class)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([109,111,100,101,108]), newNodeFromBaseType_3254785484(x_3254785464.model)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,114,101,110,116]), newNodeFromBaseType_3254785440(x_3254785464.parent)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,111,108,101]), newNodeFromBaseType_3321889234(x_3254785464.role)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,114,111,112,101,114,116,105,101,115]), newNodeFromBaseType_3254786501(x_3254785464.properties)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([114,101,102,101,114,101,110,99,101,115]), newNodeFromBaseType_3254786597(x_3254785464.references)));;
    nodes_3254785466.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,104,105,108,100,76,105,115,116,115]), newNodeFromBaseType_3254786650(x_3254785464.childLists)));;
    result_3254785465 = {kind: 14, value: [65,115,116,78,111,100,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254785466, NTI3254782726)};

  return result_3254785465;

}

function newNodeFromBaseType_3254785455(x_3254785457) {
  var result_3254785458 = null;

    result_3254785458 = newNode_3254785462(x_3254785457);

  return result_3254785458;

}

function newNode_3254785447(x_3254785449) {
    var Temporary1;

  var result_3254785450 = null;

    if (!((x_3254785449 == null))) {
    Temporary1 = newNodeFromBaseType_3254785455(x_3254785449);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254785450 = Temporary1;

  return result_3254785450;

}

function newNodeFromBaseType_3254785440(x_3254785442) {
  var result_3254785443 = null;

    result_3254785443 = newNode_3254785447(x_3254785442);

  return result_3254785443;

}

function newNode_3254786775(x_3254786777) {
  var result_3254786778 = null;

    result_3254786778 = {kind: 4, value: [112,114,111,99,32,120,40,41], nodes: []};

  return result_3254786778;

}

function newNodeFromBaseType_3254786768(x_3254786770) {
  var result_3254786771 = null;

    result_3254786771 = newNode_3254786775(x_3254786770);

  return result_3254786771;

}

function newNode_3254786799(x_3254786801) {
  var result_3254786802 = null;

    result_3254786802 = {kind: 4, value: [67,101,108,108,73,115,86,105,115,105,98,108,101,80,114,101,100,105,99,97,116,101], nodes: []};

  return result_3254786802;

}

function newNodeFromBaseType_3254786792(x_3254786794) {
  var result_3254786795 = null;

    result_3254786795 = newNode_3254786799(x_3254786794);

  return result_3254786795;

}

function newNode_3254786834(x_3254786836) {
  var result_3254786837 = null;

    var nodes_3254786838 = [];
    nodes_3254786838.push(newFieldPairNode_3305111712(newNameNode_3305111683([111,110,78,101,119,76,105,110,101]), newNodeFromBaseType_3321889513(x_3254786836.onNewLine)));;
    nodes_3254786838.push(newFieldPairNode_3305111712(newNameNode_3305111683([97,100,100,78,101,119,108,105,110,101,65,102,116,101,114]), newNodeFromBaseType_3321889513(x_3254786836.addNewlineAfter)));;
    nodes_3254786838.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,100,101,110,116,67,104,105,108,100,114,101,110]), newNodeFromBaseType_3321889513(x_3254786836.indentChildren)));;
    nodes_3254786838.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,83,112,97,99,101,76,101,102,116]), newNodeFromBaseType_3321889513(x_3254786836.noSpaceLeft)));;
    nodes_3254786838.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,83,112,97,99,101,82,105,103,104,116]), newNodeFromBaseType_3321889513(x_3254786836.noSpaceRight)));;
    result_3254786837 = {kind: 14, value: [67,101,108,108,83,116,121,108,101,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254786838, NTI3254783511)};

  return result_3254786837;

}

function newNodeFromBaseType_3254786827(x_3254786829) {
  var result_3254786830 = null;

    result_3254786830 = newNode_3254786834(x_3254786829);

  return result_3254786830;

}

function newNode_3254786819(x_3254786821) {
    var Temporary1;

  var result_3254786822 = null;

    if (!((x_3254786821 == null))) {
    Temporary1 = newNodeFromBaseType_3254786827(x_3254786821);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254786822 = Temporary1;

  return result_3254786822;

}

function newNodeFromBaseType_3254786812(x_3254786814) {
  var result_3254786815 = null;

    result_3254786815 = newNode_3254786819(x_3254786814);

  return result_3254786815;

}

function newNode_3254786732(x_3254786734) {
  var result_3254786735 = null;

    var nodes_3254786736 = [];
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,100]), newNodeFromBaseType_3321889234(x_3254786734.id)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,114,101,110,116]), newNodeFromBaseType_3254786710(x_3254786734.parent)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101]), newNodeFromBaseType_3254785440(x_3254786734.node)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,105,110,101]), newNodeFromBaseType_3321889256(x_3254786734.line)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,108,108,67,104,105,108,100,114,101,110]), newNodeFromBaseType_3254786768(x_3254786734.fillChildren)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,108,108,101,100]), newNodeFromBaseType_3321889513(x_3254786734.filled)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,115,86,105,115,105,98,108,101]), newNodeFromBaseType_3254786792(x_3254786734.isVisible)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([115,116,121,108,101]), newNodeFromBaseType_3254786812(x_3254786734.style)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,105,115,97,98,108,101,83,101,108,101,99,116,105,111,110]), newNodeFromBaseType_3321889513(x_3254786734.disableSelection)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,99,114,101,97,115,101,73,110,100,101,110,116,66,101,102,111,114,101]), newNodeFromBaseType_3321889513(x_3254786734.increaseIndentBefore)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,99,114,101,97,115,101,73,110,100,101,110,116,66,101,102,111,114,101]), newNodeFromBaseType_3321889513(x_3254786734.decreaseIndentBefore)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([105,110,99,114,101,97,115,101,73,110,100,101,110,116,65,102,116,101,114]), newNodeFromBaseType_3321889513(x_3254786734.increaseIndentAfter)));;
    nodes_3254786736.push(newFieldPairNode_3305111712(newNameNode_3305111683([100,101,99,114,101,97,115,101,73,110,100,101,110,116,65,102,116,101,114]), newNodeFromBaseType_3321889513(x_3254786734.decreaseIndentAfter)));;
    result_3254786735 = {kind: 14, value: [67,101,108,108,58,79,98,106,101,99,116,84,121,112,101], nodes: nimCopy(null, nodes_3254786736, NTI3254783441)};

  return result_3254786735;

}

function newNodeFromBaseType_3254786725(x_3254786727) {
  var result_3254786728 = null;

    result_3254786728 = newNode_3254786732(x_3254786727);

  return result_3254786728;

}

function newNode_3254786717(x_3254786719) {
    var Temporary1;

  var result_3254786720 = null;

    if (!((x_3254786719 == null))) {
    Temporary1 = newNodeFromBaseType_3254786725(x_3254786719);
    }
    else {
    Temporary1 = {kind: 17, value: [110,105,108], nodes: []};
    }
    
    result_3254786720 = Temporary1;

  return result_3254786720;

}

function newNodeFromBaseType_3254786710(x_3254786712) {
  var result_3254786713 = null;

    result_3254786713 = newNode_3254786717(x_3254786712);

  return result_3254786713;

}

function newNode_3254785391(x_3254785393) {
  var result_3254785394 = null;

    var nodes_3254785395 = [];
    nodes_3254785395.push(newFieldPairNode_3305111712(newNameNode_3305111683([102,105,114,115,116,73,110,100,101,120]), newNodeFromBaseType_3321889256(x_3254785393.firstIndex)));;
    nodes_3254785395.push(newFieldPairNode_3305111712(newNameNode_3305111683([108,97,115,116,73,110,100,101,120]), newNodeFromBaseType_3321889256(x_3254785393.lastIndex)));;
    nodes_3254785395.push(newFieldPairNode_3305111712(newNameNode_3305111683([112,97,116,104]), newNodeFromBaseType_3254785413(x_3254785393.path)));;
    nodes_3254785395.push(newFieldPairNode_3305111712(newNameNode_3305111683([110,111,100,101]), newNodeFromBaseType_3254785440(x_3254785393.node)));;
    nodes_3254785395.push(newFieldPairNode_3305111712(newNameNode_3305111683([99,101,108,108]), newNodeFromBaseType_3254786710(x_3254785393.cell)));;
    result_3254785394 = {kind: 14, value: [67,101,108,108,67,117,114,115,111,114], nodes: nimCopy(null, nodes_3254785395, NTI3254782673)};

  return result_3254785394;

}

function newNodeFromBaseType_3254785384(x_3254785386) {
  var result_3254785387 = null;

    result_3254785387 = newNode_3254785391(x_3254785386);

  return result_3254785387;

}

function handleDocumentChanged_3254784893(self_3254784894) {
    var Temporary1;

    var fmtRes_3254784899 = mnewString(0);
    fmtRes_3254784899.push.apply(fmtRes_3254784899, [91,109,111,100,101,108,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254784899, NTI33554449)]);
    rebuildCells_3254780155(self_3254784894);
    self_3254784894.cursor = nimCopy(self_3254784894.cursor, {node: (Temporary1 = rootNodes_3271557403(self_3254784894.document.model), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], path: [0], firstIndex: 0, lastIndex: 0, cell: null}, NTI3254779907);
    self_3254784894.cursor.cell = getOrDefault_3254784970(self_3254784894.nodeToCell, self_3254784894.cursor.node.id);
    printNodes_3305112157([newTopPairNode_3305111686(newNameNode_3305111683([115,101,108,102,46,99,117,114,115,111,114]), newNodeFromBaseType_3254785384(self_3254784894.cursor))]);
    markDirty_2415919143(self_3254784894);

  
}

function reset_2969575717(obj_2969575719, obj_2969575719_Idx) {
    obj_2969575719[obj_2969575719_Idx] = null;

  
}

function clear_2969575710(deq_2969575712) {
    Label1: {
      var el_2969575716 = null;
      var el_2969575716_Idx = 0;
      var i_536872613 = deq_2969575712.head;
      Label2: {
        var c_536872615 = 0;
        var i_536872616 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872616 < deq_2969575712.count)) break Label4;
              c_536872615 = i_536872616;
              el_2969575716 = deq_2969575712.data; el_2969575716_Idx = chckIndx(i_536872613, 0, (deq_2969575712.data).length - 1);
              reset_2969575717(el_2969575716, el_2969575716_Idx);
              i_536872613 = (addInt(i_536872613, 1) & deq_2969575712.mask);
              i_536872616 = addInt(i_536872616, 1);
            }
        };
      };
    };
    deq_2969575712.count = 0;
    deq_2969575712.tail = deq_2969575712.head;

  
}

function handleDocumentChanged_2969575647(self_2969575648) {
    var fmtRes_2969575653 = mnewString(0);
    fmtRes_2969575653.push.apply(fmtRes_2969575653, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575653, NTI33554449)]);
    clear_2969575710(self_2969575648.selectionHistory);
    clear_2969575710(self_2969575648.selectionFuture);
    finishEdit_2969575583(self_2969575648, false);
    Label1: {
      var symbol_2969575787 = null;
      var L_536872606 = len_3019954306(ctx_2969567289.globalScope);
      Label2: {
        var h_536872608 = 0;
        var colontmp__536872609 = 0;
        colontmp__536872609 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872610 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872610 <= colontmp__536872609)) break Label4;
              h_536872608 = res_536872610;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872608, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969575787 = ctx_2969567289.globalScope.data[chckIndx(h_536872608, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969575787);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872606))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872610 = addInt(res_536872610, 1);
            }
        };
      };
    };
    nodeHEX3D_2969570829(self_2969575648, HEX5BHEX5D_3003121748(self_2969575648.document.rootNode, 0));
    markDirty_2415919143(self_2969575648);

  
}

function handleDocumentChanged_2818583515(self_2818583516) {
    selectionHEX3D_2818572811(self_2818583516, {Field0: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field0), Field1: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field1)});
    updateSearchResults_2818580294(self_2818583516);

  
}

function handleDocumentChanged_2415919263(self_2415919264) {
  
}

function handleDocumentChanged_2415919265(self_2415919264) {
    chckNilDisp(self_2415919264);
    if (isObj(self_2415919264.m_type, NTI3254779983)) {
    handleDocumentChanged_3254784893(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2969568641)) {
    handleDocumentChanged_2969575647(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2818572510)) {
    handleDocumentChanged_2818583515(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2415919108)) {
    handleDocumentChanged_2415919263(self_2415919264);
    }
    }}}

  
}

function del_1291847224(t_1291847227, key_1291847228) {
    var hc_1291847229 = [0];
    var i_1291847236 = rawGet_1291845908(t_1291847227, key_1291847228, hc_1291847229, 0);
    var mskHEX60gensym36_1291847240 = (t_1291847227.data).length - 1;
    if ((0 <= i_1291847236)) {
    t_1291847227.counter = subInt(t_1291847227.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847247 = i_1291847236;
            var rHEX60gensym36_1291847248 = jHEX60gensym36_1291847247;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field1 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847236 = (addInt(i_1291847236, 1) & mskHEX60gensym36_1291847240);
                  if (isEmpty_1308622877(t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847248 = (t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 & mskHEX60gensym36_1291847240);
                  if (!(((((rHEX60gensym36_1291847248 <= i_1291847236) && (jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248)) || ((jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248) && (i_1291847236 < jHEX60gensym36_1291847247))) || ((i_1291847236 < jHEX60gensym36_1291847247) && (rHEX60gensym36_1291847248 <= i_1291847236))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)] = nimCopy(t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)], t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847134(event_1291847136, arg_1291847137) {
    Label1: {
      var h_1291847160 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872622 = 0;
      var L_536872623 = (event_1291847136.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872622 < L_536872623)) break Label3;
            h_1291847160 = event_1291847136.handlers[chckIndx(i_536872622, 0, (event_1291847136.handlers).length - 1)];
            h_1291847160.Field1(arg_1291847137);
            i_536872622 = addInt(i_536872622, 1);
            if (!(((event_1291847136.handlers).length == L_536872623))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847181(self_1291847182, editor_1291847183) {
    del_1291847224(self_1291847182.editors, editor_1291847183.id);
    invoke_1291847134(self_1291847182.onEditorDeregistered, editor_1291847183);

  
}

function unregister_3254790583(self_3254790584) {
    unregisterEditor_1291847181(self_3254790584.editor, self_3254790584);

  
}

function unregister_2969585305(self_2969585306) {
    finishEdit_2969575583(self_2969585306, false);
    unregisterEditor_1291847181(self_2969585306.editor, self_2969585306);

  
}

function unregister_2818594439(self_2818594440) {
    unregisterEditor_1291847181(self_2818594440.editor, self_2818594440);

  
}

function unregister_2415919266(self_2415919267) {
  
}

function unregister_2415919268(self_2415919267) {
    chckNilDisp(self_2415919267);
    if (isObj(self_2415919267.m_type, NTI3254779983)) {
    unregister_3254790583(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2969568641)) {
    unregister_2969585305(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2818572510)) {
    unregister_2818594439(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2415919108)) {
    unregister_2415919266(self_2415919267);
    }
    }}}

  
}

function getOption_2818583898(editor_2818583900, path_2818583901, default_2818583902) {
  var result_2818583908 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583900 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
      var nodeHEX60gensym170_2818583921 = HEX7BHEX7D_1627393316(editor_2818583900.options, nsuSplitString(path_2818583901, [46], -1));
      if ((nodeHEX60gensym170_2818583921 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
    };
    result_2818583908 = getFloat_1627390140(nodeHEX60gensym170_2818583921, default_2818583902);
    break BeforeRet;
  };

  return result_2818583908;

}

function handleScroll_3254789293(self_3254789294, scroll_3254789295, mousePosWindow_3254789296) {
    var scrollAmount_3254789306 = (scroll_3254789295.y * getOption_2818583898(self_3254789294.editor, [109,111,100,101,108,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0));
    HEX2BHEX3D_855640304(self_3254789294, "scrollOffset", scrollAmount_3254789306);
    markDirty_2415919143(self_3254789294);

  
}

function handleScroll_2969584872(self_2969584873, scroll_2969584874, mousePosWindow_2969584875) {
    var scrollAmount_2969584885 = (scroll_2969584874.y * getOption_2818583898(self_2969584873.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0));
    if ((!((self_2969584873.lastCompletionsWidget == null)) && contains_2130706614(self_2969584873.lastCompletionsWidget.lastBounds, mousePosWindow_2969584875))) {
    HEX2BHEX3D_855640304(self_2969584873, "completionsScrollOffset", scrollAmount_2969584885);
    markDirty_2415919143(self_2969584873);
    }
    else {
      HEX2BHEX3D_855640304(self_2969584873, "scrollOffset", scrollAmount_2969584885);
      markDirty_2415919143(self_2969584873);
    }
    

  
}

function handleScroll_2818583894(self_2818583895, scroll_2818583896, mousePosWindow_2818583897) {
  BeforeRet: {
    if (self_2818583895.disableScrolling) {
    break BeforeRet;
    }
    
    var scrollAmount_2818583925 = (scroll_2818583896.y * getOption_2818583898(self_2818583895.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0));
    if ((!((self_2818583895.lastCompletionsWidget == null)) && contains_2130706614(self_2818583895.lastCompletionsWidget.lastBounds, mousePosWindow_2818583897))) {
    HEX2BHEX3D_855640304(self_2818583895, "completionsScrollOffset", scrollAmount_2818583925);
    }
    else {
    HEX2BHEX3D_855640304(self_2818583895, "scrollOffset", scrollAmount_2818583925);
    }
    
    markDirty_2415919143(self_2818583895);
  };

  
}

function handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
  
}

function handleScroll_2415919273(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
    chckNilDisp(self_2415919270);
    if (isObj(self_2415919270.m_type, NTI3254779983)) {
    handleScroll_3254789293(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2969568641)) {
    handleScroll_2969584872(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2818572510)) {
    handleScroll_2818583894(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2415919108)) {
    handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    }}}

  
}

function getOrDefault_3254789940(t_3254789943, key_3254789944, default_3254789945) {
    var Temporary1;

  var result_3254789946 = null;

    var hcHEX60gensym124_3254789949 = [0];
    var indexHEX60gensym124_3254789956 = rawGet_3254784979(t_3254789943, key_3254789944, hcHEX60gensym124_3254789949, 0);
    if ((0 <= indexHEX60gensym124_3254789956)) {
    Temporary1 = t_3254789943.data[chckIndx(indexHEX60gensym124_3254789956, 0, (t_3254789943.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3254789945;
    }
    
    result_3254789946 = Temporary1;

  return result_3254789946;

}

function none_3271567074() {
  var result_3271567080 = ({val: null});

  return result_3271567080;

}

function getLeafCellContainingPoint_3254789311(self_3254789312, cell_3254789313, point_3254789314) {
              var Temporary4;

  var result_3254789316 = ({val: null});

  BeforeRet: {
    var widget_3254789798 = getOrDefault_3254789383(self_3254789312.cellWidgetContext.cellToWidget, cell_3254789313.id, null);
    if ((widget_3254789798 == null)) {
    result_3254789316 = nimCopy(result_3254789316, none_3271567074(), NTI3271562483);
    break BeforeRet;
    }
    
    if (!(contains_2130706614(widget_3254789798.lastBounds, point_3254789314))) {
    result_3254789316 = nimCopy(result_3254789316, none_3271567074(), NTI3271562483);
    break BeforeRet;
    }
    
    if (isObj(cell_3254789313.m_type, NTI3338665992)) {
    Label1: {
      var c_3254789823 = null;
      var colontmp__536872633 = [];
      colontmp__536872633 = cell_3254789313.children;
      var i_536872634 = 0;
      var L_536872635 = (colontmp__536872633).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872634 < L_536872635)) break Label3;
            c_3254789823 = colontmp__536872633[chckIndx(i_536872634, 0, (colontmp__536872633).length - 1)];
              var oHEX60gensym122_3254789826 = getLeafCellContainingPoint_3254789311(self_3254789312, c_3254789823, point_3254789314);
              if (!isSome_3271567127(oHEX60gensym122_3254789826)) Temporary4 = false; else {                var leaf_3254789849 = get_3271567147(oHEX60gensym122_3254789826);
                Temporary4 = true;              }            if (Temporary4) {
            result_3254789316 = nimCopy(result_3254789316, some_3338666294(leaf_3254789849), NTI3271562483);
            break BeforeRet;
            }
            
            i_536872634 = addInt(i_536872634, 1);
            if (!(((colontmp__536872633).length == L_536872635))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254789316 = nimCopy(result_3254789316, none_3271567074(), NTI3271562483);
    break BeforeRet;
    }
    
    result_3254789316 = nimCopy(result_3254789316, some_3338666294(cell_3254789313), NTI3271562483);
    break BeforeRet;
  };

  return result_3254789316;

}

function handleMousePress_3254789862(self_3254789863, button_3254789864, mousePosWindow_3254789865) {
                var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (!((button_3254789864 == 0))) {
    break BeforeRet;
    }
    
    Label1: {
      var rootNode_3254789873 = null;
      var colontmp__536872628 = [];
      colontmp__536872628 = rootNodes_3271557403(self_3254789863.document.model);
      var i_536872629 = 0;
      var L_536872630 = (colontmp__536872628).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872629 < L_536872630)) break Label3;
            rootNode_3254789873 = colontmp__536872628[chckIndx(i_536872629, 0, (colontmp__536872628).length - 1)];
            Label4: {
              var cell_3254790034 = getOrDefault_3254789940(self_3254789863.nodeToCell, rootNode_3254789873.id, null);
              if ((cell_3254790034 == null)) {
              break Label4;
              }
              
                var oHEX60gensym126_3254790040 = getLeafCellContainingPoint_3254789311(self_3254789863, cell_3254790034, mousePosWindow_3254789865);
                if (!isSome_3271567127(oHEX60gensym126_3254790040)) Temporary5 = false; else {                  var leafCell_3254790063 = get_3271567147(oHEX60gensym126_3254790040);
                  Temporary5 = true;                }              if (Temporary5) {
              if ((leafCell_3254790063.line < (self_3254789863.logicalLines).length - 1)) {
                var oHEX60gensym127_3254790069 = getCursorInLine_3254780165(self_3254789863, leafCell_3254790063.line, mousePosWindow_3254789865.x);
                if (!isSome_3254790074(oHEX60gensym127_3254790069)) Temporary6 = false; else {                  var newCursor_3254790114 = nimCopy(null, get_3254790091(oHEX60gensym127_3254790069), NTI3254779907);
                  Temporary6 = true;                }              if (Temporary6) {
              self_3254789863.cursor = nimCopy(self_3254789863.cursor, selectCursor_3254780184(self_3254789863.cursor, newCursor_3254790114, false), NTI3254779907);
              markDirty_2415919143(self_3254789863);
              break Label1;
              }
              
              }
              
              self_3254789863.cursor = nimCopy(self_3254789863.cursor, toCursor_3254780177(leafCell_3254790063, true), NTI3254779907);
              markDirty_2415919143(self_3254789863);
              break Label1;
              }
              
            };
            i_536872629 = addInt(i_536872629, 1);
            if (!(((colontmp__536872628).length == L_536872630))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function HEX2D_2147484180(aHEX60gensym73_2147484182, bHEX60gensym73_2147484183) {
  var result_2147484184 = ({x: 0.0, y: 0.0});

    result_2147484184 = nimCopy(result_2147484184, {x: (aHEX60gensym73_2147484182.x - bHEX60gensym73_2147484183.x), y: (aHEX60gensym73_2147484182.y - bHEX60gensym73_2147484183.y)}, NTI2164261152);

  return result_2147484184;

}

function getItemAtPixelPosition_2969584849(self_2969584850, posWindow_2969584851) {
  var result_2969584853 = ({val: 0, has: false});

  BeforeRet: {
    result_2969584853 = nimCopy(result_2969584853, none_3003121842(), NTI1191183280);
    Label1: {
      var index_2969584864 = 0;
      var widget_2969584865 = null;
      var i_536872639 = 0;
      var L_536872640 = (self_2969584850.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872639 < L_536872640)) break Label3;
            index_2969584864 = self_2969584850.lastItems[chckIndx(i_536872639, 0, (self_2969584850.lastItems).length - 1)]["Field0"];
            widget_2969584865 = self_2969584850.lastItems[chckIndx(i_536872639, 0, (self_2969584850.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(widget_2969584865.lastBounds, posWindow_2969584851) && (0 <= index_2969584864)) && (index_2969584864 <= (self_2969584850.completions).length - 1))) {
            result_2969584853 = nimCopy(result_2969584853, some_1191184367(index_2969584864), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872639 = addInt(i_536872639, 1);
            if (!(((self_2969584850.lastItems).length == L_536872640))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969584853;

}

function getNodeAtPixelPosition_2969578451(self_2969578452, posContent_2969578453) {
                      var Temporary8;

  var result_2969578455 = ({val: null});

  BeforeRet: {
    result_2969578455 = nimCopy(result_2969578455, none_3003121871(), NTI3003121783);
    Label1: {
      var layout_2969578483 = null;
      var offset_2969578484 = ({x: 0.0, y: 0.0});
      var i_536872652 = 0;
      var L_536872653 = (self_2969578452.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872652 < L_536872653)) break Label3;
            layout_2969578483 = self_2969578452.lastLayouts[chckIndx(i_536872652, 0, (self_2969578452.lastLayouts).length - 1)]["Field0"];
            offset_2969578484 = self_2969578452.lastLayouts[chckIndx(i_536872652, 0, (self_2969578452.lastLayouts).length - 1)]["Field1"];
            var bounds_2969578494 = HEX2B_2130706587(bounds_3087009979(layout_2969578483), offset_2969578484);
            var smallestRange_2969578495 = ({parent: null, first: 0, last: 0});
            if (contains_2130706614(bounds_2969578494, posContent_2969578453)) {
            Label4: {
              var __2969578496 = 0;
              var child_2969578497 = null;
              var n_536872644 = layout_2969578483.node;
              var idx_536872645 = -1;
              var i_536872646 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872645 == -1)) {
                    var colontmp__536872649 = nimCopy(null, {Field0: i_536872646, Field1: n_536872644}, NTI3003123002);
                    __2969578496 = colontmp__536872649["Field0"];
                    child_2969578497 = colontmp__536872649["Field1"];
                    if (contains_2969569863(layout_2969578483.nodeToVisualNode, child_2969578497.id)) {
                    var visualNode_2969578643 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969578483.nodeToVisualNode, child_2969578497.id), NTI3087007774);
                    var bounds_2969578653 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969578643), vec2_2164261725(0.0, offset_2969578484.y));
                    if (contains_2130706614(bounds_2969578653, posContent_2969578453)) {
                    if (((((smallestRange_2969578495.parent == null) || (smallestRange_2969578495.parent.depth < visualNode_2969578643.parent.depth)) || ((visualNode_2969578643.parent.depth == smallestRange_2969578495.parent.depth) && (smallestRange_2969578495.parent.indent < visualNode_2969578643.parent.indent))) || ((visualNode_2969578643.parent.depth == smallestRange_2969578495.parent.depth) && (subInt(visualNode_2969578643.last, visualNode_2969578643.first) < subInt(smallestRange_2969578495.last, smallestRange_2969578495.first))))) {
                    smallestRange_2969578495 = nimCopy(smallestRange_2969578495, visualNode_2969578643, NTI3087007774);
                    result_2969578455 = nimCopy(result_2969578455, some_3003121890(child_2969578497), NTI3003121783);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872645, 1) < len_3003121752(n_536872644))) {
                    n_536872644 = HEX5BHEX5D_3003121748(n_536872644, addInt(idx_536872645, 1));
                    idx_536872645 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872650 = next_3003121857(n_536872644);
                      if (!isSome_3003123546(oHEX60gensym74_536872650)) Temporary8 = false; else {                        var ne_536872651 = get_3003123566(oHEX60gensym74_536872650);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872644 = ne_536872651;
                    idx_536872645 = -1;
                    }
                    else {
                    if ((!((n_536872644.parent == null)) && !((n_536872644.parent == layout_2969578483.node)))) {
                    idx_536872645 = index_3003121772(n_536872644);
                    n_536872644 = n_536872644.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872646 = addInt(i_536872646, 1);
                    }
                  }
              };
            };
            if (isNone_3003123574(result_2969578455)) {
            result_2969578455 = nimCopy(result_2969578455, some_3003121890(layout_2969578483.node), NTI3003121783);
            }
            
            break BeforeRet;
            }
            
            i_536872652 = addInt(i_536872652, 1);
            if (!(((self_2969578452.lastLayouts).length == L_536872653))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969578455;

}

function handleMousePress_2969584897(self_2969584898, button_2969584899, mousePosWindow_2969584900) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

  BeforeRet: {
    var mousePosContent_2969584945 = HEX2D_2147484180(mousePosWindow_2969584900, xy_2147483680(self_2969584898.lastBounds));
      var oHEX60gensym1074_2969584948 = getItemAtPixelPosition_2969584849(self_2969584898, mousePosWindow_2969584900);
      if (!isSome_1191185117(oHEX60gensym1074_2969584948)) Temporary1 = false; else {        var item_2969584971 = get_1191185211(oHEX60gensym1074_2969584948);
        Temporary1 = true;      }    if (Temporary1) {
    if (((button_2969584899 == 0) || (button_2969584899 == 1))) {
    self_2969584898.selectedCompletion = item_2969584971;
    markDirty_2415919143(self_2969584898);
    }
    
    break BeforeRet;
    }
    
    if ((button_2969584899 == 0)) {
      var oHEX60gensym1075_2969584986 = getItemAtPixelPosition_2969584849(self_2969584898, mousePosWindow_2969584900);
      if (!isSome_1191185117(oHEX60gensym1075_2969584986)) Temporary2 = false; else {        var index_2969585009 = get_1191185211(oHEX60gensym1075_2969584986);
        Temporary2 = true;      }    if (Temporary2) {
    self_2969584898.selectedCompletion = index_2969585009;
    applySelectedCompletion_2969581659(self_2969584898);
    }
    else {
      if (!!(isEditing_2969575154(self_2969584898))) Temporary3 = false; else {        var oHEX60gensym1076_2969585012 = getNodeAtPixelPosition_2969578451(self_2969584898, mousePosContent_2969584945);
        if (!isSome_3003123546(oHEX60gensym1076_2969585012)) Temporary4 = false; else {          var n_2969585035 = get_3003123566(oHEX60gensym1076_2969585012);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    nodeHEX3D_2969570829(self_2969584898, n_2969585035);
    }
    }
    }
    
  };

  
}

function getHoveredCompletion_2818583849(self_2818583850, mousePosWindow_2818583851) {
  var result_2818583852 = 0;

  BeforeRet: {
    Label1: {
      var item_2818583875 = {Field0: 0, Field1: null};
      var i_536872656 = 0;
      var L_536872657 = (self_2818583850.lastCompletionWidgets).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872656 < L_536872657)) break Label3;
            item_2818583875 = self_2818583850.lastCompletionWidgets[chckIndx(i_536872656, 0, (self_2818583850.lastCompletionWidgets).length - 1)];
            if (contains_2130706614(item_2818583875.Field1.lastBounds, mousePosWindow_2818583851)) {
            result_2818583852 = item_2818583875.Field0;
            break BeforeRet;
            }
            
            i_536872656 = addInt(i_536872656, 1);
            if (!(((self_2818583850.lastCompletionWidgets).length == L_536872657))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818583852 = 0;
    break BeforeRet;
  };

  return result_2818583852;

}

function charWidth_3489662146(self_3489662147) {
  var result_3489662148 = 0.0;

    result_3489662148 = self_3489662147.mCharWidth;

  return result_3489662148;

}

function charWidth_2768240796(self_2768240797) {
  var result_2768240798 = 0.0;

  return result_2768240798;

}

function charWidth_2768240799(self_2768240797) {
  var result_2768240800 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240797);
    if (isObj(self_2768240797.m_type, NTI3489660939)) {
    result_2768240800 = charWidth_3489662146(self_2768240797);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240797.m_type, NTI2768240644)) {
    result_2768240800 = charWidth_2768240796(self_2768240797);
    break BeforeRet;
    }
    }
  };

  return result_2768240800;

}

function isThickCursor_2818583612(self_2818583613) {
  var result_2818583614 = false;

  BeforeRet: {
    result_2818583614 = getOption_2818583615(self_2818583613.editor, getContextWithMode_2818583609(self_2818583613, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818583614;

}

function some_2818594225(val_2818594227) {
  var result_2818594232 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818594232.has = true;
    result_2818594232.val = nimCopy(result_2818594232.val, val_2818594227, NTI2818586256);

  return result_2818594232;

}

function none_2818594238() {
  var result_2818594245 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818594245;

}

function getCursorAtPixelPos_2818594138(self_2818594139, mousePosWindow_2818594140) {
  var result_2818594146 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818594191 = HEX2D_2147484180(mousePosWindow_2818594140, xy_2147483680(self_2818594139.lastContentBounds));
    Label1: {
      var li_2818594197 = 0;
      var line_2818594198 = null;
      var i_536872664 = 0;
      var L_536872665 = (self_2818594139.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872664 < L_536872665)) break Label3;
            li_2818594197 = i_536872664;
            line_2818594198 = self_2818594139.lastRenderedLines[chckIndx(i_536872664, 0, (self_2818594139.lastRenderedLines).length - 1)];
            var startOffset_2818594199 = 0;
            Label4: {
              var i_2818594205 = 0;
              var part_2818594206 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872661 = 0;
              var L_536872662 = (line_2818594198.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872661 < L_536872662)) break Label6;
                    i_2818594205 = i_536872661;
                    part_2818594206 = nimCopy(part_2818594206, line_2818594198.parts[chckIndx(i_536872661, 0, (line_2818594198.parts).length - 1)], NTI2818572422);
                    if ((contains_2130706614(part_2818594206.bounds, mousePosContent_2818594191) || ((((i_2818594205 == (line_2818594198.parts).length - 1) && (part_2818594206.bounds.y <= mousePosContent_2818594191.y)) && (mousePosContent_2818594191.y <= (part_2818594206.bounds.y + part_2818594206.bounds.h))) && (part_2818594206.bounds.x <= mousePosContent_2818594191.x)))) {
                    var offsetFromLeft_2818594210 = [((mousePosContent_2818594191.x - part_2818594206.bounds.x) / charWidth_2768240799(self_2818594139.editor.platform))];
                    if (isThickCursor_2818583612(self_2818594139)) {
                    HEX2DHEX3D_2818594211(offsetFromLeft_2818594210, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818594210, 0, 0.5);
                    }
                    
                    var index_2818594224 = clamp_1660945119(((offsetFromLeft_2818594210[0]) | 0), 0, (part_2818594206.text).length);
                    result_2818594146 = nimCopy(result_2818594146, some_2818594225({Field0: line_2818594198.index, Field1: addInt(startOffset_2818594199, index_2818594224)}), NTI2818586210);
                    break BeforeRet;
                    }
                    
                    startOffset_2818594199 = addInt(startOffset_2818594199, (part_2818594206.text).length);
                    i_536872661 = addInt(i_536872661, 1);
                    if (!(((line_2818594198.parts).length == L_536872662))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872664 = addInt(i_536872664, 1);
            if (!(((self_2818594139.lastRenderedLines).length == L_536872665))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818594146 = nimCopy(result_2818594146, none_2818594238(), NTI2818586210);
    break BeforeRet;
  };

  return result_2818594146;

}

function isSome_2818594282(self_2818594284) {
  var result_2818594285 = false;

    result_2818594285 = self_2818594284.has;

  return result_2818594285;

}

function isNone_2818594307(self_2818594309) {
  var result_2818594310 = false;

    result_2818594310 = !(self_2818594309.has);

  return result_2818594310;

}

function get_2818594299(self_2818594301) {
  var result_2818594302 = {Field0: 0, Field1: 0};

    if (isNone_2818594307(self_2818594301)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818594302 = self_2818594301.val;

  return result_2818594302;

}

function handleMousePress_2818594255(self_2818594256, button_2818594257, mousePosWindow_2818594258) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

  BeforeRet: {
    if ((!((self_2818594256.lastCompletionsWidget == null)) && contains_2130706614(self_2818594256.lastCompletionsWidget.lastBounds, mousePosWindow_2818594258))) {
    if (((button_2818594257 == 0) || (button_2818594257 == 1))) {
    self_2818594256.selectedCompletion = getHoveredCompletion_2818583849(self_2818594256, mousePosWindow_2818594258);
    markDirty_2415919143(self_2818594256);
    }
    
    break BeforeRet;
    }
    
      if (!(button_2818594257 == 0)) Temporary1 = false; else {        var oHEX60gensym1040_2818594277 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1040_2818594277)) Temporary2 = false; else {          var cursor_2818594322 = nimCopy(null, get_2818594299(oHEX60gensym1040_2818594277), NTI2449473546);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818594256, toSelection_2449474032(cursor_2818594322));
    }
    
      if (!(button_2818594257 == 3)) Temporary3 = false; else {        var oHEX60gensym1042_2818594329 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1042_2818594329)) Temporary4 = false; else {          var cursor_2818594352 = nimCopy(null, get_2818594299(oHEX60gensym1042_2818594329), NTI2449473546);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818585810(self_2818594256, cursor_2818594352);
    }
    
      if (!(button_2818594257 == 4)) Temporary5 = false; else {        var oHEX60gensym1043_2818594359 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1043_2818594359)) Temporary6 = false; else {          var cursor_2818594382 = nimCopy(null, get_2818594299(oHEX60gensym1043_2818594359), NTI2449473546);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585937(self_2818594256, cursor_2818594382.Field0);
    }
    
  };

  
}

function handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
  
}

function handleMousePress_2415919278(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
    chckNilDisp(self_2415919275);
    if (isObj(self_2415919275.m_type, NTI3254779983)) {
    handleMousePress_3254789862(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2969568641)) {
    handleMousePress_2969584897(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2818572510)) {
    handleMousePress_2818594255(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2415919108)) {
    handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    }}}

  
}

function handleMouseRelease_3254790142(self_3254790143, button_3254790144, mousePosWindow_3254790145) {
  
}

function handleMouseRelease_2969585036(self_2969585037, button_2969585038, mousePosWindow_2969585039) {
      var Temporary1;
        var Temporary2;

      if (!(button_2969585038 == 0)) Temporary1 = false; else {        var oHEX60gensym1077_2969585046 = getItemAtPixelPosition_2969584849(self_2969585037, mousePosWindow_2969585039);
        if (!isSome_1191185117(oHEX60gensym1077_2969585046)) Temporary2 = false; else {          var item_2969585069 = get_1191185211(oHEX60gensym1077_2969585046);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if ((self_2969585037.selectedCompletion == item_2969585069)) {
    applySelectedCompletion_2969581659(self_2969585037);
    markDirty_2415919143(self_2969585037);
    }
    
    }
    

  
}

function handleMouseRelease_2818594383(self_2818594384, button_2818594385, mousePosWindow_2818594386) {
    if ((((button_2818594385 == 0) && !((self_2818594384.lastCompletionsWidget == null))) && contains_2130706614(self_2818594384.lastCompletionsWidget.lastBounds, mousePosWindow_2818594386))) {
    var oldSelectedCompletion_2818594394 = self_2818594384.selectedCompletion;
    self_2818594384.selectedCompletion = getHoveredCompletion_2818583849(self_2818594384, mousePosWindow_2818594386);
    if ((self_2818594384.selectedCompletion == oldSelectedCompletion_2818594394)) {
    applySelectedCompletion_2818593404(self_2818594384);
    markDirty_2415919143(self_2818594384);
    }
    
    }
    

  
}

function handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
  
}

function handleMouseRelease_2415919283(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
    chckNilDisp(self_2415919280);
    if (isObj(self_2415919280.m_type, NTI3254779983)) {
    handleMouseRelease_3254790142(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2969568641)) {
    handleMouseRelease_2969585036(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2818572510)) {
    handleMouseRelease_2818594383(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2415919108)) {
    handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    }}}

  
}

function handleMouseMove_3254790146(self_3254790147, mousePosWindow_3254790148, mousePosDelta_3254790149, modifiers_3254790150, buttons_3254790151) {
                var Temporary5;
                var Temporary6;

    if ((buttons_3254790151[0] != undefined)) {
    Label1: {
      var rootNode_3254790159 = null;
      var colontmp__536872669 = [];
      colontmp__536872669 = rootNodes_3271557403(self_3254790147.document.model);
      var i_536872670 = 0;
      var L_536872671 = (colontmp__536872669).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872670 < L_536872671)) break Label3;
            rootNode_3254790159 = colontmp__536872669[chckIndx(i_536872670, 0, (colontmp__536872669).length - 1)];
            Label4: {
              var cell_3254790232 = getOrDefault_3254789940(self_3254790147.nodeToCell, rootNode_3254790159.id, null);
              if ((cell_3254790232 == null)) {
              break Label4;
              }
              
                var oHEX60gensym130_3254790238 = getLeafCellContainingPoint_3254789311(self_3254790147, cell_3254790232, mousePosWindow_3254790148);
                if (!isSome_3271567127(oHEX60gensym130_3254790238)) Temporary5 = false; else {                  var leafCell_3254790261 = get_3271567147(oHEX60gensym130_3254790238);
                  Temporary5 = true;                }              if (Temporary5) {
              if ((leafCell_3254790261.line < (self_3254790147.logicalLines).length - 1)) {
                var oHEX60gensym131_3254790267 = getCursorInLine_3254780165(self_3254790147, leafCell_3254790261.line, mousePosWindow_3254790148.x);
                if (!isSome_3254790074(oHEX60gensym131_3254790267)) Temporary6 = false; else {                  var newCursor_3254790290 = nimCopy(null, get_3254790091(oHEX60gensym131_3254790267), NTI3254779907);
                  Temporary6 = true;                }              if (Temporary6) {
              self_3254790147.cursor = nimCopy(self_3254790147.cursor, selectCursor_3254780184(self_3254790147.cursor, newCursor_3254790290, true), NTI3254779907);
              markDirty_2415919143(self_3254790147);
              break Label1;
              }
              
              }
              
              self_3254790147.cursor = nimCopy(self_3254790147.cursor, selectCursor_3254780184(self_3254790147.cursor, toCursor_3254780177(leafCell_3254790261, true), true), NTI3254779907);
              markDirty_2415919143(self_3254790147);
              break Label1;
              }
              
            };
            i_536872670 = addInt(i_536872670, 1);
            if (!(((colontmp__536872669).length == L_536872671))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function handleMouseMove_2969585070(self_2969585071, mousePosWindow_2969585072, mousePosDelta_2969585073, modifiers_2969585074, buttons_2969585075) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  BeforeRet: {
      var oHEX60gensym1078_2969585078 = getItemAtPixelPosition_2969584849(self_2969585071, mousePosWindow_2969585072);
      if (!isSome_1191185117(oHEX60gensym1078_2969585078)) Temporary1 = false; else {        var item_2969585101 = get_1191185211(oHEX60gensym1078_2969585078);
        Temporary1 = true;      }    if (Temporary1) {
    if ((buttons_2969585075[1] != undefined)) {
    self_2969585071.selectedCompletion = item_2969585101;
    markDirty_2415919143(self_2969585071);
    }
    
    break BeforeRet;
    }
    
    if ((buttons_2969585075[0] != undefined)) {
    var mousePosContent_2969585154 = HEX2D_2147484180(mousePosWindow_2969585072, xy_2147483680(self_2969585071.lastBounds));
      if (!!(isEditing_2969575154(self_2969585071))) Temporary2 = false; else {        var oHEX60gensym1081_2969585157 = getNodeAtPixelPosition_2969578451(self_2969585071, mousePosContent_2969585154);
        if (!isSome_3003123546(oHEX60gensym1081_2969585157)) Temporary3 = false; else {          var n_2969585180 = get_3003123566(oHEX60gensym1081_2969585157);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969585071, n_2969585180);
    }
    
    }
    
  };

  
}

function handleMouseMove_2818594395(self_2818594396, mousePosWindow_2818594397, mousePosDelta_2818594398, modifiers_2818594399, buttons_2818594400) {
      var Temporary1;
        var Temporary2;

  BeforeRet: {
    if ((!((self_2818594396.lastCompletionsWidget == null)) && contains_2130706614(self_2818594396.lastCompletionsWidget.lastBounds, mousePosWindow_2818594397))) {
    if ((buttons_2818594400[1] != undefined)) {
    self_2818594396.selectedCompletion = getHoveredCompletion_2818583849(self_2818594396, mousePosWindow_2818594397);
    markDirty_2415919143(self_2818594396);
    }
    
    break BeforeRet;
    }
    
      if (!(buttons_2818594400[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1046_2818594415 = getCursorAtPixelPos_2818594138(self_2818594396, mousePosWindow_2818594397);
        if (!isSome_2818594282(oHEX60gensym1046_2818594415)) Temporary2 = false; else {          var cursor_2818594438 = nimCopy(null, get_2818594299(oHEX60gensym1046_2818594415), NTI2449473546);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818594396, toSelection_2449474035(cursor_2818594438, selection_2818572805(self_2818594396), 3));
    }
    
  };

  
}

function handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
  
}

function handleMouseMove_2415919290(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
    chckNilDisp(self_2415919285);
    if (isObj(self_2415919285.m_type, NTI3254779983)) {
    handleMouseMove_3254790146(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2969568641)) {
    handleMouseMove_2969585070(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2818572510)) {
    handleMouseMove_2818594395(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2415919108)) {
    handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    }}}

  
}

function HEX26_3187671358(x_3187671360, y_3187671361) {
  var result_3187671362 = [];

    result_3187671362 = new Array(chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647) ; ++i) { result_3187671362[i] = null; }    Label1: {
      var i_3187671380 = 0;
      var colontmp__536872674 = 0;
      colontmp__536872674 = subInt((x_3187671360).length, 1);
      var res_536872675 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872675 <= colontmp__536872674)) break Label3;
            i_3187671380 = res_536872675;
            result_3187671362[chckIndx(i_3187671380, 0, (result_3187671362).length - 1)] = x_3187671360[chckIndx(i_3187671380, 0, (x_3187671360).length - 1)];
            res_536872675 = addInt(res_536872675, 1);
          }
      };
    };
    Label4: {
      var i_3187671388 = 0;
      var colontmp__536872678 = 0;
      colontmp__536872678 = subInt((y_3187671361).length, 1);
      var res_536872679 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872679 <= colontmp__536872678)) break Label6;
            i_3187671388 = res_536872679;
            result_3187671362[chckIndx(addInt(i_3187671388, (x_3187671360).length), 0, (result_3187671362).length - 1)] = y_3187671361[chckIndx(i_3187671388, 0, (y_3187671361).length - 1)];
            res_536872679 = addInt(res_536872679, 1);
          }
      };
    };

  return result_3187671362;

}

function getEventHandlers_3204448577(self_3204448578) {
  var result_3204448579 = [];

  BeforeRet: {
    result_3204448579 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3204448578.textEditor), [self_3204448578.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3204448579;

}

function getEventHandlers_3187671351(self_3187671352) {
  var result_3187671353 = [];

  BeforeRet: {
    result_3187671353 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3187671352.textEditor), [self_3187671352.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3187671353;

}

function getEventHandlers_2483028020(self_2483028021) {
  var result_2483028022 = [];

  BeforeRet: {
    result_2483028022 = nimCopy(null, [self_2483028021.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2483028022;

}

function getEventHandlers_2483028027(self_2483028021) {
  var result_2483028028 = [];

  BeforeRet: {
    chckNilDisp(self_2483028021);
    if (isObj(self_2483028021.m_type, NTI3204448260)) {
    result_2483028028 = getEventHandlers_3204448577(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI3187671062)) {
    result_2483028028 = getEventHandlers_3187671351(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI2483027972)) {
    result_2483028028 = getEventHandlers_2483028020(self_2483028021);
    break BeforeRet;
    }
    }}
  };

  return result_2483028028;

}

function handleScroll_3204448624(self_3204448625, scroll_3204448626, mousePosWindow_3204448627) {
    self_3204448625.selected = clamp_1660945119(subInt(self_3204448625.selected, ((scroll_3204448626.y) | 0)), 0, subInt((self_3204448625.completions).length, 1));

  
}

function handleScroll_3187671844(self_3187671845, scroll_3187671846, mousePosWindow_3187671847) {
    self_3187671845.selected = clamp_1660945119(subInt(self_3187671845.selected, ((scroll_3187671846.y) | 0)), 0, subInt((self_3187671845.completions).length, 1));

  
}

function handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
  
}

function handleScroll_2483028033(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
    chckNilDisp(self_2483028030);
    if (isObj(self_2483028030.m_type, NTI3204448260)) {
    handleScroll_3204448624(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI3187671062)) {
    handleScroll_3187671844(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI2483027972)) {
    handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    }}

  
}

function none_3204448528() {
  var result_3204448535 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3204448535;

}

function some_3204448544(val_3204448546) {
  var result_3204448547 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3204448547.has = true;
    result_3204448547.val = nimCopy(result_3204448547.val, val_3204448546, NTI2969568638);

  return result_3204448547;

}

function getItemAtPixelPosition_3204448519(self_3204448520, posWindow_3204448521) {
  var result_3204448527 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3204448527 = nimCopy(result_3204448527, none_3204448528(), NTI3204448400);
    Label1: {
      var index_3204448539 = 0;
      var rect_3204448540 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872683 = 0;
      var L_536872684 = (self_3204448520.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872683 < L_536872684)) break Label3;
            index_3204448539 = self_3204448520.lastItems[chckIndx(i_536872683, 0, (self_3204448520.lastItems).length - 1)]["Field0"];
            rect_3204448540 = self_3204448520.lastItems[chckIndx(i_536872683, 0, (self_3204448520.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3204448540, posWindow_3204448521) && (0 <= index_3204448539)) && (index_3204448539 <= (self_3204448520.completions).length - 1))) {
            result_3204448527 = nimCopy(result_3204448527, some_3204448544(self_3204448520.completions[chckIndx(index_3204448539, 0, (self_3204448520.completions).length - 1)]), NTI3204448400);
            break BeforeRet;
            }
            
            i_536872683 = addInt(i_536872683, 1);
            if (!(((self_3204448520.lastItems).length == L_536872684))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3204448527;

}

function isSome_3204448651(self_3204448653) {
  var result_3204448654 = false;

    result_3204448654 = self_3204448653.has;

  return result_3204448654;

}

function isNone_3204448676(self_3204448678) {
  var result_3204448679 = false;

    result_3204448679 = !(self_3204448678.has);

  return result_3204448679;

}

function get_3204448668(self_3204448670) {
  var result_3204448671 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3204448676(self_3204448670)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448671 = self_3204448670.val;

  return result_3204448671;

}

function handleMousePress_3204448636(self_3204448637, button_3204448638, mousePosWindow_3204448639) {
      var Temporary1;
    var Temporary2;

    if ((button_3204448638 == 0)) {
      var oHEX60gensym5_3204448646 = getItemAtPixelPosition_3204448519(self_3204448637, mousePosWindow_3204448639);
      if (!isSome_3204448651(oHEX60gensym5_3204448646)) Temporary1 = false; else {        var item_3204448691 = nimCopy(null, get_3204448668(oHEX60gensym5_3204448646), NTI2969568638);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3204448691;
    if (ConstSet334[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
    self_3204448637.handleSymbolSelected(Temporary2.id);
    popPopup_1291849115(self_3204448637.editor, self_3204448637);
    }
    
    }
    

  
}

function none_3187671259() {
  var result_3187671265 = ({val: null});

  return result_3187671265;

}

function some_3187671293(val_3187671295) {
  var result_3187671296 = ({val: null});

    if (!(!((val_3187671295 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671296.val = val_3187671295;

  return result_3187671296;

}

function getItemAtPixelPosition_3187671251(self_3187671252, posWindow_3187671253) {
  var result_3187671258 = ({val: null});

  BeforeRet: {
    result_3187671258 = nimCopy(result_3187671258, none_3187671259(), NTI3187671186);
    Label1: {
      var index_3187671288 = 0;
      var rect_3187671289 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872687 = 0;
      var L_536872688 = (self_3187671252.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872687 < L_536872688)) break Label3;
            index_3187671288 = self_3187671252.lastItems[chckIndx(i_536872687, 0, (self_3187671252.lastItems).length - 1)]["Field0"];
            rect_3187671289 = self_3187671252.lastItems[chckIndx(i_536872687, 0, (self_3187671252.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3187671289, posWindow_3187671253) && (0 <= index_3187671288)) && (index_3187671288 <= (self_3187671252.completions).length - 1))) {
            result_3187671258 = nimCopy(result_3187671258, some_3187671293(self_3187671252.completions[chckIndx(index_3187671288, 0, (self_3187671252.completions).length - 1)]), NTI3187671186);
            break BeforeRet;
            }
            
            i_536872687 = addInt(i_536872687, 1);
            if (!(((self_3187671252.lastItems).length == L_536872688))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3187671258;

}

function isSome_3187671871(self_3187671873) {
  var result_3187671874 = false;

    result_3187671874 = !((self_3187671873.val == null));

  return result_3187671874;

}

function isNone_3187671899(self_3187671901) {
  var result_3187671902 = false;

    result_3187671902 = (self_3187671901.val == null);

  return result_3187671902;

}

function get_3187671891(self_3187671893) {
  var result_3187671894 = null;

    if (isNone_3187671899(self_3187671893)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671894 = self_3187671893["val"];

  return result_3187671894;

}

function handleMousePress_3187671856(self_3187671857, button_3187671858, mousePosWindow_3187671859) {
      var Temporary1;

    if ((button_3187671858 == 0)) {
      var oHEX60gensym67_3187671866 = getItemAtPixelPosition_3187671251(self_3187671857, mousePosWindow_3187671859);
      if (!isSome_3187671871(oHEX60gensym67_3187671866)) Temporary1 = false; else {        var item_3187671917 = get_3187671891(oHEX60gensym67_3187671866);
        Temporary1 = true;      }    if (Temporary1) {
    if (!((self_3187671857.handleItemConfirmed == null))) {
    self_3187671857.handleItemConfirmed(item_3187671917);
    }
    
    popPopup_1291849115(self_3187671857.editor, self_3187671857);
    }
    
    }
    

  
}

function handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
  
}

function handleMousePress_2483028038(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
    chckNilDisp(self_2483028035);
    if (isObj(self_2483028035.m_type, NTI3204448260)) {
    handleMousePress_3204448636(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI3187671062)) {
    handleMousePress_3187671856(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI2483027972)) {
    handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    }}

  
}

function handleMouseRelease_3204448694(self_3204448695, button_3204448696, mousePosWindow_3204448697) {
  
}

function handleMouseRelease_3187671923(self_3187671924, button_3187671925, mousePosWindow_3187671926) {
  
}

function handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
  
}

function handleMouseRelease_2483028043(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
    chckNilDisp(self_2483028040);
    if (isObj(self_2483028040.m_type, NTI3204448260)) {
    handleMouseRelease_3204448694(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI3187671062)) {
    handleMouseRelease_3187671923(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI2483027972)) {
    handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    }}

  
}

function handleMouseMove_3204448698(self_3204448699, mousePosWindow_3204448700, mousePosDelta_3204448701, modifiers_3204448702, buttons_3204448703) {
  
}

function handleMouseMove_3187671927(self_3187671928, mousePosWindow_3187671929, mousePosDelta_3187671930, modifiers_3187671931, buttons_3187671932) {
  
}

function handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
  
}

function handleMouseMove_2483028050(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
    chckNilDisp(self_2483028045);
    if (isObj(self_2483028045.m_type, NTI3204448260)) {
    handleMouseMove_3204448698(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI3187671062)) {
    handleMouseMove_3187671927(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI2483027972)) {
    handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    }}

  
}
async function initAsync_2801795119(self_2801795120) {
  var result_2801795122 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2801795133 = loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795134 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795133 || []);
    rawEcho(contentStrict_2801795134);
    var allowEval_2801795135 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2801795135) {
    var _ = (await loadScriptContent(toJSStr(config_2801795133)));
    }
    else {
      var fmtRes_2801795144 = mnewString(0);
      fmtRes_2801795144.push.apply(fmtRes_2801795144, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795144, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2801795122 = undefined;
    break BeforeRet;
  };

  return result_2801795122;

}

function init_2801795167(self_2801795168, path_2801795169) {
    var _ = initAsync_2801795119(self_2801795168);

  
}

function init_2751463435(self_2751463436, path_2751463437) {
  
}

function init_2751463438(self_2751463436, path_2751463437) {
    chckNilDisp(self_2751463436);
    if (isObj(self_2751463436.m_type, NTI2801795076)) {
    init_2801795167(self_2751463436, path_2751463437);
    }
    else {
    if (isObj(self_2751463436.m_type, NTI2751463428)) {
    init_2751463435(self_2751463436, path_2751463437);
    }
    }

  
}

function reload_2801795170(self_2801795171) {
  
}

function reload_2751463439(self_2751463440) {
  
}

function reload_2751463441(self_2751463440) {
    chckNilDisp(self_2751463440);
    if (isObj(self_2751463440.m_type, NTI2801795076)) {
    reload_2801795170(self_2751463440);
    }
    else {
    if (isObj(self_2751463440.m_type, NTI2751463428)) {
    reload_2751463439(self_2751463440);
    }
    }

  
}

function handleUnknownPopupAction_2801795172(self_2801795173, popup_2801795174, action_2801795175, arg_2801795176) {
  var result_2801795177 = false;

    var action_2801795178 = toJSStr(action_2801795175);
    var arg_2801795179 = toJSStr(HEX24_1627394481(arg_2801795176));
    return window.handleUnknownPopupAction(popup_2801795174, action_2801795178,  JSON.parse(arg_2801795179));

  return result_2801795177;

}

function handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463447 = false;

  return result_2751463447;

}

function handleUnknownPopupAction_2751463448(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463449 = false;

  BeforeRet: {
    chckNilDisp(self_2751463443);
    if (isObj(self_2751463443.m_type, NTI2801795076)) {
    result_2751463449 = handleUnknownPopupAction_2801795172(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463443.m_type, NTI2751463428)) {
    result_2751463449 = handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    }
  };

  return result_2751463449;

}

function handleUnknownDocumentEditorAction_2801795180(self_2801795181, editor_2801795182, action_2801795183, arg_2801795184) {
  var result_2801795185 = false;

    var action_2801795186 = toJSStr(action_2801795183);
    var arg_2801795187 = toJSStr(HEX24_1627394481(arg_2801795184));
    return window.handleUnknownDocumentEditorAction(editor_2801795182, action_2801795186, JSON.parse(arg_2801795187));

  return result_2801795185;

}

function handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463455 = false;

  return result_2751463455;

}

function handleUnknownDocumentEditorAction_2751463456(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463457 = false;

  BeforeRet: {
    chckNilDisp(self_2751463451);
    if (isObj(self_2751463451.m_type, NTI2801795076)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2801795180(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463451.m_type, NTI2751463428)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    }
  };

  return result_2751463457;

}

function handleGlobalAction_2801795188(self_2801795189, action_2801795190, arg_2801795191) {
  var result_2801795192 = false;

    var action_2801795193 = toJSStr(action_2801795190);
    var arg_2801795194 = toJSStr(HEX24_1627394481(arg_2801795191));
    return window.handleGlobalAction(action_2801795193, JSON.parse(arg_2801795194));

  return result_2801795192;

}

function handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463462 = false;

  return result_2751463462;

}

function handleGlobalAction_2751463463(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463464 = false;

  BeforeRet: {
    chckNilDisp(self_2751463459);
    if (isObj(self_2751463459.m_type, NTI2801795076)) {
    result_2751463464 = handleGlobalAction_2801795188(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463459.m_type, NTI2751463428)) {
    result_2751463464 = handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    }
  };

  return result_2751463464;

}

function calculateBounds_2785018524(self_2785018525, container_2785018526) {
  var result_2785018527 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2785018528 = ((container_2785018526.x + (self_2785018525.anchor.Field0.x * container_2785018526.w)) + self_2785018525.left);
    var top_2785018529 = ((container_2785018526.y + (self_2785018525.anchor.Field0.y * container_2785018526.h)) + self_2785018525.top);
    var right_2785018530 = ((container_2785018526.x + (self_2785018525.anchor.Field1.x * container_2785018526.w)) + self_2785018525.right);
    var bottom_2785018531 = ((container_2785018526.y + (self_2785018525.anchor.Field1.y * container_2785018526.h)) + self_2785018525.bottom);
    var px_2785018532 = (self_2785018525.pivot.x * (right_2785018530 - left_2785018528));
    var py_2785018533 = (self_2785018525.pivot.y * (bottom_2785018531 - top_2785018529));
    result_2785018527.x = (left_2785018528 - px_2785018532);
    result_2785018527.y = (top_2785018529 - py_2785018533);
    result_2785018527.w = (right_2785018530 - left_2785018528);
    result_2785018527.h = (bottom_2785018531 - top_2785018529);

  return result_2785018527;

}

function formatValue_2785018289(result_2785018291, result_2785018291_Idx, value_2785018292, specifier_2785018293) {
    formatValue_721420459(result_2785018291, result_2785018291_Idx, HEX24_2147483713(value_2785018292), specifier_2785018293);

  
}

function HEX24_2164261788(aHEX60gensym45_2164261789) {
  var result_2164261790 = [];

    result_2164261790 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2164261794(aHEX60gensym45_2164261789.x) || [],[44,32] || [],HEX24_2164261794(aHEX60gensym45_2164261789.y) || [],[41] || []), NTI33554449);

  return result_2164261790;

}

function addQuoted_2785018259(s_2785018261, s_2785018261_Idx, x_2785018262) {
    s_2785018261[s_2785018261_Idx].push.apply(s_2785018261[s_2785018261_Idx], HEX24_2164261788(x_2785018262));;

  
}

function HEX24_2785018227(x_2785018229) {
  var result_2785018230 = [[]];

    result_2785018230[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym13_2785018241 = 0;
    if ((0 < countHEX60gensym13_2785018241)) {
    result_2785018230[0].push.apply(result_2785018230[0], [44,32]);;
    }
    
    result_2785018230[0].push.apply(result_2785018230[0], [109,105,110]);;
    result_2785018230[0].push.apply(result_2785018230[0], [58,32]);;
    countHEX60gensym13_2785018241 += 1;
    addQuoted_2785018259(result_2785018230, 0, x_2785018229["Field0"]);
    if ((0 < countHEX60gensym13_2785018241)) {
    result_2785018230[0].push.apply(result_2785018230[0], [44,32]);;
    }
    
    result_2785018230[0].push.apply(result_2785018230[0], [109,97,120]);;
    result_2785018230[0].push.apply(result_2785018230[0], [58,32]);;
    countHEX60gensym13_2785018241 += 1;
    addQuoted_2785018259(result_2785018230, 0, x_2785018229["Field1"]);
    result_2785018230[0].push.apply(result_2785018230[0], [41]);;

  return result_2785018230[0];

}

function formatValue_2785018222(result_2785018224, result_2785018224_Idx, value_2785018225, specifier_2785018226) {
    formatValue_721420459(result_2785018224, result_2785018224_Idx, HEX24_2785018227(value_2785018225), specifier_2785018226);

  
}

function formatValue_2785018561(result_2785018563, result_2785018563_Idx, value_2785018564, specifier_2785018565) {
    formatValue_721420459(result_2785018563, result_2785018563_Idx, HEX24_2164261788(value_2785018564), specifier_2785018565);

  
}

function width_2785017920(self_2785017921) {
  var result_2785017922 = 0.0;

    result_2785017922 = (self_2785017921.right - self_2785017921.left);

  return result_2785017922;

}

function height_2785017923(self_2785017924) {
  var result_2785017925 = 0.0;

    result_2785017925 = (self_2785017924.bottom - self_2785017924.top);

  return result_2785017925;

}

function layoutWidget_2785018534(self_2785018535, container_2785018536, frameIndex_2785018537, options_2785018538) {
    var newBounds_2785018539 = [calculateBounds_2785018524(self_2785018535, container_2785018536)];
    if (self_2785018535.logLayout) {
    var fmtRes_2785018545 = [mnewString(0)];
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2785018289(fmtRes_2785018545, 0, container_2785018536, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018545, 0, frameIndex_2785018537, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018222(fmtRes_2785018545, 0, self_2785018535.anchor, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018561(fmtRes_2785018545, 0, self_2785018535.pivot, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018545, 0, self_2785018535.left, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44]);;
    formatValue_2785018156(fmtRes_2785018545, 0, self_2785018535.top, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018545, 0, self_2785018535.right, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [44]);;
    formatValue_2785018156(fmtRes_2785018545, 0, self_2785018535.bottom, []);
    fmtRes_2785018545[0].push.apply(fmtRes_2785018545[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018545, 0, newBounds_2785018539[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018545[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018539[0], self_2785018535.lastBounds))) {
    var fmtRes_2785018612 = [mnewString(0)];
    fmtRes_2785018612[0].push.apply(fmtRes_2785018612[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018289(fmtRes_2785018612, 0, self_2785018535.lastBounds, []);
    fmtRes_2785018612[0].push.apply(fmtRes_2785018612[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018612, 0, newBounds_2785018539[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018612[0], NTI33554449)]);
    }
    
    }
    
    if (self_2785018535.sizeToContent) {
    whHEX3D_2147483689(newBounds_2785018539[0], vec2_2164261686());
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018539[0], self_2785018535.lastBounds))) {
    self_2785018535.lastBounds = nimCopy(self_2785018535.lastBounds, newBounds_2785018539[0], NTI2147483653);
    self_2785018535.lastBoundsChange = frameIndex_2785018537;
    }
    
    if ((((frameIndex_2785018537 <= self_2785018535.lastHierarchyChange) || (frameIndex_2785018537 <= self_2785018535.lastBoundsChange)) && (0 < (self_2785018535.children).length))) {
    var last_2785018630 = vec2_2164261725(self_2785018535.children[chckIndx(0, 0, (self_2785018535.children).length - 1)].left, self_2785018535.children[chckIndx(0, 0, (self_2785018535.children).length - 1)].top);
    Label1: {
      var i_2785018663 = 0;
      var c_2785018664 = null;
      var i_536872692 = 0;
      var L_536872693 = (self_2785018535.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872692 < L_536872693)) break Label3;
            i_2785018663 = i_536872692;
            c_2785018664 = self_2785018535.children[chckIndx(i_536872692, 0, (self_2785018535.children).length - 1)];
            switch (self_2785018535.layout.kind) {
            case 0:
              break;
            case 1:
              var width_2785018665 = width_2785017920(c_2785018664);
              c_2785018664.left = last_2785018630.x;
              c_2785018664.right = (last_2785018630.x + width_2785018665);
              break;
            case 2:
              var height_2785018666 = height_2785017923(c_2785018664);
              c_2785018664.top = last_2785018630.y;
              c_2785018664.bottom = (last_2785018630.y + height_2785018666);
              break;
            }
            layoutWidget_2785018519(c_2785018664, newBounds_2785018539[0], frameIndex_2785018537, options_2785018538);
            if (self_2785018535.sizeToContent) {
            newBounds_2785018539[0] = nimCopy(newBounds_2785018539[0], or_2147483728(newBounds_2785018539[0], c_2785018664.lastBounds), NTI2147483653);
            }
            
            last_2785018630.x = ((c_2785018664.lastBounds.x + c_2785018664.lastBounds.w) - newBounds_2785018539[0].x);
            last_2785018630.y = ((c_2785018664.lastBounds.y + c_2785018664.lastBounds.h) - newBounds_2785018539[0].y);
            i_536872692 = addInt(i_536872692, 1);
            if (!(((self_2785018535.children).length == L_536872693))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018539[0], self_2785018535.lastBounds))) {
    self_2785018535.lastBounds = nimCopy(self_2785018535.lastBounds, newBounds_2785018539[0], NTI2147483653);
    self_2785018535.lastBoundsChange = frameIndex_2785018537;
    }
    

  
}

function layoutWidget_2785018876(self_2785018877, container_2785018878, frameIndex_2785018879, options_2785018880) {
    var newBounds_2785018881 = calculateBounds_2785018524(self_2785018877, container_2785018878);
    if (self_2785018877.logLayout) {
    var fmtRes_2785018887 = [mnewString(0)];
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2785018289(fmtRes_2785018887, 0, container_2785018878, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018887, 0, frameIndex_2785018879, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018222(fmtRes_2785018887, 0, self_2785018877.anchor, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018561(fmtRes_2785018887, 0, self_2785018877.pivot, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018887, 0, self_2785018877.left, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44]);;
    formatValue_2785018156(fmtRes_2785018887, 0, self_2785018877.top, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018887, 0, self_2785018877.right, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [44]);;
    formatValue_2785018156(fmtRes_2785018887, 0, self_2785018877.bottom, []);
    fmtRes_2785018887[0].push.apply(fmtRes_2785018887[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018887, 0, newBounds_2785018881, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018887[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018881, self_2785018877.lastBounds))) {
    var fmtRes_2785018942 = [mnewString(0)];
    fmtRes_2785018942[0].push.apply(fmtRes_2785018942[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018289(fmtRes_2785018942, 0, self_2785018877.lastBounds, []);
    fmtRes_2785018942[0].push.apply(fmtRes_2785018942[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018942, 0, newBounds_2785018881, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018942[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018881, self_2785018877.lastBounds))) {
    self_2785018877.lastBounds = nimCopy(self_2785018877.lastBounds, newBounds_2785018881, NTI2147483653);
    self_2785018877.lastBoundsChange = frameIndex_2785018879;
    }
    
    if (((frameIndex_2785018879 <= self_2785018877.lastHierarchyChange) || (frameIndex_2785018879 <= self_2785018877.lastBoundsChange))) {
    var lastY_2785018957 = 0.0;
    Label1: {
      var c_2785018961 = null;
      var i_536872696 = 0;
      var L_536872697 = (self_2785018877.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872696 < L_536872697)) break Label3;
            c_2785018961 = self_2785018877.children[chckIndx(i_536872696, 0, (self_2785018877.children).length - 1)];
            var height_2785018962 = height_2785017923(c_2785018961);
            c_2785018961.top = lastY_2785018957;
            c_2785018961.bottom = (lastY_2785018957 + height_2785018962);
            layoutWidget_2785018519(c_2785018961, newBounds_2785018881, frameIndex_2785018879, options_2785018880);
            lastY_2785018957 = ((c_2785018961.lastBounds.y + c_2785018961.lastBounds.h) - newBounds_2785018881.y);
            i_536872696 = addInt(i_536872696, 1);
            if (!(((self_2785018877.children).length == L_536872697))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2785018777() {
  var result_2785018784 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2785018784;

}

function isSome_2785018797(self_2785018799) {
  var result_2785018800 = false;

    result_2785018800 = self_2785018799.has;

  return result_2785018800;

}

function isNone_2785018822(self_2785018824) {
  var result_2785018825 = false;

    result_2785018825 = !(self_2785018824.has);

  return result_2785018825;

}

function get_2785018814(self_2785018816) {
  var result_2785018817 = null;

  BeforeRet: {
    if (isNone_2785018822(self_2785018816)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785018817 = self_2785018816.val;
    break BeforeRet;
  };

  return result_2785018817;

}

function some_2785018859(val_2785018861) {
  var result_2785018862 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2785018862.has = true;
    result_2785018862.val = nimCopy(result_2785018862.val, val_2785018861, NTI2147483653);

  return result_2785018862;

}

function layoutWidget_2785018671(self_2785018672, container_2785018673, frameIndex_2785018674, options_2785018675) {
            var Temporary10;

    var newBounds_2785018676 = calculateBounds_2785018524(self_2785018672, container_2785018673);
    if (self_2785018672.logLayout) {
    var fmtRes_2785018682 = [mnewString(0)];
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2785018289(fmtRes_2785018682, 0, container_2785018673, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018682, 0, frameIndex_2785018674, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018222(fmtRes_2785018682, 0, self_2785018672.anchor, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018561(fmtRes_2785018682, 0, self_2785018672.pivot, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018682, 0, self_2785018672.left, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44]);;
    formatValue_2785018156(fmtRes_2785018682, 0, self_2785018672.top, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018682, 0, self_2785018672.right, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [44]);;
    formatValue_2785018156(fmtRes_2785018682, 0, self_2785018672.bottom, []);
    fmtRes_2785018682[0].push.apply(fmtRes_2785018682[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018682, 0, newBounds_2785018676, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018682[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018676, self_2785018672.lastBounds))) {
    var fmtRes_2785018737 = [mnewString(0)];
    fmtRes_2785018737[0].push.apply(fmtRes_2785018737[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018289(fmtRes_2785018737, 0, self_2785018672.lastBounds, []);
    fmtRes_2785018737[0].push.apply(fmtRes_2785018737[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018737, 0, newBounds_2785018676, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018737[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018676, self_2785018672.lastBounds))) {
    self_2785018672.lastBounds = nimCopy(self_2785018672.lastBounds, newBounds_2785018676, NTI2147483653);
    self_2785018672.lastBoundsChange = frameIndex_2785018674;
    }
    
    if (((frameIndex_2785018674 <= self_2785018672.lastHierarchyChange) || (frameIndex_2785018674 <= self_2785018672.lastBoundsChange))) {
    Label1: {
      var i_2785018757 = 0;
      var c_2785018758 = null;
      var i_536872704 = 0;
      var L_536872705 = (self_2785018672.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872704 < L_536872705)) break Label3;
            i_2785018757 = i_536872704;
            c_2785018758 = self_2785018672.children[chckIndx(i_536872704, 0, (self_2785018672.children).length - 1)];
            var oldBounds_2785018759 = nimCopy(null, c_2785018758.lastBounds, NTI2147483653);
            layoutWidget_2785018519(c_2785018758, newBounds_2785018676, frameIndex_2785018674, options_2785018675);
            var newBounds_2785018760 = nimCopy(null, c_2785018758.lastBounds, NTI2147483653);
            if ((!(HEX3DHEX3D_2785018597(oldBounds_2785018759, newBounds_2785018760)) && !(contains_2130706618(newBounds_2785018760, oldBounds_2785018759)))) {
            var invalidationRect_2785018765 = nimCopy(null, oldBounds_2785018759, NTI2147483653);
            Label4: {
              var k_2785018771 = 0;
              var colontmp__536872701 = 0;
              colontmp__536872701 = subInt(i_2785018757, 1);
              var res_536872702 = colontmp__536872701;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872702)) break Label6;
                    k_2785018771 = res_536872702;
                    invalidate_2785018426(self_2785018672.children[chckIndx(k_2785018771, 0, (self_2785018672.children).length - 1)], frameIndex_2785018674, invalidationRect_2785018765);
                    if (contains_2130706618(self_2785018672.children[chckIndx(k_2785018771, 0, (self_2785018672.children).length - 1)].lastBounds, invalidationRect_2785018765)) {
                    break Label4;
                    }
                    
                    res_536872702 = subInt(res_536872702, 1);
                  }
              };
            };
            }
            
            i_536872704 = addInt(i_536872704, 1);
            if (!(((self_2785018672.children).length == L_536872705))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2785018785 = [none_2785018777()];
    Label7: {
      var i_2785018791 = 0;
      var c_2785018792 = null;
      var i_536872708 = 0;
      var L_536872709 = (self_2785018672.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872708 < L_536872709)) break Label9;
            i_2785018791 = i_536872708;
            c_2785018792 = self_2785018672.children[chckIndx(i_536872708, 0, (self_2785018672.children).length - 1)];
            if (isSome_2785018797(invalidationRect_2785018785[0])) {
            invalidate_2785018426(c_2785018792, frameIndex_2785018674, get_2785018814(invalidationRect_2785018785[0]));
            }
            
            if (isSome_2785018797(invalidationRect_2785018785[0])) {
            Temporary10 = some_2785018859(or_2147483728(get_2785018814(invalidationRect_2785018785[0]), c_2785018792.lastBounds));
            }
            else {
            Temporary10 = some_2785018859(c_2785018792.lastBounds);
            }
            
            invalidationRect_2785018785[0] = nimCopy(invalidationRect_2785018785[0], Temporary10, NTI2785018404);
            i_536872708 = addInt(i_536872708, 1);
            if (!(((self_2785018672.children).length == L_536872709))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2785019050(self_2785019051, container_2785019052, frameIndex_2785019053, options_2785019054) {
    var newBounds_2785019055 = calculateBounds_2785018524(self_2785019051, container_2785019052);
    if (self_2785019051.sizeToContent) {
    var size_2785019056 = options_2785019054.getTextBounds(self_2785019051.text);
    var incX_2785019057 = max_33555642((size_2785019056.x - newBounds_2785019055.w), 0.0);
    var incY_2785019058 = max_33555642((size_2785019056.y - newBounds_2785019055.h), 0.0);
    newBounds_2785019055.w = size_2785019056.x;
    newBounds_2785019055.h = size_2785019056.y;
    HEX2DHEX3D_2634022922(newBounds_2785019055, "x", (incX_2785019057 * self_2785019051.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2785019055, "y", (incY_2785019058 * self_2785019051.pivot.y));
    }
    
    if (self_2785019051.logLayout) {
    var fmtRes_2785019072 = [mnewString(0)];
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2785019072, 0, self_2785019051.text, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [39,44,32]);;
    formatValue_2785018289(fmtRes_2785019072, 0, container_2785019052, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785019072, 0, frameIndex_2785019053, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018222(fmtRes_2785019072, 0, self_2785019051.anchor, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018561(fmtRes_2785019072, 0, self_2785019051.pivot, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785019072, 0, self_2785019051.left, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44]);;
    formatValue_2785018156(fmtRes_2785019072, 0, self_2785019051.top, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785019072, 0, self_2785019051.right, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [44]);;
    formatValue_2785018156(fmtRes_2785019072, 0, self_2785019051.bottom, []);
    fmtRes_2785019072[0].push.apply(fmtRes_2785019072[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785019072, 0, newBounds_2785019055, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019072[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018597(newBounds_2785019055, self_2785019051.lastBounds))) {
    var fmtRes_2785019127 = [mnewString(0)];
    fmtRes_2785019127[0].push.apply(fmtRes_2785019127[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018289(fmtRes_2785019127, 0, self_2785019051.lastBounds, []);
    fmtRes_2785019127[0].push.apply(fmtRes_2785019127[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785019127, 0, newBounds_2785019055, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019127[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785019055, self_2785019051.lastBounds))) {
    self_2785019051.lastBounds = nimCopy(self_2785019051.lastBounds, newBounds_2785019055, NTI2147483653);
    self_2785019051.lastBoundsChange = frameIndex_2785019053;
    }
    

  
}

function layoutWidget_2785018963(self_2785018964, container_2785018965, frameIndex_2785018966, options_2785018967) {
    var newBounds_2785018968 = calculateBounds_2785018524(self_2785018964, container_2785018965);
    if (self_2785018964.logLayout) {
    var fmtRes_2785018974 = [mnewString(0)];
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2785018289(fmtRes_2785018974, 0, container_2785018965, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018974, 0, frameIndex_2785018966, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018222(fmtRes_2785018974, 0, self_2785018964.anchor, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018561(fmtRes_2785018974, 0, self_2785018964.pivot, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018974, 0, self_2785018964.left, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44]);;
    formatValue_2785018156(fmtRes_2785018974, 0, self_2785018964.top, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44,32]);;
    formatValue_2785018156(fmtRes_2785018974, 0, self_2785018964.right, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [44]);;
    formatValue_2785018156(fmtRes_2785018974, 0, self_2785018964.bottom, []);
    fmtRes_2785018974[0].push.apply(fmtRes_2785018974[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785018974, 0, newBounds_2785018968, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018974[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018968, self_2785018964.lastBounds))) {
    var fmtRes_2785019029 = [mnewString(0)];
    fmtRes_2785019029[0].push.apply(fmtRes_2785019029[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018289(fmtRes_2785019029, 0, self_2785018964.lastBounds, []);
    fmtRes_2785019029[0].push.apply(fmtRes_2785019029[0], [32,45,62,32]);;
    formatValue_2785018289(fmtRes_2785019029, 0, newBounds_2785018968, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785019029[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018597(newBounds_2785018968, self_2785018964.lastBounds))) {
    self_2785018964.lastBounds = nimCopy(self_2785018964.lastBounds, newBounds_2785018968, NTI2147483653);
    self_2785018964.lastBoundsChange = frameIndex_2785018966;
    }
    
    if (((frameIndex_2785018966 <= self_2785018964.lastHierarchyChange) || (frameIndex_2785018966 <= self_2785018964.lastBoundsChange))) {
    var lastX_2785019044 = 0.0;
    Label1: {
      var c_2785019048 = null;
      var i_536872712 = 0;
      var L_536872713 = (self_2785018964.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872712 < L_536872713)) break Label3;
            c_2785019048 = self_2785018964.children[chckIndx(i_536872712, 0, (self_2785018964.children).length - 1)];
            var width_2785019049 = width_2785017920(c_2785019048);
            c_2785019048.left = lastX_2785019044;
            c_2785019048.right = (lastX_2785019044 + width_2785019049);
            layoutWidget_2785018519(c_2785019048, newBounds_2785018968, frameIndex_2785018966, options_2785018967);
            lastX_2785019044 = ((c_2785019048.lastBounds.x + c_2785019048.lastBounds.w) - newBounds_2785018968.x);
            i_536872712 = addInt(i_536872712, 1);
            if (!(((self_2785018964.children).length == L_536872713))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2785018514(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518) {
  
}

function layoutWidget_2785018519(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518) {
    chckNilDisp(self_2785018515);
    if (isObj(self_2785018515.m_type, NTI2785017871)) {
    layoutWidget_2785018534(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    else {
    if (isObj(self_2785018515.m_type, NTI2785017875)) {
    layoutWidget_2785018876(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    else {
    if (isObj(self_2785018515.m_type, NTI2785017873)) {
    layoutWidget_2785018671(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    else {
    if (isObj(self_2785018515.m_type, NTI2785017879)) {
    layoutWidget_2785019050(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    else {
    if (isObj(self_2785018515.m_type, NTI2785017877)) {
    layoutWidget_2785018963(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    else {
    if (isObj(self_2785018515.m_type, NTI2785017868)) {
    layoutWidget_2785018514(self_2785018515, bounds_2785018516, frameIndex_2785018517, options_2785018518);
    }
    }}}}}

  
}

function copyTo_2785019144(self_2785019145, to_2785019146, to_2785019146_Idx) {
    to_2785019146[to_2785019146_Idx].anchor = nimCopy(to_2785019146[to_2785019146_Idx].anchor, self_2785019145.anchor, NTI2785017869);
    to_2785019146[to_2785019146_Idx].pivot = nimCopy(to_2785019146[to_2785019146_Idx].pivot, self_2785019145.pivot, NTI2164261152);
    to_2785019146[to_2785019146_Idx].left = self_2785019145.left;
    to_2785019146[to_2785019146_Idx].top = self_2785019145.top;
    to_2785019146[to_2785019146_Idx].right = self_2785019145.right;
    to_2785019146[to_2785019146_Idx].bottom = self_2785019145.bottom;
    to_2785019146[to_2785019146_Idx].backgroundColor = nimCopy(to_2785019146[to_2785019146_Idx].backgroundColor, self_2785019145.backgroundColor, NTI2550136835);
    to_2785019146[to_2785019146_Idx].foregroundColor = nimCopy(to_2785019146[to_2785019146_Idx].foregroundColor, self_2785019145.foregroundColor, NTI2550136835);
    to_2785019146[to_2785019146_Idx].lastBounds = nimCopy(to_2785019146[to_2785019146_Idx].lastBounds, self_2785019145.lastBounds, NTI2147483653);
    to_2785019146[to_2785019146_Idx].lastBoundsChange = self_2785019145.lastBoundsChange;
    to_2785019146[to_2785019146_Idx].lastHierarchyChange = self_2785019145.lastHierarchyChange;
    to_2785019146[to_2785019146_Idx].lastInvalidationRect = nimCopy(to_2785019146[to_2785019146_Idx].lastInvalidationRect, self_2785019145.lastInvalidationRect, NTI2147483653);
    to_2785019146[to_2785019146_Idx].lastInvalidation = self_2785019145.lastInvalidation;
    to_2785019146[to_2785019146_Idx].sizeToContent = self_2785019145.sizeToContent;
    to_2785019146[to_2785019146_Idx].drawBorder = self_2785019145.drawBorder;
    to_2785019146[to_2785019146_Idx].fillBackground = self_2785019145.fillBackground;
    to_2785019146[to_2785019146_Idx].logLayout = self_2785019145.logLayout;
    to_2785019146[to_2785019146_Idx].allowAlpha = self_2785019145.allowAlpha;

  
}

function clone_2785019161(self_2785019162) {
  var result_2785019163 = [null];

    result_2785019163[0] = {children: [], maskContent: self_2785019162.maskContent, layout: {kind: 0}, m_type: NTI2785017871, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785019144(self_2785019162, result_2785019163, 0);
    var r_2785019168 = result_2785019163[0];
    Label1: {
      var c_2785019172 = null;
      var i_536872716 = 0;
      var L_536872717 = (self_2785019162.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872716 < L_536872717)) break Label3;
            c_2785019172 = self_2785019162.children[chckIndx(i_536872716, 0, (self_2785019162.children).length - 1)];
            r_2785019168.children.push(clone_2785019159(c_2785019172));;
            i_536872716 = addInt(i_536872716, 1);
            if (!(((self_2785019162.children).length == L_536872717))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019163[0];

}

function clone_2785019246(self_2785019247) {
  var result_2785019248 = [null];

    result_2785019248[0] = {children: [], m_type: NTI2785017875, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785019144(self_2785019247, result_2785019248, 0);
    var r_2785019253 = result_2785019248[0];
    Label1: {
      var c_2785019257 = null;
      var i_536872720 = 0;
      var L_536872721 = (self_2785019247.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872720 < L_536872721)) break Label3;
            c_2785019257 = self_2785019247.children[chckIndx(i_536872720, 0, (self_2785019247.children).length - 1)];
            r_2785019253.children.push(clone_2785019159(c_2785019257));;
            i_536872720 = addInt(i_536872720, 1);
            if (!(((self_2785019247.children).length == L_536872721))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019248[0];

}

function clone_2785019221(self_2785019222) {
  var result_2785019223 = [null];

    result_2785019223[0] = {children: [], m_type: NTI2785017877, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785019144(self_2785019222, result_2785019223, 0);
    var r_2785019228 = result_2785019223[0];
    Label1: {
      var c_2785019232 = null;
      var i_536872724 = 0;
      var L_536872725 = (self_2785019222.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872724 < L_536872725)) break Label3;
            c_2785019232 = self_2785019222.children[chckIndx(i_536872724, 0, (self_2785019222.children).length - 1)];
            r_2785019228.children.push(clone_2785019159(c_2785019232));;
            i_536872724 = addInt(i_536872724, 1);
            if (!(((self_2785019222.children).length == L_536872725))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019223[0];

}

function clone_2785019296(self_2785019297) {
  var result_2785019298 = [null];

    result_2785019298[0] = {text: nimCopy(null, self_2785019297.text, NTI33554449), style: nimCopy(null, self_2785019297.style, NTI2516582404), m_type: NTI2785017879, lastRenderedText: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785019144(self_2785019297, result_2785019298, 0);

  return result_2785019298[0];

}

function clone_2785019271(self_2785019272) {
  var result_2785019273 = [null];

    result_2785019273[0] = {children: [], m_type: NTI2785017873, parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785019144(self_2785019272, result_2785019273, 0);
    var r_2785019278 = result_2785019273[0];
    Label1: {
      var c_2785019282 = null;
      var i_536872728 = 0;
      var L_536872729 = (self_2785019272.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872728 < L_536872729)) break Label3;
            c_2785019282 = self_2785019272.children[chckIndx(i_536872728, 0, (self_2785019272.children).length - 1)];
            r_2785019278.children.push(clone_2785019159(c_2785019282));;
            i_536872728 = addInt(i_536872728, 1);
            if (!(((self_2785019272.children).length == L_536872729))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019273[0];

}

function clone_2785019156(self_2785019157) {
  var result_2785019158 = null;

  return result_2785019158;

}

function clone_2785019159(self_2785019157) {
  var result_2785019160 = null;

  BeforeRet: {
    chckNilDisp(self_2785019157);
    if (isObj(self_2785019157.m_type, NTI2785017871)) {
    result_2785019160 = clone_2785019161(self_2785019157);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019157.m_type, NTI2785017875)) {
    result_2785019160 = clone_2785019246(self_2785019157);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019157.m_type, NTI2785017877)) {
    result_2785019160 = clone_2785019221(self_2785019157);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019157.m_type, NTI2785017879)) {
    result_2785019160 = clone_2785019296(self_2785019157);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019157.m_type, NTI2785017873)) {
    result_2785019160 = clone_2785019271(self_2785019157);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785019157.m_type, NTI2785017868)) {
    result_2785019160 = clone_2785019156(self_2785019157);
    break BeforeRet;
    }
    }}}}}
  };

  return result_2785019160;

}

function invoke_3489661170(event_3489661172, arg_3489661173) {
    Label1: {
      var h_3489661196 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872733 = 0;
      var L_536872734 = (event_3489661172.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872733 < L_536872734)) break Label3;
            h_3489661196 = event_3489661172.handlers[chckIndx(i_536872733, 0, (event_3489661172.handlers).length - 1)];
            h_3489661196.Field1(arg_3489661173);
            i_536872733 = addInt(i_536872733, 1);
            if (!(((event_3489661172.handlers).length == L_536872734))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3489662069(self_3489662070, redrawEverything_3489662071) {
    self_3489662070.redrawEverything = (self_3489662070.redrawEverything || redrawEverything_3489662071);
    invoke_3489661170(self_3489662070.onResized, redrawEverything_3489662071);

  
}

function requestRender_2768240743(self_2768240744, redrawEverything_2768240745) {
  
}

function requestRender_2768240746(self_2768240744, redrawEverything_2768240745) {
    chckNilDisp(self_2768240744);
    if (isObj(self_2768240744.m_type, NTI3489660939)) {
    requestRender_3489662069(self_2768240744, redrawEverything_2768240745);
    }
    else {
    if (isObj(self_2768240744.m_type, NTI2768240644)) {
    requestRender_2768240743(self_2768240744, redrawEverything_2768240745);
    }
    }

  
}

function size_3489662103(self_3489662104) {
  var result_3489662105 = ({x: 0.0, y: 0.0});

    return {x: self_3489662104.content.clientWidth, y: self_3489662104.content.clientHeight};;

  return result_3489662105;

}

function size_2768240757(self_2768240758) {
  var result_2768240759 = ({x: 0.0, y: 0.0});

  return result_2768240759;

}

function size_2768240760(self_2768240758) {
  var result_2768240761 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240758);
    if (isObj(self_2768240758.m_type, NTI3489660939)) {
    result_2768240761 = nimCopy(result_2768240761, size_3489662103(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240758.m_type, NTI2768240644)) {
    result_2768240761 = nimCopy(result_2768240761, size_2768240757(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240761;

}

function createOrReplaceElement_3489662251(element_3489662252, element_3489662252_Idx, name_3489662253, nameUpper_3489662254) {
    if ((element_3489662252[element_3489662252_Idx] == null)) {
    element_3489662252[element_3489662252_Idx] = document.createElement(name_3489662253);
    element_3489662252[element_3489662252_Idx].className = "widget";
    }
    else {
    if (!((element_3489662252[element_3489662252_Idx].nodeName == nameUpper_3489662254))) {
    var dif_3489662258 = document.createElement(name_3489662253);
    element_3489662252[element_3489662252_Idx].replaceWith(dif_3489662258);
    element_3489662252[element_3489662252_Idx] = dif_3489662258;
    element_3489662252[element_3489662252_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2130706591(a_2130706592, b_2130706593) {
  var result_2130706594 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706594.x = (a_2130706592.x - b_2130706593.x);
    result_2130706594.y = (a_2130706592.y - b_2130706593.y);
    result_2130706594.w = a_2130706592.w;
    result_2130706594.h = a_2130706592.h;

  return result_2130706594;

}

function round_2634022918(x_2634022920) {
  var result_2634022921 = [0.0];

    if ((0.0 <= x_2634022920)) {
    result_2634022921[0] = Math.round(x_2634022920);
    }
    else {
      result_2634022921[0] = Math.ceil(x_2634022920);
      if ((0.5 <= (result_2634022921[0] - x_2634022920))) {
      HEX2DHEX3D_2634022922(result_2634022921, 0, 1.0);
      }
      
    }
    

  return result_2634022921[0];

}

function myToHtmlHex_3489662262(c_3489662263) {
  var result_3489662264 = null;

    result_3489662264 = "rgba(";
    (result_3489662264) += (((round_2634022918((c_3489662263.r * 255.0))) | 0));;
    (result_3489662264) += (", ");;
    (result_3489662264) += (((round_2634022918((c_3489662263.g * 255.0))) | 0));;
    (result_3489662264) += (", ");;
    (result_3489662264) += (((round_2634022918((c_3489662263.b * 255.0))) | 0));;
    (result_3489662264) += (", ");;
    (result_3489662264) += (c_3489662263.a);;
    (result_3489662264) += (")");;

  return result_3489662264;

}

function getTextStyle_3489662475(x_3489662476, y_3489662477, width_3489662478, height_3489662479, color_3489662480, backgroundColor_3489662481, italic_3489662482, bold_3489662483) {
  var result_3489662544 = null;

    result_3489662544 = `left: ${x_3489662476}px; top: ${y_3489662477}px; width: ${width_3489662478}px; height: ${height_3489662479}px; overflow: visible; color: ${color_3489662480}; ${backgroundColor_3489662481}`
    if (italic_3489662482) {
    result_3489662544 += `font-style: italic;`
    }
    
    if (bold_3489662483) {
    result_3489662544 += `font-weight: bold;`
    }
    

  return result_3489662544;

}

function pop_3489662226(s_3489662228, s_3489662228_Idx) {
  var result_3489662229 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3489662233 = subInt((s_3489662228[s_3489662228_Idx]).length, 1);
    result_3489662229 = nimCopy(result_3489662229, s_3489662228[s_3489662228_Idx][chckIndx(L_3489662233, 0, (s_3489662228[s_3489662228_Idx]).length - 1)], NTI2147483653);
    if (s_3489662228[s_3489662228_Idx].length < chckRange(L_3489662233, 0, 2147483647)) { for (var i = s_3489662228[s_3489662228_Idx].length ; i < chckRange(L_3489662233, 0, 2147483647) ; ++i) s_3489662228[s_3489662228_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3489662228[s_3489662228_Idx].length = chckRange(L_3489662233, 0, 2147483647); };

  return result_3489662229;

}

function renderWidget_3489662484(self_3489662485, renderer_3489662486, element_3489662487, element_3489662487_Idx, forceRedraw_3489662488, frameIndex_3489662489, buffer_3489662490, buffer_3489662490_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3489662530() {
        element_3489662487[element_3489662487_Idx].setAttribute("style", getTextStyle_3489662475(((relBounds_3489662503.x) | 0), ((relBounds_3489662503.y) | 0), ((relBounds_3489662503.w) | 0), ((relBounds_3489662503.h) | 0), color_3489662511, backgroundColor_3489662519, italic_3489662524, bold_3489662529));
        if (updateText_3489662513) {
        element_3489662487[element_3489662487_Idx].innerText = text_3489662512;
        element_3489662487[element_3489662487_Idx].setAttribute("data-text", text_3489662512);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3489662485.lastHierarchyChange < frameIndex_3489662489) && (self_3489662485.lastBoundsChange < frameIndex_3489662489)) && (self_3489662485.lastInvalidation < frameIndex_3489662489)) && !(forceRedraw_3489662488))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662251(element_3489662487, element_3489662487_Idx, "span", "SPAN");
    var relBounds_3489662503 = HEX2D_2130706591(self_3489662485.lastBounds, xy_2147483680(renderer_3489662486.boundsStack[chckIndx((renderer_3489662486.boundsStack).length - 1, 0, (renderer_3489662486.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3489662485.lastBounds, NTI2147483653);
    renderer_3489662486.boundsStack.push(Temporary1);;
    try {
    var color_3489662511 = myToHtmlHex_3489662262(self_3489662485.foregroundColor);
    var text_3489662512 = toJSStr(self_3489662485.text);
    var updateText_3489662513 = !((element_3489662487[element_3489662487_Idx].getAttribute("data-text") == text_3489662512));
    if (self_3489662485.fillBackground) {
    var fmtRes_3489662518 = [mnewString(0)];
    fmtRes_3489662518[0].push.apply(fmtRes_3489662518[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3489662518, 0, myToHtmlHex_3489662262(self_3489662485.backgroundColor));
    fmtRes_3489662518[0].push.apply(fmtRes_3489662518[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3489662518[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3489662519 = Temporary3;
    var italic_3489662524 = (self_3489662485.style.fontStyle[0] != undefined);
    var bold_3489662529 = (self_3489662485.style.fontStyle[2] != undefined);
    renderer_3489662486.domUpdates.push(HEX3Aanonymous_3489662530);;
    self_3489662485.lastRenderedText = nimCopy(null, self_3489662485.text, NTI33554449);
    } finally {
    var _ = pop_3489662226(renderer_3489662486, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3489662259(element_3489662260, element_3489662260_Idx, bounds_3489662261) {
    element_3489662260[element_3489662260_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3489662261.x) | 0)));
    element_3489662260[element_3489662260_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3489662261.y) | 0)));
    element_3489662260[element_3489662260_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3489662261.w) | 0)));
    element_3489662260[element_3489662260_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3489662261.h) | 0)));

  
}

function renderWidget_3489662427(self_3489662428, renderer_3489662429, element_3489662430, element_3489662430_Idx, forceRedraw_3489662431, frameIndex_3489662432, buffer_3489662433, buffer_3489662433_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3489662428.lastHierarchyChange < frameIndex_3489662432) && (self_3489662428.lastBoundsChange < frameIndex_3489662432)) && (self_3489662428.lastInvalidation < frameIndex_3489662432)) && !(forceRedraw_3489662431))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662251(element_3489662430, element_3489662430_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3489662428.children).length < (element_3489662430[element_3489662430_Idx].children).length)) break Label2;
          element_3489662430[element_3489662430_Idx].removeChild(element_3489662430[element_3489662430_Idx].lastChild);
        }
    };
    var relBounds_3489662452 = HEX2D_2130706591(self_3489662428.lastBounds, xy_2147483680(renderer_3489662429.boundsStack[chckIndx((renderer_3489662429.boundsStack).length - 1, 0, (renderer_3489662429.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3489662428.lastBounds, NTI2147483653);
    renderer_3489662429.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3489662259(element_3489662430, element_3489662430_Idx, relBounds_3489662452);
    var existingCount_3489662463 = (element_3489662430[element_3489662430_Idx].children).length;
    Label5: {
      var i_3489662469 = 0;
      var c_3489662470 = null;
      var i_536872738 = 0;
      var L_536872739 = (self_3489662428.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872738 < L_536872739)) break Label7;
            i_3489662469 = i_536872738;
            c_3489662470 = self_3489662428.children[chckIndx(i_536872738, 0, (self_3489662428.children).length - 1)];
            if ((i_3489662469 < existingCount_3489662463)) {
            Temporary8 = element_3489662430[element_3489662430_Idx].children[chckIndx(i_3489662469, 0, (element_3489662430[element_3489662430_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3489662471 = [Temporary8];
            renderWidget_3489662168(c_3489662470, renderer_3489662429, childElement_3489662471, 0, (forceRedraw_3489662431 || self_3489662428.fillBackground), frameIndex_3489662432, buffer_3489662433, buffer_3489662433_Idx);
            if (((existingCount_3489662463 <= i_3489662469) && !((childElement_3489662471[0] == null)))) {
            element_3489662430[element_3489662430_Idx].appendChild(childElement_3489662471[0]);
            }
            
            i_536872738 = addInt(i_536872738, 1);
            if (!(((self_3489662428.children).length == L_536872739))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3489662226(renderer_3489662429, "boundsStack");
    }
  };

  
}

function getBackgroundColor_2785018332(self_2785018333) {
  var result_2785018334 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018334 = nimCopy(result_2785018334, self_2785018333.backgroundColor, NTI2550136835);
    if (!(self_2785018333.allowAlpha)) {
    result_2785018334.a = 1.0;
    }
    

  return result_2785018334;

}

function getForegroundColor_2785018329(self_2785018330) {
  var result_2785018331 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018331 = nimCopy(result_2785018331, self_2785018330.foregroundColor, NTI2550136835);
    if (!(self_2785018330.allowAlpha)) {
    result_2785018331.a = 1.0;
    }
    

  return result_2785018331;

}

function renderWidget_3489662306(self_3489662307, renderer_3489662308, element_3489662309, element_3489662309_Idx, forceRedraw_3489662310, frameIndex_3489662311, buffer_3489662312, buffer_3489662312_Idx) {
    
function HEX3Aanonymous_3489662398() {
        element_3489662309[element_3489662309_Idx].className = "widget";
        element_3489662309[element_3489662309_Idx].setAttribute("style", css_3489662336);

      
    }
            var Temporary8;

  BeforeRet: {
    if (((((self_3489662307.lastHierarchyChange < frameIndex_3489662311) && (self_3489662307.lastBoundsChange < frameIndex_3489662311)) && (self_3489662307.lastInvalidation < frameIndex_3489662311)) && !(forceRedraw_3489662310))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3489662251(element_3489662309, element_3489662309_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!(len_2785018025(self_3489662307) < (element_3489662309[element_3489662309_Idx].children).length)) break Label2;
          element_3489662309[element_3489662309_Idx].removeChild(element_3489662309[element_3489662309_Idx].lastChild);
        }
    };
    var relBounds_3489662328 = HEX2D_2130706591(self_3489662307.lastBounds, xy_2147483680(renderer_3489662308.boundsStack[chckIndx((renderer_3489662308.boundsStack).length - 1, 0, (renderer_3489662308.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3489662307.lastBounds, NTI2147483653);
    renderer_3489662308.boundsStack.push(Temporary3);;
    try {
    var css_3489662336 = "left: ";
    (css_3489662336) += (((relBounds_3489662328.x) | 0));;
    (css_3489662336) += ("px; top: ");;
    (css_3489662336) += (((relBounds_3489662328.y) | 0));;
    (css_3489662336) += ("px; width: ");;
    (css_3489662336) += (((relBounds_3489662328.w) | 0));;
    (css_3489662336) += ("px; height: ");;
    (css_3489662336) += (((relBounds_3489662328.h) | 0));;
    (css_3489662336) += ("px;");;
    var backgroundColor_3489662369 = getBackgroundColor_2785018332(self_3489662307);
    if (self_3489662307.fillBackground) {
    (css_3489662336) += ("background: ");;
    (css_3489662336) += (myToHtmlHex_3489662262(backgroundColor_3489662369));;
    (css_3489662336) += (";");;
    }
    
    if (self_3489662307.maskContent) {
    (css_3489662336) += ("overflow: hidden;");;
    }
    
    if (self_3489662307.drawBorder) {
    (css_3489662336) += ("border: 1px solid ");;
    (css_3489662336) += (myToHtmlHex_3489662262(getForegroundColor_2785018329(self_3489662307)));;
    (css_3489662336) += (";");;
    }
    
    renderer_3489662308.domUpdates.push(HEX3Aanonymous_3489662398);;
    var existingCount_3489662406 = (element_3489662309[element_3489662309_Idx].children).length;
    Label5: {
      var i_3489662412 = 0;
      var c_3489662413 = null;
      var i_536872743 = 0;
      var L_536872744 = (self_3489662307.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872743 < L_536872744)) break Label7;
            i_3489662412 = i_536872743;
            c_3489662413 = self_3489662307.children[chckIndx(i_536872743, 0, (self_3489662307.children).length - 1)];
            if ((i_3489662412 < existingCount_3489662406)) {
            Temporary8 = element_3489662309[element_3489662309_Idx].children[chckIndx(i_3489662412, 0, (element_3489662309[element_3489662309_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3489662414 = [Temporary8];
            renderWidget_3489662168(c_3489662413, renderer_3489662308, childElement_3489662414, 0, (forceRedraw_3489662310 || self_3489662307.fillBackground), frameIndex_3489662311, buffer_3489662312, buffer_3489662312_Idx);
            if (((existingCount_3489662406 <= i_3489662412) && !((childElement_3489662414[0] == null)))) {
            element_3489662309[element_3489662309_Idx].appendChild(childElement_3489662414[0]);
            }
            
            i_536872743 = addInt(i_536872743, 1);
            if (!(((self_3489662307.children).length == L_536872744))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3489662226(renderer_3489662308, "boundsStack");
    }
  };

  
}

function renderWidget_3489662161(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx) {
  
}

function renderWidget_3489662168(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx) {
    chckNilDisp(self_3489662162);
    if (isObj(self_3489662162.m_type, NTI2785017879)) {
    renderWidget_3489662484(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx);
    }
    else {
    if (isObj(self_3489662162.m_type, NTI2785017873)) {
    renderWidget_3489662427(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx);
    }
    else {
    if (isObj(self_3489662162.m_type, NTI2785017871)) {
    renderWidget_3489662306(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx);
    }
    else {
    if (isObj(self_3489662162.m_type, NTI2785017868)) {
    renderWidget_3489662161(self_3489662162, renderer_3489662163, element_3489662164, element_3489662164_Idx, forceRedraw_3489662165, frameIndex_3489662166, buffer_3489662167, buffer_3489662167_Idx);
    }
    }}}

  
}

function applyDomUpdates_3489662169(self_3489662170) {
    Label1: {
      var update_3489662193 = null;
      var i_536872748 = 0;
      var L_536872749 = (self_3489662170.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872748 < L_536872749)) break Label3;
            update_3489662193 = self_3489662170.domUpdates[chckIndx(i_536872748, 0, (self_3489662170.domUpdates).length - 1)];
            update_3489662193();
            i_536872748 = addInt(i_536872748, 1);
            if (!(((self_3489662170.domUpdates).length == L_536872749))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3489662170.domUpdates.length < 0) { for (var i = self_3489662170.domUpdates.length ; i < 0 ; ++i) self_3489662170.domUpdates.push(null); }
               else { self_3489662170.domUpdates.length = 0; };

  
}

function render_3489662218(self_3489662219, widget_3489662220, frameIndex_3489662221) {
    var Temporary2;

    self_3489662219.boundsStack.push(rect_2147483672(vec2_2164261686(), size_2768240760(self_3489662219)));;
    try {
    var buffer_3489662238 = [[]];
    if ((0 < (self_3489662219.content.children).length)) {
    Temporary2 = self_3489662219.content.children[chckIndx(0, 0, (self_3489662219.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3489662243 = [Temporary2];
    var wasNil_3489662247 = (element_3489662243[0] == null);
    renderWidget_3489662168(widget_3489662220, self_3489662219, element_3489662243, 0, self_3489662219.redrawEverything, frameIndex_3489662221, buffer_3489662238, 0);
    applyDomUpdates_3489662169(self_3489662219);
    if ((!((element_3489662243[0] == null)) && wasNil_3489662247)) {
    self_3489662219.content.appendChild(element_3489662243[0]);
    }
    
    self_3489662219.redrawEverything = false;
    } finally {
    var _ = pop_3489662226(self_3489662219, "boundsStack");
    }

  
}

function render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750) {
  
}

function render_2768240751(self_2768240748, widget_2768240749, frameIndex_2768240750) {
    chckNilDisp(self_2768240748);
    if (isObj(self_2768240748.m_type, NTI3489660939)) {
    render_3489662218(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    else {
    if (isObj(self_2768240748.m_type, NTI2768240644)) {
    render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    }

  
}

function sizeChanged_2768240752(self_2768240753) {
  var result_2768240754 = false;

  return result_2768240754;

}

function sizeChanged_2768240755(self_2768240753) {
  var result_2768240756 = false;

  BeforeRet: {
    result_2768240756 = sizeChanged_2768240752(self_2768240753);
    break BeforeRet;
  };

  return result_2768240756;

}

function initDoublyLinkedList_3489661080() {
  var result_3489661082 = ({head: null, tail: null});

  return result_3489661082;

}

function initTable_3489661086(initialSize_3489661089) {
  var result_3489661090 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3489661092 = slotsNeeded_1308622891(chckRange(initialSize_3489661089, 0, 2147483647));
    result_3489661090.counter = 0;
    result_3489661090.data = new Array(chckRange(correctSizeHEX60gensym3_3489661092, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3489661092, 0, 2147483647) ; ++i) { result_3489661090.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3489661090;

}

function correctSize_3053453333(cap_3053453334) {
  var result_3053453335 = 0;

    result_3053453335 = cap_3053453334;

  return result_3053453335;

}

function newLruCache_3489661070(capacity_3489661073, recordRemovedKeys_3489661074) {
  var result_3489661075 = null;

    result_3489661075 = {capacity: capacity_3489661073, list: initDoublyLinkedList_3489661080(), table: initTable_3489661086(correctSize_3053453333(capacity_3489661073)), recordRemovedKeys: recordRemovedKeys_3489661074, removedKeys: ({data: [], counter: 0})};

  return result_3489661075;

}

function getModifiers_3489661010(self_3489661011) {
  var result_3489661012 = {};

    if (self_3489661011.altKey) {
    result_3489661012[2] = true;
    }
    
    if (self_3489661011.shiftKey) {
    result_3489661012[1] = true;
    }
    
    if (self_3489661011.ctrlKey) {
    result_3489661012[0] = true;
    }
    

  return result_3489661012;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3489661004(key_3489661005, code_3489661006, keyCode_3489661007) {
  var result_3489662157 = 0;

    switch (key_3489661005) {
    case "Enter":
      result_3489662157 = -1;
      break;
    case "Escape":
      result_3489662157 = -2;
      break;
    case "Backspace":
      result_3489662157 = -3;
      break;
    case " ":
      result_3489662157 = -4;
      break;
    case "Delete":
      result_3489662157 = -5;
      break;
    case "Tab":
      result_3489662157 = -6;
      break;
    case "ArrowLeft":
      result_3489662157 = -7;
      break;
    case "ArrowRight":
      result_3489662157 = -8;
      break;
    case "ArrowUp":
      result_3489662157 = -9;
      break;
    case "ArrowDown":
      result_3489662157 = -10;
      break;
    case "Home":
      result_3489662157 = -11;
      break;
    case "End":
      result_3489662157 = -12;
      break;
    case "PageUp":
      result_3489662157 = -13;
      break;
    case "PageDown":
      result_3489662157 = -14;
      break;
    default: 
      if (      keyCode_3489661007 >= 112 && keyCode_3489661007 <= 123      ){        result_3489662157 = addInt(-20, subInt(keyCode_3489661007, 112));
        }
      else{
        if ((((key_3489661005) == null ? 0 : (key_3489661005).length) == 1)) {
        result_3489662157 = runeAt_788536179(cstrToNimstr(key_3489661005), 0);
        }
        
        }
      break;
    }

  return result_3489662157;

}

function invoke_3489661254(event_3489661256, arg_3489661257) {
    Label1: {
      var h_3489661280 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872758 = 0;
      var L_536872759 = (event_3489661256.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872758 < L_536872759)) break Label3;
            h_3489661280 = event_3489661256.handlers[chckIndx(i_536872758, 0, (event_3489661256.handlers).length - 1)];
            h_3489661280.Field1(arg_3489661257);
            i_536872758 = addInt(i_536872758, 1);
            if (!(((event_3489661256.handlers).length == L_536872759))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3489661025(self_3489661026) {
  var result_3489661027 = {};

    if (self_3489661026.altKey) {
    result_3489661027[2] = true;
    }
    
    if (self_3489661026.shiftKey) {
    result_3489661027[1] = true;
    }
    
    if (self_3489661026.ctrlKey) {
    result_3489661027[0] = true;
    }
    

  return result_3489661027;

}

function invoke_3489661597(event_3489661599, arg_3489661600) {
    Label1: {
      var h_3489661623 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872763 = 0;
      var L_536872764 = (event_3489661599.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872763 < L_536872764)) break Label3;
            h_3489661623 = event_3489661599.handlers[chckIndx(i_536872763, 0, (event_3489661599.handlers).length - 1)];
            h_3489661623.Field1(arg_3489661600);
            i_536872763 = addInt(i_536872763, 1);
            if (!(((event_3489661599.handlers).length == L_536872764))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3489661434(aHEX60gensym74_3489661436, bHEX60gensym74_3489661437) {
  var result_3489661438 = ({x: 0.0, y: 0.0});

    result_3489661438 = nimCopy(result_3489661438, {x: (aHEX60gensym74_3489661436.x * bHEX60gensym74_3489661437), y: (aHEX60gensym74_3489661436.y * bHEX60gensym74_3489661437)}, NTI2164261152);

  return result_3489661438;

}

function getMouseButton_3489661056(event_3489661057) {
    var Temporary1;

  var result_3489661058 = 0;

    if (    event_3489661057.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3489661057.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3489661057.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3489661058 = Temporary1;

  return result_3489661058;

}

function invoke_3489661693(event_3489661695, arg_3489661696) {
    Label1: {
      var h_3489661719 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872768 = 0;
      var L_536872769 = (event_3489661695.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872768 < L_536872769)) break Label3;
            h_3489661719 = event_3489661695.handlers[chckIndx(i_536872768, 0, (event_3489661695.handlers).length - 1)];
            h_3489661719.Field1(arg_3489661696);
            i_536872768 = addInt(i_536872768, 1);
            if (!(((event_3489661695.handlers).length == L_536872769))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3489661802(event_3489661804, arg_3489661805) {
    Label1: {
      var h_3489661828 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872773 = 0;
      var L_536872774 = (event_3489661804.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872773 < L_536872774)) break Label3;
            h_3489661828 = event_3489661804.handlers[chckIndx(i_536872773, 0, (event_3489661804.handlers).length - 1)];
            h_3489661828.Field1(arg_3489661805);
            i_536872773 = addInt(i_536872773, 1);
            if (!(((event_3489661804.handlers).length == L_536872774))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3489661040(event_3489661041) {
  var result_3489661042 = {};

    var buttons_3489661043 = event_3489661041.buttons;
    if (!(((buttons_3489661043 & 1) == 0))) {
    result_3489661042[0] = true;
    }
    
    if (!(((buttons_3489661043 & 2) == 0))) {
    result_3489661042[2] = true;
    }
    
    if (!(((buttons_3489661043 & 4) == 0))) {
    result_3489661042[1] = true;
    }
    

  return result_3489661042;

}

function invoke_3489661959(event_3489661961, arg_3489661962) {
    Label1: {
      var h_3489661985 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872778 = 0;
      var L_536872779 = (event_3489661961.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872778 < L_536872779)) break Label3;
            h_3489661985 = event_3489661961.handlers[chckIndx(i_536872778, 0, (event_3489661961.handlers).length - 1)];
            h_3489661985.Field1(arg_3489661962);
            i_536872778 = addInt(i_536872778, 1);
            if (!(((event_3489661961.handlers).length == L_536872779))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function updateFontSettings_3489661008(self_3489661009) {
    var d_3489662121 = document.createElement("div");
    d_3489662121.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3489662121.innerHTML = toJSStr(nsuRepeatStr([35], 100));
    self_3489661009.content.appendChild(d_3489662121);
    self_3489661009.mLineHeight = d_3489662121.clientHeight;
    self_3489661009.mCharWidth = (d_3489662121.clientWidth / 100.0);
    self_3489661009.content.removeChild(d_3489662121);

  
}

function init_3489661068(self_3489661069) {
    
function HEX3Aanonymous_3489661133(text_3489661134) {
      var result_3489661135 = ({x: 0.0, y: 0.0});

        result_3489661135.x = ((text_3489661134).length * self_3489661069.mCharWidth);
        result_3489661135.y = totalLineHeight_2768240810(self_3489661069);

      return result_3489661135;

    }
    
function HEX3Aanonymous_3489661145(e_3489661146) {
        var oldEvent_3489661147 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661146;
        try {
        invoke_3489661170(self_3489661069.onResized, true);
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661147;
        }

      
    }
    
function HEX3Aanonymous_3489661226(e_3489661227) {
        var oldEvent_3489661228 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661227;
        try {
        var ke_3489661229 = e_3489661227;
        var modifiers_3489661230 = getModifiers_3489661010(ke_3489661229);
        var input_3489661231 = toInput_3489661004(ke_3489661229.key, ke_3489661229.code, ke_3489661229.keyCode);
        invoke_3489661254(self_3489661069.onKeyPress, {Field0: input_3489661231, Field1: nimCopy(null, modifiers_3489661230, NTI2013265950)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661228;
        }

      
    }
    
function HEX3Aanonymous_3489661310(e_3489661311) {
        var oldEvent_3489661312 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661311;
        try {
        var we_3489661313 = e_3489661311;
        var modifiers_3489661314 = getModifiers_3489661025(we_3489661313);
        invoke_3489661597(self_3489661069.onScroll, {Field0: vec2_2164261725(we_3489661313.clientX, we_3489661313.clientY), Field1: HEX2A_3489661434(vec2_2164261725(we_3489661313.deltaX, -(we_3489661313.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3489661314, NTI2013265950)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661312;
        }

      
    }
    
function HEX3Aanonymous_3489661662(e_3489661663) {
        var oldEvent_3489661664 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661663;
        try {
        var me_3489661665 = e_3489661663;
        var modifiers_3489661666 = getModifiers_3489661025(me_3489661665);
        var mouseButton_3489661667 = getMouseButton_3489661056(me_3489661665);
        var currentTargetRect_3489661668 = me_3489661665.currentTarget.getBoundingClientRect();
        var x_3489661669 = (me_3489661665.pageX - currentTargetRect_3489661668.x);
        var y_3489661670 = (me_3489661665.pageY - currentTargetRect_3489661668.y);
        invoke_3489661693(self_3489661069.onMousePress, {Field0: mouseButton_3489661667, Field1: nimCopy(null, modifiers_3489661666, NTI2013265950), Field2: vec2_2164261725(x_3489661669, y_3489661670)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661664;
        }

      
    }
    
function HEX3Aanonymous_3489661740(e_3489661741) {
        var oldEvent_3489661742 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661741;
        try {
        var me_3489661743 = e_3489661741;
        var modifiers_3489661744 = getModifiers_3489661025(me_3489661743);
        var mouseButton_3489661745 = getMouseButton_3489661056(me_3489661743);
        var currentTargetRect_3489661746 = me_3489661743.currentTarget.getBoundingClientRect();
        var x_3489661747 = (me_3489661743.pageX - currentTargetRect_3489661746.x);
        var y_3489661748 = (me_3489661743.pageY - currentTargetRect_3489661746.y);
        invoke_3489661693(self_3489661069.onMouseRelease, {Field0: mouseButton_3489661745, Field1: nimCopy(null, modifiers_3489661744, NTI2013265950), Field2: vec2_2164261725(x_3489661747, y_3489661748)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661742;
        }

      
    }
    
function HEX3Aanonymous_3489661775(e_3489661776) {
        var oldEvent_3489661777 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661776;
        try {
        var me_3489661778 = e_3489661776;
        var modifiers_3489661779 = getModifiers_3489661025(me_3489661778);
        invoke_3489661802(self_3489661069.onMouseMove, {Field0: vec2_2164261725(me_3489661778.clientX, me_3489661778.clientY), Field1: vec2_2164261725(me_3489661778.movementX, me_3489661778.movementY), Field2: nimCopy(null, modifiers_3489661779, NTI2013265950), Field3: getMouseButtons_3489661040(me_3489661778)});
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661777;
        }

      
    }
    
function HEX3Aanonymous_3489661861(e_3489661862) {
        var oldEvent_3489661863 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661862;
        try {
        var de_3489661864 = e_3489661862;
        de_3489661864.preventDefault();
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661863;
        }

      
    }
    
function HEX3Aanonymous_3489661874(e_3489661875) {
                
function HEX3Aanonymous_3489661922(f_3489661923) {
                    
function HEX3Aanonymous_3489661935(e_3489661936) {
                        invoke_3489661959(self_3489661069.onDropFile, {Field0: cstrToNimstr(f_3489661923.name), Field1: cstrToNimstr((fileReader_3489661925.result || ''))});

                      
                    }

                    var fileReader_3489661925 = new FileReader();
                    fileReader_3489661925.readAsText(f_3489661923, "UTF-8");
                    fileReader_3489661925.onload = HEX3Aanonymous_3489661935;

                  
                }

        var oldEvent_3489661876 = self_3489661069.currentEvent;
        self_3489661069.currentEvent = e_3489661875;
        try {
        var de_3489661877 = e_3489661875;
        de_3489661877.preventDefault();
        console.log(de_3489661877.dataTransfer);;
        Label2: {
          var f_3489661903 = null;
          var i_536872753 = 0;
          var L_536872754 = (de_3489661877.dataTransfer.files).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872753 < L_536872754)) break Label4;
                f_3489661903 = de_3489661877.dataTransfer.files[chckIndx(i_536872753, 0, (de_3489661877.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3489661922(f_3489661903);
                i_536872753 = addInt(i_536872753, 1);
                if (!(((de_3489661877.dataTransfer.files).length == L_536872754))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        } finally {
        self_3489661069.currentEvent = oldEvent_3489661876;
        }

      
    }

    self_3489661069.mFontSize = 18.0;
    self_3489661069.mLineHeight = 20.0;
    self_3489661069.mLineDistance = 2.0;
    self_3489661069.mCharWidth = 18.0;
    self_3489661069.escapedText = newLruCache_3489661070(1000, false);
    self_3489661069.layoutOptions.getTextBounds = HEX3Aanonymous_3489661133;
    window.addEventListener("resize", HEX3Aanonymous_3489661145, false);
    self_3489661069.content = document.getElementById("view");
    self_3489661069.content.addEventListener("keydown", HEX3Aanonymous_3489661226, false);
    self_3489661069.content.addEventListener("wheel", HEX3Aanonymous_3489661310, {passive: true, capture: false, once: false});
    self_3489661069.content.addEventListener("mousedown", HEX3Aanonymous_3489661662, false);
    self_3489661069.content.addEventListener("mouseup", HEX3Aanonymous_3489661740, false);
    self_3489661069.content.addEventListener("mousemove", HEX3Aanonymous_3489661775, false);
    self_3489661069.content.addEventListener("dragover", HEX3Aanonymous_3489661861, false);
    self_3489661069.content.addEventListener("drop", HEX3Aanonymous_3489661874, false);
    updateFontSettings_3489661008(self_3489661069);
    self_3489661069.content.focus();

  
}

function init_2768240762(self_2768240763) {
  
}

function init_2768240764(self_2768240763) {
    chckNilDisp(self_2768240763);
    if (isObj(self_2768240763.m_type, NTI3489660939)) {
    init_3489661068(self_2768240763);
    }
    else {
    if (isObj(self_2768240763.m_type, NTI2768240644)) {
    init_2768240762(self_2768240763);
    }
    }

  
}

function deinit_3489662098(self_3489662099) {
  
}

function deinit_2768240765(self_2768240766) {
  
}

function deinit_2768240767(self_2768240766) {
    chckNilDisp(self_2768240766);
    if (isObj(self_2768240766.m_type, NTI3489660939)) {
    deinit_3489662098(self_2768240766);
    }
    else {
    if (isObj(self_2768240766.m_type, NTI2768240644)) {
    deinit_2768240765(self_2768240766);
    }
    }

  
}

function processEvents_3489662158(self_3489662159) {
  var result_3489662160 = 0;

    result_3489662160 = 0;

  return result_3489662160;

}

function processEvents_2768240768(self_2768240769) {
  var result_2768240770 = 0;

  return result_2768240770;

}

function processEvents_2768240771(self_2768240769) {
  var result_2768240772 = 0;

  BeforeRet: {
    chckNilDisp(self_2768240769);
    if (isObj(self_2768240769.m_type, NTI3489660939)) {
    result_2768240772 = processEvents_3489662158(self_2768240769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240769.m_type, NTI2768240644)) {
    result_2768240772 = processEvents_2768240768(self_2768240769);
    break BeforeRet;
    }
    }
  };

  return result_2768240772;

}

function fontSizeHEX3D_3489662131(self_3489662132, fontSize_3489662133) {
    if (!((self_3489662132.mFontSize == fontSize_3489662133))) {
    self_3489662132.mFontSize = fontSize_3489662133;
    self_3489662132.content.style.fontSize = toJSStr(HEX24_33557336(fontSize_3489662133));
    self_3489662132.redrawEverything = true;
    updateFontSettings_3489661008(self_3489662132);
    }
    

  
}

function fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775) {
  
}

function fontSizeHEX3D_2768240776(self_2768240774, fontSize_2768240775) {
    chckNilDisp(self_2768240774);
    if (isObj(self_2768240774.m_type, NTI3489660939)) {
    fontSizeHEX3D_3489662131(self_2768240774, fontSize_2768240775);
    }
    else {
    if (isObj(self_2768240774.m_type, NTI2768240644)) {
    fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775);
    }
    }

  
}

function lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779) {
  
}

function lineDistanceHEX3D_2768240780(self_2768240778, lineDistance_2768240779) {
    lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779);

  
}

function fontSize_3489662137(self_3489662138) {
  var result_3489662139 = 0.0;

    result_3489662139 = self_3489662138.mFontSize;

  return result_3489662139;

}

function fontSize_2768240781(self_2768240782) {
  var result_2768240783 = 0.0;

  return result_2768240783;

}

function fontSize_2768240784(self_2768240782) {
  var result_2768240785 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240782);
    if (isObj(self_2768240782.m_type, NTI3489660939)) {
    result_2768240785 = fontSize_3489662137(self_2768240782);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240782.m_type, NTI2768240644)) {
    result_2768240785 = fontSize_2768240781(self_2768240782);
    break BeforeRet;
    }
    }
  };

  return result_2768240785;

}

function lineDistance_3489662140(self_3489662141) {
  var result_3489662142 = 0.0;

    result_3489662142 = self_3489662141.mLineDistance;

  return result_3489662142;

}

function lineDistance_2768240786(self_2768240787) {
  var result_2768240788 = 0.0;

  return result_2768240788;

}

function lineDistance_2768240789(self_2768240787) {
  var result_2768240790 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240787);
    if (isObj(self_2768240787.m_type, NTI3489660939)) {
    result_2768240790 = lineDistance_3489662140(self_2768240787);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240787.m_type, NTI2768240644)) {
    result_2768240790 = lineDistance_2768240786(self_2768240787);
    break BeforeRet;
    }
    }
  };

  return result_2768240790;

}

function lineHeight_3489662143(self_3489662144) {
  var result_3489662145 = 0.0;

    result_3489662145 = self_3489662144.mLineHeight;

  return result_3489662145;

}

function lineHeight_2768240791(self_2768240792) {
  var result_2768240793 = 0.0;

  return result_2768240793;

}

function lineHeight_2768240794(self_2768240792) {
  var result_2768240795 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240792);
    if (isObj(self_2768240792.m_type, NTI3489660939)) {
    result_2768240795 = lineHeight_3489662143(self_2768240792);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240792.m_type, NTI2768240644)) {
    result_2768240795 = lineHeight_2768240791(self_2768240792);
    break BeforeRet;
    }
    }
  };

  return result_2768240795;

}

function measureText_3489662149(self_3489662150, text_3489662151) {
  var result_3489662152 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_3489662152 = nimCopy(result_3489662152, vec2_2164261725(((text_3489662151).length * self_3489662150.mCharWidth), totalLineHeight_2768240810(self_3489662150)), NTI2164261152);
    break BeforeRet;
  };

  return result_3489662152;

}

function measureText_2768240801(self_2768240802, text_2768240803) {
  var result_2768240804 = ({x: 0.0, y: 0.0});

  return result_2768240804;

}

function measureText_2768240805(self_2768240802, text_2768240803) {
  var result_2768240806 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240802);
    if (isObj(self_2768240802.m_type, NTI3489660939)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_3489662149(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240802.m_type, NTI2768240644)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_2768240801(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240806;

}

function preventDefault_3489662114(self_3489662115) {
  BeforeRet: {
    if ((self_3489662115.currentEvent == null)) {
    break BeforeRet;
    }
    
    self_3489662115.currentEvent.preventDefault();
  };

  
}

function preventDefault_2768240807(self_2768240808) {
  
}

function preventDefault_2768240809(self_2768240808) {
    chckNilDisp(self_2768240808);
    if (isObj(self_2768240808.m_type, NTI3489660939)) {
    preventDefault_3489662114(self_2768240808);
    }
    else {
    if (isObj(self_2768240808.m_type, NTI2768240644)) {
    preventDefault_2768240807(self_2768240808);
    }
    }

  
}

function mustRehash_1291846256(t_1291846258) {
  var result_1291846259 = false;

    if (!((t_1291846258.counter < (t_1291846258.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846259 = ((mulInt((t_1291846258.data).length, 2) < mulInt(t_1291846258.counter, 3)) || (subInt((t_1291846258.data).length, t_1291846258.counter) < 4));

  return result_1291846259;

}

function rawInsert_1291846705(t_1291846709, data_1291846710, data_1291846710_Idx, key_1291846711, val_1291846712, hc_1291846713, h_1291846714) {
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field1 = key_1291846711;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field2 = val_1291846712;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field0 = hc_1291846713;

  
}

function enlarge_1291846411(t_1291846414) {
    var n_1291846417 = [];
    n_1291846417 = new Array(chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647) ; ++i) { n_1291846417[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846414.data; t_1291846414.data = n_1291846417; n_1291846417 = Temporary1;    Label2: {
      var i_1291846481 = 0;
      var colontmp__536872784 = 0;
      colontmp__536872784 = (n_1291846417).length - 1;
      var res_536872785 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872785 <= colontmp__536872784)) break Label4;
            i_1291846481 = res_536872785;
            var eh_1291846535 = n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846535)) {
            var j_1291846539 = (eh_1291846535 & (t_1291846414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846414.data[chckIndx(j_1291846539, 0, (t_1291846414.data).length - 1)].Field0)) break Label6;
                  j_1291846539 = nextTry_1308622883(j_1291846539, (t_1291846414.data).length - 1);
                }
            };
            rawInsert_1291846705(t_1291846414, t_1291846414, "data", n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field1, n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field2, eh_1291846535, j_1291846539);
            }
            
            res_536872785 = addInt(res_536872785, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846874(t_1291846877, key_1291846878, hc_1291846879) {
  var result_1291846880 = 0;

  BeforeRet: {
    if (((t_1291846877.data).length == 0)) {
    result_1291846880 = -1;
    break BeforeRet;
    }
    
    var h_1291846931 = (hc_1291846879 & (t_1291846877.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0)) break Label2;
          if (((t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0 == hc_1291846879) && (t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field1 == key_1291846878))) {
          result_1291846880 = h_1291846931;
          break BeforeRet;
          }
          
          h_1291846931 = nextTry_1308622883(h_1291846931, (t_1291846877.data).length - 1);
        }
    };
    result_1291846880 = subInt(-1, h_1291846931);
  };

  return result_1291846880;

}

function HEX5BHEX5DHEX3D_1291845847(t_1291845850, key_1291845851, val_1291845852) {
    if (((t_1291845850.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845902 = slotsNeeded_1308622891(32);
    t_1291845850.counter = 0;
    t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845907 = [0];
    var index_1291846149 = rawGet_1291845908(t_1291845850, key_1291845851, hc_1291845907, 0);
    if ((0 <= index_1291846149)) {
    t_1291845850.data[chckIndx(index_1291846149, 0, (t_1291845850.data).length - 1)].Field2 = val_1291845852;
    }
    else {
      if (((t_1291845850.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846251 = slotsNeeded_1308622891(32);
      t_1291845850.counter = 0;
      t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846256(t_1291845850)) {
      enlarge_1291846411(t_1291845850);
      index_1291846149 = rawGetKnownHC_1291846874(t_1291845850, key_1291845851, hc_1291845907[0]);
      }
      
      index_1291846149 = subInt(-1, index_1291846149);
      rawInsert_1291846705(t_1291845850, t_1291845850, "data", key_1291845851, val_1291845852, hc_1291845907[0], index_1291846149);
      t_1291845850.counter = addInt(t_1291845850.counter, 1);
    }
    

  
}

function registerEditor_1291845804(self_1291845805, editor_1291845806) {
    HEX5BHEX5DHEX3D_1291845847(self_1291845805.editors, editor_1291845806.id, editor_1291845806);
    invoke_1291847134(self_1291845805.onEditorRegistered, editor_1291845806);

  
}

function handleInput_3254789284(self_3254789285, input_3254789286) {
  var result_3254789287 = 0;

  BeforeRet: {
    var fmtRes_3254789292 = [mnewString(0)];
    fmtRes_3254789292[0].push.apply(fmtRes_3254789292[0], [91,109,111,100,101,108,101,100,105,116,111,114,93,58,32,72,97,110,100,108,101,32,105,110,112,117,116,32,39]);;
    formatValue_721420459(fmtRes_3254789292, 0, input_3254789286, []);
    fmtRes_3254789292[0].push.apply(fmtRes_3254789292[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3254789292[0], NTI33554449)]);
    if (insertTextAtCursor_3254780162(self_3254789285, input_3254789286)) {
    result_3254789287 = 3;
    break BeforeRet;
    }
    
    result_3254789287 = 1;
    break BeforeRet;
  };

  return result_3254789287;

}

function injectDependencies_3254790549(self_3254790550, ed_3254790551) {
      
function HEX3Aanonymous_3254790571(actionHEX60gensym132HEX60gensym133_3254790572, argHEX60gensym132HEX60gensym133_3254790573) {
        var result_3254790574 = 0;

        BeforeRet: {
          if (handlerHEX60gensym132_3254790559.config.handleActions) {
          var action_3254790575 = nimCopy(null, actionHEX60gensym132HEX60gensym133_3254790572, NTI33554449);
          var arg_3254790576 = nimCopy(null, argHEX60gensym132HEX60gensym133_3254790573, NTI33554449);
          var responseHEX60gensym132HEX60gensym133_3254790577 = handleAction_3254780151(self_3254790550, action_3254790575, arg_3254790576);
          if (handlerHEX60gensym132_3254790559.config.consumeAllActions) {
          result_3254790574 = 3;
          break BeforeRet;
          }
          
          result_3254790574 = responseHEX60gensym132HEX60gensym133_3254790577;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym132_3254790559.config.consumeAllActions) {
          result_3254790574 = 3;
          break BeforeRet;
          }
          else {
            result_3254790574 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3254790574;

      }
      
function HEX3Aanonymous_3254790579(inputHEX60gensym132HEX60gensym134_3254790580) {
        var result_3254790581 = 0;

        BeforeRet: {
          if (handlerHEX60gensym132_3254790559.config.handleInputs) {
          var input_3254790582 = nimCopy(null, inputHEX60gensym132HEX60gensym134_3254790580, NTI33554449);
          result_3254790581 = handleInput_3254789284(self_3254790550, input_3254790582);
          break BeforeRet;
          }
          else {
            result_3254790581 = 1;
            break BeforeRet;
          }
          
        };

        return result_3254790581;

      }

    self_3254790550.editor = ed_3254790551;
    registerEditor_1291845804(self_3254790550.editor, self_3254790550);
    Label1: {
      var handlerHEX60gensym132_3254790559 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym132_3254790559.config = getEventHandlerConfig_1291849162(ed_3254790551, [101,100,105,116,111,114,46,109,111,100,101,108]);
      handlerHEX60gensym132_3254790559.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_3254790551, [101,100,105,116,111,114,46,109,111,100,101,108]));
      handlerHEX60gensym132_3254790559.handleAction = HEX3Aanonymous_3254790571;
      handlerHEX60gensym132_3254790559.handleInput = HEX3Aanonymous_3254790579;
    };
    self_3254790550.eventHandler = handlerHEX60gensym132_3254790559;

  
}

function handleInput_2969584845(self_2969584846, input_2969584847) {
  var result_2969584848 = 0;

  BeforeRet: {
    result_2969584848 = 1;
    break BeforeRet;
  };

  return result_2969584848;

}

function injectDependencies_2969585240(self_2969585241, ed_2969585242) {
      
function HEX3Aanonymous_2969585262(actionHEX60gensym1086HEX60gensym1087_2969585263, argHEX60gensym1086HEX60gensym1087_2969585264) {
        var result_2969585265 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1086_2969585250.config.handleActions) {
          var action_2969585266 = nimCopy(null, actionHEX60gensym1086HEX60gensym1087_2969585263, NTI33554449);
          var arg_2969585267 = nimCopy(null, argHEX60gensym1086HEX60gensym1087_2969585264, NTI33554449);
          var responseHEX60gensym1086HEX60gensym1087_2969585268 = handleAction_2969583792(self_2969585241, action_2969585266, arg_2969585267);
          if (handlerHEX60gensym1086_2969585250.config.consumeAllActions) {
          result_2969585265 = 3;
          break BeforeRet;
          }
          
          result_2969585265 = responseHEX60gensym1086HEX60gensym1087_2969585268;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1086_2969585250.config.consumeAllActions) {
          result_2969585265 = 3;
          break BeforeRet;
          }
          else {
            result_2969585265 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585265;

      }
      
function HEX3Aanonymous_2969585270(inputHEX60gensym1086HEX60gensym1088_2969585271) {
        var result_2969585272 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1086_2969585250.config.handleInputs) {
          var input_2969585273 = nimCopy(null, inputHEX60gensym1086HEX60gensym1088_2969585271, NTI33554449);
          result_2969585272 = handleInput_2969584845(self_2969585241, input_2969585273);
          break BeforeRet;
          }
          else {
            result_2969585272 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585272;

      }
      
function HEX3Aanonymous_2969585293(actionHEX60gensym1089HEX60gensym1090_2969585294, argHEX60gensym1089HEX60gensym1090_2969585295) {
        var result_2969585296 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1089_2969585281.config.handleActions) {
          var action_2969585297 = nimCopy(null, actionHEX60gensym1089HEX60gensym1090_2969585294, NTI33554449);
          var arg_2969585298 = nimCopy(null, argHEX60gensym1089HEX60gensym1090_2969585295, NTI33554449);
          var responseHEX60gensym1089HEX60gensym1090_2969585299 = handleAction_2969583792(self_2969585241, action_2969585297, arg_2969585298);
          if (handlerHEX60gensym1089_2969585281.config.consumeAllActions) {
          result_2969585296 = 3;
          break BeforeRet;
          }
          
          result_2969585296 = responseHEX60gensym1089HEX60gensym1090_2969585299;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1089_2969585281.config.consumeAllActions) {
          result_2969585296 = 3;
          break BeforeRet;
          }
          else {
            result_2969585296 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585296;

      }
      
function HEX3Aanonymous_2969585301(inputHEX60gensym1089HEX60gensym1091_2969585302) {
        var result_2969585303 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1089_2969585281.config.handleInputs) {
          var input_2969585304 = nimCopy(null, inputHEX60gensym1089HEX60gensym1091_2969585302, NTI33554449);
          result_2969585303 = 1;
          break BeforeRet;
          }
          else {
            result_2969585303 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585303;

      }

    self_2969585241.editor = ed_2969585242;
    registerEditor_1291845804(self_2969585241.editor, self_2969585241);
    Label1: {
      var handlerHEX60gensym1086_2969585250 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1086_2969585250.config = getEventHandlerConfig_1291849162(ed_2969585242, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1086_2969585250.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585242, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1086_2969585250.handleAction = HEX3Aanonymous_2969585262;
      handlerHEX60gensym1086_2969585250.handleInput = HEX3Aanonymous_2969585270;
    };
    self_2969585241.eventHandler = handlerHEX60gensym1086_2969585250;
    Label2: {
      var handlerHEX60gensym1089_2969585281 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1089_2969585281.config = getEventHandlerConfig_1291849162(ed_2969585242, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1089_2969585281.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585242, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1089_2969585281.handleAction = HEX3Aanonymous_2969585293;
      handlerHEX60gensym1089_2969585281.handleInput = HEX3Aanonymous_2969585301;
    };
    self_2969585241.textEditEventHandler = handlerHEX60gensym1089_2969585281;

  
}

function injectDependencies_2818593925(self_2818593926, ed_2818593927) {
      
function HEX3Aanonymous_2818593948(actionHEX60gensym1031HEX60gensym1032_2818593949, argHEX60gensym1031HEX60gensym1032_2818593950) {
        var result_2818593951 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593936.config.handleActions) {
          var action_2818593952 = nimCopy(null, actionHEX60gensym1031HEX60gensym1032_2818593949, NTI33554449);
          var arg_2818593953 = nimCopy(null, argHEX60gensym1031HEX60gensym1032_2818593950, NTI33554449);
          var responseHEX60gensym1031HEX60gensym1032_2818593954 = handleAction_2818572655(self_2818593926, action_2818593952, arg_2818593953);
          if (handlerHEX60gensym1031_2818593936.config.consumeAllActions) {
          result_2818593951 = 3;
          break BeforeRet;
          }
          
          result_2818593951 = responseHEX60gensym1031HEX60gensym1032_2818593954;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1031_2818593936.config.consumeAllActions) {
          result_2818593951 = 3;
          break BeforeRet;
          }
          else {
            result_2818593951 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593951;

      }
      
function HEX3Aanonymous_2818593956(inputHEX60gensym1031HEX60gensym1033_2818593957) {
        var result_2818593958 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593936.config.handleInputs) {
          var input_2818593959 = nimCopy(null, inputHEX60gensym1031HEX60gensym1033_2818593957, NTI33554449);
          result_2818593958 = handleInput_2818572663(self_2818593926, input_2818593959);
          break BeforeRet;
          }
          else {
            result_2818593958 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593958;

      }
      
function HEX3Aanonymous_2818593979(actionHEX60gensym1034HEX60gensym1035_2818593980, argHEX60gensym1034HEX60gensym1035_2818593981) {
        var result_2818593982 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593967.config.handleActions) {
          var action_2818593983 = nimCopy(null, actionHEX60gensym1034HEX60gensym1035_2818593980, NTI33554449);
          var arg_2818593984 = nimCopy(null, argHEX60gensym1034HEX60gensym1035_2818593981, NTI33554449);
          var responseHEX60gensym1034HEX60gensym1035_2818593985 = handleAction_2818572655(self_2818593926, action_2818593983, arg_2818593984);
          if (handlerHEX60gensym1034_2818593967.config.consumeAllActions) {
          result_2818593982 = 3;
          break BeforeRet;
          }
          
          result_2818593982 = responseHEX60gensym1034HEX60gensym1035_2818593985;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1034_2818593967.config.consumeAllActions) {
          result_2818593982 = 3;
          break BeforeRet;
          }
          else {
            result_2818593982 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593982;

      }
      
function HEX3Aanonymous_2818593987(inputHEX60gensym1034HEX60gensym1036_2818593988) {
        var result_2818593989 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593967.config.handleInputs) {
          var input_2818593990 = nimCopy(null, inputHEX60gensym1034HEX60gensym1036_2818593988, NTI33554449);
          result_2818593989 = handleInput_2818572663(self_2818593926, input_2818593990);
          break BeforeRet;
          }
          else {
            result_2818593989 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593989;

      }

    self_2818593926.editor = ed_2818593927;
    registerEditor_1291845804(self_2818593926.editor, self_2818593926);
    var config_2818593928 = getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym1031_2818593936 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1031_2818593936.config = config_2818593928;
      handlerHEX60gensym1031_2818593936.dfaInternal = buildDFA_2113929279(config_2818593928);
      handlerHEX60gensym1031_2818593936.handleAction = HEX3Aanonymous_2818593948;
      handlerHEX60gensym1031_2818593936.handleInput = HEX3Aanonymous_2818593956;
    };
    self_2818593926.eventHandler = handlerHEX60gensym1031_2818593936;
    Label2: {
      var handlerHEX60gensym1034_2818593967 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1034_2818593967.config = getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1034_2818593967.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1034_2818593967.handleAction = HEX3Aanonymous_2818593979;
      handlerHEX60gensym1034_2818593967.handleInput = HEX3Aanonymous_2818593987;
    };
    self_2818593926.completionEventHandler = handlerHEX60gensym1034_2818593967;

  
}

function injectDependencies_1291847758(self_1291847759, ed_1291847760) {
  
}

function injectDependencies_1291847761(self_1291847759, ed_1291847760) {
    chckNilDisp(self_1291847759);
    if (isObj(self_1291847759.m_type, NTI3254779983)) {
    injectDependencies_3254790549(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2969568641)) {
    injectDependencies_2969585240(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2818572510)) {
    injectDependencies_2818593925(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2415919108)) {
    injectDependencies_1291847758(self_1291847759, ed_1291847760);
    }
    }}}

  
}

function getOrDefault_1291848310(t_1291848313, key_1291848314, default_1291848315) {
    var Temporary1;

  var result_1291848316 = 0.0;

    var hcHEX60gensym20_1291848319 = [0];
    var indexHEX60gensym20_1291848559 = rawGet_1291848320(t_1291848313, key_1291848314, hcHEX60gensym20_1291848319, 0);
    if ((0 <= indexHEX60gensym20_1291848559)) {
    Temporary1 = t_1291848313.data[chckIndx(indexHEX60gensym20_1291848559, 0, (t_1291848313.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848315;
    }
    
    result_1291848316 = Temporary1;

  return result_1291848316;

}

function value_2130706482(m_2130706483) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2130706484 = 0.0;

  BeforeRet: {
    switch (m_2130706483.kind) {
    case 0:
      var Temporary1 = m_2130706483;
      if (ConstSet335[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2130706435)); }
      result_2130706484 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2130706483;
      if (ConstSet336[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2130706435)); }
      result_2130706484 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2130706483;
      if (ConstSet337[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2130706435)); }
      result_2130706484 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2130706484;

}

function apply_2130706507(m_2130706508, a_2130706509, b_2130706510) {
  var result_2130706511 = 0.0;

  BeforeRet: {
    switch (m_2130706508.kind) {
    case 0:
      var v_2130706522 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + v_2130706522);
      break BeforeRet;
      break;
    case 1:
      var v_2130706523 = value_2130706482(m_2130706508);
      result_2130706511 = v_2130706523;
      break BeforeRet;
      break;
    case 2:
      var v_2130706524 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + (v_2130706524 * (b_2130706510 - a_2130706509)));
      break BeforeRet;
      break;
    }
  };

  return result_2130706511;

}

function splitV_2130706537(r_2130706538, x_2130706539) {
  var result_2130706542 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706542.Field0 = nimCopy(result_2130706542.Field0, r_2130706538, NTI2147483653);
    result_2130706542.Field1 = nimCopy(result_2130706542.Field1, r_2130706538, NTI2147483653);
    result_2130706542.Field0.w = (apply_2130706507(x_2130706539, r_2130706538.x, (r_2130706538.x + r_2130706538.w)) - r_2130706538.x);
    result_2130706542.Field1.x = (result_2130706542.Field0.x + result_2130706542.Field0.w);
    result_2130706542.Field1.w = (result_2130706542.Field1.w - result_2130706542.Field0.w);

  return result_2130706542;

}

function percent_2130706479(value_2130706480) {
  var result_2130706481 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2130706481 = nimCopy(result_2130706481, {kind: 2, per: value_2130706480, rel: 0.0, abs: 0.0}, NTI2130706436);
    break BeforeRet;
  };

  return result_2130706481;

}

function splitH_2130706525(r_2130706526, y_2130706527) {
  var result_2130706530 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706530.Field0 = nimCopy(result_2130706530.Field0, r_2130706526, NTI2147483653);
    result_2130706530.Field1 = nimCopy(result_2130706530.Field1, r_2130706526, NTI2147483653);
    result_2130706530.Field0.h = (apply_2130706507(y_2130706527, r_2130706526.y, (r_2130706526.y + r_2130706526.h)) - r_2130706526.y);
    result_2130706530.Field1.y = (result_2130706530.Field0.y + result_2130706530.Field0.h);
    result_2130706530.Field1.h = (result_2130706530.Field1.h - result_2130706530.Field0.h);

  return result_2130706530;

}

function layoutViews_1291848745(layout_1291848746, props_1291848747, bounds_1291848748, views_1291848749) {
            var Temporary4;
            var Temporary5;

  var result_1291848750 = [];

    var mainSplit_1291848823 = getOrDefault_1291848310(props_1291848747.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848750 = nimCopy(null, [], NTI1291847200);
    var rect_1291848828 = nimCopy(null, bounds_1291848748, NTI2147483653);
    Label1: {
      var i_1291848833 = 0;
      var i_536872793 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872793 < views_1291848749)) break Label3;
            i_1291848833 = i_536872793;
            if (((i_1291848833 == 0) && (1 < views_1291848749))) {
            Temporary4 = mainSplit_1291848823;
            }
            else {
            if ((i_1291848833 == subInt(views_1291848749, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848834 = Temporary4;
            if ((modInt(i_1291848833, 2) == 0)) {
            Temporary5 = splitV_2130706537(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            else {
            Temporary5 = splitH_2130706525(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            
            var colontmp__536872795 = nimCopy(null, Temporary5, NTI2130706495);
            var view_rect_1291848835 = nimCopy(null, colontmp__536872795["Field0"], NTI2147483653);
            var remaining_1291848836 = nimCopy(null, colontmp__536872795["Field1"], NTI2147483653);
            rect_1291848828 = nimCopy(rect_1291848828, remaining_1291848836, NTI2147483653);
            var Temporary6 = nimCopy(null, view_rect_1291848835, NTI2147483653);
            result_1291848750.push(Temporary6);;
            i_536872793 = addInt(i_536872793, 1);
          }
      };
    };

  return result_1291848750;

}

function layoutViews_1291848649(layout_1291848650, props_1291848651, bounds_1291848652, views_1291848653) {
            var Temporary4;

  var result_1291848654 = [];

    var mainSplit_1291848727 = getOrDefault_1291848310(props_1291848651.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848654 = nimCopy(null, [], NTI1291847200);
    var rect_1291848732 = nimCopy(null, bounds_1291848652, NTI2147483653);
    Label1: {
      var i_1291848737 = 0;
      var i_536872797 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872797 < views_1291848653)) break Label3;
            i_1291848737 = i_536872797;
            if (((i_1291848737 == 0) && (1 < views_1291848653))) {
            Temporary4 = mainSplit_1291848727;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848653, i_1291848737));
            }
            
            var ratio_1291848738 = Temporary4;
            var colontmp__536872799 = splitH_2130706525(rect_1291848732, percent_2130706479(ratio_1291848738));
            var view_rect_1291848739 = nimCopy(null, colontmp__536872799["Field0"], NTI2147483653);
            var remaining_1291848740 = nimCopy(null, colontmp__536872799["Field1"], NTI2147483653);
            rect_1291848732 = nimCopy(rect_1291848732, remaining_1291848740, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848739, NTI2147483653);
            result_1291848654.push(Temporary5);;
            i_536872797 = addInt(i_536872797, 1);
          }
      };
    };

  return result_1291848654;

}

function layoutViews_1291848238(layout_1291848239, props_1291848240, bounds_1291848241, views_1291848242) {
            var Temporary4;

  var result_1291848243 = [];

    var mainSplit_1291848613 = getOrDefault_1291848310(props_1291848240.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848243 = nimCopy(null, [], NTI1291847200);
    var rect_1291848618 = nimCopy(null, bounds_1291848241, NTI2147483653);
    Label1: {
      var i_1291848623 = 0;
      var i_536872801 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872801 < views_1291848242)) break Label3;
            i_1291848623 = i_536872801;
            if (((i_1291848623 == 0) && (1 < views_1291848242))) {
            Temporary4 = mainSplit_1291848613;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848242, i_1291848623));
            }
            
            var ratio_1291848624 = Temporary4;
            var colontmp__536872803 = splitV_2130706537(rect_1291848618, percent_2130706479(ratio_1291848624));
            var view_rect_1291848625 = nimCopy(null, colontmp__536872803["Field0"], NTI2147483653);
            var remaining_1291848626 = nimCopy(null, colontmp__536872803["Field1"], NTI2147483653);
            rect_1291848618 = nimCopy(rect_1291848618, remaining_1291848626, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848625, NTI2147483653);
            result_1291848243.push(Temporary5);;
            i_536872801 = addInt(i_536872801, 1);
          }
      };
    };

  return result_1291848243;

}

function layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848213 = [];

  BeforeRet: {
    result_1291848213 = nimCopy(null, [nimCopy(null, bounds_1291848211, NTI2147483653)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848213;

}

function layoutViews_1291848236(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848237 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848209);
    if (isObj(layout_1291848209.m_type, NTI1291845645)) {
    result_1291848237 = layoutViews_1291848745(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845644)) {
    result_1291848237 = layoutViews_1291848649(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845643)) {
    result_1291848237 = layoutViews_1291848238(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845642)) {
    result_1291848237 = layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848237;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850990(self_1291850991, other_1291850992) {
  var result_1291850993 = false;

  BeforeRet: {
    var other_1291850994 = other_1291850992;
    result_1291850993 = (!(eqStrings(self_1291850991.name, other_1291850994.name)) || !(eqStrings(self_1291850991.path, other_1291850994.path)));
    break BeforeRet;
  };

  return result_1291850993;

}

function changed_1291850976(self_1291850977, other_1291850978) {
  var result_1291850979 = false;

  BeforeRet: {
    var other_1291850980 = other_1291850978;
    result_1291850979 = !(eqStrings(self_1291850977.path, other_1291850980.path));
    break BeforeRet;
  };

  return result_1291850979;

}

function changed_2969582450(self_2969582451, other_2969582452) {
    var Temporary1;

  var result_2969582453 = false;

  BeforeRet: {
    var other_2969582454 = other_2969582452;
    var Temporary1 = other_2969582454.completion;
    if (ConstSet338[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
    result_2969582453 = !(HEX3DHEX3D_2046820626(self_2969582451.completion.id, Temporary1.id));
    break BeforeRet;
  };

  return result_2969582453;

}

function changed_3187671108(self_3187671109, other_3187671110) {
  var result_3187671111 = false;

  return result_3187671111;

}

function changed_3187671112(self_3187671109, other_3187671110) {
  var result_3187671113 = false;

  BeforeRet: {
    chckNilDisp(self_3187671109);
    if (isObj(self_3187671109.m_type, NTI1291848506)) {
    result_3187671113 = changed_1291850990(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI1291848508)) {
    result_3187671113 = changed_1291850976(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI2969577319)) {
    result_3187671113 = changed_2969582450(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI3187671048)) {
    result_3187671113 = changed_3187671108(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    }}}
  };

  return result_3187671113;

}

function addQuoted_3338666494(s_3338666496, s_3338666496_Idx, x_3338666497) {
    s_3338666496[s_3338666496_Idx].push.apply(s_3338666496[s_3338666496_Idx], reprEnum(x_3338666497, NTI2785017860));;

  
}

function HEX24_3338666465(x_3338666467) {
  var result_3338666468 = [[]];

    result_3338666468[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_3338666479 = 0;
    if ((0 < countHEX60gensym29_3338666479)) {
    result_3338666468[0].push.apply(result_3338666468[0], [44,32]);;
    }
    
    result_3338666468[0].push.apply(result_3338666468[0], [107,105,110,100]);;
    result_3338666468[0].push.apply(result_3338666468[0], [58,32]);;
    countHEX60gensym29_3338666479 += 1;
    addQuoted_3338666494(result_3338666468, 0, x_3338666467.kind);
    switch (x_3338666467.kind) {
    default: 
      break;
    }
    result_3338666468[0].push.apply(result_3338666468[0], [41]);;

  return result_3338666468[0];

}

function formatValue_3338666460(result_3338666462, result_3338666462_Idx, value_3338666463, specifier_3338666464) {
    formatValue_721420459(result_3338666462, result_3338666462_Idx, HEX24_3338666465(value_3338666463), specifier_3338666464);

  
}

function formatValue_3338666503(result_3338666505, result_3338666505_Idx, value_3338666506, specifier_3338666507) {
    formatValue_721420459(result_3338666505, result_3338666505_Idx, HEX24_3271567215(value_3338666506, false), specifier_3338666507);

  
}

function dump_3338666446(self_3338666447, recurse_3338666448) {
  var result_3338666449 = [];

    var fmtRes_3338666454 = [mnewString(0)];
    fmtRes_3338666454[0].push.apply(fmtRes_3338666454[0], [67,111,108,108,101,99,116,105,111,110,67,101,108,108,40,105,110,108,105,110,101,58,32]);;
    formatValue_2785018294(fmtRes_3338666454, 0, self_3338666447.inline, []);
    fmtRes_3338666454[0].push.apply(fmtRes_3338666454[0], [44,32,108,97,121,111,117,116,58,32]);;
    formatValue_3338666460(fmtRes_3338666454, 0, self_3338666447.layout, []);
    fmtRes_3338666454[0].push.apply(fmtRes_3338666454[0], [41,58,32]);;
    formatValue_3338666503(fmtRes_3338666454, 0, self_3338666447.node, []);
    result_3338666449 = nimCopy(null, fmtRes_3338666454[0], NTI33554449);
    if (recurse_3338666448) {
    result_3338666449.push.apply(result_3338666449, [10]);;
    if ((self_3338666447.filled || (self_3338666447.fillChildren == null))) {
    Label1: {
      var c_3338666532 = null;
      var i_536872805 = 0;
      var L_536872806 = (self_3338666447.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872805 < L_536872806)) break Label3;
            c_3338666532 = self_3338666447.children[chckIndx(i_536872805, 0, (self_3338666447.children).length - 1)];
            result_3338666449.push.apply(result_3338666449, nsuIndent(dump_3271567063(c_3338666532, false), 4, [32]));;
            result_3338666449.push.apply(result_3338666449, [10]);;
            i_536872805 = addInt(i_536872805, 1);
            if (!(((self_3338666447.children).length == L_536872806))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    result_3338666449.push.apply(result_3338666449, nsuIndent([46,46,46], 4, [32]));;
    }
    
    }
    

  return result_3338666449;

}

function dump_3338666547(self_3338666548, recurse_3338666549) {
  var result_3338666550 = [];

    var fmtRes_3338666555 = [mnewString(0)];
    fmtRes_3338666555[0].push.apply(fmtRes_3338666555[0], [80,114,111,112,101,114,116,121,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666555, 0, self_3338666548.node.id, []);
    fmtRes_3338666555[0].push.apply(fmtRes_3338666555[0], [44,32,112,114,111,112,101,114,116,121,58,32]);;
    formatValue_3036676344(fmtRes_3338666555, 0, self_3338666548.property, []);
    fmtRes_3338666555[0].push.apply(fmtRes_3338666555[0], [41]);;
    result_3338666550.push.apply(result_3338666550, fmtRes_3338666555[0]);;

  return result_3338666550;

}

function dump_3338666533(self_3338666534, recurse_3338666535) {
  var result_3338666536 = [];

    var fmtRes_3338666541 = [mnewString(0)];
    fmtRes_3338666541[0].push.apply(fmtRes_3338666541[0], [67,111,110,115,116,97,110,116,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666541, 0, self_3338666534.node.id, []);
    fmtRes_3338666541[0].push.apply(fmtRes_3338666541[0], [44,32,116,101,120,116,58,32]);;
    formatValue_721420459(fmtRes_3338666541, 0, self_3338666534.text, []);
    fmtRes_3338666541[0].push.apply(fmtRes_3338666541[0], [41]);;
    result_3338666536.push.apply(result_3338666536, fmtRes_3338666541[0]);;

  return result_3338666536;

}

function dump_3338666590(self_3338666591, recurse_3338666592) {
  var result_3338666593 = [];

    var fmtRes_3338666598 = [mnewString(0)];
    fmtRes_3338666598[0].push.apply(fmtRes_3338666598[0], [65,108,105,97,115,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666598, 0, self_3338666591.node.id, []);
    fmtRes_3338666598[0].push.apply(fmtRes_3338666598[0], [41]);;
    result_3338666593.push.apply(result_3338666593, fmtRes_3338666598[0]);;

  return result_3338666593;

}

function dump_3338666566(self_3338666567, recurse_3338666568) {
  var result_3338666569 = [];

    var fmtRes_3338666574 = [mnewString(0)];
    fmtRes_3338666574[0].push.apply(fmtRes_3338666574[0], [78,111,100,101,82,101,102,101,114,101,110,99,101,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3338666574, 0, self_3338666567.node.id, []);
    fmtRes_3338666574[0].push.apply(fmtRes_3338666574[0], [44,32,116,97,114,103,101,116,58,32]);;
    formatValue_3036676344(fmtRes_3338666574, 0, self_3338666567.reference, []);
    fmtRes_3338666574[0].push.apply(fmtRes_3338666574[0], [44,32,116,97,114,103,101,116,32,112,114,111,112,101,114,116,121,58,32]);;
    formatValue_3036676344(fmtRes_3338666574, 0, self_3338666567.property, []);
    fmtRes_3338666574[0].push.apply(fmtRes_3338666574[0], [41]);;
    result_3338666569.push.apply(result_3338666569, fmtRes_3338666574[0]);;

  return result_3338666569;

}

function dump_3271567059(self_3271567060, recurse_3271567061) {
  var result_3271567062 = [];

  return result_3271567062;

}

function dump_3271567063(self_3271567060, recurse_3271567061) {
  var result_3271567064 = [];

  BeforeRet: {
    chckNilDisp(self_3271567060);
    if (isObj(self_3271567060.m_type, NTI3338665992)) {
    result_3271567064 = dump_3338666446(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567060.m_type, NTI3338665995)) {
    result_3271567064 = dump_3338666547(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567060.m_type, NTI3338665994)) {
    result_3271567064 = dump_3338666533(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567060.m_type, NTI3338665997)) {
    result_3271567064 = dump_3338666590(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567060.m_type, NTI3338665996)) {
    result_3271567064 = dump_3338666566(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567060.m_type, NTI3271557156)) {
    result_3271567064 = dump_3271567059(self_3271567060, recurse_3271567061);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3271567064;

}

function HEX24_3338666232(x_3338666234) {
  var result_3338666235 = [[]];

    result_3338666235[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym10_3338666246 = 0;
    if ((0 < countHEX60gensym10_3338666246)) {
    result_3338666235[0].push.apply(result_3338666235[0], [44,32]);;
    }
    
    countHEX60gensym10_3338666246 += 1;
    addQuoted_855639425(result_3338666235, 0, x_3338666234["Field0"]);
    if ((0 < countHEX60gensym10_3338666246)) {
    result_3338666235[0].push.apply(result_3338666235[0], [44,32]);;
    }
    
    countHEX60gensym10_3338666246 += 1;
    addQuoted_855639425(result_3338666235, 0, x_3338666234["Field1"]);
    if ((countHEX60gensym10_3338666246 == 1)) {
    result_3338666235[0].push.apply(result_3338666235[0], [44]);;
    }
    
    result_3338666235[0].push.apply(result_3338666235[0], [41]);;

  return result_3338666235[0];

}

function clamp_3338666227(val_3338666229, bounds_3338666230) {
  var result_3338666231 = 0;

    if (!((bounds_3338666230.a <= bounds_3338666230.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_3338666232({Field0: bounds_3338666230.a, Field1: bounds_3338666230.b}) || []));
    }
    
    result_3338666231 = clamp_1660945119(val_3338666229, bounds_3338666230.a, bounds_3338666230.b);

  return result_3338666231;

}

function getChildAt_3338666213(self_3338666214, index_3338666215, clamp_3338666216) {
    var Temporary1;

  var result_3338666218 = ({val: null});

  BeforeRet: {
    if (clamp_3338666216) {
    Temporary1 = clamp_3338666227(index_3338666215, HEX2EHEX2E_805306418(0, (self_3338666214.children).length - 1));
    }
    else {
    Temporary1 = index_3338666215;
    }
    
    var index_3338666284 = Temporary1;
    if (((index_3338666284 < 0) || ((self_3338666214.children).length - 1 < index_3338666284))) {
    result_3338666218 = nimCopy(result_3338666218, none_3271567074(), NTI3271562483);
    break BeforeRet;
    }
    
    result_3338666218 = nimCopy(result_3338666218, some_3338666294(self_3338666214.children[chckIndx(index_3338666284, 0, (self_3338666214.children).length - 1)]), NTI3271562483);
    break BeforeRet;
  };

  return result_3338666218;

}

function getChildAt_3271567065(self_3271567066, index_3271567067, clamp_3271567068) {
  var result_3271567073 = ({val: null});

    result_3271567073 = nimCopy(result_3271567073, none_3271567074(), NTI3271562483);

  return result_3271567073;

}

function getChildAt_3271567090(self_3271567066, index_3271567067, clamp_3271567068) {
  var result_3271567091 = ({val: null});

  BeforeRet: {
    chckNilDisp(self_3271567066);
    if (isObj(self_3271567066.m_type, NTI3338665992)) {
    result_3271567091 = nimCopy(result_3271567091, getChildAt_3338666213(self_3271567066, index_3271567067, clamp_3271567068), NTI3271562483);
    break BeforeRet;
    }
    else {
    if (isObj(self_3271567066.m_type, NTI3271557156)) {
    result_3271567091 = nimCopy(result_3271567091, getChildAt_3271567065(self_3271567066, index_3271567067, clamp_3271567068), NTI3271562483);
    break BeforeRet;
    }
    }
  };

  return result_3271567091;

}

function dump_3271567092(self_3271567093) {
  var result_3271567094 = [];

    var fmtRes_3271567099 = [mnewString(0)];
    fmtRes_3271567099[0].push.apply(fmtRes_3271567099[0], [69,109,112,116,121,67,101,108,108,40,110,111,100,101,58,32]);;
    formatValue_3036676344(fmtRes_3271567099, 0, self_3271567093.node.id, []);
    fmtRes_3271567099[0].push.apply(fmtRes_3271567099[0], [41]);;
    result_3271567094.push.apply(result_3271567094, fmtRes_3271567099[0]);;

  return result_3271567094;

}

function dump_3271567105(self_3271567093) {
  var result_3271567106 = [];

  BeforeRet: {
    result_3271567106 = dump_3271567092(self_3271567093);
    break BeforeRet;
  };

  return result_3271567106;

}

function getText_3338666374(cell_3338666375) {
  var result_3338666376 = [];

    result_3338666376 = nimCopy(null, [60,62], NTI33554449);

  return result_3338666376;

}

function reference_3271564068(node_3271564069, role_3271564070) {
  var result_3271564071 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_3271564071 = nimCopy(result_3271564071, idNone_2046820633(), NTI2046820355);
    Label1: {
      var c_3271564075 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({padding: 0, time: 0, fuzz: 0, count: 0})};
      var i_536872809 = 0;
      var L_536872810 = (node_3271564069.references).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872809 < L_536872810)) break Label3;
            c_3271564075 = node_3271564069.references[chckIndx(i_536872809, 0, (node_3271564069.references).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564075.Field0, role_3271564070)) {
            result_3271564071 = nimCopy(result_3271564071, c_3271564075.Field1, NTI2046820355);
            break Label1;
            }
            
            i_536872809 = addInt(i_536872809, 1);
            if (!(((node_3271564069.references).length == L_536872810))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271564071;

}

function getText_3338666380(cell_3338666381) {
  var result_3338666382 = [];

  BeforeRet: {
    if ((cell_3338666381.child == null)) {
    var reference_3338666386 = reference_3271564068(cell_3338666381.node, cell_3338666381.reference);
    result_3338666382 = nimCopy(null, HEX24_2046820617(reference_3338666386), NTI33554449);
    break BeforeRet;
    }
    else {
      result_3338666382 = nimCopy(null, getText_3338666018(cell_3338666381.child), NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666382;

}

function getText_3338666377(cell_3338666378) {
  var result_3338666379 = [];

    result_3338666379 = nimCopy(null, cell_3338666378.text, NTI33554449);

  return result_3338666379;

}

function alias_3271557324(selfHEX60gensym2_3271557325) {
  var result_3271557326 = [];

  BeforeRet: {
    result_3271557326 = nimCopy(null, selfHEX60gensym2_3271557325.alias, NTI33554449);
    break BeforeRet;
  };

  return result_3271557326;

}

function getText_3338666439(cell_3338666440) {
  var result_3338666441 = [];

  BeforeRet: {
    var class_3338666442 = nodeClass_3271557504(cell_3338666440.node);
    if (!((class_3338666442 == null))) {
    result_3338666441 = nimCopy(null, alias_3271557324(class_3338666442), NTI33554449);
    break BeforeRet;
    }
    else {
      result_3338666441 = nimCopy(null, HEX24_2046820617(cell_3338666440.node.class), NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666441;

}

function none_3271564192() {
  var result_3271564199 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

  return result_3271564199;

}

function some_3271564204(val_3271564206) {
  var result_3271564207 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

    result_3271564207.has = true;
    result_3271564207.val = nimCopy(result_3271564207.val, val_3271564206, NTI3271557124);

  return result_3271564207;

}

function property_3271564183(node_3271564184, role_3271564185) {
  var result_3271564191 = ({val: ({kind: 0, intValue: 0, stringValue: [], boolValue: false}), has: false});

    result_3271564191 = nimCopy(result_3271564191, none_3271564192(), NTI3271560943);
    Label1: {
      var c_3271564203 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: ({kind: 0, intValue: 0, stringValue: [], boolValue: false})};
      var i_536872813 = 0;
      var L_536872814 = (node_3271564184.properties).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872813 < L_536872814)) break Label3;
            c_3271564203 = node_3271564184.properties[chckIndx(i_536872813, 0, (node_3271564184.properties).length - 1)];
            if (HEX3DHEX3D_2046820626(c_3271564203.Field0, role_3271564185)) {
            result_3271564191 = nimCopy(result_3271564191, some_3271564204(c_3271564203.Field1), NTI3271560943);
            break Label1;
            }
            
            i_536872813 = addInt(i_536872813, 1);
            if (!(((node_3271564184.properties).length == L_536872814))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3271564191;

}

function isSome_3338666398(self_3338666400) {
  var result_3338666401 = false;

    result_3338666401 = self_3338666400.has;

  return result_3338666401;

}

function isNone_3338666423(self_3338666425) {
  var result_3338666426 = false;

    result_3338666426 = !(self_3338666425.has);

  return result_3338666426;

}

function get_3338666415(self_3338666417) {
  var result_3338666418 = ({kind: 0, intValue: 0, stringValue: [], boolValue: false});

    if (isNone_3338666423(self_3338666417)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3338666418 = self_3338666417.val;

  return result_3338666418;

}

function getText_3338666387(cell_3338666388) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3338666389 = [];

  BeforeRet: {
    var value_3338666390 = property_3271564183(cell_3338666388.node, cell_3338666388.property);
      var oHEX60gensym25_3338666393 = nimCopy(null, value_3338666390, NTI3271560943);
      if (!isSome_3338666398(oHEX60gensym25_3338666393)) Temporary1 = false; else {        var value_3338666438 = nimCopy(null, get_3338666415(oHEX60gensym25_3338666393), NTI3271557124);
        Temporary1 = true;      }    if (Temporary1) {
    switch (value_3338666438.kind) {
    case 1:
      var Temporary2 = value_3338666438;
      if (ConstSet339[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3271557123)); }
      result_3338666389 = nimCopy(null, Temporary2.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 0:
      var Temporary3 = value_3338666438;
      if (ConstSet340[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      result_3338666389 = nimCopy(null, HEX24_369098760(Temporary3.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary4 = value_3338666438;
      if (ConstSet341[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3271557123)); }
      result_3338666389 = nimCopy(null, nimBoolToStr(Temporary4.boolValue), NTI33554449);
      break BeforeRet;
      break;
    }
    }
    else {
      result_3338666389 = nimCopy(null, [60,101,109,112,116,121,62], NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_3338666389;

}

function getText_3338666015(cell_3338666016) {
  var result_3338666017 = [];

  return result_3338666017;

}

function getText_3338666018(cell_3338666016) {
  var result_3338666019 = [];

  BeforeRet: {
    chckNilDisp(cell_3338666016);
    if (isObj(cell_3338666016.m_type, NTI3338665992)) {
    result_3338666019 = getText_3338666374(cell_3338666016);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666016.m_type, NTI3338665996)) {
    result_3338666019 = getText_3338666380(cell_3338666016);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666016.m_type, NTI3338665994)) {
    result_3338666019 = getText_3338666377(cell_3338666016);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666016.m_type, NTI3338665997)) {
    result_3338666019 = getText_3338666439(cell_3338666016);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666016.m_type, NTI3338665995)) {
    result_3338666019 = getText_3338666387(cell_3338666016);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3338666016.m_type, NTI3271557156)) {
    result_3338666019 = getText_3338666015(cell_3338666016);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3338666019;

}

function setText_3338666331(cell_3338666332, text_3338666333) {
  
}

function setText_3338666337(cell_3338666338, text_3338666339) {
  
}

function setText_3338666334(cell_3338666335, text_3338666336) {
  
}

function setText_3338666371(cell_3338666372, text_3338666373) {
  
}

function propertyDescription_3271564285(node_3271564286, role_3271564287) {
  var result_3271564289 = ({val: ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), role: [], typ: 0}), has: false});

  BeforeRet: {
    var class_3271564290 = nodeClass_3271557504(node_3271564286);
    if (!((class_3271564290 == null))) {
    result_3271564289 = nimCopy(result_3271564289, propertyDescription_3271563803(class_3271564290, role_3271564287), NTI3271560656);
    break BeforeRet;
    }
    
    result_3271564289 = nimCopy(result_3271564289, none_3271563812(), NTI3271560656);
    break BeforeRet;
  };

  return result_3271564289;

}

function nsuNormalize(s_855638170) {
  var result_855638171 = [];

    result_855638171 = nimCopy(null, mnewString(chckRange((s_855638170).length, 0, 2147483647)), NTI33554449);
    var j_855638172 = 0;
    Label1: {
      var i_855638177 = 0;
      var colontmp__536872817 = 0;
      colontmp__536872817 = subInt((s_855638170).length, 1);
      var res_536872818 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872818 <= colontmp__536872817)) break Label3;
            i_855638177 = res_536872818;
            if ((ConstSet342[s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)]] != undefined)) {
            result_855638171[chckIndx(j_855638172, 0, (result_855638171).length - 1)] = chckRange(addInt(s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)], 32), 0, 255);
            j_855638172 = addInt(j_855638172, 1);
            }
            else {
            if (!((s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)] == 95))) {
            result_855638171[chckIndx(j_855638172, 0, (result_855638171).length - 1)] = s_855638170[chckIndx(i_855638177, 0, (s_855638170).length - 1)];
            j_855638172 = addInt(j_855638172, 1);
            }
            }
            res_536872818 = addInt(res_536872818, 1);
          }
      };
    };
    if (!((j_855638172 == (s_855638170).length))) {
    if (result_855638171.length < chckRange(j_855638172, 0, 2147483647)) { for (var i = result_855638171.length; i < chckRange(j_855638172, 0, 2147483647); ++i) result_855638171.push(0); }
         else {result_855638171.length = chckRange(j_855638172, 0, 2147483647); };
    }
    

  return result_855638171;

}

function parseBool_855639119(s_855639120) {
  var result_855639121 = false;

    switch (toJSStr(nsuNormalize(s_855639120))) {
    case "y":
    case "yes":
    case "true":
    case "1":
    case "on":
      result_855639121 = true;
      break;
    case "n":
    case "no":
    case "false":
    case "0":
    case "off":
      result_855639121 = false;
      break;
    default: 
      raiseException({message: ([99,97,110,110,111,116,32,105,110,116,101,114,112,114,101,116,32,97,115,32,97,32,98,111,111,108,58,32] || []).concat(s_855639120 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_855639121;

}

function setText_3338666340(cell_3338666341, text_3338666342) {
      var Temporary1;

      var oHEX60gensym24_3338666345 = propertyDescription_3271564285(cell_3338666341.node, cell_3338666341.property);
      if (!isSome_3271563858(oHEX60gensym24_3338666345)) Temporary1 = false; else {        var prop_3338666368 = nimCopy(null, get_3271563875(oHEX60gensym24_3338666345), NTI3271557125);
        Temporary1 = true;      }    if (Temporary1) {
    switch (prop_3338666368.typ) {
    case 1:
      setProperty_3271564241(cell_3338666341.node, cell_3338666341.property, {kind: 1, stringValue: nimCopy(null, text_3338666342, NTI33554449), intValue: 0, boolValue: false});
      break;
    case 0:
++excHandler;
      try {
      var intValue_3338666369 = nsuParseInt(text_3338666342);
      setProperty_3271564241(cell_3338666341.node, cell_3338666341.property, {kind: 0, intValue: intValue_3338666369, stringValue: [], boolValue: false});
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 2:
++excHandler;
      try {
      var boolValue_3338666370 = parseBool_855639119(text_3338666342);
      setProperty_3271564241(cell_3338666341.node, cell_3338666341.property, {kind: 2, boolValue: boolValue_3338666370, intValue: 0, stringValue: []});
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    }
    }
    

  
}

function setText_3338666020(cell_3338666021, text_3338666022) {
  
}

function setText_3338666023(cell_3338666021, text_3338666022) {
    chckNilDisp(cell_3338666021);
    if (isObj(cell_3338666021.m_type, NTI3338665992)) {
    setText_3338666331(cell_3338666021, text_3338666022);
    }
    else {
    if (isObj(cell_3338666021.m_type, NTI3338665996)) {
    setText_3338666337(cell_3338666021, text_3338666022);
    }
    else {
    if (isObj(cell_3338666021.m_type, NTI3338665994)) {
    setText_3338666334(cell_3338666021, text_3338666022);
    }
    else {
    if (isObj(cell_3338666021.m_type, NTI3338665997)) {
    setText_3338666371(cell_3338666021, text_3338666022);
    }
    else {
    if (isObj(cell_3338666021.m_type, NTI3338665995)) {
    setText_3338666340(cell_3338666021, text_3338666022);
    }
    else {
    if (isObj(cell_3338666021.m_type, NTI3271557156)) {
    setText_3338666020(cell_3338666021, text_3338666022);
    }
    }}}}}

  
}

function HEX26_3254791677(x_3254791679, y_3254791680) {
  var result_3254791681 = [];

    result_3254791681 = new Array(chckRange(addInt((x_3254791679).length, 1), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3254791679).length, 1), 0, 2147483647) ; ++i) { result_3254791681[i] = 0; }    Label1: {
      var i_3254791696 = 0;
      var colontmp__536872821 = 0;
      colontmp__536872821 = subInt((x_3254791679).length, 1);
      var res_536872822 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872822 <= colontmp__536872821)) break Label3;
            i_3254791696 = res_536872822;
            result_3254791681[chckIndx(i_3254791696, 0, (result_3254791681).length - 1)] = x_3254791679[chckIndx(i_3254791696, 0, (x_3254791679).length - 1)];
            res_536872822 = addInt(res_536872822, 1);
          }
      };
    };
    result_3254791681[chckIndx((x_3254791679).length, 0, (result_3254791681).length - 1)] = y_3254791680;

  return result_3254791681;

}

function getCursorLeft_3254791665(cell_3254791666, cursor_3254791667) {
    var Temporary1;

  var result_3254791668 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

  BeforeRet: {
    if (((cell_3254791666.children).length == 0)) {
    result_3254791668[0] = nimCopy(result_3254791668[0], cursor_3254791667, NTI3254779907);
    break BeforeRet;
    }
    
    var childCell_3254791672 = cell_3254791666.children[chckIndx(0, 0, (cell_3254791666.children).length - 1)];
    result_3254791668[0].node = childCell_3254791672.node;
    if ((cell_3254791666.node == childCell_3254791672.node)) {
    Temporary1 = HEX26_3254791677(cursor_3254791667.path, 0);
    }
    else {
    Temporary1 = [];
    }
    
    result_3254791668[0].path = nimCopy(null, Temporary1, NTI3254786106);
    result_3254791668[0].cell = cell_3254791666;
    columnHEX3D_3254779991(result_3254791668[0], 0);
  };

  return result_3254791668[0];

}

function getCursorLeft_3254791713(cell_3254791714, cursor_3254791715) {
  var result_3254791716 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((editableLow_3338666178(cell_3254791714) < cursor_3254791715.lastIndex)) {
    result_3254791716 = nimCopy(result_3254791716, cursor_3254791715, NTI3254779907);
    result_3254791716.lastIndex = subInt(result_3254791716.lastIndex, 1);
    result_3254791716.firstIndex = result_3254791716.lastIndex;
    }
    else {
      result_3254791716 = nimCopy(result_3254791716, toCursor_3254780177(getPreviousSelectableLeaf_3254791551(cell_3254791714), false), NTI3254779907);
    }
    

  return result_3254791716;

}

function getCursorLeft_3254791704(cell_3254791705, cursor_3254791706) {
  var result_3254791707 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((editableLow_3338666178(cell_3254791705) < cursor_3254791706.lastIndex)) {
    result_3254791707 = nimCopy(result_3254791707, cursor_3254791706, NTI3254779907);
    result_3254791707.lastIndex = subInt(result_3254791707.lastIndex, 1);
    result_3254791707.firstIndex = result_3254791707.lastIndex;
    }
    else {
      result_3254791707 = nimCopy(result_3254791707, toCursor_3254780177(getPreviousSelectableLeaf_3254791551(cell_3254791705), false), NTI3254779907);
    }
    

  return result_3254791707;

}

function getCursorLeft_3254791731(cell_3254791732, cursor_3254791733) {
  var result_3254791734 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((editableLow_3338666178(cell_3254791732) < cursor_3254791733.lastIndex)) {
    result_3254791734 = nimCopy(result_3254791734, cursor_3254791733, NTI3254779907);
    result_3254791734.lastIndex = subInt(result_3254791734.lastIndex, 1);
    result_3254791734.firstIndex = result_3254791734.lastIndex;
    }
    else {
      result_3254791734 = nimCopy(result_3254791734, toCursor_3254780177(getPreviousSelectableLeaf_3254791551(cell_3254791732), false), NTI3254779907);
    }
    

  return result_3254791734;

}

function getCursorLeft_3254791722(cell_3254791723, cursor_3254791724) {
  var result_3254791725 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((editableLow_3338666178(cell_3254791723) < cursor_3254791724.lastIndex)) {
    result_3254791725 = nimCopy(result_3254791725, cursor_3254791724, NTI3254779907);
    result_3254791725.lastIndex = subInt(result_3254791725.lastIndex, 1);
    result_3254791725.firstIndex = result_3254791725.lastIndex;
    }
    else {
      result_3254791725 = nimCopy(result_3254791725, toCursor_3254780177(getPreviousSelectableLeaf_3254791551(cell_3254791723), false), NTI3254779907);
    }
    

  return result_3254791725;

}

function getCursorLeft_3254791419(cell_3254791420, cursor_3254791421) {
  var result_3254791422 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254791422;

}

function getCursorLeft_3254791423(cell_3254791420, cursor_3254791421) {
  var result_3254791424 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254791420);
    if (isObj(cell_3254791420.m_type, NTI3338665992)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791665(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791420.m_type, NTI3338665996)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791713(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791420.m_type, NTI3338665994)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791704(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791420.m_type, NTI3338665995)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791731(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791420.m_type, NTI3338665997)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791722(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791420.m_type, NTI3271557156)) {
    result_3254791424 = nimCopy(result_3254791424, getCursorLeft_3254791419(cell_3254791420, cursor_3254791421), NTI3254779907);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3254791424;

}

function getCursorRight_3254791740(cell_3254791741, cursor_3254791742) {
  var result_3254791743 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((cursor_3254791742.lastIndex <= editableHigh_3338666196(cell_3254791741))) {
    result_3254791743 = nimCopy(result_3254791743, cursor_3254791742, NTI3254779907);
    result_3254791743.lastIndex = addInt(result_3254791743.lastIndex, 1);
    result_3254791743.firstIndex = result_3254791743.lastIndex;
    }
    else {
      result_3254791743 = nimCopy(result_3254791743, toCursor_3254780177(getNextSelectableLeaf_3254791554(cell_3254791741), true), NTI3254779907);
    }
    

  return result_3254791743;

}

function getCursorRight_3254791758(cell_3254791759, cursor_3254791760) {
  var result_3254791761 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((cursor_3254791760.lastIndex <= editableHigh_3338666196(cell_3254791759))) {
    result_3254791761 = nimCopy(result_3254791761, cursor_3254791760, NTI3254779907);
    result_3254791761.lastIndex = addInt(result_3254791761.lastIndex, 1);
    result_3254791761.firstIndex = result_3254791761.lastIndex;
    }
    else {
      result_3254791761 = nimCopy(result_3254791761, toCursor_3254780177(getNextSelectableLeaf_3254791554(cell_3254791759), true), NTI3254779907);
    }
    

  return result_3254791761;

}

function getCursorRight_3254791749(cell_3254791750, cursor_3254791751) {
  var result_3254791752 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((cursor_3254791751.lastIndex <= editableHigh_3338666196(cell_3254791750))) {
    result_3254791752 = nimCopy(result_3254791752, cursor_3254791751, NTI3254779907);
    result_3254791752.lastIndex = addInt(result_3254791752.lastIndex, 1);
    result_3254791752.firstIndex = result_3254791752.lastIndex;
    }
    else {
      result_3254791752 = nimCopy(result_3254791752, toCursor_3254780177(getNextSelectableLeaf_3254791554(cell_3254791750), true), NTI3254779907);
    }
    

  return result_3254791752;

}

function getCursorRight_3254791776(cell_3254791777, cursor_3254791778) {
    var Temporary1;

  var result_3254791779 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

  BeforeRet: {
    if (((cell_3254791777.children).length == 0)) {
    result_3254791779[0] = nimCopy(result_3254791779[0], cursor_3254791778, NTI3254779907);
    break BeforeRet;
    }
    
    var childCell_3254791786 = cell_3254791777.children[chckIndx((cell_3254791777.children).length - 1, 0, (cell_3254791777.children).length - 1)];
    result_3254791779[0].node = childCell_3254791786.node;
    if ((cell_3254791777.node == childCell_3254791786.node)) {
    Temporary1 = HEX26_3254791677(cursor_3254791778.path, (cell_3254791777.children).length - 1);
    }
    else {
    Temporary1 = [];
    }
    
    result_3254791779[0].path = nimCopy(null, Temporary1, NTI3254786106);
    result_3254791779[0].cell = cell_3254791777;
    columnHEX3D_3254779991(result_3254791779[0], 0);
  };

  return result_3254791779[0];

}

function getCursorRight_3254791767(cell_3254791768, cursor_3254791769) {
  var result_3254791770 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

    if ((cursor_3254791769.lastIndex <= editableHigh_3338666196(cell_3254791768))) {
    result_3254791770 = nimCopy(result_3254791770, cursor_3254791769, NTI3254779907);
    result_3254791770.lastIndex = addInt(result_3254791770.lastIndex, 1);
    result_3254791770.firstIndex = result_3254791770.lastIndex;
    }
    else {
      result_3254791770 = nimCopy(result_3254791770, toCursor_3254780177(getNextSelectableLeaf_3254791554(cell_3254791768), true), NTI3254779907);
    }
    

  return result_3254791770;

}

function getCursorRight_3254791425(cell_3254791426, cursor_3254791427) {
  var result_3254791428 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254791428;

}

function getCursorRight_3254791429(cell_3254791426, cursor_3254791427) {
  var result_3254791430 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254791426);
    if (isObj(cell_3254791426.m_type, NTI3338665994)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791740(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791426.m_type, NTI3338665997)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791758(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791426.m_type, NTI3338665996)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791749(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791426.m_type, NTI3338665992)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791776(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791426.m_type, NTI3338665995)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791767(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791426.m_type, NTI3271557156)) {
    result_3254791430 = nimCopy(result_3254791430, getCursorRight_3254791425(cell_3254791426, cursor_3254791427), NTI3254779907);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3254791430;

}

function nsuDelete(s_855639445, s_855639445_Idx, first_855639446, last_855639447) {
    var i_855639448 = first_855639446;
    var j_855639449 = nimMin((s_855639445[s_855639445_Idx]).length, addInt(last_855639447, 1));
    var newLen_855639450 = addInt(subInt((s_855639445[s_855639445_Idx]).length, j_855639449), i_855639448);
    Label1: {
        Label2: while (true) {
        if (!(i_855639448 < newLen_855639450)) break Label2;
          s_855639445[s_855639445_Idx][chckIndx(i_855639448, 0, (s_855639445[s_855639445_Idx]).length - 1)] = s_855639445[s_855639445_Idx][chckIndx(j_855639449, 0, (s_855639445[s_855639445_Idx]).length - 1)];
          i_855639448 = addInt(i_855639448, 1);
          j_855639449 = addInt(j_855639449, 1);
        }
    };
    if (s_855639445[s_855639445_Idx].length < chckRange(newLen_855639450, 0, 2147483647)) { for (var i = s_855639445[s_855639445_Idx].length; i < chckRange(newLen_855639450, 0, 2147483647); ++i) s_855639445[s_855639445_Idx].push(0); }
         else {s_855639445[s_855639445_Idx].length = chckRange(newLen_855639450, 0, 2147483647); };

  
}

function toCursor_3254780174(cell_3254780175, column_3254780176) {
  var result_3254791642 = [({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null})];

    var colontmp__536872825 = nodeRootCellPath_3254791618(cell_3254780175);
    var rootCell_3254791643 = colontmp__536872825["Field0"];
    var path_3254791644 = nimCopy(null, colontmp__536872825["Field1"], NTI3254786068);
    result_3254791642[0].node = cell_3254780175.node;
    result_3254791642[0].cell = rootCell_3254791643;
    result_3254791642[0].path = nimCopy(null, path_3254791644, NTI3254786068);
    columnHEX3D_3254779991(result_3254791642[0], clamp_1660945119(column_3254780176, editableLow_3338666178(cell_3254780175), addInt(editableHigh_3338666196(cell_3254780175), 1)));

  return result_3254791642[0];

}

function handleDeleteLeft_3254791963(cell_3254791964, column_3254791965) {
  var result_3254791966 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    var text_3254791967 = [getText_3338666018(cell_3254791964)];
    if (((1 <= column_3254791965) && (column_3254791965 <= (text_3254791967[0]).length))) {
    nsuDelete(text_3254791967, 0, subInt(column_3254791965, 1), subInt(column_3254791965, 1));
    setText_3338666023(cell_3254791964, text_3254791967[0]);
    result_3254791966 = nimCopy(result_3254791966, toCursor_3254780174(cell_3254791964, subInt(column_3254791965, 1)), NTI3254779907);
    break BeforeRet;
    }
    
  };

  return result_3254791966;

}

function handleDeleteLeft_3254791951(cell_3254791952, column_3254791953) {
  var result_3254791954 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254791954;

}

function handleDeleteLeft_3254791955(cell_3254791952, column_3254791953) {
  var result_3254791956 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254791952);
    if (isObj(cell_3254791952.m_type, NTI3338665995)) {
    result_3254791956 = nimCopy(result_3254791956, handleDeleteLeft_3254791963(cell_3254791952, column_3254791953), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791952.m_type, NTI3271557156)) {
    result_3254791956 = nimCopy(result_3254791956, handleDeleteLeft_3254791951(cell_3254791952, column_3254791953), NTI3254779907);
    break BeforeRet;
    }
    }
  };

  return result_3254791956;

}

function handleDeleteRight_3254791968(cell_3254791969, column_3254791970) {
  var result_3254791971 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    var text_3254791972 = [getText_3338666018(cell_3254791969)];
    if (((0 <= column_3254791970) && (column_3254791970 < (text_3254791972[0]).length))) {
    nsuDelete(text_3254791972, 0, column_3254791970, column_3254791970);
    setText_3338666023(cell_3254791969, text_3254791972[0]);
    result_3254791971 = nimCopy(result_3254791971, toCursor_3254780174(cell_3254791969, column_3254791970), NTI3254779907);
    break BeforeRet;
    }
    
  };

  return result_3254791971;

}

function handleDeleteRight_3254791957(cell_3254791958, column_3254791959) {
  var result_3254791960 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  return result_3254791960;

}

function handleDeleteRight_3254791961(cell_3254791958, column_3254791959) {
  var result_3254791962 = ({firstIndex: 0, lastIndex: 0, path: [], node: null, cell: null});

  BeforeRet: {
    chckNilDisp(cell_3254791958);
    if (isObj(cell_3254791958.m_type, NTI3338665995)) {
    result_3254791962 = nimCopy(result_3254791962, handleDeleteRight_3254791968(cell_3254791958, column_3254791959), NTI3254779907);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3254791958.m_type, NTI3271557156)) {
    result_3254791962 = nimCopy(result_3254791962, handleDeleteRight_3254791957(cell_3254791958, column_3254791959), NTI3254779907);
    break BeforeRet;
    }
    }
  };

  return result_3254791962;

}

function active_2415919218(self_2415919219) {
  var result_2415919220 = false;

    result_2415919220 = self_2415919219.active;

  return result_2415919220;

}

function updateBackgroundColor_2785018349(self_2785018350, color_2785018351, frameIndex_2785018352) {
    if (!(HEX3DHEX3D_2785018339(self_2785018350.backgroundColor, color_2785018351))) {
    self_2785018350.lastHierarchyChange = nimMax(self_2785018350.lastHierarchyChange, frameIndex_2785018352);
    }
    
    self_2785018350.backgroundColor = nimCopy(self_2785018350.backgroundColor, color_2785018351, NTI2550136835);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function changed_2785018520(self_2785018521, frameIndex_2785018522) {
  var result_2785018523 = false;

    result_2785018523 = (((frameIndex_2785018522 <= self_2785018521.lastBoundsChange) || (frameIndex_2785018522 <= self_2785018521.lastHierarchyChange)) || (frameIndex_2785018522 <= self_2785018521.lastInvalidation));

  return result_2785018523;

}

function dirty_2415919140(self_2415919141) {
  var result_2415919142 = false;

    result_2415919142 = self_2415919141.mDirty;

  return result_2415919142;

}

function resetDirty_2415919213(self_2415919214) {
    self_2415919214.mDirty = false;

  
}

function updateBaseIndexAndScrollOffset_3472883877(self_3472883878, app_3472883879, contentPanel_3472883880) {
    var totalLineHeight_3472883881 = totalLineHeight_2768240810(app_3472883879.platform);

  
}

function clear_3472886102(t_3472886105) {
    Label1: {
      var i_3472886157 = 0;
      var colontmp__536872833 = 0;
      colontmp__536872833 = (t_3472886105.data).length;
      var i_536872834 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872834 < colontmp__536872833)) break Label3;
            i_3472886157 = i_536872834;
            t_3472886105.data[chckIndx(i_3472886157, 0, (t_3472886105.data).length - 1)].Field0 = 0;
            t_3472886105.data[chckIndx(i_3472886157, 0, (t_3472886105.data).length - 1)].Field1 = nimCopy(t_3472886105.data[chckIndx(i_3472886157, 0, (t_3472886105.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_3472886105.data[chckIndx(i_3472886157, 0, (t_3472886105.data).length - 1)].Field2 = null;
            i_536872834 = addInt(i_536872834, 1);
          }
      };
    };
    t_3472886105.counter = 0;

  
}

function HEX5BHEX5D_3472886637(t_3472886640, key_3472886641) {
  var result_3472886642 = null;
  var result_3472886642_Idx = 0;

    var hcHEX60gensym22_3472886643 = [0];
    var indexHEX60gensym22_3472886650 = rawGet_3254784979(t_3472886640, key_3472886641, hcHEX60gensym22_3472886643, 0);
    if ((0 <= indexHEX60gensym22_3472886650)) {
    result_3472886642 = t_3472886640.data[chckIndx(indexHEX60gensym22_3472886650, 0, (t_3472886640.data).length - 1)]; result_3472886642_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3472886641);
    }
    

  return [result_3472886642, result_3472886642_Idx];

}

function mustRehash_3472884372(t_3472884374) {
  var result_3472884375 = false;

    if (!((t_3472884374.counter < (t_3472884374.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3472884375 = ((mulInt((t_3472884374.data).length, 2) < mulInt(t_3472884374.counter, 3)) || (subInt((t_3472884374.data).length, t_3472884374.counter) < 4));

  return result_3472884375;

}

function rawInsert_3472884821(t_3472884825, data_3472884826, data_3472884826_Idx, key_3472884827, val_3472884828, hc_3472884829, h_3472884830) {
    data_3472884826[data_3472884826_Idx][chckIndx(h_3472884830, 0, (data_3472884826[data_3472884826_Idx]).length - 1)].Field1 = nimCopy(data_3472884826[data_3472884826_Idx][chckIndx(h_3472884830, 0, (data_3472884826[data_3472884826_Idx]).length - 1)].Field1, key_3472884827, NTI2046820355);
    data_3472884826[data_3472884826_Idx][chckIndx(h_3472884830, 0, (data_3472884826[data_3472884826_Idx]).length - 1)].Field2 = val_3472884828;
    data_3472884826[data_3472884826_Idx][chckIndx(h_3472884830, 0, (data_3472884826[data_3472884826_Idx]).length - 1)].Field0 = hc_3472884829;

  
}

function enlarge_3472884527(t_3472884530) {
    var n_3472884533 = [];
    n_3472884533 = new Array(chckRange(mulInt((t_3472884530.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3472884530.data).length, 2), 0, 2147483647) ; ++i) { n_3472884533[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3472884530.data; t_3472884530.data = n_3472884533; n_3472884533 = Temporary1;    Label2: {
      var i_3472884597 = 0;
      var colontmp__536872838 = 0;
      colontmp__536872838 = (n_3472884533).length - 1;
      var res_536872839 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872839 <= colontmp__536872838)) break Label4;
            i_3472884597 = res_536872839;
            var eh_3472884651 = n_3472884533[chckIndx(i_3472884597, 0, (n_3472884533).length - 1)].Field0;
            if (isFilled_1308622880(eh_3472884651)) {
            var j_3472884655 = (eh_3472884651 & (t_3472884530.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3472884530.data[chckIndx(j_3472884655, 0, (t_3472884530.data).length - 1)].Field0)) break Label6;
                  j_3472884655 = nextTry_1308622883(j_3472884655, (t_3472884530.data).length - 1);
                }
            };
            rawInsert_3472884821(t_3472884530, t_3472884530, "data", n_3472884533[chckIndx(i_3472884597, 0, (n_3472884533).length - 1)].Field1, n_3472884533[chckIndx(i_3472884597, 0, (n_3472884533).length - 1)].Field2, eh_3472884651, j_3472884655);
            }
            
            res_536872839 = addInt(res_536872839, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3472884990(t_3472884993, key_3472884994, hc_3472884995) {
  var result_3472884996 = 0;

  BeforeRet: {
    if (((t_3472884993.data).length == 0)) {
    result_3472884996 = -1;
    break BeforeRet;
    }
    
    var h_3472885047 = (hc_3472884995 & (t_3472884993.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3472884993.data[chckIndx(h_3472885047, 0, (t_3472884993.data).length - 1)].Field0)) break Label2;
          if (((t_3472884993.data[chckIndx(h_3472885047, 0, (t_3472884993.data).length - 1)].Field0 == hc_3472884995) && HEX3DHEX3D_2046820626(t_3472884993.data[chckIndx(h_3472885047, 0, (t_3472884993.data).length - 1)].Field1, key_3472884994))) {
          result_3472884996 = h_3472885047;
          break BeforeRet;
          }
          
          h_3472885047 = nextTry_1308622883(h_3472885047, (t_3472884993.data).length - 1);
        }
    };
    result_3472884996 = subInt(-1, h_3472885047);
  };

  return result_3472884996;

}

function HEX5BHEX5DHEX3D_3472884199(t_3472884202, key_3472884203, val_3472884204) {
    if (((t_3472884202.data).length == 0)) {
    var correctSizeHEX60gensym19_3472884253 = slotsNeeded_1308622891(32);
    t_3472884202.counter = 0;
    t_3472884202.data = new Array(chckRange(correctSizeHEX60gensym19_3472884253, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_3472884253, 0, 2147483647) ; ++i) { t_3472884202.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3472884258 = [0];
    var index_3472884265 = rawGet_3254789393(t_3472884202, key_3472884203, hc_3472884258, 0);
    if ((0 <= index_3472884265)) {
    t_3472884202.data[chckIndx(index_3472884265, 0, (t_3472884202.data).length - 1)].Field2 = val_3472884204;
    }
    else {
      if (((t_3472884202.data).length == 0)) {
      var correctSizeHEX60gensym22_3472884367 = slotsNeeded_1308622891(32);
      t_3472884202.counter = 0;
      t_3472884202.data = new Array(chckRange(correctSizeHEX60gensym22_3472884367, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_3472884367, 0, 2147483647) ; ++i) { t_3472884202.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3472884372(t_3472884202)) {
      enlarge_3472884527(t_3472884202);
      index_3472884265 = rawGetKnownHC_3472884990(t_3472884202, key_3472884203, hc_3472884258[0]);
      }
      
      index_3472884265 = subInt(-1, index_3472884265);
      rawInsert_3472884821(t_3472884202, t_3472884202, "data", key_3472884203, val_3472884204, hc_3472884258[0], index_3472884265);
      t_3472884202.counter = addInt(t_3472884202.counter, 1);
    }
    

  
}

function updateCellWidget_3472884138(cell_3472884139, app_3472884140, widget_3472884141, frameIndex_3472884142, ctx_3472884143, updateContext_3472884144) {
    var Temporary1;

  var result_3472884145 = null;

  BeforeRet: {
    if ((!((cell_3472884139.isVisible == null)) && !(cell_3472884139.isVisible(cell_3472884139.node)))) {
    result_3472884145 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472884141 == null)) && isObj(widget_3472884141.m_type, NTI2785017879))) {
    Temporary1 = widget_3472884141;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    var widget_3472884158 = Temporary1;
    result_3472884145 = widget_3472884158;
    HEX5BHEX5DHEX3D_3472884199(updateContext_3472884144.cellToWidget, cell_3472884139.id, widget_3472884158);
    var size_3472885228 = app_3472884140.platform.layoutOptions.getTextBounds(cell_3472884139.text);
    widget_3472884158.left = 0.0;
    widget_3472884158.right = size_3472885228.x;
    widget_3472884158.top = 0.0;
    widget_3472884158.bottom = size_3472885228.y;
    widget_3472884158.text = nimCopy(null, getText_3338666018(cell_3472884139), NTI33554449);
    var textColor_3472885234 = color_3439329450(app_3472884140.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    widget_3472884158.foregroundColor = nimCopy(widget_3472884158.foregroundColor, textColor_3472885234, NTI2550136835);
  };

  return result_3472884145;

}

function HEX5BHEX5DHEX3D_2785017926(self_2785017927, index_2785017928, child_2785017929) {
    var Temporary1;

    if (((self_2785017927.children).length <= index_2785017928)) {
    if (self_2785017927.children.length < (Temporary1 = chckRange(addInt(index_2785017928, 1), 0, 2147483647), Temporary1)) { for (var i = self_2785017927.children.length ; i < Temporary1 ; ++i) self_2785017927.children.push(null); }
               else { self_2785017927.children.length = Temporary1; };
    }
    
    if (!((self_2785017927.children[chckIndx(index_2785017928, 0, (self_2785017927.children).length - 1)] == null))) {
    self_2785017927.children[chckIndx(index_2785017928, 0, (self_2785017927.children).length - 1)].parent = null;
    }
    
    if (!((child_2785017929 == null))) {
    child_2785017929.parent = self_2785017927;
    }
    
    self_2785017927.children[chckIndx(index_2785017928, 0, (self_2785017927.children).length - 1)] = child_2785017929;

  
}

function updateCellWidget_3472885317(cell_3472885318, app_3472885319, widget_3472885320, frameIndex_3472885321, ctx_3472885322, updateContext_3472885323) {
    var Temporary1;
    var Temporary2;
      var Temporary3;

  var result_3472885324 = null;

  BeforeRet: {
    if ((!((cell_3472885318.isVisible == null)) && !(cell_3472885318.isVisible(cell_3472885318.node)))) {
    result_3472885324 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885320 == null)) && isObj(widget_3472885320.m_type, NTI2785017871))) {
    Temporary1 = widget_3472885320;
    }
    else {
    Temporary1 = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    var widget_3472885337 = Temporary1;
    result_3472885324 = widget_3472885337;
    HEX5BHEX5DHEX3D_3472884199(updateContext_3472885323.cellToWidget, cell_3472885318.id, widget_3472885337);
    if ((cell_3472885318.child == null)) {
    if (((0 < len_2785018025(widget_3472885337)) && isObj(HEX5BHEX5D_2785018021(widget_3472885337, 0).m_type, NTI2785017879))) {
    Temporary2 = HEX5BHEX5D_2785018021(widget_3472885337, 0);
    }
    else {
    Temporary2 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    var text_3472885393 = Temporary2;
    var reference_3472885394 = reference_3271564068(cell_3472885318.node, cell_3472885318.reference);
    text_3472885393.text = nimCopy(null, HEX24_2046820617(reference_3472885394), NTI33554449);
    var size_3472885395 = app_3472885319.platform.layoutOptions.getTextBounds(text_3472885393.text);
    text_3472885393.left = 0.0;
    text_3472885393.right = size_3472885395.x;
    text_3472885393.top = 0.0;
    text_3472885393.bottom = size_3472885395.y;
    var textColor_3472885401 = color_3439329450(app_3472885319.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    text_3472885393.foregroundColor = nimCopy(text_3472885393.foregroundColor, textColor_3472885401, NTI2550136835);
    if ((0 < len_2785018025(widget_3472885337))) {
    HEX5BHEX5DHEX3D_2785017926(widget_3472885337, 0, text_3472885393);
    }
    else {
    add_2785018068(widget_3472885337, text_3472885393);
    }
    
    widget_3472885337.left = 0.0;
    widget_3472885337.right = text_3472885393.right;
    widget_3472885337.top = 0.0;
    widget_3472885337.bottom = text_3472885393.bottom;
    }
    else {
      if ((0 < len_2785018025(widget_3472885337))) {
      Temporary3 = HEX5BHEX5D_2785018021(widget_3472885337, 0);
      }
      else {
      Temporary3 = null;
      }
      
      var oldWidget_3472885402 = Temporary3;
      var newWidget_3472885403 = updateCellWidget_3472884136(cell_3472885318.child, app_3472885319, oldWidget_3472885402, frameIndex_3472885321, ctx_3472885322, updateContext_3472885323);
      if ((newWidget_3472885403 == null)) {
      setLen_2785018061(widget_3472885337, 0);
      break BeforeRet;
      }
      
      if ((0 < len_2785018025(widget_3472885337))) {
      HEX5BHEX5DHEX3D_2785017926(widget_3472885337, 0, newWidget_3472885403);
      }
      else {
      add_2785018068(widget_3472885337, newWidget_3472885403);
      }
      
      widget_3472885337.left = 0.0;
      widget_3472885337.right = newWidget_3472885403.right;
      widget_3472885337.top = 0.0;
      widget_3472885337.bottom = newWidget_3472885403.bottom;
    }
    
  };

  return result_3472885324;

}

function updateCellWidget_3472885239(cell_3472885240, app_3472885241, widget_3472885242, frameIndex_3472885243, ctx_3472885244, updateContext_3472885245) {
    var Temporary1;

  var result_3472885246 = null;

  BeforeRet: {
    if ((!((cell_3472885240.isVisible == null)) && !(cell_3472885240.isVisible(cell_3472885240.node)))) {
    result_3472885246 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885242 == null)) && isObj(widget_3472885242.m_type, NTI2785017879))) {
    Temporary1 = widget_3472885242;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    var widget_3472885259 = Temporary1;
    result_3472885246 = widget_3472885259;
    HEX5BHEX5DHEX3D_3472884199(updateContext_3472885245.cellToWidget, cell_3472885240.id, widget_3472885259);
    widget_3472885259.text = nimCopy(null, getText_3338666018(cell_3472885240), NTI33554449);
    var size_3472885306 = app_3472885241.platform.layoutOptions.getTextBounds(widget_3472885259.text);
    widget_3472885259.left = 0.0;
    widget_3472885259.right = size_3472885306.x;
    widget_3472885259.top = 0.0;
    widget_3472885259.bottom = size_3472885306.y;
    var textColor_3472885312 = color_3439329450(app_3472885241.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    widget_3472885259.foregroundColor = nimCopy(widget_3472885259.foregroundColor, textColor_3472885312, NTI2550136835);
  };

  return result_3472885246;

}

function getOrCreate_3472883900(self_3472883902) {
    var Temporary2;

  var result_3472883904 = null;

  BeforeRet: {
    try {
    if ((!((self_3472883902 == null)) && isObj(self_3472883902.m_type, NTI2785017871))) {
    Temporary2 = self_3472883902;
    }
    else {
    Temporary2 = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    result_3472883904 = Temporary2;
    break BeforeRet;
    } finally {
    if (!((result_3472883904 == null))) {
    result_3472883904.parent = self_3472883902;
    }
    
    }
  };

  return result_3472883904;

}

function getOrCreate_3472883917(self_3472883919, index_3472883920) {
    var Temporary2;

  var result_3472883922 = null;

  BeforeRet: {
    try {
    if (((self_3472883919.children).length <= index_3472883920)) {
    if (self_3472883919.children.length < (Temporary2 = chckRange(addInt(index_3472883920, 1), 0, 2147483647), Temporary2)) { for (var i = self_3472883919.children.length ; i < Temporary2 ; ++i) self_3472883919.children.push(null); }
               else { self_3472883919.children.length = Temporary2; };
    self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)] = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    else {
    if ((!((self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)] == null)) && isObj(self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)].m_type, NTI2785017871))) {
    result_3472883922 = self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)];
    break BeforeRet;
    }
    }
    self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)] = {layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    result_3472883922 = self_3472883919.children[chckIndx(index_3472883920, 0, (self_3472883919.children).length - 1)];
    break BeforeRet;
    } finally {
    if (!((result_3472883922 == null))) {
    result_3472883922.parent = self_3472883919;
    }
    
    }
  };

  return result_3472883922;

}

function newCellLayoutContext_3472883894(widget_3472883895) {
  var result_3472883896 = null;

    result_3472883896 = ({currentLine: 0, indexInLine: 0, currentIndent: 0, parentWidget: null, lineWidget: null, currentLineEmpty: false, hasIndent: false, prevNoSpaceRight: false, layoutOptions: ({getTextBounds: null}), indentText: []});
    result_3472883896.parentWidget = getOrCreate_3472883900(widget_3472883895);
    var colontmp__536872846 = vec2_2164261686();
    var colontmp__536872847 = vec2_2164261686();
    result_3472883896.parentWidget.anchor = nimCopy(result_3472883896.parentWidget.anchor, {Field0: nimCopy(null, colontmp__536872846, NTI2164261152), Field1: nimCopy(null, colontmp__536872847, NTI2164261152)}, NTI2785017869);
    result_3472883896.parentWidget.left = 0.0;
    result_3472883896.parentWidget.right = 0.0;
    result_3472883896.parentWidget.top = 0.0;
    result_3472883896.parentWidget.bottom = 0.0;
    result_3472883896.lineWidget = getOrCreate_3472883917(result_3472883896.parentWidget, result_3472883896.currentLine);
    var colontmp__536872848 = vec2_2164261686();
    var colontmp__536872849 = vec2_2164261686();
    result_3472883896.lineWidget.anchor = nimCopy(result_3472883896.lineWidget.anchor, {Field0: nimCopy(null, colontmp__536872848, NTI2164261152), Field1: nimCopy(null, colontmp__536872849, NTI2164261152)}, NTI2785017869);
    result_3472883896.lineWidget.left = 0.0;
    result_3472883896.lineWidget.right = 0.0;
    result_3472883896.lineWidget.top = 0.0;
    result_3472883896.lineWidget.bottom = 0.0;
    result_3472883896.indentText = nimCopy(null, [32,32], NTI33554449);
    result_3472883896.currentLineEmpty = true;

  return result_3472883896;

}

function updateCurrentIndent_3472884022(self_3472884023) {
    if ((self_3472884023.hasIndent && ((self_3472884023.lineWidget.children).length == 1))) {
    var indentWidget_3472884027 = self_3472884023.lineWidget.children[chckIndx(0, 0, (self_3472884023.lineWidget.children).length - 1)];
    indentWidget_3472884027.text = nimCopy(null, nsuRepeatStr(self_3472884023.indentText, chckRange(self_3472884023.currentIndent, 0, 2147483647)), NTI33554449);
    var size_3472884028 = self_3472884023.layoutOptions.getTextBounds(indentWidget_3472884027.text);
    indentWidget_3472884027.right = (indentWidget_3472884027.left + size_3472884028.x);
    indentWidget_3472884027.bottom = size_3472884028.y;
    self_3472884023.lineWidget.right = indentWidget_3472884027.right;
    self_3472884023.lineWidget.bottom = max_33555646(self_3472884023.lineWidget.bottom, (self_3472884023.lineWidget.top + size_3472884028.y));
    }
    

  
}

function increaseIndent_3472884031(self_3472884032) {
    self_3472884032.currentIndent = addInt(self_3472884032.currentIndent, 1);
    updateCurrentIndent_3472884022(self_3472884032);

  
}

function decreaseIndent_3472884038(self_3472884039) {
    self_3472884039.currentIndent = subInt(self_3472884039.currentIndent, 1);
    updateCurrentIndent_3472884022(self_3472884039);

  
}

function isCurrentLineEmpty_3472883960(self_3472883961) {
  var result_3472883962 = false;

    result_3472883962 = self_3472883961.currentLineEmpty;

  return result_3472883962;

}

function truncate_2785018088(self_2785018089, len_2785018090) {
    var Temporary1;

    if (self_2785018089.children.length < (Temporary1 = chckRange(nimMin((self_2785018089.children).length, len_2785018090), 0, 2147483647), Temporary1)) { for (var i = self_2785018089.children.length ; i < Temporary1 ; ++i) self_2785018089.children.push(null); }
               else { self_2785018089.children.length = Temporary1; };

  
}

function high_2785018031(self_2785018032) {
  var result_2785018033 = 0;

    result_2785018033 = (self_2785018032.children).length - 1;

  return result_2785018033;

}

function getCurrentYOffset_3472883963(self_3472883964) {
    var Temporary1;

  var result_3472883965 = 0.0;

  BeforeRet: {
    if (contains_1191183809(HEX2EHEX2E_805306418(1, high_2785018031(self_3472883964.parentWidget)), self_3472883964.currentLine)) {
    Temporary1 = HEX5BHEX5D_2785018021(self_3472883964.parentWidget, subInt(self_3472883964.currentLine, 1)).bottom;
    }
    else {
    Temporary1 = 0.0;
    }
    
    result_3472883965 = Temporary1;
    break BeforeRet;
  };

  return result_3472883965;

}

function getOrCreate_3472884047(self_3472884049, index_3472884050) {
    var Temporary2;

  var result_3472884052 = null;

  BeforeRet: {
    try {
    if (((self_3472884049.children).length <= index_3472884050)) {
    if (self_3472884049.children.length < (Temporary2 = chckRange(addInt(index_3472884050, 1), 0, 2147483647), Temporary2)) { for (var i = self_3472884049.children.length ; i < Temporary2 ; ++i) self_3472884049.children.push(null); }
               else { self_3472884049.children.length = Temporary2; };
    self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)] = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    else {
    if ((!((self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)] == null)) && isObj(self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)].m_type, NTI2785017879))) {
    result_3472884052 = self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)];
    break BeforeRet;
    }
    }
    self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)] = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    result_3472884052 = self_3472884049.children[chckIndx(index_3472884050, 0, (self_3472884049.children).length - 1)];
    break BeforeRet;
    } finally {
    if (!((result_3472884052 == null))) {
    result_3472884052.parent = self_3472884049;
    }
    
    }
  };

  return result_3472884052;

}

function indent_3472884045(self_3472884046) {
  BeforeRet: {
    if (((self_3472884046.currentIndent == 0) || (0 < self_3472884046.indexInLine))) {
    break BeforeRet;
    }
    
    self_3472884046.hasIndent = true;
    var indentWidget_3472884072 = getOrCreate_3472884047(self_3472884046.lineWidget, self_3472884046.indexInLine);
    indentWidget_3472884072.left = self_3472884046.lineWidget.right;
    indentWidget_3472884072.top = 0.0;
    updateCurrentIndent_3472884022(self_3472884046);
    self_3472884046.indexInLine = addInt(self_3472884046.indexInLine, 1);
  };

  
}

function newLine_3472884094(self_3472884095) {
    if (!((self_3472884095.lineWidget == null))) {
    truncate_2785018088(self_3472884095.lineWidget, self_3472884095.indexInLine);
    HEX5BHEX5DHEX3D_2785017926(self_3472884095.parentWidget, self_3472884095.currentLine, self_3472884095.lineWidget);
    self_3472884095.parentWidget.right = max_33555646(self_3472884095.parentWidget.right, self_3472884095.lineWidget.right);
    self_3472884095.parentWidget.bottom = max_33555646(self_3472884095.parentWidget.bottom, self_3472884095.lineWidget.bottom);
    self_3472884095.currentLine = addInt(self_3472884095.currentLine, 1);
    }
    
    self_3472884095.lineWidget = getOrCreate_3472883917(self_3472884095.parentWidget, self_3472884095.currentLine);
    self_3472884095.indexInLine = 0;
    self_3472884095.currentLineEmpty = true;
    self_3472884095.lineWidget.left = 0.0;
    self_3472884095.lineWidget.right = 0.0;
    self_3472884095.lineWidget.top = getCurrentYOffset_3472883963(self_3472884095);
    self_3472884095.lineWidget.bottom = self_3472884095.lineWidget.top;
    self_3472884095.hasIndent = false;
    indent_3472884045(self_3472884095);

  
}

function getReusableWidget_3472884019(self_3472884020) {
  var result_3472884021 = null;

  BeforeRet: {
    if ((self_3472884020.indexInLine < len_2785018025(self_3472884020.lineWidget))) {
    result_3472884021 = HEX5BHEX5D_2785018021(self_3472884020.lineWidget, self_3472884020.indexInLine);
    break BeforeRet;
    }
    else {
      result_3472884021 = null;
      break BeforeRet;
    }
    
  };

  return result_3472884021;

}

function addSpace_3472884078(self_3472884079) {
  BeforeRet: {
    if (self_3472884079.currentLineEmpty) {
    break BeforeRet;
    }
    
    var indentWidget_3472884085 = getOrCreate_3472884047(self_3472884079.lineWidget, self_3472884079.indexInLine);
    indentWidget_3472884085.text = nimCopy(null, [32], NTI33554449);
    var size_3472884086 = self_3472884079.layoutOptions.getTextBounds(indentWidget_3472884085.text);
    indentWidget_3472884085.left = self_3472884079.lineWidget.right;
    indentWidget_3472884085.right = (indentWidget_3472884085.left + size_3472884086.x);
    indentWidget_3472884085.top = 0.0;
    indentWidget_3472884085.bottom = size_3472884086.y;
    self_3472884079.lineWidget.right = indentWidget_3472884085.right;
    self_3472884079.lineWidget.bottom = max_33555646(self_3472884079.lineWidget.bottom, (self_3472884079.lineWidget.top + size_3472884086.y));
    self_3472884079.indexInLine = addInt(self_3472884079.indexInLine, 1);
  };

  
}

function addWidget_3472884109(self_3472884110, widget_3472884111, spaceLeft_3472884112) {
    var width_3472884113 = widget_3472884111.right;
    var height_3472884114 = widget_3472884111.bottom;
    HEX5BHEX5DHEX3D_2785017926(self_3472884110.lineWidget, self_3472884110.indexInLine, null);
    if (spaceLeft_3472884112) {
    addSpace_3472884078(self_3472884110);
    }
    
    widget_3472884111.left = self_3472884110.lineWidget.right;
    widget_3472884111.right = (widget_3472884111.left + width_3472884113);
    widget_3472884111.top = 0.0;
    widget_3472884111.bottom = height_3472884114;
    self_3472884110.lineWidget.right = widget_3472884111.right;
    self_3472884110.lineWidget.bottom = max_33555646(self_3472884110.lineWidget.bottom, (self_3472884110.lineWidget.top + height_3472884114));
    HEX5BHEX5DHEX3D_2785017926(self_3472884110.lineWidget, self_3472884110.indexInLine, widget_3472884111);
    self_3472884110.indexInLine = addInt(self_3472884110.indexInLine, 1);
    self_3472884110.currentLineEmpty = false;

  
}

function finish_3472884120(self_3472884121) {
  var result_3472884122 = null;

  BeforeRet: {
    if ((0 < len_2785018025(self_3472884121.lineWidget))) {
    HEX5BHEX5DHEX3D_2785017926(self_3472884121.parentWidget, self_3472884121.currentLine, self_3472884121.lineWidget);
    self_3472884121.parentWidget.right = max_33555646(self_3472884121.parentWidget.right, self_3472884121.lineWidget.right);
    self_3472884121.parentWidget.bottom = max_33555646(self_3472884121.parentWidget.bottom, self_3472884121.lineWidget.bottom);
    self_3472884121.currentLine = addInt(self_3472884121.currentLine, 1);
    }
    
    truncate_2785018088(self_3472884121.parentWidget, self_3472884121.currentLine);
    result_3472884122 = self_3472884121.parentWidget;
    break BeforeRet;
  };

  return result_3472884122;

}

function updateCellWidget_3472885516(cell_3472885517, app_3472885518, widget_3472885519, frameIndex_3472885520, ctx_3472885521, updateContext_3472885522) {
    var Temporary1;

  var result_3472885523 = null;

  BeforeRet: {
    if ((!((cell_3472885517.isVisible == null)) && !(cell_3472885517.isVisible(cell_3472885517.node)))) {
    result_3472885523 = null;
    break BeforeRet;
    }
    
    if (((ctx_3472885521 == null) || cell_3472885517.inline)) {
    Temporary1 = newCellLayoutContext_3472883894(widget_3472885519);
    }
    else {
    Temporary1 = ctx_3472885521;
    }
    
    var myCtx_3472885530 = Temporary1;
    HEX5BHEX5DHEX3D_3472884199(updateContext_3472885522.cellToWidget, cell_3472885517.id, myCtx_3472885530.parentWidget);
    myCtx_3472885530.layoutOptions = nimCopy(myCtx_3472885530.layoutOptions, app_3472885518.platform.layoutOptions, NTI2785017867);
    fill_3271567107(cell_3472885517);
    var vertical_3472885581 = (cell_3472885517.layout.kind == 2);
    if ((!((cell_3472885517.style == null)) && cell_3472885517.style.indentChildren)) {
    increaseIndent_3472884031(myCtx_3472885530);
    }
    
    try {
    Label3: {
      var i_3472885593 = 0;
      var c_3472885594 = null;
      var i_536872843 = 0;
      var L_536872844 = (cell_3472885517.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872843 < L_536872844)) break Label5;
            i_3472885593 = i_536872843;
            c_3472885594 = cell_3472885517.children[chckIndx(i_536872843, 0, (cell_3472885517.children).length - 1)];
            if ((200 < myCtx_3472885530.currentLine)) {
            break Label3;
            }
            
            if (c_3472885594.increaseIndentBefore) {
            increaseIndent_3472884031(myCtx_3472885530);
            }
            
            if (c_3472885594.decreaseIndentBefore) {
            decreaseIndent_3472884038(myCtx_3472885530);
            }
            
            if ((vertical_3472885581 && ((0 < i_3472885593) || !(isCurrentLineEmpty_3472883960(myCtx_3472885530))))) {
            newLine_3472884094(myCtx_3472885530);
            }
            
            var spaceLeft_3472885595 = !(myCtx_3472885530.prevNoSpaceRight);
            if (!((c_3472885594.style == null))) {
            if ((c_3472885594.style.onNewLine && !(isCurrentLineEmpty_3472883960(myCtx_3472885530)))) {
            newLine_3472884094(myCtx_3472885530);
            }
            
            if (c_3472885594.style.noSpaceLeft) {
            spaceLeft_3472885595 = false;
            }
            
            }
            
            var oldWidget_3472885599 = getReusableWidget_3472884019(myCtx_3472885530);
            var newWidget_3472885600 = updateCellWidget_3472884136(c_3472885594, app_3472885518, oldWidget_3472885599, frameIndex_3472885520, myCtx_3472885530, updateContext_3472885522);
            if (!((newWidget_3472885600 == null))) {
            addWidget_3472884109(myCtx_3472885530, newWidget_3472885600, spaceLeft_3472885595);
            }
            
            if (c_3472885594.increaseIndentAfter) {
            increaseIndent_3472884031(myCtx_3472885530);
            }
            
            if (c_3472885594.decreaseIndentAfter) {
            decreaseIndent_3472884038(myCtx_3472885530);
            }
            
            myCtx_3472885530.prevNoSpaceRight = false;
            if (!((c_3472885594.style == null))) {
            if (c_3472885594.style.addNewlineAfter) {
            newLine_3472884094(myCtx_3472885530);
            }
            
            myCtx_3472885530.prevNoSpaceRight = c_3472885594.style.noSpaceRight;
            }
            
            i_536872843 = addInt(i_536872843, 1);
            if (!(((cell_3472885517.children).length == L_536872844))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((myCtx_3472885530 == ctx_3472885521))) {
    result_3472885523 = finish_3472884120(myCtx_3472885530);
    break BeforeRet;
    }
    else {
      result_3472885523 = null;
      break BeforeRet;
    }
    
    } finally {
    if ((!((cell_3472885517.style == null)) && cell_3472885517.style.indentChildren)) {
    decreaseIndent_3472884038(myCtx_3472885530);
    }
    
    }
  };

  return result_3472885523;

}

function updateCellWidget_3472885411(cell_3472885412, app_3472885413, widget_3472885414, frameIndex_3472885415, ctx_3472885416, updateContext_3472885417) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3472885418 = null;

  BeforeRet: {
    if ((!((cell_3472885412.isVisible == null)) && !(cell_3472885412.isVisible(cell_3472885412.node)))) {
    result_3472885418 = null;
    break BeforeRet;
    }
    
    if ((!((widget_3472885414 == null)) && isObj(widget_3472885414.m_type, NTI2785017879))) {
    Temporary1 = widget_3472885414;
    }
    else {
    Temporary1 = {m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    var widget_3472885431 = Temporary1;
    result_3472885418 = widget_3472885431;
    HEX5BHEX5DHEX3D_3472884199(updateContext_3472885417.cellToWidget, cell_3472885412.id, widget_3472885431);
    var value_3472885478 = property_3271564183(cell_3472885412.node, cell_3472885412.property);
      var oHEX60gensym37_3472885481 = nimCopy(null, value_3472885478, NTI3271560943);
      if (!isSome_3338666398(oHEX60gensym37_3472885481)) Temporary2 = false; else {        var value_3472885504 = nimCopy(null, get_3338666415(oHEX60gensym37_3472885481), NTI3271557124);
        Temporary2 = true;      }    if (Temporary2) {
    switch (value_3472885504.kind) {
    case 1:
      var Temporary3 = value_3472885504;
      if (ConstSet343[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3271557123)); }
      widget_3472885431.text = nimCopy(null, Temporary3.stringValue, NTI33554449);
      break;
    case 0:
      var Temporary4 = value_3472885504;
      if (ConstSet344[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3271557123)); }
      widget_3472885431.text = nimCopy(null, HEX24_369098760(Temporary4.intValue), NTI33554449);
      break;
    case 2:
      var Temporary5 = value_3472885504;
      if (ConstSet345[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolValue\' is not accessible for type \'PropertyValue\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3271557123)); }
      widget_3472885431.text = nimCopy(null, nimBoolToStr(Temporary5.boolValue), NTI33554449);
      break;
    }
    }
    else {
      widget_3472885431.text = nimCopy(null, [60,101,109,112,116,121,62], NTI33554449);
    }
    
    var size_3472885505 = app_3472885413.platform.layoutOptions.getTextBounds(widget_3472885431.text);
    widget_3472885431.left = 0.0;
    widget_3472885431.right = size_3472885505.x;
    widget_3472885431.top = 0.0;
    widget_3472885431.bottom = size_3472885505.y;
    var textColor_3472885511 = color_3439329450(app_3472885413.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    widget_3472885431.foregroundColor = nimCopy(widget_3472885431.foregroundColor, textColor_3472885511, NTI2550136835);
  };

  return result_3472885418;

}

function updateCellWidget_3472884128(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134) {
  var result_3472884135 = null;

    result_3472884135 = widget_3472884131;

  return result_3472884135;

}

function updateCellWidget_3472884136(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134) {
  var result_3472884137 = null;

  BeforeRet: {
    chckNilDisp(cell_3472884129);
    if (isObj(cell_3472884129.m_type, NTI3338665994)) {
    result_3472884137 = updateCellWidget_3472884138(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884129.m_type, NTI3338665996)) {
    result_3472884137 = updateCellWidget_3472885317(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884129.m_type, NTI3338665997)) {
    result_3472884137 = updateCellWidget_3472885239(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884129.m_type, NTI3338665992)) {
    result_3472884137 = updateCellWidget_3472885516(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884129.m_type, NTI3338665995)) {
    result_3472884137 = updateCellWidget_3472885411(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    else {
    if (isObj(cell_3472884129.m_type, NTI3271557156)) {
    result_3472884137 = updateCellWidget_3472884128(cell_3472884129, app_3472884130, widget_3472884131, frameIndex_3472884132, ctx_3472884133, updateContext_3472884134);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3472884137;

}

function del_2785017994(x_2785017996, x_2785017996_Idx, i_2785017997) {
    var xl_2785018001 = subInt((x_2785017996[x_2785017996_Idx]).length, 1);
    x_2785017996[x_2785017996_Idx][chckIndx(i_2785017997, 0, (x_2785017996[x_2785017996_Idx]).length - 1)] = x_2785017996[x_2785017996_Idx][chckIndx(xl_2785018001, 0, (x_2785017996[x_2785017996_Idx]).length - 1)];
    if (x_2785017996[x_2785017996_Idx].length < chckRange(xl_2785018001, 0, 2147483647)) { for (var i = x_2785017996[x_2785017996_Idx].length ; i < chckRange(xl_2785018001, 0, 2147483647) ; ++i) x_2785017996[x_2785017996_Idx].push(null); }
               else { x_2785017996[x_2785017996_Idx].length = chckRange(xl_2785018001, 0, 2147483647); };

  
}

function del_2785017991(self_2785017992, index_2785017993) {
    self_2785017992.children[chckIndx(index_2785017993, 0, (self_2785017992.children).length - 1)].parent = null;
    del_2785017994(self_2785017992, "children", chckRange(index_2785017993, 0, 2147483647));

  
}

function withAlpha_3472883736(color_3472883737, alpha_3472883738) {
  var result_3472883739 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3472883739 = nimCopy(result_3472883739, color_2550136904(color_3472883737.r, color_3472883737.g, color_3472883737.b, alpha_3472883738), NTI2550136835);

  return result_3472883739;

}

function color_3422552923(theme_3422552925, name_3422552926, default_3422552927) {
  var result_3422552928 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3422552928 = nimCopy(result_3422552928, getCascading_3439329461(theme_3422552925.colors, name_3422552926, color_2634023294(default_3422552927)), NTI2550136835);
    break BeforeRet;
  };

  return result_3422552928;

}

function getOrDefault_3472885799(t_3472885802, key_3472885803) {
  var result_3472885804 = null;

    var hcHEX60gensym49_3472885807 = [0];
    var indexHEX60gensym49_3472885814 = rawGet_3254789393(t_3472885802, key_3472885803, hcHEX60gensym49_3472885807, 0);
    if ((0 <= indexHEX60gensym49_3472885814)) {
    result_3472885804 = t_3472885802.data[chckIndx(indexHEX60gensym49_3472885814, 0, (t_3472885802.data).length - 1)].Field2;
    }
    

  return result_3472885804;

}

function min_33555613(x_33555614, y_33555615) {
    var Temporary1;

  var result_33555616 = 0.0;

    if (((x_33555614 <= y_33555615) || !((y_33555615 == y_33555615)))) {
    Temporary1 = x_33555614;
    }
    else {
    Temporary1 = y_33555615;
    }
    
    result_33555616 = Temporary1;

  return result_33555616;

}

function updateSelections_3472885622(self_3472885623, app_3472885624, cell_3472885625, cursor_3472885627, primary_3472885628, reverse_3472885629) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary8;
      var Temporary9;

    var charWidth_3472885630 = charWidth_2768240799(app_3472885624.platform);
    var secondaryColor_3472885636 = withAlpha_3472883736(color_3422552923(app_3472885624.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25);
    var primaryColor_3472885642 = withAlpha_3472883736(color_3422552923(app_3472885624.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25);
    if (isObj(cell_3472885625.m_type, NTI3338665992)) {
    var coll_3472885649 = cell_3472885625;
    if (reverse_3472885629) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var startIndex_3472885650 = Temporary1;
    if (reverse_3472885629) {
    Temporary2 = (coll_3472885649.children).length - 1;
    }
    else {
    Temporary2 = subInt((coll_3472885649.children).length - 1, 1);
    }
    
    var endIndex_3472885657 = Temporary2;
    if (reverse_3472885629) {
    Temporary3 = 0;
    }
    else {
    Temporary3 = (coll_3472885649.children).length - 1;
    }
    
    var primaryIndex_3472885661 = Temporary3;
      var oHEX60gensym47_3472885664 = nimCopy(null, cursor_3472885627, NTI3254780079);
      if (!isSome_3254790074(oHEX60gensym47_3472885664)) Temporary4 = false; else {        var cursor_3472885687 = nimCopy(null, get_3254790091(oHEX60gensym47_3472885664), NTI3254779907);
        Temporary4 = true;      }    if (Temporary4) {
    primaryIndex_3472885661 = cursor_3472885687.lastIndex;
    if ((cursor_3472885687.firstIndex < cursor_3472885687.lastIndex)) {
    startIndex_3472885650 = cursor_3472885687.firstIndex;
    endIndex_3472885657 = subInt(cursor_3472885687.lastIndex, 1);
    }
    else {
      startIndex_3472885650 = addInt(cursor_3472885687.lastIndex, 1);
      endIndex_3472885657 = cursor_3472885687.firstIndex;
    }
    
    }
    
    Label5: {
      var i_3472885692 = 0;
      var res_536872851 = startIndex_3472885650;
      Label6: {
          Label7: while (true) {
          if (!(res_536872851 <= endIndex_3472885657)) break Label7;
            i_3472885692 = res_536872851;
            updateSelections_3472885622(self_3472885623, app_3472885624, coll_3472885649.children[chckIndx(i_3472885692, 0, (coll_3472885649.children).length - 1)], none_3254790989(), false, reverse_3472885629);
            res_536872851 = addInt(res_536872851, 1);
          }
      };
    };
    updateSelections_3472885622(self_3472885623, app_3472885624, coll_3472885649.children[chckIndx(primaryIndex_3472885661, 0, (coll_3472885649.children).length - 1)], none_3254790989(), primary_3472885628, reverse_3472885629);
    }
    else {
      var oHEX60gensym48_3472885709 = nimCopy(null, cursor_3472885627, NTI3254780079);
      if (!isSome_3254790074(oHEX60gensym48_3472885709)) Temporary8 = false; else {        var cursor_3472885732 = nimCopy(null, get_3254790091(oHEX60gensym48_3472885709), NTI3254779907);
        Temporary8 = true;      }    if (Temporary8) {
    var widget_3472885868 = getOrDefault_3472885799(self_3472885623.cellWidgetContext.cellToWidget, cell_3472885625.id);
    if (!((widget_3472885868 == null))) {
    widget_3472885868.fillBackground = true;
    widget_3472885868.allowAlpha = true;
    widget_3472885868.backgroundColor = nimCopy(widget_3472885868.backgroundColor, secondaryColor_3472885636, NTI2550136835);
    var parent_3472885872 = widget_3472885868.parent;
    if (!((parent_3472885872 == null))) {
    var cursorWidget_3472885876 = {top: widget_3472885868.top, bottom: widget_3472885868.bottom, fillBackground: true, allowAlpha: true, backgroundColor: withAlpha_3472883736(primaryColor_3472885642, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false};
    var text_3472885877 = getText_3338666018(cell_3472885625);
    if (((text_3472885877).length == 0)) {
    cursorWidget_3472885876.left = widget_3472885868.left;
    cursorWidget_3472885876.right = (cursorWidget_3472885876.left + (0.2 * charWidth_3472885630));
    }
    else {
      var alpha1_3472885878 = (cursor_3472885732.firstIndex / (text_3472885877).length);
      var alpha2_3472885879 = (cursor_3472885732.lastIndex / (text_3472885877).length);
      if (!((cursor_3472885732.firstIndex == cursor_3472885732.lastIndex))) {
      var selectionWidget_3472885880 = {top: widget_3472885868.top, bottom: widget_3472885868.bottom, fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, primaryColor_3472885642, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false};
      selectionWidget_3472885880.left = ((widget_3472885868.left * (1.0 - min_33555613(alpha1_3472885878, alpha2_3472885879))) + (widget_3472885868.right * min_33555613(alpha1_3472885878, alpha2_3472885879)));
      selectionWidget_3472885880.right = ((widget_3472885868.left * (1.0 - max_33555646(alpha1_3472885878, alpha2_3472885879))) + (widget_3472885868.right * max_33555646(alpha1_3472885878, alpha2_3472885879)));
      add_2785018068(parent_3472885872, selectionWidget_3472885880);
      }
      
      cursorWidget_3472885876.left = ((widget_3472885868.left * (1.0 - alpha2_3472885879)) + (widget_3472885868.right * alpha2_3472885879));
      cursorWidget_3472885876.right = (cursorWidget_3472885876.left + (0.2 * charWidth_3472885630));
    }
    
    add_2785018068(parent_3472885872, cursorWidget_3472885876);
    }
    
    }
    
    }
    else {
      var widget_3472885952 = getOrDefault_3472885799(self_3472885623.cellWidgetContext.cellToWidget, cell_3472885625.id);
      if (!((widget_3472885952 == null))) {
      widget_3472885952.fillBackground = true;
      widget_3472885952.allowAlpha = true;
      if (primary_3472885628) {
      Temporary9 = primaryColor_3472885642;
      }
      else {
      Temporary9 = secondaryColor_3472885636;
      }
      
      widget_3472885952.backgroundColor = nimCopy(widget_3472885952.backgroundColor, Temporary9, NTI2550136835);
      }
      
    }
    }

  
}

function updateWidget_3472885956(self_3472885957, app_3472885958, widget_3472885959, frameIndex_3472885960) {
    var Temporary1;
    
function HEX3Aanonymous_3472885990(wf_3472886001) {
      var result_3472886004 = [];

        result_3472886004 = nimCopy(null, ([32,45,32] || []).concat(wf_3472886001.name || []), NTI33554449);

      return result_3472886004;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
              var Temporary10;
              var Temporary11;
      var Temporary12;

  BeforeRet: {
    var lineHeight_3472885961 = lineHeight_2768240794(app_3472885958.platform);
    var totalLineHeight_3472885962 = totalLineHeight_2768240810(app_3472885958.platform);
    var lineDistance_3472885963 = lineDistance_2768240789(app_3472885958.platform);
    var charWidth_3472885964 = charWidth_2768240799(app_3472885958.platform);
    var textColor_3472885970 = color_3439329450(app_3472885958.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3472885971 = null;
    var headerPart1Text_3472885972 = null;
    var headerPart2Text_3472885973 = null;
    var contentPanel_3472885974 = null;
    if ((len_2785018025(widget_3472885959) == 0)) {
    headerPanel_3472885971 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3472885962, lastHierarchyChange: frameIndex_3472885960, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3472885959, headerPanel_3472885971);
    headerPart1Text_3472885972 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3472885960, foregroundColor: nimCopy(null, textColor_3472885970, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3472885971, headerPart1Text_3472885972);
    headerPart2Text_3472885973 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3472885960, foregroundColor: nimCopy(null, textColor_3472885970, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3472885971, headerPart2Text_3472885973);
    contentPanel_3472885974 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3472885962, lastHierarchyChange: frameIndex_3472885960, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3472885974.maskContent = true;
    add_2785018068(widget_3472885959, contentPanel_3472885974);
    layoutWidget_2785018519(headerPanel_3472885971, widget_3472885959.lastBounds, frameIndex_3472885960, app_3472885958.platform.layoutOptions);
    layoutWidget_2785018519(contentPanel_3472885974, widget_3472885959.lastBounds, frameIndex_3472885960, app_3472885958.platform.layoutOptions);
    }
    else {
      headerPanel_3472885971 = HEX5BHEX5D_2785018021(widget_3472885959, 0);
      headerPart1Text_3472885972 = HEX5BHEX5D_2785018021(headerPanel_3472885971, 0);
      headerPart2Text_3472885973 = HEX5BHEX5D_2785018021(headerPanel_3472885971, 1);
      contentPanel_3472885974 = HEX5BHEX5D_2785018021(widget_3472885959, 1);
    }
    
    if (self_3472885957.renderHeader) {
    headerPanel_3472885971.bottom = totalLineHeight_3472885962;
    contentPanel_3472885974.top = totalLineHeight_3472885962;
    if (active_2415919218(self_3472885957)) {
    Temporary1 = color_3439329450(app_3472885958.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3472885958.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3472885985 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018349(headerPanel_3472885971, color_3472885985, frameIndex_3472885960);
    var workspaceName_3472886028 = get_2348810295(map_1291854424(self_3472885957.document.workspace, HEX3Aanonymous_3472885990), []);
    if (((self_3472885957.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3472885957.currentMode;
    }
    
    var mode_3472886029 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3472886034 = [mnewString(0)];
    fmtRes_3472886034[0].push.apply(fmtRes_3472886034[0], [32]);;
    formatValue_721420459(fmtRes_3472886034, 0, mode_3472886029, []);
    fmtRes_3472886034[0].push.apply(fmtRes_3472886034[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3472886034, 0, self_3472885957.document.filename, []);
    fmtRes_3472886034[0].push.apply(fmtRes_3472886034[0], [32]);;
    formatValue_721420459(fmtRes_3472886034, 0, workspaceName_3472886028, []);
    fmtRes_3472886034[0].push.apply(fmtRes_3472886034[0], [32]);;
    headerPart1Text_3472885972.text = nimCopy(null, fmtRes_3472886034[0], NTI33554449);
    var fmtRes_3472886039 = [mnewString(0)];
    fmtRes_3472886039[0].push.apply(fmtRes_3472886039[0], [32]);;
    formatValue_2701131945(fmtRes_3472886039, 0, self_3472885957.id, []);
    fmtRes_3472886039[0].push.apply(fmtRes_3472886039[0], [32]);;
    headerPart2Text_3472885973.text = nimCopy(null, fmtRes_3472886039[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018357(headerPanel_3472885971, frameIndex_3472885960);
    }
    else {
      headerPanel_3472885971.bottom = 0.0;
      contentPanel_3472885974.top = 0.0;
    }
    
    self_3472885957.lastBounds = nimCopy(self_3472885957.lastBounds, contentPanel_3472885974.lastBounds, NTI2147483653);
    self_3472885957.lastContentBounds = nimCopy(self_3472885957.lastContentBounds, widget_3472885959.lastBounds, NTI2147483653);
    widget_3472885959.lastHierarchyChange = nimMax(widget_3472885959.lastHierarchyChange, headerPanel_3472885971.lastHierarchyChange);
    if (active_2415919218(self_3472885957)) {
    Temporary3 = color_3439329450(app_3472885958.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3472885958.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018349(contentPanel_3472885974, Temporary3, frameIndex_3472885960);
      if (changed_2785018520(contentPanel_3472885974, frameIndex_3472885960)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3472885957);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3472885958.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3472885957);
    var timer_3472886055 = startTimer_2080374869();
    setLen_2785018061(contentPanel_3472885974, 0);
    updateBaseIndexAndScrollOffset_3472883877(self_3472885957, app_3472885958, contentPanel_3472885974);
    var rendered_3472886056 = 0;
    var builder_3472886057 = self_3472885957.document.builder;
    var lastY_3472886058 = self_3472885957.scrollOffset;
    if ((self_3472885957.cellWidgetContext == null)) {
    self_3472885957.cellWidgetContext = {cellToWidget: ({data: [], counter: 0})};
    }
    
    clear_3472886102(self_3472885957.cellWidgetContext.cellToWidget);
    var i_3472886485 = 0;
    Label6: {
      var node_3472886489 = null;
      var colontmp__536872828 = [];
      colontmp__536872828 = rootNodes_3271557403(self_3472885957.document.model);
      var i_536872829 = 0;
      var L_536872830 = (colontmp__536872828).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872829 < L_536872830)) break Label8;
            node_3472886489 = colontmp__536872828[chckIndx(i_536872829, 0, (colontmp__536872828).length - 1)];
            Label9: {
              if (!(contains_3254787013(self_3472885957.nodeToCell, node_3472886489.id))) {
              rebuildCells_3254780155(self_3472885957);
              }
              
              if (!(contains_3254787013(self_3472885957.nodeToCell, node_3472886489.id))) {
              break Label9;
              }
              
              var cell_3472886716 = (Temporary10 = HEX5BHEX5D_3472886637(self_3472885957.nodeToCell, node_3472886489.id), Temporary10)[0][Temporary10[1]];
              if ((cell_3472886716 == null)) {
              break Label9;
              }
              
              if ((i_3472886485 < len_2785018025(contentPanel_3472885974))) {
              Temporary11 = HEX5BHEX5D_2785018021(contentPanel_3472885974, i_3472886485);
              }
              else {
              Temporary11 = null;
              }
              
              var oldWidget_3472886720 = Temporary11;
              var newWidget_3472886721 = updateCellWidget_3472884136(cell_3472886716, app_3472885958, oldWidget_3472886720, frameIndex_3472885960, null, self_3472885957.cellWidgetContext);
              if ((newWidget_3472886721 == null)) {
              if (!((oldWidget_3472886720 == null))) {
              del_2785017991(widget_3472885959, i_3472886485);
              }
              
              break Label9;
              }
              
              newWidget_3472886721.sizeToContent = true;
              newWidget_3472886721.top = lastY_3472886058;
              if ((i_3472886485 < len_2785018025(contentPanel_3472885974))) {
              HEX5BHEX5DHEX3D_2785017926(contentPanel_3472885974, i_3472886485, newWidget_3472886721);
              }
              else {
              add_2785018068(contentPanel_3472885974, newWidget_3472886721);
              }
              
              i_3472886485 = addInt(i_3472886485, 1);
            };
            i_536872829 = addInt(i_536872829, 1);
            if (!(((colontmp__536872828).length == L_536872830))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
      var oHEX60gensym59_3472886735 = getCellForCursor_3254780157(self_3472885957, self_3472885957.cursor, false);
      if (!isSome_3271567127(oHEX60gensym59_3472886735)) Temporary12 = false; else {        var cell_3472886758 = get_3271567147(oHEX60gensym59_3472886735);
        Temporary12 = true;      }    if (Temporary12) {
    updateSelections_3472885622(self_3472885957, app_3472885958, cell_3472886758, some_3254791105(self_3472885957.cursor), true, (self_3472885957.cursor.lastIndex < self_3472885957.cursor.firstIndex));
    }
    
    var indent_3472886771 = getOption_2818583576(app_3472885958, [109,111,100,101,108,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3472886781 = getOption_2818583615(app_3472885958, [109,111,100,101,108,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3472886791 = getOption_2818583615(app_3472885958, [109,111,100,101,108,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    contentPanel_3472885974.lastHierarchyChange = frameIndex_3472885960;
    widget_3472885959.lastHierarchyChange = nimMax(widget_3472885959.lastHierarchyChange, contentPanel_3472885974.lastHierarchyChange);
    self_3472885957.lastContentBounds = nimCopy(self_3472885957.lastContentBounds, contentPanel_3472885974.lastBounds, NTI2147483653);
  };

  
}

function initTable_3422552168(initialSize_3422552171) {
  var result_3422552172 = ({data: [], counter: 0});

    var correctSizeHEX60gensym1_3422552174 = slotsNeeded_1308622891(chckRange(initialSize_3422552171, 0, 2147483647));
    result_3422552172.counter = 0;
    result_3422552172.data = new Array(chckRange(correctSizeHEX60gensym1_3422552174, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_3422552174, 0, 2147483647) ; ++i) { result_3422552172.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3422552172;

}

function updateBaseIndexAndScrollOffset_3422552153(self_3422552154, app_3422552155, contentPanel_3422552156) {
          
function HEX3Aanonymous_3422552210(t_3422552213) {
            var result_3422552216 = ({x: 0.0, y: 0.0});

              result_3422552216 = nimCopy(result_3422552216, measureText_2768240805(self_3422552154.editor.platform, t_3422552213), NTI2164261152);

            return result_3422552216;

          }
          
function HEX3Aanonymous_3422552227(t_3422552230) {
            var result_3422552233 = ({x: 0.0, y: 0.0});

              result_3422552233 = nimCopy(result_3422552233, measureText_2768240805(self_3422552154.editor.platform, t_3422552230), NTI2164261152);

            return result_3422552233;

          }

    var totalLineHeight_3422552157 = totalLineHeight_2768240810(app_3422552155.platform);
    self_3422552154.previousBaseIndex = clamp_3338666227(self_3422552154.previousBaseIndex, HEX2EHEX2E_805306418(0, len_3003121752(self_3422552154.document.rootNode)));
    var selectedNodeId_3422552167 = nimCopy(null, node_2969569752(self_3422552154).id, NTI2046820355);
    var replacements_3422552179 = initTable_3422552168(32);
    var indent_3422552189 = getOption_2818583576(app_3422552155, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3422552199 = getOption_2818583615(app_3422552155, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3422552209 = getOption_2818583615(app_3422552155, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    Label1: {
        Label2: while (true) {
        if (!((self_3422552154.scrollOffset < 0.0) && (addInt(self_3422552154.previousBaseIndex, 1) < len_3003121752(self_3422552154.document.rootNode)))) break Label2;
          var input_3422552217 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3422552154.document.rootNode, self_3422552154.previousBaseIndex), selectedNode: nimCopy(null, selectedNodeId_3422552167, NTI2046820355), replacements: nimCopy(null, replacements_3422552179, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422552210, indent: indent_3422552189, renderDivisionVertically: verticalDivision_3422552209, inlineBlocks: inlineBlocks_3422552199, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3422552218 = computeNodeLayout_3019934745(ctx_2969567289, input_3422552217, true);
          if ((contentPanel_3422552156.lastBounds.h <= ((self_3422552154.scrollOffset + bounds_3087009979(layout_3422552218).h) + totalLineHeight_3422552157))) {
          break Label1;
          }
          
          self_3422552154.previousBaseIndex = addInt(self_3422552154.previousBaseIndex, 1);
          HEX2BHEX3D_855640304(self_3422552154, "scrollOffset", (bounds_3087009979(layout_3422552218).h + totalLineHeight_3422552157));
        }
    };
    Label3: {
        Label4: while (true) {
        if (!((contentPanel_3422552156.lastBounds.h < self_3422552154.scrollOffset) && (0 < self_3422552154.previousBaseIndex))) break Label4;
          var input_3422552234 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3422552154.document.rootNode, subInt(self_3422552154.previousBaseIndex, 1)), selectedNode: nimCopy(null, selectedNodeId_3422552167, NTI2046820355), replacements: nimCopy(null, replacements_3422552179, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422552227, indent: indent_3422552189, renderDivisionVertically: verticalDivision_3422552209, inlineBlocks: inlineBlocks_3422552199, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3422552235 = computeNodeLayout_3019934745(ctx_2969567289, input_3422552234, true);
          if (((self_3422552154.scrollOffset - bounds_3087009979(layout_3422552235).h) <= 0.0)) {
          break Label3;
          }
          
          self_3422552154.previousBaseIndex = subInt(self_3422552154.previousBaseIndex, 1);
          HEX2DHEX3D_2818594211(self_3422552154, "scrollOffset", (bounds_3087009979(layout_3422552235).h + totalLineHeight_3422552157));
        }
    };

  
}

function mustRehash_3422553986(t_3422553988) {
  var result_3422553989 = false;

    if (!((t_3422553988.counter < (t_3422553988.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3422553989 = ((mulInt((t_3422553988.data).length, 2) < mulInt(t_3422553988.counter, 3)) || (subInt((t_3422553988.data).length, t_3422553988.counter) < 4));

  return result_3422553989;

}

function rawInsert_3422554435(t_3422554439, data_3422554440, data_3422554440_Idx, key_3422554441, val_3422554442, hc_3422554443, h_3422554444) {
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field1 = nimCopy(data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field1, key_3422554441, NTI2046820355);
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field2 = val_3422554442;
    data_3422554440[data_3422554440_Idx][chckIndx(h_3422554444, 0, (data_3422554440[data_3422554440_Idx]).length - 1)].Field0 = hc_3422554443;

  
}

function enlarge_3422554141(t_3422554144) {
    var n_3422554147 = [];
    n_3422554147 = new Array(chckRange(mulInt((t_3422554144.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3422554144.data).length, 2), 0, 2147483647) ; ++i) { n_3422554147[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3422554144.data; t_3422554144.data = n_3422554147; n_3422554147 = Temporary1;    Label2: {
      var i_3422554211 = 0;
      var colontmp__536872864 = 0;
      colontmp__536872864 = (n_3422554147).length - 1;
      var res_536872865 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872865 <= colontmp__536872864)) break Label4;
            i_3422554211 = res_536872865;
            var eh_3422554265 = n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field0;
            if (isFilled_1308622880(eh_3422554265)) {
            var j_3422554269 = (eh_3422554265 & (t_3422554144.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3422554144.data[chckIndx(j_3422554269, 0, (t_3422554144.data).length - 1)].Field0)) break Label6;
                  j_3422554269 = nextTry_1308622883(j_3422554269, (t_3422554144.data).length - 1);
                }
            };
            rawInsert_3422554435(t_3422554144, t_3422554144, "data", n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field1, n_3422554147[chckIndx(i_3422554211, 0, (n_3422554147).length - 1)].Field2, eh_3422554265, j_3422554269);
            }
            
            res_536872865 = addInt(res_536872865, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3422554604(t_3422554607, key_3422554608, hc_3422554609) {
  var result_3422554610 = 0;

  BeforeRet: {
    if (((t_3422554607.data).length == 0)) {
    result_3422554610 = -1;
    break BeforeRet;
    }
    
    var h_3422554661 = (hc_3422554609 & (t_3422554607.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field0)) break Label2;
          if (((t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field0 == hc_3422554609) && HEX3DHEX3D_2046820626(t_3422554607.data[chckIndx(h_3422554661, 0, (t_3422554607.data).length - 1)].Field1, key_3422554608))) {
          result_3422554610 = h_3422554661;
          break BeforeRet;
          }
          
          h_3422554661 = nextTry_1308622883(h_3422554661, (t_3422554607.data).length - 1);
        }
    };
    result_3422554610 = subInt(-1, h_3422554661);
  };

  return result_3422554610;

}

function HEX5BHEX5DHEX3D_3422553813(t_3422553816, key_3422553817, val_3422553818) {
    if (((t_3422553816.data).length == 0)) {
    var correctSizeHEX60gensym53_3422553867 = slotsNeeded_1308622891(32);
    t_3422553816.counter = 0;
    t_3422553816.data = new Array(chckRange(correctSizeHEX60gensym53_3422553867, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym53_3422553867, 0, 2147483647) ; ++i) { t_3422553816.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3422553872 = [0];
    var index_3422553879 = rawGet_3087010450(t_3422553816, key_3422553817, hc_3422553872, 0);
    if ((0 <= index_3422553879)) {
    t_3422553816.data[chckIndx(index_3422553879, 0, (t_3422553816.data).length - 1)].Field2 = val_3422553818;
    }
    else {
      if (((t_3422553816.data).length == 0)) {
      var correctSizeHEX60gensym56_3422553981 = slotsNeeded_1308622891(32);
      t_3422553816.counter = 0;
      t_3422553816.data = new Array(chckRange(correctSizeHEX60gensym56_3422553981, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3422553981, 0, 2147483647) ; ++i) { t_3422553816.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3422553986(t_3422553816)) {
      enlarge_3422554141(t_3422553816);
      index_3422553879 = rawGetKnownHC_3422554604(t_3422553816, key_3422553817, hc_3422553872[0]);
      }
      
      index_3422553879 = subInt(-1, index_3422553879);
      rawInsert_3422554435(t_3422553816, t_3422553816, "data", key_3422553817, val_3422553818, hc_3422553872[0], index_3422553879);
      t_3422553816.counter = addInt(t_3422553816.counter, 1);
    }
    

  
}

function isSome_3422552266(self_3422552268) {
  var result_3422552269 = false;

    result_3422552269 = self_3422552268.has;

  return result_3422552269;

}

function isNone_3422552291(self_3422552293) {
  var result_3422552294 = false;

    result_3422552294 = !(self_3422552293.has);

  return result_3422552294;

}

function get_3422552283(self_3422552285) {
  var result_3422552286 = [];

    if (isNone_3422552291(self_3422552285)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3422552286 = self_3422552285["val"];

  return result_3422552286;

}

function isSome_3221226333(self_3221226335) {
  var result_3221226336 = false;

    result_3221226336 = self_3221226335.has;

  return result_3221226336;

}

function isNone_3221226358(self_3221226360) {
  var result_3221226361 = false;

    result_3221226361 = !(self_3221226360.has);

  return result_3221226361;

}

function get_3221226350(self_3221226352) {
  var result_3221226353 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isNone_3221226358(self_3221226352)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226353 = self_3221226352.val;

  return result_3221226353;

}

function anyColor_3221225984(theme_3221225986, names_3221225987, default_3221225988) {
  var result_3221225989 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3221225993 = [];
      var i_536872903 = 0;
      var L_536872904 = (names_3221225987).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872903 < L_536872904)) break Label3;
            name_3221225993 = names_3221225987[chckIndx(i_536872903, 0, (names_3221225987).length - 1)];
            if (nsuStartsWith(name_3221225993, [35])) {
            result_3221225989 = nimCopy(result_3221225989, parseHexVar_2516582448(name_3221225993), NTI2550136835);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_3221225993, [38]) && contains_3221226054(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))))) {
            result_3221225989 = nimCopy(result_3221225989, HEX5BHEX5D_3221226144(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))), NTI2550136835);
            break BeforeRet;
            }
            else {
            if (contains_2516582652(theme_3221225986.tokenColors, name_3221225993)) {
            var style_3221226328 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3221225986.tokenColors, name_3221225993), NTI2516582404);
            if (isSome_3221226333(style_3221226328.foreground)) {
            result_3221225989 = nimCopy(result_3221225989, get_3221226350(style_3221226328.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            }}
            i_536872903 = addInt(i_536872903, 1);
            if (!(((names_3221225987).length == L_536872904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3221225989 = nimCopy(result_3221225989, color_2634022945(default_3221225988), NTI2550136835);
    break BeforeRet;
  };

  return result_3221225989;

}

function tokenFontStyle_2516583089(theme_2516583090, names_2516583091) {
  var result_2516583092 = {};

  BeforeRet: {
    Label1: {
      var name_2516583096 = [];
      var i_536872907 = 0;
      var L_536872908 = (names_2516583091).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872907 < L_536872908)) break Label3;
            name_2516583096 = names_2516583091[chckIndx(i_536872907, 0, (names_2516583091).length - 1)];
            if (contains_2516582652(theme_2516583090.tokenColors, name_2516583096)) {
            result_2516583092 = nimCopy(result_2516583092, HEX5BHEX5D_2516582957(theme_2516583090.tokenColors, name_2516583096).fontStyle, NTI2516582848);
            break BeforeRet;
            }
            
            i_536872907 = addInt(i_536872907, 1);
            if (!(((names_2516583091).length == L_536872908))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2516583092 = nimCopy(result_2516583092, ConstSet346, NTI2516582848);
    break BeforeRet;
  };

  return result_2516583092;

}

function isSome_3221226382(self_3221226384) {
  var result_3221226385 = false;

    result_3221226385 = self_3221226384.has;

  return result_3221226385;

}

function isNone_3221226407(self_3221226409) {
  var result_3221226410 = false;

    result_3221226410 = !(self_3221226409.has);

  return result_3221226410;

}

function get_3221226399(self_3221226401) {
  var result_3221226402 = {};

    if (isNone_3221226407(self_3221226401)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226402 = self_3221226401.val;

  return result_3221226402;

}

function createPartWidget_3439329344(text_3439329345, startOffset_3439329346, width_3439329347, height_3439329348, color_3439329349, frameIndex_3439329350) {
  var result_3439331037 = null;

    result_3439331037 = ({m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3439331037.text = text_3439329345.slice(0);
    result_3439331037.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 0}};
    result_3439331037.left = startOffset_3439329346;
    result_3439331037.right = startOffset_3439329346 + width_3439329347;
    result_3439331037.bottom = height_3439329348;
    result_3439331037.frameIndex = frameIndex_3439329350;
    result_3439331037.foregroundColor = color_3439329349;

  return result_3439331037;

}

function withAlpha_3422552088(color_3422552089, alpha_3422552090) {
  var result_3422552091 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3422552091 = nimCopy(result_3422552091, color_2550136904(color_3422552089.r, color_3422552089.g, color_3422552089.b, alpha_3422552090), NTI2550136835);

  return result_3422552091;

}

function renderVisualNode_3422552244(self_3422552245, app_3422552246, node_3422552247, selected_3422552248, bounds_3422552249, offset_3422552250, widget_3422552251, frameIndex_3422552252) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var charWidth_3422552253 = charWidth_2768240799(app_3422552246.platform);
    if (!((node_3422552247.widgetTemplate == null))) {
    var nodeWidget_3422552257 = node_3422552247.widgetTemplate;
    if (node_3422552247.cloneWidget) {
    nodeWidget_3422552257 = clone_2785019159(nodeWidget_3422552257);
    }
    
    nodeWidget_3422552257.left = node_3422552247.bounds.x;
    nodeWidget_3422552257.top = node_3422552247.bounds.y;
    nodeWidget_3422552257.right = (node_3422552247.bounds.x + node_3422552247.bounds.w);
    nodeWidget_3422552257.bottom = (node_3422552247.bounds.y + node_3422552247.bounds.h);
    add_2785018068(widget_3422552251, nodeWidget_3422552257);
    break BeforeRet;
    }
    
    var panel_3422552258 = {left: node_3422552247.bounds.x, right: (node_3422552247.bounds.x + node_3422552247.bounds.w), top: node_3422552247.bounds.y, bottom: (node_3422552247.bounds.y + node_3422552247.bounds.h), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3422552251, panel_3422552258);
      var oHEX60gensym10_3422552261 = nimCopy(null, node_3422552247.background, NTI3087007803);
      if (!isSome_3422552266(oHEX60gensym10_3422552261)) Temporary1 = false; else {        var colors_3422552306 = nimCopy(null, get_3422552283(oHEX60gensym10_3422552261), NTI3087007798);
        Temporary1 = true;      }    if (Temporary1) {
    var color_3422552312 = anyColor_3221225984(app_3422552246.theme, colors_3422552306, rgb_2550136919(255, 255, 255));
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, color_3422552312, NTI2550136835);
    panel_3422552258.fillBackground = true;
    }
    
    if ((0 < (node_3422552247.text).length)) {
    var color_3422552318 = anyColor_3221225984(app_3422552246.theme, node_3422552247.colors, rgb_2550136919(255, 255, 255));
    var style_3422552319 = tokenFontStyle_2516583089(app_3422552246.theme, node_3422552247.colors);
      var oHEX60gensym13_3422552322 = nimCopy(null, node_3422552247.styleOverride, NTI3087007788);
      if (!isSome_3221226382(oHEX60gensym13_3422552322)) Temporary2 = false; else {        var override_3422552345 = nimCopy(null, get_3221226399(oHEX60gensym13_3422552322), NTI3087007783);
        Temporary2 = true;      }    if (Temporary2) {
    style_3422552319 = nimCopy(style_3422552319, SetPlus(style_3422552319, override_3422552345), NTI2516582848);
    }
    
    var textWidget_3422552351 = createPartWidget_3439329344(node_3422552247.text, node_3422552247.bounds.x, ((node_3422552247.text).length * charWidth_3422552253), totalLineHeight_2768240810(app_3422552246.platform), color_3422552318, frameIndex_3422552252);
    textWidget_3422552351.style.fontStyle = nimCopy(textWidget_3422552351.style.fontStyle, style_3422552319, NTI2516582423);
    textWidget_3422552351.top = node_3422552247.bounds.y;
    textWidget_3422552351.bottom = (node_3422552247.bounds.y + node_3422552247.bounds.h);
    add_2785018068(widget_3422552251, textWidget_3422552351);
    }
    
    if ((0 < len_3087007980(node_3422552247))) {
    Label3: {
      var child_3422552355 = null;
      var i_536872899 = 0;
      var L_536872900 = (node_3422552247.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872899 < L_536872900)) break Label5;
            child_3422552355 = node_3422552247.children[chckIndx(i_536872899, 0, (node_3422552247.children).length - 1)];
            renderVisualNode_3422552244(self_3422552245, app_3422552246, child_3422552355, selected_3422552248, bounds_3422552249, offset_3422552250, panel_3422552258, frameIndex_3422552252);
            i_536872899 = addInt(i_536872899, 1);
            if (!(((node_3422552247.children).length == L_536872900))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if ((!((node_3422552247.node == null)) && (HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).id, node_3422552247.node.reff) || (HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).reff, node_3422552247.node.reff) && !(HEX3DHEX3D_2046820626(node_3422552247.node.reff, null_2046820646)))))) {
    panel_3422552258.fillBackground = true;
    panel_3422552258.allowAlpha = true;
    panel_3422552258.drawBorder = true;
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, withAlpha_3422552088(color_3439329450(app_3422552246.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), 0.25), NTI2550136835);
    panel_3422552258.foregroundColor = nimCopy(panel_3422552258.foregroundColor, color_3439329450(app_3422552246.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), NTI2550136835);
    }
    else {
    if ((!((node_3422552247.node == null)) && HEX3DHEX3D_2046820626(node_2969569752(self_3422552245).reff, node_3422552247.node.id))) {
    panel_3422552258.fillBackground = true;
    panel_3422552258.allowAlpha = true;
    panel_3422552258.drawBorder = true;
    panel_3422552258.backgroundColor = nimCopy(panel_3422552258.backgroundColor, withAlpha_3422552088(color_3439329450(app_3422552246.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), 0.25), NTI2550136835);
    panel_3422552258.foregroundColor = nimCopy(panel_3422552258.foregroundColor, color_3439329450(app_3422552246.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), NTI2550136835);
    }
    }
  };

  
}

function len_3221226665(t_3221226668) {
  var result_3221226669 = 0;

    result_3221226669 = t_3221226668.counter;

  return result_3221226669;

}

function color_3422552539(theme_3422552541, names_3422552542, default_3422552543) {
  var result_3422552544 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3422552548 = [];
      var i_536872920 = 0;
      var L_536872921 = (names_3422552542).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872920 < L_536872921)) break Label3;
            name_3422552548 = names_3422552542[chckIndx(i_536872920, 0, (names_3422552542).length - 1)];
            if (contains_3221226054(theme_3422552541.colors, name_3422552548)) {
            result_3422552544 = nimCopy(result_3422552544, HEX5BHEX5D_3221226144(theme_3422552541.colors, name_3422552548), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872920 = addInt(i_536872920, 1);
            if (!(((names_3422552542).length == L_536872921))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3422552544 = nimCopy(result_3422552544, color_2634023294(default_3422552543), NTI2550136835);
    break BeforeRet;
  };

  return result_3422552544;

}

function insert_2785017966(x_2785017968, x_2785017968_Idx, item_2785017969, i_2785017970) {
    var it_2785017990 = null;
    x_2785017968[x_2785017968_Idx] = x_2785017968[x_2785017968_Idx] || []; x_2785017968[x_2785017968_Idx].splice(i_2785017970, 0, it_2785017990);
    x_2785017968[x_2785017968_Idx][chckIndx(i_2785017970, 0, (x_2785017968[x_2785017968_Idx]).length - 1)] = item_2785017969;

  
}

function insert_2785017962(self_2785017963, index_2785017964, child_2785017965) {
    child_2785017965.parent = self_2785017963;
    insert_2785017966(self_2785017963, "children", child_2785017965, chckRange(index_2785017964, 0, 2147483647));

  
}

function renderBlockIndent_3422552384(editor_3422552385, app_3422552386, layout_3422552387, node_3422552388, offset_3422552389, widget_3422552390) {
              var Temporary5;

  BeforeRet: {
    var indentLineWidth_3422552400 = getOption_2818583576(app_3422552386, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,119,105,100,116,104], 1.0);
    var indentLineAlpha_3422552410 = getOption_2818583576(app_3422552386, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,97,108,112,104,97], 1.0);
    if ((indentLineWidth_3422552400 <= 0.0)) {
    break BeforeRet;
    }
    
    Label1: {
      var __3422552411 = 0;
      var child_3422552412 = null;
      var n_536872911 = node_3422552388;
      var idx_536872912 = -1;
      var i_536872913 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536872912 == -1)) {
            var colontmp__536872916 = nimCopy(null, {Field0: i_536872913, Field1: n_536872911}, NTI3003123002);
            __3422552411 = colontmp__536872916["Field0"];
            child_3422552412 = colontmp__536872916["Field1"];
            if (((child_3422552412.kind == 7) && contains_2969569863(layout_3422552387.nodeToVisualNode, child_3422552412.id))) {
            var visualRange_3422552522 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422552387.nodeToVisualNode, child_3422552412.id), NTI3087007774);
            var bounds_3422552523 = absoluteBounds_3087009583(visualRange_3422552522);
            var indent_3422552524 = addInt(modInt(subInt(HEX5BHEX5D_3087007967(visualRange_3422552522.parent, visualRange_3422552522.first).indent, 1), 6), 1);
            var fmtRes_3422552529 = [mnewString(0)];
            fmtRes_3422552529[0].push.apply(fmtRes_3422552529[0], [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100]);;
            formatValue_2701131945(fmtRes_3422552529, 0, indent_3422552524, []);
            var color_3422552654 = withAlpha_3422552088(color_3422552539(app_3422552386.theme, [nimCopy(null, fmtRes_3422552529[0], NTI33554449), [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], {r: 0.0, g: 0.0, b: 0.0, a: 1.0}), indentLineAlpha_3422552410);
            var panel_3422552655 = {left: bounds_3422552523.x, right: (bounds_3422552523.x + indentLineWidth_3422552400), top: bounds_3422552523.y, bottom: (bounds_3422552523.y + bounds_3422552523.h), fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, color_3422552654, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false};
            insert_2785017962(widget_3422552390, 0, panel_3422552655);
            }
            
            }
            
            if ((addInt(idx_536872912, 1) < len_3003121752(n_536872911))) {
            n_536872911 = HEX5BHEX5D_3003121748(n_536872911, addInt(idx_536872912, 1));
            idx_536872912 = -1;
            }
            else {
              var oHEX60gensym74_536872917 = next_3003121857(n_536872911);
              if (!isSome_3003123546(oHEX60gensym74_536872917)) Temporary5 = false; else {                var ne_536872918 = get_3003123566(oHEX60gensym74_536872917);
                Temporary5 = true;              }            if (Temporary5) {
            n_536872911 = ne_536872918;
            idx_536872912 = -1;
            }
            else {
            if ((!((n_536872911.parent == null)) && !((n_536872911.parent == node_3422552388)))) {
            idx_536872912 = index_3003121772(n_536872911);
            n_536872911 = n_536872911.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536872913 = addInt(i_536872913, 1);
            }
          }
      };
    };
  };

  
}

function renderVisualNodeLayout_3422552656(self_3422552657, app_3422552658, node_3422552659, bounds_3422552660, layout_3422552661, offset_3422552662, contentWidget_3422552663, frameIndex_3422552664) {
    var totalLineHeight_3422552665 = totalLineHeight_2768240810(app_3422552658.platform);
    var charWidth_3422552666 = charWidth_2768240799(app_3422552658.platform);
    self_3422552657.lastLayouts.push({Field0: layout_3422552661, Field1: nimCopy(null, offset_3422552662, NTI2164261152)});;
    var widget_3422552671 = {left: bounds_3087009979(layout_3422552661).x, right: (bounds_3087009979(layout_3422552661).x + bounds_3087009979(layout_3422552661).w), top: (bounds_3087009979(layout_3422552661).y + offset_3422552662.y), bottom: ((bounds_3087009979(layout_3422552661).y + bounds_3087009979(layout_3422552661).h) + offset_3422552662.y), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    Label1: {
      var line_3422552675 = null;
      var i_536872869 = 0;
      var L_536872870 = (layout_3422552661.root.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872869 < L_536872870)) break Label3;
            line_3422552675 = layout_3422552661.root.children[chckIndx(i_536872869, 0, (layout_3422552661.root.children).length - 1)];
            renderVisualNode_3422552244(self_3422552657, app_3422552658, line_3422552675, node_2969569752(self_3422552657), bounds_3422552660, offset_3422552662, widget_3422552671, frameIndex_3422552664);
            i_536872869 = addInt(i_536872869, 1);
            if (!(((layout_3422552661.root.children).length == L_536872870))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    add_2785018068(contentWidget_3422552663, widget_3422552671);
    var errorColor_3422552681 = color_3439329450(app_3422552658.theme, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(255, 0, 0));
    Label4: {
      var id_3422552686 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var visualRange_3422552687 = ({parent: null, first: 0, last: 0});
      var L_536872890 = len_3221226665(layout_3422552661.nodeToVisualNode);
      Label5: {
        var h_536872892 = 0;
        var colontmp__536872893 = 0;
        colontmp__536872893 = (layout_3422552661.nodeToVisualNode.data).length - 1;
        var res_536872894 = 0;
        Label6: {
            Label7: while (true) {
            if (!(res_536872894 <= colontmp__536872893)) break Label7;
              h_536872892 = res_536872894;
              if (isFilled_1308622880(layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872892, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field0)) {
              var colontmp__536872897 = nimCopy(null, {Field0: nimCopy(null, layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872892, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, layout_3422552661.nodeToVisualNode.data[chckIndx(h_536872892, 0, (layout_3422552661.nodeToVisualNode.data).length - 1)].Field2, NTI3087007774)}, NTI3221226150);
              id_3422552686 = nimCopy(id_3422552686, colontmp__536872897["Field0"], NTI2046820355);
              visualRange_3422552687 = nimCopy(visualRange_3422552687, colontmp__536872897["Field1"], NTI3087007774);
              if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, id_3422552686)) {
              var foundErrors_3422552735 = false;
              var bounds_3422552745 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3422552687), offset_3422552662);
              var last_3422552746 = rect_2147483672(xy_2147483680(bounds_3422552745), vec2_2164261686());
              Label8: {
                var diagnostics_3422552809 = [];
                var colontmp__536872879 = ({data: [], counter: 0});
                colontmp__536872879 = nimCopy(colontmp__536872879, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_3422552686).queries, NTI3019898894);
                var L_536872880 = len_3221227056(colontmp__536872879);
                Label9: {
                  var h_536872882 = 0;
                  var colontmp__536872883 = 0;
                  colontmp__536872883 = (colontmp__536872879.data).length - 1;
                  var res_536872884 = 0;
                  Label10: {
                      Label11: while (true) {
                      if (!(res_536872884 <= colontmp__536872883)) break Label11;
                        h_536872882 = res_536872884;
                        if (isFilled_1308622880(colontmp__536872879.data[chckIndx(h_536872882, 0, (colontmp__536872879.data).length - 1)].Field0)) {
                        diagnostics_3422552809 = colontmp__536872879.data[chckIndx(h_536872882, 0, (colontmp__536872879.data).length - 1)]["Field2"];
                        Label12: {
                          var diagnostic_3422552813 = ({message: []});
                          var i_536872876 = 0;
                          var L_536872877 = (diagnostics_3422552809).length;
                          Label13: {
                              Label14: while (true) {
                              if (!(i_536872876 < L_536872877)) break Label14;
                                diagnostic_3422552813 = diagnostics_3422552809[chckIndx(i_536872876, 0, (diagnostics_3422552809).length - 1)];
                                var panel_3422552814 = {text: nimCopy(null, diagnostic_3422552813.message, NTI33554449), left: (-((diagnostic_3422552813.message).length) * charWidth_3422552666), right: 0.0, top: (last_3422552746.y + last_3422552746.h), bottom: ((last_3422552746.y + last_3422552746.h) + totalLineHeight_3422552665), anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), sizeToContent: true, foregroundColor: nimCopy(null, errorColor_3422552681, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                                add_2785018068(contentWidget_3422552663, panel_3422552814);
                                foundErrors_3422552735 = true;
                                i_536872876 = addInt(i_536872876, 1);
                                if (!(((diagnostics_3422552809).length == L_536872877))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!((len_3221227056(colontmp__536872879) == L_536872880))) {
                        failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        res_536872884 = addInt(res_536872884, 1);
                      }
                  };
                };
              };
              if (foundErrors_3422552735) {
              var panel_3422552815 = {left: bounds_3422552745.x, right: (bounds_3422552745.x + bounds_3422552745.w), top: bounds_3422552745.y, bottom: (bounds_3422552745.y + bounds_3422552745.h), allowAlpha: true, fillBackground: true, drawBorder: true, backgroundColor: withAlpha_3422552088(errorColor_3422552681, 0.25), foregroundColor: nimCopy(null, errorColor_3422552681, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
              add_2785018068(contentWidget_3422552663, panel_3422552815);
              }
              
              }
              
              if (!((len_3221226665(layout_3422552661.nodeToVisualNode) == L_536872890))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872894 = addInt(res_536872894, 1);
            }
        };
      };
    };
    if (contains_2969569863(layout_3422552661.nodeToVisualNode, node_2969569752(self_3422552657).id)) {
    var visualRange_3422552921 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422552661.nodeToVisualNode, node_2969569752(self_3422552657).id), NTI3087007774);
    var bounds_3422552922 = absoluteBounds_3087009583(visualRange_3422552921);
    var panel_3422552944 = {left: bounds_3422552922.x, right: (bounds_3422552922.x + bounds_3422552922.w), top: bounds_3422552922.y, bottom: (bounds_3422552922.y + bounds_3422552922.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3422552088(color_3422552923(app_3422552658.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25), foregroundColor: color_3439329450(app_3422552658.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], rgb_2550136919(255, 255, 255)), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
    add_2785018068(widget_3422552671, panel_3422552944);
    }
    
    renderBlockIndent_3422552384(self_3422552657, app_3422552658, layout_3422552661, node_3422552659, offset_3422552662, widget_3422552671);

  
}

function updateBaseIndexAndScrollOffset_3439329351(contentPanel_3439329352, previousBaseIndex_3439329353, previousBaseIndex_3439329353_Idx, scrollOffset_3439329354, scrollOffset_3439329354_Idx, lines_3439329355, totalLineHeight_3439329356, targetLine_3439329358) {
      var Temporary1;

      var oHEX60gensym2_3439329361 = nimCopy(null, targetLine_3439329358, NTI1191183280);
      if (!isSome_1191185117(oHEX60gensym2_3439329361)) Temporary1 = false; else {        var targetLine_3439329384 = get_1191185211(oHEX60gensym2_3439329361);
        Temporary1 = true;      }    if (Temporary1) {
    var targetLineY_3439329385 = ((subInt(targetLine_3439329384, previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx]) * totalLineHeight_3439329356) + scrollOffset_3439329354[scrollOffset_3439329354_Idx]);
    var margin_3439329386 = 0.0;
    if ((targetLineY_3439329385 < margin_3439329386)) {
    scrollOffset_3439329354[scrollOffset_3439329354_Idx] = margin_3439329386;
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = targetLine_3439329384;
    }
    else {
    if (((contentPanel_3439329352.lastBounds.h - margin_3439329386) < (targetLineY_3439329385 + totalLineHeight_3439329356))) {
    scrollOffset_3439329354[scrollOffset_3439329354_Idx] = ((contentPanel_3439329352.lastBounds.h - margin_3439329386) - totalLineHeight_3439329356);
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = targetLine_3439329384;
    }
    }
    }
    
    previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = clamp_3338666227(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], HEX2EHEX2E_805306418(0, lines_3439329355));
    Label2: {
        Label3: while (true) {
        if (!((scrollOffset_3439329354[scrollOffset_3439329354_Idx] < 0.0) && (addInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1) < lines_3439329355))) break Label3;
          if ((contentPanel_3439329352.lastBounds.h <= (scrollOffset_3439329354[scrollOffset_3439329354_Idx] + totalLineHeight_3439329356))) {
          break Label2;
          }
          
          previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = addInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1);
          HEX2BHEX3D_855640304(scrollOffset_3439329354, scrollOffset_3439329354_Idx, totalLineHeight_3439329356);
        }
    };
    Label4: {
        Label5: while (true) {
        if (!((contentPanel_3439329352.lastBounds.h < scrollOffset_3439329354[scrollOffset_3439329354_Idx]) && (0 < previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx]))) break Label5;
          if (((scrollOffset_3439329354[scrollOffset_3439329354_Idx] - totalLineHeight_3439329356) <= 0.0)) {
          break Label4;
          }
          
          previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx] = subInt(previousBaseIndex_3439329353[previousBaseIndex_3439329353_Idx], 1);
          HEX2DHEX3D_2818594211(scrollOffset_3439329354, scrollOffset_3439329354_Idx, totalLineHeight_3439329356);
        }
    };

  
}

function HEX5BHEX5D_3422553012(s_3422553016, x_3422553017) {
  var result_3422553018 = [];

    var a_3422553020 = x_3422553017.a;
    var L_3422553022 = addInt(subInt(x_3422553017.b, a_3422553020), 1);
    result_3422553018 = new Array(chckRange(L_3422553022, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3422553022, 0, 2147483647) ; ++i) { result_3422553018[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }    Label1: {
      var i_3422553031 = 0;
      var i_536872948 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872948 < L_3422553022)) break Label3;
            i_3422553031 = i_536872948;
            result_3422553018[chckIndx(i_3422553031, 0, (result_3422553018).length - 1)] = nimCopy(result_3422553018[chckIndx(i_3422553031, 0, (result_3422553018).length - 1)], s_3422553016[chckIndx(addInt(i_3422553031, a_3422553020), 0, (s_3422553016).length - 1)], NTI2969568638);
            i_536872948 = addInt(i_536872948, 1);
          }
      };
    };

  return result_3422553018;

}

function get_3422553133(self_3422553135, otherwise_3422553136) {
    var Temporary1;

  var result_3422553137 = {};

    if (isSome_3221226382(self_3422553135)) {
    Temporary1 = self_3422553135.val;
    }
    else {
    Temporary1 = otherwise_3422553136;
    }
    
    result_3422553137 = nimCopy(result_3422553137, Temporary1, NTI3087007783);

  return result_3422553137;

}

function createLinesInPanel_3439329412(app_3439329413, contentPanel_3439329414, previousBaseIndex_3439329415, scrollOffset_3439329416, lines_3439329417, frameIndex_3439329418, onlyRenderInBounds_3439329419, renderLine_3439329425) {
    var totalLineHeight_3439329426 = totalLineHeight_2768240810(app_3439329413.platform);
    Label1: {
      var i_3439329431 = 0;
      var i_536872952 = previousBaseIndex_3439329415;
      Label2: {
          Label3: while (true) {
          if (!(i_536872952 < lines_3439329417)) break Label3;
            i_3439329431 = i_536872952;
            Label4: {
              var top_3439329432 = ((subInt(i_3439329431, previousBaseIndex_3439329415) * totalLineHeight_3439329426) + scrollOffset_3439329416);
              if ((onlyRenderInBounds_3439329419 && (contentPanel_3439329414.lastBounds.h <= top_3439329432))) {
              break Label1;
              }
              
              if ((onlyRenderInBounds_3439329419 && ((top_3439329432 + totalLineHeight_3439329426) <= 0.0))) {
              break Label4;
              }
              
              var lineWidget_3439329433 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), left: 0.0, right: 0.0, top: top_3439329432, bottom: (top_3439329432 + totalLineHeight_3439329426), lastHierarchyChange: frameIndex_3439329418, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3439329425(lineWidget_3439329433, i_3439329431, true, frameIndex_3439329418))) {
              break Label1;
              }
              
              add_2785018068(contentPanel_3439329414, lineWidget_3439329433);
            };
            i_536872952 = addInt(i_536872952, 1);
          }
      };
    };
    Label5: {
      var k_3439329438 = 0;
      var res_536872956 = 1;
      Label6: {
          Label7: while (true) {
          if (!(res_536872956 <= previousBaseIndex_3439329415)) break Label7;
            k_3439329438 = res_536872956;
            Label8: {
              var i_3439329439 = subInt(previousBaseIndex_3439329415, k_3439329438);
              var top_3439329440 = ((subInt(i_3439329439, previousBaseIndex_3439329415) * totalLineHeight_3439329426) + scrollOffset_3439329416);
              if ((onlyRenderInBounds_3439329419 && (contentPanel_3439329414.lastBounds.h <= top_3439329440))) {
              break Label8;
              }
              
              if ((onlyRenderInBounds_3439329419 && ((top_3439329440 + totalLineHeight_3439329426) <= 0.0))) {
              break Label5;
              }
              
              var lineWidget_3439329441 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), left: 0.0, right: 0.0, top: top_3439329440, bottom: (top_3439329440 + totalLineHeight_3439329426), lastHierarchyChange: frameIndex_3439329418, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3439329425(lineWidget_3439329441, i_3439329439, false, frameIndex_3439329418))) {
              break Label5;
              }
              
              add_2785018068(contentPanel_3439329414, lineWidget_3439329441);
            };
            res_536872956 = addInt(res_536872956, 1);
          }
      };
    };

  
}

function tokenColor_3439329618(theme_3439329620, names_3439329621, default_3439329622) {
  var result_3439329623 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439329627 = [];
      var i_536872959 = 0;
      var L_536872960 = (names_3439329621).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872959 < L_536872960)) break Label3;
            name_3439329627 = names_3439329621[chckIndx(i_536872959, 0, (names_3439329621).length - 1)];
            if (contains_2516582652(theme_3439329620.tokenColors, name_3439329627)) {
            var style_3439329733 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3439329620.tokenColors, name_3439329627), NTI2516582404);
            if (isSome_3221226333(style_3439329733.foreground)) {
            result_3439329623 = nimCopy(result_3439329623, get_3221226350(style_3439329733.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            
            i_536872959 = addInt(i_536872959, 1);
            if (!(((names_3439329621).length == L_536872960))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439329623 = nimCopy(result_3439329623, color_2634022945(default_3439329622), NTI2550136835);
    break BeforeRet;
  };

  return result_3439329623;

}

function get_3439330991(self_3439330993, otherwise_3439330994) {
    var Temporary1;

  var result_3439330995 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3221226333(self_3439330993)) {
    Temporary1 = self_3439330993.val;
    }
    else {
    Temporary1 = otherwise_3439330994;
    }
    
    result_3439330995 = nimCopy(result_3439330995, Temporary1, NTI2550136835);

  return result_3439330995;

}

function getCascading_2516582604(table_2516582606, key_2516582607, default_2516582608) {
  var result_2516582609 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2516582652(table_2516582606, key_2516582607)) {
    result_2516582609 = nimCopy(result_2516582609, HEX5BHEX5D_2516582957(table_2516582606, key_2516582607), NTI2516582404);
    break BeforeRet;
    }
    
    var index_2516583036 = nsuRFindStr(key_2516582607, [46], 0, -1);
    if (!((index_2516583036 == -1))) {
    result_2516582609 = nimCopy(result_2516582609, getCascading_2516582604(table_2516582606, HEX5BHEX5D_855639291(key_2516582607, HEX2EHEX2E_805306418(0, subInt(index_2516583036, 1))), default_2516582608), NTI2516582404);
    break BeforeRet;
    }
    
    result_2516582609 = nimCopy(result_2516582609, default_2516582608, NTI2516582404);
    break BeforeRet;
  };

  return result_2516582609;

}

function tokenColor_3439330963(theme_3439330965, name_3439330966, default_3439330967) {
  var result_3439330968 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3439330968 = nimCopy(result_3439330968, get_3439330991(getCascading_2516582604(theme_3439330965.tokenColors, name_3439330966, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3439330967)), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330968;

}

function add_3422553286(x_3422553288, x_3422553288_Idx, y_3422553289) {
    var Temporary1;

    var xl_3422553293 = (x_3422553288[x_3422553288_Idx]).length;
    if (x_3422553288[x_3422553288_Idx].length < (Temporary1 = chckRange(addInt(xl_3422553293, (y_3422553289).length), 0, 2147483647), Temporary1)) { for (var i = x_3422553288[x_3422553288_Idx].length ; i < Temporary1 ; ++i) x_3422553288[x_3422553288_Idx].push({Field0: 0, Field1: null}); }
               else { x_3422553288[x_3422553288_Idx].length = Temporary1; };
    Label2: {
      var i_3422553309 = 0;
      var colontmp__536872963 = 0;
      colontmp__536872963 = (y_3422553289).length - 1;
      var res_536872964 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872964 <= colontmp__536872963)) break Label4;
            i_3422553309 = res_536872964;
            x_3422553288[x_3422553288_Idx][chckIndx(addInt(xl_3422553293, i_3422553309), 0, (x_3422553288[x_3422553288_Idx]).length - 1)] = nimCopy(x_3422553288[x_3422553288_Idx][chckIndx(addInt(xl_3422553293, i_3422553309), 0, (x_3422553288[x_3422553288_Idx]).length - 1)], y_3422553289[chckIndx(i_3422553309, 0, (y_3422553289).length - 1)], NTI3422552551);
            res_536872964 = addInt(res_536872964, 1);
          }
      };
    };

  
}

function renderCompletionList_3422552945(self_3422552946, app_3422552947, widget_3422552948, parentBounds_3422552949, frameIndex_3422552950, completions_3422552951, selected_3422552952, fill_3422552953, targetLine_3422552955, renderedItems_3422552958, renderedItems_3422552958_Idx, previousBaseIndex_3422552959, previousBaseIndex_3422552959_Idx, scrollOffset_3422552960, scrollOffset_3422552960_Idx) {
    var Temporary1;
                var Temporary8;
                var Temporary9;
              var Temporary10;
              var Temporary11;
    
function renderLine_3422553219(lineWidget_3422553220, i_3422553221, down_3422553222, frameIndex_3422553223) {
      var result_3422553224 = false;

      BeforeRet: {
        if ((i_3422553221 == self_3422552946.selectedCompletion)) {
        lineWidget_3422553220.fillBackground = true;
        lineWidget_3422553220.backgroundColor = nimCopy(lineWidget_3422553220.backgroundColor, selectionColor_3422553209, NTI2550136835);
        }
        
        var k_3422553225 = subInt(i_3422553221, firstCompletion_3422552978);
        if (((k_3422553225 < 0) || ((entries_3422552999).length - 1 < k_3422553225))) {
        result_3422553224 = false;
        break BeforeRet;
        }
        
        var entry_3422553229 = nimCopy(null, entries_3422552999[chckIndx(k_3422553225, 0, (entries_3422552999).length - 1)], NTI3422552566);
        var nameColor_3422553235 = tokenColor_3439329618(app_3422552947.theme, entry_3422553229.Field3, rgb_2550136919(255, 255, 255));
        var nameWidget_3422553236 = createPartWidget_3439329344(entry_3422553229.Field0, 0.0, ((entry_3422553229.Field0).length * charWidth_3422552962), totalLineHeight_3422552961, nameColor_3422553235, frameIndex_3422553223);
        nameWidget_3422553236.style.fontStyle = nimCopy(nameWidget_3422553236.style.fontStyle, entry_3422553229.Field6, NTI2516582423);
        add_2785018068(lineWidget_3422553220, nameWidget_3422553236);
        var tempWidget_3422553237 = createPartWidget_3439329344([32,58,32], nameWidth_3422553200, (3.0 * charWidth_3422552962), totalLineHeight_3422552961, sepColor_3422553215, frameIndex_3422553223);
        add_2785018068(lineWidget_3422553220, tempWidget_3422553237);
        var typeColor_3422553243 = tokenColor_3439330963(app_3422552947.theme, entry_3422553229.Field4, rgb_2550136919(255, 255, 255));
        var typeWidget_3422553244 = createPartWidget_3439329344(entry_3422553229.Field1, tempWidget_3422553237.right, ((entry_3422553229.Field1).length * charWidth_3422552962), totalLineHeight_3422552961, typeColor_3422553243, frameIndex_3422553223);
        add_2785018068(lineWidget_3422553220, typeWidget_3422553244);
        tempWidget_3422553237 = createPartWidget_3439329344([32,61,32], (typeWidget_3422553244.left + typeWidth_3422553201), (3.0 * charWidth_3422552962), totalLineHeight_3422552961, sepColor_3422553215, frameIndex_3422553223);
        add_2785018068(lineWidget_3422553220, tempWidget_3422553237);
        if ((0 < (entry_3422553229.Field2).length)) {
        var valueColor_3422553250 = tokenColor_3439330963(app_3422552947.theme, entry_3422553229.Field5, rgb_2550136919(255, 255, 255));
        var valueWidget_3422553251 = createPartWidget_3439329344(entry_3422553229.Field2, (-((entry_3422553229.Field2).length) * charWidth_3422552962), 0.0, totalLineHeight_3422552961, valueColor_3422553250, frameIndex_3422553223);
        valueWidget_3422553251.anchor.Field0.x = 1.0;
        valueWidget_3422553251.anchor.Field1.x = 1.0;
        add_2785018068(lineWidget_3422553220, valueWidget_3422553251);
        }
        
        newRenderedItems_3422553218.push({Field0: i_3422553221, Field1: lineWidget_3422553220});;
        result_3422553224 = true;
        break BeforeRet;
      };

      return result_3422553224;

    }

  BeforeRet: {
    var totalLineHeight_3422552961 = totalLineHeight_2768240810(app_3422552947.platform);
    var charWidth_3422552962 = charWidth_2768240799(app_3422552947.platform);
    if (renderedItems_3422552958[renderedItems_3422552958_Idx].length < 0) { for (var i = renderedItems_3422552958[renderedItems_3422552958_Idx].length ; i < 0 ; ++i) renderedItems_3422552958[renderedItems_3422552958_Idx].push({Field0: 0, Field1: null}); }
               else { renderedItems_3422552958[renderedItems_3422552958_Idx].length = 0; };
    if (((completions_3422552951).length == 0)) {
    break BeforeRet;
    }
    
    if (fill_3422552953) {
    Temporary1 = (((widget_3422552948.lastBounds.h / totalLineHeight_3422552961)) | 0);
    }
    else {
    Temporary1 = 15;
    }
    
    var maxRenderedCompletions_3422552970 = Temporary1;
    var renderedCompletions_3422552974 = nimMin((completions_3422552951).length, maxRenderedCompletions_3422552970);
    widget_3422552948.bottom = (widget_3422552948.top + (renderedCompletions_3422552974 * totalLineHeight_3422552961));
    layoutWidget_2785018519(widget_3422552948, parentBounds_3422552949, frameIndex_3422552950, app_3422552947.platform.layoutOptions);
    updateBaseIndexAndScrollOffset_3439329351(widget_3422552948, previousBaseIndex_3422552959, previousBaseIndex_3422552959_Idx, scrollOffset_3422552960, scrollOffset_3422552960_Idx, (completions_3422552951).length, totalLineHeight_3422552961, targetLine_3422552955);
    var firstCompletion_3422552978 = previousBaseIndex_3422552959[previousBaseIndex_3422552959_Idx];
    Label2: {
      var temp_3422552979 = [scrollOffset_3422552960[scrollOffset_3422552960_Idx]];
      Label3: {
          Label4: while (true) {
          if (!((0.0 < temp_3422552979[0]) && (0 < firstCompletion_3422552978))) break Label4;
            HEX2DHEX3D_2818594211(temp_3422552979, 0, totalLineHeight_3422552961);
            firstCompletion_3422552978 = subInt(firstCompletion_3422552978, 1);
          }
      };
    };
    var entries_3422552999 = [];
    Label5: {
      var i_3422553074 = 0;
      var com_3422553075 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});
      var colontmp__536872935 = [];
      colontmp__536872935 = HEX5BHEX5D_3422553012(completions_3422552951, HEX2EHEX2E_805306418(firstCompletion_3422552978, (completions_3422552951).length - 1));
      var i_536872937 = 0;
      var L_536872938 = (colontmp__536872935).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872937 < L_536872938)) break Label7;
            i_3422553074 = i_536872937;
            com_3422553075 = nimCopy(com_3422553075, colontmp__536872935[chckIndx(i_536872937, 0, (colontmp__536872935).length - 1)], NTI2969568638);
            switch (com_3422553075.kind) {
            case 0:
                var Temporary9 = com_3422553075;
                if (ConstSet350[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2969568637)); }
                var oHEX60gensym34_3422553078 = getSymbol_3019906948(ctx_2969567289, Temporary9.id);
                if (!isSome_3087009356(oHEX60gensym34_3422553078)) Temporary8 = false; else {                  var sym_3422553101 = get_3087009376(oHEX60gensym34_3422553078);
                  Temporary8 = true;                }              if (Temporary8) {
              var typ_3422553102 = computeSymbolType_3019928398(ctx_2969567289, sym_3422553101, true);
              var valueString_3422553103 = [];
              var value_3422553104 = computeSymbolValue_3019931153(ctx_2969567289, sym_3422553101, true);
              if ((((!((value_3422553104.kind == 0)) && !((value_3422553104.kind == 4))) && !((value_3422553104.kind == 5))) && !((value_3422553104.kind == 1)))) {
              valueString_3422553103 = nimCopy(null, HEX24_3087008498(value_3422553104), NTI33554449);
              }
              
              var style_3422553145 = get_3422553133(getStyleForSymbol_3137341424(ctx_2969567289, sym_3422553101), ConstSet351);
              entries_3422552999.push({Field0: nimCopy(null, sym_3422553101.name, NTI33554449), Field1: HEX24_3087008191(typ_3422553102), Field2: nimCopy(null, valueString_3422553103, NTI33554449), Field3: getColorForSymbol_3137341355(ctx_2969567289, sym_3422553101), Field4: [115,116,111,114,97,103,101,46,116,121,112,101], Field5: [115,116,114,105,110,103], Field6: nimCopy(null, style_3422553145, NTI3422552568)});;
              }
              
              break;
            case 1:
              var Temporary10 = com_3422553075;
              if (ConstSet352[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2969568637)); }
              var Temporary11 = com_3422553075;
              if (ConstSet353[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2969568637)); }
              entries_3422552999.push({Field0: nimCopy(null, Temporary10.name, NTI33554449), Field1: [115,110,105,112,112,101,116], Field2: reprEnum(Temporary11.nodeKind, NTI3003121667), Field3: [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], Field4: [115,116,111,114,97,103,101], Field5: [115,116,114,105,110,103], Field6: nimCopy(null, ConstSet354, NTI3422552568)});;
              break;
            }
            if ((renderedCompletions_3422552974 < (entries_3422552999).length)) {
            break Label5;
            }
            
            i_536872937 = addInt(i_536872937, 1);
            if (!(((colontmp__536872935).length == L_536872938))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var maxNameLen_3422553168 = 10;
    var maxTypeLen_3422553169 = 10;
    var maxValueLen_3422553170 = 0;
    Label12: {
      var name_3422553192 = [];
      var typ_3422553193 = [];
      var value_3422553194 = [];
      var color1_3422553195 = [];
      var color2_3422553196 = [];
      var color3_3422553197 = [];
      var __3422553198 = {};
      var i_536872942 = 0;
      var L_536872943 = (entries_3422552999).length;
      Label13: {
          Label14: while (true) {
          if (!(i_536872942 < L_536872943)) break Label14;
            name_3422553192 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field0"];
            typ_3422553193 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field1"];
            value_3422553194 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field2"];
            color1_3422553195 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field3"];
            color2_3422553196 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field4"];
            color3_3422553197 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field5"];
            __3422553198 = entries_3422552999[chckIndx(i_536872942, 0, (entries_3422552999).length - 1)]["Field6"];
            maxNameLen_3422553168 = nimMax(maxNameLen_3422553168, (name_3422553192).length);
            maxTypeLen_3422553169 = nimMax(maxTypeLen_3422553169, (typ_3422553193).length);
            maxValueLen_3422553170 = nimMax(maxValueLen_3422553170, (value_3422553194).length);
            i_536872942 = addInt(i_536872942, 1);
            if (!(((entries_3422552999).length == L_536872943))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var sepWidth_3422553199 = (charWidth_3422552962 * 3.0);
    var nameWidth_3422553200 = (charWidth_3422552962 * maxNameLen_3422553168);
    var typeWidth_3422553201 = (charWidth_3422552962 * maxTypeLen_3422553169);
    var valueWidth_3422553202 = (charWidth_3422552962 * maxValueLen_3422553170);
    var totalWidth_3422553203 = (((nameWidth_3422553200 + typeWidth_3422553201) + valueWidth_3422553202) + (sepWidth_3422553199 * 2.0));
    if ((fill_3422552953 && (totalWidth_3422553203 < widget_3422552948.lastBounds.w))) {
    totalWidth_3422553203 = widget_3422552948.lastBounds.w;
    }
    
    widget_3422552948.right = (widget_3422552948.left + totalWidth_3422553203);
    widget_3422552948.bottom = (widget_3422552948.top + (renderedCompletions_3422552974 * totalLineHeight_3422552961));
    var selectionColor_3422553209 = color_3439329450(app_3422552947.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var sepColor_3422553215 = color_3439329450(app_3422552947.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var newRenderedItems_3422553218 = [];
    createLinesInPanel_3439329412(app_3422552947, widget_3422552948, previousBaseIndex_3422552959[previousBaseIndex_3422552959_Idx], scrollOffset_3422552960[scrollOffset_3422552960_Idx], (completions_3422552951).length, frameIndex_3422552950, true, renderLine_3422553219);
    add_3422553286(renderedItems_3422552958, renderedItems_3422552958_Idx, newRenderedItems_3422553218);
  };

  
}

function renderCompletions_3422553337(self_3422553338, app_3422553339, widget_3422553340, frameIndex_3422553341) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
                var Temporary7;
                var Temporary8;
                var Temporary9;
            var Temporary10;

  BeforeRet: {
    self_3422553338.lastCompletionsWidget = null;
    if (((self_3422553338.completions).length == 0)) {
    break BeforeRet;
    }
    
    var matchColor_3422553350 = color_3439329450(app_3422553339.theme, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], rgb_2550136919(150, 150, 220));
    var backgroundColor_3422553356 = color_3439329450(app_3422553339.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var borderColor_3422553362 = color_3439329450(app_3422553339.theme, [112,97,110,101,108,46,98,111,114,100,101,114], rgb_2550136919(255, 255, 255));
    Label1: {
      var layout_3422553366 = null;
      var offset_3422553367 = ({x: 0.0, y: 0.0});
      var i_536872925 = 0;
      var L_536872926 = (self_3422553338.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872925 < L_536872926)) break Label3;
            layout_3422553366 = self_3422553338.lastLayouts[chckIndx(i_536872925, 0, (self_3422553338.lastLayouts).length - 1)]["Field0"];
            offset_3422553367 = self_3422553338.lastLayouts[chckIndx(i_536872925, 0, (self_3422553338.lastLayouts).length - 1)]["Field1"];
            var selectedCompletion_3422553368 = nimCopy(null, self_3422553338.completions[chckIndx(self_3422553338.selectedCompletion, 0, (self_3422553338.completions).length - 1)], NTI2969568638);
              if (!(selectedCompletion_3422553368.kind == 0)) Temporary6 = false; else {                var Temporary8 = selectedCompletion_3422553368;
                if (ConstSet347[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2969568637)); }
                var oHEX60gensym44_3422553376 = getSymbol_3019906948(ctx_2969567289, Temporary8.id);
                if (!isSome_3087009356(oHEX60gensym44_3422553376)) Temporary7 = false; else {                  var symbol_3422553399 = get_3087009376(oHEX60gensym44_3422553376);
                  Temporary7 = true;                }                Temporary6 = Temporary7;              }              if (!Temporary6) Temporary5 = false; else {                Temporary5 = (symbol_3422553399.kind == 0);              }              if (!Temporary5) Temporary4 = false; else {                var Temporary9 = symbol_3422553399;
                if (ConstSet348[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007753)); }
                Temporary4 = contains_2969569863(layout_3422553366.nodeToVisualNode, Temporary9.node.id);              }            if (Temporary4) {
            var Temporary10 = symbol_3422553399;
            if (ConstSet349[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007753)); }
            var selectedDeclRect_3422553509 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422553366.nodeToVisualNode, Temporary10.node.id), NTI3087007774);
            var bounds_3422553519 = HEX2B_2130706587(absoluteBounds_3087009583(selectedDeclRect_3422553509), offset_3422553367);
            var panel_3422553520 = {left: bounds_3422553519.x, right: (bounds_3422553519.x + bounds_3422553519.w), top: bounds_3422553519.y, bottom: (bounds_3422553519.y + bounds_3422553519.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3422552088(matchColor_3422553350, 0.25), foregroundColor: nimCopy(null, matchColor_3422553350, NTI2550136835), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
            add_2785018068(widget_3422553340, panel_3422553520);
            }
            
            i_536872925 = addInt(i_536872925, 1);
            if (!(((self_3422553338.lastLayouts).length == L_536872926))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var layout_3422553524 = null;
      var offset_3422553525 = ({x: 0.0, y: 0.0});
      var i_536872929 = 0;
      var L_536872930 = (self_3422553338.lastLayouts).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872929 < L_536872930)) break Label13;
            layout_3422553524 = self_3422553338.lastLayouts[chckIndx(i_536872929, 0, (self_3422553338.lastLayouts).length - 1)]["Field0"];
            offset_3422553525 = self_3422553338.lastLayouts[chckIndx(i_536872929, 0, (self_3422553338.lastLayouts).length - 1)]["Field1"];
            if (contains_2969569863(layout_3422553524.nodeToVisualNode, node_2969569752(self_3422553338).id)) {
            var visualRange_3422553631 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3422553524.nodeToVisualNode, node_2969569752(self_3422553338).id), NTI3087007774);
            var bounds_3422553641 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3422553631), offset_3422553525);
            var panel_3422553642 = {left: bounds_3422553641.x, top: (bounds_3422553641.y + bounds_3422553641.h), right: (bounds_3422553641.x + 100.0), bottom: ((bounds_3422553641.y + bounds_3422553641.h) + 100.0), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3422553356, NTI2550136835), drawBorder: true, foregroundColor: nimCopy(null, borderColor_3422553362, NTI2550136835), maskContent: true, layout: {kind: 0}, m_type: NTI2785017871, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, allowAlpha: false};
            renderCompletionList_3422552945(self_3422553338, app_3422553339, panel_3422553642, widget_3422553340.lastBounds, frameIndex_3422553341, self_3422553338.completions, self_3422553338.selectedCompletion, false, self_3422553338.scrollToCompletion, self_3422553338, "lastItems", self_3422553338, "completionsBaseIndex", self_3422553338, "completionsScrollOffset");
            self_3422553338.lastCompletionsWidget = panel_3422553642;
            add_2785018068(widget_3422553340, panel_3422553642);
            break Label11;
            }
            
            i_536872929 = addInt(i_536872929, 1);
            if (!(((self_3422553338.lastLayouts).length == L_536872930))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    self_3422553338.scrollToCompletion = nimCopy(self_3422553338.scrollToCompletion, none_3003121842(), NTI1191183280);
  };

  
}

function updateWidget_3422553650(self_3422553651, app_3422553652, widget_3422553653, frameIndex_3422553654) {
    var Temporary1;
    
function HEX3Aanonymous_3422553684(wf_3422553695) {
      var result_3422553698 = [];

        result_3422553698 = nimCopy(null, ([32,45,32] || []).concat(wf_3422553695.name || []), NTI33554449);

      return result_3422553698;

    }
    var Temporary2;
    var Temporary3;
    var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
            
function HEX3Aanonymous_3422554926(t_3422554929) {
              var result_3422554932 = ({x: 0.0, y: 0.0});

                result_3422554932 = nimCopy(result_3422554932, measureText_2768240805(app_3422553652.platform, t_3422554929), NTI2164261152);

              return result_3422554932;

            }
            
function HEX3Aanonymous_3422554951(t_3422554954) {
              var result_3422554957 = ({x: 0.0, y: 0.0});

                result_3422554957 = nimCopy(result_3422554957, measureText_2768240805(app_3422553652.platform, t_3422554954), NTI2164261152);

              return result_3422554957;

            }

  BeforeRet: {
    var lineHeight_3422553655 = lineHeight_2768240794(app_3422553652.platform);
    var totalLineHeight_3422553656 = totalLineHeight_2768240810(app_3422553652.platform);
    var lineDistance_3422553657 = lineDistance_2768240789(app_3422553652.platform);
    var charWidth_3422553658 = charWidth_2768240799(app_3422553652.platform);
    var textColor_3422553664 = color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3422553665 = null;
    var headerPart1Text_3422553666 = null;
    var headerPart2Text_3422553667 = null;
    var contentPanel_3422553668 = null;
    if ((len_2785018025(widget_3422553653) == 0)) {
    headerPanel_3422553665 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3422553656, lastHierarchyChange: frameIndex_3422553654, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3422553653, headerPanel_3422553665);
    headerPart1Text_3422553666 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3422553654, foregroundColor: nimCopy(null, textColor_3422553664, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3422553665, headerPart1Text_3422553666);
    headerPart2Text_3422553667 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3422553654, foregroundColor: nimCopy(null, textColor_3422553664, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3422553665, headerPart2Text_3422553667);
    contentPanel_3422553668 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3422553656, lastHierarchyChange: frameIndex_3422553654, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3422553668.maskContent = true;
    add_2785018068(widget_3422553653, contentPanel_3422553668);
    layoutWidget_2785018519(headerPanel_3422553665, widget_3422553653.lastBounds, frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    layoutWidget_2785018519(contentPanel_3422553668, widget_3422553653.lastBounds, frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    }
    else {
      headerPanel_3422553665 = HEX5BHEX5D_2785018021(widget_3422553653, 0);
      headerPart1Text_3422553666 = HEX5BHEX5D_2785018021(headerPanel_3422553665, 0);
      headerPart2Text_3422553667 = HEX5BHEX5D_2785018021(headerPanel_3422553665, 1);
      contentPanel_3422553668 = HEX5BHEX5D_2785018021(widget_3422553653, 1);
    }
    
    if (self_3422553651.renderHeader) {
    headerPanel_3422553665.bottom = totalLineHeight_3422553656;
    contentPanel_3422553668.top = totalLineHeight_3422553656;
    if (active_2415919218(self_3422553651)) {
    Temporary1 = color_3439329450(app_3422553652.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3422553652.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3422553679 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018349(headerPanel_3422553665, color_3422553679, frameIndex_3422553654);
    var workspaceName_3422553722 = get_2348810295(map_1291854424(self_3422553651.document.workspace, HEX3Aanonymous_3422553684), []);
    if (((self_3422553651.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3422553651.currentMode;
    }
    
    var mode_3422553723 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3422553728 = [mnewString(0)];
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    formatValue_721420459(fmtRes_3422553728, 0, mode_3422553723, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3422553728, 0, self_3422553651.document.filename, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    formatValue_721420459(fmtRes_3422553728, 0, workspaceName_3422553722, []);
    fmtRes_3422553728[0].push.apply(fmtRes_3422553728[0], [32]);;
    headerPart1Text_3422553666.text = nimCopy(null, fmtRes_3422553728[0], NTI33554449);
    var fmtRes_3422553733 = [mnewString(0)];
    fmtRes_3422553733[0].push.apply(fmtRes_3422553733[0], [32]);;
    formatValue_2701131945(fmtRes_3422553733, 0, self_3422553651.id, []);
    fmtRes_3422553733[0].push.apply(fmtRes_3422553733[0], [32]);;
    headerPart2Text_3422553667.text = nimCopy(null, fmtRes_3422553733[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018357(headerPanel_3422553665, frameIndex_3422553654);
    }
    else {
      headerPanel_3422553665.bottom = 0.0;
      contentPanel_3422553668.top = 0.0;
    }
    
    self_3422553651.lastBounds = nimCopy(self_3422553651.lastBounds, contentPanel_3422553668.lastBounds, NTI2147483653);
    self_3422553651.lastContentBounds = nimCopy(self_3422553651.lastContentBounds, widget_3422553653.lastBounds, NTI2147483653);
    widget_3422553653.lastHierarchyChange = nimMax(widget_3422553653.lastHierarchyChange, headerPanel_3422553665.lastHierarchyChange);
    if (active_2415919218(self_3422553651)) {
    Temporary3 = color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3422553652.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018349(contentPanel_3422553668, Temporary3, frameIndex_3422553654);
    if ((self_3422553651.textEditor == null)) {
    Temporary4 = false;
    }
    else {
    Temporary4 = dirty_2415919140(self_3422553651.textEditor);
    }
    
    var textEditorDirty_3422553752 = Temporary4;
      if (changed_2785018520(contentPanel_3422553668, frameIndex_3422553654)) Temporary7 = true; else {        Temporary7 = dirty_2415919140(self_3422553651);      }      if (Temporary7) Temporary6 = true; else {        Temporary6 = app_3422553652.platform.redrawEverything;      }      if (Temporary6) Temporary5 = true; else {        Temporary5 = textEditorDirty_3422553752;      }    if (!(Temporary5)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3422553651);
    var timer_3422553753 = startTimer_2080374869();
    setLen_2785018061(contentPanel_3422553668, 0);
    updateBaseIndexAndScrollOffset_3422552153(self_3422553651, app_3422553652, contentPanel_3422553668);
    if (self_3422553651.lastLayouts.length < 0) { for (var i = self_3422553651.lastLayouts.length ; i < 0 ; ++i) self_3422553651.lastLayouts.push({Field0: null, Field1: ({x: 0.0, y: 0.0})}); }
               else { self_3422553651.lastLayouts.length = 0; };
    var rendered_3422553758 = 0;
    var replacements_3422553763 = [initTable_3422552168(32)];
    if ((!((self_3422553651.currentlyEditedNode == null)) || !(HEX3DHEX3D_2046820626(self_3422553651.currentlyEditedSymbol, null_2046820646)))) {
    if ((self_3422553651.textEditorWidget == null)) {
    self_3422553651.textEditorWidget = {sizeToContent: true, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    activeHEX3D_2415919215(self_3422553651.textEditor, true);
    markDirty_2415919143(self_3422553651.textEditor);
    updateWidget_3405774859(self_3422553651.textEditor, app_3422553652, self_3422553651.textEditorWidget, frameIndex_3422553654);
    layoutWidget_2785018519(self_3422553651.textEditorWidget, rect_2147483666(0.0, 0.0, 0.0, 0.0), frameIndex_3422553654, app_3422553652.platform.layoutOptions);
    }
    else {
      self_3422553651.textEditorWidget = null;
    }
    
    if (!((self_3422553651.currentlyEditedNode == null))) {
    HEX5BHEX5DHEX3D_3422553813(replacements_3422553763[0], self_3422553651.currentlyEditedNode.id, {id: newId_2046820597(), bounds: nimCopy(null, self_3422553651.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3422553651.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    else {
    if (!(HEX3DHEX3D_2046820626(self_3422553651.currentlyEditedSymbol, null_2046820646))) {
    HEX5BHEX5DHEX3D_3422553813(replacements_3422553763[0], self_3422553651.currentlyEditedSymbol, {id: newId_2046820597(), bounds: nimCopy(null, self_3422553651.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3422553651.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    }
    var selectedNode_3422554888 = node_2969569752(self_3422553651);
    var indent_3422554898 = getOption_2818583576(app_3422553652, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3422554908 = getOption_2818583615(app_3422553652, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3422554918 = getOption_2818583615(app_3422553652, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var offset_3422554919 = vec2_2164261725(0.0, self_3422553651.scrollOffset);
    Label8: {
      var i_3422554924 = 0;
      var colontmp__536872854 = 0;
      colontmp__536872854 = len_3003121752(self_3422553651.document.rootNode);
      var i_536872855 = self_3422553651.previousBaseIndex;
      Label9: {
          Label10: while (true) {
          if (!(i_536872855 < colontmp__536872854)) break Label10;
            i_3422554924 = i_536872855;
            var node_3422554925 = HEX5BHEX5D_3003121748(self_3422553651.document.rootNode, i_3422554924);
            var input_3422554933 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3422554925, selectedNode: nimCopy(null, selectedNode_3422554888.id, NTI2046820355), replacements: nimCopy(null, replacements_3422553763[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422554926, indent: indent_3422554898, renderDivisionVertically: verticalDivision_3422554918, inlineBlocks: inlineBlocks_3422554908, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3422554934 = computeNodeLayout_3019934745(ctx_2969567289, input_3422554933, true);
            if ((contentPanel_3422553668.lastBounds.h < (bounds_3087009979(layout_3422554934).y + offset_3422554919.y))) {
            break Label8;
            }
            
            renderVisualNodeLayout_3422552656(self_3422553651, app_3422553652, node_3422554925, contentPanel_3422553668.lastBounds, layout_3422554934, offset_3422554919, contentPanel_3422553668, frameIndex_3422553654);
            HEX2BHEX3D_2147483761(offset_3422554919, "y", (bounds_3087009979(layout_3422554934).h + totalLineHeight_3422553656));
            rendered_3422553758 = addInt(rendered_3422553758, 1);
            i_536872855 = addInt(i_536872855, 1);
          }
      };
    };
    offset_3422554919 = nimCopy(offset_3422554919, vec2_2164261725(0.0, self_3422553651.scrollOffset), NTI2164261152);
    Label11: {
      var k_3422554948 = 0;
      var res_536872858 = 1;
      Label12: {
          Label13: while (true) {
          if (!(res_536872858 <= self_3422553651.previousBaseIndex)) break Label13;
            k_3422554948 = res_536872858;
            var i_3422554949 = subInt(self_3422553651.previousBaseIndex, k_3422554948);
            var node_3422554950 = HEX5BHEX5D_3003121748(self_3422553651.document.rootNode, i_3422554949);
            var input_3422554958 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3422554950, selectedNode: nimCopy(null, selectedNode_3422554888.id, NTI2046820355), replacements: nimCopy(null, replacements_3422553763[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3422554951, indent: indent_3422554898, renderDivisionVertically: verticalDivision_3422554918, inlineBlocks: inlineBlocks_3422554908, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3422554959 = computeNodeLayout_3019934745(ctx_2969567289, input_3422554958, true);
            if ((((bounds_3087009979(layout_3422554959).y + bounds_3087009979(layout_3422554959).h) + offset_3422554919.y) < 0.0)) {
            break Label11;
            }
            
            HEX2DHEX3D_2634022922(offset_3422554919, "y", (bounds_3087009979(layout_3422554959).h + totalLineHeight_3422553656));
            renderVisualNodeLayout_3422552656(self_3422553651, app_3422553652, node_3422554950, contentPanel_3422553668.lastBounds, layout_3422554959, offset_3422554919, contentPanel_3422553668, frameIndex_3422553654);
            rendered_3422553758 = addInt(rendered_3422553758, 1);
            res_536872858 = addInt(res_536872858, 1);
          }
      };
    };
    renderCompletions_3422553337(self_3422553651, app_3422553652, contentPanel_3422553668, frameIndex_3422553654);
    contentPanel_3422553668.lastHierarchyChange = frameIndex_3422553654;
    widget_3422553653.lastHierarchyChange = nimMax(widget_3422553653.lastHierarchyChange, contentPanel_3422553668.lastHierarchyChange);
    self_3422553651.lastContentBounds = nimCopy(self_3422553651.lastContentBounds, contentPanel_3422553668.lastBounds, NTI2147483653);
  };

  
}

function HEX24_2449473863(selection_2449473864) {
  var result_2449473865 = [];

  BeforeRet: {
    result_2449473865 = nimCopy(null, (HEX24_2449473860(selection_2449473864.Field0) || []).concat([45] || [],HEX24_2449473860(selection_2449473864.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473865;

}

function formatValue_2818572415(result_2818572417, result_2818572417_Idx, value_2818572418, specifier_2818572419) {
    formatValue_721420459(result_2818572417, result_2818572417_Idx, HEX24_2449473863(value_2818572418), specifier_2818572419);

  
}

function initTable_3439329915(initialSize_3439329918) {
  var result_3439329919 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_3439329921 = slotsNeeded_1308622891(chckRange(initialSize_3439329918, 0, 2147483647));
    result_3439329919.counter = 0;
    result_3439329919.data = new Array(chckRange(correctSizeHEX60gensym14_3439329921, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_3439329921, 0, 2147483647) ; ++i) { result_3439329919.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3439329919;

}

function mgetOrPut_3439329967(t_3439329970, key_3439329971, val_3439329972) {
  var result_3439329973 = null;
  var result_3439329973_Idx = 0;

    if (((t_3439329970.data).length == 0)) {
    var correctSizeHEX60gensym17_3439330022 = slotsNeeded_1308622891(32);
    t_3439329970.counter = 0;
    t_3439329970.data = new Array(chckRange(correctSizeHEX60gensym17_3439330022, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_3439330022, 0, 2147483647) ; ++i) { t_3439329970.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3439330027 = [0];
    var index_3439330034 = rawGet_2818581106(t_3439329970, key_3439329971, hc_3439330027, 0);
    if ((index_3439330034 < 0)) {
    if (((t_3439329970.data).length == 0)) {
    var correctSizeHEX60gensym20_3439330083 = slotsNeeded_1308622891(32);
    t_3439329970.counter = 0;
    t_3439329970.data = new Array(chckRange(correctSizeHEX60gensym20_3439330083, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3439330083, 0, 2147483647) ; ++i) { t_3439329970.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818581582(t_3439329970)) {
    enlarge_2818581785(t_3439329970);
    index_3439330034 = rawGetKnownHC_2818582432(t_3439329970, key_3439329971, hc_3439330027[0]);
    }
    
    index_3439330034 = subInt(-1, index_3439330034);
    rawInsert_2818582191(t_3439329970, t_3439329970, "data", key_3439329971, val_3439329972, hc_3439330027[0], index_3439330034);
    t_3439329970.counter = addInt(t_3439329970.counter, 1);
    }
    
    result_3439329973 = t_3439329970.data[chckIndx(index_3439330034, 0, (t_3439329970.data).length - 1)]; result_3439329973_Idx = "Field2";

  return [result_3439329973, result_3439329973_Idx];

}

function isSome_3439330254(self_3439330256) {
  var result_3439330257 = false;

    result_3439330257 = self_3439330256.has;

  return result_3439330257;

}

function get_3439330245(self_3439330247, otherwise_3439330248) {
    var Temporary1;

  var result_3439330249 = 0;

    if (isSome_3439330254(self_3439330247)) {
    Temporary1 = self_3439330247.val;
    }
    else {
    Temporary1 = otherwise_3439330248;
    }
    
    result_3439330249 = Temporary1;

  return result_3439330249;

}

function parseEnum_3439330216(s_3439330218, default_3439330219) {
    var Temporary1;

  var result_3439330220 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3439330218))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3439330219;
      break;
    }
    result_3439330220 = Temporary1;

  return result_3439330220;

}

function getOption_3439330190(editor_3439330192, path_3439330193, default_3439330194) {
  var result_3439330200 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3439330192 == null)) {
      result_3439330200 = default_3439330194;
      break BeforeRet;
      }
      
      var nodeHEX60gensym22_3439330212 = HEX7BHEX7D_1627393316(editor_3439330192.options, nsuSplitString(path_3439330193, [46], -1));
      if ((nodeHEX60gensym22_3439330212 == null)) {
      result_3439330200 = default_3439330194;
      break BeforeRet;
      }
      
    };
    result_3439330200 = parseEnum_3439330216(getStr_1627390106(nodeHEX60gensym22_3439330212, []), default_3439330194);
    break BeforeRet;
  };

  return result_3439330200;

}

function color_3439330295(theme_3439330297, names_3439330298, default_3439330299) {
  var result_3439330300 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439330304 = [];
      var i_536872985 = 0;
      var L_536872986 = (names_3439330298).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872985 < L_536872986)) break Label3;
            name_3439330304 = names_3439330298[chckIndx(i_536872985, 0, (names_3439330298).length - 1)];
            if (contains_3221226054(theme_3439330297.colors, name_3439330304)) {
            result_3439330300 = nimCopy(result_3439330300, HEX5BHEX5D_3221226144(theme_3439330297.colors, name_3439330304), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872985 = addInt(i_536872985, 1);
            if (!(((names_3439330298).length == L_536872986))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439330300 = nimCopy(result_3439330300, color_2634022945(default_3439330299), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330300;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3439330415(theme_3439330417, names_3439330418, default_3439330419) {
  var result_3439330420 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3439330424 = [];
      var i_536872989 = 0;
      var L_536872990 = (names_3439330418).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872989 < L_536872990)) break Label3;
            name_3439330424 = names_3439330418[chckIndx(i_536872989, 0, (names_3439330418).length - 1)];
            if (contains_3221226054(theme_3439330417.colors, name_3439330424)) {
            result_3439330420 = nimCopy(result_3439330420, HEX5BHEX5D_3221226144(theme_3439330417.colors, name_3439330424), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872989 = addInt(i_536872989, 1);
            if (!(((names_3439330418).length == L_536872990))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3439330420 = nimCopy(result_3439330420, color_2634022963(default_3439330419), NTI2550136835);
    break BeforeRet;
  };

  return result_3439330420;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function rawGet_2818574416(t_2818574419, key_2818574420, hc_2818574421, hc_2818574421_Idx) {
  var result_2818574422 = 0;

  BeforeRet: {
    hc_2818574421[hc_2818574421_Idx] = hash_1325400236(key_2818574420);
    if ((hc_2818574421[hc_2818574421_Idx] == 0)) {
    hc_2818574421[hc_2818574421_Idx] = 314159265;
    }
    
    if (((t_2818574419.data).length == 0)) {
    result_2818574422 = -1;
    break BeforeRet;
    }
    
    var h_2818574492 = (hc_2818574421[hc_2818574421_Idx] & (t_2818574419.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0)) break Label2;
          if (((t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0 == hc_2818574421[hc_2818574421_Idx]) && (t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field1 == key_2818574420))) {
          result_2818574422 = h_2818574492;
          break BeforeRet;
          }
          
          h_2818574492 = nextTry_1308622883(h_2818574492, (t_2818574419.data).length - 1);
        }
    };
    result_2818574422 = subInt(-1, h_2818574492);
  };

  return result_2818574422;

}

function hasKey_2818574409(t_2818574412, key_2818574413) {
  var result_2818574414 = false;

    var hc_2818574415 = [0];
    result_2818574414 = (0 <= rawGet_2818574416(t_2818574412, key_2818574413, hc_2818574415, 0));

  return result_2818574414;

}

function contains_2818574403(t_2818574406, key_2818574407) {
  var result_2818574408 = false;

  BeforeRet: {
    result_2818574408 = hasKey_2818574409(t_2818574406, key_2818574407);
    break BeforeRet;
  };

  return result_2818574408;

}

function HEX5BHEX5D_2818574822(t_2818574825, key_2818574826) {
  var result_2818574827 = null;
  var result_2818574827_Idx = 0;

    var hcHEX60gensym22_2818574828 = [0];
    var indexHEX60gensym22_2818574835 = rawGet_2818574416(t_2818574825, key_2818574826, hcHEX60gensym22_2818574828, 0);
    if ((0 <= indexHEX60gensym22_2818574835)) {
    result_2818574827 = t_2818574825.data[chckIndx(indexHEX60gensym22_2818574835, 0, (t_2818574825.data).length - 1)]; result_2818574827_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818574826);
    }
    

  return [result_2818574827, result_2818574827_Idx];

}

function mustRehash_2818575209(t_2818575211) {
  var result_2818575212 = false;

    if (!((t_2818575211.counter < (t_2818575211.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575212 = ((mulInt((t_2818575211.data).length, 2) < mulInt(t_2818575211.counter, 3)) || (subInt((t_2818575211.data).length, t_2818575211.counter) < 4));

  return result_2818575212;

}

function rawInsert_2818575818(t_2818575822, data_2818575823, data_2818575823_Idx, key_2818575824, val_2818575825, hc_2818575826, h_2818575827) {
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field1 = key_2818575824;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field2 = val_2818575825;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field0 = hc_2818575826;

  
}

function enlarge_2818575412(t_2818575415) {
    var n_2818575418 = [];
    n_2818575418 = new Array(chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647) ; ++i) { n_2818575418[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818575415.data; t_2818575415.data = n_2818575418; n_2818575418 = Temporary1;    Label2: {
      var i_2818575498 = 0;
      var colontmp__536873019 = 0;
      colontmp__536873019 = (n_2818575418).length - 1;
      var res_536873020 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873020 <= colontmp__536873019)) break Label4;
            i_2818575498 = res_536873020;
            var eh_2818575576 = n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818575576)) {
            var j_2818575580 = (eh_2818575576 & (t_2818575415.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818575415.data[chckIndx(j_2818575580, 0, (t_2818575415.data).length - 1)].Field0)) break Label6;
                  j_2818575580 = nextTry_1308622883(j_2818575580, (t_2818575415.data).length - 1);
                }
            };
            rawInsert_2818575818(t_2818575415, t_2818575415, "data", n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field1, n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field2, eh_2818575576, j_2818575580);
            }
            
            res_536873020 = addInt(res_536873020, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576059(t_2818576062, key_2818576063, hc_2818576064) {
  var result_2818576065 = 0;

  BeforeRet: {
    if (((t_2818576062.data).length == 0)) {
    result_2818576065 = -1;
    break BeforeRet;
    }
    
    var h_2818576132 = (hc_2818576064 & (t_2818576062.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0)) break Label2;
          if (((t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0 == hc_2818576064) && (t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field1 == key_2818576063))) {
          result_2818576065 = h_2818576132;
          break BeforeRet;
          }
          
          h_2818576132 = nextTry_1308622883(h_2818576132, (t_2818576062.data).length - 1);
        }
    };
    result_2818576065 = subInt(-1, h_2818576132);
  };

  return result_2818576065;

}

function HEX5BHEX5DHEX3D_2818574980(t_2818574983, key_2818574984, val_2818574985) {
    if (((t_2818574983.data).length == 0)) {
    var correctSizeHEX60gensym43_2818575050 = slotsNeeded_1308622891(32);
    t_2818574983.counter = 0;
    t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818575055 = [0];
    var index_2818575062 = rawGet_2818574416(t_2818574983, key_2818574984, hc_2818575055, 0);
    if ((0 <= index_2818575062)) {
    t_2818574983.data[chckIndx(index_2818575062, 0, (t_2818574983.data).length - 1)].Field2 = val_2818574985;
    }
    else {
      if (((t_2818574983.data).length == 0)) {
      var correctSizeHEX60gensym46_2818575204 = slotsNeeded_1308622891(32);
      t_2818574983.counter = 0;
      t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818575209(t_2818574983)) {
      enlarge_2818575412(t_2818574983);
      index_2818575062 = rawGetKnownHC_2818576059(t_2818574983, key_2818574984, hc_2818575055[0]);
      }
      
      index_2818575062 = subInt(-1, index_2818575062);
      rawInsert_2818575818(t_2818574983, t_2818574983, "data", key_2818574984, val_2818574985, hc_2818575055[0], index_2818575062);
      t_2818574983.counter = addInt(t_2818574983.counter, 1);
    }
    

  
}

function initTable_2818576385(initialSize_2818576388) {
  var result_2818576394 = ({data: [], counter: 0});

    var correctSizeHEX60gensym54_2818576396 = slotsNeeded_1308622891(chckRange(initialSize_2818576388, 0, 2147483647));
    result_2818576394.counter = 0;
    result_2818576394.data = new Array(chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647) ; ++i) { result_2818576394.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818576394;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818576588(t_2818576591, key_2818576592, hc_2818576593, hc_2818576593_Idx) {
  var result_2818576594 = 0;

  BeforeRet: {
    hc_2818576593[hc_2818576593_Idx] = hash_1325400491(key_2818576592);
    if ((hc_2818576593[hc_2818576593_Idx] == 0)) {
    hc_2818576593[hc_2818576593_Idx] = 314159265;
    }
    
    if (((t_2818576591.data).length == 0)) {
    result_2818576594 = -1;
    break BeforeRet;
    }
    
    var h_2818576662 = (hc_2818576593[hc_2818576593_Idx] & (t_2818576591.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0)) break Label2;
          if (((t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0 == hc_2818576593[hc_2818576593_Idx]) && eqStrings(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field1, key_2818576592))) {
          result_2818576594 = h_2818576662;
          break BeforeRet;
          }
          
          h_2818576662 = nextTry_1308622883(h_2818576662, (t_2818576591.data).length - 1);
        }
    };
    result_2818576594 = subInt(-1, h_2818576662);
  };

  return result_2818576594;

}

function hasKey_2818576581(t_2818576584, key_2818576585) {
  var result_2818576586 = false;

    var hc_2818576587 = [0];
    result_2818576586 = (0 <= rawGet_2818576588(t_2818576584, key_2818576585, hc_2818576587, 0));

  return result_2818576586;

}

function contains_2818576575(t_2818576578, key_2818576579) {
  var result_2818576580 = false;

  BeforeRet: {
    result_2818576580 = hasKey_2818576581(t_2818576578, key_2818576579);
    break BeforeRet;
  };

  return result_2818576580;

}

function HEX5BHEX5D_2818576983(t_2818576986, key_2818576987) {
  var result_2818576988 = null;

    var hcHEX60gensym22_2818576989 = [0];
    var indexHEX60gensym22_2818576996 = rawGet_2818576588(t_2818576986, key_2818576987, hcHEX60gensym22_2818576989, 0);
    if ((0 <= indexHEX60gensym22_2818576996)) {
    result_2818576988 = t_2818576986.data[chckIndx(indexHEX60gensym22_2818576996, 0, (t_2818576986.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818576987);
    }
    

  return result_2818576988;

}

function mustRehash_2818577366(t_2818577368) {
  var result_2818577369 = false;

    if (!((t_2818577368.counter < (t_2818577368.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577369 = ((mulInt((t_2818577368.data).length, 2) < mulInt(t_2818577368.counter, 3)) || (subInt((t_2818577368.data).length, t_2818577368.counter) < 4));

  return result_2818577369;

}

function rawInsert_2818577975(t_2818577979, data_2818577980, data_2818577980_Idx, key_2818577981, val_2818577982, hc_2818577983, h_2818577984) {
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field1 = nimCopy(null, key_2818577981, NTI33554449);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2 = nimCopy(data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2, val_2818577982, NTI2852126723);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field0 = hc_2818577983;

  
}

function enlarge_2818577569(t_2818577572) {
    var n_2818577575 = [];
    n_2818577575 = new Array(chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647) ; ++i) { n_2818577575[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818577572.data; t_2818577572.data = n_2818577575; n_2818577575 = Temporary1;    Label2: {
      var i_2818577655 = 0;
      var colontmp__536873026 = 0;
      colontmp__536873026 = (n_2818577575).length - 1;
      var res_536873027 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873027 <= colontmp__536873026)) break Label4;
            i_2818577655 = res_536873027;
            var eh_2818577733 = n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577733)) {
            var j_2818577737 = (eh_2818577733 & (t_2818577572.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577572.data[chckIndx(j_2818577737, 0, (t_2818577572.data).length - 1)].Field0)) break Label6;
                  j_2818577737 = nextTry_1308622883(j_2818577737, (t_2818577572.data).length - 1);
                }
            };
            rawInsert_2818577975(t_2818577572, t_2818577572, "data", n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field1, n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field2, eh_2818577733, j_2818577737);
            }
            
            res_536873027 = addInt(res_536873027, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578216(t_2818578219, key_2818578220, hc_2818578221) {
  var result_2818578222 = 0;

  BeforeRet: {
    if (((t_2818578219.data).length == 0)) {
    result_2818578222 = -1;
    break BeforeRet;
    }
    
    var h_2818578289 = (hc_2818578221 & (t_2818578219.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0)) break Label2;
          if (((t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0 == hc_2818578221) && eqStrings(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field1, key_2818578220))) {
          result_2818578222 = h_2818578289;
          break BeforeRet;
          }
          
          h_2818578289 = nextTry_1308622883(h_2818578289, (t_2818578219.data).length - 1);
        }
    };
    result_2818578222 = subInt(-1, h_2818578289);
  };

  return result_2818578222;

}

function HEX5BHEX5DHEX3D_2818577137(t_2818577140, key_2818577141, val_2818577142) {
    if (((t_2818577140.data).length == 0)) {
    var correctSizeHEX60gensym68_2818577207 = slotsNeeded_1308622891(32);
    t_2818577140.counter = 0;
    t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818577212 = [0];
    var index_2818577219 = rawGet_2818576588(t_2818577140, key_2818577141, hc_2818577212, 0);
    if ((0 <= index_2818577219)) {
    t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2 = nimCopy(t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2, val_2818577142, NTI2852126723);
    }
    else {
      if (((t_2818577140.data).length == 0)) {
      var correctSizeHEX60gensym71_2818577361 = slotsNeeded_1308622891(32);
      t_2818577140.counter = 0;
      t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818577366(t_2818577140)) {
      enlarge_2818577569(t_2818577140);
      index_2818577219 = rawGetKnownHC_2818578216(t_2818577140, key_2818577141, hc_2818577212[0]);
      }
      
      index_2818577219 = subInt(-1, index_2818577219);
      rawInsert_2818577975(t_2818577140, t_2818577140, "data", key_2818577141, val_2818577142, hc_2818577212[0], index_2818577219);
      t_2818577140.counter = addInt(t_2818577140.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818578766(result_2818578768, result_2818578768_Idx, value_2818578769, specifier_2818578770) {
    formatValue_721420459(result_2818578768, result_2818578768_Idx, HEX24_2885681319(value_2818578769), specifier_2818578770);

  
}

function insert_2818574279(x_2818574281, x_2818574281_Idx, item_2818574282, i_2818574283) {
    var it_2818574303 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574281[x_2818574281_Idx] = x_2818574281[x_2818574281_Idx] || []; x_2818574281[x_2818574281_Idx].splice(i_2818574283, 0, it_2818574303);
    x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)] = nimCopy(x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)], item_2818574282, NTI2818572422);

  
}

function splitAt_2818574217(line_2818574218, line_2818574218_Idx, index_2818574219) {
    var index_2818574220 = index_2818574219;
    var i_2818574221 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && ((line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length <= index_2818574220))) break Label2;
          index_2818574220 = subInt(index_2818574220, (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length);
          i_2818574221 = addInt(i_2818574221, 1);
        }
    };
    if ((((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && !((index_2818574220 == 0))) && !((index_2818574220 == (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574236 = nimCopy(null, line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)], NTI2818572422);
    line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574220, 1))), NTI33554449);
    copy_2818574236.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574236.text, HEX2EHEX2E_1040187488(index_2818574220, 1)), NTI33554449);
    insert_2818574279(line_2818574218[line_2818574218_Idx], "parts", copy_2818574236, chckRange(addInt(i_2818574221, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574313(line_2818574314, line_2818574314_Idx, first_2818574315, last_2818574316, scope_2818574317, priority_2818574318) {
    var index_2818574319 = 0;
    Label1: {
      var i_2818574327 = 0;
      var colontmp__536873033 = 0;
      colontmp__536873033 = (line_2818574314[line_2818574314_Idx].parts).length - 1;
      var res_536873034 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536873034 <= colontmp__536873033)) break Label3;
            i_2818574327 = res_536873034;
            if ((((first_2818574315 <= index_2818574319) && (addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length) <= last_2818574316)) && (priority_2818574318 < line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority))) {
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574317, NTI33554449);
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority = priority_2818574318;
            }
            
            index_2818574319 = addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length);
            res_536873034 = addInt(res_536873034, 1);
          }
      };
    };

  
}

function getStyledText_2818574341(self_2818574342, i_2818574343) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574344 = [null];

  BeforeRet: {
    if (contains_2818574403(self_2818574342.styledTextCache, i_2818574343)) {
    result_2818574344[0] = (Temporary1 = HEX5BHEX5D_2818574822(self_2818574342.styledTextCache, i_2818574343), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574925 = nimCopy(null, self_2818574342.lines[chckIndx(i_2818574343, 0, (self_2818574342.lines).length - 1)], NTI33554449);
      result_2818574344[0] = {index: i_2818574343, parts: [{text: nimCopy(null, line_2818574925, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      HEX5BHEX5DHEX3D_2818574980(self_2818574342.styledTextCache, i_2818574343, result_2818574344[0]);
      var regexes_2818576410 = [initTable_2818576385(32)];
      if ((((self_2818574342.tsParser == null) || (self_2818574342.highlightQuery == null)) || (self_2818574342.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818576442 = null;
        var colontmp__536873011 = [];
        colontmp__536873011 = matches_2885681272(self_2818574342.highlightQuery, self_2818574342.currentTree.rootNode, {Field0: {Field0: i_2818574343, Field1: 0}, Field1: {Field0: i_2818574343, Field1: (line_2818574925).length}});
        var i_536873013 = 0;
        var L_536873014 = (colontmp__536873011).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536873013 < L_536873014)) break Label4;
              match_2818576442 = colontmp__536873011[chckIndx(i_536873013, 0, (colontmp__536873011).length - 1)];
              var predicates_2818576443 = self_2818574342.highlightQuery.predicatesForPattern(match_2818576442.pattern);
              Label5: {
                var capture_2818576466 = null;
                var colontmp__536873006 = [];
                colontmp__536873006 = match_2818576442.captures;
                var i_536873008 = 0;
                var L_536873009 = (colontmp__536873006).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536873008 < L_536873009)) break Label7;
                      capture_2818576466 = colontmp__536873006[chckIndx(i_536873008, 0, (colontmp__536873006).length - 1)];
                      Label8: {
                        var scope_2818576467 = capture_2818576466.name;
                        var node_2818576468 = capture_2818576466.node;
                        var matches_2818576469 = true;
                        Label9: {
                          var predicate_2818576492 = null;
                          var i_536873003 = 0;
                          var L_536873004 = (predicates_2818576443).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536873003 < L_536873004)) break Label11;
                                predicate_2818576492 = predicates_2818576443[chckIndx(i_536873003, 0, (predicates_2818576443).length - 1)];
                                if (!(matches_2818576469)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818576515 = null;
                                  var colontmp__536872997 = [];
                                  colontmp__536872997 = predicate_2818576492.operands;
                                  var i_536872999 = 0;
                                  var L_536873000 = (colontmp__536872997).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872999 < L_536873000)) break Label14;
                                        operand_2818576515 = colontmp__536872997[chckIndx(i_536872999, 0, (colontmp__536872997).length - 1)];
                                        var value_2818576516 = cstrToNimstr(operand_2818576515.type);
                                        if (!((operand_2818576515.name == scope_2818576467))) {
                                        matches_2818576469 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818576492.operator))) {
                                        case "match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary15 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818577086 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818577086);
                                          Temporary15 = regex_2818577086;
                                          }
                                          
                                          var regex_2818578542 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818578543 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!((matchLen_2852126756(nodeText_2818578543, regex_2818578542, 0) == (nodeText_2818578543).length))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary16 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818578689 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818578689);
                                          Temporary16 = regex_2818578689;
                                          }
                                          
                                          var regex_2818578746 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818578747 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if ((matchLen_2852126756(nodeText_2818578747, regex_2818578746, 0) == (nodeText_2818578747).length)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818578748 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!(eqStrings(nodeText_2818578748, value_2818576516))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818578749 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (eqStrings(nodeText_2818578749, value_2818576516)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818578754 = [mnewString(0)];
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818578754, 0, predicate_2818576492.operator);
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818578754[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872999 = addInt(i_536872999, 1);
                                        if (!(((colontmp__536872997).length == L_536873000))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848874(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818578755 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                var fmtRes_2818578760 = [mnewString(0)];
                                formatValue_2701131945(fmtRes_2818578760, 0, match_2818576442.pattern, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818578760, 0, nodeText_2818578755, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [39,32]);;
                                formatValue_2818578766(fmtRes_2818578760, 0, node_2818576468, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2785018294(fmtRes_2818578760, 0, matches_2818576469, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818578760[0], NTI33554449)]);
                                }
                                
                                i_536873003 = addInt(i_536873003, 1);
                                if (!(((predicates_2818576443).length == L_536873004))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818576469)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818578776 = getRange_2885681336(node_2818576468);
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field0.Field0 < i_2818574343)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        Temporary17 = nodeRange_2818578776.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574925).length;
                        }
                        }
                        var first_2818578777 = Temporary17;
                        if ((nodeRange_2818578776.Field1.Field0 < i_2818574343)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        Temporary18 = nodeRange_2818578776.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574925).length;
                        }
                        }
                        var last_2818578778 = Temporary18;
                        overrideStyle_2818574313(result_2818574344, 0, first_2818578777, last_2818578778, cstrToNimstr(scope_2818576467), match_2818576442.pattern);
                      };
                      i_536873008 = addInt(i_536873008, 1);
                      if (!(((colontmp__536873006).length == L_536873009))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536873013 = addInt(i_536873013, 1);
              if (!(((colontmp__536873011).length == L_536873014))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  return result_2818574344[0];

}

function getOrDefault_3439330610(t_3439330613, key_3439330614, default_3439330615) {
    var Temporary1;

  var result_3439330616 = [];

    var hcHEX60gensym25_3439330619 = [0];
    var indexHEX60gensym25_3439330626 = rawGet_2818581106(t_3439330613, key_3439330614, hcHEX60gensym25_3439330619, 0);
    if ((0 <= indexHEX60gensym25_3439330626)) {
    Temporary1 = t_3439330613.data[chckIndx(indexHEX60gensym25_3439330626, 0, (t_3439330613.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3439330615;
    }
    
    result_3439330616 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3439330616;

}

function map_3439330711(s_3439330714, op_3439330716) {
  var result_3439330717 = [];

    result_3439330717 = new Array(chckRange((s_3439330714).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3439330714).length, 0, 2147483647) ; ++i) { result_3439330717[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3439330732 = 0;
      var colontmp__536873037 = 0;
      colontmp__536873037 = (s_3439330714).length;
      var i_536873038 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873038 < colontmp__536873037)) break Label3;
            i_3439330732 = i_536873038;
            result_3439330717[chckIndx(i_3439330732, 0, (result_3439330717).length - 1)] = nimCopy(result_3439330717[chckIndx(i_3439330732, 0, (result_3439330717).length - 1)], op_3439330716(s_3439330714[chckIndx(i_3439330732, 0, (s_3439330714).length - 1)]), NTI3439329284);
            i_536873038 = addInt(i_536873038, 1);
          }
      };
    };

  return result_3439330717;

}

function clampToLine_3439329297(selection_3439329298, line_3439329299, lineLength_3439329300) {
    var Temporary1;
    var Temporary2;

  var result_3439329303 = {Field0: 0, Field1: 0};

    if ((selection_3439329298.Field0.Field0 < line_3439329299)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3439329298.Field0.Field0 == line_3439329299)) {
    Temporary1 = selection_3439329298.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3439329300;
    }
    }
    result_3439329303.Field0 = Temporary1;
    if ((selection_3439329298.Field1.Field0 < line_3439329299)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3439329298.Field1.Field0 == line_3439329299)) {
    Temporary2 = selection_3439329298.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3439329300;
    }
    }
    result_3439329303.Field1 = Temporary2;

  return result_3439329303;

}

function len_2818574169(line_2818574170) {
  var result_2818574171 = 0;

    result_2818574171 = 0;
    Label1: {
      var p_2818574194 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536873042 = 0;
      var L_536873043 = (line_2818574170.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873042 < L_536873043)) break Label3;
            p_2818574194 = line_2818574170.parts[chckIndx(i_536873042, 0, (line_2818574170.parts).length - 1)];
            result_2818574171 = addInt(result_2818574171, (p_2818574194.text).length);
            i_536873042 = addInt(i_536873042, 1);
            if (!(((line_2818574170.parts).length == L_536873043))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574171;

}

function contains_2449473918(selection_2449473919, cursor_2449473920) {
  var result_2449473921 = false;

    result_2449473921 = (HEX3CHEX3D_2449473882(selection_2449473919.Field0, cursor_2449473920) && HEX3CHEX3D_2449473882(cursor_2449473920, selection_2449473919.Field1));

  return result_2449473921;

}

function renderTextHighlight_3439329304(panel_3439329305, app_3439329306, startOffset_3439329307, endOffset_3439329308, line_3439329309, startIndex_3439329310, selection_3439329311, selectionClamped_3439329314, part_3439329315, color_3439329316, totalLineHeight_3439329317) {
  BeforeRet: {
    var startOffset_3439329318 = Math.floor(startOffset_3439329307);
    var endOffset_3439329319 = Math.ceil(endOffset_3439329308);
    var left_3439329320 = 0.0;
    var right_3439329321 = 0.0;
    if ((((startIndex_3439329310 < selectionClamped_3439329314.Field1) && (selectionClamped_3439329314.Field0 < addInt(startIndex_3439329310, (part_3439329315.text).length))) && (0 < (part_3439329315.text).length))) {
    left_3439329320 = (startOffset_3439329318 + ((nimMax(0, subInt(selectionClamped_3439329314.Field0, startIndex_3439329310)) / ((part_3439329315.text).length - 0.0)) * (endOffset_3439329319 - startOffset_3439329318)));
    right_3439329321 = (startOffset_3439329318 + ((nimMin((part_3439329315.text).length, subInt(selectionClamped_3439329314.Field1, startIndex_3439329310)) / ((part_3439329315.text).length - 0.0)) * (endOffset_3439329319 - startOffset_3439329318)));
    }
    else {
    if (((((part_3439329315.text).length == 0) && contains_2449473918(selection_3439329311, {Field0: line_3439329309, Field1: startIndex_3439329310})) && !(isEmpty_2449473911(selection_3439329311)))) {
    left_3439329320 = startOffset_3439329318;
    right_3439329321 = Math.ceil((startOffset_3439329318 + (charWidth_2768240799(app_3439329306.platform) * 0.5)));
    }
    else {
      break BeforeRet;
    }
    }
    if ((left_3439329320 == right_3439329321)) {
    break BeforeRet;
    }
    
    add_2785018068(panel_3439329305, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017869), left: left_3439329320, right: right_3439329321, bottom: totalLineHeight_3439329317, fillBackground: true, backgroundColor: nimCopy(null, color_3439329316, NTI2550136835), lastHierarchyChange: panel_3439329305.lastHierarchyChange, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});
  };

  
}

function renderTextHighlight_3439329322(panel_3439329323, app_3439329324, startOffset_3439329325, endOffset_3439329326, line_3439329327, startIndex_3439329328, selections_3439329329, selectionClamped_3439329332, part_3439329333, color_3439329334, totalLineHeight_3439329335) {
    Label1: {
      var i_3439329343 = 0;
      var colontmp__536873046 = 0;
      colontmp__536873046 = (selections_3439329329).length;
      var i_536873047 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873047 < colontmp__536873046)) break Label3;
            i_3439329343 = i_536873047;
            renderTextHighlight_3439329304(panel_3439329323, app_3439329324, startOffset_3439329325, endOffset_3439329326, line_3439329327, startIndex_3439329328, selections_3439329329[chckIndx(i_3439329343, 0, (selections_3439329329).length - 1)], selectionClamped_3439329332[chckIndx(i_3439329343, 0, (selectionClamped_3439329332).length - 1)], part_3439329333, color_3439329334, totalLineHeight_3439329335);
            i_536873047 = addInt(i_536873047, 1);
          }
      };
    };

  
}

function renderCompletions_3439329442(self_3439329443, app_3439329444, contentPanel_3439329445, cursorBounds_3439329446, frameIndex_3439329447) {
    
function renderLine_3439329784(lineWidget_3439329785, i_3439329786, down_3439329787, frameIndex_3439329788) {
      var result_3439329789 = false;

      BeforeRet: {
        var top_3439329790 = ((subInt(i_3439329786, self_3439329443.previousBaseIndex) * totalLineHeight_3439329448) + self_3439329443.scrollOffset);
        if ((i_3439329786 == self_3439329443.selectedCompletion)) {
        lineWidget_3439329785.fillBackground = true;
        lineWidget_3439329785.backgroundColor = nimCopy(lineWidget_3439329785.backgroundColor, selectedBackgroundColor_3439329613, NTI2550136835);
        }
        
        var completion_3439329791 = nimCopy(null, self_3439329443.completions[chckIndx(i_3439329786, 0, (self_3439329443.completions).length - 1)], NTI2919235630);
        var nameWidget_3439329792 = createPartWidget_3439329344(completion_3439329791.name, 0.0, ((completion_3439329791.name).length * charWidth_3439329449), totalLineHeight_3439329448, nameColor_3439329756, frameIndex_3439329788);
        add_2785018068(lineWidget_3439329785, nameWidget_3439329792);
        var scopeWidget_3439329793 = createPartWidget_3439329344(completion_3439329791.scope, (-((completion_3439329791.scope).length) * charWidth_3439329449), totalLineHeight_3439329448, ((completion_3439329791.scope).length * charWidth_3439329449), scopeColor_3439329768, frameIndex_3439329788);
        scopeWidget_3439329793.anchor.Field0.x = 1.0;
        scopeWidget_3439329793.anchor.Field1.x = 1.0;
        add_2785018068(lineWidget_3439329785, scopeWidget_3439329793);
        self_3439329443.lastCompletionWidgets.push({Field0: i_3439329786, Field1: lineWidget_3439329785});;
        result_3439329789 = true;
        break BeforeRet;
      };

      return result_3439329789;

    }

    var totalLineHeight_3439329448 = totalLineHeight_2768240810(app_3439329444.platform);
    var charWidth_3439329449 = charWidth_2768240799(app_3439329444.platform);
    var backgroundColor_3439329607 = color_3439329450(app_3439329444.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var selectedBackgroundColor_3439329613 = color_3439329450(app_3439329444.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var nameColor_3439329756 = tokenColor_3439329618(app_3439329444.theme, [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], rgb_2550136919(255, 255, 255));
    var textColor_3439329762 = color_3439329450(app_3439329444.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var scopeColor_3439329768 = color_3439329450(app_3439329444.theme, [115,116,114,105,110,103], rgb_2550136919(175, 255, 175));
    var panel_3439329769 = {left: cursorBounds_3439329446.x, top: (cursorBounds_3439329446.y + cursorBounds_3439329446.h), right: (cursorBounds_3439329446.x + (charWidth_3439329449 * 60.0)), bottom: ((cursorBounds_3439329446.y + cursorBounds_3439329446.h) + (totalLineHeight_3439329448 * 20.0)), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3439329607, NTI2550136835), lastHierarchyChange: frameIndex_3439329447, maskContent: true, layout: {kind: 0}, m_type: NTI2785017871, children: [], parent: null, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    layoutWidget_2785018519(panel_3439329769, contentPanel_3439329445.lastBounds, frameIndex_3439329447, app_3439329444.platform.layoutOptions);
    add_2785018068(contentPanel_3439329445, panel_3439329769);
    self_3439329443.lastCompletionsWidget = panel_3439329769;
    updateBaseIndexAndScrollOffset_3439329351(panel_3439329769, self_3439329443, "completionsBaseIndex", self_3439329443, "completionsScrollOffset", (self_3439329443.completions).length, totalLineHeight_3439329448, self_3439329443.scrollToCompletion);
    self_3439329443.scrollToCompletion = nimCopy(self_3439329443.scrollToCompletion, none_3003121842(), NTI1191183280);
    if (self_3439329443.lastCompletionWidgets.length < 0) { for (var i = self_3439329443.lastCompletionWidgets.length ; i < 0 ; ++i) self_3439329443.lastCompletionWidgets.push({Field0: 0, Field1: null}); }
               else { self_3439329443.lastCompletionWidgets.length = 0; };
    createLinesInPanel_3439329412(app_3439329444, panel_3439329769, self_3439329443.completionsBaseIndex, self_3439329443.completionsScrollOffset, (self_3439329443.completions).length, frameIndex_3439329447, true, renderLine_3439329784);

  
}

function updateWidget_3439329801(self_3439329802, app_3439329803, widget_3439329804, frameIndex_3439329805) {
    var Temporary1;
    
function HEX3Aanonymous_3439329835(wf_3439329846) {
      var result_3439329849 = [];

        result_3439329849 = nimCopy(null, ([32,45,32] || []).concat(wf_3439329846.name || []), NTI33554449);

      return result_3439329849;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary12;
    var Temporary14;
    var Temporary15;
    var Temporary16;
    
function renderLine_3439330532(lineWidget_3439330533, i_3439330534, down_3439330535, frameIndex_3439330536) {
        
function HEX3Aanonymous_3439330680(s_3439330688) {
          var result_3439330691 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3439330691 = nimCopy(result_3439330691, normalized_2449473905(s_3439330688), NTI2449473548);

          return result_3439330691;

        }
        
function HEX3Aanonymous_3439330700(s_3439330707) {
          var result_3439330710 = {Field0: 0, Field1: 0};

            result_3439330710 = nimCopy(result_3439330710, clampToLine_3439329297(s_3439330707, i_3439330534, len_2818574169(styledText_3439330539)), NTI3439329284);

          return result_3439330710;

        }
        
function HEX3Aanonymous_3439330819(s_3439330827) {
          var result_3439330830 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3439330830 = nimCopy(result_3439330830, normalized_2449473905(s_3439330827), NTI2449473548);

          return result_3439330830;

        }
        
function HEX3Aanonymous_3439330839(s_3439330846) {
          var result_3439330849 = {Field0: 0, Field1: 0};

            result_3439330849 = nimCopy(result_3439330849, clampToLine_3439329297(s_3439330846, i_3439330534, len_2818574169(styledText_3439330539)), NTI3439329284);

          return result_3439330849;

        }
        var Temporary1;
                        var Temporary8;
                var Temporary9;

      var result_3439330537 = false;

      BeforeRet: {
        var top_3439330538 = ((subInt(i_3439330534, self_3439329802.previousBaseIndex) * totalLineHeight_3439329807) + self_3439329802.scrollOffset);
        if (sizeToContent_3439329815) {
        lineWidget_3439330533.sizeToContent = true;
        }
        
        var styledText_3439330539 = getStyledText_2818574341(self_3439329802.document, i_3439330534);
        var selectionsNormalizedOnLine_3439330699 = map_2818572735(getOrDefault_3439330610(selectionsPerLine_3439329926[0], i_3439330534, []), HEX3Aanonymous_3439330680);
        var selectionsClampedOnLine_3439330742 = map_3439330711(selectionsNormalizedOnLine_3439330699, HEX3Aanonymous_3439330700);
        var highlightsNormalizedOnLine_3439330838 = map_2818572735(getOrDefault_3439330610(highlightsPerLine_3439330181, i_3439330534, []), HEX3Aanonymous_3439330819);
        var highlightsClampedOnLine_3439330856 = map_3439330711(highlightsNormalizedOnLine_3439330838, HEX3Aanonymous_3439330839);
        if ((!((lineNumbers_3439330259 == 0)) && (cursorLine_3439330262 == i_3439330534))) {
        var partWidget_3439330861 = createPartWidget_3439329344(HEX24_369098760(i_3439330534), 0.0, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
        add_2785018068(lineWidget_3439330533, partWidget_3439330861);
        }
        else {
          switch (lineNumbers_3439330259) {
          case 1:
            var text_3439330862 = HEX24_369098760(i_3439330534);
            var x_3439330863 = max_33555646(0.0, (lineNumberBounds_3439330269.x - ((text_3439330862).length * charWidth_3439329808)));
            var partWidget_3439330864 = createPartWidget_3439329344(text_3439330862, x_3439330863, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
            add_2785018068(lineWidget_3439330533, partWidget_3439330864);
            break;
          case 2:
            var text_3439330865 = HEX24_369098760(absInt(subInt(i_3439330534, cursorLine_3439330262)));
            var x_3439330866 = max_33555646(0.0, (lineNumberBounds_3439330269.x - ((text_3439330865).length * charWidth_3439329808)));
            var partWidget_3439330867 = createPartWidget_3439329344(text_3439330865, x_3439330866, lineNumberBounds_3439330269.x, totalLineHeight_3439329807, textColor_3439329814, frameIndex_3439330536);
            add_2785018068(lineWidget_3439330533, partWidget_3439330867);
            break;
          default: 
            break;
          }
        }
        
        if ((lineNumbers_3439330259 == 0)) {
        Temporary1 = 0.0;
        }
        else {
        Temporary1 = (lineNumberBounds_3439330269.x + lineNumberPadding_3439330263);
        }
        
        var startOffset_3439330872 = [Temporary1];
        var startIndex_3439330873 = 0;
        Label2: {
          var partIndex_3439330879 = 0;
          var part_3439330880 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
          var i_536872980 = 0;
          var L_536872981 = (styledText_3439330539.parts).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872980 < L_536872981)) break Label4;
                partIndex_3439330879 = i_536872980;
                part_3439330880 = nimCopy(part_3439330880, styledText_3439330539.parts[chckIndx(i_536872980, 0, (styledText_3439330539.parts).length - 1)], NTI2818572422);
                var width_3439330881 = ((part_3439330880.text).length * charWidth_3439329808);
                renderTextHighlight_3439329322(lineWidget_3439330533, app_3439329803, startOffset_3439330872[0], (startOffset_3439330872[0] + width_3439330881), i_3439330534, startIndex_3439330873, selectionsNormalizedOnLine_3439330699, selectionsClampedOnLine_3439330742, part_3439330880, selectionColor_3439330290, totalLineHeight_3439329807);
                renderTextHighlight_3439329322(lineWidget_3439330533, app_3439329803, startOffset_3439330872[0], (startOffset_3439330872[0] + width_3439330881), i_3439330534, startIndex_3439330873, highlightsNormalizedOnLine_3439330838, highlightsClampedOnLine_3439330856, part_3439330880, highlightColor_3439330410, totalLineHeight_3439329807);
                Label5: {
                  var selection_3439330961 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                  var colontmp__536872976 = [];
                  colontmp__536872976 = getOrDefault_3439330610(selectionsPerLine_3439329926[0], i_3439330534, []);
                  var i_536872977 = 0;
                  var L_536872978 = (colontmp__536872976).length;
                  Label6: {
                      Label7: while (true) {
                      if (!(i_536872977 < L_536872978)) break Label7;
                        selection_3439330961 = colontmp__536872976[chckIndx(i_536872977, 0, (colontmp__536872976).length - 1)];
                        if ((((selection_3439330961.Field1.Field0 == i_3439330534) && (startIndex_3439330873 <= selection_3439330961.Field1.Field1)) && (selection_3439330961.Field1.Field1 <= addInt(startIndex_3439330873, (part_3439330880.text).length)))) {
                        if (((part_3439330880.text).length == 0)) {
                        Temporary8 = 0.0;
                        }
                        else {
                        Temporary8 = ((subInt(selection_3439330961.Field1.Field1, startIndex_3439330873) / (part_3439330880.text).length) * width_3439330881);
                        }
                        
                        var offsetFromPartStart_3439330962 = Temporary8;
                        add_2785018068(lineWidget_3439330533, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017869), left: (startOffset_3439330872[0] + offsetFromPartStart_3439330962), right: ((startOffset_3439330872[0] + offsetFromPartStart_3439330962) + (cursorWidth_3439330284 * charWidth_3439329808)), bottom: totalLineHeight_3439329807, fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3439330530, NTI2550136835), lastHierarchyChange: frameIndex_3439330536, layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});
                        cursorBounds_3439330531 = nimCopy(cursorBounds_3439330531, rect_2147483666((startOffset_3439330872[0] + offsetFromPartStart_3439330962), top_3439330538, (charWidth_3439329808 * cursorWidth_3439330284), lineHeight_3439329806), NTI2147483653);
                        }
                        
                        i_536872977 = addInt(i_536872977, 1);
                        if (!(((colontmp__536872976).length == L_536872978))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (((part_3439330880.scope).length == 0)) {
                Temporary9 = textColor_3439329814;
                }
                else {
                Temporary9 = tokenColor_3439330963(app_3439329803.theme, part_3439330880.scope, rgb_2550136919(255, 200, 200));
                }
                
                var color_3439331003 = nimCopy(null, Temporary9, NTI2550136835);
                var partWidget_3439331004 = createPartWidget_3439329344(part_3439330880.text, startOffset_3439330872[0], width_3439330881, totalLineHeight_3439329807, color_3439331003, frameIndex_3439330536);
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.x = partWidget_3439331004.left;
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.y = lineWidget_3439330533.top;
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.w = (partWidget_3439331004.right - partWidget_3439331004.left);
                styledText_3439330539.parts[chckIndx(partIndex_3439330879, 0, (styledText_3439330539.parts).length - 1)].bounds.h = (lineWidget_3439330533.bottom - lineWidget_3439330533.top);
                HEX2BHEX3D_855640304(startOffset_3439330872, 0, width_3439330881);
                startIndex_3439330873 = addInt(startIndex_3439330873, (part_3439330880.text).length);
                add_2785018068(lineWidget_3439330533, partWidget_3439331004);
                i_536872980 = addInt(i_536872980, 1);
                if (!(((styledText_3439330539.parts).length == L_536872981))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        self_3439329802.lastRenderedLines.push(styledText_3439330539);;
        result_3439330537 = true;
        break BeforeRet;
      };

      return result_3439330537;

    }

  BeforeRet: {
    var lineHeight_3439329806 = lineHeight_2768240794(app_3439329803.platform);
    var totalLineHeight_3439329807 = totalLineHeight_2768240810(app_3439329803.platform);
    var charWidth_3439329808 = charWidth_2768240799(app_3439329803.platform);
    var textColor_3439329814 = color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var sizeToContent_3439329815 = widget_3439329804.sizeToContent;
    var headerPanel_3439329816 = null;
    var headerPart1Text_3439329817 = null;
    var headerPart2Text_3439329818 = null;
    var contentPanel_3439329819 = null;
    if ((len_2785018025(widget_3439329804) == 0)) {
    headerPanel_3439329816 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3439329807, lastHierarchyChange: frameIndex_3439329805, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3439329804, headerPanel_3439329816);
    headerPart1Text_3439329817 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3439329805, foregroundColor: nimCopy(null, textColor_3439329814, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3439329816, headerPart1Text_3439329817);
    headerPart2Text_3439329818 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3439329805, foregroundColor: nimCopy(null, textColor_3439329814, NTI2550136835), m_type: NTI2785017879, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(headerPanel_3439329816, headerPart2Text_3439329818);
    contentPanel_3439329819 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3439329807, lastHierarchyChange: frameIndex_3439329805, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3439329819.maskContent = true;
    add_2785018068(widget_3439329804, contentPanel_3439329819);
    layoutWidget_2785018519(headerPanel_3439329816, widget_3439329804.lastBounds, frameIndex_3439329805, app_3439329803.platform.layoutOptions);
    layoutWidget_2785018519(contentPanel_3439329819, widget_3439329804.lastBounds, frameIndex_3439329805, app_3439329803.platform.layoutOptions);
    }
    else {
      headerPanel_3439329816 = HEX5BHEX5D_2785018021(widget_3439329804, 0);
      headerPart1Text_3439329817 = HEX5BHEX5D_2785018021(headerPanel_3439329816, 0);
      headerPart2Text_3439329818 = HEX5BHEX5D_2785018021(headerPanel_3439329816, 1);
      contentPanel_3439329819 = HEX5BHEX5D_2785018021(widget_3439329804, 1);
    }
    
    if (self_3439329802.renderHeader) {
    headerPanel_3439329816.bottom = totalLineHeight_3439329807;
    contentPanel_3439329819.top = totalLineHeight_3439329807;
    if (active_2415919218(self_3439329802)) {
    Temporary1 = color_3439329450(app_3439329803.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3439329450(app_3439329803.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3439329830 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018349(headerPanel_3439329816, color_3439329830, frameIndex_3439329805);
    var workspaceName_3439329873 = get_2348810295(map_1291854424(self_3439329802.document.workspace, HEX3Aanonymous_3439329835), []);
    if (((self_3439329802.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3439329802.currentMode;
    }
    
    var mode_3439329874 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3439329879 = [mnewString(0)];
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    formatValue_721420459(fmtRes_3439329879, 0, mode_3439329874, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3439329879, 0, self_3439329802.document.filename, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    formatValue_721420459(fmtRes_3439329879, 0, workspaceName_3439329873, []);
    fmtRes_3439329879[0].push.apply(fmtRes_3439329879[0], [32]);;
    headerPart1Text_3439329817.text = nimCopy(null, fmtRes_3439329879[0], NTI33554449);
    var fmtRes_3439329884 = [mnewString(0)];
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32]);;
    formatValue_2818572415(fmtRes_3439329884, 0, selection_2818572805(self_3439329802), []);
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32,45,32]);;
    formatValue_2701131945(fmtRes_3439329884, 0, self_3439329802.id, []);
    fmtRes_3439329884[0].push.apply(fmtRes_3439329884[0], [32]);;
    headerPart2Text_3439329818.text = nimCopy(null, fmtRes_3439329884[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018357(headerPanel_3439329816, frameIndex_3439329805);
    }
    else {
      headerPanel_3439329816.bottom = 0.0;
      contentPanel_3439329819.top = 0.0;
    }
    
    self_3439329802.lastContentBounds = nimCopy(self_3439329802.lastContentBounds, contentPanel_3439329819.lastBounds, NTI2147483653);
    widget_3439329804.lastHierarchyChange = nimMax(widget_3439329804.lastHierarchyChange, headerPanel_3439329816.lastHierarchyChange);
    contentPanel_3439329819.sizeToContent = sizeToContent_3439329815;
    if (active_2415919218(self_3439329802)) {
    Temporary3 = color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3439329450(app_3439329803.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018349(contentPanel_3439329819, Temporary3, frameIndex_3439329805);
      if (changed_2785018520(contentPanel_3439329819, frameIndex_3439329805)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3439329802);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3439329803.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3439329802);
    setLen_2785018061(contentPanel_3439329819, 0);
    if (!(self_3439329802.disableScrolling)) {
    updateBaseIndexAndScrollOffset_3439329351(contentPanel_3439329819, self_3439329802, "previousBaseIndex", self_3439329802, "scrollOffset", (self_3439329802.document.lines).length, totalLineHeight_3439329807, none_3003121842());
    }
    
    var selectionsPerLine_3439329926 = [initTable_3439329915(32)];
    Label6: {
      var s_3439329930 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872970 = [];
      colontmp__536872970 = selections_2818572802(self_3439329802);
      var i_536872971 = 0;
      var L_536872972 = (colontmp__536872970).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872971 < L_536872972)) break Label8;
            s_3439329930 = colontmp__536872970[chckIndx(i_536872971, 0, (colontmp__536872970).length - 1)];
            var sn_3439329931 = normalized_2449473905(s_3439329930);
            Label9: {
              var line_3439329936 = 0;
              var res_536872968 = sn_3439329931.Field0.Field0;
              Label10: {
                  Label11: while (true) {
                  if (!(res_536872968 <= sn_3439329931.Field1.Field0)) break Label11;
                    line_3439329936 = res_536872968;
                    var Temporary13 = nimCopy(null, s_3439329930, NTI2449473548);
                    (Temporary12 = mgetOrPut_3439329967(selectionsPerLine_3439329926[0], line_3439329936, []), Temporary12)[0][Temporary12[1]].push(Temporary13);;
                    res_536872968 = addInt(res_536872968, 1);
                  }
              };
            };
            i_536872971 = addInt(i_536872971, 1);
            if (!(((colontmp__536872970).length == L_536872972))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3439330181 = nimCopy(null, self_3439329802.searchResults, NTI2818572541);
    var lineNumbers_3439330259 = get_3439330245(self_3439329802.lineNumbers, getOption_3439330190(app_3439329803, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3439330259) {
    case 1:
      Temporary14 = addInt(self_3439329802.previousBaseIndex, ((((contentPanel_3439329819.lastBounds.h - self_3439329802.scrollOffset) / totalLineHeight_3439329807)) | 0));
      break;
    case 2:
      Temporary14 = 99;
      break;
    default: 
      Temporary14 = 0;
      break;
    }
    var maxLineNumber_3439330260 = Temporary14;
    var maxLineNumberLen_3439330261 = addInt((HEX24_369098760(maxLineNumber_3439330260)).length, 1);
    var cursorLine_3439330262 = selection_2818572805(self_3439329802).Field1.Field0;
    var lineNumberPadding_3439330263 = charWidth_3439329808;
    if (!((lineNumbers_3439330259 == 0))) {
    Temporary15 = vec2_2164261725((maxLineNumberLen_3439330261 * charWidth_3439329808), 0.0);
    }
    else {
    Temporary15 = vec2_2164261686();
    }
    
    var lineNumberBounds_3439330269 = nimCopy(null, Temporary15, NTI2164261152);
    if (self_3439329802.lastRenderedLines.length < 0) { for (var i = self_3439329802.lastRenderedLines.length ; i < 0 ; ++i) self_3439329802.lastRenderedLines.push(null); }
               else { self_3439329802.lastRenderedLines.length = 0; };
    var isWide_3439330283 = getOption_2818583615(app_3439329803, getContextWithMode_2818583609(self_3439329802, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3439330283) {
    Temporary16 = 1.0;
    }
    else {
    Temporary16 = 0.2;
    }
    
    var cursorWidth_3439330284 = Temporary16;
    var selectionColor_3439330290 = color_3439329450(app_3439329803.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3439330410 = color_3439330295(app_3439329803.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3439330530 = color_3439330415(app_3439329803.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    var cursorBounds_3439330531 = rect_2147483672(vec2_2164261686(), vec2_2164261686());
    var renderOnlyLinesInBounds_3439331026 = !(sizeToContent_3439329815);
    createLinesInPanel_3439329412(app_3439329803, contentPanel_3439329819, self_3439329802.previousBaseIndex, self_3439329802.scrollOffset, (self_3439329802.document.lines).length, frameIndex_3439329805, renderOnlyLinesInBounds_3439331026, renderLine_3439330532);
    if (self_3439329802.showCompletions) {
    renderCompletions_3439329442(self_3439329802, app_3439329803, contentPanel_3439329819, cursorBounds_3439330531, frameIndex_3439329805);
    }
    
    contentPanel_3439329819.lastHierarchyChange = frameIndex_3439329805;
    widget_3439329804.lastHierarchyChange = nimMax(widget_3439329804.lastHierarchyChange, contentPanel_3439329819.lastHierarchyChange);
    self_3439329802.lastContentBounds = nimCopy(self_3439329802.lastContentBounds, contentPanel_3439329819.lastBounds, NTI2147483653);
  };

  
}

function updateWidget_3405774854(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858) {
  
}

function updateWidget_3405774859(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858) {
    chckNilDisp(self_3405774855);
    if (isObj(self_3405774855.m_type, NTI3254779983)) {
    updateWidget_3472885956(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2969568641)) {
    updateWidget_3422553650(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2818572510)) {
    updateWidget_3439329801(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    else {
    if (isObj(self_3405774855.m_type, NTI2415919108)) {
    updateWidget_3405774854(self_3405774855, app_3405774856, widget_3405774857, frameIndex_3405774858);
    }
    }}}

  
}

function dirty_2483027986(self_2483027987) {
  var result_2483027988 = false;

    result_2483027988 = self_2483027987.mDirty;

  return result_2483027988;

}

function resetDirty_2483028016(self_2483028017) {
    self_2483028017.mDirty = false;

  
}

function pop_2785018009(s_2785018011, s_2785018011_Idx) {
  var result_2785018012 = null;

    var L_2785018016 = subInt((s_2785018011[s_2785018011_Idx]).length, 1);
    result_2785018012 = s_2785018011[s_2785018011_Idx][chckIndx(L_2785018016, 0, (s_2785018011[s_2785018011_Idx]).length - 1)];
    if (s_2785018011[s_2785018011_Idx].length < chckRange(L_2785018016, 0, 2147483647)) { for (var i = s_2785018011[s_2785018011_Idx].length ; i < chckRange(L_2785018016, 0, 2147483647) ; ++i) s_2785018011[s_2785018011_Idx].push(null); }
               else { s_2785018011[s_2785018011_Idx].length = chckRange(L_2785018016, 0, 2147483647); };

  return result_2785018012;

}

function pop_2785018006(self_2785018007) {
  var result_2785018008 = null;

    result_2785018008 = pop_2785018009(self_2785018007, "children");

  return result_2785018008;

}

function updateWidget_3456106526(self_3456106527, app_3456106528, widget_3456106529, frameIndex_3456106530) {
    var Temporary1;

    var textColor_3456106536 = color_3439329450(app_3456106528.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if ((len_2785018025(widget_3456106529) == 0)) {
    var text_3456106537 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3456106530, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3456106529, text_3456106537);
    Temporary1 = text_3456106537;
    }
    else {
    Temporary1 = HEX5BHEX5D_2785018021(widget_3456106529, 0);
    }
    
    var text_3456106538 = Temporary1;
    text_3456106538.text = nimCopy(null, self_3456106527.path, NTI33554449);
    updateForegroundColor_2785018335(text_3456106538, textColor_3456106536, frameIndex_3456106530);
    updateLastHierarchyChangeFromChildren_2785018357(text_3456106538, -1);

  
}

function updateWidget_3456106513(self_3456106514, app_3456106515, widget_3456106516, frameIndex_3456106517) {
    var Temporary1;

    var textColor_3456106523 = color_3439329450(app_3456106515.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if ((len_2785018025(widget_3456106516) == 0)) {
    var text_3456106524 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), lastHierarchyChange: frameIndex_3456106517, m_type: NTI2785017879, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3456106516, text_3456106524);
    Temporary1 = text_3456106524;
    }
    else {
    Temporary1 = HEX5BHEX5D_2785018021(widget_3456106516, 0);
    }
    
    var text_3456106525 = Temporary1;
    text_3456106525.text = nimCopy(null, self_3456106514.path, NTI33554449);
    updateForegroundColor_2785018335(text_3456106525, textColor_3456106523, frameIndex_3456106517);
    updateLastHierarchyChangeFromChildren_2785018357(text_3456106525, -1);

  
}

function updateWidget_3422552092(self_3422552093, app_3422552094, widget_3422552095, frameIndex_3422552096) {
        var Temporary1;
        var Temporary2;

  BeforeRet: {
    var charWidth_3422552097 = charWidth_2768240799(app_3422552094.platform);
    var totalLineHeight_3422552098 = totalLineHeight_2768240810(app_3422552094.platform);
    var textColor_3422552104 = color_3439329450(app_3422552094.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    setLen_2785018061(widget_3422552095, 0);
    var name_3422552105 = [];
    var typ_3422552106 = [];
    var nameColors_3422552111 = [[]];
    var typeColors_3422552112 = [115,116,111,114,97,103,101,46,116,121,112,101];
    switch (self_3422552093.completion.kind) {
    case 0:
        var Temporary2 = self_3422552093.completion;
        if (ConstSet355[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym0_3422552115 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym0_3422552115)) Temporary1 = false; else {          var sym_3422552138 = get_3087009376(oHEX60gensym0_3422552115);
          Temporary1 = true;        }      if (Temporary1) {
      name_3422552105 = nimCopy(null, sym_3422552138.name, NTI33554449);
      typ_3422552106 = nimCopy(null, HEX24_3087008191(computeSymbolType_3019928398(ctx_2969567289, sym_3422552138, true)), NTI33554449);
      nameColors_3422552111 = nimCopy(null, getColorForSymbol_3137341355(ctx_2969567289, sym_3422552138), NTI3137340452);
      }
      
      break;
    default: 
      break BeforeRet;
      break;
    }
    var nameColor_3422552144 = tokenColor_3439329618(app_3422552094.theme, nameColors_3422552111, rgb_2550136919(255, 255, 255));
    var nameWidget_3422552145 = createPartWidget_3439329344(name_3422552105, 0.0, ((name_3422552105).length * charWidth_3422552097), totalLineHeight_3422552098, nameColor_3422552144, frameIndex_3422552096);
    add_2785018068(widget_3422552095, nameWidget_3422552145);
    var typeColor_3422552151 = tokenColor_3439330963(app_3422552094.theme, typeColors_3422552112, rgb_2550136919(255, 255, 255));
    var typeWidget_3422552152 = createPartWidget_3439329344(typ_3422552106, (-((typ_3422552106).length) * charWidth_3422552097), 0.0, totalLineHeight_3422552098, typeColor_3422552151, frameIndex_3422552096);
    typeWidget_3422552152.anchor.Field0.x = 1.0;
    typeWidget_3422552152.anchor.Field1.x = 1.0;
    add_2785018068(widget_3422552095, typeWidget_3422552152);
  };

  
}

function updateWidget_3405774866(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870) {
  
}

function updateWidget_3405774871(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870) {
    chckNilDisp(self_3405774867);
    if (isObj(self_3405774867.m_type, NTI1291848506)) {
    updateWidget_3456106526(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI1291848508)) {
    updateWidget_3456106513(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI2969577319)) {
    updateWidget_3422552092(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    else {
    if (isObj(self_3405774867.m_type, NTI3187671048)) {
    updateWidget_3405774866(self_3405774867, app_3405774868, widget_3405774869, frameIndex_3405774870);
    }
    }}}

  
}

function updateWidget_3456106539(self_3456106540, app_3456106541, widget_3456106542, frameIndex_3456106543) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3456106544 = lineHeight_2768240794(app_3456106541.platform);
    var totalLineHeight_3456106545 = totalLineHeight_2768240810(app_3456106541.platform);
    var charWidth_3456106546 = charWidth_2768240799(app_3456106541.platform);
    var textColor_3456106552 = color_3439329450(app_3456106541.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3456106553 = null;
    var contentPanel_3456106554 = null;
    if ((len_2785018025(widget_3456106542) == 0)) {
    headerPanel_3456106553 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), bottom: totalLineHeight_3456106545, lastHierarchyChange: frameIndex_3456106543, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    add_2785018068(widget_3456106542, headerPanel_3456106553);
    contentPanel_3456106554 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017869), top: totalLineHeight_3456106545, lastHierarchyChange: frameIndex_3456106543, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3456106554.maskContent = true;
    add_2785018068(widget_3456106542, contentPanel_3456106554);
    layoutWidget_2785018519(headerPanel_3456106553, widget_3456106542.lastBounds, frameIndex_3456106543, app_3456106541.platform.layoutOptions);
    layoutWidget_2785018519(contentPanel_3456106554, widget_3456106542.lastBounds, frameIndex_3456106543, app_3456106541.platform.layoutOptions);
    }
    else {
      headerPanel_3456106553 = HEX5BHEX5D_2785018021(widget_3456106542, 0);
      contentPanel_3456106554 = HEX5BHEX5D_2785018021(widget_3456106542, 1);
    }
    
    updateWidget_3405774859(self_3456106540.textEditor, app_3456106541, headerPanel_3456106553, frameIndex_3456106543);
    updateLastHierarchyChangeFromChildren_2785018357(headerPanel_3456106553, frameIndex_3456106543);
    widget_3456106542.lastHierarchyChange = nimMax(widget_3456106542.lastHierarchyChange, headerPanel_3456106553.lastHierarchyChange);
    updateBackgroundColor_2785018349(contentPanel_3456106554, color_3439329450(app_3456106541.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3456106543);
    self_3456106540.lastContentBounds = nimCopy(self_3456106540.lastContentBounds, contentPanel_3456106554.lastBounds, NTI2147483653);
      if (changed_2785018520(contentPanel_3456106554, frameIndex_3456106543)) Temporary2 = true; else {        Temporary2 = dirty_2483027986(self_3456106540);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3456106541.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2483028016(self_3456106540);
    var maxLineCount_3456106560 = ((Math.floor((widget_3456106542.lastBounds.h / totalLineHeight_3456106545))) | 0);
    var targetNumRenderedItems_3456106564 = nimMin(maxLineCount_3456106560, (self_3456106540.completions).length);
    var lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    if ((self_3456106540.selected < self_3456106540.scrollOffset)) {
    self_3456106540.scrollOffset = self_3456106540.selected;
    lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3456106568 < self_3456106540.selected)) {
    self_3456106540.scrollOffset = nimMax(addInt(subInt(self_3456106540.selected, targetNumRenderedItems_3456106564), 1), 0);
    lastRenderedIndex_3456106568 = nimMin(subInt(addInt(self_3456106540.scrollOffset, targetNumRenderedItems_3456106564), 1), (self_3456106540.completions).length - 1);
    }
    
    var numRenderedItems_3456106575 = nimMax(addInt(subInt(lastRenderedIndex_3456106568, self_3456106540.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3456106575 < len_2785018025(contentPanel_3456106554))) break Label4;
          var _ = pop_2785018006(contentPanel_3456106554);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(len_2785018025(contentPanel_3456106554) < numRenderedItems_3456106575)) break Label6;
          add_2785018068(contentPanel_3456106554, {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017869), layout: {kind: 0}, m_type: NTI2785017871, maskContent: false, children: [], parent: null, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
        }
    };
    var selectionColor_3456106581 = color_3439329450(app_3456106541.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3456106582 = 0.0;
    var widgetIndex_3456106583 = 0;
    Label7: {
      var completionIndex_3456106588 = 0;
      var res_536873052 = self_3456106540.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536873052 <= lastRenderedIndex_3456106568)) break Label9;
            completionIndex_3456106588 = res_536873052;
            try {
            var lineWidget_3456106594 = HEX5BHEX5D_2785018021(contentPanel_3456106554, widgetIndex_3456106583);
            lineWidget_3456106594.top = top_3456106582;
            lineWidget_3456106594.bottom = (top_3456106582 + totalLineHeight_3456106545);
            lineWidget_3456106594.lastHierarchyChange = frameIndex_3456106543;
            if ((completionIndex_3456106588 == self_3456106540.selected)) {
            lineWidget_3456106594.fillBackground = true;
            updateBackgroundColor_2785018349(lineWidget_3456106594, selectionColor_3456106581, frameIndex_3456106543);
            }
            else {
              lineWidget_3456106594.fillBackground = false;
              updateBackgroundColor_2785018349(lineWidget_3456106594, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3456106543);
            }
            
            updateWidget_3405774871(self_3456106540.completions[chckIndx(completionIndex_3456106588, 0, (self_3456106540.completions).length - 1)], app_3456106541, lineWidget_3456106594, frameIndex_3456106543);
            top_3456106582 = lineWidget_3456106594.bottom;
            res_536873052 = addInt(res_536873052, 1);
            } finally {
            widgetIndex_3456106583 = addInt(widgetIndex_3456106583, 1);
            }
          }
      };
    };
    contentPanel_3456106554.lastHierarchyChange = frameIndex_3456106543;
    widget_3456106542.lastHierarchyChange = nimMax(widget_3456106542.lastHierarchyChange, contentPanel_3456106554.lastHierarchyChange);
  };

  
}

function updateWidget_3405774860(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864) {
  
}

function updateWidget_3405774865(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864) {
    chckNilDisp(self_3405774861);
    if (isObj(self_3405774861.m_type, NTI3187671062)) {
    updateWidget_3456106539(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864);
    }
    else {
    if (isObj(self_3405774861.m_type, NTI2483027972)) {
    updateWidget_3405774860(self_3405774861, app_3405774862, widget_3405774863, frameIndex_3405774864);
    }
    }

  
}
