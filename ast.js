/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI2365587461 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137339396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2751463442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2751463521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291846985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2063597631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597572 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597571 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855639351 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2332033636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676240 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676329 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650811325 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650811524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483731 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146948 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785019827 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2785019826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904745 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904538 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904465 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904394 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904217 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904089 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904153 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904016 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681301 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818573802 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818579617 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650804896 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033043 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033041 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033037 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033039 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033038 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483029956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028483 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634022916 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850254 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587477 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849351 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849357 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146958 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116701 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116698 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116695 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116673 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116678 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116645 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116652 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116649 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116640 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116639 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116629 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3154116628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116627 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116621 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116614 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291854206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291854213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854212 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854219 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573823 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573819 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573818 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573811 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573803 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291852913 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848503 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848501 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650810879 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291848446 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007854 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007758 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007755 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007754 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007753 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007752 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007751 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046821074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868935608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935561 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935514 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935467 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935240 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935193 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935146 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935093 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868935040 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868934987 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868934934 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583406 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790168 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2365587460 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676106 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676104 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676103 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676102 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3036676101 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573797 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573796 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573798 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818573795 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573790 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573787 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573774 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818573773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650800334 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3036676100 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818575093 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126860 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800390 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800388 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800330 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800333 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800331 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650800387 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369743 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2650800379 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800369 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800366 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800343 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800341 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800262 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845734 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845728 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845726 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924163 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845714 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845709 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027991 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2483027980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028018 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028003 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027992 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027973 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2046820367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2046820366 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820365 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820364 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369731 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2147483652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2147483651 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845698 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2617245700 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2617245699 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845696 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845693 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820358 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820357 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845678 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845675 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033027 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2332033045 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483666 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2147483665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2147483658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255891 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255890 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255889 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255874 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255872 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255866 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255852 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255851 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255844 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255827 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255825 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255812 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2315255811 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369745 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845665 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650800335 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463432 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463431 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2751463434 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2751463430 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463429 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650800316 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800315 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800312 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2650800311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800310 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800304 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800295 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2650800294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800293 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800287 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800278 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2650800277 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800276 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800270 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800263 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818577693 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818577688 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818576786 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573799 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818573800 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676114 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800264 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852128057 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904002 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904026 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904034 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903998 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573793 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573643 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818573646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818573644 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818577394 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818573822 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904099 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904107 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904071 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818574753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2365587459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904281 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904278 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904267 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904264 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868933119 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904806 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904830 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904858 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790114 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2952790112 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790109 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790106 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790048 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904802 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344660 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986346081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345978 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345508 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345606 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2986345542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344631 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791269 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152389 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI2097152387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790093 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790090 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790070 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952790055 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2952790060 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790052 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790051 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790115 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2080374789 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790043 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952790050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790045 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952790047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868928522 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904731 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904755 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904763 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122674 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904665 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904668 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904689 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904697 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904661 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904590 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904593 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904614 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904622 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904642 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904586 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904524 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904527 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904548 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904556 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790981 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904520 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868969167 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126839 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790990 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790987 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790984 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790925 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904451 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904475 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904139 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904142 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904163 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904171 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904135 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790655 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904380 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904383 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904404 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904376 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868948884 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868968260 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904203 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904227 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904235 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904054 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790039 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790038 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790037 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904199 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790465 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2885681485 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790471 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904305 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904308 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904329 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904337 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904357 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904301 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903953 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903950 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903940 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904272 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790024 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952790034 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790026 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952791176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868946880 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790025 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952790326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790029 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790020 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2852126726 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126724 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952790035 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2952790023 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790022 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952790019 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681354 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681357 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681378 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681386 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681336 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2885681350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681287 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681290 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681311 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2885681283 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681208 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681232 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681240 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681204 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681182 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2281701407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903944 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852127809 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2885681179 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2885681177 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903964 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904896 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2181038083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650810817 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650810816 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017899 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2785017902 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017934 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017885 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017897 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017894 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017891 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017865 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017880 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017877 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017861 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650800322 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800372 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2684354567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650809642 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240649 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650804819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650804787 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650804745 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800360 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2650803014 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650803084 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650803089 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369858 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369867 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369787 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2701131780 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2701131779 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2684354563 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650806095 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650802468 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650805579 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650802829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800136 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800135 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2650802497 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800131 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2751463437 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2751463448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2650800449 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800460 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800629 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800514 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369747 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369739 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369737 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046820387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI2516582404 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2516582404.node = NNI2516582404;
var NNI2499805188 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2499805188.node = NNI2499805188;
NTI2499805188.base = NTI33555171;
NTI2516582404.base = NTI2499805188;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2046820387 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046820387.node = NNI2046820387;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2231369737 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2231369737.node = NNI2231369737;
var NNI2231369739 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2231369739.node = NNI2231369739;
NTI2231369747.base = NTI2231369739;
NTI2650800514.base = NTI2231369747;
NTI2650800629.base = NTI2231369739;
NTI2650800460.base = NTI2231369739;
NTI2650800449.base = NTI2231369739;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2751463438 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2751463438.node = NNI2751463438;
NTI2751463438.base = NTI33555171;
NTI2751463437.base = NTI2751463438;
var NNI2751463448 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2751463437, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2751463437, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2751463437, name: "newEndPosition", sons: null}]};
NTI2751463448.node = NNI2751463448;
NTI2751463448.base = NTI33555171;
var NNI2650800131 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2650800131, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2650800131, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2650800131, name: "Nested", len: 0, sons: null}}};
NTI2650800131.node = NNI2650800131;
NTI2650800135.base = NTI2231369739;
NTI2650800136.base = NTI2650800132;
var NNI2650800134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2650800135, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2650800131, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2231369739, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2231369737, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2650800136, name: "children", sons: null}]]}]};
NTI2650800134.node = NNI2650800134;
NTI2650800132.base = NTI2650800134;
NTI2650802497.base = NTI2650800132;
NTI2650802829.base = NTI2231369739;
NTI2650805579.base = NTI2231369739;
NTI2650802468.base = NTI2231369739;
NTI2650806095.base = NTI2231369739;
var NNI2701131780 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2701131780.node = NNI2701131780;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2701131780.base = NTI33555181;
NTI2701131779.base = NTI2701131780;
var NNI2684354563 = {kind: 1, offset: "impl", len: 0, typ: NTI2701131779, name: "impl", sons: null};
NTI2684354563.node = NNI2684354563;
NTI2231369787.base = NTI2231369739;
NTI2231369867.base = NTI2231369739;
NTI2231369858.base = NTI2231369739;
NTI2650803084.base = NTI2231369739;
var NNI2650803089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2650803084, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2650803089.node = NNI2650803089;
NTI2650803014.base = NTI2231369739;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2650800360.base = NTI2231369739;
var NNI2650804745 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2650804745.node = NNI2650804745;
var NNI2650804787 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2650804787.node = NNI2650804787;
var NNI2650804819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2650804819.node = NNI2650804819;
var NNI2768240649 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2768240649.node = NNI2768240649;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2650800435.base = NTI2231369739;
NTI2650809642.base = NTI2231369739;
var NNI2650800349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2684354563, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2650800349.node = NNI2650800349;
var NNI2684354567 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2684354567.node = NNI2684354567;
var NNI2650800372 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2650800360, name: "Field2", sons: null}]};
NTI2650800372.node = NNI2650800372;
var NNI2785017880 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017865, name: "Field2", sons: null}]};
NTI2785017880.node = NNI2785017880;
NTI2785017877.base = NTI2785017880;
var NNI2785017874 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2785017877, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2785017874.node = NNI2785017874;
NTI2785017885.base = NTI33554435;
var NNI2785017897 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017885, name: "Field2", sons: null}]};
NTI2785017897.node = NNI2785017897;
NTI2785017894.base = NTI2785017897;
var NNI2785017891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2785017894, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2785017891.node = NNI2785017891;
var NNI2785017862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2785017874, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2785017891, name: "onRequestSaveIndex", sons: null}]};
NTI2785017862.node = NNI2785017862;
NTI2785017862.base = NTI33555171;
NTI2785017861.base = NTI2785017862;
var NNI2650800322 = {kind: 1, offset: "val", len: 0, typ: NTI2785017861, name: "val", sons: null};
NTI2650800322.node = NNI2650800322;
var NNI2785017899 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2785017899, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2785017899, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2785017899, name: "Function", len: 0, sons: null}}};
NTI2785017899.node = NNI2785017899;
var NNI2785017902 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2231369737, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2785017899, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2785017902.node = NNI2785017902;
NTI2785017934.base = NTI2785017902;
var NNI2650810817 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2650810817.node = NNI2650810817;
var NNI2650810816 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2650810817, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2650810816.node = NNI2650810816;
var NNI2181038083 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554438, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2181038083.node = NNI2181038083;
var NNI2885681177 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2885681177.node = NNI2885681177;
var NNI2885681180 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2885681177, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681179, name: "Field1", sons: null}]};
NTI2885681180.node = NNI2885681180;
NTI2868903964.base = NTI2885681180;
NTI2868904896.base = NTI2868903964;
NTI2852127809.base = NTI33554435;
var NNI2868903939 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI2868903939.node = NNI2868903939;
NTI2868903944.base = NTI2868903939;
var NNI2868903956 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868903944, name: "Field2", sons: null}]};
NTI2868903956.node = NNI2868903956;
var NNI2281701407 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2281701407.node = NNI2281701407;
var NNI2885681182 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2885681182, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2885681182, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2885681182, name: "Green", len: 0, sons: null}}};
NTI2885681182.node = NNI2885681182;
var NNI2885681204 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681180, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI2885681204.node = NNI2885681204;
var NNI2885681260 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}]};
NTI2885681260.node = NNI2885681260;
NTI2885681208.base = NTI2885681211;
var NNI2885681211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2885681208, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2885681208, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2885681204, name: "value", sons: null}]};
NTI2885681211.node = NNI2885681211;
NTI2885681232.base = NTI2885681211;
var NNI2885681240 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2885681232, name: "Field2", sons: null}]};
NTI2885681240.node = NNI2885681240;
NTI2885681176.base = NTI33554439;
var NNI2885681283 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681180, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2885681176, name: "val", sons: null}]};
NTI2885681283.node = NNI2885681283;
NTI2885681287.base = NTI2885681290;
var NNI2885681290 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2885681287, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2885681287, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2885681283, name: "value", sons: null}]};
NTI2885681290.node = NNI2885681290;
NTI2885681311.base = NTI2885681290;
var NNI2885681319 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2885681311, name: "Field2", sons: null}]};
NTI2885681319.node = NNI2885681319;
NTI2885681336.base = NTI2885681180;
var NNI2885681350 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681180, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2885681336, name: "val", sons: null}]};
NTI2885681350.node = NNI2885681350;
NTI2885681354.base = NTI2885681357;
var NNI2885681357 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2885681354, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2885681354, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2885681350, name: "value", sons: null}]};
NTI2885681357.node = NNI2885681357;
NTI2885681378.base = NTI2885681357;
var NNI2885681386 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2885681378, name: "Field2", sons: null}]};
NTI2885681386.node = NNI2885681386;
var NNI2952790019 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI2952790019, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952790019, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2952790019, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2952790019, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2952790019, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2952790019, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2952790019, name: "tType", len: 0, sons: null}}};
NTI2952790019.node = NNI2952790019;
var NNI2952790022 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI2952790022, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952790022, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2952790022, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2952790022, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2952790022, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2952790022, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2952790022, name: "vkType", len: 0, sons: null}}};
NTI2952790022.node = NNI2952790022;
var NNI2852126723 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2852126723, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2852126723, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2852126723, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2852126723, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2852126723, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2852126723, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2852126723, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2852126723, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2852126723, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2852126723, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2852126723, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2852126723, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2852126723, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2852126723, name: "Assignment", len: 0, sons: null}}};
NTI2852126723.node = NNI2852126723;
NTI2852126727.base = NTI2852126724;
var NNI2852126726 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2852126724, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2181038083, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2852126723, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2852126727, name: "children", sons: null}]};
NTI2852126726.node = NNI2852126726;
NTI2852126724.base = NTI2852126726;
NTI2952790029.base = NTI2952790020;
var NNI2952790028 = {kind: 3, offset: "kind", len: 7, typ: NTI2952790019, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI2952790020, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI2952790029, name: "paramTypes", sons: null}]}]]};
NTI2952790028.node = NNI2952790028;
NTI2952790020.base = NTI2952790028;
var NNI2952790023 = {kind: 3, offset: "kind", len: 7, typ: NTI2952790022, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI2952790035, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI2952790020, name: "typ", sons: null}]]};
NTI2952790023.node = NNI2952790023;
NTI2952790326.base = NTI2952790020;
var NNI2952790025 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2952790025, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952790025, name: "skBuiltin", len: 0, sons: null}}};
NTI2952790025.node = NNI2952790025;
var NNI2868946880 = {kind: 1, offset: "val", len: 0, typ: NTI2952790020, name: "val", sons: null};
NTI2868946880.node = NNI2868946880;
var NNI2952790024 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2952790024, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952790024, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2952790024, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2952790024, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2952790024, name: "Scope", len: 0, sons: null}}};
NTI2952790024.node = NNI2952790024;
var NNI2952790034 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2952790025, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI2952790020, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2952790023, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI2952790024, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI2952790034.node = NNI2952790034;
NTI2952790026.base = NTI2952790034;
var NNI2952791176 = {kind: 1, offset: "val", len: 0, typ: NTI2952790026, name: "val", sons: null};
NTI2952791176.node = NNI2952791176;
NTI2868904272.base = NTI2181038083;
NTI2868903953.base = NTI2868903956;
var NNI2868903950 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868903953, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868903950.node = NNI2868903950;
var NNI2868903940 = {kind: 1, offset: "queries", len: 0, typ: NTI2868903950, name: "queries", sons: null};
NTI2868903940.node = NNI2868903940;
var NNI2868904284 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681180, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904272, name: "Field2", sons: null}]};
NTI2868904284.node = NNI2868904284;
var NNI2868904301 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2852126724, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790020, name: "val", sons: null}]};
NTI2868904301.node = NNI2868904301;
var NNI2868904357 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}]};
NTI2868904357.node = NNI2868904357;
NTI2868904305.base = NTI2868904308;
var NNI2868904308 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904305, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904305, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904301, name: "value", sons: null}]};
NTI2868904308.node = NNI2868904308;
NTI2868904329.base = NTI2868904308;
var NNI2868904337 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904329, name: "Field2", sons: null}]};
NTI2868904337.node = NNI2868904337;
NTI2952790471.base = NTI33554439;
NTI2885681485.base = NTI33554439;
NTI2952790465.base = NTI33554439;
NTI2952790039.base = NTI2952790023;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI2952790038 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI2952790039, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1191183280, name: "maxLoopIterations", sons: null}]};
NTI2952790038.node = NNI2952790038;
NTI2952790037.base = NTI2952790038;
var NNI2868904199 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681177, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790037, name: "val", sons: null}]};
NTI2868904199.node = NNI2868904199;
var NNI2868904054 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681177, name: "Field1", sons: null}]};
NTI2868904054.node = NNI2868904054;
NTI2868904203.base = NTI2868904206;
var NNI2868904206 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904203, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904203, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904199, name: "value", sons: null}]};
NTI2868904206.node = NNI2868904206;
NTI2868904227.base = NTI2868904206;
var NNI2868904235 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681177, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904227, name: "Field2", sons: null}]};
NTI2868904235.node = NNI2868904235;
NTI2868968260.base = NTI2952790023;
var NNI2868948884 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952790023, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2868948884.node = NNI2868948884;
var NNI2868904376 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2852126724, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790023, name: "val", sons: null}]};
NTI2868904376.node = NNI2868904376;
NTI2868904380.base = NTI2868904383;
var NNI2868904383 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904380, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904380, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904376, name: "value", sons: null}]};
NTI2868904383.node = NNI2868904383;
NTI2868904404.base = NTI2868904383;
var NNI2868904412 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904404, name: "Field2", sons: null}]};
NTI2868904412.node = NNI2868904412;
NTI2013268507.base = NTI33554439;
NTI2952790655.base = NTI33554439;
var NNI2868904135 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681177, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790026, name: "val", sons: null}]};
NTI2868904135.node = NNI2868904135;
NTI2868904139.base = NTI2868904142;
var NNI2868904142 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904139, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904139, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904135, name: "value", sons: null}]};
NTI2868904142.node = NNI2868904142;
NTI2868904163.base = NTI2868904142;
var NNI2868904171 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681177, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904163, name: "Field2", sons: null}]};
NTI2868904171.node = NNI2868904171;
var NNI2868904447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2852126724, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952791176, name: "val", sons: null}]};
NTI2868904447.node = NNI2868904447;
NTI2868904451.base = NTI2868904454;
var NNI2868904454 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904451, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904451, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904447, name: "value", sons: null}]};
NTI2868904454.node = NNI2868904454;
NTI2868904475.base = NTI2868904454;
var NNI2868904483 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904475, name: "Field2", sons: null}]};
NTI2868904483.node = NNI2868904483;
NTI2952790925.base = NTI33554439;
var NNI2952790990 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2952790026, name: "Field2", sons: null}]};
NTI2952790990.node = NNI2952790990;
NTI2952790987.base = NTI2952790990;
var NNI2952790984 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952790987, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2952790984.node = NNI2952790984;
var NNI2852126839 = {kind: 1, offset: "val", len: 0, typ: NTI2852126724, name: "val", sons: null};
NTI2852126839.node = NNI2852126839;
var NNI2952791002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}]};
NTI2952791002.node = NNI2952791002;
var NNI2868969167 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}]};
NTI2868969167.node = NNI2868969167;
NTI2952790981.base = NTI2952790984;
var NNI2868904520 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2852126724, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790981, name: "val", sons: null}]};
NTI2868904520.node = NNI2868904520;
NTI2868904524.base = NTI2868904527;
var NNI2868904527 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904524, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904524, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904520, name: "value", sons: null}]};
NTI2868904527.node = NNI2868904527;
NTI2868904548.base = NTI2868904527;
var NNI2868904556 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904548, name: "Field2", sons: null}]};
NTI2868904556.node = NNI2868904556;
var NNI2868904586 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2952790026, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790020, name: "val", sons: null}]};
NTI2868904586.node = NNI2868904586;
var NNI2868904642 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}]};
NTI2868904642.node = NNI2868904642;
NTI2868904590.base = NTI2868904593;
var NNI2868904593 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904590, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904590, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904586, name: "value", sons: null}]};
NTI2868904593.node = NNI2868904593;
NTI2868904614.base = NTI2868904593;
var NNI2868904622 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904614, name: "Field2", sons: null}]};
NTI2868904622.node = NNI2868904622;
var NNI2868904661 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2952790026, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790023, name: "val", sons: null}]};
NTI2868904661.node = NNI2868904661;
NTI2868904665.base = NTI2868904668;
var NNI2868904668 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904665, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904665, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904661, name: "value", sons: null}]};
NTI2868904668.node = NNI2868904668;
NTI2868904689.base = NTI2868904668;
var NNI2868904697 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904689, name: "Field2", sons: null}]};
NTI2868904697.node = NNI2868904697;
NTI3003122674.base = NTI2952790023;
var NNI2868904727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2952790037, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790023, name: "val", sons: null}]};
NTI2868904727.node = NNI2868904727;
var NNI2868904783 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790037, name: "Field1", sons: null}]};
NTI2868904783.node = NNI2868904783;
NTI2868904731.base = NTI2868904734;
var NNI2868904734 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904731, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904731, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904727, name: "value", sons: null}]};
NTI2868904734.node = NNI2868904734;
NTI2868904755.base = NTI2868904734;
var NNI2868904763 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790037, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904755, name: "Field2", sons: null}]};
NTI2868904763.node = NNI2868904763;
NTI2868928522.base = NTI33554439;
var NNI2952790043 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2952790043, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952790043, name: "Vertical", len: 0, sons: null}}};
NTI2952790043.node = NNI2952790043;
var NNI2080374789 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2080374789.node = NNI2080374789;
NTI2952790051.base = NTI2952790045;
NTI2952790052.base = NTI33554449;
var NNI2483027971 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2483027971, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2483027971, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2483027971, name: "Bold", len: 0, sons: null}}};
NTI2483027971.node = NNI2483027971;
NTI2952790055.base = NTI2483027971;
var NNI2952790060 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952790055, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2952790060.node = NNI2952790060;
NTI2952790070.base = NTI33554449;
var NNI2952790075 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952790070, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2952790075.node = NNI2952790075;
var NNI2952790050 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2952790045, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI2952790043, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI2952790115, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2952790051, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2952790052, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI2952790060, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2952790075, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI2952790050.node = NNI2952790050;
NTI2952790045.base = NTI2952790050;
var NNI2952790046 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2952790045, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI2952790046.node = NNI2952790046;
var NNI2952790096 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2952790046, name: "Field2", sons: null}]};
NTI2952790096.node = NNI2952790096;
NTI2952790093.base = NTI2952790096;
var NNI2952790090 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952790093, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2952790090.node = NNI2952790090;
var NNI2952790047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI2952790045, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI2952790090, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}]};
NTI2952790047.node = NNI2952790047;
NTI2097152389.base = NTI33554446;
var NNI2097152387 = {kind: 1, offset: "arr", len: 0, typ: NTI2097152389, name: "arr", sons: null};
NTI2097152387.node = NNI2097152387;
NTI2952791269.base = NTI2952790045;
NTI2986344631.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI2986345542.base = NTI33554449;
NTI2986345606.base = NTI2483027971;
NTI2986345508.base = NTI33554449;
var NNI2986345978 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986345508, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790060, name: "Field1", sons: null}]};
NTI2986345978.node = NNI2986345978;
var NNI2986346081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986345508, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790060, name: "Field1", sons: null}]};
NTI2986346081.node = NNI2986346081;
NTI2986344660.base = NTI33554449;
var NNI2952790112 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2952790045, name: "Field2", sons: null}]};
NTI2952790112.node = NNI2952790112;
NTI2952790109.base = NTI2952790112;
var NNI2952790106 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952790109, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2952790106.node = NNI2952790106;
var NNI2952790098 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2181038083, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI2952790106, name: "replacements", sons: null}, 
{kind: 1, offset: "measureText", len: 0, typ: NTI2952790114, name: "measureText", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI2952790098.node = NNI2952790098;
NTI2952790048.base = NTI2952790098;
var NNI2868904802 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2952790048, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790047, name: "val", sons: null}]};
NTI2868904802.node = NNI2868904802;
var NNI2868904858 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790048, name: "Field1", sons: null}]};
NTI2868904858.node = NNI2868904858;
NTI2868904806.base = NTI2868904809;
var NNI2868904809 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904806, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904806, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904802, name: "value", sons: null}]};
NTI2868904809.node = NNI2868904809;
NTI2868904830.base = NTI2868904809;
var NNI2868904838 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790048, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904830, name: "Field2", sons: null}]};
NTI2868904838.node = NNI2868904838;
NTI2868933119.base = NTI33554439;
var NNI2868904267 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868903940, name: "Field2", sons: null}]};
NTI2868904267.node = NNI2868904267;
NTI2868904264.base = NTI2868904267;
var NNI2868904261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868904264, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868904261.node = NNI2868904261;
NTI2868904281.base = NTI2868904284;
var NNI2868904278 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868904281, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868904278.node = NNI2868904278;
var NNI2365587459 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2365587459.node = NNI2365587459;
NTI2818574753.base = NTI2852126724;
var NNI2868904071 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681177, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2952790048, name: "val", sons: null}]};
NTI2868904071.node = NNI2868904071;
NTI2868904075.base = NTI2868904078;
var NNI2868904078 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904075, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904075, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868904071, name: "value", sons: null}]};
NTI2868904078.node = NNI2868904078;
NTI2868904099.base = NTI2868904078;
var NNI2868904107 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681177, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904099, name: "Field2", sons: null}]};
NTI2868904107.node = NNI2868904107;
var NNI2818573822 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2952790047, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152387, name: "Field1", sons: null}]};
NTI2818573822.node = NNI2818573822;
var NNI2818573643 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2818573643, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818573643, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818573643, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2818573643, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2818573643, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2818573643.node = NNI2818573643;
var NNI2818573646 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2818573643, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2852126724, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2852126724, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2818573646.node = NNI2818573646;
NTI2818573644.base = NTI2818573646;
NTI2818577394.base = NTI2818573644;
var NNI2818573793 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2852126724, name: "Field2", sons: null}]};
NTI2818573793.node = NNI2818573793;
var NNI2868903998 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2885681177, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2852126724, name: "val", sons: null}]};
NTI2868903998.node = NNI2868903998;
NTI2868904002.base = NTI2868904005;
var NNI2868904005 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2868904002, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2868904002, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868903998, name: "value", sons: null}]};
NTI2868904005.node = NNI2868904005;
NTI2868904026.base = NTI2868904005;
var NNI2868904034 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2885681177, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868904026, name: "Field2", sons: null}]};
NTI2868904034.node = NNI2868904034;
var NNI2852128057 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}]};
NTI2852128057.node = NNI2852128057;
NTI2650800264.base = NTI33554449;
var NNI2818573799 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2818573799, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818573799, name: "AstCompletion", len: 0, sons: null}}};
NTI2818573799.node = NNI2818573799;
var NNI2818573800 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2818573799, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2852126723, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2818573800.node = NNI2818573800;
NTI3036676114.base = NTI2818573800;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2818576786.base = NTI2818573800;
var NNI2818577688 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2852126724, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818577688.node = NNI2818577688;
var NNI2818577693 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818577688, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818577693.node = NNI2818577693;
var NNI2650800277 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2650800278, name: "Field1", sons: null}]};
NTI2650800277.node = NNI2650800277;
NTI2650800276.base = NTI2650800277;
var NNI2650800270 = {kind: 1, offset: "handlers", len: 0, typ: NTI2650800276, name: "handlers", sons: null};
NTI2650800270.node = NNI2650800270;
var NNI2650800294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2650800295, name: "Field1", sons: null}]};
NTI2650800294.node = NNI2650800294;
NTI2650800293.base = NTI2650800294;
var NNI2650800287 = {kind: 1, offset: "handlers", len: 0, typ: NTI2650800293, name: "handlers", sons: null};
NTI2650800287.node = NNI2650800287;
var NNI2650800311 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2650800312, name: "Field1", sons: null}]};
NTI2650800311.node = NNI2650800311;
NTI2650800310.base = NTI2650800311;
var NNI2650800304 = {kind: 1, offset: "handlers", len: 0, typ: NTI2650800310, name: "handlers", sons: null};
NTI2650800304.node = NNI2650800304;
NTI2650800315.base = NTI2650800132;
NTI2650800316.base = NTI2650800132;
var NNI2751463430 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463430.node = NNI2751463430;
NTI2751463430.base = NTI33555171;
NTI2751463429.base = NTI2751463430;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463427.base = NTI2751463428;
var NNI2751463434 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463434.node = NNI2751463434;
NTI2751463434.base = NTI33555171;
NTI2751463433.base = NTI2751463434;
var NNI2751463432 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463432.node = NNI2751463432;
NTI2751463432.base = NTI33555171;
NTI2751463431.base = NTI2751463432;
var NNI2650800263 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2650800264, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2650800270, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2650800287, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2650800304, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2650800315, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2650800316, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2751463429, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2751463427, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2751463433, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2751463431, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2650800322, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}]};
NTI2650800263.node = NNI2650800263;
var NNI2130706436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2130706436.node = NNI2130706436;
NTI2130706436.base = NTI33555171;
NTI2650800263.base = NTI2130706436;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2231369745 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369745, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369745, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369745, name: "browser", len: 0, sons: null}}};
NTI2231369745.node = NNI2231369745;
var NNI2315255826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255827, name: "Field1", sons: null}]};
NTI2315255826.node = NNI2315255826;
NTI2315255825.base = NTI2315255826;
var NNI2315255819 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255825, name: "handlers", sons: null};
NTI2315255819.node = NNI2315255819;
var NNI2315255851 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255852, name: "Field1", sons: null}]};
NTI2315255851.node = NNI2315255851;
NTI2315255850.base = NTI2315255851;
var NNI2315255844 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255850, name: "handlers", sons: null};
NTI2315255844.node = NNI2315255844;
var NNI2315255873 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255874, name: "Field1", sons: null}]};
NTI2315255873.node = NNI2315255873;
NTI2315255872.base = NTI2315255873;
var NNI2315255866 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255872, name: "handlers", sons: null};
NTI2315255866.node = NNI2315255866;
var NNI2315255890 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255891, name: "Field1", sons: null}]};
NTI2315255890.node = NNI2315255890;
NTI2315255889.base = NTI2315255890;
var NNI2315255883 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255889, name: "handlers", sons: null};
NTI2315255883.node = NNI2315255883;
var NNI2147483665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483666, name: "Field1", sons: null}]};
NTI2147483665.node = NNI2147483665;
NTI2147483664.base = NTI2147483665;
var NNI2147483658 = {kind: 1, offset: "handlers", len: 0, typ: NTI2147483664, name: "handlers", sons: null};
NTI2147483658.node = NNI2147483658;
var NNI2332033033 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2332033045, name: "getTextBounds", sons: null};
NTI2332033033.node = NNI2332033033;
var NNI2315255812 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2315255819, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2315255819, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2315255819, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2315255844, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2315255844, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2315255866, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2315255883, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2147483658, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2332033033, name: "layoutOptions", sons: null}]};
NTI2315255812.node = NNI2315255812;
NTI2315255812.base = NTI33555171;
NTI2315255811.base = NTI2315255812;
var NNI2332033035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2097152387, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152387, name: "Field1", sons: null}]};
NTI2332033035.node = NNI2332033035;
var NNI2332033034 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2332033035, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2097152387, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2365587459, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2365587459, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2080374789, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2332033034.node = NNI2332033034;
NTI2332033034.base = NTI33555171;
NTI2332033027.base = NTI2332033034;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2046820358 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2046820358.node = NNI2046820358;
NTI2046820357.base = NTI2046820358;
var NNI1291845681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820357, name: "Field2", sons: null}]};
NTI1291845681.node = NNI1291845681;
NTI1291845678.base = NTI1291845681;
var NNI1291845675 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845678, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845675.node = NNI1291845675;
var NNI1291845696 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845696.node = NNI1291845696;
NTI1291845693.base = NTI1291845696;
var NNI1291845690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845693, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845690.node = NNI1291845690;
NTI1174405131.base = NTI1174405133;
var NNI2617245700 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2617245700.node = NNI2617245700;
NTI2617245700.base = NTI33555171;
NTI2617245699.base = NTI2617245700;
NTI2130706435.base = NTI2130706436;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2046820365 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2046820357, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2046820366, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2046820367, name: "handleInput", sons: null}]};
NTI2046820365.node = NNI2046820365;
NTI2046820364.base = NTI2046820365;
var NNI2147483652 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2147483658, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2147483652.node = NNI2147483652;
NTI2147483652.base = NTI33555171;
NTI2147483651.base = NTI2147483652;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2130706435, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2147483651, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845698.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2483028006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2365587459, name: "Field2", sons: null}]};
NTI2483028006.node = NNI2483028006;
NTI2483028003.base = NTI2483028006;
var NNI2483028000 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028003, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028000.node = NNI2483028000;
var NNI2483027980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2365587459, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2483027980.node = NNI2483027980;
NTI2483027991.base = NTI2483027971;
var NNI2483027972 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2483027980, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2483027980, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2483027991, name: "fontStyle", sons: null}]};
NTI2483027972.node = NNI2483027972;
var NNI2483028021 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2483027972, name: "Field2", sons: null}]};
NTI2483028021.node = NNI2483028021;
NTI2483028018.base = NTI2483028021;
var NNI2483028015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028018, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028015.node = NNI2483028015;
var NNI2483027992 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2483028000, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2483028015, name: "tokenColors", sons: null}]};
NTI2483027992.node = NNI2483027992;
NTI2483027973.base = NTI2483027992;
var NNI1291845712 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369731, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2147483651, name: "Field2", sons: null}]};
NTI1291845712.node = NNI1291845712;
NTI1291845709.base = NTI1291845712;
var NNI1291845706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845709, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845706.node = NNI1291845706;
var NNI2264924164 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}]};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI33555171;
NTI2264924163.base = NTI2264924164;
NTI1291845714.base = NTI2264924163;
var NNI1291845727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845728, name: "Field1", sons: null}]};
NTI1291845727.node = NNI1291845727;
NTI1291845726.base = NTI1291845727;
var NNI1291845720 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845726, name: "handlers", sons: null};
NTI1291845720.node = NNI1291845720;
NTI1291845734.base = NTI2147483651;
var NNI1291845666 = {kind: 2, len: 36, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2231369745, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2315255811, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2281701407, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2281701407, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2281701407, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2332033027, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845675, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845690, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2617245699, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845698, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2483027973, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845706, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845714, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845720, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845720, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2147483651, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2046820364, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845734, name: "editor_defaults", sons: null}]};
NTI1291845666.node = NNI1291845666;
NTI1291845665.base = NTI1291845666;
NTI2650800262.base = NTI2650800263;
NTI2650800343.base = NTI2231369747;
var NNI2650800341 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2650800343, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2650800341.node = NNI2650800341;
NTI2650800369.base = NTI2650800372;
var NNI2650800366 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2650800369, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2650800366.node = NNI2650800366;
var NNI2231369743 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369743, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369743, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369743, name: "relative", len: 0, sons: null}}};
NTI2231369743.node = NNI2231369743;
var NNI2650800379 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369743, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2650800379.node = NNI2650800379;
var NNI2650800330 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}]};
NTI2650800330.node = NNI2650800330;
NTI2650800333.base = NTI2650800330;
var NNI2650800332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2650800333, name: "parts", sons: null}]};
NTI2650800332.node = NNI2650800332;
NTI2650800331.base = NTI2650800332;
NTI2650800387.base = NTI2650800331;
NTI2650800388.base = NTI2785017902;
var NNI2650800390 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2650800390.node = NNI2650800390;
NTI2650800389.base = NTI2650800390;
var NNI2650800335 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2650800262, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2231369747, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2650800341, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2650800349, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2650800366, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2046820364, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2650800379, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2650800387, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2650800388, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2650800389, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2650800335.node = NNI2650800335;
NTI2650800335.base = NTI2147483652;
var NNI2852126860 = {kind: 1, offset: "val", len: 0, typ: NTI2852126724, name: "val", sons: null};
NTI2852126860.node = NNI2852126860;
var NNI2818575093 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}]};
NTI2818575093.node = NNI2818575093;
NTI2650800334.base = NTI2650800335;
NTI2818573790.base = NTI2818573793;
var NNI2818573787 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818573790, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818573787.node = NNI2818573787;
NTI2818573795.base = NTI2818573798;
NTI2818573796.base = NTI2818573644;
NTI2818573797.base = NTI2818573644;
var NNI2818573774 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI2952790984, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2852126724, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2818573787, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2818573795, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818573796, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818573797, name: "redoOps", sons: null}]};
NTI2818573774.node = NNI2818573774;
NTI2818573774.base = NTI2130706436;
NTI2818573773.base = NTI2818573774;
NTI3036676101.base = NTI2818573800;
var NNI3036676104 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3036676104.node = NNI3036676104;
NTI3036676103.base = NTI3036676104;
var NNI3036676100 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2650800334, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818573773, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3036676101, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3036676102, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3036676103, name: "lastItems", sons: null}]};
NTI3036676100.node = NNI3036676100;
NTI3036676100.base = NTI2264924164;
NTI1979711564.base = NTI33554449;
NTI3036676106.base = NTI2818573800;
var NNI2365587460 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2365587460.node = NNI2365587460;
var NNI2952790239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790045, name: "Field1", sons: null}]};
NTI2952790239.node = NNI2952790239;
var NNI2952790168 = {kind: 1, offset: "val", len: 0, typ: NTI2952790045, name: "val", sons: null};
NTI2952790168.node = NNI2952790168;
var NNI2818583406 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790045, name: "Field1", sons: null}]};
NTI2818583406.node = NNI2818583406;
var NNI2868934934 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2885681177, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2852126724, name: "Field1", sons: null}]};
NTI2868934934.node = NNI2868934934;
var NNI2868934987 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2885681177, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790048, name: "Field1", sons: null}]};
NTI2868934987.node = NNI2868934987;
var NNI2868935040 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2885681177, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790026, name: "Field1", sons: null}]};
NTI2868935040.node = NNI2868935040;
var NNI2868935093 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2885681177, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790037, name: "Field1", sons: null}]};
NTI2868935093.node = NNI2868935093;
var NNI2868935146 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2852126724, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790020, name: "Field1", sons: null}]};
NTI2868935146.node = NNI2868935146;
var NNI2868935193 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2852126724, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790023, name: "Field1", sons: null}]};
NTI2868935193.node = NNI2868935193;
var NNI2868935240 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2852126724, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952791176, name: "Field1", sons: null}]};
NTI2868935240.node = NNI2868935240;
var NNI2868935334 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2852126724, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790981, name: "Field1", sons: null}]};
NTI2868935334.node = NNI2868935334;
var NNI2868935467 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2952790026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790020, name: "Field1", sons: null}]};
NTI2868935467.node = NNI2868935467;
var NNI2868935514 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2952790026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790023, name: "Field1", sons: null}]};
NTI2868935514.node = NNI2868935514;
var NNI2868935561 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2952790037, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790023, name: "Field1", sons: null}]};
NTI2868935561.node = NNI2868935561;
var NNI2868935608 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2952790048, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2952790047, name: "Field1", sons: null}]};
NTI2868935608.node = NNI2868935608;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2046821074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046821074.node = NNI2046821074;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI3087007749 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3087007749.node = NNI3087007749;
NTI3087007749.base = NTI33555171;
NTI3087007747.base = NTI3087007749;
NTI3087007751.base = NTI3087007747;
var NNI3087007758 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3087007758.node = NNI3087007758;
NTI3087007757.base = NTI3087007758;
var NNI3087007750 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2650800334, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3087007751, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3087007752, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3087007753, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3087007754, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3087007755, name: "getCompletions", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3087007757, name: "lastItems", sons: null}]};
NTI3087007750.node = NNI3087007750;
NTI3087007750.base = NTI2264924164;
NTI3087007756.base = NTI3087007747;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
NTI3087007748.base = NTI3087007750;
var NNI3087007854 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3087007854.node = NNI3087007854;
var NNI1291848446 = {kind: 1, offset: "val", len: 0, typ: NTI2264924163, name: "val", sons: null};
NTI1291848446.node = NNI1291848446;
var NNI2650810879 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2650810879.node = NNI2650810879;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848501.node = NNI1291848501;
NTI1291848501.base = NTI3087007749;
var NNI1291848503 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI1291848503.node = NNI1291848503;
NTI1291848503.base = NTI3087007749;
NTI1291852913.base = NTI2231369731;
var NNI1291848314 = {kind: 1, offset: "val", len: 0, typ: NTI2147483651, name: "val", sons: null};
NTI1291848314.node = NNI1291848314;
NTI2818573811.base = NTI2852126724;
var NNI2818573809 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818573811, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818573809.node = NNI2818573809;
NTI2818573818.base = NTI2818573800;
var NNI2818573820 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2818573820.node = NNI2818573820;
NTI2818573819.base = NTI2818573820;
NTI2818573821.base = NTI2818573822;
var NNI2818573823 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818573823.node = NNI2818573823;
var NNI2818573824 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818573824.node = NNI2818573824;
var NNI2818573825 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818573825.node = NNI2818573825;
var NNI2818573826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818573826.node = NNI2818573826;
var NNI2818573803 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818573773, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2852126724, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818573809, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2818573809, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2852126839, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2181038083, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2852126724, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2650800334, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2650800262, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2046820364, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818573818, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818573819, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2818573821, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2818573823, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2818573824, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2818573825, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2818573826, name: "lastCommand", sons: null}]};
NTI2818573803.node = NNI2818573803;
NTI2818573803.base = NTI2147483652;
var NNI1291854212 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854212.node = NNI1291854212;
var NNI1291854213 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854213.node = NNI1291854213;
var NNI1291854211 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291854212, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291854213, name: "Field1", sons: null}]};
NTI1291854211.node = NNI1291854211;
NTI1291854219.base = NTI1291854211;
NTI1291854206.base = NTI2231369739;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3154116615.base = NTI2080374789;
var NNI3154116628 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3154116629, name: "Field1", sons: null}]};
NTI3154116628.node = NNI3154116628;
NTI3154116627.base = NTI3154116628;
var NNI3154116621 = {kind: 1, offset: "handlers", len: 0, typ: NTI3154116627, name: "handlers", sons: null};
NTI3154116621.node = NNI3154116621;
var NNI3154116645 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3154116645.node = NNI3154116645;
var NNI3154116652 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3154116649, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3154116649, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3154116645, name: "value", sons: null}]};
NTI3154116652.node = NNI3154116652;
NTI3154116649.base = NTI3154116652;
var NNI3154116663 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3154116649, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3154116649, name: "tail", sons: null}]};
NTI3154116663.node = NNI3154116663;
NTI3154116673.base = NTI3154116652;
var NNI3154116681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3154116673, name: "Field2", sons: null}]};
NTI3154116681.node = NNI3154116681;
NTI3154116678.base = NTI3154116681;
var NNI3154116690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3154116678, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3154116690.node = NNI3154116690;
var NNI3154116701 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3154116701.node = NNI3154116701;
NTI3154116698.base = NTI3154116701;
var NNI3154116695 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3154116698, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3154116695.node = NNI3154116695;
var NNI3154116640 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3154116663, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3154116690, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3154116695, name: "removedKeys", sons: null}]};
NTI3154116640.node = NNI3154116640;
NTI3154116639.base = NTI3154116640;
var NNI3154116614 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3154116615, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3154116621, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3154116639, name: "escapedText", sons: null}]};
NTI3154116614.node = NNI3154116614;
NTI3154116614.base = NTI2315255812;
NTI2248146958.base = NTI2046820364;
NTI1291849351.base = NTI2147483652;
NTI1291849357.base = NTI1291849351;
var NNI2365587477 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587477.node = NNI2365587477;
NTI2365587477.base = NTI134217746;
var NNI2348810397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2348810397.node = NNI2348810397;
var NNI1291850254 = {kind: 1, offset: "val", len: 0, typ: NTI1291845665, name: "val", sons: null};
NTI1291850254.node = NNI1291850254;
NTI1627390088.base = NTI1627389956;
var NNI1291845662 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845664.base = NTI1291845662;
var NNI1291845663 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845664, name: "openEditors", sons: null}]};
NTI1291845663.node = NNI1291845663;
var NNI2634022916 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2634022916.node = NNI2634022916;
NTI2634022916.base = NTI2617245700;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2483028483.base = NTI2483027971;
var NNI2483029956 = {kind: 1, offset: "val", len: 0, typ: NTI2483027973, name: "val", sons: null};
NTI2483029956.node = NNI2483029956;
NTI2332033039.base = NTI2332033027;
var NNI2332033038 = {kind: 1, offset: "children", len: 0, typ: NTI2332033039, name: "children", sons: null};
NTI2332033038.node = NNI2332033038;
NTI2332033038.base = NTI2332033034;
NTI2332033037.base = NTI2332033027;
var NNI2332033036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2332033037, name: "children", sons: null}]};
NTI2332033036.node = NNI2332033036;
NTI2332033036.base = NTI2332033034;
NTI2332033041.base = NTI2332033027;
var NNI2332033040 = {kind: 1, offset: "children", len: 0, typ: NTI2332033041, name: "children", sons: null};
NTI2332033040.node = NNI2332033040;
NTI2332033040.base = NTI2332033034;
NTI2332033043.base = NTI2332033027;
var NNI2332033042 = {kind: 1, offset: "children", len: 0, typ: NTI2332033043, name: "children", sons: null};
NTI2332033042.node = NNI2332033042;
NTI2332033042.base = NTI2332033034;
var NNI2332033044 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2483027972, name: "style", sons: null}]};
NTI2332033044.node = NNI2332033044;
NTI2332033044.base = NTI2332033034;
var NNI2650804896 = {kind: 1, offset: "val", len: 0, typ: NTI2650800334, name: "val", sons: null};
NTI2650804896.node = NNI2650804896;
NTI2818573802.base = NTI2818573803;
var NNI2818579617 = {kind: 1, offset: "val", len: 0, typ: NTI2818573802, name: "val", sons: null};
NTI2818579617.node = NNI2818579617;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI2885681222 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2885681208, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2885681208, name: "tail", sons: null}]};
NTI2885681222.node = NNI2885681222;
var NNI2885681301 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2885681287, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2885681287, name: "tail", sons: null}]};
NTI2885681301.node = NNI2885681301;
var NNI2885681368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2885681354, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2885681354, name: "tail", sons: null}]};
NTI2885681368.node = NNI2885681368;
var NNI2868904016 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904002, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904002, name: "tail", sons: null}]};
NTI2868904016.node = NNI2868904016;
var NNI2868904153 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904139, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904139, name: "tail", sons: null}]};
NTI2868904153.node = NNI2868904153;
var NNI2868904089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904075, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904075, name: "tail", sons: null}]};
NTI2868904089.node = NNI2868904089;
var NNI2868904217 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904203, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904203, name: "tail", sons: null}]};
NTI2868904217.node = NNI2868904217;
var NNI2868904319 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904305, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904305, name: "tail", sons: null}]};
NTI2868904319.node = NNI2868904319;
var NNI2868904394 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904380, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904380, name: "tail", sons: null}]};
NTI2868904394.node = NNI2868904394;
var NNI2868904604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904590, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904590, name: "tail", sons: null}]};
NTI2868904604.node = NNI2868904604;
var NNI2868904679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904665, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904665, name: "tail", sons: null}]};
NTI2868904679.node = NNI2868904679;
var NNI2868904465 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904451, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904451, name: "tail", sons: null}]};
NTI2868904465.node = NNI2868904465;
var NNI2868904538 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904524, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904524, name: "tail", sons: null}]};
NTI2868904538.node = NNI2868904538;
var NNI2868904745 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904731, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904731, name: "tail", sons: null}]};
NTI2868904745.node = NNI2868904745;
var NNI2868904820 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2868904806, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2868904806, name: "tail", sons: null}]};
NTI2868904820.node = NNI2868904820;
NTI2785019827.base = NTI2785017885;
var NNI2785019826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785019827, name: "Field1", sons: null}]};
NTI2785019826.node = NNI2785019826;
var NNI2248146948 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2248146948.node = NNI2248146948;
NTI2248146948.base = NTI2147483652;
NTI2147483731.base = NTI2046820364;
var NNI2650811524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2650811524.node = NNI2650811524;
var NNI2650811325 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369737, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2650811325.node = NNI2650811325;
NTI3036676329.base = NTI2046820364;
var NNI3087007779 = {kind: 1, offset: "val", len: 0, typ: NTI3087007747, name: "val", sons: null};
NTI3087007779.node = NNI3087007779;
var NNI3036676240 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818573800, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3036676240.node = NNI3036676240;
var NNI2332033636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2080374789, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2332033636.node = NNI2332033636;
NTI855639351.base = NTI33554448;
NTI1291847196.base = NTI2080374789;
var NNI2063597571 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2063597571, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2063597571, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2063597571, name: "Percent", len: 0, sons: null}}};
NTI2063597571.node = NNI2063597571;
var NNI2063597572 = {kind: 3, offset: "kind", len: 3, typ: NTI2063597571, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2063597572.node = NNI2063597572;
var NNI2063597631 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2080374789, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2063597631.node = NNI2063597631;
NTI1291846985.base = NTI2080374789;
var NNI2751463442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463442.node = NNI2751463442;
NTI2751463442.base = NTI33555171;
NTI2751463441.base = NTI2751463442;
NTI2751463521.base = NTI2751463441;
var NNI3137339396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3137339396.node = NNI3137339396;
var NNI2365587461 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2365587461.node = NNI2365587461;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
                      var helper_2197815350 = new Uint32Array([3198944359, 3630892171]);

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
    var names_2852128740 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet58 = setConstr([48, 57]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(4);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(5);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(6);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(4);
var ConstSet76 = setConstr(4);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(6);
var ConstSet85 = setConstr(6);
var ConstSet86 = setConstr(0);
var ConstSet87 = setConstr(1);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(3);
var ConstSet92 = setConstr(3);
var ConstSet93 = setConstr(2);
var ConstSet94 = setConstr(2);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(5);
var ConstSet98 = setConstr(5);
var ConstSet99 = setConstr(6);
var ConstSet100 = setConstr(6);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(1);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(1);
var ConstSet107 = setConstr(0);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(0);
var ConstSet110 = setConstr(4);
var ConstSet111 = setConstr(4);
var ConstSet112 = setConstr(5);
var ConstSet113 = setConstr(4);
var ConstSet114 = setConstr(4);
var ConstSet115 = setConstr(3);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(5);
var ConstSet118 = setConstr(4);
var ConstSet119 = setConstr(4);
var ConstSet120 = setConstr(5);
var ConstSet121 = setConstr(6);
var ConstSet122 = setConstr(5);
var ConstSet123 = setConstr(5);
var ConstSet124 = setConstr(3);
var ConstSet125 = setConstr(2);
var ConstSet126 = setConstr(5);
var ConstSet127 = setConstr(5);
var ConstSet128 = setConstr(6);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr(0);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(3);
var ConstSet139 = setConstr(3);
var ConstSet140 = setConstr(4);
var ConstSet141 = setConstr(5);
var ConstSet142 = setConstr(4);
var ConstSet143 = setConstr(10, 9, 7);
var ConstSet144 = setConstr(8);
var ConstSet145 = setConstr(1);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(0);
var ConstSet148 = setConstr(0);
var ConstSet149 = setConstr(0);
var ConstSet150 = setConstr();
var ConstSet151 = setConstr(0);
var ConstSet152 = setConstr(0);
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(1);
var ConstSet156 = setConstr();
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(3);
var ConstSet161 = setConstr(3);
var ConstSet162 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(1);
var ConstSet165 = setConstr(1);
var ConstSet166 = setConstr(0);
var ConstSet167 = setConstr(0);
var ConstSet168 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet169 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet170 = setConstr([48, 57]);
var ConstSet171 = setConstr([48, 57]);
var ConstSet172 = setConstr(101, 69);
var ConstSet173 = setConstr([48, 57]);
var ConstSet174 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet168[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet169[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet170[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet171[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet172[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet173[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet174[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet175 = setConstr(0);
var ConstSet176 = setConstr(0);
var ConstSet177 = setConstr(0);
var ConstSet178 = setConstr(0);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(4);
var ConstSet181 = setConstr(4);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(4);
var ConstSet186 = setConstr(0);
var ConstSet187 = setConstr(13, 10);
var ConstSet188 = setConstr(0);
var ConstSet189 = setConstr(1);
var ConstSet190 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet191 = setConstr(0);
var ConstSet192 = setConstr(46, 44);
var ConstSet193 = setConstr([65, 90]);
var ConstSet194 = setConstr([97, 122]);
var ConstSet195 = setConstr(4);
var ConstSet196 = setConstr(13, 10);
var ConstSet197 = setConstr(1);
var ConstSet198 = setConstr(6);
var ConstSet199 = setConstr(4);
var ConstSet200 = setConstr(4);
var ConstSet201 = setConstr(2);
var ConstSet202 = setConstr(2);
var ConstSet203 = setConstr(3);
var ConstSet204 = setConstr(3);
var ConstSet205 = setConstr(1);
var ConstSet206 = setConstr(1);
var ConstSet207 = setConstr(6);
var ConstSet208 = setConstr(6);
var ConstSet209 = setConstr(5);
var ConstSet210 = setConstr(5);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(6);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(6);
var ConstSet217 = setConstr(5);
var ConstSet218 = setConstr(4);
var ConstSet219 = setConstr(4);
var ConstSet220 = setConstr(2);
var ConstSet221 = setConstr(3);
var ConstSet222 = setConstr(1);
var ConstSet223 = setConstr(4);
var ConstSet224 = setConstr(4);
var ConstSet225 = setConstr(4, 0);
var ConstSet226 = setConstr([48, 57]);
var ConstSet227 = setConstr(0, 125);
var ConstSet228 = setConstr([48, 57]);
var ConstSet229 = setConstr([65, 90]);
var ConstSet230 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet231 = setConstr(4, 0);
var ConstSet232 = setConstr(4);
var ConstSet233 = setConstr(6);
var ConstSet234 = setConstr(13, 10);
var ConstSet235 = setConstr([48, 57]);
var ConstSet236 = setConstr([48, 57]);
var ConstSet237 = setConstr(69, 101);
var ConstSet238 = setConstr(43, 45);
var ConstSet239 = setConstr([48, 57]);
var ConstSet240 = setConstr(46, 101, 69);
var ConstSet241 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet242 = setConstr([97, 122], [65, 90], 95);
var ConstSet243 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet244 = setConstr(4);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet245 = setConstr(2);
var ConstSet246 = setConstr(2);
var ConstSet247 = setConstr(2);
var ConstSet248 = setConstr(6);
var ConstSet249 = setConstr(47, 47);
var ConstSet250 = setConstr(47, 47);
var ConstSet251 = setConstr(47, 47);
var ConstSet252 = setConstr(47, 47);
var ConstSet253 = setConstr(47, 47);
var ConstSet254 = setConstr(47, 47);
var ConstSet255 = setConstr(47, 47);
var ConstSet256 = setConstr(47, 47);
var ConstSet257 = setConstr(47, 47);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(2, 3);
var ConstSet263 = setConstr(2);
var ConstSet264 = setConstr(0);
var ConstSet265 = setConstr(2, 3);
var ConstSet266 = setConstr(2);
var ConstSet267 = setConstr(0);
var ConstSet268 = setConstr(5);
var ConstSet269 = setConstr(5);
var ConstSet270 = setConstr(2);
var ConstSet271 = setConstr(3);
var ConstSet272 = setConstr(1);
var ConstSet273 = setConstr(6);
var ConstSet274 = setConstr(6);
var ConstSet275 = setConstr(6);
var ConstSet276 = setConstr(1);
var ConstSet277 = setConstr(1);
var ConstSet278 = setConstr();
var ConstSet279 = setConstr();
var ConstSet280 = setConstr();
var ConstSet281 = setConstr();
var ConstSet282 = setConstr();
var ConstSet283 = setConstr(120, 88);
var ConstSet284 = setConstr(0);
    var names_1291853841 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet285 = setConstr(1);
var ConstSet286 = setConstr(1);
var ConstSet287 = setConstr(1);
var ConstSet288 = setConstr(4);
var ConstSet289 = setConstr(4);
var ConstSet290 = setConstr(2, 3);
var ConstSet291 = setConstr(2, 3);
var ConstSet292 = setConstr(3);
var ConstSet293 = setConstr(2);
var ConstSet294 = setConstr(6);
var ConstSet295 = setConstr(4);
var ConstSet296 = setConstr(4);
var ConstSet297 = setConstr(2, 3);
var ConstSet298 = setConstr(2, 3);
var ConstSet299 = setConstr(3);
var ConstSet300 = setConstr(2);
var ConstSet301 = setConstr(6);
var ConstSet302 = setConstr(5);
var ConstSet303 = setConstr(4);
var ConstSet304 = setConstr(6);
var ConstSet305 = setConstr(4);
var ConstSet306 = setConstr(6);
var ConstSet307 = setConstr(4);
var ConstSet308 = setConstr();
var ConstSet309 = setConstr(4);
var ConstSet310 = setConstr(6);
var ConstSet311 = setConstr(2);
var ConstSet312 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet313 = setConstr([65, 90]);
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet314 = setConstr(0);
var ConstSet315 = setConstr();
var ConstSet316 = setConstr(0);
var ConstSet317 = setConstr(1);
var ConstSet318 = setConstr(2);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2197815309 = [{a0: 1773455756, a1: 4275166512}];

function toUnix_1191183338(t_1191183339) {
  var result_1191183340 = 0;

    result_1191183340 = t_1191183339.seconds;

  return result_1191183340;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2181038241 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2181038241 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2181038241;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2181038241 = addInt(i_2181038241, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function rotl_2197815327(x_2197815328, k_2197815329) {
  var result_2197815330 = 0;

    result_2197815330 = ((x_2197815328 << k_2197815329) | (x_2197815328 >>> ((64 - k_2197815329) >>> 0)));

  return result_2197815330;

}

function next_2197815339(r_2197815340) {
  var result_2197815341 = 0;

    var s0_2197815342 = r_2197815340.a0;
    var s1_2197815343 = r_2197815340.a1;
    result_2197815341 = ((s0_2197815342 + s1_2197815343) >>> 0);
    s1_2197815343 = (s1_2197815343 ^ s0_2197815342);
    r_2197815340.a0 = ((rotl_2197815327(s0_2197815342, 55) ^ s1_2197815343) ^ (s1_2197815343 << 14));
    r_2197815340.a1 = rotl_2197815327(s1_2197815343, 36);

  return result_2197815341;

}

function skipRandomNumbers_2197815348(s_2197815349) {
    var s0_2197815351 = 0;
    var s1_2197815352 = 0;
    Label1: {
      var i_2197815361 = 0;
      var res_2181038247 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2181038247 <= 1)) break Label3;
            i_2197815361 = res_2181038247;
            Label4: {
              var b_2197815366 = 0;
              var i_2181038245 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2181038245 < 64)) break Label6;
                    b_2197815366 = i_2181038245;
                    if (!(((helper_2197815350[chckIndx(i_2197815361, 0, (helper_2197815350).length - 1)] & (1 << b_2197815366)) == 0))) {
                    s0_2197815351 = (s0_2197815351 ^ s_2197815349.a0);
                    s1_2197815352 = (s1_2197815352 ^ s_2197815349.a1);
                    }
                    
                    var _ = next_2197815339(s_2197815349);
                    i_2181038245 = addInt(i_2181038245, 1);
                  }
              };
            };
            res_2181038247 = addInt(res_2181038247, 1);
          }
      };
    };
    s_2197815349.a0 = s0_2197815351;
    s_2197815349.a1 = s1_2197815352;

  
}

function initRand_2197815507(seed_2197815508) {
    var Temporary1;

  var result_2197815509 = [({a0: 0, a1: 0})];

    if (!((seed_2197815508 == 0))) {
    Temporary1 = seed_2197815508;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2197815515 = Temporary1;
    result_2197815509[0].a0 = Math.floor(seed_2197815515 / Math.pow(2, 16));
    result_2197815509[0].a1 = (seed_2197815515 & 65535);
    skipRandomNumbers_2197815348(result_2197815509[0]);
    var _ = next_2197815339(result_2197815509[0]);

  return result_2197815509[0];

}

function rand_2197815382(r_2197815384, max_2197815385) {
  var result_2197815386 = 0;

  BeforeRet: {
    if ((max_2197815385 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2197815387 = max_2197815385;
      if ((max_2197815387 == -1)) {
      result_2197815386 = next_2197815339(r_2197815384);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2197815400 = next_2197815339(r_2197815384);
            if ((x_2197815400 <= ((4294967295 - (4294967295 % max_2197815387)) ))) {
            result_2197815386 = (x_2197815400 % ((max_2197815387 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2197815386;

}

function rand_2197815378(r_2197815379, max_2197815380) {
  var result_2197815381 = 0;

    result_2197815381 = rand_2197815382(r_2197815379, max_2197815380);

  return result_2197815381;

}
var t_2181038225 = toUnix_1191183338(getTime_1191183389());
var seed_2181038226 = [initRand_2197815507(t_2181038225)];
var incr_2181038231 = [rand_2197815378(seed_2181038226[0], 2147483647)];
var fuzz_2181038236 = rand_2197815378(seed_2181038226[0], 2147483647);

function idNone_2181038338() {
  var result_2181038339 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  return result_2181038339;

}
var null_2181038340 = idNone_2181038338();
var nextEditorId_2231370042 = [0];

function new_2499805210() {
  var result_2499805213 = null;

  BeforeRet: {
    var r_2499805215 = null;
    r_2499805215 = ({m_type: NTI2516582404});
    result_2499805213 = r_2499805215;
    break BeforeRet;
  };

  return result_2499805213;

}
var fs_2499805237 = new_2499805210();
var gEditor = null;
var handleIdCounter_2785017935 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2550137488 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2550137488 < L_855639328)) break Label3;
            i_855639333 = i_2550137488;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2550137488 = addInt(i_2550137488, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2650809094 = 0;
      colontmp__2650809094 = subInt(count_855639134, 1);
      var res_2650809095 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650809095 <= colontmp__2650809094)) break Label3;
            i_855639140 = res_2650809095;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2650809095 = addInt(res_2650809095, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849170(t_1291849173, key_1291849174, hc_1291849175, hc_1291849175_Idx) {
  var result_1291849176 = 0;

  BeforeRet: {
    hc_1291849175[hc_1291849175_Idx] = hash_1325400491(key_1291849174);
    if ((hc_1291849175[hc_1291849175_Idx] == 0)) {
    hc_1291849175[hc_1291849175_Idx] = 314159265;
    }
    
    if (((t_1291849173.data).length == 0)) {
    result_1291849176 = -1;
    break BeforeRet;
    }
    
    var h_1291849228 = (hc_1291849175[hc_1291849175_Idx] & (t_1291849173.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849173.data[chckIndx(h_1291849228, 0, (t_1291849173.data).length - 1)].Field0)) break Label2;
          if (((t_1291849173.data[chckIndx(h_1291849228, 0, (t_1291849173.data).length - 1)].Field0 == hc_1291849175[hc_1291849175_Idx]) && eqStrings(t_1291849173.data[chckIndx(h_1291849228, 0, (t_1291849173.data).length - 1)].Field1, key_1291849174))) {
          result_1291849176 = h_1291849228;
          break BeforeRet;
          }
          
          h_1291849228 = nextTry_1308622883(h_1291849228, (t_1291849173.data).length - 1);
        }
    };
    result_1291849176 = subInt(-1, h_1291849228);
  };

  return result_1291849176;

}

function hasKey_1291849163(t_1291849166, key_1291849167) {
  var result_1291849168 = false;

    var hc_1291849169 = [0];
    result_1291849168 = (0 <= rawGet_1291849170(t_1291849166, key_1291849167, hc_1291849169, 0));

  return result_1291849168;

}

function contains_1291849157(t_1291849160, key_1291849161) {
  var result_1291849162 = false;

  BeforeRet: {
    result_1291849162 = hasKey_1291849163(t_1291849160, key_1291849161);
    break BeforeRet;
  };

  return result_1291849162;

}

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function mustRehash_1291849622(t_1291849624) {
  var result_1291849625 = false;

    if (!((t_1291849624.counter < (t_1291849624.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849625 = ((mulInt((t_1291849624.data).length, 2) < mulInt(t_1291849624.counter, 3)) || (subInt((t_1291849624.data).length, t_1291849624.counter) < 4));

  return result_1291849625;

}

function rawInsert_1291850071(t_1291850075, data_1291850076, data_1291850076_Idx, key_1291850077, val_1291850078, hc_1291850079, h_1291850080) {
    data_1291850076[data_1291850076_Idx][chckIndx(h_1291850080, 0, (data_1291850076[data_1291850076_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850077, NTI33554449);
    data_1291850076[data_1291850076_Idx][chckIndx(h_1291850080, 0, (data_1291850076[data_1291850076_Idx]).length - 1)].Field2 = val_1291850078;
    data_1291850076[data_1291850076_Idx][chckIndx(h_1291850080, 0, (data_1291850076[data_1291850076_Idx]).length - 1)].Field0 = hc_1291850079;

  
}

function enlarge_1291849777(t_1291849780) {
    var n_1291849783 = [];
    n_1291849783 = new Array(chckRange(mulInt((t_1291849780.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849780.data).length, 2), 0, 2147483647) ; ++i) { n_1291849783[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849780.data; t_1291849780.data = n_1291849783; n_1291849783 = Temporary1;    Label2: {
      var i_1291849847 = 0;
      var colontmp__2650809103 = 0;
      colontmp__2650809103 = (n_1291849783).length - 1;
      var res_2650809105 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650809105 <= colontmp__2650809103)) break Label4;
            i_1291849847 = res_2650809105;
            var eh_1291849901 = n_1291849783[chckIndx(i_1291849847, 0, (n_1291849783).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849901)) {
            var j_1291849905 = (eh_1291849901 & (t_1291849780.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849780.data[chckIndx(j_1291849905, 0, (t_1291849780.data).length - 1)].Field0)) break Label6;
                  j_1291849905 = nextTry_1308622883(j_1291849905, (t_1291849780.data).length - 1);
                }
            };
            rawInsert_1291850071(t_1291849780, t_1291849780, "data", n_1291849783[chckIndx(i_1291849847, 0, (n_1291849783).length - 1)].Field1, n_1291849783[chckIndx(i_1291849847, 0, (n_1291849783).length - 1)].Field2, eh_1291849901, j_1291849905);
            }
            
            res_2650809105 = addInt(res_2650809105, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850240(t_1291850243, key_1291850244, hc_1291850245) {
  var result_1291850246 = 0;

  BeforeRet: {
    if (((t_1291850243.data).length == 0)) {
    result_1291850246 = -1;
    break BeforeRet;
    }
    
    var h_1291850297 = (hc_1291850245 & (t_1291850243.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850243.data[chckIndx(h_1291850297, 0, (t_1291850243.data).length - 1)].Field0)) break Label2;
          if (((t_1291850243.data[chckIndx(h_1291850297, 0, (t_1291850243.data).length - 1)].Field0 == hc_1291850245) && eqStrings(t_1291850243.data[chckIndx(h_1291850297, 0, (t_1291850243.data).length - 1)].Field1, key_1291850244))) {
          result_1291850246 = h_1291850297;
          break BeforeRet;
          }
          
          h_1291850297 = nextTry_1308622883(h_1291850297, (t_1291850243.data).length - 1);
        }
    };
    result_1291850246 = subInt(-1, h_1291850297);
  };

  return result_1291850246;

}

function HEX5BHEX5DHEX3D_1291849449(t_1291849452, key_1291849453, val_1291849454) {
    if (((t_1291849452.data).length == 0)) {
    var correctSizeHEX60gensym38_1291849503 = slotsNeeded_1308622891(32);
    t_1291849452.counter = 0;
    t_1291849452.data = new Array(chckRange(correctSizeHEX60gensym38_1291849503, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym38_1291849503, 0, 2147483647) ; ++i) { t_1291849452.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849508 = [0];
    var index_1291849515 = rawGet_1291849170(t_1291849452, key_1291849453, hc_1291849508, 0);
    if ((0 <= index_1291849515)) {
    t_1291849452.data[chckIndx(index_1291849515, 0, (t_1291849452.data).length - 1)].Field2 = val_1291849454;
    }
    else {
      if (((t_1291849452.data).length == 0)) {
      var correctSizeHEX60gensym41_1291849617 = slotsNeeded_1308622891(32);
      t_1291849452.counter = 0;
      t_1291849452.data = new Array(chckRange(correctSizeHEX60gensym41_1291849617, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_1291849617, 0, 2147483647) ; ++i) { t_1291849452.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849622(t_1291849452)) {
      enlarge_1291849777(t_1291849452);
      index_1291849515 = rawGetKnownHC_1291850240(t_1291849452, key_1291849453, hc_1291849508[0]);
      }
      
      index_1291849515 = subInt(-1, index_1291849515);
      rawInsert_1291850071(t_1291849452, t_1291849452, "data", key_1291849453, val_1291849454, hc_1291849508[0], index_1291849515);
      t_1291849452.counter = addInt(t_1291849452.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2046820391(context_2046820392) {
  var result_2046820393 = null;

    result_2046820393 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2046820393.handleActions = true;
    result_2046820393.handleInputs = false;
    result_2046820393.context = nimCopy(null, context_2046820392, NTI33554449);

  return result_2046820393;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850531(t_1291850534, key_1291850535) {
  var result_1291850536 = null;
  var result_1291850536_Idx = 0;

    var hcHEX60gensym22_1291850537 = [0];
    var indexHEX60gensym22_1291850544 = rawGet_1291849170(t_1291850534, key_1291850535, hcHEX60gensym22_1291850537, 0);
    if ((0 <= indexHEX60gensym22_1291850544)) {
    result_1291850536 = t_1291850534.data[chckIndx(indexHEX60gensym22_1291850544, 0, (t_1291850534.data).length - 1)]; result_1291850536_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850535);
    }
    

  return [result_1291850536, result_1291850536_Idx];

}

function getEventHandlerConfig_1291849111(self_1291849112, context_1291849113) {
    var Temporary1;

  var result_1291849114 = null;

  BeforeRet: {
    if (!(contains_1291849157(self_1291849112.eventHandlerConfigs, context_1291849113))) {
    HEX5BHEX5DHEX3D_1291849449(self_1291849112.eventHandlerConfigs, context_1291849113, newEventHandlerConfig_2046820391(context_1291849113));
    }
    
    result_1291849114 = (Temporary1 = HEX5BHEX5D_1291850531(self_1291849112.eventHandlerConfigs, context_1291849113), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849114;

}

function getModeConfig_2650808726(self_2650808727, mode_2650808728) {
  var result_2650808729 = null;

  BeforeRet: {
    result_2650808729 = getEventHandlerConfig_1291849111(self_2650808727.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2650808728 || []));
    break BeforeRet;
  };

  return result_2650808729;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2650809135 = 0;
      var result_2650809136 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809135 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] <= 127)) {
            result_2650809136 = chckRange(s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2650809135 <= subInt((s_788533333).length, 2))) {
            result_2650809136 = chckRange((((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2650809135, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 2);
            }
            else {
              result_2650809136 = 65533;
              i_2650809135 = addInt(i_2650809135, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2650809135 <= subInt((s_788533333).length, 3))) {
            result_2650809136 = chckRange(((((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2650809135, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2650809135, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 3);
            }
            else {
              result_2650809136 = 65533;
              i_2650809135 = addInt(i_2650809135, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2650809135 <= subInt((s_788533333).length, 4))) {
            result_2650809136 = chckRange((((((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2650809135, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2650809135, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2650809135, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 4);
            }
            else {
              result_2650809136 = 65533;
              i_2650809135 = addInt(i_2650809135, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2650809135 <= subInt((s_788533333).length, 5))) {
            result_2650809136 = chckRange(((((((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2650809135, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2650809135, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2650809135, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2650809135, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 5);
            }
            else {
              result_2650809136 = 65533;
              i_2650809135 = addInt(i_2650809135, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2650809135 <= subInt((s_788533333).length, 6))) {
            result_2650809136 = chckRange((((((((s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2650809135, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2650809135, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2650809135, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2650809135, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2650809135, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2650809135 = addInt(i_2650809135, 6);
            }
            else {
              result_2650809136 = 65533;
              i_2650809135 = addInt(i_2650809135, 1);
            }
            
            }
            else {
              result_2650809136 = chckRange(s_788533333[chckIndx(i_2650809135, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2650809135 = addInt(i_2650809135, 1);
            }
            }}}}}
            r_788533347 = result_2650809136;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2650809142 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809142 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2650809142, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2650809142, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2650809142 = addInt(i_2650809142, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2650809145 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809145 <= 3)) break Label3;
            if ((x_2013267026[i_2650809145] != undefined)) {
            value_2013267035 = i_2650809145;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2650809145 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2650809149 = 0;
      colontmp__2650809149 = (n_2013268694).length - 1;
      var res_2650809150 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650809150 <= colontmp__2650809149)) break Label4;
            i_2013268758 = res_2650809150;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2650809150 = addInt(res_2650809150, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2650809155 = 0;
      colontmp__2650809155 = (n_2013267558).length - 1;
      var res_2650809156 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650809156 <= colontmp__2650809155)) break Label4;
            i_2013267622 = res_2650809156;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2650809156 = addInt(res_2650809156, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2650809130 = 0;
      colontmp__2650809130 = (input_2013269802).length;
      var i_2650809131 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809131 < colontmp__2650809130)) break Label3;
            i_2013269829 = i_2650809131;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2650809127 = 0;
                  var L_2650809128 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2650809127 < L_2650809128)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2650809127, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2650809127 = addInt(i_2650809127, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2650809128))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2650809131 = addInt(i_2650809131, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2650809121 = 0;
      var L_2650809122 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809121 < L_2650809122)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2650809121, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2650809121 = addInt(i_2650809121, 1);
            if (!(((commands_2013269906).length == L_2650809122))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2046820466(t_2046820469) {
  var result_2046820470 = 0;

    result_2046820470 = t_2046820469.counter;

  return result_2046820470;

}

function buildDFA_2046820415(config_2046820416) {
  var result_2046820417 = null;

  BeforeRet: {
    var resultHEX60gensym2_2046820697 = [];
    Label1: {
      var xHEX60gensym2_2046820698 = {Field0: [], Field1: []};
      var L_2650809113 = len_2046820466(config_2046820416.commands);
      Label2: {
        var h_2650809115 = 0;
        var colontmp__2650809116 = 0;
        colontmp__2650809116 = (config_2046820416.commands.data).length - 1;
        var res_2650809117 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2650809117 <= colontmp__2650809116)) break Label4;
              h_2650809115 = res_2650809117;
              if (isFilled_1308622880(config_2046820416.commands.data[chckIndx(h_2650809115, 0, (config_2046820416.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2046820698 = nimCopy(xHEX60gensym2_2046820698, {Field0: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2650809115, 0, (config_2046820416.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2650809115, 0, (config_2046820416.commands.data).length - 1)].Field2, NTI33554449)}, NTI2046820387);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2046820698, NTI2046820387);
              resultHEX60gensym2_2046820697.push(Temporary5);;
              if (!((len_2046820466(config_2046820416.commands) == L_2650809113))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2650809117 = addInt(res_2650809117, 1);
            }
        };
      };
    };
    result_2046820417 = buildDFA_2013269905(resultHEX60gensym2_2046820697);
    break BeforeRet;
  };

  return result_2046820417;

}

function invoke_2147483710(event_2147483712) {
    Label1: {
      var h_2147483735 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2650809162 = 0;
      var L_2650809163 = (event_2147483712.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809162 < L_2650809163)) break Label3;
            h_2147483735 = event_2147483712.handlers[chckIndx(i_2650809162, 0, (event_2147483712.handlers).length - 1)];
            h_2147483735.Field1();
            i_2650809162 = addInt(i_2650809162, 1);
            if (!(((event_2147483712.handlers).length == L_2650809163))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2147483686(self_2147483687) {
    if (!(self_2147483687.mDirty)) {
    invoke_2147483710(self_2147483687.onMarkedDirty);
    }
    
    self_2147483687.mDirty = true;

  
}

function setMode_2650808915(self_2650808916, mode_2650808917) {
        
function HEX3Aanonymous_2650808943(actionHEX60gensym164HEX60gensym165_2650808944, argHEX60gensym164HEX60gensym165_2650808945) {
          var result_2650808946 = 0;

          BeforeRet: {
            if (handlerHEX60gensym164_2650808931.config.handleActions) {
            var action_2650808947 = nimCopy(null, actionHEX60gensym164HEX60gensym165_2650808944, NTI33554449);
            var arg_2650808948 = nimCopy(null, argHEX60gensym164HEX60gensym165_2650808945, NTI33554449);
            var responseHEX60gensym164HEX60gensym165_2650808949 = handleAction_2650800474(self_2650808916, action_2650808947, arg_2650808948);
            if (handlerHEX60gensym164_2650808931.config.consumeAllActions) {
            result_2650808946 = 3;
            break BeforeRet;
            }
            
            result_2650808946 = responseHEX60gensym164HEX60gensym165_2650808949;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym164_2650808931.config.consumeAllActions) {
            result_2650808946 = 3;
            break BeforeRet;
            }
            else {
              result_2650808946 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2650808946;

        }
        
function HEX3Aanonymous_2650808951(inputHEX60gensym164HEX60gensym166_2650808952) {
          var result_2650808953 = 0;

          BeforeRet: {
            if (handlerHEX60gensym164_2650808931.config.handleInputs) {
            var input_2650808954 = nimCopy(null, inputHEX60gensym164HEX60gensym166_2650808952, NTI33554449);
            result_2650808953 = handleInput_2650800482(self_2650808916, input_2650808954);
            break BeforeRet;
            }
            else {
              result_2650808953 = 1;
              break BeforeRet;
            }
            
          };

          return result_2650808953;

        }

  BeforeRet: {
    if (eqStrings(mode_2650808917, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2650808922 = [mnewString(0)];
    fmtRes_2650808922[0].push.apply(fmtRes_2650808922[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2650808922, 0, mode_2650808917, []);
    fmtRes_2650808922[0].push.apply(fmtRes_2650808922[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2650808922[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2650808917).length == 0)) {
    self_2650808916.modeEventHandler = null;
    }
    else {
      var config_2650808923 = getModeConfig_2650808726(self_2650808916, mode_2650808917);
      Label1: {
        var handlerHEX60gensym164_2650808931 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym164_2650808931.config = config_2650808923;
        handlerHEX60gensym164_2650808931.dfaInternal = buildDFA_2046820415(config_2650808923);
        handlerHEX60gensym164_2650808931.handleAction = HEX3Aanonymous_2650808943;
        handlerHEX60gensym164_2650808931.handleInput = HEX3Aanonymous_2650808951;
      };
      self_2650808916.modeEventHandler = handlerHEX60gensym164_2650808931;
    }
    
    self_2650808916.currentMode = nimCopy(null, mode_2650808917, NTI33554449);
    markDirty_2147483686(self_2650808916);
  };

  
}

function setModeJsWrapper_2650808876(self_2650809040, mode_2650809041) {
    setMode_2650808915(self_2650809040, mode_2650809041);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2650808876(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2650809171(self_2650809172) {
  var result_2650809173 = [];

  BeforeRet: {
    result_2650809173 = nimCopy(null, self_2650809172.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2650809173;

}

function modeJsWrapper_2650809167(self_2650809202) {
  var result_2650809203 = [];

    result_2650809203 = nimCopy(null, mode_2650809171(self_2650809202), NTI33554449);

  return result_2650809203;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2650809167(this));};

function getContextWithMode_2650808280(self_2650808281, context_2650808282) {
  var result_2650809231 = [];

  BeforeRet: {
    result_2650809231 = nimCopy(null, (context_2650808282 || []).concat([46] || [],self_2650808281.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2650809231;

}

function getContextWithModeJsWrapper_2650809224(self_2650809261, context_2650809262) {
  var result_2650809263 = [];

    result_2650809263 = nimCopy(null, getContextWithMode_2650808280(self_2650809261, context_2650809262), NTI33554449);

  return result_2650809263;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2650809224(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2650808340(s_2650808342, default_2650808343) {
    var Temporary1;

  var result_2650808344 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2650808342))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2650808343;
      break;
    }
    result_2650808344 = Temporary1;

  return result_2650808344;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2650809392 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809392 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2650809392, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2650809392 = addInt(i_2650809392, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2550137369 = 0;
      colontmp__2550137369 = subInt(L_33557827, 1);
      var res_2550137370 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2550137370 <= colontmp__2550137369)) break Label3;
            i_33557832 = res_2550137370;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2550137370 = addInt(res_2550137370, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2650809398 = 0;
      var splitsHEX60gensym40_2650809399 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2650809398 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2650809401 = lastHEX60gensym40_2650809398;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2650809398 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2650809398, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2650809398 = addInt(lastHEX60gensym40_2650809398, 1);
                }
            };
            if ((splitsHEX60gensym40_2650809399 == 0)) {
            lastHEX60gensym40_2650809398 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2650809401, subInt(lastHEX60gensym40_2650809398, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2650809399 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2650809399 = subInt(splitsHEX60gensym40_2650809399, 1);
            lastHEX60gensym40_2650809398 = addInt(lastHEX60gensym40_2650809398, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2650808314(editor_2650808316, path_2650808317, default_2650808318) {
  var result_2650808324 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2650808316 == null)) {
      result_2650808324 = default_2650808318;
      break BeforeRet;
      }
      
      var nodeHEX60gensym142_2650808336 = HEX7BHEX7D_1627393316(editor_2650808316.options, nsuSplitString(path_2650808317, [46], -1));
      if ((nodeHEX60gensym142_2650808336 == null)) {
      result_2650808324 = default_2650808318;
      break BeforeRet;
      }
      
    };
    result_2650808324 = parseEnum_2650808340(getStr_1627390106(nodeHEX60gensym142_2650808336, []), default_2650808318);
    break BeforeRet;
  };

  return result_2650808324;

}

function selection_2650800624(self_2650800625) {
  var result_2650800626 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650800626 = nimCopy(result_2650800626, self_2650800625.selectionsInternal[chckIndx((self_2650800625.selectionsInternal).length - 1, 0, (self_2650800625.selectionsInternal).length - 1)], NTI2231369739);

  return result_2650800626;

}

function getCursor_2650808310(self_2650808311, cursor_2650808312) {
  var result_2650808313 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2650808312) {
    case 0:
      var configCursor_2650808374 = getOption_2650808314(self_2650808311.editor, getContextWithMode_2650808280(self_2650808311, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2650808313 = nimCopy(result_2650808313, getCursor_2650808310(self_2650808311, configCursor_2650808374), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2650808313 = nimCopy(result_2650808313, selection_2650800624(self_2650808311).Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2650808313 = nimCopy(result_2650808313, selection_2650800624(self_2650808311).Field0, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2650808313;

}

function updateTargetColumn_2650809293(self_2650809294, cursor_2650809295) {
    self_2650809294.targetColumn = getCursor_2650808310(self_2650809294, cursor_2650809295).Field1;

  
}

function updateTargetColumnJsWrapper_2650809289(self_2650809324, cursor_2650809325) {
    updateTargetColumn_2650809293(self_2650809324, cursor_2650809325);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2650809289(this, cursor_));};

function HEX3DHEX3D_2231369801(x_2231369803, y_2231369804) {
  var result_2231369805 = false;

  BeforeRet: {
    if (!((x_2231369803["Field0"] == y_2231369804["Field0"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    if (!((x_2231369803["Field1"] == y_2231369804["Field1"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    result_2231369805 = true;
    break BeforeRet;
  };

  return result_2231369805;

}

function HEX3DHEX3D_2231369791(x_2231369793, y_2231369794) {
  var result_2231369795 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field0"], y_2231369794["Field0"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field1"], y_2231369794["Field1"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    result_2231369795 = true;
    break BeforeRet;
  };

  return result_2231369795;

}

function newSeq_2650800664(len_2650800666) {
  var result_2650800667 = [];

    result_2650800667 = new Array(len_2650800666); for (var i = 0 ; i < len_2650800666 ; ++i) { result_2650800667[i] = []; }
  return result_2650800667;

}

function expandIfNeeded_2650800654(deq_2650800656) {
              var Temporary5;
    var Temporary6;

    if ((deq_2650800656.mask == 0)) {
    var correctSizeHEX60gensym9_2650800658 = nextPowerOfTwo_872415437(4);
    deq_2650800656.mask = subInt(correctSizeHEX60gensym9_2650800658, 1);
    deq_2650800656.data = new Array(chckRange(correctSizeHEX60gensym9_2650800658, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2650800658, 0, 2147483647) ; ++i) { deq_2650800656.data[i] = []; }    }
    
    var cap_2650800663 = addInt(deq_2650800656.mask, 1);
    if ((cap_2650800663 <= deq_2650800656.count)) {
    var n_2650800681 = newSeq_2650800664(chckRange(mulInt(cap_2650800663, 2), 0, 2147483647));
    var i_2650800682 = 0;
    Label1: {
      var x_2650800692 = null;
      var x_2650800692_Idx = 0;
      var i_2650809458 = deq_2650800656.head;
      Label2: {
        var c_2650809460 = 0;
        var i_2650809461 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2650809461 < deq_2650800656.count)) break Label4;
              c_2650809460 = i_2650809461;
              x_2650800692 = deq_2650800656.data; x_2650800692_Idx = chckIndx(i_2650809458, 0, (deq_2650800656.data).length - 1);
              Temporary5 = x_2650800692[x_2650800692_Idx];
              x_2650800692[x_2650800692_Idx] = genericReset(x_2650800692[x_2650800692_Idx], NTI2231369747);
              n_2650800681[chckIndx(i_2650800682, 0, (n_2650800681).length - 1)] = nimCopy(null, Temporary5, NTI2231369747);
              i_2650800682 = addInt(i_2650800682, 1);
              i_2650809458 = (addInt(i_2650809458, 1) & deq_2650800656.mask);
              i_2650809461 = addInt(i_2650809461, 1);
            }
        };
      };
    };
    Temporary6 = n_2650800681;
    n_2650800681 = genericReset(n_2650800681, NTI2650800514);
    deq_2650800656.data = nimCopy(null, Temporary6, NTI2650800514);
    deq_2650800656.mask = subInt(mulInt(cap_2650800663, 2), 1);
    deq_2650800656.tail = deq_2650800656.count;
    deq_2650800656.head = 0;
    }
    

  
}

function addLast_2650800645(deq_2650800647, item_2650800648) {
    expandIfNeeded_2650800654(deq_2650800647);
    deq_2650800647.count = addInt(deq_2650800647.count, 1);
    deq_2650800647.data[chckIndx(deq_2650800647.tail, 0, (deq_2650800647.data).length - 1)] = nimCopy(null, item_2650800648, NTI2231369747);
    deq_2650800647.tail = (addInt(deq_2650800647.tail, 1) & deq_2650800647.mask);

  
}

function len_2650800784(deq_2650800786) {
  var result_2650800787 = 0;

    result_2650800787 = deq_2650800786.count;

  return result_2650800787;

}

function popFirst_2650800845(deq_2650800847) {
    var Temporary1;

  var result_2650800848 = [];

    if ((deq_2650800847.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2650800847.count = subInt(deq_2650800847.count, 1);
    Temporary1 = deq_2650800847.data[chckIndx(deq_2650800847.head, 0, (deq_2650800847.data).length - 1)];
    deq_2650800847.data[chckIndx(deq_2650800847.head, 0, (deq_2650800847.data).length - 1)] = genericReset(deq_2650800847.data[chckIndx(deq_2650800847.head, 0, (deq_2650800847.data).length - 1)], NTI2231369747);
    result_2650800848 = nimCopy(null, Temporary1, NTI2231369747);
    deq_2650800847.head = (addInt(deq_2650800847.head, 1) & deq_2650800847.mask);

  return result_2650800848;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2650800492(self_2650800493, line_2650800494) {
  var result_2650800495 = 0;

  BeforeRet: {
    if ((line_2650800494 < (self_2650800493.lines).length)) {
    result_2650800495 = (self_2650800493.lines[chckIndx(line_2650800494, 0, (self_2650800493.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2650800495 = 0;
    break BeforeRet;
  };

  return result_2650800495;

}

function clampCursor_2650800506(self_2650800507, cursor_2650800508) {
  var result_2650800509 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2650800510 = nimCopy(null, cursor_2650800508, NTI2231369737);
    if (((self_2650800507.lines).length == 0)) {
    var colontmp__2650809465 = 0;
    var colontmp__2650809466 = 0;
    result_2650800509 = nimCopy(result_2650800509, {Field0: colontmp__2650809465, Field1: colontmp__2650809466}, NTI2231369737);
    break BeforeRet;
    }
    
    cursor_2650800510.Field0 = clamp_1660945119(cursor_2650800510.Field0, 0, subInt((self_2650800507.lines).length, 1));
    cursor_2650800510.Field1 = clamp_1660945119(cursor_2650800510.Field1, 0, lineLength_2650800492(self_2650800507, cursor_2650800510.Field0));
    result_2650800509 = nimCopy(result_2650800509, cursor_2650800510, NTI2231369737);
    break BeforeRet;
  };

  return result_2650800509;

}

function clampSelection_2650800531(self_2650800532, selection_2650800533) {
  var result_2650800534 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2650809463 = clampCursor_2650800506(self_2650800532, selection_2650800533.Field0);
    var colontmp__2650809464 = clampCursor_2650800506(self_2650800532, selection_2650800533.Field1);
    result_2650800534 = nimCopy(result_2650800534, {Field0: nimCopy(null, colontmp__2650809463, NTI2231369737), Field1: nimCopy(null, colontmp__2650809464, NTI2231369737)}, NTI2231369739);

  return result_2650800534;

}

function clampSelection_2650800535(self_2650800536, selection_2650800537) {
  var result_2650800538 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650800538 = nimCopy(result_2650800538, clampSelection_2650800531(self_2650800536.document, selection_2650800537), NTI2231369739);

  return result_2650800538;

}

function selectionHEX3D_2650800630(self_2650800631, selection_2650800632) {
  BeforeRet: {
    if ((((self_2650800631.selectionsInternal).length == 1) && HEX3DHEX3D_2231369791(self_2650800631.selectionsInternal[chckIndx(0, 0, (self_2650800631.selectionsInternal).length - 1)], selection_2650800632))) {
    break BeforeRet;
    }
    
    addLast_2650800645(self_2650800631.selectionHistory, self_2650800631.selectionsInternal);
    if ((100 < len_2650800784(self_2650800631.selectionHistory))) {
    var _ = popFirst_2650800845(self_2650800631.selectionHistory);
    }
    
    self_2650800631.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2650800535(self_2650800631, selection_2650800632), NTI2231369739)], NTI2650800629);
    markDirty_2147483686(self_2650800631);
  };

  
}

function invertSelection_2650809410(self_2650809411) {
    selectionHEX3D_2650800630(self_2650809411, {Field0: nimCopy(null, selection_2650800624(self_2650809411).Field1, NTI2231369737), Field1: nimCopy(null, selection_2650800624(self_2650809411).Field0, NTI2231369737)});

  
}

function invertSelectionJsWrapper_2650809406(self_2650809439) {
    invertSelection_2650809410(self_2650809439);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2650809406(this));};

function any_2231370161(s_2231370163, pred_2231370165) {
  var result_2231370166 = false;

  BeforeRet: {
    Label1: {
      var i_2231370179 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2650809912 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809912 < (s_2231370163).length)) break Label3;
            i_2231370179 = s_2231370163[chckIndx(i_2650809912, 0, (s_2231370163).length - 1)];
            if (pred_2231370165(i_2231370179)) {
            result_2231370166 = true;
            break BeforeRet;
            }
            
            i_2650809912 = addInt(i_2650809912, 1);
          }
      };
    };
    result_2231370166 = false;
  };

  return result_2231370166;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2231370071(x_2231370073, y_2231370074) {
  var result_2231370075 = false;

  BeforeRet: {
    var c_2231370085 = cmp_33557727(x_2231370073["Field0"], y_2231370074["Field0"]);
    if ((c_2231370085 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370085)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    var c_2231370090 = cmp_33557727(x_2231370073["Field1"], y_2231370074["Field1"]);
    if ((c_2231370090 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370090)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    result_2231370075 = true;
    break BeforeRet;
  };

  return result_2231370075;

}

function contains_2231370119(selection_2231370120, other_2231370121) {
  var result_2231370122 = false;

    result_2231370122 = (HEX3CHEX3D_2231370071(selection_2231370120.Field0, other_2231370121.Field0) && HEX3CHEX3D_2231370071(other_2231370121.Field1, selection_2231370120.Field1));

  return result_2231370122;

}

function contains_2231370198(self_2231370199, other_2231370200) {
    other_2231370200 = nimCopy(null, other_2231370200, NTI2231369739);
    
function HEX3Aanonymous_2231370202(s_2231370205) {
      var result_2231370208 = false;

        result_2231370208 = contains_2231370119(s_2231370205, other_2231370200);

      return result_2231370208;

    }

  var result_2231370201 = false;

    result_2231370201 = any_2231370161(self_2231370199, HEX3Aanonymous_2231370202);

  return result_2231370201;

}

function deduplicate_2650800576(s_2650800578, isSorted_2650800579) {
  var result_2650800580 = [];

    result_2650800580 = nimCopy(null, [], NTI2650800460);
    if ((0 < (s_2650800578).length)) {
    if (isSorted_2650800579) {
    var prev_2650800588 = nimCopy(null, s_2650800578[chckIndx(0, 0, (s_2650800578).length - 1)], NTI2231369739);
    var Temporary1 = nimCopy(null, prev_2650800588, NTI2231369739);
    result_2650800580.push(Temporary1);;
    Label2: {
      var i_2650800600 = 0;
      var colontmp__2650809904 = 0;
      colontmp__2650809904 = (s_2650800578).length - 1;
      var res_2650809905 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2650809905 <= colontmp__2650809904)) break Label4;
            i_2650800600 = res_2650809905;
            if (!(HEX3DHEX3D_2231369791(s_2650800578[chckIndx(i_2650800600, 0, (s_2650800578).length - 1)], prev_2650800588))) {
            prev_2650800588 = nimCopy(prev_2650800588, s_2650800578[chckIndx(i_2650800600, 0, (s_2650800578).length - 1)], NTI2231369739);
            var Temporary5 = nimCopy(null, prev_2650800588, NTI2231369739);
            result_2650800580.push(Temporary5);;
            }
            
            res_2650809905 = addInt(res_2650809905, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2650800612 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2650809909 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2650809909 < (s_2650800578).length)) break Label8;
              itm_2650800612 = s_2650800578[chckIndx(i_2650809909, 0, (s_2650800578).length - 1)];
              if (!(contains_2231370198(result_2650800580, itm_2650800612))) {
              var Temporary9 = nimCopy(null, itm_2650800612, NTI2231369739);
              result_2650800580.push(Temporary9);;
              }
              
              i_2650809909 = addInt(i_2650809909, 1);
            }
        };
      };
    }
    
    }
    

  return result_2650800580;

}

function map_2650800554(s_2650800557, op_2650800559) {
  var result_2650800560 = [];

    result_2650800560 = new Array(chckRange((s_2650800557).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2650800557).length, 0, 2147483647) ; ++i) { result_2650800560[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2650800575 = 0;
      var colontmp__2650809915 = 0;
      colontmp__2650809915 = (s_2650800557).length;
      var i_2650809916 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809916 < colontmp__2650809915)) break Label3;
            i_2650800575 = i_2650809916;
            result_2650800560[chckIndx(i_2650800575, 0, (result_2650800560).length - 1)] = nimCopy(result_2650800560[chckIndx(i_2650800575, 0, (result_2650800560).length - 1)], op_2650800559(s_2650800557[chckIndx(i_2650800575, 0, (s_2650800557).length - 1)]), NTI2231369739);
            i_2650809916 = addInt(i_2650809916, 1);
          }
      };
    };

  return result_2650800560;

}

function clampAndMergeSelections_2650800539(self_2650800540, selections_2650800541) {
    
function HEX3Aanonymous_2650800543(s_2650800550) {
      var result_2650800553 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2650800553 = nimCopy(result_2650800553, clampSelection_2650800531(self_2650800540, s_2650800550), NTI2231369739);

      return result_2650800553;

    }

  var result_2650800542 = [];

    result_2650800542 = nimCopy(null, deduplicate_2650800576(map_2650800554(selections_2650800541, HEX3Aanonymous_2650800543), false), NTI2650800449);

  return result_2650800542;

}

function HEX40_2650804235(a_2650804237) {
  var result_2650804238 = [];

    result_2650804238 = new Array(chckRange((a_2650804237).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2650804237).length, 0, 2147483647) ; ++i) { result_2650804238[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2650804253 = 0;
      var colontmp__2650809919 = 0;
      colontmp__2650809919 = subInt((a_2650804237).length, 1);
      var res_2650809920 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650809920 <= colontmp__2650809919)) break Label3;
            i_2650804253 = res_2650809920;
            result_2650804238[chckIndx(i_2650804253, 0, (result_2650804238).length - 1)] = nimCopy(result_2650804238[chckIndx(i_2650804253, 0, (result_2650804238).length - 1)], a_2650804237[chckIndx(i_2650804253, 0, (a_2650804237).length - 1)], NTI2231369739);
            res_2650809920 = addInt(res_2650809920, 1);
          }
      };
    };

  return result_2650804238;

}

function byteOffset_2650804215(self_2650804216, cursor_2650804217) {
  var result_2650804218 = 0;

    result_2650804218 = cursor_2650804217.Field1;
    Label1: {
      var i_2650804223 = 0;
      var i_2650809923 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809923 < cursor_2650804217.Field0)) break Label3;
            i_2650804223 = i_2650809923;
            result_2650804218 = addInt(result_2650804218, addInt((self_2650804216.lines[chckIndx(i_2650804223, 0, (self_2650804216.lines).length - 1)]).length, 1));
            i_2650809923 = addInt(i_2650809923, 1);
          }
      };
    };

  return result_2650804218;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2650808904 = 0;
      colontmp__2650808904 = start_855639700;
      var res_2650808905 = colontmp__2650808904;
      Label3: {
          Label4: while (true) {
          if (!(res_2650808905 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2650808905;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2650808905 = addInt(res_2650808905, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2650809926 = 0;
      colontmp__2650809926 = subInt(m_855639633, 1);
      var i_2650809927 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809927 < colontmp__2650809926)) break Label3;
            i_855639653 = i_2650809927;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2650809927 = addInt(i_2650809927, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2650804799(x_2650804801, x_2650804801_Idx, item_2650804802, i_2650804803) {
    var it_2650804823 = [];
    x_2650804801[x_2650804801_Idx] = x_2650804801[x_2650804801_Idx] || []; x_2650804801[x_2650804801_Idx].splice(i_2650804803, 0, it_2650804823);
    x_2650804801[x_2650804801_Idx][chckIndx(i_2650804803, 0, (x_2650804801[x_2650804801_Idx]).length - 1)] = nimCopy(null, item_2650804802, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2231370221(cursor_2231370222) {
  var result_2231370223 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2650809936 = nimCopy(null, cursor_2231370222, NTI2231369737);
    var colontmp__2650809937 = nimCopy(null, cursor_2231370222, NTI2231369737);
    result_2231370223 = nimCopy(result_2231370223, {Field0: nimCopy(null, colontmp__2650809936, NTI2231369737), Field1: nimCopy(null, colontmp__2650809937, NTI2231369737)}, NTI2231369739);

  return result_2231370223;

}

function add_2231370245(cursor_2231370246, selection_2231370247) {
  var result_2231370248 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370246, selection_2231370247.Field0)) {
    result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
    break BeforeRet;
    }
    
    if ((selection_2231370247.Field0.Field0 == selection_2231370247.Field1.Field0)) {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2650809940 = cursor_2231370246.Field0;
    var colontmp__2650809941 = addInt(cursor_2231370246.Field1, subInt(selection_2231370247.Field1.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2650809940, Field1: colontmp__2650809941}, NTI2231369737);
    break BeforeRet;
    }
    else {
      result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2650809942 = selection_2231370247.Field1.Field0;
    var colontmp__2650809943 = addInt(selection_2231370247.Field1.Field1, subInt(cursor_2231370246.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2650809942, Field1: colontmp__2650809943}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2650809944 = addInt(cursor_2231370246.Field0, subInt(selection_2231370247.Field1.Field0, selection_2231370247.Field0.Field0));
      var colontmp__2650809945 = cursor_2231370246.Field1;
      result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2650809944, Field1: colontmp__2650809945}, NTI2231369737);
      break BeforeRet;
    }
    }
  };

  return result_2231370248;

}

function add_2231370253(self_2231370254, other_2231370255) {
  var result_2231370256 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2650809938 = add_2231370245(self_2231370254.Field0, other_2231370255);
    var colontmp__2650809939 = add_2231370245(self_2231370254.Field1, other_2231370255);
    result_2231370256 = nimCopy(result_2231370256, {Field0: nimCopy(null, colontmp__2650809938, NTI2231369737), Field1: nimCopy(null, colontmp__2650809939, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370256;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2650809947 = 0;
      colontmp__2650809947 = (a_855639591).length - 1;
      var res_2650809948 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650809948 <= colontmp__2650809947)) break Label3;
            i_855639608 = res_2650809948;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2650809948 = addInt(res_2650809948, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2650809951 = 0;
      colontmp__2650809951 = (a_855639591).length - 1;
      var res_2650809952 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2650809952 <= colontmp__2650809951)) break Label6;
            i_855639621 = res_2650809952;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2650809952 = addInt(res_2650809952, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2751463520(self_2751463522) {
  var result_2751463523 = false;

    result_2751463523 = !((self_2751463522.val == null));

  return result_2751463523;

}

function get_2751463511(self_2751463513, otherwise_2751463514) {
    var Temporary1;

  var result_2751463515 = null;

    if (isSome_2751463520(self_2751463513)) {
    Temporary1 = self_2751463513.val;
    }
    else {
    Temporary1 = otherwise_2751463514;
    }
    
    result_2751463515 = Temporary1;

  return result_2751463515;

}

function parseString_2751463483(self_2751463484, text_2751463485, oldTree_2751463497) {
  var result_2751463498 = null;

  BeforeRet: {
    result_2751463498 = self_2751463484.parse(toJSStr(text_2751463485), get_2751463511(oldTree_2751463497, null));
    break BeforeRet;
  };

  return result_2751463498;

}

function some_2650804409(val_2650804411) {
  var result_2650804412 = ({val: null});

    if (!(!((val_2650804411 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2650804412.val = val_2650804411;

  return result_2650804412;

}

function invoke_2650804890(event_2650804892, arg_2650804893) {
    Label1: {
      var h_2650804916 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2650809956 = 0;
      var L_2650809957 = (event_2650804892.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809956 < L_2650809957)) break Label3;
            h_2650804916 = event_2650804892.handlers[chckIndx(i_2650809956, 0, (event_2650804892.handlers).length - 1)];
            h_2650804916.Field1(arg_2650804893);
            i_2650809956 = addInt(i_2650809956, 1);
            if (!(((event_2650804892.handlers).length == L_2650809957))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2650801097(event_2650801099, arg_2650801100) {
    Label1: {
      var h_2650801123 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2650809961 = 0;
      var L_2650809962 = (event_2650801099.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809961 < L_2650809962)) break Label3;
            h_2650801123 = event_2650801099.handlers[chckIndx(i_2650809961, 0, (event_2650801099.handlers).length - 1)];
            h_2650801123.Field1(arg_2650801100);
            i_2650809961 = addInt(i_2650809961, 1);
            if (!(((event_2650801099.handlers).length == L_2650809962))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyTextChanged_2650804187(self_2650804188) {
    invoke_2650801097(self_2650804188.textChanged, self_2650804188);

  
}

function insert_2650804734(self_2650804735, selections_2650804736, oldSelection_2650804737, text_2650804738, notify_2650804739, record_2650804740, autoIndent_2650804741) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2650804742 = [];

    var newEmptyLines_2650804743 = [];
    result_2650804742 = nimCopy(null, clampAndMergeSelections_2650800539(self_2650804735, selections_2650804736), NTI2231369747);
    var undoOp_2650804751 = {kind: 2, children: [], oldSelection: HEX40_2650804235(oldSelection_2650804737), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2650804757 = 0;
      var selection_2650804758 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2650809900 = 0;
      var L_2650809901 = (result_2650804742).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650809900 < L_2650809901)) break Label3;
            i_2650804757 = i_2650809900;
            selection_2650804758 = nimCopy(selection_2650804758, result_2650804742[chckIndx(i_2650809900, 0, (result_2650804742).length - 1)], NTI2231369739);
            var oldCursor_2650804759 = nimCopy(null, selection_2650804758.Field1, NTI2231369737);
            var cursor_2650804760 = nimCopy(null, selection_2650804758.Field1, NTI2231369737);
            var startByte_2650804761 = byteOffset_2650804215(self_2650804735, cursor_2650804760);
            var lineCounter_2650804762 = 0;
            if (self_2650804735.singleLine) {
            var text_2650804763 = nsuReplaceStr(text_2650804738, [10], [32]);
            if (((self_2650804735.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2650804763, NTI33554449);
            self_2650804735.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2650804735.lines, chckIndx(0, 0, (self_2650804735.lines).length - 1), text_2650804763, chckRange(cursor_2650804760.Field1, 0, 2147483647));
            }
            
            cursor_2650804760.Field1 = addInt(cursor_2650804760.Field1, (text_2650804763).length);
            }
            else {
              Label5: {
                var line_2650804775 = [];
                var first_2650809889 = 0;
                var last_2650809890 = 0;
                var eolpos_2650809891 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2650809890 < (text_2650804738).length) && !((ConstSet23[text_2650804738[chckIndx(last_2650809890, 0, (text_2650804738).length - 1)]] != undefined)))) break Label9;
                            last_2650809890 = addInt(last_2650809890, 1);
                          }
                      };
                      eolpos_2650809891 = last_2650809890;
                      if ((last_2650809890 < (text_2650804738).length)) {
                      if ((text_2650804738[chckIndx(last_2650809890, 0, (text_2650804738).length - 1)] == 10)) {
                      last_2650809890 = addInt(last_2650809890, 1);
                      }
                      else {
                      if ((text_2650804738[chckIndx(last_2650809890, 0, (text_2650804738).length - 1)] == 13)) {
                      last_2650809890 = addInt(last_2650809890, 1);
                      if (((last_2650809890 < (text_2650804738).length) && (text_2650804738[chckIndx(last_2650809890, 0, (text_2650804738).length - 1)] == 10))) {
                      last_2650809890 = addInt(last_2650809890, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2650809890, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2650809891, 1);
                      }
                      
                      line_2650804775 = substr_33557821(text_2650804738, first_2650809889, Temporary10);
                      try {
                      if ((0 < lineCounter_2650804762)) {
                      insert_2650804799(self_2650804735, "lines", HEX5BHEX5D_855639319(self_2650804735.lines[chckIndx(cursor_2650804760.Field0, 0, (self_2650804735.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2650804760.Field1, 1)), chckRange(addInt(cursor_2650804760.Field0, 1), 0, 2147483647));
                      newEmptyLines_2650804743.push(addInt(cursor_2650804760.Field0, 1));;
                      if ((cursor_2650804760.Field1 < lineLength_2650800492(self_2650804735, cursor_2650804760.Field0))) {
                      delete_855639365(self_2650804735.lines, chckIndx(cursor_2650804760.Field0, 0, (self_2650804735.lines).length - 1), HEX2EHEX2E_805306418(cursor_2650804760.Field1, subInt(lineLength_2650800492(self_2650804735, cursor_2650804760.Field0), 1)));
                      }
                      
                      var colontmp__2650809885 = addInt(cursor_2650804760.Field0, 1);
                      var colontmp__2650809886 = 0;
                      cursor_2650804760 = nimCopy(cursor_2650804760, {Field0: colontmp__2650809885, Field1: colontmp__2650809886}, NTI2231369737);
                      }
                      
                      if ((0 < (line_2650804775).length)) {
                      insert_33557745(self_2650804735.lines, chckIndx(cursor_2650804760.Field0, 0, (self_2650804735.lines).length - 1), line_2650804775, chckRange(cursor_2650804760.Field1, 0, 2147483647));
                      cursor_2650804760.Field1 = addInt(cursor_2650804760.Field1, (line_2650804775).length);
                      }
                      
                      if ((eolpos_2650809891 == last_2650809890)) {
                      break Label6;
                      }
                      
                      first_2650809889 = last_2650809890;
                      } finally {
                      lineCounter_2650804762 = addInt(lineCounter_2650804762, 1);
                      }
                    }
                };
              };
            }
            
            result_2650804742[chckIndx(i_2650804757, 0, (result_2650804742).length - 1)] = nimCopy(result_2650804742[chckIndx(i_2650804757, 0, (result_2650804742).length - 1)], toSelection_2231370221(cursor_2650804760), NTI2231369739);
            Label12: {
              var k_2650804850 = 0;
              var colontmp__2650809895 = 0;
              var colontmp__2650809896 = 0;
              colontmp__2650809895 = addInt(i_2650804757, 1);
              colontmp__2650809896 = (result_2650804742).length - 1;
              var res_2650809897 = colontmp__2650809895;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2650809897 <= colontmp__2650809896)) break Label14;
                    k_2650804850 = res_2650809897;
                    result_2650804742[chckIndx(k_2650804850, 0, (result_2650804742).length - 1)] = nimCopy(result_2650804742[chckIndx(k_2650804850, 0, (result_2650804742).length - 1)], add_2231370253(result_2650804742[chckIndx(k_2650804850, 0, (result_2650804742).length - 1)], {Field0: nimCopy(null, oldCursor_2650804759, NTI2231369737), Field1: nimCopy(null, cursor_2650804760, NTI2231369737)}), NTI2231369739);
                    res_2650809897 = addInt(res_2650809897, 1);
                  }
              };
            };
            if (!((self_2650804735.tsParser == null))) {
            var edit_2650804854 = {startIndex: startByte_2650804761, oldEndIndex: startByte_2650804761, newEndIndex: addInt(startByte_2650804761, (text_2650804738).length), startPosition: {row: oldCursor_2650804759.Field0, column: oldCursor_2650804759.Field1, m_type: NTI2751463438}, oldEndPosition: {row: oldCursor_2650804759.Field0, column: oldCursor_2650804759.Field1, m_type: NTI2751463438}, newEndPosition: {row: cursor_2650804760.Field0, column: cursor_2650804760.Field1, m_type: NTI2751463438}, m_type: NTI2751463448};
            var _ = self_2650804735.currentTree.edit(edit_2650804854);
            var strValue_2650804855 = nsuJoinSep(self_2650804735.lines, [10]);
            self_2650804735.currentTree = parseString_2751463483(self_2650804735.tsParser, strValue_2650804855, some_2650804409(self_2650804735.currentTree));
            }
            
            self_2650804735.version = addInt(self_2650804735.version, 1);
            if (record_2650804740) {
            var Temporary15 = undoOp_2650804751;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2650800131)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2650804759, NTI2231369737), Field1: nimCopy(null, cursor_2650804760, NTI2231369737)}, NTI2231369739), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2650804739) {
            invoke_2650804890(self_2650804735.textInserted, {Field0: self_2650804735, Field1: nimCopy(null, oldCursor_2650804759, NTI2231369737), Field2: nimCopy(null, text_2650804738, NTI33554449)});
            }
            
            i_2650809900 = addInt(i_2650809900, 1);
            if (!(((result_2650804742).length == L_2650809901))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2650804739) {
    notifyTextChanged_2650804187(self_2650804735);
    }
    
      if (!record_2650804740) Temporary16 = false; else {        var Temporary17 = undoOp_2650804751;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2650800131)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2650804735.undoOps.push(undoOp_2650804751);;
    self_2650804735.redoOps = nimCopy(null, [], NTI2650802497);
    }
    

  return result_2650804742;

}

function selections_2650800621(self_2650800622) {
  var result_2650800623 = [];

    result_2650800623 = nimCopy(null, self_2650800622.selectionsInternal, NTI2231369747);

  return result_2650800623;

}

function insert_2650809473(self_2650809474, selections_2650809475, text_2650809476, notify_2650809477, record_2650809478, autoIndent_2650809479) {
  var result_2650809480 = [];

  BeforeRet: {
    result_2650809480 = nimCopy(null, insert_2650804734(self_2650809474.document, selections_2650809475, selections_2650800621(self_2650809474), text_2650809476, notify_2650809477, record_2650809478, autoIndent_2650809479), NTI2650802829);
    break BeforeRet;
  };

  return result_2650809480;

}

function insertJsWrapper_2650809469(self_2650809514, selections_2650809515, text_2650809516, notify_2650809517, record_2650809518, autoIndent_2650809519) {
  var result_2650809520 = [];

    result_2650809520 = nimCopy(null, insert_2650809473(self_2650809514, selections_2650809515, text_2650809516, notify_2650809517, record_2650809518, autoIndent_2650809519), NTI2650805579);

  return result_2650809520;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2650809469(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2231370100(selection_2231370101) {
  var result_2231370102 = false;

    result_2231370102 = HEX3DHEX3D_2231369801(selection_2231370101.Field0, selection_2231370101.Field1);

  return result_2231370102;

}

function HEX3E_2231370059(a_2231370060, b_2231370061) {
  var result_2231370062 = false;

  BeforeRet: {
    if ((b_2231370061.Field0 < a_2231370060.Field0)) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370060.Field0 == b_2231370061.Field0) && (b_2231370061.Field1 < a_2231370060.Field1))) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
      result_2231370062 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370062;

}

function isBackwards_2231370091(selection_2231370092) {
  var result_2231370093 = false;

  BeforeRet: {
    result_2231370093 = HEX3E_2231370059(selection_2231370092.Field0, selection_2231370092.Field1);
    break BeforeRet;
  };

  return result_2231370093;

}

function normalized_2231370094(selection_2231370095) {
  var result_2231370096 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2231370091(selection_2231370095)) {
    var colontmp__2650810055 = nimCopy(null, selection_2231370095.Field1, NTI2231369737);
    var colontmp__2650810056 = nimCopy(null, selection_2231370095.Field0, NTI2231369737);
    result_2231370096 = nimCopy(result_2231370096, {Field0: nimCopy(null, colontmp__2650810055, NTI2231369737), Field1: nimCopy(null, colontmp__2650810056, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    else {
      result_2231370096 = nimCopy(result_2231370096, selection_2231370095, NTI2231369739);
      break BeforeRet;
    }
    
  };

  return result_2231370096;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2650810063 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650810063 < L_855639300)) break Label3;
            i_855639305 = i_2650810063;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2650810063 = addInt(i_2650810063, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2650801281(self_2650801282, selection_2650801283) {
  var result_2650801284 = [];

  BeforeRet: {
    var colontmp__2650810061 = normalized_2231370094(selection_2650801283);
    var first_2650801285 = nimCopy(null, colontmp__2650810061["Field0"], NTI2231369737);
    var last_2650801286 = nimCopy(null, colontmp__2650810061["Field1"], NTI2231369737);
    if ((first_2650801285.Field0 == last_2650801286.Field0)) {
    result_2650801284 = nimCopy(null, HEX5BHEX5D_855639291(self_2650801282.lines[chckIndx(first_2650801285.Field0, 0, (self_2650801282.lines).length - 1)], HEX2EHEX2E_805306418(first_2650801285.Field1, subInt(last_2650801286.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2650801284 = nimCopy(null, HEX5BHEX5D_855639319(self_2650801282.lines[chckIndx(first_2650801285.Field0, 0, (self_2650801282.lines).length - 1)], HEX2EHEX2E_1040187488(first_2650801285.Field1, 1)), NTI33554449);
    Label1: {
      var i_2650801333 = 0;
      var colontmp__2650810058 = 0;
      colontmp__2650810058 = addInt(first_2650801285.Field0, 1);
      var i_2650810059 = colontmp__2650810058;
      Label2: {
          Label3: while (true) {
          if (!(i_2650810059 < last_2650801286.Field0)) break Label3;
            i_2650801333 = i_2650810059;
            result_2650801284.push.apply(result_2650801284, [10]);;
            result_2650801284.push.apply(result_2650801284, self_2650801282.lines[chckIndx(i_2650801333, 0, (self_2650801282.lines).length - 1)]);;
            i_2650810059 = addInt(i_2650810059, 1);
          }
      };
    };
    result_2650801284.push.apply(result_2650801284, [10]);;
    result_2650801284.push.apply(result_2650801284, HEX5BHEX5D_855639291(self_2650801282.lines[chckIndx(last_2650801286.Field0, 0, (self_2650801282.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2650801286.Field1, 1))));;
  };

  return result_2650801284;

}

function delete_2650804344(s_2650804346, s_2650804346_Idx, slice_2650804347) {
    if (!((((slice_2650804347.a < (s_2650804346[s_2650804346_Idx]).length) && (0 <= slice_2650804347.a)) && (slice_2650804347.b < (s_2650804346[s_2650804346_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2650804347, NTI805306392), Field1: (s_2650804346[s_2650804346_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2650804347.a <= slice_2650804347.b)) {
    var n_2650804394 = addInt(subInt(slice_2650804347.b, slice_2650804347.a), 1);
    var first_2650804395 = slice_2650804347.a;
    s_2650804346[s_2650804346_Idx].splice(first_2650804395, n_2650804394);
    }
    

  
}

function subtract_2231370229(cursor_2231370230, selection_2231370231) {
  var result_2231370232 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field0)) {
    result_2231370232 = nimCopy(result_2231370232, cursor_2231370230, NTI2231369737);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field1)) {
    result_2231370232 = nimCopy(result_2231370232, selection_2231370231.Field0, NTI2231369737);
    break BeforeRet;
    }
    
    if ((cursor_2231370230.Field0 == selection_2231370231.Field1.Field0)) {
    if ((selection_2231370231.Field0.Field0 == selection_2231370231.Field1.Field0)) {
    var colontmp__2650810069 = cursor_2231370230.Field0;
    var colontmp__2650810070 = subInt(cursor_2231370230.Field1, subInt(selection_2231370231.Field1.Field1, selection_2231370231.Field0.Field1));
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2650810069, Field1: colontmp__2650810070}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2650810071 = selection_2231370231.Field0.Field0;
      var colontmp__2650810072 = addInt(selection_2231370231.Field0.Field1, subInt(cursor_2231370230.Field1, selection_2231370231.Field1.Field1));
      result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2650810071, Field1: colontmp__2650810072}, NTI2231369737);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2650810073 = subInt(cursor_2231370230.Field0, subInt(selection_2231370231.Field1.Field0, selection_2231370231.Field0.Field0));
    var colontmp__2650810074 = cursor_2231370230.Field1;
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2650810073, Field1: colontmp__2650810074}, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370232;

}

function subtract_2231370241(self_2231370242, other_2231370243) {
  var result_2231370244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2650810067 = subtract_2231370229(self_2231370242.Field0, other_2231370243);
    var colontmp__2650810068 = subtract_2231370229(self_2231370242.Field1, other_2231370243);
    result_2231370244 = nimCopy(result_2231370244, {Field0: nimCopy(null, colontmp__2650810067, NTI2231369737), Field1: nimCopy(null, colontmp__2650810068, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370244;

}

function invoke_2650804453(event_2650804455, arg_2650804456) {
    Label1: {
      var h_2650804479 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2650810077 = 0;
      var L_2650810078 = (event_2650804455.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650810077 < L_2650810078)) break Label3;
            h_2650804479 = event_2650804455.handlers[chckIndx(i_2650810077, 0, (event_2650804455.handlers).length - 1)];
            h_2650804479.Field1(arg_2650804456);
            i_2650810077 = addInt(i_2650810077, 1);
            if (!(((event_2650804455.handlers).length == L_2650810078))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2650804228(self_2650804229, selections_2650804230, oldSelection_2650804231, notify_2650804232, record_2650804233) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2650804234 = [];

    result_2650804234 = nimCopy(null, clampAndMergeSelections_2650800539(self_2650804229, selections_2650804230), NTI2231369747);
    var undoOp_2650804258 = {kind: 2, children: [], oldSelection: HEX40_2650804235(oldSelection_2650804231), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2650804291 = 0;
      var selection_2650804292 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2650810052 = 0;
      var L_2650810053 = (result_2650804234).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650810052 < L_2650810053)) break Label3;
            i_2650804291 = i_2650810052;
            selection_2650804292 = nimCopy(selection_2650804292, result_2650804234[chckIndx(i_2650810052, 0, (result_2650804234).length - 1)], NTI2231369739);
            Label4: {
              if (isEmpty_2231370100(selection_2650804292)) {
              break Label4;
              }
              
              var selection_2650804293 = normalized_2231370094(selection_2650804292);
              var startByte_2650804294 = byteOffset_2650804215(self_2650804229, selection_2650804293.Field0);
              var endByte_2650804295 = byteOffset_2650804215(self_2650804229, selection_2650804293.Field1);
              var deletedText_2650804296 = contentString_2650801281(self_2650804229, selection_2650804293);
              var colontmp__2650810065 = normalized_2231370094(selection_2650804293);
              var first_2650804297 = nimCopy(null, colontmp__2650810065["Field0"], NTI2231369737);
              var last_2650804298 = nimCopy(null, colontmp__2650810065["Field1"], NTI2231369737);
              if ((first_2650804297.Field0 == last_2650804298.Field0)) {
              delete_855639365(self_2650804229.lines, chckIndx(last_2650804298.Field0, 0, (self_2650804229.lines).length - 1), HEX2EHEX2E_805306418(first_2650804297.Field1, subInt(last_2650804298.Field1, 1)));
              }
              else {
                if ((first_2650804297.Field1 < lineLength_2650800492(self_2650804229, first_2650804297.Field0))) {
                delete_855639365(self_2650804229.lines, chckIndx(first_2650804297.Field0, 0, (self_2650804229.lines).length - 1), HEX2EHEX2E_805306418(first_2650804297.Field1, subInt(lineLength_2650800492(self_2650804229, first_2650804297.Field0), 1)));
                }
                
                self_2650804229.lines[chckIndx(first_2650804297.Field0, 0, (self_2650804229.lines).length - 1)].push.apply(self_2650804229.lines[chckIndx(first_2650804297.Field0, 0, (self_2650804229.lines).length - 1)], HEX5BHEX5D_855639319(self_2650804229.lines[chckIndx(last_2650804298.Field0, 0, (self_2650804229.lines).length - 1)], HEX2EHEX2E_1040187488(last_2650804298.Field1, 1)));;
                delete_2650804344(self_2650804229, "lines", HEX2EHEX2E_805306418(addInt(first_2650804297.Field0, 1), last_2650804298.Field0));
              }
              
              result_2650804234[chckIndx(i_2650804291, 0, (result_2650804234).length - 1)] = nimCopy(result_2650804234[chckIndx(i_2650804291, 0, (result_2650804234).length - 1)], toSelection_2231370221(selection_2650804293.Field0), NTI2231369739);
              Label5: {
                var k_2650804403 = 0;
                var colontmp__2650810048 = 0;
                var colontmp__2650810049 = 0;
                colontmp__2650810048 = addInt(i_2650804291, 1);
                colontmp__2650810049 = (result_2650804234).length - 1;
                var res_2650810050 = colontmp__2650810048;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2650810050 <= colontmp__2650810049)) break Label7;
                      k_2650804403 = res_2650810050;
                      result_2650804234[chckIndx(k_2650804403, 0, (result_2650804234).length - 1)] = nimCopy(result_2650804234[chckIndx(k_2650804403, 0, (result_2650804234).length - 1)], subtract_2231370241(result_2650804234[chckIndx(k_2650804403, 0, (result_2650804234).length - 1)], selection_2650804293), NTI2231369739);
                      res_2650810050 = addInt(res_2650810050, 1);
                    }
                };
              };
              if (!((self_2650804229.tsParser == null))) {
              var edit_2650804407 = {startIndex: startByte_2650804294, oldEndIndex: endByte_2650804295, newEndIndex: startByte_2650804294, startPosition: {row: selection_2650804293.Field0.Field0, column: selection_2650804293.Field0.Field1, m_type: NTI2751463438}, oldEndPosition: {row: selection_2650804293.Field1.Field0, column: selection_2650804293.Field1.Field1, m_type: NTI2751463438}, newEndPosition: {row: selection_2650804293.Field0.Field0, column: selection_2650804293.Field0.Field1, m_type: NTI2751463438}, m_type: NTI2751463448};
              var _ = self_2650804229.currentTree.edit(edit_2650804407);
              var strValue_2650804408 = nsuJoinSep(self_2650804229.lines, [10]);
              self_2650804229.currentTree = parseString_2751463483(self_2650804229.tsParser, strValue_2650804408, some_2650804409(self_2650804229.currentTree));
              }
              
              self_2650804229.version = addInt(self_2650804229.version, 1);
              if (record_2650804233) {
              var Temporary8 = undoOp_2650804258;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2650800131)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2650804293.Field0, NTI2231369737), text: nimCopy(null, deletedText_2650804296, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2650804232) {
              invoke_2650804453(self_2650804229.textDeleted, {Field0: self_2650804229, Field1: nimCopy(null, selection_2650804293, NTI2231369739)});
              }
              
            };
            i_2650810052 = addInt(i_2650810052, 1);
            if (!(((result_2650804234).length == L_2650810053))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2650804232) {
    notifyTextChanged_2650804187(self_2650804229);
    }
    
      if (!record_2650804233) Temporary9 = false; else {        var Temporary10 = undoOp_2650804258;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2650800131)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2650804229.undoOps.push(undoOp_2650804258);;
    self_2650804229.redoOps = nimCopy(null, [], NTI2650802497);
    }
    

  return result_2650804234;

}

function delete_2650809970(self_2650809971, selections_2650809972, notify_2650809973, record_2650809974) {
  var result_2650809975 = [];

  BeforeRet: {
    result_2650809975 = nimCopy(null, delete_2650804228(self_2650809971.document, selections_2650809972, selections_2650800621(self_2650809971), notify_2650809973, record_2650809974), NTI2650802468);
    break BeforeRet;
  };

  return result_2650809975;

}

function deleteJsWrapper_2650809966(self_2650810007, selections_2650810008, notify_2650810009, record_2650810010) {
  var result_2650810011 = [];

    result_2650810011 = nimCopy(null, delete_2650809970(self_2650810007, selections_2650810008, notify_2650810009, record_2650810010), NTI2650806095);

  return result_2650810011;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2650809966(this, selections_, notify_, record_));};

function popLast_2650810197(deq_2650810199) {
    var Temporary1;

  var result_2650810200 = [];

    if ((deq_2650810199.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2650810199.count = subInt(deq_2650810199.count, 1);
    deq_2650810199.tail = (subInt(deq_2650810199.tail, 1) & deq_2650810199.mask);
    Temporary1 = deq_2650810199.data[chckIndx(deq_2650810199.tail, 0, (deq_2650810199.data).length - 1)];
    deq_2650810199.data[chckIndx(deq_2650810199.tail, 0, (deq_2650810199.data).length - 1)] = genericReset(deq_2650810199.data[chckIndx(deq_2650810199.tail, 0, (deq_2650810199.data).length - 1)], NTI2231369747);
    result_2650810200 = nimCopy(null, Temporary1, NTI2231369747);

  return result_2650810200;

}

function addFirst_2650810216(deq_2650810218, item_2650810219) {
    expandIfNeeded_2650800654(deq_2650810218);
    deq_2650810218.count = addInt(deq_2650810218.count, 1);
    deq_2650810218.head = (subInt(deq_2650810218.head, 1) & deq_2650810218.mask);
    deq_2650810218.data[chckIndx(deq_2650810218.head, 0, (deq_2650810218.data).length - 1)] = nimCopy(null, item_2650810219, NTI2231369747);

  
}

function totalLineHeight_2315255960(self_2315255961) {
  var result_2315255962 = 0.0;

    result_2315255962 = (lineHeight_2315255947(self_2315255961) + lineDistance_2315255942(self_2315255961));

  return result_2315255962;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2650808235(editor_2650808237, path_2650808238, default_2650808239) {
  var result_2650808245 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2650808237 == null)) {
      result_2650808245 = default_2650808239;
      break BeforeRet;
      }
      
      var nodeHEX60gensym139_2650808258 = HEX7BHEX7D_1627393316(editor_2650808237.options, nsuSplitString(path_2650808238, [46], -1));
      if ((nodeHEX60gensym139_2650808258 == null)) {
      result_2650808245 = default_2650808239;
      break BeforeRet;
      }
      
    };
    result_2650808245 = getFloat_1627390140(nodeHEX60gensym139_2650808258, default_2650808239);
    break BeforeRet;
  };

  return result_2650808245;

}

function clamp_2449473689(x_2449473691, a_2449473692, b_2449473693) {
  var result_2449473694 = 0.0;

  BeforeRet: {
    if ((x_2449473691 < a_2449473692)) {
    result_2449473694 = a_2449473692;
    break BeforeRet;
    }
    
    if ((b_2449473693 < x_2449473691)) {
    result_2449473694 = b_2449473693;
    break BeforeRet;
    }
    
    result_2449473694 = x_2449473691;
    break BeforeRet;
  };

  return result_2449473694;

}

function scrollToCursor_2650808227(self_2650808228, cursor_2650808229, keepVerticalOffset_2650808230) {
    var Temporary1;

    var targetLine_2650808231 = cursor_2650808229.Field0;
    if (!((self_2650808228.editor.platform == null))) {
    Temporary1 = totalLineHeight_2315255960(self_2650808228.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2315255947(self_2650808228.editor.platform) + getOption_2650808235(self_2650808228.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2650808262 = Temporary1;
    if (keepVerticalOffset_2650808230) {
    var currentLineY_2650808263 = ((subInt(selection_2650800624(self_2650808228).Field1.Field0, self_2650808228.previousBaseIndex) * totalLineHeight_2650808262) + self_2650808228.scrollOffset);
    self_2650808228.previousBaseIndex = targetLine_2650808231;
    self_2650808228.scrollOffset = currentLineY_2650808263;
    }
    else {
      var targetLineY_2650808264 = ((subInt(targetLine_2650808231, self_2650808228.previousBaseIndex) * totalLineHeight_2650808262) + self_2650808228.scrollOffset);
      var margin_2650808279 = clamp_2449473689(getOption_2650808235(self_2650808228.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2650808228.lastContentBounds.h * 0.5) - (totalLineHeight_2650808262 * 0.5)));
      if ((targetLineY_2650808264 < margin_2650808279)) {
      self_2650808228.scrollOffset = margin_2650808279;
      self_2650808228.previousBaseIndex = targetLine_2650808231;
      }
      else {
      if (((self_2650808228.lastContentBounds.h - margin_2650808279) < (targetLineY_2650808264 + totalLineHeight_2650808262))) {
      self_2650808228.scrollOffset = ((self_2650808228.lastContentBounds.h - margin_2650808279) - totalLineHeight_2650808262);
      self_2650808228.previousBaseIndex = targetLine_2650808231;
      }
      }
    }
    
    markDirty_2147483686(self_2650808228);

  
}

function selectPrev_2650810086(self_2650810087) {
    if ((0 < len_2650800784(self_2650810087.selectionHistory))) {
    var selection_2650810210 = popLast_2650810197(self_2650810087.selectionHistory);
    addFirst_2650810216(self_2650810087.selectionHistory, selections_2650800621(self_2650810087));
    self_2650810087.selectionsInternal = nimCopy(null, selection_2650810210, NTI2231369747);
    }
    
    scrollToCursor_2650808227(self_2650810087, selection_2650800624(self_2650810087).Field1, false);

  
}

function selectPrevJsWrapper_2650810082(self_2650810260) {
    selectPrev_2650810086(self_2650810260);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2650810082(this));};

function selectNext_2650810282(self_2650810283) {
    if ((0 < len_2650800784(self_2650810283.selectionHistory))) {
    var selection_2650810396 = popFirst_2650800845(self_2650810283.selectionHistory);
    addLast_2650800645(self_2650810283.selectionHistory, selections_2650800621(self_2650810283));
    self_2650810283.selectionsInternal = nimCopy(null, selection_2650810396, NTI2231369747);
    }
    
    scrollToCursor_2650808227(self_2650810283, selection_2650800624(self_2650810283).Field1, false);

  
}

function selectNextJsWrapper_2650810278(self_2650810433) {
    selectNext_2650810282(self_2650810433);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2650810278(this));};

function re_2684354619(text_2684354620) {
  var result_2684354621 = ({impl: null});

  BeforeRet: {
    result_2684354621 = nimCopy(result_2684354621, {impl: new RegExp(toJSStr(text_2684354620), "dg")}, NTI2684354563);
    break BeforeRet;
  };

  return result_2684354621;

}

function matchLen_2684354596(text_2684354597, regex_2684354598, start_2684354599) {
  var result_2684354600 = 0;

    regex_2684354598.impl.lastIndex = 0;
    result_2684354600 = ((regex_2684354598.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2684354597, HEX2EHEX2E_1040187488(start_2684354599, 1))))) || {index:-1}).index;

  return result_2684354600;

}

function selectInside_2650810454(self_2650810455, cursor_2650810456) {
    var regex_2650810457 = re_2684354619([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2650810458 = cursor_2650810456.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2650810458) && (matchLen_2684354596(self_2650810455.document.lines[chckIndx(cursor_2650810456.Field0, 0, (self_2650810455.document.lines).length - 1)], regex_2650810457, subInt(first_2650810458, 1)) == 1))) break Label2;
          first_2650810458 = subInt(first_2650810458, 1);
        }
    };
    var last_2650810463 = cursor_2650810456.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2650810463 < (self_2650810455.document.lines[chckIndx(cursor_2650810456.Field0, 0, (self_2650810455.document.lines).length - 1)]).length) && (matchLen_2684354596(self_2650810455.document.lines[chckIndx(cursor_2650810456.Field0, 0, (self_2650810455.document.lines).length - 1)], regex_2650810457, last_2650810463) == 1))) break Label4;
          last_2650810463 = addInt(last_2650810463, 1);
        }
    };
    selectionHEX3D_2650800630(self_2650810455, {Field0: {Field0: cursor_2650810456.Field0, Field1: first_2650810458}, Field1: {Field0: cursor_2650810456.Field0, Field1: last_2650810463}});

  
}

function selectInsideJsWrapper_2650810450(self_2650810496, cursor_2650810497) {
    selectInside_2650810454(self_2650810496, cursor_2650810497);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2650810450(this, cursor_));};

function selectInsideCurrent_2650810531(self_2650810532) {
    selectInside_2650810454(self_2650810532, selection_2650800624(self_2650810532).Field1);

  
}

function selectInsideCurrentJsWrapper_2650810527(self_2650810560) {
    selectInsideCurrent_2650810531(self_2650810560);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2650810527(this));};

function lineLength_2650800499(self_2650800500, line_2650800501) {
  var result_2650800502 = 0;

  BeforeRet: {
    if ((line_2650800501 < (self_2650800500.document.lines).length)) {
    result_2650800502 = (self_2650800500.document.lines[chckIndx(line_2650800501, 0, (self_2650800500.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2650800502 = 0;
    break BeforeRet;
  };

  return result_2650800502;

}

function selectLine_2650810581(self_2650810582, line_2650810583) {
    selectionHEX3D_2650800630(self_2650810582, {Field0: {Field0: line_2650810583, Field1: 0}, Field1: {Field0: line_2650810583, Field1: lineLength_2650800499(self_2650810582, line_2650810583)}});

  
}

function selectLineJsWrapper_2650810577(self_2650810612, line_2650810613) {
    selectLine_2650810581(self_2650810612, line_2650810613);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2650810577(this, line_));};

function selectLineCurrent_2650810639(self_2650810640) {
    selectLine_2650810581(self_2650810640, selection_2650800624(self_2650810640).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2650810635(self_2650810668) {
    selectLineCurrent_2650810639(self_2650810668);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2650810635(this));};

function toTsPoint_2751463611(cursor_2751463612) {
  var result_2751463613 = null;

    result_2751463613 = {row: cursor_2751463612.Field0, column: cursor_2751463612.Field1, m_type: NTI2751463438};

  return result_2751463613;

}

function descendantForRange_2751463677(node_2751463678, selection_2751463679) {
  var result_2751463680 = null;

    result_2751463680 = node_2751463678.descendantForPosition(toTsPoint_2751463611(selection_2751463679.Field0), toTsPoint_2751463611(selection_2751463679.Field1));

  return result_2751463680;

}

function startPoint_2751463600(node_2751463601) {
  var result_2751463602 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2751463603 = node_2751463601.startPosition;
    var colontmp__2650810762 = point_2751463603.row;
    var colontmp__2650810763 = point_2751463603.column;
    result_2751463602 = nimCopy(result_2751463602, {Field0: colontmp__2650810762, Field1: colontmp__2650810763}, NTI2231369737);
    break BeforeRet;
  };

  return result_2751463602;

}

function endPoint_2751463604(node_2751463605) {
  var result_2751463606 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2751463607 = node_2751463605.endPosition;
    var colontmp__2650810764 = point_2751463607.row;
    var colontmp__2650810765 = point_2751463607.column;
    result_2751463606 = nimCopy(result_2751463606, {Field0: colontmp__2650810764, Field1: colontmp__2650810765}, NTI2231369737);
    break BeforeRet;
  };

  return result_2751463606;

}

function getRange_2751463608(node_2751463609) {
  var result_2751463610 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2650810760 = startPoint_2751463600(node_2751463609);
    var colontmp__2650810761 = endPoint_2751463604(node_2751463609);
    result_2751463610 = nimCopy(result_2751463610, {Field0: nimCopy(null, colontmp__2650810760, NTI2231369737), Field1: nimCopy(null, colontmp__2650810761, NTI2231369737)}, NTI2231369739);

  return result_2751463610;

}

function selectParentTs_2650810689(self_2650810690, selection_2650810691) {
  BeforeRet: {
    if ((self_2650810690.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2650810695 = descendantForRange_2751463677(self_2650810690.document.currentTree.rootNode, selection_2650810691);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2231369791(getRange_2751463608(node_2650810695), selection_2650810691) && !((node_2650810695 == self_2650810690.document.currentTree.rootNode)))) break Label2;
          node_2650810695 = node_2650810695.parent;
        }
    };
    selectionHEX3D_2650800630(self_2650810690, getRange_2751463608(node_2650810695));
  };

  
}

function selectParentTsJsWrapper_2650810685(self_2650810732, selection_2650810733) {
    selectParentTs_2650810689(self_2650810732, selection_2650810733);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2650810685(this, selection_));};

function selectParentCurrentTs_2650810772(self_2650810773) {
    selectParentTs_2650810689(self_2650810773, selection_2650800624(self_2650810773));

  
}

function selectParentCurrentTsJsWrapper_2650810768(self_2650810801) {
    selectParentCurrentTs_2650810772(self_2650810801);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2650810768(this));};

function newSeq_2231369874(len_2231369876) {
  var result_2231369877 = [];

    result_2231369877 = new Array(len_2231369876); for (var i = 0 ; i < len_2231369876 ; ++i) { result_2231369877[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2231369877;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2231369903(a_2231369905, b_2231369906, lo_2231369907, m_2231369908, hi_2231369909, cmp_2231369912, order_2231369913) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2231369912(a_2231369905[chckIndx(m_2231369908, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(addInt(m_2231369908, 1), 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
    break BeforeRet;
    }
    
    var j_2231369914 = lo_2231369907;
    if (!((j_2231369914 <= m_2231369908))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2231369920 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2231369914 <= m_2231369908)) break Label2;
          b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)] = nimCopy(b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
          bb_2231369920 = addInt(bb_2231369920, 1);
          j_2231369914 = addInt(j_2231369914, 1);
        }
    };
    var i_2231369931 = 0;
    var k_2231369932 = lo_2231369907;
    Label3: {
        Label4: while (true) {
        if (!((k_2231369932 < j_2231369914) && (j_2231369914 <= hi_2231369909))) break Label4;
          if ((HEX2A_1023410184(cmp_2231369912(b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          i_2231369931 = addInt(i_2231369931, 1);
          }
          else {
            a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
            j_2231369914 = addInt(j_2231369914, 1);
          }
          
          k_2231369932 = addInt(k_2231369932, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2231369932 < j_2231369914)) break Label6;
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          k_2231369932 = addInt(k_2231369932, 1);
          i_2231369931 = addInt(i_2231369931, 1);
        }
    };
  };

  
}

function sort_2231369862(a_2231369864, cmp_2231369867, order_2231369868) {
    var n_2231369873 = (a_2231369864).length;
    var b_2231369900 = newSeq_2231369874(chckRange(divInt(n_2231369873, 2), 0, 2147483647));
    var s_2231369901 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2231369901 < n_2231369873)) break Label2;
          var m_2231369902 = subInt(subInt(n_2231369873, 1), s_2231369901);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2231369902)) break Label4;
                mergeAlt_2231369903(a_2231369864, b_2231369900, nimMax(addInt(subInt(m_2231369902, s_2231369901), 1), 0), m_2231369902, addInt(m_2231369902, s_2231369901), cmp_2231369867, order_2231369868);
                m_2231369902 = subInt(m_2231369902, mulInt(s_2231369901, 2));
              }
          };
          s_2231369901 = mulInt(s_2231369901, 2);
        }
    };

  
}

function sorted_2231370004(a_2231370006, cmp_2231370009, order_2231370010) {
  var result_2231370011 = [];

    result_2231370011 = nimCopy(null, newSeq_2231369874(chckRange((a_2231370006).length, 0, 2147483647)), NTI2231369787);
    Label1: {
      var i_2231370025 = 0;
      var colontmp__2650810879 = 0;
      colontmp__2650810879 = (a_2231370006).length - 1;
      var res_2650810880 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650810880 <= colontmp__2650810879)) break Label3;
            i_2231370025 = res_2650810880;
            result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)] = nimCopy(result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)], a_2231370006[chckIndx(i_2231370025, 0, (a_2231370006).length - 1)], NTI2231369739);
            res_2650810880 = addInt(res_2650810880, 1);
          }
      };
    };
    sort_2231369862(result_2231370011, cmp_2231370009, order_2231370010);

  return result_2231370011;

}

function HEX3C_2231369834(x_2231369836, y_2231369837) {
  var result_2231369838 = false;

  BeforeRet: {
    var c_2231369848 = cmp_33557727(x_2231369836["Field0"], y_2231369837["Field0"]);
    if ((c_2231369848 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369848)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    var c_2231369853 = cmp_33557727(x_2231369836["Field1"], y_2231369837["Field1"]);
    if ((c_2231369853 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369853)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    result_2231369838 = false;
    break BeforeRet;
  };

  return result_2231369838;

}

function cmp_2231369825(x_2231369827, y_2231369828) {
  var result_2231369829 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369801(x_2231369827, y_2231369828)) {
    result_2231369829 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369834(x_2231369827, y_2231369828)) {
    result_2231369829 = -1;
    break BeforeRet;
    }
    
    result_2231369829 = 1;
    break BeforeRet;
  };

  return result_2231369829;

}

function HEX3C_2231369815(x_2231369817, y_2231369818) {
  var result_2231369819 = false;

  BeforeRet: {
    var c_2231369854 = cmp_2231369825(x_2231369817["Field0"], y_2231369818["Field0"]);
    if ((c_2231369854 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369854)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    var c_2231369859 = cmp_2231369825(x_2231369817["Field1"], y_2231369818["Field1"]);
    if ((c_2231369859 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369859)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    result_2231369819 = false;
    break BeforeRet;
  };

  return result_2231369819;

}

function cmp_2231369786(x_2231369788, y_2231369789) {
  var result_2231369790 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369791(x_2231369788, y_2231369789)) {
    result_2231369790 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369815(x_2231369788, y_2231369789)) {
    result_2231369790 = -1;
    break BeforeRet;
    }
    
    result_2231369790 = 1;
    break BeforeRet;
  };

  return result_2231369790;

}

function sorted_2231369993(a_2231369995, order_2231369996) {
  var result_2231369997 = [];

    result_2231369997 = nimCopy(null, sorted_2231370004(a_2231369995, cmp_2231369786, order_2231369996), NTI2231369867);

  return result_2231369997;

}

function normalized_2231369990(self_2231369991) {
  var result_2231369992 = [];

  BeforeRet: {
    result_2231369992 = nimCopy(null, sorted_2231369993(self_2231369991, 1), NTI2231369858);
    break BeforeRet;
  };

  return result_2231369992;

}

function HEX3DHEX3D_2650800883(x_2650800885, y_2650800886) {
  var result_2650800887 = false;

  BeforeRet: {
    var sameObject_2650800894 = false;
    sameObject_2650800894 = x_2650800885 === y_2650800886
    if (sameObject_2650800894) {
    result_2650800887 = true;
    break BeforeRet;
    }
    
    if (!(((x_2650800885).length == (y_2650800886).length))) {
    result_2650800887 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2650800908 = 0;
      var colontmp__2650810888 = 0;
      colontmp__2650810888 = subInt((x_2650800885).length, 1);
      var res_2650810889 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650810889 <= colontmp__2650810888)) break Label3;
            i_2650800908 = res_2650810889;
            if (!(HEX3DHEX3D_2231369791(x_2650800885[chckIndx(i_2650800908, 0, (x_2650800885).length - 1)], y_2650800886[chckIndx(i_2650800908, 0, (y_2650800886).length - 1)]))) {
            result_2650800887 = false;
            break BeforeRet;
            }
            
            res_2650810889 = addInt(res_2650810889, 1);
          }
      };
    };
    result_2650800887 = true;
    break BeforeRet;
  };

  return result_2650800887;

}

function clampAndMergeSelections_2650800617(self_2650800618, selections_2650800619) {
  var result_2650800620 = [];

    result_2650800620 = nimCopy(null, clampAndMergeSelections_2650800539(self_2650800618.document, selections_2650800619), NTI2231369747);

  return result_2650800620;

}

function selectionsHEX3D_2650800880(self_2650800881, selections_2650800882) {
  BeforeRet: {
    if (HEX3DHEX3D_2650800883(self_2650800881.selectionsInternal, selections_2650800882)) {
    break BeforeRet;
    }
    
    addLast_2650800645(self_2650800881.selectionHistory, self_2650800881.selectionsInternal);
    if ((100 < len_2650800784(self_2650800881.selectionHistory))) {
    var _ = popFirst_2650800845(self_2650800881.selectionHistory);
    }
    
    self_2650800881.selectionsInternal = nimCopy(null, clampAndMergeSelections_2650800617(self_2650800881, selections_2650800882), NTI2231369747);
    if (((self_2650800881.selectionsInternal).length == 0)) {
    self_2650800881.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], NTI2650800629);
    }
    
    markDirty_2147483686(self_2650800881);
  };

  
}

function edit_2650804951(self_2650804952, selections_2650804953, oldSelection_2650804954, text_2650804955, notify_2650804956) {
    
function HEX3Aanonymous_2650804958(s_2650804966) {
      var result_2650804969 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2650804969 = nimCopy(result_2650804969, normalized_2231370094(s_2650804966), NTI2231369739);

      return result_2650804969;

    }

  var result_2650804957 = [];

    var selections_2650804977 = map_2650800554(selections_2650804953, HEX3Aanonymous_2650804958);
    result_2650804957 = nimCopy(null, delete_2650804228(self_2650804952, selections_2650804977, oldSelection_2650804954, false, true), NTI2650802468);
    result_2650804957 = nimCopy(null, insert_2650804734(self_2650804952, result_2650804957, oldSelection_2650804954, text_2650804955, true, true, true), NTI2650802829);

  return result_2650804957;

}

function insertText_2650810825(self_2650810826, text_2650810827) {
  BeforeRet: {
    if ((self_2650810826.document.singleLine && eqStrings(text_2650810827, [10]))) {
    break BeforeRet;
    }
    
    var selections_2650810828 = normalized_2231369990(selections_2650800621(self_2650810826));
    selectionsHEX3D_2650800880(self_2650810826, edit_2650804951(self_2650810826.document, selections_2650800621(self_2650810826), selections_2650800621(self_2650810826), text_2650810827, true));
    updateTargetColumn_2650809293(self_2650810826, 3);
    if ((eqStrings(text_2650810827, [46]) || eqStrings(text_2650810827, [44]))) {
    self_2650810826.showCompletions = true;
    var _ = getCompletionsAsync_2650810816(self_2650810826);
    }
    else {
    if (self_2650810826.showCompletions) {
    var _ = getCompletionsAsync_2650810816(self_2650810826);
    }
    }
  };

  
}

function insertTextJsWrapper_2650810821(self_2650810857, text_2650810858) {
    insertText_2650810825(self_2650810857, text_2650810858);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2650810821(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2650805046() {
  var result_2650805053 = ({val: [], has: false});

  return result_2650805053;

}

function pop_2650805057(s_2650805059, s_2650805059_Idx) {
  var result_2650805060 = null;

    var L_2650805064 = subInt((s_2650805059[s_2650805059_Idx]).length, 1);
    result_2650805060 = s_2650805059[s_2650805059_Idx][chckIndx(L_2650805064, 0, (s_2650805059[s_2650805059_Idx]).length - 1)];
    if (s_2650805059[s_2650805059_Idx].length < chckRange(L_2650805064, 0, 2147483647)) { for (var i = s_2650805059[s_2650805059_Idx].length ; i < chckRange(L_2650805064, 0, 2147483647) ; ++i) s_2650805059[s_2650805059_Idx].push(null); }
               else { s_2650805059[s_2650805059_Idx].length = chckRange(L_2650805064, 0, 2147483647); };

  return result_2650805060;

}

function some_2650805070(val_2650805072) {
  var result_2650805073 = ({val: [], has: false});

    result_2650805073.has = true;
    result_2650805073.val = nimCopy(null, val_2650805072, NTI2650803014);

  return result_2650805073;

}

function doUndo_2650804987(document_2650804988, op_2650804989, oldSelection_2650804990, useOldSelection_2650804991, redoOps_2650804992, redoOps_2650804992_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2650804993 = [];

    switch (op_2650804989.kind) {
    case 0:
      var Temporary1 = op_2650804989;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2650800131)); }
      var text_2650804994 = contentString_2650801281(document_2650804988, Temporary1.selection);
      var Temporary2 = op_2650804989;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2650800131)); }
      result_2650804993 = nimCopy(null, delete_2650804228(document_2650804988, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2650804989.oldSelection, true, false), NTI2650802468);
      var Temporary3 = op_2650804989;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2650800131)); }
      redoOps_2650804992[redoOps_2650804992_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2650804994, NTI33554449), oldSelection: HEX40_2650804235(oldSelection_2650804990), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2650804989;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2650800131)); }
      var Temporary5 = op_2650804989;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2650800131)); }
      var selections_2650805002 = insert_2650804734(document_2650804988, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], op_2650804989.oldSelection, Temporary5.text, true, false, false);
      result_2650804993 = nimCopy(null, selections_2650805002, NTI2650802829);
      var Temporary6 = op_2650804989;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2650800131)); }
      redoOps_2650804992[redoOps_2650804992_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2231369737), Field1: nimCopy(null, selections_2650805002[chckIndx(0, 0, (selections_2650805002).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2650804235(oldSelection_2650804990), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2650804993 = nimCopy(null, op_2650804989.oldSelection, NTI2650800135);
      var redoOp_2650805013 = {kind: 2, oldSelection: HEX40_2650804235(oldSelection_2650804990), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2650805022 = 0;
        var colontmp__2650810990 = 0;
        var Temporary8 = op_2650804989;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2650800131)); }
        colontmp__2650810990 = (Temporary8.children).length - 1;
        var res_2650810991 = colontmp__2650810990;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2650810991)) break Label10;
              i_2650805022 = res_2650810991;
              var Temporary11 = op_2650804989;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2650800131)); }
              var Temporary13 = redoOp_2650805013;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2650800131)); }
              var _ = doUndo_2650804987(document_2650804988, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2650805022, 0, (Temporary12).length - 1)], oldSelection_2650804990, useOldSelection_2650804991, Temporary13, "children");
              res_2650810991 = subInt(res_2650810991, 1);
            }
        };
      };
      redoOps_2650804992[redoOps_2650804992_Idx].push(redoOp_2650805013);;
      break;
    }
    if (useOldSelection_2650804991) {
    result_2650804993 = nimCopy(null, op_2650804989.oldSelection, NTI2650800135);
    }
    

  return result_2650804993;

}

function undo_2650805036(document_2650805037, oldSelection_2650805038, useOldSelection_2650805039) {
  var result_2650805045 = ({val: [], has: false});

  BeforeRet: {
    result_2650805045 = nimCopy(result_2650805045, none_2650805046(), NTI2650803089);
    if (((document_2650805037.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2650805069 = pop_2650805057(document_2650805037, "undoOps");
    result_2650805045 = nimCopy(result_2650805045, some_2650805070(doUndo_2650804987(document_2650805037, op_2650805069, oldSelection_2650805038, useOldSelection_2650805039, document_2650805037, "redoOps")), NTI2650803089);
    break BeforeRet;
  };

  return result_2650805045;

}

function isSome_2650810906(self_2650810908) {
  var result_2650810909 = false;

    result_2650810909 = self_2650810908.has;

  return result_2650810909;

}

function isNone_2650810931(self_2650810933) {
  var result_2650810934 = false;

    result_2650810934 = !(self_2650810933.has);

  return result_2650810934;

}

function get_2650810923(self_2650810925) {
  var result_2650810926 = [];

    if (isNone_2650810931(self_2650810925)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650810926 = self_2650810925["val"];

  return result_2650810926;

}

function undo_2650810897(self_2650810898) {
      var Temporary1;

      var oHEX60gensym353_2650810901 = undo_2650805036(self_2650810898.document, selections_2650800621(self_2650810898), true);
      if (!isSome_2650810906(oHEX60gensym353_2650810901)) Temporary1 = false; else {        var selections_2650810946 = nimCopy(null, get_2650810923(oHEX60gensym353_2650810901), NTI2650803084);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2650800880(self_2650810898, selections_2650810946);
    }
    

  
}

function undoJsWrapper_2650810893(self_2650810974) {
    undo_2650810897(self_2650810974);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2650810893(this));};

function doRedo_2650805084(document_2650805085, op_2650805086, oldSelection_2650805087, useOldSelection_2650805088, undoOps_2650805089, undoOps_2650805089_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2650805090 = [];

    switch (op_2650805086.kind) {
    case 0:
      var Temporary1 = op_2650805086;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2650800131)); }
      var text_2650805091 = contentString_2650801281(document_2650805085, Temporary1.selection);
      var Temporary2 = op_2650805086;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2650800131)); }
      result_2650805090 = nimCopy(null, delete_2650804228(document_2650805085, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2650805086.oldSelection, true, false), NTI2650802468);
      var Temporary3 = op_2650805086;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2650800131)); }
      undoOps_2650805089[undoOps_2650805089_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2650805091, NTI33554449), oldSelection: HEX40_2650804235(oldSelection_2650805087), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2650805086;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2650800131)); }
      var Temporary5 = op_2650805086;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2650800131)); }
      var Temporary6 = op_2650805086;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2650800131)); }
      result_2650805090 = nimCopy(null, insert_2650804734(document_2650805085, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], [nimCopy(null, toSelection_2231370221(Temporary5.cursor), NTI2231369739)], Temporary6.text, true, false, false), NTI2650802829);
      var Temporary7 = op_2650805086;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2650800131)); }
      undoOps_2650805089[undoOps_2650805089_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2231369737), Field1: nimCopy(null, result_2650805090[chckIndx(0, 0, (result_2650805090).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2650804235(oldSelection_2650805087), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2650805090 = nimCopy(null, op_2650805086.oldSelection, NTI2650800135);
      var undoOp_2650805109 = {kind: 2, oldSelection: HEX40_2650804235(oldSelection_2650805087), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2650805118 = 0;
        var colontmp__2650811070 = 0;
        var Temporary9 = op_2650805086;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2650800131)); }
        colontmp__2650811070 = (Temporary9.children).length - 1;
        var res_2650811071 = colontmp__2650811070;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2650811071)) break Label11;
              i_2650805118 = res_2650811071;
              var Temporary12 = op_2650805086;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2650800131)); }
              var Temporary14 = undoOp_2650805109;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2650800131)); }
              var _ = doRedo_2650805084(document_2650805085, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2650805118, 0, (Temporary13).length - 1)], oldSelection_2650805087, useOldSelection_2650805088, Temporary14, "children");
              res_2650811071 = subInt(res_2650811071, 1);
            }
        };
      };
      undoOps_2650805089[undoOps_2650805089_Idx].push(undoOp_2650805109);;
      break;
    }
    if (useOldSelection_2650805088) {
    result_2650805090 = nimCopy(null, op_2650805086.oldSelection, NTI2650800135);
    }
    

  return result_2650805090;

}

function redo_2650805123(document_2650805124, oldSelection_2650805125, useOldSelection_2650805126) {
  var result_2650805128 = ({val: [], has: false});

  BeforeRet: {
    result_2650805128 = nimCopy(result_2650805128, none_2650805046(), NTI2650803089);
    if (((document_2650805124.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2650805142 = pop_2650805057(document_2650805124, "redoOps");
    result_2650805128 = nimCopy(result_2650805128, some_2650805070(doRedo_2650805084(document_2650805124, op_2650805142, oldSelection_2650805125, useOldSelection_2650805126, document_2650805124, "undoOps")), NTI2650803089);
    break BeforeRet;
  };

  return result_2650805128;

}

function redo_2650810999(self_2650811000) {
      var Temporary1;

      var oHEX60gensym363_2650811003 = redo_2650805123(self_2650811000.document, selections_2650800621(self_2650811000), true);
      if (!isSome_2650810906(oHEX60gensym363_2650811003)) Temporary1 = false; else {        var selections_2650811026 = nimCopy(null, get_2650810923(oHEX60gensym363_2650811003), NTI2650803084);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2650800880(self_2650811000, selections_2650811026);
    }
    

  
}

function redoJsWrapper_2650810995(self_2650811054) {
    redo_2650810999(self_2650811054);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2650810995(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2650811079(self_2650811080, amount_2650811081) {
    HEX2BHEX3D_855640304(self_2650811080, "scrollOffset", amount_2650811081);
    markDirty_2147483686(self_2650811080);

  
}

function scrollTextJsWrapper_2650811075(self_2650811114, amount_2650811115) {
    scrollText_2650811079(self_2650811114, amount_2650811115);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2650811075(this, amount_));};

function clampCursor_2650800527(self_2650800528, cursor_2650800529) {
  var result_2650800530 = {Field0: 0, Field1: 0};

    result_2650800530 = nimCopy(result_2650800530, clampCursor_2650800506(self_2650800528.document, cursor_2650800529), NTI2231369737);

  return result_2650800530;

}

function doMoveCursorColumn_2650808176(self_2650808177, cursor_2650808178, offset_2650808179) {
  var result_2650808180 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2650808181 = nimCopy(null, cursor_2650808178, NTI2231369737);
    var column_2650808182 = addInt(cursor_2650808181.Field1, offset_2650808179);
    if ((column_2650808182 < 0)) {
    if ((0 < cursor_2650808181.Field0)) {
    cursor_2650808181.Field0 = subInt(cursor_2650808181.Field0, 1);
    cursor_2650808181.Field1 = lineLength_2650800499(self_2650808177, cursor_2650808181.Field0);
    }
    else {
      cursor_2650808181.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2650800499(self_2650808177, cursor_2650808181.Field0) < column_2650808182)) {
    if ((cursor_2650808181.Field0 < subInt((self_2650808177.document.lines).length, 1))) {
    cursor_2650808181.Field0 = addInt(cursor_2650808181.Field0, 1);
    cursor_2650808181.Field1 = 0;
    }
    else {
      cursor_2650808181.Field1 = lineLength_2650800499(self_2650808177, cursor_2650808181.Field0);
    }
    
    }
    else {
      cursor_2650808181.Field1 = column_2650808182;
    }
    }
    result_2650808180 = nimCopy(result_2650808180, clampCursor_2650800527(self_2650808177, cursor_2650808181), NTI2231369737);
    break BeforeRet;
  };

  return result_2650808180;

}

function HEX26_2650811209(x_2650811211, y_2650811212) {
  var result_2650811213 = [];

    result_2650811213 = new Array(chckRange(addInt((x_2650811211).length, (y_2650811212).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2650811211).length, (y_2650811212).length), 0, 2147483647) ; ++i) { result_2650811213[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2650811231 = 0;
      var colontmp__2650811286 = 0;
      colontmp__2650811286 = subInt((x_2650811211).length, 1);
      var res_2650811287 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650811287 <= colontmp__2650811286)) break Label3;
            i_2650811231 = res_2650811287;
            result_2650811213[chckIndx(i_2650811231, 0, (result_2650811213).length - 1)] = nimCopy(result_2650811213[chckIndx(i_2650811231, 0, (result_2650811213).length - 1)], x_2650811211[chckIndx(i_2650811231, 0, (x_2650811211).length - 1)], NTI2231369739);
            res_2650811287 = addInt(res_2650811287, 1);
          }
      };
    };
    Label4: {
      var i_2650811239 = 0;
      var colontmp__2650811290 = 0;
      colontmp__2650811290 = subInt((y_2650811212).length, 1);
      var res_2650811291 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2650811291 <= colontmp__2650811290)) break Label6;
            i_2650811239 = res_2650811291;
            result_2650811213[chckIndx(addInt(i_2650811239, (x_2650811211).length), 0, (result_2650811213).length - 1)] = nimCopy(result_2650811213[chckIndx(addInt(i_2650811239, (x_2650811211).length), 0, (result_2650811213).length - 1)], y_2650811212[chckIndx(i_2650811239, 0, (y_2650811212).length - 1)], NTI2231369739);
            res_2650811291 = addInt(res_2650811291, 1);
          }
      };
    };

  return result_2650811213;

}

function duplicateLastSelection_2650811199(self_2650811200) {
    var Temporary1;

    var newSelection_2650811204 = toSelection_2231370221(doMoveCursorColumn_2650808176(self_2650811200, (Temporary1 = selections_2650800621(self_2650811200), Temporary1)[chckIndx((selections_2650800621(self_2650811200)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2650800880(self_2650811200, HEX26_2650811209(selections_2650800621(self_2650811200), [nimCopy(null, newSelection_2650811204, NTI2231369739)]));

  
}

function duplicateLastSelectionJsWrapper_2650811195(self_2650811270) {
    duplicateLastSelection_2650811199(self_2650811270);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2650811195(this));};

function doMoveCursorLine_2650808186(self_2650808187, cursor_2650808188, offset_2650808189) {
  var result_2650808190 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2650808191 = nimCopy(null, cursor_2650808188, NTI2231369737);
    var line_2650808192 = addInt(cursor_2650808191.Field0, offset_2650808189);
    if ((line_2650808192 < 0)) {
    var colontmp__2650811355 = 0;
    var colontmp__2650811356 = cursor_2650808191.Field1;
    cursor_2650808191 = nimCopy(cursor_2650808191, {Field0: colontmp__2650811355, Field1: colontmp__2650811356}, NTI2231369737);
    }
    else {
    if (((self_2650808187.document.lines).length <= line_2650808192)) {
    var colontmp__2650811357 = subInt((self_2650808187.document.lines).length, 1);
    var colontmp__2650811358 = cursor_2650808191.Field1;
    cursor_2650808191 = nimCopy(cursor_2650808191, {Field0: colontmp__2650811357, Field1: colontmp__2650811358}, NTI2231369737);
    }
    else {
      cursor_2650808191.Field0 = line_2650808192;
      cursor_2650808191.Field1 = self_2650808187.targetColumn;
    }
    }
    result_2650808190 = nimCopy(result_2650808190, clampCursor_2650800527(self_2650808187, cursor_2650808191), NTI2231369737);
    break BeforeRet;
  };

  return result_2650808190;

}

function addCursorBelow_2650811299(self_2650811300) {
    var Temporary1;

    var newCursor_2650811304 = toSelection_2231370221(doMoveCursorLine_2650808186(self_2650811300, (Temporary1 = selections_2650800621(self_2650811300), Temporary1)[chckIndx((selections_2650800621(self_2650811300)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2231370198(selections_2650800621(self_2650811300), newCursor_2650811304))) {
    selectionsHEX3D_2650800880(self_2650811300, HEX26_2650811209(selections_2650800621(self_2650811300), [nimCopy(null, newCursor_2650811304, NTI2231369739)]));
    }
    

  
}

function addCursorBelowJsWrapper_2650811295(self_2650811340) {
    addCursorBelow_2650811299(self_2650811340);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2650811295(this));};

function addCursorAbove_2650811365(self_2650811366) {
    var Temporary1;

    var newCursor_2650811370 = toSelection_2231370221(doMoveCursorLine_2650808186(self_2650811366, (Temporary1 = selections_2650800621(self_2650811366), Temporary1)[chckIndx((selections_2650800621(self_2650811366)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2231370198(selections_2650800621(self_2650811366), newCursor_2650811370))) {
    selectionsHEX3D_2650800880(self_2650811366, HEX26_2650811209(selections_2650800621(self_2650811366), [nimCopy(null, newCursor_2650811370, NTI2231369739)]));
    }
    

  
}

function addCursorAboveJsWrapper_2650811361(self_2650811406) {
    addCursorAbove_2650811365(self_2650811406);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2650811361(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2650805930(t_2650805933, key_2650805934, hc_2650805935, hc_2650805935_Idx) {
  var result_2650805936 = 0;

  BeforeRet: {
    hc_2650805935[hc_2650805935_Idx] = hash_1325400236(key_2650805934);
    if ((hc_2650805935[hc_2650805935_Idx] == 0)) {
    hc_2650805935[hc_2650805935_Idx] = 314159265;
    }
    
    if (((t_2650805933.data).length == 0)) {
    result_2650805936 = -1;
    break BeforeRet;
    }
    
    var h_2650805995 = (hc_2650805935[hc_2650805935_Idx] & (t_2650805933.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2650805933.data[chckIndx(h_2650805995, 0, (t_2650805933.data).length - 1)].Field0)) break Label2;
          if (((t_2650805933.data[chckIndx(h_2650805995, 0, (t_2650805933.data).length - 1)].Field0 == hc_2650805935[hc_2650805935_Idx]) && (t_2650805933.data[chckIndx(h_2650805995, 0, (t_2650805933.data).length - 1)].Field1 == key_2650805934))) {
          result_2650805936 = h_2650805995;
          break BeforeRet;
          }
          
          h_2650805995 = nextTry_1308622883(h_2650805995, (t_2650805933.data).length - 1);
        }
    };
    result_2650805936 = subInt(-1, h_2650805995);
  };

  return result_2650805936;

}

function hasKey_2650811492(t_2650811495, key_2650811496) {
  var result_2650811497 = false;

    var hc_2650811498 = [0];
    result_2650811497 = (0 <= rawGet_2650805930(t_2650811495, key_2650811496, hc_2650811498, 0));

  return result_2650811497;

}

function contains_2650811486(t_2650811489, key_2650811490) {
  var result_2650811491 = false;

  BeforeRet: {
    result_2650811491 = hasKey_2650811492(t_2650811489, key_2650811490);
    break BeforeRet;
  };

  return result_2650811491;

}

function raiseKeyError_1291850799(key_1291850801) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850801) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2650811578(t_2650811581, key_2650811582) {
  var result_2650811583 = null;
  var result_2650811583_Idx = 0;

    var hcHEX60gensym22_2650811584 = [0];
    var indexHEX60gensym22_2650811591 = rawGet_2650805930(t_2650811581, key_2650811582, hcHEX60gensym22_2650811584, 0);
    if ((0 <= indexHEX60gensym22_2650811591)) {
    result_2650811583 = t_2650811581.data[chckIndx(indexHEX60gensym22_2650811591, 0, (t_2650811581.data).length - 1)]; result_2650811583_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850799(key_2650811582);
    }
    

  return [result_2650811583, result_2650811583_Idx];

}

function HEX3C_2231370055(a_2231370056, b_2231370057) {
  var result_2231370058 = false;

  BeforeRet: {
    if ((a_2231370056.Field0 < b_2231370057.Field0)) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370056.Field0 == b_2231370057.Field0) && (a_2231370056.Field1 < b_2231370057.Field1))) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
      result_2231370058 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370058;

}

function getPrevFindResult_2650808209(self_2650808210, cursor_2650808211, offset_2650808212) {
            var Temporary4;

  var result_2650811431 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2650811432 = 0;
    Label1: {
      var line_2650811438 = 0;
      var res_2650811750 = cursor_2650808211.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2650811750)) break Label3;
            line_2650811438 = res_2650811750;
            if (contains_2650811486(self_2650808210.searchResults, line_2650811438)) {
            var selections_2650811668 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2650811578(self_2650808210.searchResults, line_2650811438), Temporary4)[0][Temporary4[1]], NTI2650800360);
            Label5: {
              var k_2650811677 = 0;
              var colontmp__2650811747 = 0;
              colontmp__2650811747 = (selections_2650811668).length - 1;
              var res_2650811748 = colontmp__2650811747;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2650811748)) break Label7;
                    k_2650811677 = res_2650811748;
                    if (HEX3C_2231370055(selections_2650811668[chckIndx(k_2650811677, 0, (selections_2650811668).length - 1)].Field1, cursor_2650808211)) {
                    if ((i_2650811432 == offset_2650808212)) {
                    result_2650811431 = nimCopy(result_2650811431, selections_2650811668[chckIndx(k_2650811677, 0, (selections_2650811668).length - 1)], NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2650811432 = addInt(i_2650811432, 1);
                    }
                    
                    res_2650811748 = subInt(res_2650811748, 1);
                  }
              };
            };
            }
            
            res_2650811750 = subInt(res_2650811750, 1);
          }
      };
    };
    result_2650811431 = nimCopy(result_2650811431, toSelection_2231370221(cursor_2650808211), NTI2231369739);
    break BeforeRet;
  };

  return result_2650811431;

}

function getPrevFindResultJsWrapper_2650811423(self_2650811713, cursor_2650811714, offset_2650811715) {
  var result_2650811716 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650811716 = nimCopy(result_2650811716, getPrevFindResult_2650808209(self_2650811713, cursor_2650811714, offset_2650811715), NTI2231369739);

  return result_2650811716;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2650811423(this, cursor_, offset_));};

function getNextFindResult_2650808213(self_2650808214, cursor_2650808215, offset_2650808216) {
              var Temporary5;

  var result_2650811763 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2650811764 = 0;
    Label1: {
      var line_2650811772 = 0;
      var colontmp__2650811981 = 0;
      colontmp__2650811981 = (self_2650808214.document.lines).length - 1;
      var res_2650811982 = cursor_2650808215.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2650811982 <= colontmp__2650811981)) break Label3;
            line_2650811772 = res_2650811982;
            if (contains_2650811486(self_2650808214.searchResults, line_2650811772)) {
            Label4: {
              var selection_2650811906 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2650811976 = [];
              colontmp__2650811976 = (Temporary5 = HEX5BHEX5D_2650811578(self_2650808214.searchResults, line_2650811772), Temporary5)[0][Temporary5[1]];
              var i_2650811978 = 0;
              var L_2650811979 = (colontmp__2650811976).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2650811978 < L_2650811979)) break Label7;
                    selection_2650811906 = colontmp__2650811976[chckIndx(i_2650811978, 0, (colontmp__2650811976).length - 1)];
                    if (HEX3C_2231370055(cursor_2650808215, selection_2650811906.Field0)) {
                    if ((i_2650811764 == offset_2650808216)) {
                    result_2650811763 = nimCopy(result_2650811763, selection_2650811906, NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2650811764 = addInt(i_2650811764, 1);
                    }
                    
                    i_2650811978 = addInt(i_2650811978, 1);
                    if (!(((colontmp__2650811976).length == L_2650811979))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2650811982 = addInt(res_2650811982, 1);
          }
      };
    };
    result_2650811763 = nimCopy(result_2650811763, toSelection_2231370221(cursor_2650808215), NTI2231369739);
    break BeforeRet;
  };

  return result_2650811763;

}

function getNextFindResultJsWrapper_2650811755(self_2650811942, cursor_2650811943, offset_2650811944) {
  var result_2650811945 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650811945 = nimCopy(result_2650811945, getNextFindResult_2650808213(self_2650811942, cursor_2650811943, offset_2650811944), NTI2231369739);

  return result_2650811945;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2650811755(this, cursor_, offset_));};

function addNextFindResultToSelection_2650811990(self_2650811991) {
    selectionsHEX3D_2650800880(self_2650811991, HEX26_2650811209(selections_2650800621(self_2650811991), [nimCopy(null, getNextFindResult_2650808213(self_2650811991, selection_2650800624(self_2650811991).Field1, 0), NTI2231369739)]));

  
}

function addNextFindResultToSelectionJsWrapper_2650811986(self_2650812027) {
    addNextFindResultToSelection_2650811990(self_2650812027);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2650811986(this));};

function addPrevFindResultToSelection_2650812048(self_2650812049) {
    selectionsHEX3D_2650800880(self_2650812049, HEX26_2650811209(selections_2650800621(self_2650812049), [nimCopy(null, getPrevFindResult_2650808209(self_2650812049, selection_2650800624(self_2650812049).Field0, 0), NTI2231369739)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2650812044(self_2650812085) {
    addPrevFindResultToSelection_2650812048(self_2650812085);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2650812044(this));};

function len_2650812166(t_2650812169) {
  var result_2650812170 = 0;

    result_2650812170 = t_2650812169.counter;

  return result_2650812170;

}

function setAllFindResultToSelection_2650812106(self_2650812107) {
    var selections_2650812112 = [];
    Label1: {
      var searchResults_2650812384 = [];
      var L_2650812453 = len_2650812166(self_2650812107.searchResults);
      Label2: {
        var h_2650812455 = 0;
        var colontmp__2650812456 = 0;
        colontmp__2650812456 = (self_2650812107.searchResults.data).length - 1;
        var res_2650812457 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2650812457 <= colontmp__2650812456)) break Label4;
              h_2650812455 = res_2650812457;
              if (isFilled_1308622880(self_2650812107.searchResults.data[chckIndx(h_2650812455, 0, (self_2650812107.searchResults.data).length - 1)].Field0)) {
              searchResults_2650812384 = self_2650812107.searchResults.data[chckIndx(h_2650812455, 0, (self_2650812107.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2650812388 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2650812446 = 0;
                var L_2650812447 = (searchResults_2650812384).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2650812446 < L_2650812447)) break Label7;
                      s_2650812388 = searchResults_2650812384[chckIndx(i_2650812446, 0, (searchResults_2650812384).length - 1)];
                      var Temporary8 = nimCopy(null, s_2650812388, NTI2231369739);
                      selections_2650812112.push(Temporary8);;
                      i_2650812446 = addInt(i_2650812446, 1);
                      if (!(((searchResults_2650812384).length == L_2650812447))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2650812166(self_2650812107.searchResults) == L_2650812453))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2650812457 = addInt(res_2650812457, 1);
            }
        };
      };
    };
    selectionsHEX3D_2650800880(self_2650812107, selections_2650812112);

  
}

function setAllFindResultToSelectionJsWrapper_2650812102(self_2650812429) {
    setAllFindResultToSelection_2650812106(self_2650812429);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2650812102(this));};

function map_2650808430(s_2650808433, op_2650808435) {
  var result_2650808436 = [];

    result_2650808436 = new Array(chckRange((s_2650808433).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2650808433).length, 0, 2147483647) ; ++i) { result_2650808436[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2650808451 = 0;
      var colontmp__2650812564 = 0;
      colontmp__2650812564 = (s_2650808433).length;
      var i_2650812565 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650812565 < colontmp__2650812564)) break Label3;
            i_2650808451 = i_2650812565;
            result_2650808436[chckIndx(i_2650808451, 0, (result_2650808436).length - 1)] = nimCopy(result_2650808436[chckIndx(i_2650808451, 0, (result_2650808436).length - 1)], op_2650808435(s_2650808433[chckIndx(i_2650808451, 0, (s_2650808433).length - 1)]), NTI2650804745);
            i_2650812565 = addInt(i_2650812565, 1);
          }
      };
    };

  return result_2650808436;

}

function moveCursor_2650808375(self_2650808376, cursor_2650808377, movement_2650808382, offset_2650808383, all_2650808384) {
      
function HEX3Aanonymous_2650808395(s_2650808402) {
        var result_2650808405 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2650808405 = nimCopy(result_2650808405, toSelection_2231370221(movement_2650808382(self_2650808376, s_2650808402.Field1, offset_2650808383)), NTI2231369739);

        return result_2650808405;

      }
      
function HEX3Aanonymous_2650808419(s_2650808426) {
        var result_2650808429 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2650812551 = movement_2650808382(self_2650808376, s_2650808426.Field0, offset_2650808383);
          var colontmp__2650812552 = nimCopy(null, s_2650808426.Field1, NTI2231369737);
          result_2650808429 = nimCopy(result_2650808429, {Field0: nimCopy(null, colontmp__2650812551, NTI2231369737), Field1: nimCopy(null, colontmp__2650812552, NTI2231369737)}, NTI2650804745);

        return result_2650808429;

      }
      
function HEX3Aanonymous_2650808462(s_2650808469) {
        var result_2650808472 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2650812555 = nimCopy(null, s_2650808469.Field0, NTI2231369737);
          var colontmp__2650812556 = movement_2650808382(self_2650808376, s_2650808469.Field1, offset_2650808383);
          result_2650808472 = nimCopy(result_2650808472, {Field0: nimCopy(null, colontmp__2650812555, NTI2231369737), Field1: nimCopy(null, colontmp__2650812556, NTI2231369737)}, NTI2650804787);

        return result_2650808472;

      }
      
function HEX3Aanonymous_2650808489(s_2650808496) {
        var result_2650808499 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2650812559 = nimCopy(null, s_2650808496.Field1, NTI2231369737);
          var colontmp__2650812560 = movement_2650808382(self_2650808376, s_2650808496.Field1, offset_2650808383);
          result_2650808499 = nimCopy(result_2650808499, {Field0: nimCopy(null, colontmp__2650812559, NTI2231369737), Field1: nimCopy(null, colontmp__2650812560, NTI2231369737)}, NTI2650804819);

        return result_2650808499;

      }

    switch (cursor_2650808377) {
    case 0:
      var configCursor_2650808394 = getOption_2650808314(self_2650808376.editor, getContextWithMode_2650808280(self_2650808376, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2650808375(self_2650808376, configCursor_2650808394, movement_2650808382, offset_2650808383, all_2650808384);
      break;
    case 1:
      if (all_2650808384) {
      selectionsHEX3D_2650800880(self_2650808376, map_2650800554(selections_2650800621(self_2650808376), HEX3Aanonymous_2650808395));
      }
      else {
        var selections_2650808412 = selections_2650800621(self_2650808376);
        selections_2650808412[chckIndx((selections_2650808412).length - 1, 0, (selections_2650808412).length - 1)] = nimCopy(selections_2650808412[chckIndx((selections_2650808412).length - 1, 0, (selections_2650808412).length - 1)], toSelection_2231370221(movement_2650808382(self_2650808376, selections_2650808412[chckIndx((selections_2650808412).length - 1, 0, (selections_2650808412).length - 1)].Field1, offset_2650808383)), NTI2231369739);
        selectionsHEX3D_2650800880(self_2650808376, selections_2650808412);
      }
      
      scrollToCursor_2650808227(self_2650808376, selection_2650800624(self_2650808376).Field1, false);
      break;
    case 2:
      if (all_2650808384) {
      selectionsHEX3D_2650800880(self_2650808376, map_2650808430(selections_2650800621(self_2650808376), HEX3Aanonymous_2650808419));
      }
      else {
        var selections_2650808452 = selections_2650800621(self_2650808376);
        var colontmp__2650812553 = movement_2650808382(self_2650808376, selections_2650808452[chckIndx((selections_2650808452).length - 1, 0, (selections_2650808452).length - 1)].Field0, offset_2650808383);
        var colontmp__2650812554 = nimCopy(null, selections_2650808452[chckIndx((selections_2650808452).length - 1, 0, (selections_2650808452).length - 1)].Field1, NTI2231369737);
        selections_2650808452[chckIndx((selections_2650808452).length - 1, 0, (selections_2650808452).length - 1)] = nimCopy(selections_2650808452[chckIndx((selections_2650808452).length - 1, 0, (selections_2650808452).length - 1)], {Field0: nimCopy(null, colontmp__2650812553, NTI2231369737), Field1: nimCopy(null, colontmp__2650812554, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2650800880(self_2650808376, selections_2650808452);
      }
      
      scrollToCursor_2650808227(self_2650808376, selection_2650800624(self_2650808376).Field0, false);
      break;
    case 3:
      if (all_2650808384) {
      selectionsHEX3D_2650800880(self_2650808376, map_2650808430(selections_2650800621(self_2650808376), HEX3Aanonymous_2650808462));
      }
      else {
        var selections_2650808479 = selections_2650800621(self_2650808376);
        var colontmp__2650812557 = nimCopy(null, selections_2650808479[chckIndx((selections_2650808479).length - 1, 0, (selections_2650808479).length - 1)].Field0, NTI2231369737);
        var colontmp__2650812558 = movement_2650808382(self_2650808376, selections_2650808479[chckIndx((selections_2650808479).length - 1, 0, (selections_2650808479).length - 1)].Field1, offset_2650808383);
        selections_2650808479[chckIndx((selections_2650808479).length - 1, 0, (selections_2650808479).length - 1)] = nimCopy(selections_2650808479[chckIndx((selections_2650808479).length - 1, 0, (selections_2650808479).length - 1)], {Field0: nimCopy(null, colontmp__2650812557, NTI2231369737), Field1: nimCopy(null, colontmp__2650812558, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2650800880(self_2650808376, selections_2650808479);
      }
      
      scrollToCursor_2650808227(self_2650808376, selection_2650800624(self_2650808376).Field1, false);
      break;
    case 4:
      if (all_2650808384) {
      selectionsHEX3D_2650800880(self_2650808376, map_2650808430(selections_2650800621(self_2650808376), HEX3Aanonymous_2650808489));
      }
      else {
        var selections_2650808506 = selections_2650800621(self_2650808376);
        var colontmp__2650812561 = nimCopy(null, selections_2650808506[chckIndx((selections_2650808506).length - 1, 0, (selections_2650808506).length - 1)].Field1, NTI2231369737);
        var colontmp__2650812562 = movement_2650808382(self_2650808376, selections_2650808506[chckIndx((selections_2650808506).length - 1, 0, (selections_2650808506).length - 1)].Field1, offset_2650808383);
        selections_2650808506[chckIndx((selections_2650808506).length - 1, 0, (selections_2650808506).length - 1)] = nimCopy(selections_2650808506[chckIndx((selections_2650808506).length - 1, 0, (selections_2650808506).length - 1)], {Field0: nimCopy(null, colontmp__2650812561, NTI2231369737), Field1: nimCopy(null, colontmp__2650812562, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2650800880(self_2650808376, selections_2650808506);
      }
      
      scrollToCursor_2650808227(self_2650808376, selection_2650800624(self_2650808376).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2650812465(self_2650812466, distance_2650812467, cursor_2650812468, all_2650812469) {
    moveCursor_2650808375(self_2650812466, cursor_2650812468, doMoveCursorColumn_2650808176, distance_2650812467, all_2650812469);
    updateTargetColumn_2650809293(self_2650812466, cursor_2650812468);

  
}

function moveCursorColumnJsWrapper_2650812461(self_2650812518, distance_2650812519, cursor_2650812520, all_2650812521) {
    moveCursorColumn_2650812465(self_2650812518, distance_2650812519, cursor_2650812520, all_2650812521);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2650812461(this, distance_, cursor_, all_));};

function moveCursorLine_2650812573(self_2650812574, distance_2650812575, cursor_2650812576, all_2650812577) {
    moveCursor_2650808375(self_2650812574, cursor_2650812576, doMoveCursorLine_2650808186, distance_2650812575, all_2650812577);

  
}

function moveCursorLineJsWrapper_2650812569(self_2650812608, distance_2650812609, cursor_2650812610, all_2650812611) {
    moveCursorLine_2650812573(self_2650812608, distance_2650812609, cursor_2650812610, all_2650812611);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2650812569(this, distance_, cursor_, all_));};

function doMoveCursorHome_2650808199(self_2650808200, cursor_2650808201, offset_2650808202) {
  var result_2650808203 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2650812707 = cursor_2650808201.Field0;
    var colontmp__2650812708 = 0;
    result_2650808203 = nimCopy(result_2650808203, {Field0: colontmp__2650812707, Field1: colontmp__2650812708}, NTI2231369737);
    break BeforeRet;
  };

  return result_2650808203;

}

function moveCursorHome_2650812647(self_2650812648, cursor_2650812649, all_2650812650) {
    moveCursor_2650808375(self_2650812648, cursor_2650812649, doMoveCursorHome_2650808199, 0, all_2650812650);
    updateTargetColumn_2650809293(self_2650812648, cursor_2650812649);

  
}

function moveCursorHomeJsWrapper_2650812643(self_2650812680, cursor_2650812681, all_2650812682) {
    moveCursorHome_2650812647(self_2650812680, cursor_2650812681, all_2650812682);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2650812643(this, cursor_, all_));};

function doMoveCursorEnd_2650808204(self_2650808205, cursor_2650808206, offset_2650808207) {
  var result_2650808208 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2650812775 = cursor_2650808206.Field0;
    var colontmp__2650812776 = lineLength_2650800492(self_2650808205.document, cursor_2650808206.Field0);
    result_2650808208 = nimCopy(result_2650808208, {Field0: colontmp__2650812775, Field1: colontmp__2650812776}, NTI2231369737);
    break BeforeRet;
  };

  return result_2650808208;

}

function moveCursorEnd_2650812715(self_2650812716, cursor_2650812717, all_2650812718) {
    moveCursor_2650808375(self_2650812716, cursor_2650812717, doMoveCursorEnd_2650808204, 0, all_2650812718);
    updateTargetColumn_2650809293(self_2650812716, cursor_2650812717);

  
}

function moveCursorEndJsWrapper_2650812711(self_2650812748, cursor_2650812749, all_2650812750) {
    moveCursorEnd_2650812715(self_2650812748, cursor_2650812749, all_2650812750);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2650812711(this, cursor_, all_));};

function getLine_2650800485(self_2650800486, line_2650800487) {
  var result_2650800488 = [];

  BeforeRet: {
    if ((line_2650800487 < (self_2650800486.lines).length)) {
    result_2650800488 = nimCopy(null, self_2650800486.lines[chckIndx(line_2650800487, 0, (self_2650800486.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2650800488 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2650800488;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2650812783(self_2650812784, str_2650812785, cursor_2650812786, all_2650812787) {
    str_2650812785 = nimCopy(null, str_2650812785, NTI33554449);
    
function doMoveCursorTo_2650812788(self_2650812789, cursor_2650812790, offset_2650812791) {
      var result_2650812792 = {Field0: 0, Field1: 0};

        var line_2650812793 = getLine_2650800485(self_2650812789.document, cursor_2650812790.Field0);
        result_2650812792 = nimCopy(result_2650812792, cursor_2650812790, NTI2231369737);
        var index_2650812794 = nsuFindStr(line_2650812793, str_2650812785, chckRange(addInt(cursor_2650812790.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2650812794)) {
        var colontmp__2650812858 = cursor_2650812790.Field0;
        var colontmp__2650812859 = index_2650812794;
        result_2650812792 = nimCopy(result_2650812792, {Field0: colontmp__2650812858, Field1: colontmp__2650812859}, NTI2231369737);
        }
        

      return result_2650812792;

    }

    moveCursor_2650808375(self_2650812784, cursor_2650812786, doMoveCursorTo_2650812788, 0, all_2650812787);
    updateTargetColumn_2650809293(self_2650812784, cursor_2650812786);

  
}

function moveCursorToJsWrapper_2650812779(self_2650812825, str_2650812826, cursor_2650812827, all_2650812828) {
    moveCursorTo_2650812783(self_2650812825, str_2650812826, cursor_2650812827, all_2650812828);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2650812779(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2650812866(self_2650812867, str_2650812868, cursor_2650812869, all_2650812870) {
    str_2650812868 = nimCopy(null, str_2650812868, NTI33554449);
    
function doMoveCursorBefore_2650812871(self_2650812872, cursor_2650812873, offset_2650812874) {
      var result_2650812875 = {Field0: 0, Field1: 0};

        var line_2650812876 = getLine_2650800485(self_2650812872.document, cursor_2650812873.Field0);
        result_2650812875 = nimCopy(result_2650812875, cursor_2650812873, NTI2231369737);
        var index_2650812877 = nsuFindStr(line_2650812876, str_2650812868, chckRange(cursor_2650812873.Field1, 0, 2147483647), -1);
        if ((0 < index_2650812877)) {
        var colontmp__2650812941 = cursor_2650812873.Field0;
        var colontmp__2650812942 = subInt(index_2650812877, 1);
        result_2650812875 = nimCopy(result_2650812875, {Field0: colontmp__2650812941, Field1: colontmp__2650812942}, NTI2231369737);
        }
        

      return result_2650812875;

    }

    moveCursor_2650808375(self_2650812867, cursor_2650812869, doMoveCursorBefore_2650812871, 0, all_2650812870);
    updateTargetColumn_2650809293(self_2650812867, cursor_2650812869);

  
}

function moveCursorBeforeJsWrapper_2650812862(self_2650812908, str_2650812909, cursor_2650812910, all_2650812911) {
    moveCursorBefore_2650812866(self_2650812908, str_2650812909, cursor_2650812910, all_2650812911);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2650812862(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2650808222(self_2650808223, cursor_2650808224, offset_2650808225) {
  var result_2650808226 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2650808226 = nimCopy(result_2650808226, getNextFindResult_2650808213(self_2650808223, cursor_2650808224, offset_2650808225).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2650808226;

}

function moveCursorNextFindResult_2650812949(self_2650812950, cursor_2650812951, all_2650812952) {
    moveCursor_2650808375(self_2650812950, cursor_2650812951, doMoveCursorNextFindResult_2650808222, 0, all_2650812952);
    updateTargetColumn_2650809293(self_2650812950, cursor_2650812951);

  
}

function moveCursorNextFindResultJsWrapper_2650812945(self_2650812982, cursor_2650812983, all_2650812984) {
    moveCursorNextFindResult_2650812949(self_2650812982, cursor_2650812983, all_2650812984);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2650812945(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2650808217(self_2650808218, cursor_2650808219, offset_2650808220) {
  var result_2650808221 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2650808221 = nimCopy(result_2650808221, getPrevFindResult_2650808209(self_2650808218, cursor_2650808219, offset_2650808220).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2650808221;

}

function moveCursorPrevFindResult_2650813015(self_2650813016, cursor_2650813017, all_2650813018) {
    moveCursor_2650808375(self_2650813016, cursor_2650813017, doMoveCursorPrevFindResult_2650808217, 0, all_2650813018);
    updateTargetColumn_2650809293(self_2650813016, cursor_2650813017);

  
}

function moveCursorPrevFindResultJsWrapper_2650813011(self_2650813048, cursor_2650813049, all_2650813050) {
    moveCursorPrevFindResult_2650813015(self_2650813048, cursor_2650813049, all_2650813050);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2650813011(this, cursor_, all_));};

function scrollToCursor_2650808730(self_2650808731, cursor_2650808732) {
    scrollToCursor_2650808227(self_2650808731, getCursor_2650808310(self_2650808731, cursor_2650808732), false);

  
}

function scrollToCursorJsWrapper_2650813077(self_2650813112, cursor_2650813113) {
    scrollToCursor_2650808730(self_2650813112, cursor_2650813113);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2650813077(this, cursor_));};

function deinit_2751463882(self_2751463883) {
  
}

function deinit_2751463884(self_2751463885) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2650813184 = 0;
      colontmp__2650813184 = subInt((path_1426063614).length, 1);
      var res_2650813185 = colontmp__2650813184;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2650813185)) break Label3;
            i_1426063627 = res_2650813185;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2650813185 = subInt(res_2650813185, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2768240676() {
  var result_2768240683 = ({val: [], has: false});

  return result_2768240683;

}

function some_2768240685(val_2768240687) {
  var result_2768240688 = ({val: [], has: false});

    result_2768240688.has = true;
    result_2768240688.val = nimCopy(null, val_2768240687, NTI33554449);

  return result_2768240688;

}

function getLanguageForFile_2768240644(filename_2768240645) {
    var Temporary1;

  var result_2768240651 = ({val: [], has: false});

  BeforeRet: {
    var extension_2768240652 = nimCopy(null, nossplitFile(filename_2768240645).Field2, NTI33554449);
    if ((0 < (extension_2768240652).length)) {
    extension_2768240652 = nimCopy(null, HEX5BHEX5D_855639319(extension_2768240652, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2768240652)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2768240675 = [mnewString(0)];
      fmtRes_2768240675[0].push.apply(fmtRes_2768240675[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2768240675, 0, extension_2768240652, []);
      fmtRes_2768240675[0].push.apply(fmtRes_2768240675[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2768240675[0], NTI33554449)]);
      result_2768240651 = nimCopy(result_2768240651, none_2768240676(), NTI2768240649);
      break BeforeRet;
      break;
    }
    var languageId_2768240684 = nimCopy(null, Temporary1, NTI33554449);
    result_2768240651 = nimCopy(result_2768240651, some_2768240685(languageId_2768240684), NTI2768240649);
    break BeforeRet;
  };

  return result_2768240651;

}

function isSome_2650803879(self_2650803881) {
  var result_2650803882 = false;

    result_2650803882 = self_2650803881.has;

  return result_2650803882;

}

function isNone_2650803904(self_2650803906) {
  var result_2650803907 = false;

    result_2650803907 = !(self_2650803906.has);

  return result_2650803907;

}

function get_2650803896(self_2650803898) {
  var result_2650803899 = [];

    if (isNone_2650803904(self_2650803898)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650803899 = self_2650803898["val"];

  return result_2650803899;

}

function getOption_2650803912(editor_2650803914, path_2650803915, default_2650803916) {
  var result_2650803922 = null;

  BeforeRet: {
    if ((editor_2650803914 == null)) {
    result_2650803922 = default_2650803916;
    break BeforeRet;
    }
    
    var node_2650803934 = HEX7BHEX7D_1627393316(editor_2650803914.options, nsuSplitString(path_2650803915, [46], -1));
    if ((node_2650803934 == null)) {
    result_2650803922 = default_2650803916;
    break BeforeRet;
    }
    
    result_2650803922 = node_2650803934;
    break BeforeRet;
  };

  return result_2650803922;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2751463743() {
  var result_2751463749 = ({val: null});

  return result_2751463749;

}

function some_2751463754(val_2751463756) {
  var result_2751463757 = ({val: null});

    if (!(!((val_2751463756 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2751463757.val = val_2751463756;

  return result_2751463757;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2751463705(languageId_2751463706, config_2751463707) {
    var Temporary2;

  var result_2751463714 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2751463707, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2751463707, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2751463728 = [mnewString(0)];
      fmtRes_2751463728[0].push.apply(fmtRes_2751463728[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2751463728, 0, languageId_2751463706, []);
      fmtRes_2751463728[0].push.apply(fmtRes_2751463728[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2751463728[0];
    }
    
    var wasmPath_2751463729 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2751463734 = [mnewString(0)];
    fmtRes_2751463734[0].push.apply(fmtRes_2751463734[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2751463734, 0, wasmPath_2751463729, []);
    fmtRes_2751463734[0].push.apply(fmtRes_2751463734[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2751463734[0], NTI33554449)]);
    var language_2751463739 = (await loadTreesitterLanguage(toJSStr(wasmPath_2751463729)));
    if ((language_2751463739 == null)) {
    result_2751463714 = none_2751463743();
    break BeforeRet;
    }
    
    result_2751463714 = some_2751463754(language_2751463739);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2751463784 = [mnewString(0)];
    fmtRes_2751463784[0].push.apply(fmtRes_2751463784[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2751463784, 0, languageId_2751463706, []);
    fmtRes_2751463784[0].push.apply(fmtRes_2751463784[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2751463784, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2751463784[0], NTI33554449)]);
    result_2751463714 = none_2751463743();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2751463714;

}

function isSome_2751463849(self_2751463851) {
  var result_2751463852 = false;

    result_2751463852 = !((self_2751463851.val == null));

  return result_2751463852;

}
async function loadLanguage_2751463825(languageId_2751463826, config_2751463827) {
  var result_2751463830 = null;

  BeforeRet: {
    var language_2751463844 = (await loadLanguageDynamically_2751463705(languageId_2751463826, config_2751463827));
    if (isSome_2751463849(language_2751463844)) {
    result_2751463830 = language_2751463844;
    break BeforeRet;
    }
    
    result_2751463830 = none_2751463743();
    break BeforeRet;
  };

  return result_2751463830;

}

function isNone_2650803948(self_2650803950) {
  var result_2650803951 = false;

    result_2650803951 = (self_2650803950.val == null);

  return result_2650803951;

}

function createTsParser_2751463871() {
  var result_2751463872 = null;

  BeforeRet: {
    result_2751463872 = new Parser();
    break BeforeRet;
  };

  return result_2751463872;

}

function get_2650803981(self_2650803983) {
  var result_2650803984 = null;
  var result_2650803984_Idx = 0;

  BeforeRet: {
    if (isNone_2650803948(self_2650803983)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650803984 = self_2650803983; result_2650803984_Idx = "val";
    break BeforeRet;
  };

  return [result_2650803984, result_2650803984_Idx];

}

function contentString_2650801278(document_2650801279) {
  var result_2650801280 = [];

  BeforeRet: {
    result_2650801280 = nimCopy(null, nsuJoinSep(document_2650801279.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2650801280;

}

function none_2751463490() {
  var result_2751463496 = ({val: null});

  return result_2751463496;

}
async function initTreesitter_2650803857(self_2650803858) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2650803860 = null;

  BeforeRet: {
    if (!((self_2650803858.tsParser == null))) {
    deinit_2751463882(self_2650803858.tsParser);
    self_2650803858.tsParser = null;
    }
    
    if (!((self_2650803858.highlightQuery == null))) {
    deinit_2751463884(self_2650803858.highlightQuery);
    self_2650803858.highlightQuery = null;
    }
    
      var oHEX60gensym73_2650803874 = getLanguageForFile_2768240644(self_2650803858.filename);
      if (!isSome_2650803879(oHEX60gensym73_2650803874)) Temporary2 = false; else {        var languageId_2650803910 = nimCopy(null, get_2650803896(oHEX60gensym73_2650803874), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2650803910;
    }
    else {
      result_2650803860 = undefined;
      break BeforeRet;
    }
    
    var languageId_2650803911 = nimCopy(null, Temporary1, NTI33554449);
    var config_2650803938 = getOption_2650803912(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2650803911 || []), newJObject_1627390051());
    var language_2650803943 = [(await loadLanguage_2751463825(languageId_2650803911, config_2650803938))];
    if (isNone_2650803948(language_2650803943[0])) {
    var fmtRes_2650803960 = [mnewString(0)];
    fmtRes_2650803960[0].push.apply(fmtRes_2650803960[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2650803960, 0, languageId_2650803911, []);
    fmtRes_2650803960[0].push.apply(fmtRes_2650803960[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2650803960[0], NTI33554449)]);
    result_2650803860 = undefined;
    break BeforeRet;
    }
    
    self_2650803858.tsParser = createTsParser_2751463871();
    if ((self_2650803858.tsParser == null)) {
    var fmtRes_2650803968 = [mnewString(0)];
    fmtRes_2650803968[0].push.apply(fmtRes_2650803968[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2650803968, 0, languageId_2650803911, []);
    fmtRes_2650803968[0].push.apply(fmtRes_2650803968[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2650803968[0], NTI33554449)]);
    result_2650803860 = undefined;
    break BeforeRet;
    }
    
    self_2650803858.tsParser.setLanguage((Temporary3 = get_2650803981(language_2650803943[0]), Temporary3)[0][Temporary3[1]]);
    self_2650803858.tsLanguage = (Temporary4 = get_2650803981(language_2650803943[0]), Temporary4)[0][Temporary4[1]];
    self_2650803858.currentTree = parseString_2751463483(self_2650803858.tsParser, contentString_2650801278(self_2650803858), none_2751463490());
++excHandler;
    try {
    var fmtRes_2650804021 = [mnewString(0)];
    fmtRes_2650804021[0].push.apply(fmtRes_2650804021[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2650804021, 0, languageId_2650803911, []);
    fmtRes_2650804021[0].push.apply(fmtRes_2650804021[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2650804022 = loadFile_2499805191(fs_2499805237, fmtRes_2650804021[0]);
    self_2650803858.highlightQuery = (Temporary6 = get_2650803981(language_2650803943[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2650804022));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2650804042 = [mnewString(0)];
    fmtRes_2650804042[0].push.apply(fmtRes_2650804042[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2650804042, 0, languageId_2650803911, []);
    fmtRes_2650804042[0].push.apply(fmtRes_2650804042[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2650804042[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    invoke_2650801097(self_2650803858.textChanged, self_2650803858);
    requestRender_2315255899(gEditor.platform, false);
    result_2650803860 = undefined;
    break BeforeRet;
  };

  return result_2650803860;

}

function reloadTreesitter_2650813139(self_2650813140) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2650803857(self_2650813140.document);

  
}

function reloadTreesitterJsWrapper_2650813135(self_2650813168) {
    reloadTreesitter_2650813139(self_2650813168);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2650813135(this));};

function deleteLeft_2650813195(self_2650813196) {
    var selections_2650813197 = selections_2650800621(self_2650813196);
    Label1: {
      var i_2650813203 = 0;
      var selection_2650813204 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2650813250 = 0;
      var L_2650813251 = (selections_2650813197).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650813250 < L_2650813251)) break Label3;
            i_2650813203 = i_2650813250;
            selection_2650813204 = nimCopy(selection_2650813204, selections_2650813197[chckIndx(i_2650813250, 0, (selections_2650813197).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2650813204)) {
            var colontmp__2650813248 = doMoveCursorColumn_2650808176(self_2650813196, selection_2650813204.Field0, -1);
            var colontmp__2650813249 = nimCopy(null, selection_2650813204.Field0, NTI2231369737);
            selections_2650813197[chckIndx(i_2650813203, 0, (selections_2650813197).length - 1)] = nimCopy(selections_2650813197[chckIndx(i_2650813203, 0, (selections_2650813197).length - 1)], {Field0: nimCopy(null, colontmp__2650813248, NTI2231369737), Field1: nimCopy(null, colontmp__2650813249, NTI2231369737)}, NTI2231369739);
            }
            
            i_2650813250 = addInt(i_2650813250, 1);
            if (!(((selections_2650813197).length == L_2650813251))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2650800880(self_2650813196, delete_2650804228(self_2650813196.document, selections_2650813197, selections_2650800621(self_2650813196), true, true));
    updateTargetColumn_2650809293(self_2650813196, 3);

  
}

function deleteLeftJsWrapper_2650813191(self_2650813232) {
    deleteLeft_2650813195(self_2650813232);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2650813191(this));};

function deleteRight_2650813259(self_2650813260) {
    var selections_2650813261 = selections_2650800621(self_2650813260);
    Label1: {
      var i_2650813267 = 0;
      var selection_2650813268 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2650813314 = 0;
      var L_2650813315 = (selections_2650813261).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650813314 < L_2650813315)) break Label3;
            i_2650813267 = i_2650813314;
            selection_2650813268 = nimCopy(selection_2650813268, selections_2650813261[chckIndx(i_2650813314, 0, (selections_2650813261).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2650813268)) {
            var colontmp__2650813312 = nimCopy(null, selection_2650813268.Field0, NTI2231369737);
            var colontmp__2650813313 = doMoveCursorColumn_2650808176(self_2650813260, selection_2650813268.Field0, 1);
            selections_2650813261[chckIndx(i_2650813267, 0, (selections_2650813261).length - 1)] = nimCopy(selections_2650813261[chckIndx(i_2650813267, 0, (selections_2650813261).length - 1)], {Field0: nimCopy(null, colontmp__2650813312, NTI2231369737), Field1: nimCopy(null, colontmp__2650813313, NTI2231369737)}, NTI2231369739);
            }
            
            i_2650813314 = addInt(i_2650813314, 1);
            if (!(((selections_2650813261).length == L_2650813315))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2650800880(self_2650813260, delete_2650804228(self_2650813260.document, selections_2650813261, selections_2650800621(self_2650813260), true, true));
    updateTargetColumn_2650809293(self_2650813260, 3);

  
}

function deleteRightJsWrapper_2650813255(self_2650813296) {
    deleteRight_2650813259(self_2650813296);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2650813255(this));};

function getCommandCount_2650813323(self_2650813324) {
  var result_2650813325 = 0;

  BeforeRet: {
    result_2650813325 = self_2650813324.commandCount;
    break BeforeRet;
  };

  return result_2650813325;

}

function getCommandCountJsWrapper_2650813319(self_2650813354) {
  var result_2650813355 = 0;

    result_2650813355 = getCommandCount_2650813323(self_2650813354);

  return result_2650813355;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2650813319(this));};

function setCommandCount_2650813380(self_2650813381, count_2650813382) {
    self_2650813381.commandCount = count_2650813382;

  
}

function setCommandCountJsWrapper_2650813376(self_2650813411, count_2650813412) {
    setCommandCount_2650813380(self_2650813411, count_2650813412);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2650813376(this, count_));};

function setCommandCountRestore_2650813438(self_2650813439, count_2650813440) {
    self_2650813439.commandCountRestore = count_2650813440;

  
}

function setCommandCountRestoreJsWrapper_2650813434(self_2650813469, count_2650813470) {
    setCommandCountRestore_2650813438(self_2650813469, count_2650813470);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2650813434(this, count_));};

function updateCommandCount_2650813496(self_2650813497, digit_2650813498) {
    self_2650813497.commandCount = addInt(mulInt(self_2650813497.commandCount, 10), digit_2650813498);

  
}

function updateCommandCountJsWrapper_2650813492(self_2650813527, digit_2650813528) {
    updateCommandCount_2650813496(self_2650813527, digit_2650813528);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2650813492(this, digit_));};

function setFlag_2650813554(self_2650813555, name_2650813556, value_2650813557) {
    setFlag_1291848939(self_2650813555.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2650813556 || []), value_2650813557);
    markDirty_2147483686(self_2650813555);

  
}

function setFlagJsWrapper_2650813550(self_2650813587, name_2650813588, value_2650813589) {
    setFlag_2650813554(self_2650813587, name_2650813588, value_2650813589);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2650813550(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2650813620(self_2650813621, name_2650813622) {
  var result_2650813623 = false;

  BeforeRet: {
    result_2650813623 = getFlag_1291848862(self_2650813621.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2650813622 || []), false);
    break BeforeRet;
  };

  return result_2650813623;

}

function getFlagJsWrapper_2650813616(self_2650813653, name_2650813654) {
  var result_2650813655 = false;

    result_2650813655 = getFlag_2650813620(self_2650813653, name_2650813654);

  return result_2650813655;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2650813616(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2650813690(self_2650813691, action_2650813692, args_2650813693) {
  var result_2650813694 = false;

  BeforeRet: {
    result_2650813694 = (handleActionInternal_2650800478(self_2650813691, action_2650813692, args_2650813693) == 3);
    break BeforeRet;
  };

  return result_2650813694;

}

function runActionJsWrapper_2650813686(self_2650813730, action_2650813731, args_2650813732) {
  var result_2650813733 = false;

    result_2650813733 = runAction_2650813690(self_2650813730, action_2650813731, args_2650813732);

  return result_2650813733;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2650813686(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2650813757(c_2650813758) {
  var result_2650813759 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2650813758) || (c_2650813758 == 95))) {
    result_2650813759 = 0;
    break BeforeRet;
    }
    
    if (((c_2650813758 == 32) || (c_2650813758 == 9))) {
    result_2650813759 = 1;
    break BeforeRet;
    }
    
    result_2650813759 = 2;
    break BeforeRet;
  };

  return result_2650813759;

}

function findWordBoundary_2650813766(self_2650813767, cursor_2650813768) {
  var result_2650813769 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2650813770 = getLine_2650800485(self_2650813767.document, cursor_2650813768.Field0);
    result_2650813769 = nimCopy(result_2650813769, toSelection_2231370221(cursor_2650813768), NTI2231369739);
    if ((result_2650813769.Field0.Field1 == (line_2650813770).length)) {
    result_2650813769.Field0.Field1 = subInt(result_2650813769.Field0.Field1, 1);
    result_2650813769.Field1.Field1 = subInt(result_2650813769.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2650813769.Field0.Field1) && (result_2650813769.Field0.Field1 < (line_2650813770).length))) break Label2;
          var leftCategory_2650813781 = charCategory_2650813757(line_2650813770[chckIndx(subInt(result_2650813769.Field0.Field1, 1), 0, (line_2650813770).length - 1)]);
          var rightCategory_2650813782 = charCategory_2650813757(line_2650813770[chckIndx(result_2650813769.Field0.Field1, 0, (line_2650813770).length - 1)]);
          if (!((leftCategory_2650813781 == rightCategory_2650813782))) {
          break Label1;
          }
          
          result_2650813769.Field0.Field1 = subInt(result_2650813769.Field0.Field1, 1);
        }
    };
    if ((result_2650813769.Field1.Field1 < (line_2650813770).length)) {
    result_2650813769.Field1.Field1 = addInt(result_2650813769.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2650813769.Field1.Field1) && (result_2650813769.Field1.Field1 < (line_2650813770).length))) break Label4;
          var leftCategory_2650813791 = charCategory_2650813757(line_2650813770[chckIndx(subInt(result_2650813769.Field1.Field1, 1), 0, (line_2650813770).length - 1)]);
          var rightCategory_2650813792 = charCategory_2650813757(line_2650813770[chckIndx(result_2650813769.Field1.Field1, 0, (line_2650813770).length - 1)]);
          if (!((leftCategory_2650813791 == rightCategory_2650813792))) {
          break Label3;
          }
          
          result_2650813769.Field1.Field1 = addInt(result_2650813769.Field1.Field1, 1);
        }
    };

  return result_2650813769;

}

function findWordBoundaryJsWrapper_2650813762(self_2650813826, cursor_2650813827) {
  var result_2650813828 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650813828 = nimCopy(result_2650813828, findWordBoundary_2650813766(self_2650813826, cursor_2650813827), NTI2231369739);

  return result_2650813828;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2650813762(this, cursor_));};

function min_2231370063(a_2231370064, b_2231370065) {
  var result_2231370066 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2231370055(a_2231370064, b_2231370065)) {
    result_2231370066 = nimCopy(result_2231370066, a_2231370064, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370066 = nimCopy(result_2231370066, b_2231370065, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370066;

}

function max_2231370067(a_2231370068, b_2231370069) {
  var result_2231370070 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(b_2231370069, a_2231370068)) {
    result_2231370070 = nimCopy(result_2231370070, a_2231370068, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370070 = nimCopy(result_2231370070, b_2231370069, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370070;

}

function or_2231370215(a_2231370216, b_2231370217) {
  var result_2231370218 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2231370219 = normalized_2231370094(a_2231370216);
    var bn_2231370220 = normalized_2231370094(b_2231370217);
    var colontmp__2650814070 = min_2231370063(an_2231370219.Field0, bn_2231370220.Field0);
    var colontmp__2650814071 = max_2231370067(an_2231370219.Field1, bn_2231370220.Field1);
    result_2231370218 = nimCopy(result_2231370218, {Field0: nimCopy(null, colontmp__2650814070, NTI2231369737), Field1: nimCopy(null, colontmp__2650814071, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370218;

}

function reverse_2231370097(selection_2231370098) {
  var result_2231370099 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2650814072 = nimCopy(null, selection_2231370098.Field1, NTI2231369737);
    var colontmp__2650814073 = nimCopy(null, selection_2231370098.Field0, NTI2231369737);
    result_2231370099 = nimCopy(result_2231370099, {Field0: nimCopy(null, colontmp__2650814072, NTI2231369737), Field1: nimCopy(null, colontmp__2650814073, NTI2231369737)}, NTI2231369739);

  return result_2231370099;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2650813860(self_2650813861, cursor_2650813862, move_2650813863, count_2650813864) {
  var result_2650813865 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2650813863)) {
    case "word":
      result_2650813865 = nimCopy(result_2650813865, findWordBoundary_2650813766(self_2650813861, cursor_2650813862), NTI2231369739);
      Label1: {
        var __2650813870 = 0;
        var i_2650814028 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2650814028 < count_2650813864)) break Label3;
              __2650813870 = i_2650814028;
              result_2650813865 = nimCopy(result_2650813865, or_2231370215(or_2231370215(result_2650813865, findWordBoundary_2650813766(self_2650813861, result_2650813865.Field1)), findWordBoundary_2650813766(self_2650813861, result_2650813865.Field0)), NTI2231369739);
              i_2650814028 = addInt(i_2650814028, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2650813871 = getLine_2650800485(self_2650813861.document, cursor_2650813862.Field0);
      result_2650813865 = nimCopy(result_2650813865, findWordBoundary_2650813766(self_2650813861, cursor_2650813862), NTI2231369739);
      if (((cursor_2650813862.Field1 == 0) && (0 < cursor_2650813862.Field0))) {
      var colontmp__2650814030 = subInt(cursor_2650813862.Field0, 1);
      var colontmp__2650814031 = (getLine_2650800485(self_2650813861.document, subInt(cursor_2650813862.Field0, 1))).length;
      result_2650813865.Field0 = nimCopy(result_2650813865.Field0, {Field0: colontmp__2650814030, Field1: colontmp__2650814031}, NTI2231369737);
      }
      
      if (((cursor_2650813862.Field1 == (line_2650813871).length) && (cursor_2650813862.Field0 < subInt((self_2650813861.document.lines).length, 1)))) {
      var colontmp__2650814032 = addInt(cursor_2650813862.Field0, 1);
      var colontmp__2650814033 = 0;
      result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814032, Field1: colontmp__2650814033}, NTI2231369737);
      }
      
      Label4: {
        var __2650813879 = 0;
        var i_2650814039 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2650814039 < count_2650813864)) break Label6;
              __2650813879 = i_2650814039;
              result_2650813865 = nimCopy(result_2650813865, or_2231370215(or_2231370215(result_2650813865, findWordBoundary_2650813766(self_2650813861, result_2650813865.Field1)), findWordBoundary_2650813766(self_2650813861, result_2650813865.Field0)), NTI2231369739);
              var line_2650813880 = getLine_2650800485(self_2650813861.document, result_2650813865.Field1.Field0);
              if (((result_2650813865.Field0.Field1 == 0) && (0 < result_2650813865.Field0.Field0))) {
              var colontmp__2650814035 = subInt(result_2650813865.Field0.Field0, 1);
              var colontmp__2650814036 = (getLine_2650800485(self_2650813861.document, subInt(result_2650813865.Field0.Field0, 1))).length;
              result_2650813865.Field0 = nimCopy(result_2650813865.Field0, {Field0: colontmp__2650814035, Field1: colontmp__2650814036}, NTI2231369737);
              }
              
              if (((result_2650813865.Field1.Field1 == (line_2650813880).length) && (result_2650813865.Field1.Field0 < subInt((self_2650813861.document.lines).length, 1)))) {
              var colontmp__2650814037 = addInt(result_2650813865.Field1.Field0, 1);
              var colontmp__2650814038 = 0;
              result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814037, Field1: colontmp__2650814038}, NTI2231369737);
              }
              
              i_2650814039 = addInt(i_2650814039, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2650813865 = nimCopy(result_2650813865, reverse_2231370097(getSelectionForMove_2650813860(self_2650813861, {Field0: cursor_2650813862.Field0, Field1: nimMax(0, subInt(cursor_2650813862.Field1, 1))}, [119,111,114,100], count_2650813864)), NTI2231369739);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2650813865 = nimCopy(result_2650813865, reverse_2231370097(getSelectionForMove_2650813860(self_2650813861, {Field0: cursor_2650813862.Field0, Field1: nimMax(0, subInt(cursor_2650813862.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2650813864)), NTI2231369739);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2650814041 = {Field0: cursor_2650813862.Field0, Field1: 0};
      var colontmp__2650814042 = {Field0: cursor_2650813862.Field0, Field1: (getLine_2650800485(self_2650813861.document, cursor_2650813862.Field0)).length};
      result_2650813865 = nimCopy(result_2650813865, {Field0: nimCopy(null, colontmp__2650814041, NTI2231369737), Field1: nimCopy(null, colontmp__2650814042, NTI2231369737)}, NTI2231369739);
      break;
    case "line-next":
      var colontmp__2650814043 = {Field0: cursor_2650813862.Field0, Field1: 0};
      var colontmp__2650814044 = {Field0: cursor_2650813862.Field0, Field1: (getLine_2650800485(self_2650813861.document, cursor_2650813862.Field0)).length};
      result_2650813865 = nimCopy(result_2650813865, {Field0: nimCopy(null, colontmp__2650814043, NTI2231369737), Field1: nimCopy(null, colontmp__2650814044, NTI2231369737)}, NTI2231369739);
      if ((addInt(result_2650813865.Field1.Field0, 1) < (self_2650813861.document.lines).length)) {
      var colontmp__2650814045 = addInt(result_2650813865.Field1.Field0, 1);
      var colontmp__2650814046 = 0;
      result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814045, Field1: colontmp__2650814046}, NTI2231369737);
      }
      
      Label7: {
        var __2650813891 = 0;
        var i_2650814050 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2650814050 < count_2650813864)) break Label9;
              __2650813891 = i_2650814050;
              result_2650813865 = nimCopy(result_2650813865, or_2231370215(result_2650813865, {Field0: {Field0: result_2650813865.Field1.Field0, Field1: 0}, Field1: {Field0: result_2650813865.Field1.Field0, Field1: (getLine_2650800485(self_2650813861.document, result_2650813865.Field1.Field0)).length}}), NTI2231369739);
              if ((addInt(result_2650813865.Field1.Field0, 1) < (self_2650813861.document.lines).length)) {
              var colontmp__2650814048 = addInt(result_2650813865.Field1.Field0, 1);
              var colontmp__2650814049 = 0;
              result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814048, Field1: colontmp__2650814049}, NTI2231369737);
              }
              
              i_2650814050 = addInt(i_2650814050, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2650814052 = 0;
      var colontmp__2650814053 = 0;
      result_2650813865.Field0 = nimCopy(result_2650813865.Field0, {Field0: colontmp__2650814052, Field1: colontmp__2650814053}, NTI2231369737);
      var line_2650813898 = subInt((self_2650813861.document.lines).length, 1);
      var colontmp__2650814054 = line_2650813898;
      var colontmp__2650814055 = (getLine_2650800485(self_2650813861.document, line_2650813898)).length;
      result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814054, Field1: colontmp__2650814055}, NTI2231369737);
      break;
    case "prev-find-result":
      result_2650813865 = nimCopy(result_2650813865, getPrevFindResult_2650808209(self_2650813861, cursor_2650813862, count_2650813864), NTI2231369739);
      break;
    case "next-find-result":
      result_2650813865 = nimCopy(result_2650813865, getNextFindResult_2650808213(self_2650813861, cursor_2650813862, count_2650813864), NTI2231369739);
      break;
    default: 
      if (nsuStartsWith(move_2650813863, [109,111,118,101,45,116,111,32])) {
      var str_2650813917 = HEX5BHEX5D_855639319(move_2650813863, HEX2EHEX2E_1040187488(8, 1));
      var line_2650813918 = getLine_2650800485(self_2650813861.document, cursor_2650813862.Field0);
      result_2650813865 = nimCopy(result_2650813865, toSelection_2231370221(cursor_2650813862), NTI2231369739);
      var index_2650813919 = nsuFindStr(line_2650813918, str_2650813917, chckRange(cursor_2650813862.Field1, 0, 2147483647), -1);
      if ((0 <= index_2650813919)) {
      var colontmp__2650814056 = cursor_2650813862.Field0;
      var colontmp__2650814057 = addInt(index_2650813919, 1);
      result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814056, Field1: colontmp__2650814057}, NTI2231369737);
      }
      
      Label10: {
        var __2650813924 = 0;
        var i_2650814061 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2650814061 < count_2650813864)) break Label12;
              __2650813924 = i_2650814061;
              var index_2650813925 = nsuFindStr(line_2650813918, str_2650813917, chckRange(result_2650813865.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2650813925)) {
              var colontmp__2650814059 = result_2650813865.Field1.Field0;
              var colontmp__2650814060 = addInt(index_2650813925, 1);
              result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814059, Field1: colontmp__2650814060}, NTI2231369737);
              }
              
              i_2650814061 = addInt(i_2650814061, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2650813863, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2650813944 = HEX5BHEX5D_855639319(move_2650813863, HEX2EHEX2E_1040187488(12, 1));
      var line_2650813945 = getLine_2650800485(self_2650813861.document, cursor_2650813862.Field0);
      result_2650813865 = nimCopy(result_2650813865, toSelection_2231370221(cursor_2650813862), NTI2231369739);
      var index_2650813946 = nsuFindStr(line_2650813945, str_2650813944, chckRange(addInt(cursor_2650813862.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2650813946)) {
      var colontmp__2650814063 = cursor_2650813862.Field0;
      var colontmp__2650814064 = index_2650813946;
      result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814063, Field1: colontmp__2650814064}, NTI2231369737);
      }
      
      Label13: {
        var __2650813951 = 0;
        var i_2650814068 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2650814068 < count_2650813864)) break Label15;
              __2650813951 = i_2650814068;
              var index_2650813952 = nsuFindStr(line_2650813945, str_2650813944, chckRange(addInt(result_2650813865.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2650813952)) {
              var colontmp__2650814066 = result_2650813865.Field1.Field0;
              var colontmp__2650814067 = index_2650813952;
              result_2650813865.Field1 = nimCopy(result_2650813865.Field1, {Field0: colontmp__2650814066, Field1: colontmp__2650814067}, NTI2231369737);
              }
              
              i_2650814068 = addInt(i_2650814068, 1);
            }
        };
      };
      }
      else {
        result_2650813865 = nimCopy(result_2650813865, toSelection_2231370221(cursor_2650813862), NTI2231369739);
        var fmtRes_2650813957 = [mnewString(0)];
        fmtRes_2650813957[0].push.apply(fmtRes_2650813957[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2650813957, 0, move_2650813863, []);
        fmtRes_2650813957[0].push.apply(fmtRes_2650813957[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2650813957[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2650813865;

}

function getSelectionForMoveJsWrapper_2650813856(self_2650813989, cursor_2650813990, move_2650813991, count_2650813992) {
  var result_2650813993 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2650813993 = nimCopy(result_2650813993, getSelectionForMove_2650813860(self_2650813989, cursor_2650813990, move_2650813991, count_2650813992), NTI2231369739);

  return result_2650813993;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2650813856(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2650814138(s_2650814142, x_2650814143) {
  var result_2650814144 = [];

    var a_2650814146 = x_2650814143.a;
    var L_2650814151 = addInt(subInt(subInt((s_2650814142).length, x_2650814143.b), a_2650814146), 1);
    result_2650814144 = new Array(chckRange(L_2650814151, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2650814151, 0, 2147483647) ; ++i) { result_2650814144[i] = []; }    Label1: {
      var i_2650814160 = 0;
      var i_2650814378 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650814378 < L_2650814151)) break Label3;
            i_2650814160 = i_2650814378;
            result_2650814144[chckIndx(i_2650814160, 0, (result_2650814144).length - 1)] = nimCopy(null, s_2650814142[chckIndx(addInt(i_2650814160, a_2650814146), 0, (s_2650814142).length - 1)], NTI33554449);
            i_2650814378 = addInt(i_2650814378, 1);
          }
      };
    };

  return result_2650814144;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2566914816(s_2566914818, i_2566914819) {
  var result_2566914820 = [];

    result_2566914820 = nimCopy(null, s_2566914818[chckIndx(subInt((s_2566914818).length, i_2566914819), 0, (s_2566914818).length - 1)], NTI33554449);

  return result_2566914820;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2650814108(editor_2650814110, path_2650814111, value_2650814112) {
  BeforeRet: {
    Label1: {
      if ((editor_2650814110 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym704_2650814127 = nsuSplitString(path_2650814111, [46], -1);
      var nodeHEX60gensym704_2650814128 = editor_2650814110.options;
      Label2: {
        var keyHEX60gensym704_2650814164 = [];
        var colontmp__2650814373 = [];
        colontmp__2650814373 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym704_2650814127, HEX2EHEX2E_1040187488(0, 2));
        var i_2650814374 = 0;
        var L_2650814375 = (colontmp__2650814373).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2650814374 < L_2650814375)) break Label4;
              keyHEX60gensym704_2650814164 = colontmp__2650814373[chckIndx(i_2650814374, 0, (colontmp__2650814373).length - 1)];
              if (!((nodeHEX60gensym704_2650814128.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym704_2650814128, keyHEX60gensym704_2650814164))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym704_2650814128, keyHEX60gensym704_2650814164, newJObject_1627390051());
              }
              
              nodeHEX60gensym704_2650814128 = HEX5BHEX5D_1627393037(nodeHEX60gensym704_2650814128, keyHEX60gensym704_2650814164);
              i_2650814374 = addInt(i_2650814374, 1);
              if (!(((colontmp__2650814373).length == L_2650814375))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym704_2650814128 == null) || !((nodeHEX60gensym704_2650814128.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym704_2650814128, HEX5BHEX5D_2566914816(pathItemsHEX60gensym704_2650814127, 1), newJInt_1627390040(value_2650814112));
    };
  };

  
}

function getOption_2650814180(editor_2650814182, path_2650814183, default_2650814184) {
  var result_2650814189 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2650814182 == null)) {
      result_2650814189 = nimCopy(null, default_2650814184, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym709_2650814202 = HEX7BHEX7D_1627393316(editor_2650814182.options, nsuSplitString(path_2650814183, [46], -1));
      if ((nodeHEX60gensym709_2650814202 == null)) {
      result_2650814189 = nimCopy(null, default_2650814184, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2650814189 = nimCopy(null, getStr_1627390106(nodeHEX60gensym709_2650814202, default_2650814184), NTI33554449);
    break BeforeRet;
  };

  return result_2650814189;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2650814206(editor_2650814208, path_2650814209, default_2650814210) {
  var result_2650814215 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2650814208 == null)) {
      result_2650814215 = default_2650814210;
      break BeforeRet;
      }
      
      var nodeHEX60gensym710_2650814227 = HEX7BHEX7D_1627393316(editor_2650814208.options, nsuSplitString(path_2650814209, [46], -1));
      if ((nodeHEX60gensym710_2650814227 == null)) {
      result_2650814215 = default_2650814210;
      break BeforeRet;
      }
      
    };
    result_2650814215 = getInt_1627390118(nodeHEX60gensym710_2650814227, default_2650814210);
    break BeforeRet;
  };

  return result_2650814215;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2650814240(editor_2650814242, path_2650814243, value_2650814244) {
  BeforeRet: {
    Label1: {
      if ((editor_2650814242 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym711_2650814260 = nsuSplitString(path_2650814243, [46], -1);
      var nodeHEX60gensym711_2650814261 = editor_2650814242.options;
      Label2: {
        var keyHEX60gensym711_2650814280 = [];
        var colontmp__2650814387 = [];
        colontmp__2650814387 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym711_2650814260, HEX2EHEX2E_1040187488(0, 2));
        var i_2650814388 = 0;
        var L_2650814389 = (colontmp__2650814387).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2650814388 < L_2650814389)) break Label4;
              keyHEX60gensym711_2650814280 = colontmp__2650814387[chckIndx(i_2650814388, 0, (colontmp__2650814387).length - 1)];
              if (!((nodeHEX60gensym711_2650814261.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym711_2650814261, keyHEX60gensym711_2650814280))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym711_2650814261, keyHEX60gensym711_2650814280, newJObject_1627390051());
              }
              
              nodeHEX60gensym711_2650814261 = HEX5BHEX5D_1627393037(nodeHEX60gensym711_2650814261, keyHEX60gensym711_2650814280);
              i_2650814388 = addInt(i_2650814388, 1);
              if (!(((colontmp__2650814387).length == L_2650814389))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym711_2650814261 == null) || !((nodeHEX60gensym711_2650814261.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym711_2650814261, HEX5BHEX5D_2566914816(pathItemsHEX60gensym711_2650814260, 1), newJString_1627389994(value_2650814244));
    };
  };

  
}

function setMove_2650814105(self_2650814106, args_2650814107) {
    setOption_2650814108(self_2650814106.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2650813323(self_2650814106));
    setMode_2650808915(self_2650814106, getOption_2650814180(self_2650814106.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2650813380(self_2650814106, getOption_2650814206(self_2650814106.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2650813690(self_2650814106, getOption_2650814180(self_2650814106.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2650814107);
    setOption_2650814240(self_2650814106.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2650814101(self_2650814324, args_2650814325) {
    setMove_2650814105(self_2650814324, args_2650814325);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2650814101(this, args_));};

function deleteMove_2650814397(self_2650814398, move_2650814399, which_2650814400, all_2650814401) {
    move_2650814399 = nimCopy(null, move_2650814399, NTI33554449);
    
function HEX3Aanonymous_2650814413(s_2650814420) {
        var Temporary1;

      var result_2650814423 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2650814412) {
        Temporary1 = getSelectionForMove_2650813860(self_2650814398, s_2650814420.Field1, move_2650814399, count_2650814411);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2650814420.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2650813860(self_2650814398, s_2650814420.Field1, move_2650814399, count_2650814411).Field1, NTI2231369737)};
        }
        
        result_2650814423 = nimCopy(result_2650814423, Temporary1, NTI2231369739);

      return result_2650814423;

    }

    var count_2650814411 = getOption_2650814206(self_2650814398.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2650814412 = getFlag_2650813620(self_2650814398, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2650814430 = map_2650800554(selections_2650800621(self_2650814398), HEX3Aanonymous_2650814413);
    selectionsHEX3D_2650800880(self_2650814398, delete_2650804228(self_2650814398.document, selections_2650814430, selections_2650800621(self_2650814398), true, true));
    scrollToCursor_2650808730(self_2650814398, 3);
    updateTargetColumn_2650809293(self_2650814398, 3);

  
}

function deleteMoveJsWrapper_2650814393(self_2650814462, move_2650814463, which_2650814464, all_2650814465) {
    deleteMove_2650814397(self_2650814462, move_2650814463, which_2650814464, all_2650814465);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2650814393(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2650814524(self_2650814526, all_2650814527, p_2650814529) {
    
function HEX3Aanonymous_2650814531(s_2650814538) {
      var result_2650814541 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2650814541 = nimCopy(result_2650814541, p_2650814529(s_2650814538), NTI2231369739);

      return result_2650814541;

    }

  var result_2650814530 = [];

    if (all_2650814527) {
    result_2650814530 = nimCopy(null, map_2650800554(self_2650814526, HEX3Aanonymous_2650814531), NTI2650800435);
    }
    else {
      result_2650814530 = nimCopy(null, self_2650814526, NTI2650809642);
      if ((0 < (result_2650814530).length)) {
      result_2650814530[chckIndx((result_2650814530).length - 1, 0, (result_2650814530).length - 1)] = nimCopy(result_2650814530[chckIndx((result_2650814530).length - 1, 0, (result_2650814530).length - 1)], p_2650814529(result_2650814530[chckIndx((result_2650814530).length - 1, 0, (result_2650814530).length - 1)]), NTI2231369739);
      }
      
    }
    

  return result_2650814530;

}

function selectMove_2650814501(self_2650814502, move_2650814503, which_2650814504, all_2650814505) {
    move_2650814503 = nimCopy(null, move_2650814503, NTI33554449);
    
function HEX3Aanonymous_2650814516(s_2650814519) {
      var result_2650814522 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2650814522 = nimCopy(result_2650814522, getSelectionForMove_2650813860(self_2650814502, s_2650814519.Field1, move_2650814503, count_2650814515), NTI2231369739);

      return result_2650814522;

    }

    var count_2650814515 = getOption_2650814206(self_2650814502.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2650800880(self_2650814502, mapAllOrLast_2650814524(selections_2650800621(self_2650814502), all_2650814505, HEX3Aanonymous_2650814516));
    scrollToCursor_2650808730(self_2650814502, 3);
    updateTargetColumn_2650809293(self_2650814502, 3);

  
}

function selectMoveJsWrapper_2650814497(self_2650814591, move_2650814592, which_2650814593, all_2650814594) {
    selectMove_2650814501(self_2650814591, move_2650814592, which_2650814593, all_2650814594);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2650814497(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2650814630(self_2650814631, move_2650814632, which_2650814633, all_2650814634) {
    move_2650814632 = nimCopy(null, move_2650814632, NTI33554449);
    
function HEX3Aanonymous_2650814646(s_2650814653) {
        var Temporary1;

      var result_2650814656 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2650814645) {
        Temporary1 = getSelectionForMove_2650813860(self_2650814631, s_2650814653.Field1, move_2650814632, count_2650814644);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2650814653.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2650813860(self_2650814631, s_2650814653.Field1, move_2650814632, count_2650814644).Field1, NTI2231369737)};
        }
        
        result_2650814656 = nimCopy(result_2650814656, Temporary1, NTI2231369739);

      return result_2650814656;

    }

    var count_2650814644 = getOption_2650814206(self_2650814631.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2650814645 = getFlag_2650813620(self_2650814631, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2650814663 = map_2650800554(selections_2650800621(self_2650814631), HEX3Aanonymous_2650814646);
    selectionsHEX3D_2650800880(self_2650814631, delete_2650804228(self_2650814631.document, selections_2650814663, selections_2650800621(self_2650814631), true, true));
    scrollToCursor_2650808730(self_2650814631, 3);
    updateTargetColumn_2650809293(self_2650814631, 3);

  
}

function changeMoveJsWrapper_2650814626(self_2650814695, move_2650814696, which_2650814697, all_2650814698) {
    changeMove_2650814630(self_2650814695, move_2650814696, which_2650814697, all_2650814698);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2650814626(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2231370224(cursor_2231370225, default_2231370226, which_2231370227) {
  var result_2231370228 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2231370227) {
    case 0:
      result_2231370228 = nimCopy(result_2231370228, default_2231370226, NTI2231369739);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2650814847 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2650814848 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2650814847, NTI2231369737), Field1: nimCopy(null, colontmp__2650814848, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2650814849 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2650814850 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2650814849, NTI2231369737), Field1: nimCopy(null, colontmp__2650814850, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2650814851 = nimCopy(null, default_2231370226.Field0, NTI2231369737);
      var colontmp__2650814852 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2650814851, NTI2231369737), Field1: nimCopy(null, colontmp__2650814852, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2650814853 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      var colontmp__2650814854 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2650814853, NTI2231369737), Field1: nimCopy(null, colontmp__2650814854, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    }
  };

  return result_2231370228;

}

function cursor_2650814085(self_2650814086, selection_2650814087, which_2650814088) {
  var result_2650814089 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2650814088) {
    case 0:
      result_2650814089 = nimCopy(result_2650814089, cursor_2650814085(self_2650814086, selection_2650814087, getOption_2650808314(self_2650814086.editor, getContextWithMode_2650808280(self_2650814086, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
      result_2650814089 = nimCopy(result_2650814089, selection_2650814087.Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2650814089 = nimCopy(result_2650814089, selection_2650814087.Field0, NTI2231369737);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2650814089 = nimCopy(result_2650814089, selection_2650814087.Field1, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2650814089;

}

function moveLast_2650814734(self_2650814735, move_2650814736, which_2650814737, all_2650814738, count_2650814739) {
      move_2650814736 = nimCopy(null, move_2650814736, NTI33554449);
      
function HEX3Aanonymous_2650814740(s_2650814743) {
        var result_2650814746 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2650814746 = nimCopy(result_2650814746, toSelection_2231370224(getSelectionForMove_2650813860(self_2650814735, cursor_2650814085(self_2650814735, s_2650814743, which_2650814737), move_2650814736, count_2650814739).Field1, s_2650814743, getOption_2650808314(self_2650814735.editor, getContextWithMode_2650808280(self_2650814735, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2650814746;

      }
      
function HEX3Aanonymous_2650814763(s_2650814766) {
        var result_2650814769 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2650814769 = nimCopy(result_2650814769, toSelection_2231370224(getSelectionForMove_2650813860(self_2650814735, cursor_2650814085(self_2650814735, s_2650814766, which_2650814737), move_2650814736, count_2650814739).Field1, s_2650814766, which_2650814737), NTI2231369739);

        return result_2650814769;

      }

    switch (which_2650814737) {
    case 0:
      selectionsHEX3D_2650800880(self_2650814735, mapAllOrLast_2650814524(selections_2650800621(self_2650814735), all_2650814738, HEX3Aanonymous_2650814740));
      break;
    default: 
      selectionsHEX3D_2650800880(self_2650814735, mapAllOrLast_2650814524(selections_2650800621(self_2650814735), all_2650814738, HEX3Aanonymous_2650814763));
      break;
    }
    scrollToCursor_2650808730(self_2650814735, which_2650814737);
    updateTargetColumn_2650809293(self_2650814735, which_2650814737);

  
}

function moveLastJsWrapper_2650814730(self_2650814808, move_2650814809, which_2650814810, all_2650814811, count_2650814812) {
    moveLast_2650814734(self_2650814808, move_2650814809, which_2650814810, all_2650814811, count_2650814812);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2650814730(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2650814861(self_2650814862, move_2650814863, which_2650814864, all_2650814865, count_2650814866) {
      move_2650814863 = nimCopy(null, move_2650814863, NTI33554449);
      
function HEX3Aanonymous_2650814867(s_2650814870) {
        var result_2650814873 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2650814873 = nimCopy(result_2650814873, toSelection_2231370224(getSelectionForMove_2650813860(self_2650814862, cursor_2650814085(self_2650814862, s_2650814870, which_2650814864), move_2650814863, count_2650814866).Field0, s_2650814870, getOption_2650808314(self_2650814862.editor, getContextWithMode_2650808280(self_2650814862, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2650814873;

      }
      
function HEX3Aanonymous_2650814890(s_2650814893) {
        var result_2650814896 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2650814896 = nimCopy(result_2650814896, toSelection_2231370224(getSelectionForMove_2650813860(self_2650814862, cursor_2650814085(self_2650814862, s_2650814893, which_2650814864), move_2650814863, count_2650814866).Field0, s_2650814893, which_2650814864), NTI2231369739);

        return result_2650814896;

      }

    switch (which_2650814864) {
    case 0:
      selectionsHEX3D_2650800880(self_2650814862, mapAllOrLast_2650814524(selections_2650800621(self_2650814862), all_2650814865, HEX3Aanonymous_2650814867));
      break;
    default: 
      selectionsHEX3D_2650800880(self_2650814862, mapAllOrLast_2650814524(selections_2650800621(self_2650814862), all_2650814865, HEX3Aanonymous_2650814890));
      break;
    }
    scrollToCursor_2650808730(self_2650814862, which_2650814864);
    updateTargetColumn_2650809293(self_2650814862, which_2650814864);

  
}

function moveFirstJsWrapper_2650814857(self_2650814935, move_2650814936, which_2650814937, all_2650814938, count_2650814939) {
    moveFirst_2650814861(self_2650814935, move_2650814936, which_2650814937, all_2650814938, count_2650814939);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2650814857(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2650814983(val_2650814985) {
  var result_2650814986 = ({val: ({impl: null}), has: false});

    result_2650814986.has = true;
    result_2650814986.val = nimCopy(result_2650814986.val, val_2650814985, NTI2684354563);

  return result_2650814986;

}

function isNone_2650805181(self_2650805183) {
  var result_2650805184 = false;

    result_2650805184 = !(self_2650805183.has);

  return result_2650805184;

}

function clear_2650805231(t_2650805234) {
    Label1: {
      var i_2650805292 = 0;
      var colontmp__2650815053 = 0;
      colontmp__2650815053 = (t_2650805234.data).length;
      var i_2650815054 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2650815054 < colontmp__2650815053)) break Label3;
            i_2650805292 = i_2650815054;
            t_2650805234.data[chckIndx(i_2650805292, 0, (t_2650805234.data).length - 1)].Field0 = 0;
            t_2650805234.data[chckIndx(i_2650805292, 0, (t_2650805234.data).length - 1)].Field1 = 0;
            t_2650805234.data[chckIndx(i_2650805292, 0, (t_2650805234.data).length - 1)].Field2 = nimCopy(null, [], NTI2650800360);
            i_2650815054 = addInt(i_2650815054, 1);
          }
      };
    };
    t_2650805234.counter = 0;

  
}

function findBounds_2684354567(text_2684354568, regex_2684354569, start_2684354570) {
  var result_2684354573 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2684354569.impl.lastIndex = 0;
    var bounds_2684354592 = ((regex_2684354569.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2684354568, HEX2EHEX2E_1040187488(start_2684354570, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2650815056 = bounds_2684354592[chckIndx(0, 0, (bounds_2684354592).length - 1)];
    var colontmp__2650815057 = subInt(bounds_2684354592[chckIndx(1, 0, (bounds_2684354592).length - 1)], 1);
    result_2684354573 = nimCopy(result_2684354573, {Field0: colontmp__2650815056, Field1: colontmp__2650815057}, NTI2684354567);
    break BeforeRet;
  };

  return result_2684354573;

}

function get_2650805792(self_2650805794) {
  var result_2650805795 = null;

  BeforeRet: {
    if (isNone_2650805181(self_2650805794)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650805795 = self_2650805794.val;
    break BeforeRet;
  };

  return result_2650805795;

}

function mustRehash_2650806368(t_2650806370) {
  var result_2650806371 = false;

    if (!((t_2650806370.counter < (t_2650806370.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2650806371 = ((mulInt((t_2650806370.data).length, 2) < mulInt(t_2650806370.counter, 3)) || (subInt((t_2650806370.data).length, t_2650806370.counter) < 4));

  return result_2650806371;

}

function rawInsert_2650806917(t_2650806921, data_2650806922, data_2650806922_Idx, key_2650806923, val_2650806924, hc_2650806925, h_2650806926) {
    data_2650806922[data_2650806922_Idx][chckIndx(h_2650806926, 0, (data_2650806922[data_2650806922_Idx]).length - 1)].Field1 = key_2650806923;
    data_2650806922[data_2650806922_Idx][chckIndx(h_2650806926, 0, (data_2650806922[data_2650806922_Idx]).length - 1)].Field2 = nimCopy(null, val_2650806924, NTI2650800360);
    data_2650806922[data_2650806922_Idx][chckIndx(h_2650806926, 0, (data_2650806922[data_2650806922_Idx]).length - 1)].Field0 = hc_2650806925;

  
}

function enlarge_2650806538(t_2650806541) {
    var n_2650806544 = [];
    n_2650806544 = new Array(chckRange(mulInt((t_2650806541.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2650806541.data).length, 2), 0, 2147483647) ; ++i) { n_2650806544[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2650806541.data; t_2650806541.data = n_2650806544; n_2650806544 = Temporary1;    Label2: {
      var i_2650806613 = 0;
      var colontmp__2650815060 = 0;
      colontmp__2650815060 = (n_2650806544).length - 1;
      var res_2650815061 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650815061 <= colontmp__2650815060)) break Label4;
            i_2650806613 = res_2650815061;
            var eh_2650806687 = n_2650806544[chckIndx(i_2650806613, 0, (n_2650806544).length - 1)].Field0;
            if (isFilled_1308622880(eh_2650806687)) {
            var j_2650806691 = (eh_2650806687 & (t_2650806541.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2650806541.data[chckIndx(j_2650806691, 0, (t_2650806541.data).length - 1)].Field0)) break Label6;
                  j_2650806691 = nextTry_1308622883(j_2650806691, (t_2650806541.data).length - 1);
                }
            };
            rawInsert_2650806917(t_2650806541, t_2650806541, "data", n_2650806544[chckIndx(i_2650806613, 0, (n_2650806544).length - 1)].Field1, n_2650806544[chckIndx(i_2650806613, 0, (n_2650806544).length - 1)].Field2, eh_2650806687, j_2650806691);
            }
            
            res_2650815061 = addInt(res_2650815061, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2650807146(t_2650807149, key_2650807150, hc_2650807151) {
  var result_2650807152 = 0;

  BeforeRet: {
    if (((t_2650807149.data).length == 0)) {
    result_2650807152 = -1;
    break BeforeRet;
    }
    
    var h_2650807208 = (hc_2650807151 & (t_2650807149.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2650807149.data[chckIndx(h_2650807208, 0, (t_2650807149.data).length - 1)].Field0)) break Label2;
          if (((t_2650807149.data[chckIndx(h_2650807208, 0, (t_2650807149.data).length - 1)].Field0 == hc_2650807151) && (t_2650807149.data[chckIndx(h_2650807208, 0, (t_2650807149.data).length - 1)].Field1 == key_2650807150))) {
          result_2650807152 = h_2650807208;
          break BeforeRet;
          }
          
          h_2650807208 = nextTry_1308622883(h_2650807208, (t_2650807149.data).length - 1);
        }
    };
    result_2650807152 = subInt(-1, h_2650807208);
  };

  return result_2650807152;

}

function HEX5BHEX5DHEX3D_2650805865(t_2650805868, key_2650805869, val_2650805870) {
    if (((t_2650805868.data).length == 0)) {
    var correctSizeHEX60gensym123_2650805924 = slotsNeeded_1308622891(32);
    t_2650805868.counter = 0;
    t_2650805868.data = new Array(chckRange(correctSizeHEX60gensym123_2650805924, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym123_2650805924, 0, 2147483647) ; ++i) { t_2650805868.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2650805929 = [0];
    var index_2650806236 = rawGet_2650805930(t_2650805868, key_2650805869, hc_2650805929, 0);
    if ((0 <= index_2650806236)) {
    t_2650805868.data[chckIndx(index_2650806236, 0, (t_2650805868.data).length - 1)].Field2 = nimCopy(null, val_2650805870, NTI2650800360);
    }
    else {
      if (((t_2650805868.data).length == 0)) {
      var correctSizeHEX60gensym128_2650806363 = slotsNeeded_1308622891(32);
      t_2650805868.counter = 0;
      t_2650805868.data = new Array(chckRange(correctSizeHEX60gensym128_2650806363, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym128_2650806363, 0, 2147483647) ; ++i) { t_2650805868.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2650806368(t_2650805868)) {
      enlarge_2650806538(t_2650805868);
      index_2650806236 = rawGetKnownHC_2650807146(t_2650805868, key_2650805869, hc_2650805929[0]);
      }
      
      index_2650806236 = subInt(-1, index_2650806236);
      rawInsert_2650806917(t_2650805868, t_2650805868, "data", key_2650805869, val_2650805870, hc_2650805929[0], index_2650806236);
      t_2650805868.counter = addInt(t_2650805868.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2650807489(t_2650807492, key_2650807493) {
    var hc_2650807494 = [0];
    var i_2650807501 = rawGet_2650805930(t_2650807492, key_2650807493, hc_2650807494, 0);
    var mskHEX60gensym36_2650807505 = (t_2650807492.data).length - 1;
    if ((0 <= i_2650807501)) {
    t_2650807492.counter = subInt(t_2650807492.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2650807512 = i_2650807501;
            var rHEX60gensym36_2650807513 = jHEX60gensym36_2650807512;
            t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)].Field0 = 0;
            t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)].Field1 = 0;
            t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)].Field2 = nimCopy(null, [], NTI2650800360);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2650807501 = (addInt(i_2650807501, 1) & mskHEX60gensym36_2650807505);
                  if (isEmpty_1308622877(t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2650807513 = (t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)].Field0 & mskHEX60gensym36_2650807505);
                  if (!(((((rHEX60gensym36_2650807513 <= i_2650807501) && (jHEX60gensym36_2650807512 < rHEX60gensym36_2650807513)) || ((jHEX60gensym36_2650807512 < rHEX60gensym36_2650807513) && (i_2650807501 < jHEX60gensym36_2650807512))) || ((i_2650807501 < jHEX60gensym36_2650807512) && (rHEX60gensym36_2650807513 <= i_2650807501))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2650807492.data[chckIndx(jHEX60gensym36_2650807512, 0, (t_2650807492.data).length - 1)] = nimCopy(t_2650807492.data[chckIndx(jHEX60gensym36_2650807512, 0, (t_2650807492.data).length - 1)], t_2650807492.data[chckIndx(i_2650807501, 0, (t_2650807492.data).length - 1)], NTI2650800372);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2650805175(self_2650805176) {
  BeforeRet: {
    if (isNone_2650805181(self_2650805176.searchRegex)) {
    clear_2650805231(self_2650805176.searchResults);
    markDirty_2147483686(self_2650805176);
    break BeforeRet;
    }
    
    Label1: {
      var i_2650805772 = 0;
      var line_2650805773 = [];
      var i_2650815049 = 0;
      var L_2650815050 = (self_2650805176.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650815049 < L_2650815050)) break Label3;
            i_2650805772 = i_2650815049;
            line_2650805773 = self_2650805176.document.lines[chckIndx(i_2650815049, 0, (self_2650805176.document.lines).length - 1)];
            var selections_2650805778 = [];
            var start_2650805779 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2650805779 < (line_2650805773).length)) break Label5;
                  var bounds_2650805804 = findBounds_2684354567(line_2650805773, get_2650805792(self_2650805176.searchRegex), start_2650805779);
                  if ((bounds_2650805804.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2650805778.push({Field0: {Field0: i_2650805772, Field1: bounds_2650805804.Field0}, Field1: {Field0: i_2650805772, Field1: addInt(bounds_2650805804.Field1, 1)}});;
                  start_2650805779 = nimMax(addInt(bounds_2650805804.Field1, 1), addInt(start_2650805779, 1));
                }
            };
            if ((0 < (selections_2650805778).length)) {
            HEX5BHEX5DHEX3D_2650805865(self_2650805176.searchResults, i_2650805772, selections_2650805778);
            }
            else {
            del_2650807489(self_2650805176.searchResults, i_2650805772);
            }
            
            i_2650815049 = addInt(i_2650815049, 1);
            if (!(((self_2650805176.document.lines).length == L_2650815050))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2147483686(self_2650805176);
  };

  
}

function setSearchQuery_2650814980(self_2650814981, query_2650814982) {
    self_2650814981.searchQuery = nimCopy(null, query_2650814982, NTI33554449);
    self_2650814981.searchRegex = nimCopy(self_2650814981.searchRegex, some_2650814983(re_2684354619(query_2650814982)), NTI2650800349);
    updateSearchResults_2650805175(self_2650814981);

  
}

function setSearchQueryJsWrapper_2650814976(self_2650815025, query_2650815026) {
    setSearchQuery_2650814980(self_2650815025, query_2650815026);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2650814976(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2650815072(self_2650815073, move_2650815074, count_2650815075) {
    var selection_2650815076 = getSelectionForMove_2650813860(self_2650815073, selection_2650800624(self_2650815073).Field1, move_2650815074, count_2650815075);
    selectionHEX3D_2650800630(self_2650815073, selection_2650815076);
    setSearchQuery_2650814980(self_2650815073, contentString_2650801281(self_2650815073.document, selection_2650815076));

  
}

function setSearchQueryFromMoveJsWrapper_2650815068(self_2650815106, move_2650815107, count_2650815108) {
    setSearchQueryFromMove_2650815072(self_2650815106, move_2650815107, count_2650815108);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2650815068(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2801795096() {
  var result_2801795102 = ({val: null});

  return result_2801795102;

}

function isSome_2650804105(self_2650804107) {
  var result_2650804108 = false;

    result_2650804108 = !((self_2650804107.val == null));

  return result_2650804108;

}
async function getOrCreateLanguageServer_2801795080(languageId_2801795081, filename_2801795082) {
  var result_2801795086 = null;

  BeforeRet: {
    result_2801795086 = none_2801795096();
    break BeforeRet;
  };

  return result_2801795086;

}
async function saveTempFile_2650804079(self_2650804080, filename_2650804081) {
  var result_2650804083 = null;

  BeforeRet: {
    result_2650804083 = undefined;
    break BeforeRet;
  };

  return result_2650804083;

}

function hash_2785018464(x_2785018466) {
  var result_2785018467 = 0;

    result_2785018467 = hashWangYi1_1325400244(x_2785018466);

  return result_2785018467;

}

function rawGet_2785018457(t_2785018460, key_2785018461, hc_2785018462, hc_2785018462_Idx) {
  var result_2785018463 = 0;

  BeforeRet: {
    hc_2785018462[hc_2785018462_Idx] = hash_2785018464(key_2785018461);
    if ((hc_2785018462[hc_2785018462_Idx] == 0)) {
    hc_2785018462[hc_2785018462_Idx] = 314159265;
    }
    
    if (((t_2785018460.data).length == 0)) {
    result_2785018463 = -1;
    break BeforeRet;
    }
    
    var h_2785018526 = (hc_2785018462[hc_2785018462_Idx] & (t_2785018460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2785018460.data[chckIndx(h_2785018526, 0, (t_2785018460.data).length - 1)].Field0)) break Label2;
          if (((t_2785018460.data[chckIndx(h_2785018526, 0, (t_2785018460.data).length - 1)].Field0 == hc_2785018462[hc_2785018462_Idx]) && (t_2785018460.data[chckIndx(h_2785018526, 0, (t_2785018460.data).length - 1)].Field1 == key_2785018461))) {
          result_2785018463 = h_2785018526;
          break BeforeRet;
          }
          
          h_2785018526 = nextTry_1308622883(h_2785018526, (t_2785018460.data).length - 1);
        }
    };
    result_2785018463 = subInt(-1, h_2785018526);
  };

  return result_2785018463;

}

function mustRehash_2785019033(t_2785019035) {
  var result_2785019036 = false;

    if (!((t_2785019035.counter < (t_2785019035.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785019036 = ((mulInt((t_2785019035.data).length, 2) < mulInt(t_2785019035.counter, 3)) || (subInt((t_2785019035.data).length, t_2785019035.counter) < 4));

  return result_2785019036;

}

function rawInsert_2785019482(t_2785019486, data_2785019487, data_2785019487_Idx, key_2785019488, val_2785019489, hc_2785019490, h_2785019491) {
    data_2785019487[data_2785019487_Idx][chckIndx(h_2785019491, 0, (data_2785019487[data_2785019487_Idx]).length - 1)].Field1 = key_2785019488;
    data_2785019487[data_2785019487_Idx][chckIndx(h_2785019491, 0, (data_2785019487[data_2785019487_Idx]).length - 1)].Field2 = val_2785019489;
    data_2785019487[data_2785019487_Idx][chckIndx(h_2785019491, 0, (data_2785019487[data_2785019487_Idx]).length - 1)].Field0 = hc_2785019490;

  
}

function enlarge_2785019188(t_2785019191) {
    var n_2785019194 = [];
    n_2785019194 = new Array(chckRange(mulInt((t_2785019191.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785019191.data).length, 2), 0, 2147483647) ; ++i) { n_2785019194[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2785019191.data; t_2785019191.data = n_2785019194; n_2785019194 = Temporary1;    Label2: {
      var i_2785019258 = 0;
      var colontmp__2650815514 = 0;
      colontmp__2650815514 = (n_2785019194).length - 1;
      var res_2650815515 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650815515 <= colontmp__2650815514)) break Label4;
            i_2785019258 = res_2650815515;
            var eh_2785019312 = n_2785019194[chckIndx(i_2785019258, 0, (n_2785019194).length - 1)].Field0;
            if (isFilled_1308622880(eh_2785019312)) {
            var j_2785019316 = (eh_2785019312 & (t_2785019191.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2785019191.data[chckIndx(j_2785019316, 0, (t_2785019191.data).length - 1)].Field0)) break Label6;
                  j_2785019316 = nextTry_1308622883(j_2785019316, (t_2785019191.data).length - 1);
                }
            };
            rawInsert_2785019482(t_2785019191, t_2785019191, "data", n_2785019194[chckIndx(i_2785019258, 0, (n_2785019194).length - 1)].Field1, n_2785019194[chckIndx(i_2785019258, 0, (n_2785019194).length - 1)].Field2, eh_2785019312, j_2785019316);
            }
            
            res_2650815515 = addInt(res_2650815515, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785019669(t_2785019672, key_2785019673, hc_2785019674) {
  var result_2785019675 = 0;

  BeforeRet: {
    if (((t_2785019672.data).length == 0)) {
    result_2785019675 = -1;
    break BeforeRet;
    }
    
    var h_2785019726 = (hc_2785019674 & (t_2785019672.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2785019672.data[chckIndx(h_2785019726, 0, (t_2785019672.data).length - 1)].Field0)) break Label2;
          if (((t_2785019672.data[chckIndx(h_2785019726, 0, (t_2785019672.data).length - 1)].Field0 == hc_2785019674) && (t_2785019672.data[chckIndx(h_2785019726, 0, (t_2785019672.data).length - 1)].Field1 == key_2785019673))) {
          result_2785019675 = h_2785019726;
          break BeforeRet;
          }
          
          h_2785019726 = nextTry_1308622883(h_2785019726, (t_2785019672.data).length - 1);
        }
    };
    result_2785019675 = subInt(-1, h_2785019726);
  };

  return result_2785019675;

}

function HEX5BHEX5DHEX3D_2785018860(t_2785018863, key_2785018864, val_2785018865) {
    if (((t_2785018863.data).length == 0)) {
    var correctSizeHEX60gensym12_2785018914 = slotsNeeded_1308622891(32);
    t_2785018863.counter = 0;
    t_2785018863.data = new Array(chckRange(correctSizeHEX60gensym12_2785018914, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2785018914, 0, 2147483647) ; ++i) { t_2785018863.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2785018919 = [0];
    var index_2785018926 = rawGet_2785018457(t_2785018863, key_2785018864, hc_2785018919, 0);
    if ((0 <= index_2785018926)) {
    t_2785018863.data[chckIndx(index_2785018926, 0, (t_2785018863.data).length - 1)].Field2 = val_2785018865;
    }
    else {
      if (((t_2785018863.data).length == 0)) {
      var correctSizeHEX60gensym15_2785019028 = slotsNeeded_1308622891(32);
      t_2785018863.counter = 0;
      t_2785018863.data = new Array(chckRange(correctSizeHEX60gensym15_2785019028, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2785019028, 0, 2147483647) ; ++i) { t_2785018863.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2785019033(t_2785018863)) {
      enlarge_2785019188(t_2785018863);
      index_2785018926 = rawGetKnownHC_2785019669(t_2785018863, key_2785018864, hc_2785018919[0]);
      }
      
      index_2785018926 = subInt(-1, index_2785018926);
      rawInsert_2785019482(t_2785018863, t_2785018863, "data", key_2785018864, val_2785018865, hc_2785018919[0], index_2785018926);
      t_2785018863.counter = addInt(t_2785018863.counter, 1);
    }
    

  
}

function rawGet_2785018003(t_2785018006, key_2785018007, hc_2785018008, hc_2785018008_Idx) {
  var result_2785018009 = 0;

  BeforeRet: {
    hc_2785018008[hc_2785018008_Idx] = hash_1325400491(key_2785018007);
    if ((hc_2785018008[hc_2785018008_Idx] == 0)) {
    hc_2785018008[hc_2785018008_Idx] = 314159265;
    }
    
    if (((t_2785018006.data).length == 0)) {
    result_2785018009 = -1;
    break BeforeRet;
    }
    
    var h_2785018061 = (hc_2785018008[hc_2785018008_Idx] & (t_2785018006.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2785018006.data[chckIndx(h_2785018061, 0, (t_2785018006.data).length - 1)].Field0)) break Label2;
          if (((t_2785018006.data[chckIndx(h_2785018061, 0, (t_2785018006.data).length - 1)].Field0 == hc_2785018008[hc_2785018008_Idx]) && eqStrings(t_2785018006.data[chckIndx(h_2785018061, 0, (t_2785018006.data).length - 1)].Field1, key_2785018007))) {
          result_2785018009 = h_2785018061;
          break BeforeRet;
          }
          
          h_2785018061 = nextTry_1308622883(h_2785018061, (t_2785018006.data).length - 1);
        }
    };
    result_2785018009 = subInt(-1, h_2785018061);
  };

  return result_2785018009;

}

function hasKey_2785017996(t_2785017999, key_2785018000) {
  var result_2785018001 = false;

    var hc_2785018002 = [0];
    result_2785018001 = (0 <= rawGet_2785018003(t_2785017999, key_2785018000, hc_2785018002, 0));

  return result_2785018001;

}

function contains_2785017990(t_2785017993, key_2785017994) {
  var result_2785017995 = false;

  BeforeRet: {
    result_2785017995 = hasKey_2785017996(t_2785017993, key_2785017994);
    break BeforeRet;
  };

  return result_2785017995;

}

function HEX5BHEX5D_2785018295(t_2785018298, key_2785018299) {
  var result_2785018300 = null;
  var result_2785018300_Idx = 0;

    var hcHEX60gensym22_2785018301 = [0];
    var indexHEX60gensym22_2785018308 = rawGet_2785018003(t_2785018298, key_2785018299, hcHEX60gensym22_2785018301, 0);
    if ((0 <= indexHEX60gensym22_2785018308)) {
    result_2785018300 = t_2785018298.data[chckIndx(indexHEX60gensym22_2785018308, 0, (t_2785018298.data).length - 1)]; result_2785018300_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2785018299);
    }
    

  return [result_2785018300, result_2785018300_Idx];

}

function mustRehash_2785020233(t_2785020235) {
  var result_2785020236 = false;

    if (!((t_2785020235.counter < (t_2785020235.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785020236 = ((mulInt((t_2785020235.data).length, 2) < mulInt(t_2785020235.counter, 3)) || (subInt((t_2785020235.data).length, t_2785020235.counter) < 4));

  return result_2785020236;

}

function rawInsert_2785020682(t_2785020686, data_2785020687, data_2785020687_Idx, key_2785020688, val_2785020689, hc_2785020690, h_2785020691) {
    data_2785020687[data_2785020687_Idx][chckIndx(h_2785020691, 0, (data_2785020687[data_2785020687_Idx]).length - 1)].Field1 = nimCopy(null, key_2785020688, NTI33554449);
    data_2785020687[data_2785020687_Idx][chckIndx(h_2785020691, 0, (data_2785020687[data_2785020687_Idx]).length - 1)].Field2 = nimCopy(null, val_2785020689, NTI2785017885);
    data_2785020687[data_2785020687_Idx][chckIndx(h_2785020691, 0, (data_2785020687[data_2785020687_Idx]).length - 1)].Field0 = hc_2785020690;

  
}

function enlarge_2785020388(t_2785020391) {
    var n_2785020394 = [];
    n_2785020394 = new Array(chckRange(mulInt((t_2785020391.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785020391.data).length, 2), 0, 2147483647) ; ++i) { n_2785020394[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2785020391.data; t_2785020391.data = n_2785020394; n_2785020394 = Temporary1;    Label2: {
      var i_2785020458 = 0;
      var colontmp__2650815521 = 0;
      colontmp__2650815521 = (n_2785020394).length - 1;
      var res_2650815522 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2650815522 <= colontmp__2650815521)) break Label4;
            i_2785020458 = res_2650815522;
            var eh_2785020512 = n_2785020394[chckIndx(i_2785020458, 0, (n_2785020394).length - 1)].Field0;
            if (isFilled_1308622880(eh_2785020512)) {
            var j_2785020516 = (eh_2785020512 & (t_2785020391.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2785020391.data[chckIndx(j_2785020516, 0, (t_2785020391.data).length - 1)].Field0)) break Label6;
                  j_2785020516 = nextTry_1308622883(j_2785020516, (t_2785020391.data).length - 1);
                }
            };
            rawInsert_2785020682(t_2785020391, t_2785020391, "data", n_2785020394[chckIndx(i_2785020458, 0, (n_2785020394).length - 1)].Field1, n_2785020394[chckIndx(i_2785020458, 0, (n_2785020394).length - 1)].Field2, eh_2785020512, j_2785020516);
            }
            
            res_2650815522 = addInt(res_2650815522, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785020851(t_2785020854, key_2785020855, hc_2785020856) {
  var result_2785020857 = 0;

  BeforeRet: {
    if (((t_2785020854.data).length == 0)) {
    result_2785020857 = -1;
    break BeforeRet;
    }
    
    var h_2785020908 = (hc_2785020856 & (t_2785020854.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2785020854.data[chckIndx(h_2785020908, 0, (t_2785020854.data).length - 1)].Field0)) break Label2;
          if (((t_2785020854.data[chckIndx(h_2785020908, 0, (t_2785020854.data).length - 1)].Field0 == hc_2785020856) && eqStrings(t_2785020854.data[chckIndx(h_2785020908, 0, (t_2785020854.data).length - 1)].Field1, key_2785020855))) {
          result_2785020857 = h_2785020908;
          break BeforeRet;
          }
          
          h_2785020908 = nextTry_1308622883(h_2785020908, (t_2785020854.data).length - 1);
        }
    };
    result_2785020857 = subInt(-1, h_2785020908);
  };

  return result_2785020857;

}

function HEX5BHEX5DHEX3D_2785020060(t_2785020063, key_2785020064, val_2785020065) {
    if (((t_2785020063.data).length == 0)) {
    var correctSizeHEX60gensym24_2785020114 = slotsNeeded_1308622891(32);
    t_2785020063.counter = 0;
    t_2785020063.data = new Array(chckRange(correctSizeHEX60gensym24_2785020114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2785020114, 0, 2147483647) ; ++i) { t_2785020063.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2785020119 = [0];
    var index_2785020126 = rawGet_2785018003(t_2785020063, key_2785020064, hc_2785020119, 0);
    if ((0 <= index_2785020126)) {
    t_2785020063.data[chckIndx(index_2785020126, 0, (t_2785020063.data).length - 1)].Field2 = nimCopy(null, val_2785020065, NTI2785017885);
    }
    else {
      if (((t_2785020063.data).length == 0)) {
      var correctSizeHEX60gensym27_2785020228 = slotsNeeded_1308622891(32);
      t_2785020063.counter = 0;
      t_2785020063.data = new Array(chckRange(correctSizeHEX60gensym27_2785020228, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2785020228, 0, 2147483647) ; ++i) { t_2785020063.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2785020233(t_2785020063)) {
      enlarge_2785020388(t_2785020063);
      index_2785020126 = rawGetKnownHC_2785020851(t_2785020063, key_2785020064, hc_2785020119[0]);
      }
      
      index_2785020126 = subInt(-1, index_2785020126);
      rawInsert_2785020682(t_2785020063, t_2785020063, "data", key_2785020064, val_2785020065, hc_2785020119[0], index_2785020126);
      t_2785020063.counter = addInt(t_2785020063.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2785018807(self_2785018808, filename_2785018809, handler_2785018813) {
    var Temporary1;

  var result_2785018814 = 0;

    result_2785018814 = handleIdCounter_2785017935[0];
    handleIdCounter_2785017935[0] = addInt(handleIdCounter_2785017935[0], 1);
    HEX5BHEX5DHEX3D_2785018860(self_2785018808.onRequestSave, result_2785018814, handler_2785018813);
    if (contains_2785017990(self_2785018808.onRequestSaveIndex, filename_2785018809)) {
    (Temporary1 = HEX5BHEX5D_2785018295(self_2785018808.onRequestSaveIndex, filename_2785018809), Temporary1)[0][Temporary1[1]].push(result_2785018814);;
    }
    else {
    HEX5BHEX5DHEX3D_2785020060(self_2785018808.onRequestSaveIndex, filename_2785018809, [result_2785018814]);
    }
    

  return result_2785018814;

}

function isNone_2650804133(self_2650804135) {
  var result_2650804136 = false;

    result_2650804136 = (self_2650804135.val == null);

  return result_2650804136;

}

function get_2650804125(self_2650804127) {
  var result_2650804128 = null;
  var result_2650804128_Idx = 0;

  BeforeRet: {
    if (isNone_2650804133(self_2650804127)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650804128 = self_2650804127; result_2650804128_Idx = "val";
    break BeforeRet;
  };

  return [result_2650804128, result_2650804128_Idx];

}
async function getLanguageServer_2650815136(self_2650815137) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2650815210(targetFilename_2650815211) {
        var result_2650815213 = null;

        BeforeRet: {
          (await saveTempFile_2650804079(self_2650815137.document, targetFilename_2650815211));
          result_2650815213 = undefined;
          break BeforeRet;
        };

        return result_2650815213;

      }
      var Temporary3;

  var result_2650815140 = null;

  BeforeRet: {
      var oHEX60gensym814_2650815152 = getLanguageForFile_2768240644(self_2650815137.document.filename);
      if (!isSome_2650803879(oHEX60gensym814_2650815152)) Temporary2 = false; else {        var languageId_2650815175 = nimCopy(null, get_2650803896(oHEX60gensym814_2650815152), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2650815175;
    }
    else {
      result_2650815140 = none_2801795096();
      break BeforeRet;
    }
    
    var languageId_2650815186 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2650804105(self_2650815137.document.languageServer)) {
    result_2650815140 = self_2650815137.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2650815137.document.languageServer = nimCopy(self_2650815137.document.languageServer, (await getOrCreateLanguageServer_2801795080(languageId_2650815186, self_2650815137.document.filename)), NTI2650800322);
      if (isSome_2650804105(self_2650815137.document.languageServer)) {
      var callback_2650815224 = HEX3Aanonymous_2650815210;
      self_2650815137.document.onRequestSaveHandle = addOnRequestSaveHandler_2785018807((Temporary3 = get_2650804125(self_2650815137.document.languageServer), Temporary3)[0][Temporary3[1]], self_2650815137.document.filename, callback_2650815224);
      }
      
      result_2650815140 = self_2650815137.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2650815140;

}

function get_2650815285(self_2650815287) {
  var result_2650815288 = null;

    if (isNone_2650804133(self_2650815287)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650815288 = self_2650815287["val"];

  return result_2650815288;

}

function isSome_2650815315(self_2650815317) {
  var result_2650815318 = false;

    result_2650815318 = self_2650815317.has;

  return result_2650815318;

}

function isNone_2650815340(self_2650815342) {
  var result_2650815343 = false;

    result_2650815343 = !(self_2650815342.has);

  return result_2650815343;

}

function get_2650815332(self_2650815334) {
  var result_2650815335 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2650815340(self_2650815334)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650815335 = self_2650815334.val;

  return result_2650815335;

}
async function gotoDefinitionAsync_2650815245(self_2650815246) {
  var result_2650815248 = null;

  BeforeRet: {
    var languageServer_2650815258 = (await getLanguageServer_2650815136(self_2650815246));
    if (isNone_2650804133(languageServer_2650815258)) {
    result_2650815248 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2650804105(languageServer_2650815258)) {
    var definition_2650815310 = (await getDefinition_2785017923(get_2650815285(languageServer_2650815258), self_2650815246.document.filename, selection_2650800624(self_2650815246).Field1));
    if (isSome_2650815315(definition_2650815310)) {
    selectionHEX3D_2650800630(self_2650815246, toSelection_2231370221(get_2650815332(definition_2650815310).location));
    scrollToCursor_2650808730(self_2650815246, 0);
    }
    
    }
    
    result_2650815248 = undefined;
    break BeforeRet;
  };

  return result_2650815248;

}

function gotoDefinition_2650815467(self_2650815468) {
    var _ = gotoDefinitionAsync_2650815245(self_2650815468);

  
}

function gotoDefinitionJsWrapper_2650815463(self_2650815496) {
    gotoDefinition_2650815467(self_2650815496);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2650815463(this));};
async function getCompletionsAsync_2650810816(self_2650810817) {
  var result_2650815377 = null;

  BeforeRet: {
    var languageServer_2650815387 = (await getLanguageServer_2650815136(self_2650810817));
    if (isNone_2650804133(languageServer_2650815387)) {
    result_2650815377 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2650804105(languageServer_2650815387)) {
    var completions_2650815421 = (await getCompletions_2785017933(get_2650815285(languageServer_2650815387), self_2650810817.document.languageId, self_2650810817.document.filename, selection_2650800624(self_2650810817).Field1));
    self_2650810817.completions = nimCopy(null, completions_2650815421, NTI2785017934);
    self_2650810817.selectedCompletion = clamp_1660945119(self_2650810817.selectedCompletion, 0, (self_2650810817.completions).length - 1);
    if (((self_2650810817.completions).length == 0)) {
    self_2650810817.showCompletions = false;
    }
    else {
      self_2650810817.showCompletions = true;
    }
    
    markDirty_2147483686(self_2650810817);
    }
    
    result_2650815377 = undefined;
    break BeforeRet;
  };

  return result_2650815377;

}

function getCompletions_2650815531(self_2650815532) {
    var _ = getCompletionsAsync_2650810816(self_2650815532);

  
}

function getCompletionsJsWrapper_2650815527(self_2650815560) {
    getCompletions_2650815531(self_2650815560);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2650815527(this));};

function hideCompletions_2650815581(self_2650815582) {
    self_2650815582.showCompletions = false;
    markDirty_2147483686(self_2650815582);

  
}

function hideCompletionsJsWrapper_2650815577(self_2650815610) {
    hideCompletions_2650815581(self_2650815610);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2650815577(this));};

function selectPrevCompletion_2650815631(self_2650815632) {
    if ((0 < (self_2650815632.completions).length)) {
    self_2650815632.selectedCompletion = clamp_1660945119(subInt(self_2650815632.selectedCompletion, 1), 0, subInt((self_2650815632.completions).length, 1));
    }
    else {
      self_2650815632.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2650815632);

  
}

function selectPrevCompletionJsWrapper_2650815627(self_2650815674) {
    selectPrevCompletion_2650815631(self_2650815674);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2650815627(this));};

function selectNextCompletion_2650815695(self_2650815696) {
    if ((0 < (self_2650815696.completions).length)) {
    self_2650815696.selectedCompletion = clamp_1660945119(addInt(self_2650815696.selectedCompletion, 1), 0, subInt((self_2650815696.completions).length, 1));
    }
    else {
      self_2650815696.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2650815696);

  
}

function selectNextCompletionJsWrapper_2650815691(self_2650815738) {
    selectNextCompletion_2650815695(self_2650815738);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2650815691(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2650815947 = 0;
      var L_2650815948 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2650815947 < L_2650815948)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2650815947, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2650815947 = addInt(i_2650815947, 1);
            if (!(((x_1593835575).length == L_2650815948))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2231370049(cursor_2231370050) {
  var result_2231370051 = [];

  BeforeRet: {
    result_2231370051 = nimCopy(null, (HEX24_369098760(cursor_2231370050.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2231370050.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370051;

}

function addQuoted_2650815825(s_2650815827, s_2650815827_Idx, x_2650815828) {
    s_2650815827[s_2650815827_Idx].push.apply(s_2650815827[s_2650815827_Idx], HEX24_2231370049(x_2650815828));;

  
}

function addQuoted_2650815854(s_2650815856, s_2650815856_Idx, x_2650815857) {
    s_2650815856[s_2650815856_Idx].push.apply(s_2650815856[s_2650815856_Idx], reprEnum(x_2650815857, NTI2785017899));;

  
}

function HEX24_2650815775(x_2650815777) {
  var result_2650815778 = [[]];

    result_2650815778[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym882_2650815789 = 0;
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [110,97,109,101]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_1593835572(result_2650815778, 0, x_2650815777.name);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [115,99,111,112,101]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_1593835572(result_2650815778, 0, x_2650815777.scope);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [108,111,99,97,116,105,111,110]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_2650815825(result_2650815778, 0, x_2650815777.location);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [102,105,108,101,110,97,109,101]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_1593835572(result_2650815778, 0, x_2650815777.filename);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [107,105,110,100]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_2650815854(result_2650815778, 0, x_2650815777.kind);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [116,121,112]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_1593835572(result_2650815778, 0, x_2650815777.typ);
    if ((0 < countHEX60gensym882_2650815789)) {
    result_2650815778[0].push.apply(result_2650815778[0], [44,32]);;
    }
    
    result_2650815778[0].push.apply(result_2650815778[0], [100,111,99]);;
    result_2650815778[0].push.apply(result_2650815778[0], [58,32]);;
    countHEX60gensym882_2650815789 += 1;
    addQuoted_1593835572(result_2650815778, 0, x_2650815777.doc);
    result_2650815778[0].push.apply(result_2650815778[0], [41]);;

  return result_2650815778[0];

}

function formatValue_2650815770(result_2650815772, result_2650815772_Idx, value_2650815773, specifier_2650815774) {
    formatValue_721420459(result_2650815772, result_2650815772_Idx, HEX24_2650815775(value_2650815773), specifier_2650815774);

  
}

function applySelectedCompletion_2650815759(self_2650815760) {
  BeforeRet: {
    if (!(self_2650815760.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2650815760.completions).length - 1 < self_2650815760.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2650815764 = nimCopy(null, self_2650815760.completions[chckIndx(self_2650815760.selectedCompletion, 0, (self_2650815760.completions).length - 1)], NTI2785017902);
    var fmtRes_2650815769 = [mnewString(0)];
    fmtRes_2650815769[0].push.apply(fmtRes_2650815769[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2650815770(fmtRes_2650815769, 0, com_2650815764, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2650815769[0], NTI33554449)]);
    var cursor_2650815887 = nimCopy(null, selection_2650800624(self_2650815760).Field1, NTI2231369737);
    if ((cursor_2650815887.Field1 == 0)) {
    selectionsHEX3D_2650800880(self_2650815760, insert_2650804734(self_2650815760.document, [nimCopy(null, toSelection_2231370221(cursor_2650815887), NTI2231369739)], selections_2650800621(self_2650815760), com_2650815764.name, true, true, false));
    }
    else {
      var line_2650815888 = getLine_2650800485(self_2650815760.document, cursor_2650815887.Field0);
      var column_2650815889 = cursor_2650815887.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2650815889)) break Label2;
            switch (line_2650815888[chckIndx(subInt(column_2650815889, 1), 0, (line_2650815888).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2650815889 = subInt(column_2650815889, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2650800880(self_2650815760, edit_2650804951(self_2650815760.document, [nimCopy(null, {Field0: {Field0: cursor_2650815887.Field0, Field1: column_2650815889}, Field1: nimCopy(null, cursor_2650815887, NTI2231369737)}, NTI2650810816)], selections_2650800621(self_2650815760), com_2650815764.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2650815755(self_2650815930) {
    applySelectedCompletion_2650815759(self_2650815930);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2650815755(this));};

function handleHexChar_2181038091(c_2181038092) {
  var result_2181038093 = 0;

    switch (c_2181038092) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2181038093 = subInt(c_2181038092, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2181038093 = addInt(subInt(c_2181038092, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2181038093 = addInt(subInt(c_2181038092, 65), 10);
      break;
    default: 
      break;
    }

  return result_2181038093;

}

function hexbyte_2181038137(hex_2181038138) {
  var result_2181038139 = 0;

    result_2181038139 = handleHexChar_2181038091(hex_2181038138);

  return result_2181038139;

}

function parseOid_2181038160(str_2181038161) {
  var result_2181038162 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2181038161).length == 24))) {
    break BeforeRet;
    }
    
    result_2181038162.padding = 0;
    result_2181038162.time = 0;
    Label1: {
      var i_2181038167 = 0;
      var i_2835349607 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2835349607 < 4)) break Label3;
            i_2181038167 = i_2835349607;
            var hexValue_2181038172 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, i_2181038167), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, i_2181038167), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.time = (result_2181038162.time | (hexValue_2181038172 << mulInt(i_2181038167, 8)));
            i_2835349607 = addInt(i_2835349607, 1);
          }
      };
    };
    result_2181038162.fuzz = 0;
    Label4: {
      var i_2181038181 = 0;
      var i_2835349610 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2835349610 < 4)) break Label6;
            i_2181038181 = i_2835349610;
            var hexValue_2181038186 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038181, 4)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038181, 4)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.fuzz = (result_2181038162.fuzz | (hexValue_2181038186 << mulInt(i_2181038181, 8)));
            i_2835349610 = addInt(i_2835349610, 1);
          }
      };
    };
    result_2181038162.count = 0;
    Label7: {
      var i_2181038195 = 0;
      var i_2835349613 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2835349613 < 4)) break Label9;
            i_2181038195 = i_2835349613;
            var hexValue_2181038200 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038195, 8)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038195, 8)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.count = (result_2181038162.count | (hexValue_2181038200 << mulInt(i_2181038195, 8)));
            i_2835349613 = addInt(i_2835349613, 1);
          }
      };
    };
  };

  return result_2181038162;

}

function parseId_2181038327(s_2181038328) {
  var result_2181038329 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (((s_2181038328).length < 23)) {
    if (true) {
    failedAssertImpl_268435515([105,100,46,110,105,109,40,49,55,56,44,32,53,41,32,96,102,97,108,115,101,96,32]);
    }
    
    }
    
    result_2181038329 = nimCopy(result_2181038329, parseOid_2181038160(s_2181038328), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038329;

}
var IdPrint_2835349506 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2835349507 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2835349508 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2835349509 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2835349510 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2835349511 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2835349512 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2835349513 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2835349514 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2835349515 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2835349516 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2835349517 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2835349518 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2835349519 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2835349520 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2835349521 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2835349522 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2835349523 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2835349524 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2835349525 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2835349526 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2835349527 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2835349528 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2835349529 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2835349530 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2835349531 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2835349532 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2835349533 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2835349534 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2835349535 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2835349536 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2835349537 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2835349538 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2835349539 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2835349540 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2835349541 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2835349542 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2835349543 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2835349544 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2835349545 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2835349546 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2835349547 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2835349548 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2835349549 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2835349550 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2835349551 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2835349552 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2835349553 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2835349554 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2835349555 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2835349556 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2835349557 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2835349558 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2835349559 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2835349560 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2835349561 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2835349562 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2835349563 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2835349564 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2835349565 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2835349566 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2835349567 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2835349568 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2835349569 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2835349570 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2835349571 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2835349572 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2835349573 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2835349574 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2835349575 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2835349576 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2835349577 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2835349578 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2835349579 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2835349580 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2835349581 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2835349582 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2835349583 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2835349584 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2835349585 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2835349586 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2835349587 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2835349588 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2835349589 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2835349590 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2835349591 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2835349592 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2835349593 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2835349594 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2835349595 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2835349596 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2835349597 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2835349598 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2835349599 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2835349600 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2835349601 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2835349602 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2835349603 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2835349604 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2835349605 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_2885681166 = [0];
var dependencyGlobalRevision_2885681184 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_2986344661 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_2885681591(t_2885681594, key_2885681595, hc_2885681596, hc_2885681596_Idx) {
  var result_2885681597 = 0;

  BeforeRet: {
    hc_2885681596[hc_2885681596_Idx] = hash_1325400236(key_2885681595);
    if ((hc_2885681596[hc_2885681596_Idx] == 0)) {
    hc_2885681596[hc_2885681596_Idx] = 314159265;
    }
    
    if (((t_2885681594.data).length == 0)) {
    result_2885681597 = -1;
    break BeforeRet;
    }
    
    var h_2885681685 = (hc_2885681596[hc_2885681596_Idx] & (t_2885681594.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885681594.data[chckIndx(h_2885681685, 0, (t_2885681594.data).length - 1)].Field0)) break Label2;
          if (((t_2885681594.data[chckIndx(h_2885681685, 0, (t_2885681594.data).length - 1)].Field0 == hc_2885681596[hc_2885681596_Idx]) && (t_2885681594.data[chckIndx(h_2885681685, 0, (t_2885681594.data).length - 1)].Field1 == key_2885681595))) {
          result_2885681597 = h_2885681685;
          break BeforeRet;
          }
          
          h_2885681685 = nextTry_1308622883(h_2885681685, (t_2885681594.data).length - 1);
        }
    };
    result_2885681597 = subInt(-1, h_2885681685);
  };

  return result_2885681597;

}

function mustRehash_2885682115(t_2885682117) {
  var result_2885682118 = false;

    if (!((t_2885682117.counter < (t_2885682117.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885682118 = ((mulInt((t_2885682117.data).length, 2) < mulInt(t_2885682117.counter, 3)) || (subInt((t_2885682117.data).length, t_2885682117.counter) < 4));

  return result_2885682118;

}

function rawInsert_2885682808(t_2885682812, data_2885682813, data_2885682813_Idx, key_2885682814, val_2885682815, hc_2885682816, h_2885682817) {
    data_2885682813[data_2885682813_Idx][chckIndx(h_2885682817, 0, (data_2885682813[data_2885682813_Idx]).length - 1)].Field1 = key_2885682814;
    data_2885682813[data_2885682813_Idx][chckIndx(h_2885682817, 0, (data_2885682813[data_2885682813_Idx]).length - 1)].Field2 = nimCopy(null, val_2885682815, NTI33554449);
    data_2885682813[data_2885682813_Idx][chckIndx(h_2885682817, 0, (data_2885682813[data_2885682813_Idx]).length - 1)].Field0 = hc_2885682816;

  
}

function enlarge_2885682372(t_2885682375) {
    var n_2885682378 = [];
    n_2885682378 = new Array(chckRange(mulInt((t_2885682375.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2885682375.data).length, 2), 0, 2147483647) ; ++i) { n_2885682378[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2885682375.data; t_2885682375.data = n_2885682378; n_2885682378 = Temporary1;    Label2: {
      var i_2885682476 = 0;
      var colontmp__2818572363 = 0;
      colontmp__2818572363 = (n_2885682378).length - 1;
      var res_2818572364 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572364 <= colontmp__2818572363)) break Label4;
            i_2885682476 = res_2818572364;
            var eh_2885682557 = n_2885682378[chckIndx(i_2885682476, 0, (n_2885682378).length - 1)].Field0;
            if (isFilled_1308622880(eh_2885682557)) {
            var j_2885682561 = (eh_2885682557 & (t_2885682375.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2885682375.data[chckIndx(j_2885682561, 0, (t_2885682375.data).length - 1)].Field0)) break Label6;
                  j_2885682561 = nextTry_1308622883(j_2885682561, (t_2885682375.data).length - 1);
                }
            };
            rawInsert_2885682808(t_2885682375, t_2885682375, "data", n_2885682378[chckIndx(i_2885682476, 0, (n_2885682378).length - 1)].Field1, n_2885682378[chckIndx(i_2885682476, 0, (n_2885682378).length - 1)].Field2, eh_2885682557, j_2885682561);
            }
            
            res_2818572364 = addInt(res_2818572364, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2885683058(t_2885683061, key_2885683062, hc_2885683063) {
  var result_2885683064 = 0;

  BeforeRet: {
    if (((t_2885683061.data).length == 0)) {
    result_2885683064 = -1;
    break BeforeRet;
    }
    
    var h_2885683149 = (hc_2885683063 & (t_2885683061.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885683061.data[chckIndx(h_2885683149, 0, (t_2885683061.data).length - 1)].Field0)) break Label2;
          if (((t_2885683061.data[chckIndx(h_2885683149, 0, (t_2885683061.data).length - 1)].Field0 == hc_2885683063) && (t_2885683061.data[chckIndx(h_2885683149, 0, (t_2885683061.data).length - 1)].Field1 == key_2885683062))) {
          result_2885683064 = h_2885683149;
          break BeforeRet;
          }
          
          h_2885683149 = nextTry_1308622883(h_2885683149, (t_2885683061.data).length - 1);
        }
    };
    result_2885683064 = subInt(-1, h_2885683149);
  };

  return result_2885683064;

}

function HEX5BHEX5DHEX3D_2885681496(t_2885681499, key_2885681500, val_2885681501) {
    if (((t_2885681499.data).length == 0)) {
    var correctSizeHEX60gensym3_2885681585 = slotsNeeded_1308622891(32);
    t_2885681499.counter = 0;
    t_2885681499.data = new Array(chckRange(correctSizeHEX60gensym3_2885681585, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_2885681585, 0, 2147483647) ; ++i) { t_2885681499.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2885681590 = [0];
    var index_2885681947 = rawGet_2885681591(t_2885681499, key_2885681500, hc_2885681590, 0);
    if ((0 <= index_2885681947)) {
    t_2885681499.data[chckIndx(index_2885681947, 0, (t_2885681499.data).length - 1)].Field2 = nimCopy(null, val_2885681501, NTI33554449);
    }
    else {
      if (((t_2885681499.data).length == 0)) {
      var correctSizeHEX60gensym8_2885682110 = slotsNeeded_1308622891(32);
      t_2885681499.counter = 0;
      t_2885681499.data = new Array(chckRange(correctSizeHEX60gensym8_2885682110, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_2885682110, 0, 2147483647) ; ++i) { t_2885681499.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2885682115(t_2885681499)) {
      enlarge_2885682372(t_2885681499);
      index_2885681947 = rawGetKnownHC_2885683058(t_2885681499, key_2885681500, hc_2885681590[0]);
      }
      
      index_2885681947 = subInt(-1, index_2885681947);
      rawInsert_2885682808(t_2885681499, t_2885681499, "data", key_2885681500, val_2885681501, hc_2885681590[0], index_2885681947);
      t_2885681499.counter = addInt(t_2885681499.counter, 1);
    }
    

  
}

function initDoublyLinkedList_2885683426() {
  var result_2885683428 = ({head: null, tail: null});

  return result_2885683428;

}

function initTable_2885683432(initialSize_2885683435) {
  var result_2885683436 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_2885683438 = slotsNeeded_1308622891(chckRange(initialSize_2885683435, 0, 2147483647));
    result_2885683436.counter = 0;
    result_2885683436.data = new Array(chckRange(correctSizeHEX60gensym16_2885683438, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_2885683438, 0, 2147483647) ; ++i) { result_2885683436.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2885683436;

}

function correctSize_2902458389(cap_2902458390) {
  var result_2902458391 = 0;

    result_2902458391 = cap_2902458390;

  return result_2902458391;

}

function newLruCache_2885683416(capacity_2885683419, recordRemovedKeys_2885683420) {
  var result_2885683421 = null;

    result_2885683421 = {capacity: capacity_2885683419, list: initDoublyLinkedList_2885683426(), table: initTable_2885683432(correctSize_2902458389(capacity_2885683419)), recordRemovedKeys: recordRemovedKeys_2885683420, removedKeys: ({data: [], counter: 0})};

  return result_2885683421;

}

function newCache_2885683411(capacity_2885683414) {
  var result_2885683415 = null;

    result_2885683415 = newLruCache_2885683416(capacity_2885683414, false);

  return result_2885683415;

}

function initDoublyLinkedList_2885683498() {
  var result_2885683500 = ({head: null, tail: null});

  return result_2885683500;

}

function initTable_2885683504(initialSize_2885683507) {
  var result_2885683508 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_2885683510 = slotsNeeded_1308622891(chckRange(initialSize_2885683507, 0, 2147483647));
    result_2885683508.counter = 0;
    result_2885683508.data = new Array(chckRange(correctSizeHEX60gensym18_2885683510, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_2885683510, 0, 2147483647) ; ++i) { result_2885683508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2885683508;

}

function newLruCache_2885683488(capacity_2885683491, recordRemovedKeys_2885683492) {
  var result_2885683493 = null;

    result_2885683493 = {capacity: capacity_2885683491, list: initDoublyLinkedList_2885683498(), table: initTable_2885683504(correctSize_2902458389(capacity_2885683491)), recordRemovedKeys: recordRemovedKeys_2885683492, removedKeys: ({data: [], counter: 0})};

  return result_2885683493;

}

function newCache_2885683483(capacity_2885683486) {
  var result_2885683487 = null;

    result_2885683487 = newLruCache_2885683488(capacity_2885683486, false);

  return result_2885683487;

}

function initDoublyLinkedList_2885683566() {
  var result_2885683568 = ({head: null, tail: null});

  return result_2885683568;

}

function initTable_2885683572(initialSize_2885683575) {
  var result_2885683576 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_2885683578 = slotsNeeded_1308622891(chckRange(initialSize_2885683575, 0, 2147483647));
    result_2885683576.counter = 0;
    result_2885683576.data = new Array(chckRange(correctSizeHEX60gensym20_2885683578, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2885683578, 0, 2147483647) ; ++i) { result_2885683576.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2885683576;

}

function newLruCache_2885683556(capacity_2885683559, recordRemovedKeys_2885683560) {
  var result_2885683561 = null;

    result_2885683561 = {capacity: capacity_2885683559, list: initDoublyLinkedList_2885683566(), table: initTable_2885683572(correctSize_2902458389(capacity_2885683559)), recordRemovedKeys: recordRemovedKeys_2885683560, removedKeys: ({data: [], counter: 0})};

  return result_2885683561;

}

function newCache_2885683551(capacity_2885683554) {
  var result_2885683555 = null;

    result_2885683555 = newLruCache_2885683556(capacity_2885683554, false);

  return result_2885683555;

}

function newDependencyGraph_2885681428() {
  var result_2885681429 = null;

    result_2885681429 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_2885681429.revision = 0;
    HEX5BHEX5DHEX3D_2885681496(result_2885681429.queryNames, -1, []);
    result_2885681429.verified = newCache_2885683411(2000);
    result_2885681429.changed = newCache_2885683411(2000);
    result_2885681429.fingerprints = newCache_2885683483(2000);
    result_2885681429.dependencies = newCache_2885683551(2000);

  return result_2885681429;

}

function hash_2181038120(x_2181038122) {
  var result_2181038123 = 0;

    result_2181038123 = hashWangYi1_1325400244(x_2181038122);

  return result_2181038123;

}

function hash_2181038116(oid_2181038117) {
  var result_2181038118 = 0;

    var h_2181038119 = 0;
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.time));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.fuzz));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.count));
    result_2181038118 = HEX21HEX24_1325400082(h_2181038119);

  return result_2181038118;

}

function hash_2181038324(id_2181038325) {
  var result_2181038326 = 0;

  BeforeRet: {
    result_2181038326 = hash_2181038116(id_2181038325);
    break BeforeRet;
  };

  return result_2181038326;

}

function hash_2868904984(x_2868904986) {
  var result_2868904987 = 0;

    result_2868904987 = HEX21HEX26_1325400067(result_2868904987, hash_2181038324(x_2868904986["Field0"]));
    result_2868904987 = HEX21HEX26_1325400067(result_2868904987, hash_1325400236(x_2868904986["Field1"]));
    result_2868904987 = HEX21HEX24_1325400082(result_2868904987);

  return result_2868904987;

}

function HEX3DHEX3D_2181038112(oid1_2181038113, oid2_2181038114) {
  var result_2181038115 = false;

    result_2181038115 = (((oid1_2181038113.time == oid2_2181038114.time) && (oid1_2181038113.fuzz == oid2_2181038114.fuzz)) && (oid1_2181038113.count == oid2_2181038114.count));

  return result_2181038115;

}

function HEX3DHEX3D_2181038320(idA_2181038321, idB_2181038322) {
  var result_2181038323 = false;

  BeforeRet: {
    result_2181038323 = HEX3DHEX3D_2181038112(idA_2181038321, idB_2181038322);
    break BeforeRet;
  };

  return result_2181038323;

}

function HEX3DHEX3D_2868905321(x_2868905323, y_2868905324) {
  var result_2868905325 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2181038320(x_2868905323["Field0"], y_2868905324["Field0"]))) {
    result_2868905325 = false;
    break BeforeRet;
    }
    
    if (!((x_2868905323["Field1"] == y_2868905324["Field1"]))) {
    result_2868905325 = false;
    break BeforeRet;
    }
    
    result_2868905325 = true;
    break BeforeRet;
  };

  return result_2868905325;

}

function rawGet_2868904977(t_2868904980, key_2868904981, hc_2868904982, hc_2868904982_Idx) {
  var result_2868904983 = 0;

  BeforeRet: {
    hc_2868904982[hc_2868904982_Idx] = hash_2868904984(key_2868904981);
    if ((hc_2868904982[hc_2868904982_Idx] == 0)) {
    hc_2868904982[hc_2868904982_Idx] = 314159265;
    }
    
    if (((t_2868904980.data).length == 0)) {
    result_2868904983 = -1;
    break BeforeRet;
    }
    
    var h_2868905080 = (hc_2868904982[hc_2868904982_Idx] & (t_2868904980.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868904980.data[chckIndx(h_2868905080, 0, (t_2868904980.data).length - 1)].Field0)) break Label2;
          if (((t_2868904980.data[chckIndx(h_2868905080, 0, (t_2868904980.data).length - 1)].Field0 == hc_2868904982[hc_2868904982_Idx]) && HEX3DHEX3D_2868905321(t_2868904980.data[chckIndx(h_2868905080, 0, (t_2868904980.data).length - 1)].Field1, key_2868904981))) {
          result_2868904983 = h_2868905080;
          break BeforeRet;
          }
          
          h_2868905080 = nextTry_1308622883(h_2868905080, (t_2868904980.data).length - 1);
        }
    };
    result_2868904983 = subInt(-1, h_2868905080);
  };

  return result_2868904983;

}

function hasKey_2868904970(t_2868904973, key_2868904974) {
  var result_2868904975 = false;

    var hc_2868904976 = [0];
    result_2868904975 = (0 <= rawGet_2868904977(t_2868904973, key_2868904974, hc_2868904976, 0));

  return result_2868904975;

}

function contains_2868904964(t_2868904967, key_2868904968) {
  var result_2868904969 = false;

  BeforeRet: {
    result_2868904969 = hasKey_2868904970(t_2868904967, key_2868904968);
    break BeforeRet;
  };

  return result_2868904969;

}

function contains_2868904870(cache_2868904873, key_2868904874) {
  var result_2868904875 = false;

    result_2868904875 = contains_2868904964(cache_2868904873.table, key_2868904874);

  return result_2868904875;

}

function HEX24_2181038205(oid_2181038206) {
            var Temporary4;

  var result_2181038207 = [];

    if (result_2181038207.length < 24) { for (var i = result_2181038207.length; i < 24; ++i) result_2181038207.push(0); }
         else {result_2181038207.length = 24; };
    Label1: {
      var i_2181038213 = 0;
      var i_2818572369 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572369 < 12)) break Label3;
            i_2181038213 = i_2818572369;
            if ((i_2181038213 < 4)) {
            Temporary4 = oid_2181038206.time;
            }
            else {
            if ((i_2181038213 < 8)) {
            Temporary4 = oid_2181038206.fuzz;
            }
            else {
            Temporary4 = oid_2181038206.count;
            }
            }
            var value_2181038214 = Temporary4;
            var byteOffset_2181038215 = modInt(i_2181038213, 4);
            var b_2181038220 = (value_2181038214 >> mulInt(byteOffset_2181038215, 8));
            result_2181038207[chckIndx(mulInt(2, i_2181038213), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2181038220 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2181038207[chckIndx(addInt(mulInt(2, i_2181038213), 1), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2181038220 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2818572369 = addInt(i_2818572369, 1);
          }
      };
    };

  return result_2181038207;

}

function HEX24_2181038317(id_2181038318) {
  var result_2181038319 = [];

  BeforeRet: {
    result_2181038319 = nimCopy(null, HEX24_2181038205(id_2181038318), NTI33554449);
    break BeforeRet;
  };

  return result_2181038319;

}

function formatValue_2885681372(result_2885681374, result_2885681374_Idx, value_2885681375, specifier_2885681376) {
    formatValue_721420459(result_2885681374, result_2885681374_Idx, HEX24_2181038317(value_2885681375), specifier_2885681376);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2332033552(n_2332033554, radix_2332033555, spec_2332033556) {
    var Temporary1;

  var result_2332033557 = [];

    var n_2332033560 = n_2332033554;
    var negative_2332033561 = (n_2332033560 < 0);
    if (negative_2332033561) {
    Temporary1 = ((~(n_2332033560) + 1) );
    }
    else {
    Temporary1 = n_2332033560;
    }
    
    var v_2332033562 = Temporary1;
    var xx_2332033563 = [];
    if (spec_2332033556.alternateForm) {
    switch (spec_2332033556.typ) {
    case 88:
      xx_2332033563 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2332033563 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2332033563 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2332033563 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2332033562 == 0)) {
    result_2332033557 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2332033557 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2332033562)) break Label3;
            var d_2332033564 = (v_2332033562 % radix_2332033555);
            v_2332033562 = Math.trunc(((v_2332033562 / radix_2332033555) ));
            result_2332033557.push.apply(result_2332033557, mkDigit_721420293(chckRange(d_2332033564, -2147483648, 2147483647), spec_2332033556.typ));;
          }
      };
      Label4: {
        var idx_2332033569 = 0;
        var colontmp__2818572373 = 0;
        colontmp__2818572373 = divInt((result_2332033557).length, 2);
        var i_2818572374 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2818572374 < colontmp__2818572373)) break Label6;
              idx_2332033569 = i_2818572374;
              var Temporary7 = result_2332033557[chckIndx(idx_2332033569, 0, (result_2332033557).length - 1)]; result_2332033557[chckIndx(idx_2332033569, 0, (result_2332033557).length - 1)] = result_2332033557[chckIndx(subInt(subInt((result_2332033557).length, idx_2332033569), 1), 0, (result_2332033557).length - 1)]; result_2332033557[chckIndx(subInt(subInt((result_2332033557).length, idx_2332033569), 1), 0, (result_2332033557).length - 1)] = Temporary7;              i_2818572374 = addInt(i_2818572374, 1);
            }
        };
      };
    }
    
    if (spec_2332033556.padWithZero) {
    var sign_2332033574 = (negative_2332033561 || !((spec_2332033556.sign == 45)));
    var toFill_2332033578 = subInt(subInt(subInt(spec_2332033556.minimumWidth, (result_2332033557).length), (xx_2332033563).length), (sign_2332033574 ? 1 : 0));
    if ((0 < toFill_2332033578)) {
    result_2332033557 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033578, 0, 2147483647)) || []).concat(result_2332033557 || []), NTI33554449);
    }
    
    }
    
    if (negative_2332033561) {
    result_2332033557 = nimCopy(null, ([45] || []).concat(xx_2332033563 || [],result_2332033557 || []), NTI33554449);
    }
    else {
    if (!((spec_2332033556.sign == 45))) {
    result_2332033557 = nimCopy(null, [spec_2332033556.sign].concat(xx_2332033563 || [],result_2332033557 || []), NTI33554449);
    }
    else {
      result_2332033557 = nimCopy(null, (xx_2332033563 || []).concat(result_2332033557 || []), NTI33554449);
    }
    }
    if ((spec_2332033556.align == 60)) {
    Label8: {
      var i_2332033583 = 0;
      var colontmp__2818572377 = 0;
      colontmp__2818572377 = (result_2332033557).length;
      var i_2818572378 = colontmp__2818572377;
      Label9: {
          Label10: while (true) {
          if (!(i_2818572378 < spec_2332033556.minimumWidth)) break Label10;
            i_2332033583 = i_2818572378;
            addChar(result_2332033557, spec_2332033556.fill);;
            i_2818572378 = addInt(i_2818572378, 1);
          }
      };
    };
    }
    else {
      var toFill_2332033584 = subInt(spec_2332033556.minimumWidth, (result_2332033557).length);
      if ((spec_2332033556.align == 94)) {
      var half_2332033585 = divInt(toFill_2332033584, 2);
      result_2332033557 = nimCopy(null, (nsuRepeatChar(spec_2332033556.fill, chckRange(half_2332033585, 0, 2147483647)) || []).concat(result_2332033557 || [],nsuRepeatChar(spec_2332033556.fill, chckRange(subInt(toFill_2332033584, half_2332033585), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2332033584)) {
        result_2332033557 = nimCopy(null, (nsuRepeatChar(spec_2332033556.fill, chckRange(toFill_2332033584, 0, 2147483647)) || []).concat(result_2332033557 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2332033557;

}

function formatValue_2332033544(result_2332033546, result_2332033546_Idx, value_2332033547, specifier_2332033548) {
  BeforeRet: {
    if (((specifier_2332033548).length == 0)) {
    result_2332033546[result_2332033546_Idx].push.apply(result_2332033546[result_2332033546_Idx], HEX24_369098760(value_2332033547));;
    break BeforeRet;
    }
    
    var spec_2332033549 = parseStandardFormatSpecifier_721420346(specifier_2332033548, 0, false);
    var radix_2332033550 = 10;
    switch (spec_2332033549.typ) {
    case 120:
    case 88:
      radix_2332033550 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2332033550 = 2;
      break;
    case 111:
      radix_2332033550 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2332033549.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2332033546[result_2332033546_Idx].push.apply(result_2332033546[result_2332033546_Idx], formatInt_2332033552(value_2332033547, radix_2332033550, spec_2332033549));;
  };

  
}

function HEX24_2885681364(item_2885681365) {
  var result_2885681366 = [];

  BeforeRet: {
    var fmtRes_2885681371 = [mnewString(0)];
    fmtRes_2885681371[0].push.apply(fmtRes_2885681371[0], [40]);;
    formatValue_2885681372(fmtRes_2885681371, 0, item_2885681365.Field0, []);
    fmtRes_2885681371[0].push.apply(fmtRes_2885681371[0], [44,32]);;
    formatValue_2332033544(fmtRes_2885681371, 0, item_2885681365.Field1, []);
    fmtRes_2885681371[0].push.apply(fmtRes_2885681371[0], [41]);;
    result_2885681366 = nimCopy(null, fmtRes_2885681371[0], NTI33554449);
    break BeforeRet;
  };

  return result_2885681366;

}

function raiseKeyError_2868905617(key_2868905619) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2885681364(key_2868905619) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2868905523(t_2868905526, key_2868905527) {
  var result_2868905528 = null;
  var result_2868905528_Idx = 0;

    var hcHEX60gensym22_2868905529 = [0];
    var indexHEX60gensym22_2868905536 = rawGet_2868904977(t_2868905526, key_2868905527, hcHEX60gensym22_2868905529, 0);
    if ((0 <= indexHEX60gensym22_2868905536)) {
    result_2868905528 = t_2868905526.data[chckIndx(indexHEX60gensym22_2868905536, 0, (t_2868905526.data).length - 1)]; result_2868905528_Idx = "Field2";
    }
    else {
    raiseKeyError_2868905617(key_2868905527);
    }
    

  return [result_2868905528, result_2868905528_Idx];

}

function remove_2868905644(L_2868905646, n_2868905647) {
    if ((n_2868905647 == L_2868905646.tail)) {
    L_2868905646.tail = n_2868905647.prev;
    }
    
    if ((n_2868905647 == L_2868905646.head)) {
    L_2868905646.head = n_2868905647.next;
    }
    
    if (!((n_2868905647.next == null))) {
    n_2868905647.next.prev = n_2868905647.prev;
    }
    
    if (!((n_2868905647.prev == null))) {
    n_2868905647.prev.next = n_2868905647.next;
    }
    

  
}

function prepend_2868905948(L_2868905950, n_2868905951) {
    n_2868905951.prev = null;
    n_2868905951.next = L_2868905950.head;
    if (!((L_2868905950.head == null))) {
    if (!((L_2868905950.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868905950.head.prev = n_2868905951;
    }
    
    L_2868905950.head = n_2868905951;
    if ((L_2868905950.tail == null)) {
    L_2868905950.tail = n_2868905951;
    }
    

  
}

function HEX5BHEX5D_2868905437(cache_2868905440, key_2868905441) {
    var Temporary1;

  var result_2868905442 = null;

    var node_2868905630 = (Temporary1 = HEX5BHEX5D_2868905523(cache_2868905440.table, key_2868905441), Temporary1)[0][Temporary1[1]];
    result_2868905442 = node_2868905630.value.val;
    remove_2868905644(cache_2868905440.list, node_2868905630);
    prepend_2868905948(cache_2868905440.list, node_2868905630);

  return result_2868905442;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2818572408 = 0;
      colontmp__2818572408 = n_855639143;
      var res_2818572409 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572409 <= colontmp__2818572408)) break Label3;
            i_855639149 = res_2818572409;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2818572409 = addInt(res_2818572409, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_2885681167(s_2885681168, n_2885681169) {
  var result_2885681170 = [];

    result_2885681170 = nimCopy(null, nsuRepeatStr(s_2885681168, n_2885681169), NTI33554449);

  return result_2885681170;

}

function symbolName_2852128730(a_2852128732) {
  var result_2852128733 = [];

    result_2852128733 = nimCopy(null, names_2852128740[chckIndx(subInt(a_2852128732, 0), 0, (names_2852128740).length - 1)], NTI33554449);

  return result_2852128733;

}

function len_2852126808(node_2852126809) {
  var result_2852126810 = 0;

  BeforeRet: {
    result_2852126810 = (node_2852126809.children).length;
    break BeforeRet;
  };

  return result_2852126810;

}

function collectionToString_2852128828(x_2852128830, prefix_2852128831, separator_2852128832, suffix_2852128833) {
  var result_2852128834 = [[]];

    result_2852128834[0] = nimCopy(null, prefix_2852128831, NTI33554449);
    var firstElement_2852128835 = true;
    Label1: {
      var value_2852128839 = 0;
      var i_2818572413 = 0;
      var L_2818572414 = (x_2852128830).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572413 < L_2818572414)) break Label3;
            value_2852128839 = x_2852128830[i_2818572413];
            if (firstElement_2852128835) {
            firstElement_2852128835 = false;
            }
            else {
            result_2852128834[0].push.apply(result_2852128834[0], separator_2852128832);;
            }
            
            addQuoted_855639425(result_2852128834, 0, value_2852128839);
            i_2818572413 += 1;
            if (!(((x_2852128830).length == L_2818572414))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2852128834[0].push.apply(result_2852128834[0], suffix_2852128833);;

  return result_2852128834[0];

}

function HEX24_2852128824(x_2852128826) {
  var result_2852128827 = [];

    result_2852128827 = nimCopy(null, collectionToString_2852128828(x_2852128826, [64,91], [44,32], [93]), NTI33554449);

  return result_2852128827;

}

function find_2852126835(a_2852126838, item_2852126839) {
  var result_2852126840 = 0;

  BeforeRet: {
    result_2852126840 = 0;
    Label1: {
      var i_2852126862 = null;
      var i_2818572418 = 0;
      var L_2818572419 = (a_2852126838).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572418 < L_2818572419)) break Label3;
            i_2852126862 = a_2852126838[chckIndx(i_2818572418, 0, (a_2852126838).length - 1)];
            if ((i_2852126862 == item_2852126839)) {
            break BeforeRet;
            }
            
            result_2852126840 = addInt(result_2852126840, 1);
            i_2818572418 = addInt(i_2818572418, 1);
            if (!(((a_2852126838).length == L_2818572419))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2852126840 = -1;
  };

  return result_2852126840;

}

function index_2852126828(node_2852126829) {
  var result_2852126830 = 0;

  BeforeRet: {
    if ((node_2852126829.parent == null)) {
    result_2852126830 = -1;
    break BeforeRet;
    }
    
    result_2852126830 = find_2852126835(node_2852126829.parent.children, node_2852126829);
    break BeforeRet;
  };

  return result_2852126830;

}

function reverse_2852128697(a_2852128699, first_2852128700, last_2852128701) {
    var x_2852128702 = first_2852128700;
    var y_2852128703 = last_2852128701;
    Label1: {
        Label2: while (true) {
        if (!(x_2852128702 < y_2852128703)) break Label2;
          var Temporary3 = a_2852128699[chckIndx(x_2852128702, 0, (a_2852128699).length - 1)]; a_2852128699[chckIndx(x_2852128702, 0, (a_2852128699).length - 1)] = a_2852128699[chckIndx(y_2852128703, 0, (a_2852128699).length - 1)]; a_2852128699[chckIndx(y_2852128703, 0, (a_2852128699).length - 1)] = Temporary3;          y_2852128703 = subInt(y_2852128703, 1);
          x_2852128702 = addInt(x_2852128702, 1);
        }
    };

  
}

function reverse_2852128691(a_2852128693) {
    reverse_2852128697(a_2852128693, 0, chckRange(nimMax(0, (a_2852128693).length - 1), 0, 2147483647));

  
}

function path_2852128675(node_2852128676) {
  var result_2852128677 = [];

    result_2852128677 = nimCopy(null, [], NTI2852127809);
    var node_2852128682 = node_2852128676;
    Label1: {
        Label2: while (true) {
        if (!!((node_2852128682.parent == null))) break Label2;
          result_2852128677.push(index_2852126828(node_2852128682));;
          node_2852128682 = node_2852128682.parent;
        }
    };
    reverse_2852128691(result_2852128677);

  return result_2852128677;

}

function HEX24_2852128727(node_2852128728) {
  var result_2852128729 = [];

    result_2852128729 = nimCopy(null, (symbolName_2852128730(node_2852128728.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2181038320(node_2852128728.id, idNone_2181038338()))) {
    result_2852128729.push.apply(result_2852128729, (HEX24_2181038317(node_2852128728.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2181038320(node_2852128728.reff, idNone_2181038338()))) {
    result_2852128729.push.apply(result_2852128729, ([114,101,102,102,58,32] || []).concat(HEX24_2181038317(node_2852128728.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2852128728.text).length)) {
    result_2852128729.push.apply(result_2852128729, ([39] || []).concat(node_2852128728.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2852126808(node_2852128728))) {
    result_2852128729.push.apply(result_2852128729, (HEX24_369098760(len_2852126808(node_2852128728)) || []).concat([44,32] || []));;
    }
    
    result_2852128729.push.apply(result_2852128729, HEX24_2852128824(path_2852128675(node_2852128728)));;
    result_2852128729.push.apply(result_2852128729, [41]);;

  return result_2852128729;

}

function getTypeKey_2868976375(ctxHEX60gensym90_2868976376, itemIdHEX60gensym90_2868976377) {
  var result_2868976378 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2818572422 = nimCopy(null, itemIdHEX60gensym90_2868976377, NTI2885681177);
    var colontmp__2818572423 = 0;
    result_2868976378 = nimCopy(result_2868976378, {Field0: nimCopy(null, colontmp__2818572422, NTI2885681177), Field1: colontmp__2818572423}, NTI2885681180);
    break BeforeRet;
  };

  return result_2868976378;

}

function bigEndian32_2181038250(b_2181038251) {
  var result_2181038252 = 0;

    result_2181038252 = (((((b_2181038251 & 255) << 24) | ((b_2181038251 & 65280) << 8)) | ((b_2181038251 & 16711680) >> 8)) | (b_2181038251 >> 24));

  return result_2181038252;

}

function genOid_2181038280() {
  var result_2181038281 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2181038284 = toUnix_1191183338(getTime_1191183389());
    var iHEX60gensym1_2181038285 = 0;
    incr_2181038231[0] = addInt(incr_2181038231[0], 1);
    iHEX60gensym1_2181038285 = ((incr_2181038231[0]) | 0);
    result_2181038281.time = bigEndian32_2181038250(timeHEX60gensym1_2181038284);
    result_2181038281.fuzz = fuzz_2181038236;
    result_2181038281.count = bigEndian32_2181038250(iHEX60gensym1_2181038285);

  return result_2181038281;

}

function newId_2181038297() {
  var result_2181038298 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2181038298 = nimCopy(result_2181038298, genOid_2181038280(), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038298;

}

function getItem_2868957649(selfHEX60gensym75_2868957650) {
  var result_2868957651 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym75_2868957650.id, null_2181038340)) {
    selfHEX60gensym75_2868957650.id = nimCopy(selfHEX60gensym75_2868957650.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym75_2868957650.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2818572424 = nimCopy(null, selfHEX60gensym75_2868957650.id, NTI2181038083);
    var colontmp__2818572425 = 0;
    result_2868957651 = nimCopy(result_2868957651, {Field0: nimCopy(null, colontmp__2818572424, NTI2181038083), Field1: colontmp__2818572425}, NTI2885681177);
    break BeforeRet;
  };

  return result_2868957651;

}

function hash_2885681382(value_2885681383) {
  var result_2885681384 = 0;

    result_2885681384 = (hash_2181038324(value_2885681383.Field0) ^ hash_1325400236(value_2885681383.Field1));

  return result_2885681384;

}

function hash_2885683844(x_2885683846) {
  var result_2885683847 = 0;

    result_2885683847 = HEX21HEX26_1325400067(result_2885683847, hash_2885681382(x_2885683846["Field0"]));
    result_2885683847 = HEX21HEX26_1325400067(result_2885683847, hash_1325400236(x_2885683846["Field1"]));
    result_2885683847 = HEX21HEX24_1325400082(result_2885683847);

  return result_2885683847;

}

function HEX3DHEX3D_2885681388(a_2885681389, b_2885681390) {
  var result_2885681391 = false;

    result_2885681391 = (HEX3DHEX3D_2181038320(a_2885681389.Field0, b_2885681390.Field0) && (a_2885681389.Field1 == b_2885681390.Field1));

  return result_2885681391;

}

function HEX3DHEX3D_2885684181(x_2885684183, y_2885684184) {
  var result_2885684185 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2885681388(x_2885684183["Field0"], y_2885684184["Field0"]))) {
    result_2885684185 = false;
    break BeforeRet;
    }
    
    if (!((x_2885684183["Field1"] == y_2885684184["Field1"]))) {
    result_2885684185 = false;
    break BeforeRet;
    }
    
    result_2885684185 = true;
    break BeforeRet;
  };

  return result_2885684185;

}

function rawGet_2869003316(t_2869003319, key_2869003320, hc_2869003321, hc_2869003321_Idx) {
  var result_2869003322 = 0;

  BeforeRet: {
    hc_2869003321[hc_2869003321_Idx] = hash_2885683844(key_2869003320);
    if ((hc_2869003321[hc_2869003321_Idx] == 0)) {
    hc_2869003321[hc_2869003321_Idx] = 314159265;
    }
    
    if (((t_2869003319.data).length == 0)) {
    result_2869003322 = -1;
    break BeforeRet;
    }
    
    var h_2869003411 = (hc_2869003321[hc_2869003321_Idx] & (t_2869003319.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869003319.data[chckIndx(h_2869003411, 0, (t_2869003319.data).length - 1)].Field0)) break Label2;
          if (((t_2869003319.data[chckIndx(h_2869003411, 0, (t_2869003319.data).length - 1)].Field0 == hc_2869003321[hc_2869003321_Idx]) && HEX3DHEX3D_2885684181(t_2869003319.data[chckIndx(h_2869003411, 0, (t_2869003319.data).length - 1)].Field1, key_2869003320))) {
          result_2869003322 = h_2869003411;
          break BeforeRet;
          }
          
          h_2869003411 = nextTry_1308622883(h_2869003411, (t_2869003319.data).length - 1);
        }
    };
    result_2869003322 = subInt(-1, h_2869003411);
  };

  return result_2869003322;

}

function hasKey_2869003309(t_2869003312, key_2869003313) {
  var result_2869003314 = false;

    var hc_2869003315 = [0];
    result_2869003314 = (0 <= rawGet_2869003316(t_2869003312, key_2869003313, hc_2869003315, 0));

  return result_2869003314;

}

function contains_2869003303(t_2869003306, key_2869003307) {
  var result_2869003308 = false;

  BeforeRet: {
    result_2869003308 = hasKey_2869003309(t_2869003306, key_2869003307);
    break BeforeRet;
  };

  return result_2869003308;

}

function addQuoted_2885692026(s_2885692028, s_2885692028_Idx, x_2885692029) {
    s_2885692028[s_2885692028_Idx].push.apply(s_2885692028[s_2885692028_Idx], HEX24_2885681364(x_2885692029));;

  
}

function HEX24_2885692000(x_2885692002) {
  var result_2885692003 = [[]];

    result_2885692003[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_2885692014 = 0;
    if ((0 < countHEX60gensym66_2885692014)) {
    result_2885692003[0].push.apply(result_2885692003[0], [44,32]);;
    }
    
    result_2885692003[0].push.apply(result_2885692003[0], [105,116,101,109]);;
    result_2885692003[0].push.apply(result_2885692003[0], [58,32]);;
    countHEX60gensym66_2885692014 += 1;
    addQuoted_2885692026(result_2885692003, 0, x_2885692002["Field0"]);
    if ((0 < countHEX60gensym66_2885692014)) {
    result_2885692003[0].push.apply(result_2885692003[0], [44,32]);;
    }
    
    result_2885692003[0].push.apply(result_2885692003[0], [117,112,100,97,116,101]);;
    result_2885692003[0].push.apply(result_2885692003[0], [58,32]);;
    countHEX60gensym66_2885692014 += 1;
    addQuoted_855639425(result_2885692003, 0, x_2885692002["Field1"]);
    result_2885692003[0].push.apply(result_2885692003[0], [41]);;

  return result_2885692003[0];

}

function raiseKeyError_2885691953(key_2885691955) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2885692000(key_2885691955) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2869003748(t_2869003751, key_2869003752) {
  var result_2869003753 = null;
  var result_2869003753_Idx = 0;

    var hcHEX60gensym22_2869003754 = [0];
    var indexHEX60gensym22_2869003761 = rawGet_2869003316(t_2869003751, key_2869003752, hcHEX60gensym22_2869003754, 0);
    if ((0 <= indexHEX60gensym22_2869003761)) {
    result_2869003753 = t_2869003751.data[chckIndx(indexHEX60gensym22_2869003761, 0, (t_2869003751.data).length - 1)]; result_2869003753_Idx = "Field2";
    }
    else {
    raiseKeyError_2885691953(key_2869003752);
    }
    

  return [result_2869003753, result_2869003753_Idx];

}

function rawGet_2869004471(t_2869004474, key_2869004475, hc_2869004476, hc_2869004476_Idx) {
  var result_2869004477 = 0;

  BeforeRet: {
    hc_2869004476[hc_2869004476_Idx] = hash_2885683844(key_2869004475);
    if ((hc_2869004476[hc_2869004476_Idx] == 0)) {
    hc_2869004476[hc_2869004476_Idx] = 314159265;
    }
    
    if (((t_2869004474.data).length == 0)) {
    result_2869004477 = -1;
    break BeforeRet;
    }
    
    var h_2869004566 = (hc_2869004476[hc_2869004476_Idx] & (t_2869004474.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869004474.data[chckIndx(h_2869004566, 0, (t_2869004474.data).length - 1)].Field0)) break Label2;
          if (((t_2869004474.data[chckIndx(h_2869004566, 0, (t_2869004474.data).length - 1)].Field0 == hc_2869004476[hc_2869004476_Idx]) && HEX3DHEX3D_2885684181(t_2869004474.data[chckIndx(h_2869004566, 0, (t_2869004474.data).length - 1)].Field1, key_2869004475))) {
          result_2869004477 = h_2869004566;
          break BeforeRet;
          }
          
          h_2869004566 = nextTry_1308622883(h_2869004566, (t_2869004474.data).length - 1);
        }
    };
    result_2869004477 = subInt(-1, h_2869004566);
  };

  return result_2869004477;

}

function del_2869004465(t_2869004468, key_2869004469) {
    var hc_2869004470 = [0];
    var i_2869004832 = rawGet_2869004471(t_2869004468, key_2869004469, hc_2869004470, 0);
    var mskHEX60gensym36_2869004836 = (t_2869004468.data).length - 1;
    if ((0 <= i_2869004832)) {
    t_2869004468.counter = subInt(t_2869004468.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2869004843 = i_2869004832;
            var rHEX60gensym36_2869004844 = jHEX60gensym36_2869004843;
            t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field0 = 0;
            t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field1 = nimCopy(t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field2 = nimCopy(null, [], NTI2868903944);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2869004832 = (addInt(i_2869004832, 1) & mskHEX60gensym36_2869004836);
                  if (isEmpty_1308622877(t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2869004844 = (t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)].Field0 & mskHEX60gensym36_2869004836);
                  if (!(((((rHEX60gensym36_2869004844 <= i_2869004832) && (jHEX60gensym36_2869004843 < rHEX60gensym36_2869004844)) || ((jHEX60gensym36_2869004843 < rHEX60gensym36_2869004844) && (i_2869004832 < jHEX60gensym36_2869004843))) || ((i_2869004832 < jHEX60gensym36_2869004843) && (rHEX60gensym36_2869004844 <= i_2869004832))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2869004468.data[chckIndx(jHEX60gensym36_2869004843, 0, (t_2869004468.data).length - 1)] = nimCopy(t_2869004468.data[chckIndx(jHEX60gensym36_2869004843, 0, (t_2869004468.data).length - 1)], t_2869004468.data[chckIndx(i_2869004832, 0, (t_2869004468.data).length - 1)], NTI2868903956);
          }
      };
    };
    }
    

  
}

function rawGet_2869003964(t_2869003967, key_2869003968, hc_2869003969, hc_2869003969_Idx) {
  var result_2869003970 = 0;

  BeforeRet: {
    hc_2869003969[hc_2869003969_Idx] = hash_2181038324(key_2869003968);
    if ((hc_2869003969[hc_2869003969_Idx] == 0)) {
    hc_2869003969[hc_2869003969_Idx] = 314159265;
    }
    
    if (((t_2869003967.data).length == 0)) {
    result_2869003970 = -1;
    break BeforeRet;
    }
    
    var h_2869004056 = (hc_2869003969[hc_2869003969_Idx] & (t_2869003967.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869003967.data[chckIndx(h_2869004056, 0, (t_2869003967.data).length - 1)].Field0)) break Label2;
          if (((t_2869003967.data[chckIndx(h_2869004056, 0, (t_2869003967.data).length - 1)].Field0 == hc_2869003969[hc_2869003969_Idx]) && HEX3DHEX3D_2181038320(t_2869003967.data[chckIndx(h_2869004056, 0, (t_2869003967.data).length - 1)].Field1, key_2869003968))) {
          result_2869003970 = h_2869004056;
          break BeforeRet;
          }
          
          h_2869004056 = nextTry_1308622883(h_2869004056, (t_2869003967.data).length - 1);
        }
    };
    result_2869003970 = subInt(-1, h_2869004056);
  };

  return result_2869003970;

}

function raiseKeyError_2852128536(key_2852128538) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2181038317(key_2852128538) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2869003957(t_2869003960, key_2869003961) {
  var result_2869003962 = null;

    var hcHEX60gensym22_2869003963 = [0];
    var indexHEX60gensym22_2869004309 = rawGet_2869003964(t_2869003960, key_2869003961, hcHEX60gensym22_2869003963, 0);
    if ((0 <= indexHEX60gensym22_2869004309)) {
    result_2869003962 = t_2869003960.data[chckIndx(indexHEX60gensym22_2869004309, 0, (t_2869003960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2852128536(key_2869003961);
    }
    

  return result_2869003962;

}

function voidType_2952790428() {
  var result_2952790429 = null;

    result_2952790429 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_2952790429;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet58[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet59[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_2952790430() {
  var result_2952790431 = null;

    result_2952790431 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_2952790431;

}

function errorType_2952790392() {
  var result_2952790393 = null;

    result_2952790393 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_2952790393;

}

function stringType_2952790432() {
  var result_2952790433 = null;

    result_2952790433 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_2952790433;

}

function HEX5BHEX5D_2852126804(node_2852126805, index_2852126806) {
  var result_2852126807 = null;

  BeforeRet: {
    result_2852126807 = node_2852126805.children[chckIndx(index_2852126806, 0, (node_2852126805.children).length - 1)];
    break BeforeRet;
  };

  return result_2852126807;

}

function recordDependency_2868957436(ctxHEX60gensym72_2868957437, itemHEX60gensym72_2868957438, updateHEX60gensym72_2868957439) {
    if ((0 < (ctxHEX60gensym72_2868957437.dependencyStack).length)) {
    ctxHEX60gensym72_2868957437.dependencyStack[chckIndx((ctxHEX60gensym72_2868957437.dependencyStack).length - 1, 0, (ctxHEX60gensym72_2868957437.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_2868957438, NTI2885681177), Field1: updateHEX60gensym72_2868957439});;
    }
    

  
}

function toFloat_33556023(i_33556024) {
  var result_33556025 = 0.0;

    result_33556025 = i_33556024;

  return result_33556025;

}

function HEX2F_33556035(x_33556036, y_33556037) {
  var result_33556038 = 0.0;

    result_33556038 = (toFloat_33556023(x_33556036) / toFloat_33556023(y_33556037));

  return result_33556038;

}

function toUnixFloat_1191183346(t_1191183347) {
  var result_1191183348 = 0.0;

    result_1191183348 = (t_1191183347.seconds + HEX2F_33556035(t_1191183347.nanosecond, convert_1191182870(3, 0, 1)));

  return result_1191183348;

}

function myGetTicks_2281701422() {
  var result_2281701423 = 0;

  BeforeRet: {
    var time_2281701424 = getTime_1191183389();
    result_2281701423 = (toUnixFloat_1191183346(time_2281701424) * 1000000000.0);
    break BeforeRet;
  };

  return result_2281701423;

}

function startTimer_2281701428() {
  var result_2281701429 = ({start: 0});

    result_2281701429 = nimCopy(result_2281701429, {start: myGetTicks_2281701422()}, NTI2281701407);

  return result_2281701429;

}

function rawGet_2885683837(t_2885683840, key_2885683841, hc_2885683842, hc_2885683842_Idx) {
  var result_2885683843 = 0;

  BeforeRet: {
    hc_2885683842[hc_2885683842_Idx] = hash_2885683844(key_2885683841);
    if ((hc_2885683842[hc_2885683842_Idx] == 0)) {
    hc_2885683842[hc_2885683842_Idx] = 314159265;
    }
    
    if (((t_2885683840.data).length == 0)) {
    result_2885683843 = -1;
    break BeforeRet;
    }
    
    var h_2885683940 = (hc_2885683842[hc_2885683842_Idx] & (t_2885683840.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885683840.data[chckIndx(h_2885683940, 0, (t_2885683840.data).length - 1)].Field0)) break Label2;
          if (((t_2885683840.data[chckIndx(h_2885683940, 0, (t_2885683840.data).length - 1)].Field0 == hc_2885683842[hc_2885683842_Idx]) && HEX3DHEX3D_2885684181(t_2885683840.data[chckIndx(h_2885683940, 0, (t_2885683840.data).length - 1)].Field1, key_2885683841))) {
          result_2885683843 = h_2885683940;
          break BeforeRet;
          }
          
          h_2885683940 = nextTry_1308622883(h_2885683940, (t_2885683840.data).length - 1);
        }
    };
    result_2885683843 = subInt(-1, h_2885683940);
  };

  return result_2885683843;

}

function getOrDefault_2885683827(t_2885683830, key_2885683831, default_2885683832) {
    var Temporary1;

  var result_2885683833 = null;

    var hcHEX60gensym22_2885683836 = [0];
    var indexHEX60gensym22_2885684203 = rawGet_2885683837(t_2885683830, key_2885683831, hcHEX60gensym22_2885683836, 0);
    if ((0 <= indexHEX60gensym22_2885684203)) {
    Temporary1 = t_2885683830.data[chckIndx(indexHEX60gensym22_2885684203, 0, (t_2885683830.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2885683832;
    }
    
    result_2885683833 = Temporary1;

  return result_2885683833;

}

function getOrDefault_2885683731(cache_2885683734, key_2885683735, val_2885683736) {
  var result_2885683737 = 0;

    var node_2885684293 = getOrDefault_2885683827(cache_2885683734.table, key_2885683735, null);
    if ((node_2885684293 == null)) {
    result_2885683737 = val_2885683736;
    }
    else {
      result_2885683737 = node_2885684293.value.val;
    }
    

  return result_2885683737;

}

function nodeColor_2885683637(graph_2885683638, key_2885683639, parentVerified_2885683640) {
  var result_2885683641 = 0;

  BeforeRet: {
    if ((key_2885683639.Field1 == -1)) {
    var inputChangedRevision_2885684297 = getOrDefault_2885683731(graph_2885683638.changed, key_2885683639, graph_2885683638.revision);
    if ((parentVerified_2885683640 < inputChangedRevision_2885684297)) {
    result_2885683641 = 1;
    break BeforeRet;
    }
    else {
      result_2885683641 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_2885684393 = getOrDefault_2885683731(graph_2885683638.verified, key_2885683639, 0);
    if (!((verified_2885684393 == graph_2885683638.revision))) {
    result_2885683641 = 0;
    break BeforeRet;
    }
    
    var changed_2885684489 = getOrDefault_2885683731(graph_2885683638.changed, key_2885683639, graph_2885683638.revision);
    if ((changed_2885684489 == graph_2885683638.revision)) {
    result_2885683641 = 1;
    break BeforeRet;
    }
    
    result_2885683641 = 2;
    break BeforeRet;
  };

  return result_2885683641;

}

function hash_2852129075(node_2852129076) {
  var result_2852129077 = 0;

    result_2852129077 = node_2852129076;

  return result_2852129077;

}

function rawGet_2868906313(t_2868906316, key_2868906317, hc_2868906318, hc_2868906318_Idx) {
  var result_2868906319 = 0;

  BeforeRet: {
    hc_2868906318[hc_2868906318_Idx] = hash_2852129075(key_2868906317);
    if ((hc_2868906318[hc_2868906318_Idx] == 0)) {
    hc_2868906318[hc_2868906318_Idx] = 314159265;
    }
    
    if (((t_2868906316.data).length == 0)) {
    result_2868906319 = -1;
    break BeforeRet;
    }
    
    var h_2868906405 = (hc_2868906318[hc_2868906318_Idx] & (t_2868906316.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868906316.data[chckIndx(h_2868906405, 0, (t_2868906316.data).length - 1)].Field0)) break Label2;
          if (((t_2868906316.data[chckIndx(h_2868906405, 0, (t_2868906316.data).length - 1)].Field0 == hc_2868906318[hc_2868906318_Idx]) && (t_2868906316.data[chckIndx(h_2868906405, 0, (t_2868906316.data).length - 1)].Field1 == key_2868906317))) {
          result_2868906319 = h_2868906405;
          break BeforeRet;
          }
          
          h_2868906405 = nextTry_1308622883(h_2868906405, (t_2868906316.data).length - 1);
        }
    };
    result_2868906319 = subInt(-1, h_2868906405);
  };

  return result_2868906319;

}

function hasKey_2868976563(t_2868976566, key_2868976567) {
  var result_2868976568 = false;

    var hc_2868976569 = [0];
    result_2868976568 = (0 <= rawGet_2868906313(t_2868976566, key_2868976567, hc_2868976569, 0));

  return result_2868976568;

}

function contains_2868976557(t_2868976560, key_2868976561) {
  var result_2868976562 = false;

  BeforeRet: {
    result_2868976562 = hasKey_2868976563(t_2868976560, key_2868976561);
    break BeforeRet;
  };

  return result_2868976562;

}

function contains_2868976463(cache_2868976466, key_2868976467) {
  var result_2868976468 = false;

    result_2868976468 = contains_2868976557(cache_2868976466.table, key_2868976467);

  return result_2868976468;

}

function HEX5BHEX5D_2868973900(t_2868973903, key_2868973904) {
  var result_2868973905 = null;
  var result_2868973905_Idx = 0;

    var hcHEX60gensym22_2868973906 = [0];
    var indexHEX60gensym22_2868973913 = rawGet_2885681591(t_2868973903, key_2868973904, hcHEX60gensym22_2868973906, 0);
    if ((0 <= indexHEX60gensym22_2868973913)) {
    result_2868973905 = t_2868973903.data[chckIndx(indexHEX60gensym22_2868973913, 0, (t_2868973903.data).length - 1)]; result_2868973905_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850799(key_2868973904);
    }
    

  return [result_2868973905, result_2868973905_Idx];

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_2885687286(t_2885687289, key_2885687290, hc_2885687291, hc_2885687291_Idx) {
  var result_2885687292 = 0;

  BeforeRet: {
    hc_2885687291[hc_2885687291_Idx] = hash_2885683844(key_2885687290);
    if ((hc_2885687291[hc_2885687291_Idx] == 0)) {
    hc_2885687291[hc_2885687291_Idx] = 314159265;
    }
    
    if (((t_2885687289.data).length == 0)) {
    result_2885687292 = -1;
    break BeforeRet;
    }
    
    var h_2885687381 = (hc_2885687291[hc_2885687291_Idx] & (t_2885687289.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2885687289.data[chckIndx(h_2885687381, 0, (t_2885687289.data).length - 1)].Field0)) break Label2;
          if (((t_2885687289.data[chckIndx(h_2885687381, 0, (t_2885687289.data).length - 1)].Field0 == hc_2885687291[hc_2885687291_Idx]) && HEX3DHEX3D_2885684181(t_2885687289.data[chckIndx(h_2885687381, 0, (t_2885687289.data).length - 1)].Field1, key_2885687290))) {
          result_2885687292 = h_2885687381;
          break BeforeRet;
          }
          
          h_2885687381 = nextTry_1828716586(h_2885687381, (t_2885687289.data).length - 1);
        }
    };
    result_2885687292 = subInt(-1, h_2885687381);
  };

  return result_2885687292;

}

function contains_2868974073(s_2868974075, key_2868974076) {
  var result_2868974077 = false;

    var hc_2868974078 = [0];
    var index_2868974092 = rawGet_2885687286(s_2868974075, key_2868974076, hc_2868974078, 0);
    result_2868974077 = (0 <= index_2868974092);

  return result_2868974077;

}

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function mustRehash_2885688552(t_2885688554) {
  var result_2885688555 = false;

    if (!((t_2885688554.counter < (t_2885688554.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885688555 = ((mulInt((t_2885688554.data).length, 2) < mulInt(t_2885688554.counter, 3)) || (subInt((t_2885688554.data).length, t_2885688554.counter) < 4));

  return result_2885688555;

}

function rawGetKnownHC_2885689158(t_2885689161, key_2885689162, hc_2885689163) {
  var result_2885689164 = 0;

  BeforeRet: {
    if (((t_2885689161.data).length == 0)) {
    result_2885689164 = -1;
    break BeforeRet;
    }
    
    var h_2885689249 = (hc_2885689163 & (t_2885689161.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2885689161.data[chckIndx(h_2885689249, 0, (t_2885689161.data).length - 1)].Field0)) break Label2;
          if (((t_2885689161.data[chckIndx(h_2885689249, 0, (t_2885689161.data).length - 1)].Field0 == hc_2885689163) && HEX3DHEX3D_2885684181(t_2885689161.data[chckIndx(h_2885689249, 0, (t_2885689161.data).length - 1)].Field1, key_2885689162))) {
          result_2885689164 = h_2885689249;
          break BeforeRet;
          }
          
          h_2885689249 = nextTry_1828716586(h_2885689249, (t_2885689161.data).length - 1);
        }
    };
    result_2885689164 = subInt(-1, h_2885689249);
  };

  return result_2885689164;

}

function rawInsert_2885689662(s_2885689664, data_2885689665, data_2885689665_Idx, key_2885689666, hc_2885689667, h_2885689668) {
    if (((data_2885689665[data_2885689665_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_2885689751 = slotsNeeded_1828716594(64);
    s_2885689664.counter = 0;
    s_2885689664.data = new Array(chckRange(correctSizeHEX60gensym56_2885689751, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2885689751, 0, 2147483647) ; ++i) { s_2885689664.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_2885689665[data_2885689665_Idx][chckIndx(h_2885689668, 0, (data_2885689665[data_2885689665_Idx]).length - 1)].Field1 = nimCopy(data_2885689665[data_2885689665_Idx][chckIndx(h_2885689668, 0, (data_2885689665[data_2885689665_Idx]).length - 1)].Field1, key_2885689666, NTI2885681180);
    data_2885689665[data_2885689665_Idx][chckIndx(h_2885689668, 0, (data_2885689665[data_2885689665_Idx]).length - 1)].Field0 = hc_2885689667;

  
}

function enlarge_2885688815(s_2885688817) {
    var n_2885688819 = [];
    n_2885688819 = new Array(chckRange(mulInt((s_2885688817.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2885688817.data).length, 2), 0, 2147483647) ; ++i) { n_2885688819[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_2885688817.data; s_2885688817.data = n_2885688819; n_2885688819 = Temporary1;    Label2: {
      var i_2885688917 = 0;
      var colontmp__2818572441 = 0;
      colontmp__2818572441 = (n_2885688819).length - 1;
      var res_2818572442 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572442 <= colontmp__2818572441)) break Label4;
            i_2885688917 = res_2818572442;
            if (isFilled_1828716583(n_2885688819[chckIndx(i_2885688917, 0, (n_2885688819).length - 1)].Field0)) {
            var j_2885689497 = subInt(-1, rawGetKnownHC_2885689158(s_2885688817, n_2885688819[chckIndx(i_2885688917, 0, (n_2885688819).length - 1)].Field1, n_2885688819[chckIndx(i_2885688917, 0, (n_2885688819).length - 1)].Field0));
            rawInsert_2885689662(s_2885688817, s_2885688817, "data", n_2885688819[chckIndx(i_2885688917, 0, (n_2885688819).length - 1)].Field1, n_2885688819[chckIndx(i_2885688917, 0, (n_2885688819).length - 1)].Field0, j_2885689497);
            }
            
            res_2818572442 = addInt(res_2818572442, 1);
          }
      };
    };

  
}

function incl_2885688436(s_2885688438, key_2885688439) {
    if (((s_2885688438.data).length == 0)) {
    var correctSizeHEX60gensym49_2885688522 = slotsNeeded_1828716594(64);
    s_2885688438.counter = 0;
    s_2885688438.data = new Array(chckRange(correctSizeHEX60gensym49_2885688522, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_2885688522, 0, 2147483647) ; ++i) { s_2885688438.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_2885688537 = [0];
    var index_2885688551 = rawGet_2885687286(s_2885688438, key_2885688439, hc_2885688537, 0);
    if ((index_2885688551 < 0)) {
    if (mustRehash_2885688552(s_2885688438)) {
    enlarge_2885688815(s_2885688438);
    index_2885688551 = rawGetKnownHC_2885689158(s_2885688438, key_2885688439, hc_2885688537[0]);
    }
    
    rawInsert_2885689662(s_2885688438, s_2885688438, "data", key_2885688439, hc_2885688537[0], subInt(-1, index_2885688551));
    s_2885688438.counter = addInt(s_2885688438.counter, 1);
    }
    

  
}

function getOrDefault_2868974304(t_2868974307, key_2868974308) {
  var result_2868974309 = [];

    var hcHEX60gensym462_2868974312 = [0];
    var indexHEX60gensym462_2868974319 = rawGet_2885681591(t_2868974307, key_2868974308, hcHEX60gensym462_2868974312, 0);
    if ((0 <= indexHEX60gensym462_2868974319)) {
    result_2868974309 = nimCopy(null, t_2868974307.data[chckIndx(indexHEX60gensym462_2868974319, 0, (t_2868974307.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_2868974309;

}

function rawGet_2868953567(t_2868953570, key_2868953571, hc_2868953572, hc_2868953572_Idx) {
  var result_2868953573 = 0;

  BeforeRet: {
    hc_2868953572[hc_2868953572_Idx] = hash_1325400236(key_2868953571);
    if ((hc_2868953572[hc_2868953572_Idx] == 0)) {
    hc_2868953572[hc_2868953572_Idx] = 314159265;
    }
    
    if (((t_2868953570.data).length == 0)) {
    result_2868953573 = -1;
    break BeforeRet;
    }
    
    var h_2868953661 = (hc_2868953572[hc_2868953572_Idx] & (t_2868953570.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868953570.data[chckIndx(h_2868953661, 0, (t_2868953570.data).length - 1)].Field0)) break Label2;
          if (((t_2868953570.data[chckIndx(h_2868953661, 0, (t_2868953570.data).length - 1)].Field0 == hc_2868953572[hc_2868953572_Idx]) && (t_2868953570.data[chckIndx(h_2868953661, 0, (t_2868953570.data).length - 1)].Field1 == key_2868953571))) {
          result_2868953573 = h_2868953661;
          break BeforeRet;
          }
          
          h_2868953661 = nextTry_1308622883(h_2868953661, (t_2868953570.data).length - 1);
        }
    };
    result_2868953573 = subInt(-1, h_2868953661);
  };

  return result_2868953573;

}

function hasKey_2868974482(t_2868974485, key_2868974486) {
  var result_2868974487 = false;

    var hc_2868974488 = [0];
    result_2868974487 = (0 <= rawGet_2868953567(t_2868974485, key_2868974486, hc_2868974488, 0));

  return result_2868974487;

}

function contains_2868974476(t_2868974479, key_2868974480) {
  var result_2868974481 = false;

  BeforeRet: {
    result_2868974481 = hasKey_2868974482(t_2868974479, key_2868974480);
    break BeforeRet;
  };

  return result_2868974481;

}

function HEX5BHEX5D_2868974575(t_2868974578, key_2868974579) {
  var result_2868974580 = null;
  var result_2868974580_Idx = 0;

    var hcHEX60gensym22_2868974581 = [0];
    var indexHEX60gensym22_2868974588 = rawGet_2868953567(t_2868974578, key_2868974579, hcHEX60gensym22_2868974581, 0);
    if ((0 <= indexHEX60gensym22_2868974588)) {
    result_2868974580 = t_2868974578.data[chckIndx(indexHEX60gensym22_2868974588, 0, (t_2868974578.data).length - 1)]; result_2868974580_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850799(key_2868974579);
    }
    

  return [result_2868974580, result_2868974580_Idx];

}

function newDoublyLinkedNode_2885692748(value_2885692750) {
  var result_2885692751 = null;

    result_2885692751 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_2885692751.value = nimCopy(result_2885692751.value, value_2885692750, NTI2885681204);

  return result_2885692751;

}

function mustRehash_2885693098(t_2885693100) {
  var result_2885693101 = false;

    if (!((t_2885693100.counter < (t_2885693100.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885693101 = ((mulInt((t_2885693100.data).length, 2) < mulInt(t_2885693100.counter, 3)) || (subInt((t_2885693100.data).length, t_2885693100.counter) < 4));

  return result_2885693101;

}

function rawInsert_2885693791(t_2885693795, data_2885693796, data_2885693796_Idx, key_2885693797, val_2885693798, hc_2885693799, h_2885693800) {
    data_2885693796[data_2885693796_Idx][chckIndx(h_2885693800, 0, (data_2885693796[data_2885693796_Idx]).length - 1)].Field1 = nimCopy(data_2885693796[data_2885693796_Idx][chckIndx(h_2885693800, 0, (data_2885693796[data_2885693796_Idx]).length - 1)].Field1, key_2885693797, NTI2885681180);
    data_2885693796[data_2885693796_Idx][chckIndx(h_2885693800, 0, (data_2885693796[data_2885693796_Idx]).length - 1)].Field2 = val_2885693798;
    data_2885693796[data_2885693796_Idx][chckIndx(h_2885693800, 0, (data_2885693796[data_2885693796_Idx]).length - 1)].Field0 = hc_2885693799;

  
}

function enlarge_2885693355(t_2885693358) {
    var n_2885693361 = [];
    n_2885693361 = new Array(chckRange(mulInt((t_2885693358.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2885693358.data).length, 2), 0, 2147483647) ; ++i) { n_2885693361[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2885693358.data; t_2885693358.data = n_2885693361; n_2885693361 = Temporary1;    Label2: {
      var i_2885693459 = 0;
      var colontmp__2818572448 = 0;
      colontmp__2818572448 = (n_2885693361).length - 1;
      var res_2818572449 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572449 <= colontmp__2818572448)) break Label4;
            i_2885693459 = res_2818572449;
            var eh_2885693540 = n_2885693361[chckIndx(i_2885693459, 0, (n_2885693361).length - 1)].Field0;
            if (isFilled_1308622880(eh_2885693540)) {
            var j_2885693544 = (eh_2885693540 & (t_2885693358.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2885693358.data[chckIndx(j_2885693544, 0, (t_2885693358.data).length - 1)].Field0)) break Label6;
                  j_2885693544 = nextTry_1308622883(j_2885693544, (t_2885693358.data).length - 1);
                }
            };
            rawInsert_2885693791(t_2885693358, t_2885693358, "data", n_2885693361[chckIndx(i_2885693459, 0, (n_2885693361).length - 1)].Field1, n_2885693361[chckIndx(i_2885693459, 0, (n_2885693361).length - 1)].Field2, eh_2885693540, j_2885693544);
            }
            
            res_2818572449 = addInt(res_2818572449, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2885694041(t_2885694044, key_2885694045, hc_2885694046) {
  var result_2885694047 = 0;

  BeforeRet: {
    if (((t_2885694044.data).length == 0)) {
    result_2885694047 = -1;
    break BeforeRet;
    }
    
    var h_2885694132 = (hc_2885694046 & (t_2885694044.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885694044.data[chckIndx(h_2885694132, 0, (t_2885694044.data).length - 1)].Field0)) break Label2;
          if (((t_2885694044.data[chckIndx(h_2885694132, 0, (t_2885694044.data).length - 1)].Field0 == hc_2885694046) && HEX3DHEX3D_2885684181(t_2885694044.data[chckIndx(h_2885694132, 0, (t_2885694044.data).length - 1)].Field1, key_2885694045))) {
          result_2885694047 = h_2885694132;
          break BeforeRet;
          }
          
          h_2885694132 = nextTry_1308622883(h_2885694132, (t_2885694044.data).length - 1);
        }
    };
    result_2885694047 = subInt(-1, h_2885694132);
  };

  return result_2885694047;

}

function HEX5BHEX5DHEX3D_2885692830(t_2885692833, key_2885692834, val_2885692835) {
    if (((t_2885692833.data).length == 0)) {
    var correctSizeHEX60gensym77_2885692918 = slotsNeeded_1308622891(32);
    t_2885692833.counter = 0;
    t_2885692833.data = new Array(chckRange(correctSizeHEX60gensym77_2885692918, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_2885692918, 0, 2147483647) ; ++i) { t_2885692833.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2885692923 = [0];
    var index_2885692930 = rawGet_2885683837(t_2885692833, key_2885692834, hc_2885692923, 0);
    if ((0 <= index_2885692930)) {
    t_2885692833.data[chckIndx(index_2885692930, 0, (t_2885692833.data).length - 1)].Field2 = val_2885692835;
    }
    else {
      if (((t_2885692833.data).length == 0)) {
      var correctSizeHEX60gensym80_2885693093 = slotsNeeded_1308622891(32);
      t_2885692833.counter = 0;
      t_2885692833.data = new Array(chckRange(correctSizeHEX60gensym80_2885693093, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_2885693093, 0, 2147483647) ; ++i) { t_2885692833.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2885693098(t_2885692833)) {
      enlarge_2885693355(t_2885692833);
      index_2885692930 = rawGetKnownHC_2885694041(t_2885692833, key_2885692834, hc_2885692923[0]);
      }
      
      index_2885692930 = subInt(-1, index_2885692930);
      rawInsert_2885693791(t_2885692833, t_2885692833, "data", key_2885692834, val_2885692835, hc_2885692923[0], index_2885692930);
      t_2885692833.counter = addInt(t_2885692833.counter, 1);
    }
    

  
}

function prepend_2885694441(L_2885694443, n_2885694444) {
    n_2885694444.prev = null;
    n_2885694444.next = L_2885694443.head;
    if (!((L_2885694443.head == null))) {
    if (!((L_2885694443.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2885694443.head.prev = n_2885694444;
    }
    
    L_2885694443.head = n_2885694444;
    if ((L_2885694443.tail == null)) {
    L_2885694443.tail = n_2885694444;
    }
    

  
}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_2885687280(s_2885687282, key_2885687283) {
          var Temporary5;

  var result_2885687284 = false;

  BeforeRet: {
    var hc_2885687285 = [0];
    var i_2885687647 = rawGet_2885687286(s_2885687282, key_2885687283, hc_2885687285, 0);
    var msk_2885687651 = (s_2885687282.data).length - 1;
    result_2885687284 = true;
    if ((0 <= i_2885687647)) {
    result_2885687284 = false;
    s_2885687282.counter = subInt(s_2885687282.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2885687657 = i_2885687647;
          var r_2885687658 = j_2885687657;
          s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)].Field0 = 0;
          s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)].Field1 = nimCopy(s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2885687647 = (addInt(i_2885687647, 1) & msk_2885687651);
                if (isEmpty_1828716580(s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2885687658 = (s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)].Field0 & msk_2885687651);
                if (!(((((r_2885687658 <= i_2885687647) && (j_2885687657 < r_2885687658)) || ((j_2885687657 < r_2885687658) && (i_2885687647 < j_2885687657))) || ((i_2885687647 < j_2885687657) && (r_2885687658 <= i_2885687647))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)];
          s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)] = genericReset(s_2885687282.data[chckIndx(i_2885687647, 0, (s_2885687282.data).length - 1)], NTI2885681260);
          s_2885687282.data[chckIndx(j_2885687657, 0, (s_2885687282.data).length - 1)] = nimCopy(s_2885687282.data[chckIndx(j_2885687657, 0, (s_2885687282.data).length - 1)], Temporary5, NTI2885681260);
        }
    };
    }
    
  };

  return result_2885687284;

}

function excl_2885687265(s_2885687267, key_2885687268) {
    var _ = exclImpl_2885687280(s_2885687267, key_2885687268);

  
}

function len_2885694834(t_2885694837) {
  var result_2885694838 = 0;

    result_2885694838 = t_2885694837.counter;

  return result_2885694838;

}

function len_2885694751(cache_2885694754) {
  var result_2885694755 = 0;

    result_2885694755 = len_2885694834(cache_2885694754.table);

  return result_2885694755;

}

function del_2885694926(t_2885694929, key_2885694930) {
    var hc_2885694931 = [0];
    var i_2885694938 = rawGet_2885683837(t_2885694929, key_2885694930, hc_2885694931, 0);
    var mskHEX60gensym36_2885694942 = (t_2885694929.data).length - 1;
    if ((0 <= i_2885694938)) {
    t_2885694929.counter = subInt(t_2885694929.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2885694949 = i_2885694938;
            var rHEX60gensym36_2885694950 = jHEX60gensym36_2885694949;
            t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field0 = 0;
            t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field1 = nimCopy(t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2885694938 = (addInt(i_2885694938, 1) & mskHEX60gensym36_2885694942);
                  if (isEmpty_1308622877(t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2885694950 = (t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)].Field0 & mskHEX60gensym36_2885694942);
                  if (!(((((rHEX60gensym36_2885694950 <= i_2885694938) && (jHEX60gensym36_2885694949 < rHEX60gensym36_2885694950)) || ((jHEX60gensym36_2885694949 < rHEX60gensym36_2885694950) && (i_2885694938 < jHEX60gensym36_2885694949))) || ((i_2885694938 < jHEX60gensym36_2885694949) && (rHEX60gensym36_2885694950 <= i_2885694938))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2885694929.data[chckIndx(jHEX60gensym36_2885694949, 0, (t_2885694929.data).length - 1)] = nimCopy(t_2885694929.data[chckIndx(jHEX60gensym36_2885694949, 0, (t_2885694929.data).length - 1)], t_2885694929.data[chckIndx(i_2885694938, 0, (t_2885694929.data).length - 1)], NTI2885681240);
          }
      };
    };
    }
    

  
}

function remove_2885695685(L_2885695687, n_2885695688) {
    if ((n_2885695688 == L_2885695687.tail)) {
    L_2885695687.tail = n_2885695688.prev;
    }
    
    if ((n_2885695688 == L_2885695687.head)) {
    L_2885695687.head = n_2885695688.next;
    }
    
    if (!((n_2885695688.next == null))) {
    n_2885695688.next.prev = n_2885695688.prev;
    }
    
    if (!((n_2885695688.prev == null))) {
    n_2885695688.prev.next = n_2885695688.next;
    }
    

  
}

function resize_2885694669(cache_2885694672) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2885694672.capacity < len_2885694751(cache_2885694672))) break Label2;
          var t_2885694839 = cache_2885694672.list.tail;
          if (cache_2885694672.recordRemovedKeys) {
          incl_2885688436(cache_2885694672.removedKeys, t_2885694839.value.key);
          }
          
          del_2885694926(cache_2885694672.table, t_2885694839.value.key);
          remove_2885695685(cache_2885694672.list, t_2885694839);
        }
    };

  
}

function addNewNode_2885692740(cache_2885692743, key_2885692744, val_2885692745) {
    var node_2885692766 = newDoublyLinkedNode_2885692748({key: nimCopy(null, key_2885692744, NTI2885681180), val: val_2885692745});
    HEX5BHEX5DHEX3D_2885692830(cache_2885692743.table, key_2885692744, node_2885692766);
    prepend_2885694441(cache_2885692743.list, node_2885692766);
    if (cache_2885692743.recordRemovedKeys) {
    excl_2885687265(cache_2885692743.removedKeys, key_2885692744);
    }
    
    resize_2885694669(cache_2885692743);

  
}

function HEX5BHEX5DHEX3D_2885692612(cache_2885692615, key_2885692616, val_2885692617) {
    var node_2885692713 = getOrDefault_2885683827(cache_2885692615.table, key_2885692616, null);
    if ((node_2885692713 == null)) {
    addNewNode_2885692740(cache_2885692615, key_2885692616, val_2885692617);
    }
    else {
      node_2885692713.value.val = val_2885692617;
      remove_2885695685(cache_2885692615.list, node_2885692713);
      prepend_2885694441(cache_2885692615.list, node_2885692713);
    }
    

  
}

function rawGet_2885691341(t_2885691344, key_2885691345, hc_2885691346, hc_2885691346_Idx) {
  var result_2885691347 = 0;

  BeforeRet: {
    hc_2885691346[hc_2885691346_Idx] = hash_2885683844(key_2885691345);
    if ((hc_2885691346[hc_2885691346_Idx] == 0)) {
    hc_2885691346[hc_2885691346_Idx] = 314159265;
    }
    
    if (((t_2885691344.data).length == 0)) {
    result_2885691347 = -1;
    break BeforeRet;
    }
    
    var h_2885691436 = (hc_2885691346[hc_2885691346_Idx] & (t_2885691344.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885691344.data[chckIndx(h_2885691436, 0, (t_2885691344.data).length - 1)].Field0)) break Label2;
          if (((t_2885691344.data[chckIndx(h_2885691436, 0, (t_2885691344.data).length - 1)].Field0 == hc_2885691346[hc_2885691346_Idx]) && HEX3DHEX3D_2885684181(t_2885691344.data[chckIndx(h_2885691436, 0, (t_2885691344.data).length - 1)].Field1, key_2885691345))) {
          result_2885691347 = h_2885691436;
          break BeforeRet;
          }
          
          h_2885691436 = nextTry_1308622883(h_2885691436, (t_2885691344.data).length - 1);
        }
    };
    result_2885691347 = subInt(-1, h_2885691436);
  };

  return result_2885691347;

}

function getOrDefault_2885696289(t_2885696292, key_2885696293, default_2885696294) {
    var Temporary1;

  var result_2885696295 = null;

    var hcHEX60gensym90_2885696298 = [0];
    var indexHEX60gensym90_2885696305 = rawGet_2885691341(t_2885696292, key_2885696293, hcHEX60gensym90_2885696298, 0);
    if ((0 <= indexHEX60gensym90_2885696305)) {
    Temporary1 = t_2885696292.data[chckIndx(indexHEX60gensym90_2885696305, 0, (t_2885696292.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2885696294;
    }
    
    result_2885696295 = Temporary1;

  return result_2885696295;

}

function newDoublyLinkedNode_2885696421(value_2885696423) {
  var result_2885696424 = null;

    result_2885696424 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_2885696424.value = nimCopy(result_2885696424.value, value_2885696423, NTI2885681283);

  return result_2885696424;

}

function mustRehash_2885696771(t_2885696773) {
  var result_2885696774 = false;

    if (!((t_2885696773.counter < (t_2885696773.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885696774 = ((mulInt((t_2885696773.data).length, 2) < mulInt(t_2885696773.counter, 3)) || (subInt((t_2885696773.data).length, t_2885696773.counter) < 4));

  return result_2885696774;

}

function rawInsert_2885697464(t_2885697468, data_2885697469, data_2885697469_Idx, key_2885697470, val_2885697471, hc_2885697472, h_2885697473) {
    data_2885697469[data_2885697469_Idx][chckIndx(h_2885697473, 0, (data_2885697469[data_2885697469_Idx]).length - 1)].Field1 = nimCopy(data_2885697469[data_2885697469_Idx][chckIndx(h_2885697473, 0, (data_2885697469[data_2885697469_Idx]).length - 1)].Field1, key_2885697470, NTI2885681180);
    data_2885697469[data_2885697469_Idx][chckIndx(h_2885697473, 0, (data_2885697469[data_2885697469_Idx]).length - 1)].Field2 = val_2885697471;
    data_2885697469[data_2885697469_Idx][chckIndx(h_2885697473, 0, (data_2885697469[data_2885697469_Idx]).length - 1)].Field0 = hc_2885697472;

  
}

function enlarge_2885697028(t_2885697031) {
    var n_2885697034 = [];
    n_2885697034 = new Array(chckRange(mulInt((t_2885697031.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2885697031.data).length, 2), 0, 2147483647) ; ++i) { n_2885697034[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2885697031.data; t_2885697031.data = n_2885697034; n_2885697034 = Temporary1;    Label2: {
      var i_2885697132 = 0;
      var colontmp__2818572460 = 0;
      colontmp__2818572460 = (n_2885697034).length - 1;
      var res_2818572461 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572461 <= colontmp__2818572460)) break Label4;
            i_2885697132 = res_2818572461;
            var eh_2885697213 = n_2885697034[chckIndx(i_2885697132, 0, (n_2885697034).length - 1)].Field0;
            if (isFilled_1308622880(eh_2885697213)) {
            var j_2885697217 = (eh_2885697213 & (t_2885697031.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2885697031.data[chckIndx(j_2885697217, 0, (t_2885697031.data).length - 1)].Field0)) break Label6;
                  j_2885697217 = nextTry_1308622883(j_2885697217, (t_2885697031.data).length - 1);
                }
            };
            rawInsert_2885697464(t_2885697031, t_2885697031, "data", n_2885697034[chckIndx(i_2885697132, 0, (n_2885697034).length - 1)].Field1, n_2885697034[chckIndx(i_2885697132, 0, (n_2885697034).length - 1)].Field2, eh_2885697213, j_2885697217);
            }
            
            res_2818572461 = addInt(res_2818572461, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2885697714(t_2885697717, key_2885697718, hc_2885697719) {
  var result_2885697720 = 0;

  BeforeRet: {
    if (((t_2885697717.data).length == 0)) {
    result_2885697720 = -1;
    break BeforeRet;
    }
    
    var h_2885697805 = (hc_2885697719 & (t_2885697717.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885697717.data[chckIndx(h_2885697805, 0, (t_2885697717.data).length - 1)].Field0)) break Label2;
          if (((t_2885697717.data[chckIndx(h_2885697805, 0, (t_2885697717.data).length - 1)].Field0 == hc_2885697719) && HEX3DHEX3D_2885684181(t_2885697717.data[chckIndx(h_2885697805, 0, (t_2885697717.data).length - 1)].Field1, key_2885697718))) {
          result_2885697720 = h_2885697805;
          break BeforeRet;
          }
          
          h_2885697805 = nextTry_1308622883(h_2885697805, (t_2885697717.data).length - 1);
        }
    };
    result_2885697720 = subInt(-1, h_2885697805);
  };

  return result_2885697720;

}

function HEX5BHEX5DHEX3D_2885696503(t_2885696506, key_2885696507, val_2885696508) {
    if (((t_2885696506.data).length == 0)) {
    var correctSizeHEX60gensym93_2885696591 = slotsNeeded_1308622891(32);
    t_2885696506.counter = 0;
    t_2885696506.data = new Array(chckRange(correctSizeHEX60gensym93_2885696591, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_2885696591, 0, 2147483647) ; ++i) { t_2885696506.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2885696596 = [0];
    var index_2885696603 = rawGet_2885691341(t_2885696506, key_2885696507, hc_2885696596, 0);
    if ((0 <= index_2885696603)) {
    t_2885696506.data[chckIndx(index_2885696603, 0, (t_2885696506.data).length - 1)].Field2 = val_2885696508;
    }
    else {
      if (((t_2885696506.data).length == 0)) {
      var correctSizeHEX60gensym96_2885696766 = slotsNeeded_1308622891(32);
      t_2885696506.counter = 0;
      t_2885696506.data = new Array(chckRange(correctSizeHEX60gensym96_2885696766, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_2885696766, 0, 2147483647) ; ++i) { t_2885696506.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2885696771(t_2885696506)) {
      enlarge_2885697028(t_2885696506);
      index_2885696603 = rawGetKnownHC_2885697714(t_2885696506, key_2885696507, hc_2885696596[0]);
      }
      
      index_2885696603 = subInt(-1, index_2885696603);
      rawInsert_2885697464(t_2885696506, t_2885696506, "data", key_2885696507, val_2885696508, hc_2885696596[0], index_2885696603);
      t_2885696506.counter = addInt(t_2885696506.counter, 1);
    }
    

  
}

function prepend_2885692360(L_2885692362, n_2885692363) {
    n_2885692363.prev = null;
    n_2885692363.next = L_2885692362.head;
    if (!((L_2885692362.head == null))) {
    if (!((L_2885692362.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2885692362.head.prev = n_2885692363;
    }
    
    L_2885692362.head = n_2885692363;
    if ((L_2885692362.tail == null)) {
    L_2885692362.tail = n_2885692363;
    }
    

  
}

function len_2885698325(t_2885698328) {
  var result_2885698329 = 0;

    result_2885698329 = t_2885698328.counter;

  return result_2885698329;

}

function len_2885698242(cache_2885698245) {
  var result_2885698246 = 0;

    result_2885698246 = len_2885698325(cache_2885698245.table);

  return result_2885698246;

}

function del_2885698417(t_2885698420, key_2885698421) {
    var hc_2885698422 = [0];
    var i_2885698429 = rawGet_2885691341(t_2885698420, key_2885698421, hc_2885698422, 0);
    var mskHEX60gensym36_2885698433 = (t_2885698420.data).length - 1;
    if ((0 <= i_2885698429)) {
    t_2885698420.counter = subInt(t_2885698420.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2885698440 = i_2885698429;
            var rHEX60gensym36_2885698441 = jHEX60gensym36_2885698440;
            t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field0 = 0;
            t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field1 = nimCopy(t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2885698429 = (addInt(i_2885698429, 1) & mskHEX60gensym36_2885698433);
                  if (isEmpty_1308622877(t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2885698441 = (t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)].Field0 & mskHEX60gensym36_2885698433);
                  if (!(((((rHEX60gensym36_2885698441 <= i_2885698429) && (jHEX60gensym36_2885698440 < rHEX60gensym36_2885698441)) || ((jHEX60gensym36_2885698440 < rHEX60gensym36_2885698441) && (i_2885698429 < jHEX60gensym36_2885698440))) || ((i_2885698429 < jHEX60gensym36_2885698440) && (rHEX60gensym36_2885698441 <= i_2885698429))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2885698420.data[chckIndx(jHEX60gensym36_2885698440, 0, (t_2885698420.data).length - 1)] = nimCopy(t_2885698420.data[chckIndx(jHEX60gensym36_2885698440, 0, (t_2885698420.data).length - 1)], t_2885698420.data[chckIndx(i_2885698429, 0, (t_2885698420.data).length - 1)], NTI2885681319);
          }
      };
    };
    }
    

  
}

function remove_2885692068(L_2885692070, n_2885692071) {
    if ((n_2885692071 == L_2885692070.tail)) {
    L_2885692070.tail = n_2885692071.prev;
    }
    
    if ((n_2885692071 == L_2885692070.head)) {
    L_2885692070.head = n_2885692071.next;
    }
    
    if (!((n_2885692071.next == null))) {
    n_2885692071.next.prev = n_2885692071.prev;
    }
    
    if (!((n_2885692071.prev == null))) {
    n_2885692071.prev.next = n_2885692071.next;
    }
    

  
}

function resize_2885698160(cache_2885698163) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2885698163.capacity < len_2885698242(cache_2885698163))) break Label2;
          var t_2885698330 = cache_2885698163.list.tail;
          if (cache_2885698163.recordRemovedKeys) {
          incl_2885688436(cache_2885698163.removedKeys, t_2885698330.value.key);
          }
          
          del_2885698417(cache_2885698163.table, t_2885698330.value.key);
          remove_2885692068(cache_2885698163.list, t_2885698330);
        }
    };

  
}

function addNewNode_2885696413(cache_2885696416, key_2885696417, val_2885696418) {
    var node_2885696439 = newDoublyLinkedNode_2885696421({key: nimCopy(null, key_2885696417, NTI2885681180), val: nimCopy(null, val_2885696418, NTI2885681176)});
    HEX5BHEX5DHEX3D_2885696503(cache_2885696416.table, key_2885696417, node_2885696439);
    prepend_2885692360(cache_2885696416.list, node_2885696439);
    if (cache_2885696416.recordRemovedKeys) {
    excl_2885687265(cache_2885696416.removedKeys, key_2885696417);
    }
    
    resize_2885698160(cache_2885696416);

  
}

function HEX5BHEX5DHEX3D_2885696194(cache_2885696197, key_2885696198, val_2885696199) {
    var node_2885696386 = getOrDefault_2885696289(cache_2885696197.table, key_2885696198, null);
    if ((node_2885696386 == null)) {
    addNewNode_2885696413(cache_2885696197, key_2885696198, val_2885696199);
    }
    else {
      node_2885696386.value.val = nimCopy(null, val_2885696199, NTI2885681176);
      remove_2885692068(cache_2885696197.list, node_2885696386);
      prepend_2885692360(cache_2885696197.list, node_2885696386);
    }
    

  
}

function markRed_2885695989(graph_2885695990, key_2885695991, fingerprint_2885695992) {
    HEX5BHEX5DHEX3D_2885692612(graph_2885695990.verified, key_2885695991, graph_2885695990.revision);
    HEX5BHEX5DHEX3D_2885692612(graph_2885695990.changed, key_2885695991, graph_2885695990.revision);
    HEX5BHEX5DHEX3D_2885696194(graph_2885695990.fingerprints, key_2885695991, fingerprint_2885695992);

  
}

function rawGet_2885684702(t_2885684705, key_2885684706, hc_2885684707, hc_2885684707_Idx) {
  var result_2885684708 = 0;

  BeforeRet: {
    hc_2885684707[hc_2885684707_Idx] = hash_2885683844(key_2885684706);
    if ((hc_2885684707[hc_2885684707_Idx] == 0)) {
    hc_2885684707[hc_2885684707_Idx] = 314159265;
    }
    
    if (((t_2885684705.data).length == 0)) {
    result_2885684708 = -1;
    break BeforeRet;
    }
    
    var h_2885684797 = (hc_2885684707[hc_2885684707_Idx] & (t_2885684705.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885684705.data[chckIndx(h_2885684797, 0, (t_2885684705.data).length - 1)].Field0)) break Label2;
          if (((t_2885684705.data[chckIndx(h_2885684797, 0, (t_2885684705.data).length - 1)].Field0 == hc_2885684707[hc_2885684707_Idx]) && HEX3DHEX3D_2885684181(t_2885684705.data[chckIndx(h_2885684797, 0, (t_2885684705.data).length - 1)].Field1, key_2885684706))) {
          result_2885684708 = h_2885684797;
          break BeforeRet;
          }
          
          h_2885684797 = nextTry_1308622883(h_2885684797, (t_2885684705.data).length - 1);
        }
    };
    result_2885684708 = subInt(-1, h_2885684797);
  };

  return result_2885684708;

}

function getOrDefault_2885684692(t_2885684695, key_2885684696, default_2885684697) {
    var Temporary1;

  var result_2885684698 = null;

    var hcHEX60gensym28_2885684701 = [0];
    var indexHEX60gensym28_2885685054 = rawGet_2885684702(t_2885684695, key_2885684696, hcHEX60gensym28_2885684701, 0);
    if ((0 <= indexHEX60gensym28_2885685054)) {
    Temporary1 = t_2885684695.data[chckIndx(indexHEX60gensym28_2885685054, 0, (t_2885684695.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2885684697;
    }
    
    result_2885684698 = Temporary1;

  return result_2885684698;

}

function newDoublyLinkedNode_2885685371(value_2885685373) {
  var result_2885685374 = null;

    result_2885685374 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_2885685374.value = nimCopy(result_2885685374.value, value_2885685373, NTI2885681350);

  return result_2885685374;

}

function mustRehash_2885685721(t_2885685723) {
  var result_2885685724 = false;

    if (!((t_2885685723.counter < (t_2885685723.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885685724 = ((mulInt((t_2885685723.data).length, 2) < mulInt(t_2885685723.counter, 3)) || (subInt((t_2885685723.data).length, t_2885685723.counter) < 4));

  return result_2885685724;

}

function rawInsert_2885686414(t_2885686418, data_2885686419, data_2885686419_Idx, key_2885686420, val_2885686421, hc_2885686422, h_2885686423) {
    data_2885686419[data_2885686419_Idx][chckIndx(h_2885686423, 0, (data_2885686419[data_2885686419_Idx]).length - 1)].Field1 = nimCopy(data_2885686419[data_2885686419_Idx][chckIndx(h_2885686423, 0, (data_2885686419[data_2885686419_Idx]).length - 1)].Field1, key_2885686420, NTI2885681180);
    data_2885686419[data_2885686419_Idx][chckIndx(h_2885686423, 0, (data_2885686419[data_2885686419_Idx]).length - 1)].Field2 = val_2885686421;
    data_2885686419[data_2885686419_Idx][chckIndx(h_2885686423, 0, (data_2885686419[data_2885686419_Idx]).length - 1)].Field0 = hc_2885686422;

  
}

function enlarge_2885685978(t_2885685981) {
    var n_2885685984 = [];
    n_2885685984 = new Array(chckRange(mulInt((t_2885685981.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2885685981.data).length, 2), 0, 2147483647) ; ++i) { n_2885685984[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2885685981.data; t_2885685981.data = n_2885685984; n_2885685984 = Temporary1;    Label2: {
      var i_2885686082 = 0;
      var colontmp__2818572470 = 0;
      colontmp__2818572470 = (n_2885685984).length - 1;
      var res_2818572471 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572471 <= colontmp__2818572470)) break Label4;
            i_2885686082 = res_2818572471;
            var eh_2885686163 = n_2885685984[chckIndx(i_2885686082, 0, (n_2885685984).length - 1)].Field0;
            if (isFilled_1308622880(eh_2885686163)) {
            var j_2885686167 = (eh_2885686163 & (t_2885685981.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2885685981.data[chckIndx(j_2885686167, 0, (t_2885685981.data).length - 1)].Field0)) break Label6;
                  j_2885686167 = nextTry_1308622883(j_2885686167, (t_2885685981.data).length - 1);
                }
            };
            rawInsert_2885686414(t_2885685981, t_2885685981, "data", n_2885685984[chckIndx(i_2885686082, 0, (n_2885685984).length - 1)].Field1, n_2885685984[chckIndx(i_2885686082, 0, (n_2885685984).length - 1)].Field2, eh_2885686163, j_2885686167);
            }
            
            res_2818572471 = addInt(res_2818572471, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2885686664(t_2885686667, key_2885686668, hc_2885686669) {
  var result_2885686670 = 0;

  BeforeRet: {
    if (((t_2885686667.data).length == 0)) {
    result_2885686670 = -1;
    break BeforeRet;
    }
    
    var h_2885686755 = (hc_2885686669 & (t_2885686667.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885686667.data[chckIndx(h_2885686755, 0, (t_2885686667.data).length - 1)].Field0)) break Label2;
          if (((t_2885686667.data[chckIndx(h_2885686755, 0, (t_2885686667.data).length - 1)].Field0 == hc_2885686669) && HEX3DHEX3D_2885684181(t_2885686667.data[chckIndx(h_2885686755, 0, (t_2885686667.data).length - 1)].Field1, key_2885686668))) {
          result_2885686670 = h_2885686755;
          break BeforeRet;
          }
          
          h_2885686755 = nextTry_1308622883(h_2885686755, (t_2885686667.data).length - 1);
        }
    };
    result_2885686670 = subInt(-1, h_2885686755);
  };

  return result_2885686670;

}

function HEX5BHEX5DHEX3D_2885685453(t_2885685456, key_2885685457, val_2885685458) {
    if (((t_2885685456.data).length == 0)) {
    var correctSizeHEX60gensym34_2885685541 = slotsNeeded_1308622891(32);
    t_2885685456.counter = 0;
    t_2885685456.data = new Array(chckRange(correctSizeHEX60gensym34_2885685541, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_2885685541, 0, 2147483647) ; ++i) { t_2885685456.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2885685546 = [0];
    var index_2885685553 = rawGet_2885684702(t_2885685456, key_2885685457, hc_2885685546, 0);
    if ((0 <= index_2885685553)) {
    t_2885685456.data[chckIndx(index_2885685553, 0, (t_2885685456.data).length - 1)].Field2 = val_2885685458;
    }
    else {
      if (((t_2885685456.data).length == 0)) {
      var correctSizeHEX60gensym37_2885685716 = slotsNeeded_1308622891(32);
      t_2885685456.counter = 0;
      t_2885685456.data = new Array(chckRange(correctSizeHEX60gensym37_2885685716, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2885685716, 0, 2147483647) ; ++i) { t_2885685456.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2885685721(t_2885685456)) {
      enlarge_2885685978(t_2885685456);
      index_2885685553 = rawGetKnownHC_2885686664(t_2885685456, key_2885685457, hc_2885685546[0]);
      }
      
      index_2885685553 = subInt(-1, index_2885685553);
      rawInsert_2885686414(t_2885685456, t_2885685456, "data", key_2885685457, val_2885685458, hc_2885685546[0], index_2885685553);
      t_2885685456.counter = addInt(t_2885685456.counter, 1);
    }
    

  
}

function prepend_2885687064(L_2885687066, n_2885687067) {
    n_2885687067.prev = null;
    n_2885687067.next = L_2885687066.head;
    if (!((L_2885687066.head == null))) {
    if (!((L_2885687066.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2885687066.head.prev = n_2885687067;
    }
    
    L_2885687066.head = n_2885687067;
    if ((L_2885687066.tail == null)) {
    L_2885687066.tail = n_2885687067;
    }
    

  
}

function len_2885688411(t_2885688414) {
  var result_2885688415 = 0;

    result_2885688415 = t_2885688414.counter;

  return result_2885688415;

}

function len_2885688328(cache_2885688331) {
  var result_2885688332 = 0;

    result_2885688332 = len_2885688411(cache_2885688331.table);

  return result_2885688332;

}

function del_2885690018(t_2885690021, key_2885690022) {
    var hc_2885690023 = [0];
    var i_2885690030 = rawGet_2885684702(t_2885690021, key_2885690022, hc_2885690023, 0);
    var mskHEX60gensym36_2885690034 = (t_2885690021.data).length - 1;
    if ((0 <= i_2885690030)) {
    t_2885690021.counter = subInt(t_2885690021.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2885690041 = i_2885690030;
            var rHEX60gensym36_2885690042 = jHEX60gensym36_2885690041;
            t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field0 = 0;
            t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field1 = nimCopy(t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2885690030 = (addInt(i_2885690030, 1) & mskHEX60gensym36_2885690034);
                  if (isEmpty_1308622877(t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2885690042 = (t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)].Field0 & mskHEX60gensym36_2885690034);
                  if (!(((((rHEX60gensym36_2885690042 <= i_2885690030) && (jHEX60gensym36_2885690041 < rHEX60gensym36_2885690042)) || ((jHEX60gensym36_2885690041 < rHEX60gensym36_2885690042) && (i_2885690030 < jHEX60gensym36_2885690041))) || ((i_2885690030 < jHEX60gensym36_2885690041) && (rHEX60gensym36_2885690042 <= i_2885690030))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2885690021.data[chckIndx(jHEX60gensym36_2885690041, 0, (t_2885690021.data).length - 1)] = nimCopy(t_2885690021.data[chckIndx(jHEX60gensym36_2885690041, 0, (t_2885690021.data).length - 1)], t_2885690021.data[chckIndx(i_2885690030, 0, (t_2885690021.data).length - 1)], NTI2885681386);
          }
      };
    };
    }
    

  
}

function remove_2885690777(L_2885690779, n_2885690780) {
    if ((n_2885690780 == L_2885690779.tail)) {
    L_2885690779.tail = n_2885690780.prev;
    }
    
    if ((n_2885690780 == L_2885690779.head)) {
    L_2885690779.head = n_2885690780.next;
    }
    
    if (!((n_2885690780.next == null))) {
    n_2885690780.next.prev = n_2885690780.prev;
    }
    
    if (!((n_2885690780.prev == null))) {
    n_2885690780.prev.next = n_2885690780.next;
    }
    

  
}

function resize_2885688246(cache_2885688249) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2885688249.capacity < len_2885688328(cache_2885688249))) break Label2;
          var t_2885688416 = cache_2885688249.list.tail;
          if (cache_2885688249.recordRemovedKeys) {
          incl_2885688436(cache_2885688249.removedKeys, t_2885688416.value.key);
          }
          
          del_2885690018(cache_2885688249.table, t_2885688416.value.key);
          remove_2885690777(cache_2885688249.list, t_2885688416);
        }
    };

  
}

function addNewNode_2885685363(cache_2885685366, key_2885685367, val_2885685368) {
    var node_2885685389 = newDoublyLinkedNode_2885685371({key: nimCopy(null, key_2885685367, NTI2885681180), val: nimCopy(null, val_2885685368, NTI2885681336)});
    HEX5BHEX5DHEX3D_2885685453(cache_2885685366.table, key_2885685367, node_2885685389);
    prepend_2885687064(cache_2885685366.list, node_2885685389);
    if (cache_2885685366.recordRemovedKeys) {
    excl_2885687265(cache_2885685366.removedKeys, key_2885685367);
    }
    
    resize_2885688246(cache_2885685366);

  
}

function HEX5BHEX5DHEX3D_2885685235(cache_2885685238, key_2885685239, val_2885685240) {
    var node_2885685336 = getOrDefault_2885684692(cache_2885685238.table, key_2885685239, null);
    if ((node_2885685336 == null)) {
    addNewNode_2885685363(cache_2885685238, key_2885685239, val_2885685240);
    }
    else {
      node_2885685336.value.val = nimCopy(null, val_2885685240, NTI2885681336);
      remove_2885690777(cache_2885685238.list, node_2885685336);
      prepend_2885687064(cache_2885685238.list, node_2885685336);
    }
    

  
}

function clearEdges_2885685165(graph_2885685166, key_2885685167) {
    HEX5BHEX5DHEX3D_2885685235(graph_2885685166.dependencies, key_2885685167, []);

  
}

function setDependencies_2885691081(graph_2885691082, key_2885691083, deps_2885691084) {
    HEX5BHEX5DHEX3D_2885685235(graph_2885691082.dependencies, key_2885691083, deps_2885691084);

  
}

function pop_2868974721(s_2868974723, s_2868974723_Idx) {
  var result_2868974724 = [];

    var L_2868974728 = subInt((s_2868974723[s_2868974723_Idx]).length, 1);
    result_2868974724 = nimCopy(null, s_2868974723[s_2868974723_Idx][chckIndx(L_2868974728, 0, (s_2868974723[s_2868974723_Idx]).length - 1)], NTI2868903964);
    if (s_2868974723[s_2868974723_Idx].length < chckRange(L_2868974728, 0, 2147483647)) { for (var i = s_2868974723[s_2868974723_Idx].length ; i < chckRange(L_2868974728, 0, 2147483647) ; ++i) s_2868974723[s_2868974723_Idx].push([]); }
               else { s_2868974723[s_2868974723_Idx].length = chckRange(L_2868974728, 0, 2147483647); };

  return result_2868974724;

}

function pop_2868974752(s_2868974754, s_2868974754_Idx) {
  var result_2868974755 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_2868974759 = subInt((s_2868974754[s_2868974754_Idx]).length, 1);
    result_2868974755 = nimCopy(result_2868974755, s_2868974754[s_2868974754_Idx][chckIndx(L_2868974759, 0, (s_2868974754[s_2868974754_Idx]).length - 1)], NTI2885681180);
    if (s_2868974754[s_2868974754_Idx].length < chckRange(L_2868974759, 0, 2147483647)) { for (var i = s_2868974754[s_2868974754_Idx].length ; i < chckRange(L_2868974759, 0, 2147483647) ; ++i) s_2868974754[s_2868974754_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_2868974754[s_2868974754_Idx].length = chckRange(L_2868974759, 0, 2147483647); };

  return result_2868974755;

}

function hasKey_2885691334(t_2885691337, key_2885691338) {
  var result_2885691339 = false;

    var hc_2885691340 = [0];
    result_2885691339 = (0 <= rawGet_2885691341(t_2885691337, key_2885691338, hc_2885691340, 0));

  return result_2885691339;

}

function contains_2885691328(t_2885691331, key_2885691332) {
  var result_2885691333 = false;

  BeforeRet: {
    result_2885691333 = hasKey_2885691334(t_2885691331, key_2885691332);
    break BeforeRet;
  };

  return result_2885691333;

}

function contains_2885691234(cache_2885691237, key_2885691238) {
  var result_2885691239 = false;

    result_2885691239 = contains_2885691328(cache_2885691237.table, key_2885691238);

  return result_2885691239;

}

function HEX5BHEX5D_2885691859(t_2885691862, key_2885691863) {
  var result_2885691864 = null;
  var result_2885691864_Idx = 0;

    var hcHEX60gensym22_2885691865 = [0];
    var indexHEX60gensym22_2885691872 = rawGet_2885691341(t_2885691862, key_2885691863, hcHEX60gensym22_2885691865, 0);
    if ((0 <= indexHEX60gensym22_2885691872)) {
    result_2885691864 = t_2885691862.data[chckIndx(indexHEX60gensym22_2885691872, 0, (t_2885691862.data).length - 1)]; result_2885691864_Idx = "Field2";
    }
    else {
    raiseKeyError_2885691953(key_2885691863);
    }
    

  return [result_2885691864, result_2885691864_Idx];

}

function HEX5BHEX5D_2885691773(cache_2885691776, key_2885691777) {
    var Temporary1;

  var result_2885691778 = [];

    var node_2885692054 = (Temporary1 = HEX5BHEX5D_2885691859(cache_2885691776.table, key_2885691777), Temporary1)[0][Temporary1[1]];
    result_2885691778 = nimCopy(null, node_2885692054.value.val, NTI2885681176);
    remove_2885692068(cache_2885691776.list, node_2885692054);
    prepend_2885692360(cache_2885691776.list, node_2885692054);

  return result_2885691778;

}

function fingerprint_2885691154(graph_2885691155, key_2885691156) {
  var result_2885691157 = [];

  BeforeRet: {
    if (contains_2885691234(graph_2885691155.fingerprints, key_2885691156)) {
    result_2885691157 = nimCopy(null, HEX5BHEX5D_2885691773(graph_2885691155.fingerprints, key_2885691156), NTI2885681176);
    break BeforeRet;
    }
    
  };

  return result_2885691157;

}

function HEX3DHEX3D_2868974765(x_2868974767, y_2868974768) {
  var result_2868974769 = false;

  BeforeRet: {
    var sameObject_2868974776 = false;
    sameObject_2868974776 = x_2868974767 === y_2868974768
    if (sameObject_2868974776) {
    result_2868974769 = true;
    break BeforeRet;
    }
    
    if (!(((x_2868974767).length == (y_2868974768).length))) {
    result_2868974769 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2868974790 = 0;
      var colontmp__2818572478 = 0;
      colontmp__2818572478 = subInt((x_2868974767).length, 1);
      var res_2818572479 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572479 <= colontmp__2818572478)) break Label3;
            i_2868974790 = res_2818572479;
            if (!((x_2868974767[chckIndx(i_2868974790, 0, (x_2868974767).length - 1)] == y_2868974768[chckIndx(i_2868974790, 0, (y_2868974768).length - 1)]))) {
            result_2868974769 = false;
            break BeforeRet;
            }
            
            res_2818572479 = addInt(res_2818572479, 1);
          }
      };
    };
    result_2868974769 = true;
    break BeforeRet;
  };

  return result_2868974769;

}

function markGreen_2885692546(graph_2885692547, key_2885692548) {
    HEX5BHEX5DHEX3D_2885692612(graph_2885692547.verified, key_2885692548, graph_2885692547.revision);

  
}

function force_2868973807(ctxHEX60gensym88_2868973808, keyHEX60gensym88_2868973809) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_2868973808.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary1);
    try {
    if (ctxHEX60gensym88_2868973808.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_2868973900(ctxHEX60gensym88_2868973808.depGraph.queryNames, keyHEX60gensym88_2868973809.Field1), Temporary3)[0][Temporary3[1]], HEX24_2885681364(keyHEX60gensym88_2868973809.Field0));
    }
    
    if (contains_2868974073(ctxHEX60gensym88_2868973808.activeQuerySet, keyHEX60gensym88_2868973809)) {
    incl_2885688436(ctxHEX60gensym88_2868973808.recursiveQueries, keyHEX60gensym88_2868973809);
    var itemHEX60gensym88_2868974116 = nimCopy(null, keyHEX60gensym88_2868973809.Field0, NTI2885681177);
    var queryHEX60gensym88_2868974202 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2868973900(ctxHEX60gensym88_2868973808.depGraph.queryNames, keyHEX60gensym88_2868973809.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_2885681364(itemHEX60gensym88_2868974116), [32,40], queryHEX60gensym88_2868974202, [41]);
    Label5: {
      var kHEX60gensym88_2868974210 = 0;
      var colontmp__2818572436 = 0;
      colontmp__2818572436 = (ctxHEX60gensym88_2868973808.activeQueryStack).length - 1;
      var res_2818572437 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2818572437 <= colontmp__2818572436)) break Label7;
            kHEX60gensym88_2868974210 = res_2818572437;
            var iHEX60gensym88_2868974214 = subInt(subInt((ctxHEX60gensym88_2868973808.activeQueryStack).length, kHEX60gensym88_2868974210), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_2868974210), [93,32,80,97,114,101,110,116,58,32], HEX24_2885681364(ctxHEX60gensym88_2868973808.activeQueryStack[chckIndx(iHEX60gensym88_2868974214, 0, (ctxHEX60gensym88_2868973808.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2868974304(ctxHEX60gensym88_2868973808.depGraph.queryNames, ctxHEX60gensym88_2868973808.activeQueryStack[chckIndx(iHEX60gensym88_2868974214, 0, (ctxHEX60gensym88_2868973808.activeQueryStack).length - 1)].Field1));
            res_2818572437 = addInt(res_2818572437, 1);
          }
      };
    };
    if (ctxHEX60gensym88_2868973808.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2868974476(ctxHEX60gensym88_2868973808.recoveryFunctions, keyHEX60gensym88_2868973809.Field1)) {
    (Temporary8 = HEX5BHEX5D_2868974575(ctxHEX60gensym88_2868973808.recoveryFunctions, keyHEX60gensym88_2868973809.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_2868973809);
    markRed_2885695989(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809, []);
    }
    
    break BeforeRet;
    }
    
    incl_2885688436(ctxHEX60gensym88_2868973808.activeQuerySet, keyHEX60gensym88_2868973809);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_2868973809, NTI2885681180);
    ctxHEX60gensym88_2868973808.activeQueryStack.push(Temporary9);;
    clearEdges_2885685165(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809);
    ctxHEX60gensym88_2868973808.dependencyStack.push([]);;
    recordDependency_2868957436(ctxHEX60gensym88_2868973808, keyHEX60gensym88_2868973809.Field0, -1);
    var fingerprintHEX60gensym88_2868974720 = ctxHEX60gensym88_2868973808.updateFunctions[chckIndx(keyHEX60gensym88_2868973809.Field1, 0, (ctxHEX60gensym88_2868973808.updateFunctions).length - 1)](keyHEX60gensym88_2868973809.Field0);
    setDependencies_2885691081(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809, pop_2868974721(ctxHEX60gensym88_2868973808, "dependencyStack"));
    excl_2885687265(ctxHEX60gensym88_2868973808.activeQuerySet, keyHEX60gensym88_2868973809);
    var _ = pop_2868974752(ctxHEX60gensym88_2868973808, "activeQueryStack");
    var prevFingerprintHEX60gensym88_2868974764 = fingerprint_2885691154(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809);
    if (HEX3DHEX3D_2868974765(fingerprintHEX60gensym88_2868974720, prevFingerprintHEX60gensym88_2868974764)) {
    if (ctxHEX60gensym88_2868973808.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_2885692546(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809);
    }
    else {
      if (ctxHEX60gensym88_2868973808.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_2885695989(ctxHEX60gensym88_2868973808.depGraph, keyHEX60gensym88_2868973809, fingerprintHEX60gensym88_2868974720);
    }
    
    } finally {
    if (ctxHEX60gensym88_2868973808.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary10);
    }
  };

  
}

function addQuoted_2952790499(s_2952790501, s_2952790501_Idx, x_2952790502) {
    s_2952790501[s_2952790501_Idx].push.apply(s_2952790501[s_2952790501_Idx], HEX24_2952790452(x_2952790502));;

  
}

function collectionToString_2952790459(x_2952790461, prefix_2952790462, separator_2952790463, suffix_2952790464) {
  var result_2952790465 = [[]];

    result_2952790465[0] = nimCopy(null, prefix_2952790462, NTI33554449);
    var firstElement_2952790466 = true;
    Label1: {
      var value_2952790489 = null;
      var i_2818572483 = 0;
      var L_2818572484 = (x_2952790461).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572483 < L_2818572484)) break Label3;
            value_2952790489 = x_2952790461[i_2818572483];
            if (firstElement_2952790466) {
            firstElement_2952790466 = false;
            }
            else {
            result_2952790465[0].push.apply(result_2952790465[0], separator_2952790463);;
            }
            
            if ((value_2952790489 == null)) {
            result_2952790465[0].push.apply(result_2952790465[0], [110,105,108]);;
            }
            else {
            addQuoted_2952790499(result_2952790465, 0, value_2952790489);
            }
            
            i_2818572483 += 1;
            if (!(((x_2952790461).length == L_2818572484))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2952790465[0].push.apply(result_2952790465[0], suffix_2952790464);;

  return result_2952790465[0];

}

function HEX24_2952790455(x_2952790457) {
  var result_2952790458 = [];

    result_2952790458 = nimCopy(null, collectionToString_2952790459(x_2952790457, [64,91], [44,32], [93]), NTI33554449);

  return result_2952790458;

}

function formatValue_2650803749(result_2650803751, result_2650803751_Idx, value_2650803752, specifier_2650803753) {
    formatValue_721420459(result_2650803751, result_2650803751_Idx, nimBoolToStr(value_2650803752), specifier_2650803753);

  
}

function HEX24_2952790452(typ_2952790453) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952790454 = [];

  BeforeRet: {
    switch (typ_2952790453.kind) {
    case 0:
      result_2952790454 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_2952790454 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_2952790454 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_2952790454 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_2952790453;
      if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790019)); }
      var Temporary2 = typ_2952790453;
      if (ConstSet61[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790019)); }
      result_2952790454 = nimCopy(null, (HEX24_2952790455(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_2952790452(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_2952790454 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_2952790518 = [mnewString(0)];
      fmtRes_2952790518[0].push.apply(fmtRes_2952790518[0], [97,110,121,40]);;
      var Temporary3 = typ_2952790453;
      if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790019)); }
      formatValue_2650803749(fmtRes_2952790518, 0, Temporary3.open, []);
      fmtRes_2952790518[0].push.apply(fmtRes_2952790518[0], [41]);;
      result_2952790454 = nimCopy(null, fmtRes_2952790518[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2952790454;

}

function raiseKeyError_2868976836(key_2868976838) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2852128727(key_2868976838) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2868976742(t_2868976745, key_2868976746) {
  var result_2868976747 = null;
  var result_2868976747_Idx = 0;

    var hcHEX60gensym22_2868976748 = [0];
    var indexHEX60gensym22_2868976755 = rawGet_2868906313(t_2868976745, key_2868976746, hcHEX60gensym22_2868976748, 0);
    if ((0 <= indexHEX60gensym22_2868976755)) {
    result_2868976747 = t_2868976745.data[chckIndx(indexHEX60gensym22_2868976755, 0, (t_2868976745.data).length - 1)]; result_2868976747_Idx = "Field2";
    }
    else {
    raiseKeyError_2868976836(key_2868976746);
    }
    

  return [result_2868976747, result_2868976747_Idx];

}

function remove_2868912199(L_2868912201, n_2868912202) {
    if ((n_2868912202 == L_2868912201.tail)) {
    L_2868912201.tail = n_2868912202.prev;
    }
    
    if ((n_2868912202 == L_2868912201.head)) {
    L_2868912201.head = n_2868912202.next;
    }
    
    if (!((n_2868912202.next == null))) {
    n_2868912202.next.prev = n_2868912202.prev;
    }
    
    if (!((n_2868912202.prev == null))) {
    n_2868912202.prev.next = n_2868912202.next;
    }
    

  
}

function prepend_2868908489(L_2868908491, n_2868908492) {
    n_2868908492.prev = null;
    n_2868908492.next = L_2868908491.head;
    if (!((L_2868908491.head == null))) {
    if (!((L_2868908491.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868908491.head.prev = n_2868908492;
    }
    
    L_2868908491.head = n_2868908492;
    if ((L_2868908491.tail == null)) {
    L_2868908491.tail = n_2868908492;
    }
    

  
}

function HEX5BHEX5D_2868976656(cache_2868976659, key_2868976660) {
    var Temporary1;

  var result_2868976661 = null;

    var node_2868976849 = (Temporary1 = HEX5BHEX5D_2868976742(cache_2868976659.table, key_2868976660), Temporary1)[0][Temporary1[1]];
    result_2868976661 = node_2868976849.value.val;
    remove_2868912199(cache_2868976659.list, node_2868976849);
    prepend_2868908489(cache_2868976659.list, node_2868976849);

  return result_2868976661;

}

function addQuoted_2868975014(s_2868975016, s_2868975016_Idx, x_2868975017) {
    s_2868975016[s_2868975016_Idx].push.apply(s_2868975016[s_2868975016_Idx], HEX24_2885692000(x_2868975017));;

  
}

function collectionToString_2868974981(x_2868974983, prefix_2868974984, separator_2868974985, suffix_2868974986) {
  var result_2868974987 = [[]];

    result_2868974987[0] = nimCopy(null, prefix_2868974984, NTI33554449);
    var firstElement_2868974988 = true;
    Label1: {
      var value_2868975010 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2818572499 = 0;
      var L_2818572500 = (x_2868974983).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572499 < L_2818572500)) break Label3;
            value_2868975010 = x_2868974983[i_2818572499];
            if (firstElement_2868974988) {
            firstElement_2868974988 = false;
            }
            else {
            result_2868974987[0].push.apply(result_2868974987[0], separator_2868974985);;
            }
            
            addQuoted_2868975014(result_2868974987, 0, value_2868975010);
            i_2818572499 += 1;
            if (!(((x_2868974983).length == L_2818572500))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2868974987[0].push.apply(result_2868974987[0], suffix_2868974986);;

  return result_2868974987[0];

}

function HEX24_2868974977(x_2868974979) {
  var result_2868974980 = [];

    result_2868974980 = nimCopy(null, collectionToString_2868974981(x_2868974979, [64,91], [44,32], [93]), NTI33554449);

  return result_2868974980;

}

function getOrDefault_2885684596(cache_2885684599, key_2885684600, val_2885684601) {
  var result_2885684602 = [];

    var node_2885685144 = getOrDefault_2885684692(cache_2885684599.table, key_2885684600, null);
    if ((node_2885685144 == null)) {
    result_2885684602 = nimCopy(null, val_2885684601, NTI2885681336);
    }
    else {
      result_2885684602 = nimCopy(null, node_2885685144.value.val, NTI2885681336);
    }
    

  return result_2885684602;

}

function getDependencies_2885684499(graph_2885684500, key_2885684501) {
  var result_2885684502 = [];

    result_2885684502 = nimCopy(null, getOrDefault_2885684596(graph_2885684500.dependencies, key_2885684501, []), NTI2885681336);
    if ((((result_2885684502).length == 0) && !((key_2885684501.Field1 == -1)))) {
    result_2885684502.push({Field0: nimCopy(null, key_2885684501.Field0, NTI2885681177), Field1: -1});;
    }
    

  return result_2885684502;

}

function tryMarkGreen_2868974822(ctxHEX60gensym89_2868974823, keyHEX60gensym89_2868974824, tryForceHEX60gensym89_2868974825) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_2868974826 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_2868974823.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary1);
    try {
    if (ctxHEX60gensym89_2868974823.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, keyHEX60gensym89_2868974824.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_2885681364(keyHEX60gensym89_2868974824.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_2868974977(getDependencies_2885684499(ctxHEX60gensym89_2868974823.depGraph, keyHEX60gensym89_2868974824)));
    }
    
    if (contains_2868974073(ctxHEX60gensym89_2868974823.activeQuerySet, keyHEX60gensym89_2868974824)) {
    incl_2885688436(ctxHEX60gensym89_2868974823.recursiveQueries, keyHEX60gensym89_2868974824);
    var itemHEX60gensym89_2868975126 = nimCopy(null, keyHEX60gensym89_2868974824.Field0, NTI2885681177);
    var queryHEX60gensym89_2868975212 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, keyHEX60gensym89_2868974824.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_2885681364(itemHEX60gensym89_2868975126), [32,40], queryHEX60gensym89_2868975212, [41]);
    Label5: {
      var kHEX60gensym89_2868975220 = 0;
      var colontmp__2818572487 = 0;
      colontmp__2818572487 = (ctxHEX60gensym89_2868974823.activeQueryStack).length - 1;
      var res_2818572488 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2818572488 <= colontmp__2818572487)) break Label7;
            kHEX60gensym89_2868975220 = res_2818572488;
            var iHEX60gensym89_2868975224 = subInt(subInt((ctxHEX60gensym89_2868974823.activeQueryStack).length, kHEX60gensym89_2868975220), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_2868975220), [93,32,80,97,114,101,110,116,58,32], HEX24_2885681364(ctxHEX60gensym89_2868974823.activeQueryStack[chckIndx(iHEX60gensym89_2868975224, 0, (ctxHEX60gensym89_2868974823.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2868974304(ctxHEX60gensym89_2868974823.depGraph.queryNames, ctxHEX60gensym89_2868974823.activeQueryStack[chckIndx(iHEX60gensym89_2868975224, 0, (ctxHEX60gensym89_2868974823.activeQueryStack).length - 1)].Field1));
            res_2818572488 = addInt(res_2818572488, 1);
          }
      };
    };
    if (ctxHEX60gensym89_2868974823.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2868974476(ctxHEX60gensym89_2868974823.recoveryFunctions, keyHEX60gensym89_2868974824.Field1)) {
    (Temporary8 = HEX5BHEX5D_2868974575(ctxHEX60gensym89_2868974823.recoveryFunctions, keyHEX60gensym89_2868974824.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_2868974824);
    markRed_2885695989(ctxHEX60gensym89_2868974823.depGraph, keyHEX60gensym89_2868974824, []);
    }
    
    result_2868974826 = 2;
    break BeforeRet;
    }
    
    incl_2885688436(ctxHEX60gensym89_2868974823.activeQuerySet, keyHEX60gensym89_2868974824);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_2868974824, NTI2885681180);
    ctxHEX60gensym89_2868974823.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_2868975633 = getOrDefault_2885683731(ctxHEX60gensym89_2868974823.depGraph.verified, keyHEX60gensym89_2868974824, 0);
    Label11: {
      var iHEX60gensym89_2868975657 = 0;
      var depHEX60gensym89_2868975658 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2818572492 = [];
      colontmp__2818572492 = getDependencies_2885684499(ctxHEX60gensym89_2868974823.depGraph, keyHEX60gensym89_2868974824);
      var i_2818572494 = 0;
      var L_2818572495 = (colontmp__2818572492).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2818572494 < L_2818572495)) break Label13;
            iHEX60gensym89_2868975657 = i_2818572494;
            depHEX60gensym89_2868975658 = nimCopy(depHEX60gensym89_2868975658, colontmp__2818572492[chckIndx(i_2818572494, 0, (colontmp__2818572492).length - 1)], NTI2885681180);
            Label14: {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_2868975658.Field0.Field0, null_2181038340)) {
              if (ctxHEX60gensym89_2868974823.enableLogging) {
              rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2868974826 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_2868975658.Field0.Field0, dependencyGlobalRevision_2885681184)) {
              if ((verifiedHEX60gensym89_2868975633 < ctxHEX60gensym89_2868974823.depGraph.revision)) {
              if (ctxHEX60gensym89_2868974823.enableLogging) {
              rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2868974826 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_2868974823.enableLogging) {
                rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_2885683637(ctxHEX60gensym89_2868974823.depGraph, depHEX60gensym89_2868975658, verifiedHEX60gensym89_2868975633)) {
              case 2:
                if (ctxHEX60gensym89_2868974823.enableLogging) {
                rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_2868974823.enableLogging) {
                rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_2868974826 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_2868974823.enableLogging) {
                rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_2868974822(ctxHEX60gensym89_2868974823, depHEX60gensym89_2868975658, true)) {
                case 2:
                  if (ctxHEX60gensym89_2868974823.enableLogging) {
                  rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_2885692000(keyHEX60gensym89_2868974824) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2868974826 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_2868974823.enableLogging) {
                  rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_2868974825) {
                  force_2868973807(ctxHEX60gensym89_2868974823, depHEX60gensym89_2868975658);
                  }
                  else {
                    result_2868974826 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_2868974073(ctxHEX60gensym89_2868974823.recursiveQueries, keyHEX60gensym89_2868974824)) {
                  excl_2885687265(ctxHEX60gensym89_2868974823.recursiveQueries, keyHEX60gensym89_2868974824);
                  if (ctxHEX60gensym89_2868974823.enableLogging) {
                  rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_2885692000(keyHEX60gensym89_2868974824) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2868974826 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_2885683637(ctxHEX60gensym89_2868974823.depGraph, depHEX60gensym89_2868975658, verifiedHEX60gensym89_2868975633) == 1)) {
                  if (ctxHEX60gensym89_2868974823.enableLogging) {
                  rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_2868973900(ctxHEX60gensym89_2868974823.depGraph.queryNames, depHEX60gensym89_2868975658.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_2885681364(depHEX60gensym89_2868975658.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_2868974826 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2818572494 = addInt(i_2818572494, 1);
            if (!(((colontmp__2818572492).length == L_2818572495))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_2868974823.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_2885692546(ctxHEX60gensym89_2868974823.depGraph, keyHEX60gensym89_2868974824);
    result_2868974826 = 0;
    break BeforeRet;
    } finally {
    excl_2885687265(ctxHEX60gensym89_2868974823.activeQuerySet, keyHEX60gensym89_2868974824);
    var _ = pop_2868974752(ctxHEX60gensym89_2868974823, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_2868974823.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary22);
    }
  };

  return result_2868974826;

}

function clear_2868977037(s_2868977039) {
    s_2868977039.counter = 0;
    Label1: {
      var i_2868977125 = 0;
      var colontmp__2818572503 = 0;
      colontmp__2818572503 = (s_2868977039.data).length;
      var i_2818572504 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572504 < colontmp__2818572503)) break Label3;
            i_2868977125 = i_2818572504;
            s_2868977039.data[chckIndx(i_2868977125, 0, (s_2868977039.data).length - 1)].Field0 = 0;
            s_2868977039.data[chckIndx(i_2868977125, 0, (s_2868977039.data).length - 1)].Field1 = nimCopy(s_2868977039.data[chckIndx(i_2868977125, 0, (s_2868977039.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            i_2818572504 = addInt(i_2818572504, 1);
          }
      };
    };

  
}

function elapsed_2281701439(timer_2281701440) {
  var result_2281701441 = 0;

    result_2281701441 = subInt(myGetTicks_2281701422(), timer_2281701440.start);

  return result_2281701441;

}

function computeType_2868976946(ctxHEX60gensym92_2868976947, inputHEX60gensym92_2868976948, recordDependencyHEX60gensym92_2868976949) {
    var Temporary3;
    var Temporary5;

  var result_2868976950 = null;

  BeforeRet: {
    var timerHEX60gensym92_2868976951 = startTimer_2281701428();
    ctxHEX60gensym92_2868976947.statsType.totalCalls = addInt(ctxHEX60gensym92_2868976947.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_2868977370 = getItem_2868957649(inputHEX60gensym92_2868976948);
    var keyHEX60gensym92_2868977371 = {Field0: nimCopy(null, itemHEX60gensym92_2868977370, NTI2885681177), Field1: 0};
    if (recordDependencyHEX60gensym92_2868976949) {
    recordDependency_2868957436(ctxHEX60gensym92_2868976947, itemHEX60gensym92_2868977370, 0);
    }
    
    var colorHEX60gensym92_2868977372 = nodeColor_2885683637(ctxHEX60gensym92_2868976947.depGraph, keyHEX60gensym92_2868977371, 0);
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_2868977372, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym92_2868977370));
    }
    
    if ((colorHEX60gensym92_2868977372 == 2)) {
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym92_2868976947, keyHEX60gensym92_2868977371);
    if (false) {
    markRed_2885695989(ctxHEX60gensym92_2868976947.depGraph, keyHEX60gensym92_2868977371, []);
    }
    
    if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
      }
      
    }
    
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym92_2868976948) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868976950 = HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_2868977372 == 0)) {
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym92_2868976947, keyHEX60gensym92_2868977371);
    if (false) {
    markRed_2885695989(ctxHEX60gensym92_2868976947.depGraph, keyHEX60gensym92_2868977371, []);
    }
    
    if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
    }
    
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym92_2868976948) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868976950 = HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym92_2868976947, keyHEX60gensym92_2868977371, true) == 0)) {
    if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
    }
    
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym92_2868976948) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868976950 = HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_2868976947.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym92_2868976947, keyHEX60gensym92_2868977371);
      if (false) {
      markRed_2885695989(ctxHEX60gensym92_2868976947.depGraph, keyHEX60gensym92_2868977371, []);
      }
      
      if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
      }
      
      if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym92_2868976948) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868976950 = HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_2868977372 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_2868976947.enableLogging && contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948)));
    }
    
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    force_2868973807(ctxHEX60gensym92_2868976947, keyHEX60gensym92_2868977371);
    }
    
    if (!(contains_2868976463(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym92_2868976948) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868976950 = HEX5BHEX5D_2868976656(ctxHEX60gensym92_2868976947.queryCacheType, inputHEX60gensym92_2868976948);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_2868976947.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym92_2868976947.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym92_2868976947.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym92_2868976947.statsType.time = addInt(ctxHEX60gensym92_2868976947.statsType.time, elapsed_2281701439(timerHEX60gensym92_2868976951));
    }
  };

  return result_2868976950;

}

function formatValue_2869012020(result_2869012022, result_2869012022_Idx, value_2869012023, specifier_2869012024) {
    formatValue_721420459(result_2869012022, result_2869012022_Idx, HEX24_2952790452(value_2869012023), specifier_2869012024);

  
}

function rawGet_2868913030(t_2868913033, key_2868913034, hc_2868913035, hc_2868913035_Idx) {
  var result_2868913036 = 0;

  BeforeRet: {
    hc_2868913035[hc_2868913035_Idx] = hash_2852129075(key_2868913034);
    if ((hc_2868913035[hc_2868913035_Idx] == 0)) {
    hc_2868913035[hc_2868913035_Idx] = 314159265;
    }
    
    if (((t_2868913033.data).length == 0)) {
    result_2868913036 = -1;
    break BeforeRet;
    }
    
    var h_2868913122 = (hc_2868913035[hc_2868913035_Idx] & (t_2868913033.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868913033.data[chckIndx(h_2868913122, 0, (t_2868913033.data).length - 1)].Field0)) break Label2;
          if (((t_2868913033.data[chckIndx(h_2868913122, 0, (t_2868913033.data).length - 1)].Field0 == hc_2868913035[hc_2868913035_Idx]) && (t_2868913033.data[chckIndx(h_2868913122, 0, (t_2868913033.data).length - 1)].Field1 == key_2868913034))) {
          result_2868913036 = h_2868913122;
          break BeforeRet;
          }
          
          h_2868913122 = nextTry_1308622883(h_2868913122, (t_2868913033.data).length - 1);
        }
    };
    result_2868913036 = subInt(-1, h_2868913122);
  };

  return result_2868913036;

}

function hasKey_2868980038(t_2868980041, key_2868980042) {
  var result_2868980043 = false;

    var hc_2868980044 = [0];
    result_2868980043 = (0 <= rawGet_2868913030(t_2868980041, key_2868980042, hc_2868980044, 0));

  return result_2868980043;

}

function contains_2868980032(t_2868980035, key_2868980036) {
  var result_2868980037 = false;

  BeforeRet: {
    result_2868980037 = hasKey_2868980038(t_2868980035, key_2868980036);
    break BeforeRet;
  };

  return result_2868980037;

}

function contains_2868979938(cache_2868979941, key_2868979942) {
  var result_2868979943 = false;

    result_2868979943 = contains_2868980032(cache_2868979941.table, key_2868979942);

  return result_2868979943;

}

function HEX24_2952790759(value_2952790760) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2952790761 = [];

  BeforeRet: {
    switch (value_2952790760.kind) {
    case 0:
      result_2952790761 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_2952790761 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_2952790760;
      if (ConstSet63[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
      result_2952790761 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_2952790760;
      if (ConstSet64[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790022)); }
      result_2952790761 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_2952790761 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2952790760;
      if (ConstSet65[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790022)); }
      result_2952790761 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2852128727(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_2952790760;
      if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790022)); }
      result_2952790761 = nimCopy(null, HEX24_2952790452(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2952790761;

}

function HEX5BHEX5D_2868980217(t_2868980220, key_2868980221) {
  var result_2868980222 = null;
  var result_2868980222_Idx = 0;

    var hcHEX60gensym22_2868980223 = [0];
    var indexHEX60gensym22_2868980230 = rawGet_2868913030(t_2868980220, key_2868980221, hcHEX60gensym22_2868980223, 0);
    if ((0 <= indexHEX60gensym22_2868980230)) {
    result_2868980222 = t_2868980220.data[chckIndx(indexHEX60gensym22_2868980230, 0, (t_2868980220.data).length - 1)]; result_2868980222_Idx = "Field2";
    }
    else {
    raiseKeyError_2868976836(key_2868980221);
    }
    

  return [result_2868980222, result_2868980222_Idx];

}

function remove_2868916468(L_2868916470, n_2868916471) {
    if ((n_2868916471 == L_2868916470.tail)) {
    L_2868916470.tail = n_2868916471.prev;
    }
    
    if ((n_2868916471 == L_2868916470.head)) {
    L_2868916470.head = n_2868916471.next;
    }
    
    if (!((n_2868916471.next == null))) {
    n_2868916471.next.prev = n_2868916471.prev;
    }
    
    if (!((n_2868916471.prev == null))) {
    n_2868916471.prev.next = n_2868916471.next;
    }
    

  
}

function prepend_2868915215(L_2868915217, n_2868915218) {
    n_2868915218.prev = null;
    n_2868915218.next = L_2868915217.head;
    if (!((L_2868915217.head == null))) {
    if (!((L_2868915217.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868915217.head.prev = n_2868915218;
    }
    
    L_2868915217.head = n_2868915218;
    if ((L_2868915217.tail == null)) {
    L_2868915217.tail = n_2868915218;
    }
    

  
}

function HEX5BHEX5D_2868980131(cache_2868980134, key_2868980135) {
    var Temporary1;

  var result_2868980136 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2868980323 = (Temporary1 = HEX5BHEX5D_2868980217(cache_2868980134.table, key_2868980135), Temporary1)[0][Temporary1[1]];
    result_2868980136 = nimCopy(result_2868980136, node_2868980323.value.val, NTI2952790023);
    remove_2868916468(cache_2868980134.list, node_2868980323);
    prepend_2868915215(cache_2868980134.list, node_2868980323);

  return result_2868980136;

}

function computeValue_2868980422(ctxHEX60gensym96_2868980423, inputHEX60gensym96_2868980424, recordDependencyHEX60gensym96_2868980425) {
    var Temporary3;
    var Temporary5;

  var result_2868980426 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym96_2868980427 = startTimer_2281701428();
    ctxHEX60gensym96_2868980423.statsValue.totalCalls = addInt(ctxHEX60gensym96_2868980423.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_2868980516 = getItem_2868957649(inputHEX60gensym96_2868980424);
    var keyHEX60gensym96_2868980517 = {Field0: nimCopy(null, itemHEX60gensym96_2868980516, NTI2885681177), Field1: 1};
    if (recordDependencyHEX60gensym96_2868980425) {
    recordDependency_2868957436(ctxHEX60gensym96_2868980423, itemHEX60gensym96_2868980516, 1);
    }
    
    var colorHEX60gensym96_2868980518 = nodeColor_2885683637(ctxHEX60gensym96_2868980423.depGraph, keyHEX60gensym96_2868980517, 0);
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_2868980518, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym96_2868980516));
    }
    
    if ((colorHEX60gensym96_2868980518 == 2)) {
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym96_2868980423, keyHEX60gensym96_2868980517);
    if (false) {
    markRed_2885695989(ctxHEX60gensym96_2868980423.depGraph, keyHEX60gensym96_2868980517, []);
    }
    
    if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
      }
      
    }
    
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym96_2868980424) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868980426 = nimCopy(result_2868980426, HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424), NTI2952790023);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_2868980518 == 0)) {
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym96_2868980423, keyHEX60gensym96_2868980517);
    if (false) {
    markRed_2885695989(ctxHEX60gensym96_2868980423.depGraph, keyHEX60gensym96_2868980517, []);
    }
    
    if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
    }
    
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym96_2868980424) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868980426 = nimCopy(result_2868980426, HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424), NTI2952790023);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym96_2868980423, keyHEX60gensym96_2868980517, true) == 0)) {
    if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
    }
    
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym96_2868980424) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868980426 = nimCopy(result_2868980426, HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424), NTI2952790023);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_2868980423.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym96_2868980423, keyHEX60gensym96_2868980517);
      if (false) {
      markRed_2885695989(ctxHEX60gensym96_2868980423.depGraph, keyHEX60gensym96_2868980517, []);
      }
      
      if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
      }
      
      if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym96_2868980424) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868980426 = nimCopy(result_2868980426, HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424), NTI2952790023);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_2868980518 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_2868980423.enableLogging && contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424)));
    }
    
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    force_2868973807(ctxHEX60gensym96_2868980423, keyHEX60gensym96_2868980517);
    }
    
    if (!(contains_2868979938(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2852128727(inputHEX60gensym96_2868980424) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868980426 = nimCopy(result_2868980426, HEX5BHEX5D_2868980131(ctxHEX60gensym96_2868980423.queryCacheValue, inputHEX60gensym96_2868980424), NTI2952790023);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_2868980423.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym96_2868980423.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym96_2868980423.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym96_2868980423.statsValue.time = addInt(ctxHEX60gensym96_2868980423.statsValue.time, elapsed_2281701439(timerHEX60gensym96_2868980427));
    }
  };

  return result_2868980426;

}

function formatValue_3003123103(result_3003123105, result_3003123105_Idx, value_3003123106, specifier_3003123107) {
    formatValue_721420459(result_3003123105, result_3003123105_Idx, HEX24_2952790759(value_3003123106), specifier_3003123107);

  
}

function newFunctionType_2952790434(paramTypes_2952790435, returnType_2952790436) {
  var result_2952790437 = null;

    result_2952790437 = {kind: 4, returnType: returnType_2952790436, paramTypes: nimCopy(null, paramTypes_2952790435, NTI2952790326), open: false};

  return result_2952790437;

}

function HEX3DHEX3D_2952790592(x_2952790594, y_2952790595) {
  var result_2952790596 = false;

  BeforeRet: {
    var sameObject_2952790603 = false;
    sameObject_2952790603 = x_2952790594 === y_2952790595
    if (sameObject_2952790603) {
    result_2952790596 = true;
    break BeforeRet;
    }
    
    if (!(((x_2952790594).length == (y_2952790595).length))) {
    result_2952790596 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2952790617 = 0;
      var colontmp__2818572508 = 0;
      colontmp__2818572508 = subInt((x_2952790594).length, 1);
      var res_2818572509 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572509 <= colontmp__2818572508)) break Label3;
            i_2952790617 = res_2818572509;
            if (!(HEX3DHEX3D_2952790574(x_2952790594[chckIndx(i_2952790617, 0, (x_2952790594).length - 1)], y_2952790595[chckIndx(i_2952790617, 0, (y_2952790595).length - 1)]))) {
            result_2952790596 = false;
            break BeforeRet;
            }
            
            res_2818572509 = addInt(res_2818572509, 1);
          }
      };
    };
    result_2952790596 = true;
    break BeforeRet;
  };

  return result_2952790596;

}

function HEX3DHEX3D_2952790574(a_2952790575, b_2952790576) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_2952790577 = false;

  BeforeRet: {
    if ((a_2952790575 == null)) {
    result_2952790577 = (b_2952790576 == null);
    break BeforeRet;
    }
    
    if ((b_2952790576 == null)) {
    result_2952790577 = false;
    break BeforeRet;
    }
    
    if (!((a_2952790575.kind == b_2952790576.kind))) {
    result_2952790577 = false;
    break BeforeRet;
    }
    
    switch (a_2952790575.kind) {
    case 4:
      var Temporary2 = a_2952790575;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790019)); }
      var Temporary3 = b_2952790576;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790019)); }
      if (!HEX3DHEX3D_2952790574(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_2952790575;
        if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790019)); }
        var Temporary5 = b_2952790576;
        if (ConstSet72[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790019)); }
        Temporary1 = HEX3DHEX3D_2952790592(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_2952790577 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_2952790575;
      if (ConstSet73[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790019)); }
      var Temporary7 = b_2952790576;
      if (ConstSet74[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2952790019)); }
      result_2952790577 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_2952790577 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2952790577;

}

function anyType_2952790449(open_2952790450) {
  var result_2952790451 = null;

    result_2952790451 = {kind: 5, open: open_2952790450, returnType: null, paramTypes: []};

  return result_2952790451;

}

function rawGet_2868921562(t_2868921565, key_2868921566, hc_2868921567, hc_2868921567_Idx) {
  var result_2868921568 = 0;

  BeforeRet: {
    hc_2868921567[hc_2868921567_Idx] = hash_2852129075(key_2868921566);
    if ((hc_2868921567[hc_2868921567_Idx] == 0)) {
    hc_2868921567[hc_2868921567_Idx] = 314159265;
    }
    
    if (((t_2868921565.data).length == 0)) {
    result_2868921568 = -1;
    break BeforeRet;
    }
    
    var h_2868921654 = (hc_2868921567[hc_2868921567_Idx] & (t_2868921565.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868921565.data[chckIndx(h_2868921654, 0, (t_2868921565.data).length - 1)].Field0)) break Label2;
          if (((t_2868921565.data[chckIndx(h_2868921654, 0, (t_2868921565.data).length - 1)].Field0 == hc_2868921567[hc_2868921567_Idx]) && (t_2868921565.data[chckIndx(h_2868921654, 0, (t_2868921565.data).length - 1)].Field1 == key_2868921566))) {
          result_2868921568 = h_2868921654;
          break BeforeRet;
          }
          
          h_2868921654 = nextTry_1308622883(h_2868921654, (t_2868921565.data).length - 1);
        }
    };
    result_2868921568 = subInt(-1, h_2868921654);
  };

  return result_2868921568;

}

function hasKey_2868986666(t_2868986669, key_2868986670) {
  var result_2868986671 = false;

    var hc_2868986672 = [0];
    result_2868986671 = (0 <= rawGet_2868921562(t_2868986669, key_2868986670, hc_2868986672, 0));

  return result_2868986671;

}

function contains_2868986660(t_2868986663, key_2868986664) {
  var result_2868986665 = false;

  BeforeRet: {
    result_2868986665 = hasKey_2868986666(t_2868986663, key_2868986664);
    break BeforeRet;
  };

  return result_2868986665;

}

function contains_2868986566(cache_2868986569, key_2868986570) {
  var result_2868986571 = false;

    result_2868986571 = contains_2868986660(cache_2868986569.table, key_2868986570);

  return result_2868986571;

}

function len_2952791314(t_2952791317) {
  var result_2952791318 = 0;

    result_2952791318 = t_2952791317.counter;

  return result_2952791318;

}

function addQuoted_2868957079(s_2868957081, s_2868957081_Idx, x_2868957082) {
    s_2868957081[s_2868957081_Idx].push.apply(s_2868957081[s_2868957081_Idx], HEX24_2181038317(x_2868957082));;

  
}

function HEX24_2952791164(symbol_2952791165) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952791166 = [];

  BeforeRet: {
    switch (symbol_2952791165.kind) {
    case 0:
      var Temporary1 = symbol_2952791165;
      if (ConstSet86[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790025)); }
      result_2952791166 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2181038317(symbol_2952791165.id) || [],[44,32] || [],HEX24_2852128727(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_2952791165;
      if (ConstSet87[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      var Temporary3 = symbol_2952791165;
      if (ConstSet88[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      result_2952791166 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2181038317(symbol_2952791165.id) || [],[44,32] || [],HEX24_2952790452(Temporary2.typ) || [],[44,32] || [],HEX24_2952790759(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2952791166;

}

function addQuoted_2868956837(s_2868956839, s_2868956839_Idx, x_2868956840) {
    s_2868956839[s_2868956839_Idx].push.apply(s_2868956839[s_2868956839_Idx], HEX24_2952791164(x_2868956840));;

  
}

function HEX24_2868956986(t_2868956989) {
  var result_2868956990 = [[]];

    if ((len_2952791314(t_2868956989) == 0)) {
    result_2868956990[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_2868956990[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_2868957077 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_2868957078 = null;
        var L_2818572517 = len_2952791314(t_2868956989);
        Label2: {
          var h_2818572519 = 0;
          var colontmp__2818572520 = 0;
          colontmp__2818572520 = (t_2868956989.data).length - 1;
          var res_2818572521 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2818572521 <= colontmp__2818572520)) break Label4;
                h_2818572519 = res_2818572521;
                if (isFilled_1308622880(t_2868956989.data[chckIndx(h_2818572519, 0, (t_2868956989.data).length - 1)].Field0)) {
                key_2868957077 = nimCopy(key_2868957077, t_2868956989.data[chckIndx(h_2818572519, 0, (t_2868956989.data).length - 1)].Field1, NTI2181038083);
                val_2868957078 = t_2868956989.data[chckIndx(h_2818572519, 0, (t_2868956989.data).length - 1)].Field2;
                if ((1 < (result_2868956990[0]).length)) {
                result_2868956990[0].push.apply(result_2868956990[0], [44,32]);;
                }
                
                addQuoted_2868957079(result_2868956990, 0, key_2868957077);
                result_2868956990[0].push.apply(result_2868956990[0], [58,32]);;
                addQuoted_2868956837(result_2868956990, 0, val_2868957078);
                if (!((len_2952791314(t_2868956989) == L_2818572517))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2818572521 = addInt(res_2818572521, 1);
              }
          };
        };
      };
      result_2868956990[0].push.apply(result_2868956990[0], [125]);;
    }
    

  return result_2868956990[0];

}

function HEX5BHEX5D_2868986845(t_2868986848, key_2868986849) {
  var result_2868986850 = null;
  var result_2868986850_Idx = 0;

    var hcHEX60gensym22_2868986851 = [0];
    var indexHEX60gensym22_2868986858 = rawGet_2868921562(t_2868986848, key_2868986849, hcHEX60gensym22_2868986851, 0);
    if ((0 <= indexHEX60gensym22_2868986858)) {
    result_2868986850 = t_2868986848.data[chckIndx(indexHEX60gensym22_2868986858, 0, (t_2868986848.data).length - 1)]; result_2868986850_Idx = "Field2";
    }
    else {
    raiseKeyError_2868976836(key_2868986849);
    }
    

  return [result_2868986850, result_2868986850_Idx];

}

function remove_2868924991(L_2868924993, n_2868924994) {
    if ((n_2868924994 == L_2868924993.tail)) {
    L_2868924993.tail = n_2868924994.prev;
    }
    
    if ((n_2868924994 == L_2868924993.head)) {
    L_2868924993.head = n_2868924994.next;
    }
    
    if (!((n_2868924994.next == null))) {
    n_2868924994.next.prev = n_2868924994.prev;
    }
    
    if (!((n_2868924994.prev == null))) {
    n_2868924994.prev.next = n_2868924994.next;
    }
    

  
}

function prepend_2868923738(L_2868923740, n_2868923741) {
    n_2868923741.prev = null;
    n_2868923741.next = L_2868923740.head;
    if (!((L_2868923740.head == null))) {
    if (!((L_2868923740.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868923740.head.prev = n_2868923741;
    }
    
    L_2868923740.head = n_2868923741;
    if ((L_2868923740.tail == null)) {
    L_2868923740.tail = n_2868923741;
    }
    

  
}

function HEX5BHEX5D_2868986759(cache_2868986762, key_2868986763) {
    var Temporary1;

  var result_2868986764 = null;

    var node_2868986951 = (Temporary1 = HEX5BHEX5D_2868986845(cache_2868986762.table, key_2868986763), Temporary1)[0][Temporary1[1]];
    result_2868986764 = node_2868986951.value.val;
    remove_2868924991(cache_2868986762.list, node_2868986951);
    prepend_2868923738(cache_2868986762.list, node_2868986951);

  return result_2868986764;

}

function computeSymbols_2868987052(ctxHEX60gensym104_2868987053, inputHEX60gensym104_2868987054, recordDependencyHEX60gensym104_2868987055) {
    var Temporary3;
    var Temporary5;

  var result_2868987058 = null;

  BeforeRet: {
    var timerHEX60gensym104_2868987059 = startTimer_2281701428();
    ctxHEX60gensym104_2868987053.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_2868987053.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_2868987148 = getItem_2868957649(inputHEX60gensym104_2868987054);
    var keyHEX60gensym104_2868987149 = {Field0: nimCopy(null, itemHEX60gensym104_2868987148, NTI2885681177), Field1: 3};
    if (recordDependencyHEX60gensym104_2868987055) {
    recordDependency_2868957436(ctxHEX60gensym104_2868987053, itemHEX60gensym104_2868987148, 3);
    }
    
    var colorHEX60gensym104_2868987150 = nodeColor_2885683637(ctxHEX60gensym104_2868987053.depGraph, keyHEX60gensym104_2868987149, 0);
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_2868987150, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym104_2868987148));
    }
    
    if ((colorHEX60gensym104_2868987150 == 2)) {
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym104_2868987053, keyHEX60gensym104_2868987149);
    if (false) {
    markRed_2885695989(ctxHEX60gensym104_2868987053.depGraph, keyHEX60gensym104_2868987149, []);
    }
    
    if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
      }
      
    }
    
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2852128727(inputHEX60gensym104_2868987054) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868987058 = HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_2868987150 == 0)) {
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym104_2868987053, keyHEX60gensym104_2868987149);
    if (false) {
    markRed_2885695989(ctxHEX60gensym104_2868987053.depGraph, keyHEX60gensym104_2868987149, []);
    }
    
    if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
    }
    
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2852128727(inputHEX60gensym104_2868987054) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868987058 = HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym104_2868987053, keyHEX60gensym104_2868987149, true) == 0)) {
    if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
    }
    
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2852128727(inputHEX60gensym104_2868987054) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868987058 = HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_2868987053.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym104_2868987053, keyHEX60gensym104_2868987149);
      if (false) {
      markRed_2885695989(ctxHEX60gensym104_2868987053.depGraph, keyHEX60gensym104_2868987149, []);
      }
      
      if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
      }
      
      if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2852128727(inputHEX60gensym104_2868987054) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868987058 = HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_2868987150 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_2868987053.enableLogging && contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868956986(HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054)));
    }
    
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    force_2868973807(ctxHEX60gensym104_2868987053, keyHEX60gensym104_2868987149);
    }
    
    if (!(contains_2868986566(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2852128727(inputHEX60gensym104_2868987054) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868987058 = HEX5BHEX5D_2868986759(ctxHEX60gensym104_2868987053.queryCacheSymbols, inputHEX60gensym104_2868987054);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_2868987053.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym104_2868987053.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym104_2868987053.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym104_2868987053.statsSymbols.time = addInt(ctxHEX60gensym104_2868987053.statsSymbols.time, elapsed_2281701439(timerHEX60gensym104_2868987059));
    }
  };

  return result_2868987058;

}

function rawGet_2869001318(t_2869001321, key_2869001322, hc_2869001323, hc_2869001323_Idx) {
  var result_2869001324 = 0;

  BeforeRet: {
    hc_2869001323[hc_2869001323_Idx] = hash_2181038324(key_2869001322);
    if ((hc_2869001323[hc_2869001323_Idx] == 0)) {
    hc_2869001323[hc_2869001323_Idx] = 314159265;
    }
    
    if (((t_2869001321.data).length == 0)) {
    result_2869001324 = -1;
    break BeforeRet;
    }
    
    var h_2869001409 = (hc_2869001323[hc_2869001323_Idx] & (t_2869001321.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869001321.data[chckIndx(h_2869001409, 0, (t_2869001321.data).length - 1)].Field0)) break Label2;
          if (((t_2869001321.data[chckIndx(h_2869001409, 0, (t_2869001321.data).length - 1)].Field0 == hc_2869001323[hc_2869001323_Idx]) && HEX3DHEX3D_2181038320(t_2869001321.data[chckIndx(h_2869001409, 0, (t_2869001321.data).length - 1)].Field1, key_2869001322))) {
          result_2869001324 = h_2869001409;
          break BeforeRet;
          }
          
          h_2869001409 = nextTry_1308622883(h_2869001409, (t_2869001321.data).length - 1);
        }
    };
    result_2869001324 = subInt(-1, h_2869001409);
  };

  return result_2869001324;

}

function hasKey_2869012634(t_2869012637, key_2869012638) {
  var result_2869012639 = false;

    var hc_2869012640 = [0];
    result_2869012639 = (0 <= rawGet_2869001318(t_2869012637, key_2869012638, hc_2869012640, 0));

  return result_2869012639;

}

function hasKey_2869012508(t_2869012511, key_2869012512) {
  var result_2869012513 = false;

    result_2869012513 = hasKey_2869012634(t_2869012511, key_2869012512);

  return result_2869012513;

}

function contains_2869012472(t_2869012475, key_2869012476) {
  var result_2869012477 = false;

  BeforeRet: {
    result_2869012477 = hasKey_2869012508(t_2869012475, key_2869012476);
    break BeforeRet;
  };

  return result_2869012477;

}

function HEX5BHEX5D_2869012893(t_2869012896, key_2869012897) {
  var result_2869012898 = null;
  var result_2869012898_Idx = 0;

    var hcHEX60gensym22_2869012899 = [0];
    var indexHEX60gensym22_2869012906 = rawGet_2869001318(t_2869012896, key_2869012897, hcHEX60gensym22_2869012899, 0);
    if ((0 <= indexHEX60gensym22_2869012906)) {
    result_2869012898 = t_2869012896.data[chckIndx(indexHEX60gensym22_2869012906, 0, (t_2869012896.data).length - 1)]; result_2869012898_Idx = "Field2";
    }
    else {
    raiseKeyError_2852128536(key_2869012897);
    }
    

  return [result_2869012898, result_2869012898_Idx];

}

function HEX5BHEX5D_2869012727(t_2869012730, key_2869012731) {
    var Temporary1;

  var result_2869012732 = null;
  var result_2869012732_Idx = 0;

    result_2869012732 = (Temporary1 = HEX5BHEX5D_2869012893(t_2869012730, key_2869012731), Temporary1)[0]; result_2869012732_Idx = Temporary1[1];

  return [result_2869012732, result_2869012732_Idx];

}

function getItem_2868966918(selfHEX60gensym81_2868966919) {
  var result_2868966920 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym81_2868966919.id, null_2181038340)) {
    selfHEX60gensym81_2868966919.id = nimCopy(selfHEX60gensym81_2868966919.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym81_2868966919.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2818572524 = nimCopy(null, selfHEX60gensym81_2868966919.id, NTI2181038083);
    var colontmp__2818572525 = 2;
    result_2868966920 = nimCopy(result_2868966920, {Field0: nimCopy(null, colontmp__2818572524, NTI2181038083), Field1: colontmp__2818572525}, NTI2885681177);
    break BeforeRet;
  };

  return result_2868966920;

}

function hash_2952791167(symbol_2952791168) {
  var result_2952791169 = 0;

  BeforeRet: {
    result_2952791169 = hash_2181038324(symbol_2952791168.id);
    break BeforeRet;
  };

  return result_2952791169;

}

function HEX3DHEX3D_2952790782(a_2952790783, b_2952790784) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_2952790785 = false;

  BeforeRet: {
    if (!((a_2952790783.kind == b_2952790784.kind))) {
    result_2952790785 = false;
    break BeforeRet;
    }
    
    switch (a_2952790783.kind) {
    case 0:
      result_2952790785 = true;
      break BeforeRet;
      break;
    case 1:
      result_2952790785 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_2952790783;
      if (ConstSet91[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
      var Temporary2 = b_2952790784;
      if (ConstSet92[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790022)); }
      result_2952790785 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_2952790783;
      if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790022)); }
      var Temporary4 = b_2952790784;
      if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790022)); }
      result_2952790785 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_2952790783;
      if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790022)); }
      var Temporary6 = b_2952790784;
      if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790022)); }
      result_2952790785 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_2952790783;
      if (ConstSet97[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2952790022)); }
      var Temporary8 = b_2952790784;
      if (ConstSet98[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2952790022)); }
      result_2952790785 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_2952790783;
      if (ConstSet99[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2952790022)); }
      var Temporary10 = b_2952790784;
      if (ConstSet100[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2952790022)); }
      result_2952790785 = HEX3DHEX3D_2952790574(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_2952790785;

}

function HEX3DHEX3D_2952791170(a_2952791171, b_2952791172) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_2952791173 = false;

  BeforeRet: {
    if ((a_2952791171 == null)) {
    result_2952791173 = (b_2952791172 == null);
    break BeforeRet;
    }
    
    if ((b_2952791172 == null)) {
    result_2952791173 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_2952791171.id, b_2952791172.id))) {
    result_2952791173 = false;
    break BeforeRet;
    }
    
    if (!((a_2952791171.kind == b_2952791172.kind))) {
    result_2952791173 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_2952791171.name, b_2952791172.name))) {
    result_2952791173 = false;
    break BeforeRet;
    }
    
    switch (a_2952791171.kind) {
    case 1:
      var Temporary4 = a_2952791171;
      if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      var Temporary5 = b_2952791172;
      if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790025)); }
      if (!HEX3DHEX3D_2952790574(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_2952791171;
        if (ConstSet101[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790025)); }
        var Temporary7 = b_2952791172;
        if (ConstSet102[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2952790025)); }
        Temporary3 = HEX3DHEX3D_2952790782(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_2952791171;
        if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2952790025)); }
        var Temporary9 = b_2952791172;
        if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2952790025)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_2952791171;
        if (ConstSet105[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2952790025)); }
        var Temporary11 = b_2952791172;
        if (ConstSet106[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2952790025)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_2952791173 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_2952791171;
      if (ConstSet107[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2952790025)); }
      var Temporary13 = b_2952791172;
      if (ConstSet108[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2952790025)); }
      result_2952791173 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_2952791173;

}

function rawGet_2868926985(t_2868926988, key_2868926989, hc_2868926990, hc_2868926990_Idx) {
  var result_2868926991 = 0;

  BeforeRet: {
    hc_2868926990[hc_2868926990_Idx] = hash_2952791167(key_2868926989);
    if ((hc_2868926990[hc_2868926990_Idx] == 0)) {
    hc_2868926990[hc_2868926990_Idx] = 314159265;
    }
    
    if (((t_2868926988.data).length == 0)) {
    result_2868926991 = -1;
    break BeforeRet;
    }
    
    var h_2868927077 = (hc_2868926990[hc_2868926990_Idx] & (t_2868926988.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868926988.data[chckIndx(h_2868927077, 0, (t_2868926988.data).length - 1)].Field0)) break Label2;
          if (((t_2868926988.data[chckIndx(h_2868927077, 0, (t_2868926988.data).length - 1)].Field0 == hc_2868926990[hc_2868926990_Idx]) && HEX3DHEX3D_2952791170(t_2868926988.data[chckIndx(h_2868927077, 0, (t_2868926988.data).length - 1)].Field1, key_2868926989))) {
          result_2868926991 = h_2868927077;
          break BeforeRet;
          }
          
          h_2868927077 = nextTry_1308622883(h_2868927077, (t_2868926988.data).length - 1);
        }
    };
    result_2868926991 = subInt(-1, h_2868927077);
  };

  return result_2868926991;

}

function hasKey_2868990168(t_2868990171, key_2868990172) {
  var result_2868990173 = false;

    var hc_2868990174 = [0];
    result_2868990173 = (0 <= rawGet_2868926985(t_2868990171, key_2868990172, hc_2868990174, 0));

  return result_2868990173;

}

function contains_2868990162(t_2868990165, key_2868990166) {
  var result_2868990167 = false;

  BeforeRet: {
    result_2868990167 = hasKey_2868990168(t_2868990165, key_2868990166);
    break BeforeRet;
  };

  return result_2868990167;

}

function contains_2868990068(cache_2868990071, key_2868990072) {
  var result_2868990073 = false;

    result_2868990073 = contains_2868990162(cache_2868990071.table, key_2868990072);

  return result_2868990073;

}

function raiseKeyError_2868990441(key_2868990443) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2952791164(key_2868990443) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2868990347(t_2868990350, key_2868990351) {
  var result_2868990352 = null;
  var result_2868990352_Idx = 0;

    var hcHEX60gensym22_2868990353 = [0];
    var indexHEX60gensym22_2868990360 = rawGet_2868926985(t_2868990350, key_2868990351, hcHEX60gensym22_2868990353, 0);
    if ((0 <= indexHEX60gensym22_2868990360)) {
    result_2868990352 = t_2868990350.data[chckIndx(indexHEX60gensym22_2868990360, 0, (t_2868990350.data).length - 1)]; result_2868990352_Idx = "Field2";
    }
    else {
    raiseKeyError_2868990441(key_2868990351);
    }
    

  return [result_2868990352, result_2868990352_Idx];

}

function remove_2868932864(L_2868932866, n_2868932867) {
    if ((n_2868932867 == L_2868932866.tail)) {
    L_2868932866.tail = n_2868932867.prev;
    }
    
    if ((n_2868932867 == L_2868932866.head)) {
    L_2868932866.head = n_2868932867.next;
    }
    
    if (!((n_2868932867.next == null))) {
    n_2868932867.next.prev = n_2868932867.prev;
    }
    
    if (!((n_2868932867.prev == null))) {
    n_2868932867.prev.next = n_2868932867.next;
    }
    

  
}

function prepend_2868929153(L_2868929155, n_2868929156) {
    n_2868929156.prev = null;
    n_2868929156.next = L_2868929155.head;
    if (!((L_2868929155.head == null))) {
    if (!((L_2868929155.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868929155.head.prev = n_2868929156;
    }
    
    L_2868929155.head = n_2868929156;
    if ((L_2868929155.tail == null)) {
    L_2868929155.tail = n_2868929156;
    }
    

  
}

function HEX5BHEX5D_2868990261(cache_2868990264, key_2868990265) {
    var Temporary1;

  var result_2868990266 = null;

    var node_2868990454 = (Temporary1 = HEX5BHEX5D_2868990347(cache_2868990264.table, key_2868990265), Temporary1)[0][Temporary1[1]];
    result_2868990266 = node_2868990454.value.val;
    remove_2868932864(cache_2868990264.list, node_2868990454);
    prepend_2868929153(cache_2868990264.list, node_2868990454);

  return result_2868990266;

}

function computeSymbolType_2868990524(ctxHEX60gensym108_2868990525, inputHEX60gensym108_2868990526, recordDependencyHEX60gensym108_2868990527) {
    var Temporary3;
    var Temporary5;

  var result_2868990528 = null;

  BeforeRet: {
    var timerHEX60gensym108_2868990529 = startTimer_2281701428();
    ctxHEX60gensym108_2868990525.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_2868990525.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_2868990618 = getItem_2868966918(inputHEX60gensym108_2868990526);
    var keyHEX60gensym108_2868990619 = {Field0: nimCopy(null, itemHEX60gensym108_2868990618, NTI2885681177), Field1: 4};
    if (recordDependencyHEX60gensym108_2868990527) {
    recordDependency_2868957436(ctxHEX60gensym108_2868990525, itemHEX60gensym108_2868990618, 4);
    }
    
    var colorHEX60gensym108_2868990620 = nodeColor_2885683637(ctxHEX60gensym108_2868990525.depGraph, keyHEX60gensym108_2868990619, 0);
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_2868990620, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym108_2868990618));
    }
    
    if ((colorHEX60gensym108_2868990620 == 2)) {
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym108_2868990525, keyHEX60gensym108_2868990619);
    if (false) {
    markRed_2885695989(ctxHEX60gensym108_2868990525.depGraph, keyHEX60gensym108_2868990619, []);
    }
    
    if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
      }
      
    }
    
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym108_2868990526) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868990528 = HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_2868990620 == 0)) {
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym108_2868990525, keyHEX60gensym108_2868990619);
    if (false) {
    markRed_2885695989(ctxHEX60gensym108_2868990525.depGraph, keyHEX60gensym108_2868990619, []);
    }
    
    if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
    }
    
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym108_2868990526) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868990528 = HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym108_2868990525, keyHEX60gensym108_2868990619, true) == 0)) {
    if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
    }
    
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym108_2868990526) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868990528 = HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_2868990525.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym108_2868990525, keyHEX60gensym108_2868990619);
      if (false) {
      markRed_2885695989(ctxHEX60gensym108_2868990525.depGraph, keyHEX60gensym108_2868990619, []);
      }
      
      if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
      }
      
      if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym108_2868990526) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868990528 = HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_2868990620 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_2868990525.enableLogging && contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790452(HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526)));
    }
    
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    force_2868973807(ctxHEX60gensym108_2868990525, keyHEX60gensym108_2868990619);
    }
    
    if (!(contains_2868990068(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym108_2868990526) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868990528 = HEX5BHEX5D_2868990261(ctxHEX60gensym108_2868990525.queryCacheSymbolType, inputHEX60gensym108_2868990526);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_2868990525.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym108_2868990525.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym108_2868990525.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym108_2868990525.statsSymbolType.time = addInt(ctxHEX60gensym108_2868990525.statsSymbolType.time, elapsed_2281701439(timerHEX60gensym108_2868990529));
    }
  };

  return result_2868990528;

}

function none_2868976930() {
  var result_2868976936 = ({val: null});

  return result_2868976936;

}

function none_2868976927() {
  var result_2868976929 = ({val: null});

    result_2868976929 = nimCopy(result_2868976929, none_2868976930(), NTI2868946880);

  return result_2868976929;

}

function isNone_2869013082(self_2869013084) {
  var result_2869013085 = false;

    result_2869013085 = (self_2869013084.val == null);

  return result_2869013085;

}

function get_2869013125(self_2869013127) {
  var result_2869013128 = null;
  var result_2869013128_Idx = 0;

  BeforeRet: {
    if (isNone_2869013082(self_2869013127)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2869013128 = self_2869013127; result_2869013128_Idx = "val";
    break BeforeRet;
  };

  return [result_2869013128, result_2869013128_Idx];

}

function some_2868976914(val_2868976916) {
  var result_2868976917 = ({val: null});

    if (!(!((val_2868976916 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2868976917.val = val_2868976916;

  return result_2868976917;

}

function last_2852126978(node_2852126979) {
  var result_2852126980 = null;

  BeforeRet: {
    if ((0 < len_2852126808(node_2852126979))) {
    result_2852126980 = HEX5BHEX5D_2852126804(node_2852126979, subInt(len_2852126808(node_2852126979), 1));
    break BeforeRet;
    }
    
    result_2852126980 = null;
    break BeforeRet;
  };

  return result_2852126980;

}

function isSome_2869013252(self_2869013254) {
  var result_2869013255 = false;

    result_2869013255 = !((self_2869013254.val == null));

  return result_2869013255;

}

function get_2869013243(self_2869013245, otherwise_2869013246) {
    var Temporary1;

  var result_2869013247 = null;

    if (isSome_2869013252(self_2869013245)) {
    Temporary1 = self_2869013245.val;
    }
    else {
    Temporary1 = otherwise_2869013246;
    }
    
    result_2869013247 = Temporary1;

  return result_2869013247;

}

function rawGet_2868917300(t_2868917303, key_2868917304, hc_2868917305, hc_2868917305_Idx) {
  var result_2868917306 = 0;

  BeforeRet: {
    hc_2868917305[hc_2868917305_Idx] = hash_2852129075(key_2868917304);
    if ((hc_2868917305[hc_2868917305_Idx] == 0)) {
    hc_2868917305[hc_2868917305_Idx] = 314159265;
    }
    
    if (((t_2868917303.data).length == 0)) {
    result_2868917306 = -1;
    break BeforeRet;
    }
    
    var h_2868917392 = (hc_2868917305[hc_2868917305_Idx] & (t_2868917303.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868917303.data[chckIndx(h_2868917392, 0, (t_2868917303.data).length - 1)].Field0)) break Label2;
          if (((t_2868917303.data[chckIndx(h_2868917392, 0, (t_2868917303.data).length - 1)].Field0 == hc_2868917305[hc_2868917305_Idx]) && (t_2868917303.data[chckIndx(h_2868917392, 0, (t_2868917303.data).length - 1)].Field1 == key_2868917304))) {
          result_2868917306 = h_2868917392;
          break BeforeRet;
          }
          
          h_2868917392 = nextTry_1308622883(h_2868917392, (t_2868917303.data).length - 1);
        }
    };
    result_2868917306 = subInt(-1, h_2868917392);
  };

  return result_2868917306;

}

function hasKey_2868983175(t_2868983178, key_2868983179) {
  var result_2868983180 = false;

    var hc_2868983181 = [0];
    result_2868983180 = (0 <= rawGet_2868917300(t_2868983178, key_2868983179, hc_2868983181, 0));

  return result_2868983180;

}

function contains_2868983169(t_2868983172, key_2868983173) {
  var result_2868983174 = false;

  BeforeRet: {
    result_2868983174 = hasKey_2868983175(t_2868983172, key_2868983173);
    break BeforeRet;
  };

  return result_2868983174;

}

function contains_2868983075(cache_2868983078, key_2868983079) {
  var result_2868983080 = false;

    result_2868983080 = contains_2868983169(cache_2868983078.table, key_2868983079);

  return result_2868983080;

}

function isSome_2952791605(self_2952791607) {
  var result_2952791608 = false;

    result_2952791608 = !((self_2952791607.val == null));

  return result_2952791608;

}

function HEX24_2868956826(self_2868956828) {
  var result_2868956829 = [[]];

    if (isSome_2952791605(self_2868956828)) {
    result_2868956829[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2868956837(result_2868956829, 0, self_2868956828.val);
    result_2868956829[0].push.apply(result_2868956829[0], [41]);;
    }
    else {
      result_2868956829[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_2868956829[0];

}

function HEX5BHEX5D_2868983354(t_2868983357, key_2868983358) {
  var result_2868983359 = null;
  var result_2868983359_Idx = 0;

    var hcHEX60gensym22_2868983360 = [0];
    var indexHEX60gensym22_2868983367 = rawGet_2868917300(t_2868983357, key_2868983358, hcHEX60gensym22_2868983360, 0);
    if ((0 <= indexHEX60gensym22_2868983367)) {
    result_2868983359 = t_2868983357.data[chckIndx(indexHEX60gensym22_2868983367, 0, (t_2868983357.data).length - 1)]; result_2868983359_Idx = "Field2";
    }
    else {
    raiseKeyError_2868976836(key_2868983358);
    }
    

  return [result_2868983359, result_2868983359_Idx];

}

function remove_2868920729(L_2868920731, n_2868920732) {
    if ((n_2868920732 == L_2868920731.tail)) {
    L_2868920731.tail = n_2868920732.prev;
    }
    
    if ((n_2868920732 == L_2868920731.head)) {
    L_2868920731.head = n_2868920732.next;
    }
    
    if (!((n_2868920732.next == null))) {
    n_2868920732.next.prev = n_2868920732.prev;
    }
    
    if (!((n_2868920732.prev == null))) {
    n_2868920732.prev.next = n_2868920732.next;
    }
    

  
}

function prepend_2868919476(L_2868919478, n_2868919479) {
    n_2868919479.prev = null;
    n_2868919479.next = L_2868919478.head;
    if (!((L_2868919478.head == null))) {
    if (!((L_2868919478.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868919478.head.prev = n_2868919479;
    }
    
    L_2868919478.head = n_2868919479;
    if ((L_2868919478.tail == null)) {
    L_2868919478.tail = n_2868919479;
    }
    

  
}

function HEX5BHEX5D_2868983268(cache_2868983271, key_2868983272) {
    var Temporary1;

  var result_2868983273 = ({val: null});

    var node_2868983460 = (Temporary1 = HEX5BHEX5D_2868983354(cache_2868983271.table, key_2868983272), Temporary1)[0][Temporary1[1]];
    result_2868983273 = nimCopy(result_2868983273, node_2868983460.value.val, NTI2952791176);
    remove_2868920729(cache_2868983271.list, node_2868983460);
    prepend_2868919476(cache_2868983271.list, node_2868983460);

  return result_2868983273;

}

function computeSymbol_2868983552(ctxHEX60gensym100_2868983553, inputHEX60gensym100_2868983554, recordDependencyHEX60gensym100_2868983555) {
    var Temporary3;
    var Temporary5;

  var result_2868983557 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym100_2868983558 = startTimer_2281701428();
    ctxHEX60gensym100_2868983553.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_2868983553.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_2868983647 = getItem_2868957649(inputHEX60gensym100_2868983554);
    var keyHEX60gensym100_2868983648 = {Field0: nimCopy(null, itemHEX60gensym100_2868983647, NTI2885681177), Field1: 2};
    if (recordDependencyHEX60gensym100_2868983555) {
    recordDependency_2868957436(ctxHEX60gensym100_2868983553, itemHEX60gensym100_2868983647, 2);
    }
    
    var colorHEX60gensym100_2868983649 = nodeColor_2885683637(ctxHEX60gensym100_2868983553.depGraph, keyHEX60gensym100_2868983648, 0);
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_2868983649, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym100_2868983647));
    }
    
    if ((colorHEX60gensym100_2868983649 == 2)) {
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym100_2868983553, keyHEX60gensym100_2868983648);
    if (false) {
    markRed_2885695989(ctxHEX60gensym100_2868983553.depGraph, keyHEX60gensym100_2868983648, []);
    }
    
    if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
      }
      
    }
    
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2852128727(inputHEX60gensym100_2868983554) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868983557 = nimCopy(result_2868983557, HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554), NTI2952791176);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_2868983649 == 0)) {
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym100_2868983553, keyHEX60gensym100_2868983648);
    if (false) {
    markRed_2885695989(ctxHEX60gensym100_2868983553.depGraph, keyHEX60gensym100_2868983648, []);
    }
    
    if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
    }
    
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2852128727(inputHEX60gensym100_2868983554) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868983557 = nimCopy(result_2868983557, HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554), NTI2952791176);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym100_2868983553, keyHEX60gensym100_2868983648, true) == 0)) {
    if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
    }
    
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2852128727(inputHEX60gensym100_2868983554) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868983557 = nimCopy(result_2868983557, HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554), NTI2952791176);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_2868983553.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym100_2868983553, keyHEX60gensym100_2868983648);
      if (false) {
      markRed_2885695989(ctxHEX60gensym100_2868983553.depGraph, keyHEX60gensym100_2868983648, []);
      }
      
      if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
      }
      
      if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2852128727(inputHEX60gensym100_2868983554) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868983557 = nimCopy(result_2868983557, HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554), NTI2952791176);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_2868983649 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_2868983553.enableLogging && contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868956826(HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554)));
    }
    
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    force_2868973807(ctxHEX60gensym100_2868983553, keyHEX60gensym100_2868983648);
    }
    
    if (!(contains_2868983075(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2852128727(inputHEX60gensym100_2868983554) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868983557 = nimCopy(result_2868983557, HEX5BHEX5D_2868983268(ctxHEX60gensym100_2868983553.queryCacheSymbol, inputHEX60gensym100_2868983554), NTI2952791176);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_2868983553.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym100_2868983553.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym100_2868983553.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym100_2868983553.statsSymbol.time = addInt(ctxHEX60gensym100_2868983553.statsSymbol.time, elapsed_2281701439(timerHEX60gensym100_2868983558));
    }
  };

  return result_2868983557;

}

function isNone_2952791633(self_2952791635) {
  var result_2952791636 = false;

    result_2952791636 = (self_2952791635.val == null);

  return result_2952791636;

}

function get_2952791625(self_2952791627) {
  var result_2952791628 = null;

    if (isNone_2952791633(self_2952791627)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952791628 = self_2952791627["val"];

  return result_2952791628;

}

function formatValue_2869013398(result_2869013400, result_2869013400_Idx, value_2869013401, specifier_2869013402) {
    formatValue_721420459(result_2869013400, result_2869013400_Idx, HEX24_2952791164(value_2869013401), specifier_2869013402);

  
}

function mustRehash_2869005920(t_2869005922) {
  var result_2869005923 = false;

    if (!((t_2869005922.counter < (t_2869005922.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2869005923 = ((mulInt((t_2869005922.data).length, 2) < mulInt(t_2869005922.counter, 3)) || (subInt((t_2869005922.data).length, t_2869005922.counter) < 4));

  return result_2869005923;

}

function rawInsert_2869006613(t_2869006617, data_2869006618, data_2869006618_Idx, key_2869006619, val_2869006620, hc_2869006621, h_2869006622) {
    data_2869006618[data_2869006618_Idx][chckIndx(h_2869006622, 0, (data_2869006618[data_2869006618_Idx]).length - 1)].Field1 = nimCopy(data_2869006618[data_2869006618_Idx][chckIndx(h_2869006622, 0, (data_2869006618[data_2869006618_Idx]).length - 1)].Field1, key_2869006619, NTI2885681180);
    data_2869006618[data_2869006618_Idx][chckIndx(h_2869006622, 0, (data_2869006618[data_2869006618_Idx]).length - 1)].Field2 = nimCopy(null, val_2869006620, NTI2868904272);
    data_2869006618[data_2869006618_Idx][chckIndx(h_2869006622, 0, (data_2869006618[data_2869006618_Idx]).length - 1)].Field0 = hc_2869006621;

  
}

function enlarge_2869006177(t_2869006180) {
    var n_2869006183 = [];
    n_2869006183 = new Array(chckRange(mulInt((t_2869006180.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2869006180.data).length, 2), 0, 2147483647) ; ++i) { n_2869006183[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2869006180.data; t_2869006180.data = n_2869006183; n_2869006183 = Temporary1;    Label2: {
      var i_2869006281 = 0;
      var colontmp__2818572530 = 0;
      colontmp__2818572530 = (n_2869006183).length - 1;
      var res_2818572531 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572531 <= colontmp__2818572530)) break Label4;
            i_2869006281 = res_2818572531;
            var eh_2869006362 = n_2869006183[chckIndx(i_2869006281, 0, (n_2869006183).length - 1)].Field0;
            if (isFilled_1308622880(eh_2869006362)) {
            var j_2869006366 = (eh_2869006362 & (t_2869006180.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2869006180.data[chckIndx(j_2869006366, 0, (t_2869006180.data).length - 1)].Field0)) break Label6;
                  j_2869006366 = nextTry_1308622883(j_2869006366, (t_2869006180.data).length - 1);
                }
            };
            rawInsert_2869006613(t_2869006180, t_2869006180, "data", n_2869006183[chckIndx(i_2869006281, 0, (n_2869006183).length - 1)].Field1, n_2869006183[chckIndx(i_2869006281, 0, (n_2869006183).length - 1)].Field2, eh_2869006362, j_2869006366);
            }
            
            res_2818572531 = addInt(res_2818572531, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2869006872(t_2869006875, key_2869006876, hc_2869006877) {
  var result_2869006878 = 0;

  BeforeRet: {
    if (((t_2869006875.data).length == 0)) {
    result_2869006878 = -1;
    break BeforeRet;
    }
    
    var h_2869006963 = (hc_2869006877 & (t_2869006875.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869006875.data[chckIndx(h_2869006963, 0, (t_2869006875.data).length - 1)].Field0)) break Label2;
          if (((t_2869006875.data[chckIndx(h_2869006963, 0, (t_2869006875.data).length - 1)].Field0 == hc_2869006877) && HEX3DHEX3D_2885684181(t_2869006875.data[chckIndx(h_2869006963, 0, (t_2869006875.data).length - 1)].Field1, key_2869006876))) {
          result_2869006878 = h_2869006963;
          break BeforeRet;
          }
          
          h_2869006963 = nextTry_1308622883(h_2869006963, (t_2869006875.data).length - 1);
        }
    };
    result_2869006878 = subInt(-1, h_2869006963);
  };

  return result_2869006878;

}

function HEX5BHEX5DHEX3D_2869005652(t_2869005655, key_2869005656, val_2869005657) {
    if (((t_2869005655.data).length == 0)) {
    var correctSizeHEX60gensym566_2869005740 = slotsNeeded_1308622891(32);
    t_2869005655.counter = 0;
    t_2869005655.data = new Array(chckRange(correctSizeHEX60gensym566_2869005740, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym566_2869005740, 0, 2147483647) ; ++i) { t_2869005655.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2869005745 = [0];
    var index_2869005752 = rawGet_2869003316(t_2869005655, key_2869005656, hc_2869005745, 0);
    if ((0 <= index_2869005752)) {
    t_2869005655.data[chckIndx(index_2869005752, 0, (t_2869005655.data).length - 1)].Field2 = nimCopy(null, val_2869005657, NTI2868904272);
    }
    else {
      if (((t_2869005655.data).length == 0)) {
      var correctSizeHEX60gensym569_2869005915 = slotsNeeded_1308622891(32);
      t_2869005655.counter = 0;
      t_2869005655.data = new Array(chckRange(correctSizeHEX60gensym569_2869005915, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym569_2869005915, 0, 2147483647) ; ++i) { t_2869005655.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2869005920(t_2869005655)) {
      enlarge_2869006177(t_2869005655);
      index_2869005752 = rawGetKnownHC_2869006872(t_2869005655, key_2869005656, hc_2869005745[0]);
      }
      
      index_2869005752 = subInt(-1, index_2869005752);
      rawInsert_2869006613(t_2869005655, t_2869005655, "data", key_2869005656, val_2869005657, hc_2869005745[0], index_2869005752);
      t_2869005655.counter = addInt(t_2869005655.counter, 1);
    }
    

  
}

function hasKey_2869007321(t_2869007324, key_2869007325) {
  var result_2869007326 = false;

    var hc_2869007327 = [0];
    result_2869007326 = (0 <= rawGet_2869003964(t_2869007324, key_2869007325, hc_2869007327, 0));

  return result_2869007326;

}

function contains_2869007315(t_2869007318, key_2869007319) {
  var result_2869007320 = false;

  BeforeRet: {
    result_2869007320 = hasKey_2869007321(t_2869007318, key_2869007319);
    break BeforeRet;
  };

  return result_2869007320;

}

function mustRehash_2869007665(t_2869007667) {
  var result_2869007668 = false;

    if (!((t_2869007667.counter < (t_2869007667.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2869007668 = ((mulInt((t_2869007667.data).length, 2) < mulInt(t_2869007667.counter, 3)) || (subInt((t_2869007667.data).length, t_2869007667.counter) < 4));

  return result_2869007668;

}

function rawInsert_2869008358(t_2869008362, data_2869008363, data_2869008363_Idx, key_2869008364, val_2869008365, hc_2869008366, h_2869008367) {
    data_2869008363[data_2869008363_Idx][chckIndx(h_2869008367, 0, (data_2869008363[data_2869008363_Idx]).length - 1)].Field1 = nimCopy(data_2869008363[data_2869008363_Idx][chckIndx(h_2869008367, 0, (data_2869008363[data_2869008363_Idx]).length - 1)].Field1, key_2869008364, NTI2181038083);
    data_2869008363[data_2869008363_Idx][chckIndx(h_2869008367, 0, (data_2869008363[data_2869008363_Idx]).length - 1)].Field2 = nimCopy(data_2869008363[data_2869008363_Idx][chckIndx(h_2869008367, 0, (data_2869008363[data_2869008363_Idx]).length - 1)].Field2, val_2869008365, NTI2868903940);
    data_2869008363[data_2869008363_Idx][chckIndx(h_2869008367, 0, (data_2869008363[data_2869008363_Idx]).length - 1)].Field0 = hc_2869008366;

  
}

function enlarge_2869007922(t_2869007925) {
    var n_2869007928 = [];
    n_2869007928 = new Array(chckRange(mulInt((t_2869007925.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2869007925.data).length, 2), 0, 2147483647) ; ++i) { n_2869007928[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_2869007925.data; t_2869007925.data = n_2869007928; n_2869007928 = Temporary1;    Label2: {
      var i_2869008026 = 0;
      var colontmp__2818572536 = 0;
      colontmp__2818572536 = (n_2869007928).length - 1;
      var res_2818572537 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572537 <= colontmp__2818572536)) break Label4;
            i_2869008026 = res_2818572537;
            var eh_2869008107 = n_2869007928[chckIndx(i_2869008026, 0, (n_2869007928).length - 1)].Field0;
            if (isFilled_1308622880(eh_2869008107)) {
            var j_2869008111 = (eh_2869008107 & (t_2869007925.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2869007925.data[chckIndx(j_2869008111, 0, (t_2869007925.data).length - 1)].Field0)) break Label6;
                  j_2869008111 = nextTry_1308622883(j_2869008111, (t_2869007925.data).length - 1);
                }
            };
            rawInsert_2869008358(t_2869007925, t_2869007925, "data", n_2869007928[chckIndx(i_2869008026, 0, (n_2869007928).length - 1)].Field1, n_2869007928[chckIndx(i_2869008026, 0, (n_2869007928).length - 1)].Field2, eh_2869008107, j_2869008111);
            }
            
            res_2818572537 = addInt(res_2818572537, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2869008617(t_2869008620, key_2869008621, hc_2869008622) {
  var result_2869008623 = 0;

  BeforeRet: {
    if (((t_2869008620.data).length == 0)) {
    result_2869008623 = -1;
    break BeforeRet;
    }
    
    var h_2869008708 = (hc_2869008622 & (t_2869008620.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869008620.data[chckIndx(h_2869008708, 0, (t_2869008620.data).length - 1)].Field0)) break Label2;
          if (((t_2869008620.data[chckIndx(h_2869008708, 0, (t_2869008620.data).length - 1)].Field0 == hc_2869008622) && HEX3DHEX3D_2181038320(t_2869008620.data[chckIndx(h_2869008708, 0, (t_2869008620.data).length - 1)].Field1, key_2869008621))) {
          result_2869008623 = h_2869008708;
          break BeforeRet;
          }
          
          h_2869008708 = nextTry_1308622883(h_2869008708, (t_2869008620.data).length - 1);
        }
    };
    result_2869008623 = subInt(-1, h_2869008708);
  };

  return result_2869008623;

}

function HEX5BHEX5DHEX3D_2869007397(t_2869007400, key_2869007401, val_2869007402) {
    if (((t_2869007400.data).length == 0)) {
    var correctSizeHEX60gensym578_2869007485 = slotsNeeded_1308622891(32);
    t_2869007400.counter = 0;
    t_2869007400.data = new Array(chckRange(correctSizeHEX60gensym578_2869007485, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym578_2869007485, 0, 2147483647) ; ++i) { t_2869007400.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_2869007490 = [0];
    var index_2869007497 = rawGet_2869003964(t_2869007400, key_2869007401, hc_2869007490, 0);
    if ((0 <= index_2869007497)) {
    t_2869007400.data[chckIndx(index_2869007497, 0, (t_2869007400.data).length - 1)].Field2 = nimCopy(t_2869007400.data[chckIndx(index_2869007497, 0, (t_2869007400.data).length - 1)].Field2, val_2869007402, NTI2868903940);
    }
    else {
      if (((t_2869007400.data).length == 0)) {
      var correctSizeHEX60gensym581_2869007660 = slotsNeeded_1308622891(32);
      t_2869007400.counter = 0;
      t_2869007400.data = new Array(chckRange(correctSizeHEX60gensym581_2869007660, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym581_2869007660, 0, 2147483647) ; ++i) { t_2869007400.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2869007665(t_2869007400)) {
      enlarge_2869007922(t_2869007400);
      index_2869007497 = rawGetKnownHC_2869008617(t_2869007400, key_2869007401, hc_2869007490[0]);
      }
      
      index_2869007497 = subInt(-1, index_2869007497);
      rawInsert_2869008358(t_2869007400, t_2869007400, "data", key_2869007401, val_2869007402, hc_2869007490[0], index_2869007497);
      t_2869007400.counter = addInt(t_2869007400.counter, 1);
    }
    

  
}

function hasKey_2869009137(t_2869009140, key_2869009141) {
  var result_2869009142 = false;

    var hc_2869009143 = [0];
    result_2869009142 = (0 <= rawGet_2869004471(t_2869009140, key_2869009141, hc_2869009143, 0));

  return result_2869009142;

}

function contains_2869009131(t_2869009134, key_2869009135) {
  var result_2869009136 = false;

  BeforeRet: {
    result_2869009136 = hasKey_2869009137(t_2869009134, key_2869009135);
    break BeforeRet;
  };

  return result_2869009136;

}

function mustRehash_2869009570(t_2869009572) {
  var result_2869009573 = false;

    if (!((t_2869009572.counter < (t_2869009572.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2869009573 = ((mulInt((t_2869009572.data).length, 2) < mulInt(t_2869009572.counter, 3)) || (subInt((t_2869009572.data).length, t_2869009572.counter) < 4));

  return result_2869009573;

}

function rawInsert_2869010263(t_2869010267, data_2869010268, data_2869010268_Idx, key_2869010269, val_2869010270, hc_2869010271, h_2869010272) {
    data_2869010268[data_2869010268_Idx][chckIndx(h_2869010272, 0, (data_2869010268[data_2869010268_Idx]).length - 1)].Field1 = nimCopy(data_2869010268[data_2869010268_Idx][chckIndx(h_2869010272, 0, (data_2869010268[data_2869010268_Idx]).length - 1)].Field1, key_2869010269, NTI2885681180);
    data_2869010268[data_2869010268_Idx][chckIndx(h_2869010272, 0, (data_2869010268[data_2869010268_Idx]).length - 1)].Field2 = nimCopy(null, val_2869010270, NTI2868903944);
    data_2869010268[data_2869010268_Idx][chckIndx(h_2869010272, 0, (data_2869010268[data_2869010268_Idx]).length - 1)].Field0 = hc_2869010271;

  
}

function enlarge_2869009827(t_2869009830) {
    var n_2869009833 = [];
    n_2869009833 = new Array(chckRange(mulInt((t_2869009830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2869009830.data).length, 2), 0, 2147483647) ; ++i) { n_2869009833[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2869009830.data; t_2869009830.data = n_2869009833; n_2869009833 = Temporary1;    Label2: {
      var i_2869009931 = 0;
      var colontmp__2818572542 = 0;
      colontmp__2818572542 = (n_2869009833).length - 1;
      var res_2818572543 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572543 <= colontmp__2818572542)) break Label4;
            i_2869009931 = res_2818572543;
            var eh_2869010012 = n_2869009833[chckIndx(i_2869009931, 0, (n_2869009833).length - 1)].Field0;
            if (isFilled_1308622880(eh_2869010012)) {
            var j_2869010016 = (eh_2869010012 & (t_2869009830.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2869009830.data[chckIndx(j_2869010016, 0, (t_2869009830.data).length - 1)].Field0)) break Label6;
                  j_2869010016 = nextTry_1308622883(j_2869010016, (t_2869009830.data).length - 1);
                }
            };
            rawInsert_2869010263(t_2869009830, t_2869009830, "data", n_2869009833[chckIndx(i_2869009931, 0, (n_2869009833).length - 1)].Field1, n_2869009833[chckIndx(i_2869009931, 0, (n_2869009833).length - 1)].Field2, eh_2869010012, j_2869010016);
            }
            
            res_2818572543 = addInt(res_2818572543, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2869010513(t_2869010516, key_2869010517, hc_2869010518) {
  var result_2869010519 = 0;

  BeforeRet: {
    if (((t_2869010516.data).length == 0)) {
    result_2869010519 = -1;
    break BeforeRet;
    }
    
    var h_2869010604 = (hc_2869010518 & (t_2869010516.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869010516.data[chckIndx(h_2869010604, 0, (t_2869010516.data).length - 1)].Field0)) break Label2;
          if (((t_2869010516.data[chckIndx(h_2869010604, 0, (t_2869010516.data).length - 1)].Field0 == hc_2869010518) && HEX3DHEX3D_2885684181(t_2869010516.data[chckIndx(h_2869010604, 0, (t_2869010516.data).length - 1)].Field1, key_2869010517))) {
          result_2869010519 = h_2869010604;
          break BeforeRet;
          }
          
          h_2869010604 = nextTry_1308622883(h_2869010604, (t_2869010516.data).length - 1);
        }
    };
    result_2869010519 = subInt(-1, h_2869010604);
  };

  return result_2869010519;

}

function HEX5BHEX5DHEX3D_2869009302(t_2869009305, key_2869009306, val_2869009307) {
    if (((t_2869009305.data).length == 0)) {
    var correctSizeHEX60gensym590_2869009390 = slotsNeeded_1308622891(32);
    t_2869009305.counter = 0;
    t_2869009305.data = new Array(chckRange(correctSizeHEX60gensym590_2869009390, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym590_2869009390, 0, 2147483647) ; ++i) { t_2869009305.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2869009395 = [0];
    var index_2869009402 = rawGet_2869004471(t_2869009305, key_2869009306, hc_2869009395, 0);
    if ((0 <= index_2869009402)) {
    t_2869009305.data[chckIndx(index_2869009402, 0, (t_2869009305.data).length - 1)].Field2 = nimCopy(null, val_2869009307, NTI2868903944);
    }
    else {
      if (((t_2869009305.data).length == 0)) {
      var correctSizeHEX60gensym593_2869009565 = slotsNeeded_1308622891(32);
      t_2869009305.counter = 0;
      t_2869009305.data = new Array(chckRange(correctSizeHEX60gensym593_2869009565, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym593_2869009565, 0, 2147483647) ; ++i) { t_2869009305.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2869009570(t_2869009305)) {
      enlarge_2869009827(t_2869009305);
      index_2869009402 = rawGetKnownHC_2869010513(t_2869009305, key_2869009306, hc_2869009395[0]);
      }
      
      index_2869009402 = subInt(-1, index_2869009402);
      rawInsert_2869010263(t_2869009305, t_2869009305, "data", key_2869009306, val_2869009307, hc_2869009395[0], index_2869009402);
      t_2869009305.counter = addInt(t_2869009305.counter, 1);
    }
    

  
}

function HEX5BHEX5D_2869011035(t_2869011038, key_2869011039) {
  var result_2869011040 = null;
  var result_2869011040_Idx = 0;

    var hcHEX60gensym22_2869011041 = [0];
    var indexHEX60gensym22_2869011048 = rawGet_2869004471(t_2869011038, key_2869011039, hcHEX60gensym22_2869011041, 0);
    if ((0 <= indexHEX60gensym22_2869011048)) {
    result_2869011040 = t_2869011038.data[chckIndx(indexHEX60gensym22_2869011048, 0, (t_2869011038.data).length - 1)]; result_2869011040_Idx = "Field2";
    }
    else {
    raiseKeyError_2885691953(key_2869011039);
    }
    

  return [result_2869011040, result_2869011040_Idx];

}

function del_2869011208(t_2869011211, key_2869011212) {
    var hc_2869011213 = [0];
    var i_2869011220 = rawGet_2869003316(t_2869011211, key_2869011212, hc_2869011213, 0);
    var mskHEX60gensym36_2869011224 = (t_2869011211.data).length - 1;
    if ((0 <= i_2869011220)) {
    t_2869011211.counter = subInt(t_2869011211.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2869011231 = i_2869011220;
            var rHEX60gensym36_2869011232 = jHEX60gensym36_2869011231;
            t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field0 = 0;
            t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field1 = nimCopy(t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field2 = nimCopy(null, [], NTI2868904272);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2869011220 = (addInt(i_2869011220, 1) & mskHEX60gensym36_2869011224);
                  if (isEmpty_1308622877(t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2869011232 = (t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)].Field0 & mskHEX60gensym36_2869011224);
                  if (!(((((rHEX60gensym36_2869011232 <= i_2869011220) && (jHEX60gensym36_2869011231 < rHEX60gensym36_2869011232)) || ((jHEX60gensym36_2869011231 < rHEX60gensym36_2869011232) && (i_2869011220 < jHEX60gensym36_2869011231))) || ((i_2869011220 < jHEX60gensym36_2869011231) && (rHEX60gensym36_2869011232 <= i_2869011220))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2869011211.data[chckIndx(jHEX60gensym36_2869011231, 0, (t_2869011211.data).length - 1)] = nimCopy(t_2869011211.data[chckIndx(jHEX60gensym36_2869011231, 0, (t_2869011211.data).length - 1)], t_2869011211.data[chckIndx(i_2869011220, 0, (t_2869011211.data).length - 1)], NTI2868904284);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_2868904755(ctx_2868904756, node_2868904757) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_2869003213 = null;

  BeforeRet: {
    var logQueryHEX60gensym555_2869003215 = (ctx_2868904756.enableLogging || ctx_2868904756.enableQueryLogging);
    if (logQueryHEX60gensym555_2869003215) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym555_2869003215) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2852128727(node_2868904757) || []));
    }
    
    try {
    var key_2869003226 = nimCopy(null, getTypeKey_2868976375(ctx_2868904756, getItem_2868957649(node_2868904757)), NTI2885681180);
    if (contains_2869003303(ctx_2868904756.diagnosticsPerQuery, key_2869003226)) {
    Label3: {
      var id_2869003876 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2818572381 = [];
      colontmp__2818572381 = (Temporary4 = HEX5BHEX5D_2869003748(ctx_2868904756.diagnosticsPerQuery, key_2869003226), Temporary4)[0][Temporary4[1]];
      var i_2818572383 = 0;
      var L_2818572384 = (colontmp__2818572381).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2818572383 < L_2818572384)) break Label6;
            id_2869003876 = colontmp__2818572381[chckIndx(i_2818572383, 0, (colontmp__2818572381).length - 1)];
            del_2869004465(HEX5BHEX5D_2869003957(ctx_2868904756.diagnosticsPerNode, id_2869003876).queries, key_2869003226);
            i_2818572383 = addInt(i_2818572383, 1);
            if (!(((colontmp__2818572381).length == L_2818572384))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_2869005579 = [];
    var ids_2869005584 = [];
    try {
    Label8: {
      var expr_2869011957 = node_2868904757;
      var pos_2869011958 = 0;
      var _ = pos_2869011958;
      if ((expr_2869011957.kind == 0)) {
      result_2869003213 = voidType_2952790428();
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_2868904757.text);
      result_2869003213 = intType_2952790430();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_2869011957.kind == 3)) {
      result_2869003213 = stringType_2952790432();
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 12)) {
      result_2869003213 = voidType_2952790428();
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 11)) {
      if ((len_2852126808(node_2868904757) < 3)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var params_2869011981 = HEX5BHEX5D_2852126804(node_2868904757, 0);
      recordDependency_2868957436(ctx_2868904756, getItem_2868957649(params_2869011981), -1);
      var returnTypeNode_2869011982 = HEX5BHEX5D_2852126804(node_2868904757, 1);
      var paramTypes_2869011987 = [];
      var ok_2869011988 = true;
      Label10: {
        var param_2869011992 = null;
        var i_2818572394 = 0;
        var L_2818572395 = (params_2869011981.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2818572394 < L_2818572395)) break Label12;
              param_2869011992 = params_2869011981.children[chckIndx(i_2818572394, 0, (params_2869011981.children).length - 1)];
              Label13: {
                var paramType_2869011993 = computeType_2868976946(ctx_2868904756, param_2869011992, true);
                if ((paramType_2869011993.kind == 0)) {
                ok_2869011988 = false;
                break Label13;
                }
                
                paramTypes_2869011987.push(paramType_2869011993);;
              };
              i_2818572394 = addInt(i_2818572394, 1);
              if (!(((params_2869011981.children).length == L_2818572395))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_2869012002 = computeType_2868976946(ctx_2868904756, returnTypeNode_2869011982, true);
      if ((returnTypeType_2869012002.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((returnTypeType_2869012002.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_2869011982.id, NTI2181038083);
      ids_2869005584.push(Temporary14);;
      var fmtRes_2869012019 = [mnewString(0)];
      fmtRes_2869012019[0].push.apply(fmtRes_2869012019[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2869012020(fmtRes_2869012019, 0, returnTypeType_2869012002, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012019[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var returnTypeValue_2869012029 = computeValue_2868980422(ctx_2868904756, returnTypeNode_2869011982, true);
      if ((returnTypeValue_2869012029.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_2869012029.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_2869011982.id, NTI2181038083);
      ids_2869005584.push(Temporary15);;
      var fmtRes_2869012046 = [mnewString(0)];
      fmtRes_2869012046[0].push.apply(fmtRes_2869012046[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3003123103(fmtRes_2869012046, 0, returnTypeValue_2869012029, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012046[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_2869012029;
      if (ConstSet67[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI2952790022)); }
      var returnType_2869012056 = Temporary16.typ;
      result_2869003213 = newFunctionType_2952790434(paramTypes_2869011987, returnType_2869012056);
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 8)) {
      if ((len_2852126808(node_2868904757) == 0)) {
      var Temporary17 = nimCopy(null, node_2868904757.id, NTI2181038083);
      ids_2869005584.push(Temporary17);;
      var fmtRes_2869012069 = mnewString(0);
      fmtRes_2869012069.push.apply(fmtRes_2869012069, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012069, NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var function_2869012074 = HEX5BHEX5D_2852126804(node_2868904757, 0);
      var functionType_2869012075 = computeType_2868976946(ctx_2868904756, function_2869012074, true);
      if ((functionType_2869012075.kind == 0)) {
      result_2869003213 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_2869012075.kind == 4))) {
      var Temporary18 = nimCopy(null, function_2869012074.id, NTI2181038083);
      ids_2869005584.push(Temporary18);;
      var fmtRes_2869012092 = [mnewString(0)];
      fmtRes_2869012092[0].push.apply(fmtRes_2869012092[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_2869012020(fmtRes_2869012092, 0, functionType_2869012075, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012092[0], NTI33554449)});;
      result_2869003213 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_2869012102 = subInt(len_2852126808(node_2868904757), 1);
      var Temporary21 = functionType_2869012075;
      if (ConstSet68[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI2952790019)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_2869012075;
        if (ConstSet75[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI2952790019)); }
        var Temporary23 = functionType_2869012075;
        if (ConstSet76[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI2952790019)); }
        Temporary20 = HEX3DHEX3D_2952790574((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_2952790449(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_2869012075;
        if (ConstSet77[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI2952790019)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_2869012102);      }      var isValidOpenAnyCall_2869012112 = Temporary19;
        var Temporary27 = functionType_2869012075;
        if (ConstSet78[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2952790019)); }
        if (!!((numArgs_2869012102 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_2869012112);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_2868904757.id, NTI2181038083);
      ids_2869005584.push(Temporary28);;
      var fmtRes_2869012124 = [mnewString(0)];
      fmtRes_2869012124[0].push.apply(fmtRes_2869012124[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_2869012075;
      if (ConstSet79[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI2952790019)); }
      formatValue_2332033544(fmtRes_2869012124, 0, (Temporary29.paramTypes).length, []);
      fmtRes_2869012124[0].push.apply(fmtRes_2869012124[0], [32,103,111,116,32]);;
      formatValue_2332033544(fmtRes_2869012124, 0, numArgs_2869012102, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012124[0], NTI33554449)});;
      result_2869003213 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_2869012142 = true;
      Label30: {
        var i_2869012147 = 0;
        var res_2818572399 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2818572399 <= numArgs_2869012102)) break Label32;
              i_2869012147 = res_2818572399;
              Label33: {
                var argType_2869012148 = computeType_2868976946(ctx_2868904756, HEX5BHEX5D_2852126804(node_2868904757, i_2869012147), true);
                if ((argType_2869012148.kind == 0)) {
                allArgsOk_2869012142 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_2869012112) Temporary34 = false; else {                    var Temporary35 = functionType_2869012075;
                    if (ConstSet80[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI2952790019)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_2869012147);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_2869012075;
                  if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI2952790019)); }
                if (!(HEX3DHEX3D_2952790574(argType_2869012148, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_2869012147, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2852126804(node_2868904757, i_2869012147).id, NTI2181038083);
                ids_2869005584.push(Temporary38);;
                var fmtRes_2869012164 = [mnewString(0)];
                fmtRes_2869012164[0].push.apply(fmtRes_2869012164[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2332033544(fmtRes_2869012164, 0, i_2869012147, []);
                fmtRes_2869012164[0].push.apply(fmtRes_2869012164[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_2869012075;
                if (ConstSet82[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI2952790019)); }
                formatValue_2869012020(fmtRes_2869012164, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_2869012147, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_2869012164[0].push.apply(fmtRes_2869012164[0], [32,103,111,116,32]);;
                formatValue_2869012020(fmtRes_2869012164, 0, argType_2869012148, []);
                diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012164[0], NTI33554449)});;
                allArgsOk_2869012142 = false;
                }
                
              };
              res_2818572399 = addInt(res_2818572399, 1);
            }
        };
      };
      if (!(allArgsOk_2869012142)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_2869012075;
      if (ConstSet83[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI2952790019)); }
      result_2869003213 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 4)) {
      if ((len_2852126808(node_2868904757) == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      result_2869003213 = computeType_2868976946(ctx_2868904756, HEX5BHEX5D_2852126804(node_2868904757, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 5)) {
      if ((len_2852126808(node_2868904757) < 1)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var typeNode_2869012192 = HEX5BHEX5D_2852126804(node_2868904757, 0);
      var typ_2869012193 = voidType_2952790428();
      if (!((typeNode_2869012192.kind == 0))) {
      var typeNodeType_2869012198 = computeType_2868976946(ctx_2868904756, typeNode_2869012192, true);
      if ((typeNodeType_2869012198.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2869012198.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_2869012192.id, NTI2181038083);
      ids_2869005584.push(Temporary42);;
      var fmtRes_2869012215 = [mnewString(0)];
      fmtRes_2869012215[0].push.apply(fmtRes_2869012215[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2869012020(fmtRes_2869012215, 0, typeNodeType_2869012198, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012215[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var typeNodeValue_2869012225 = computeValue_2868980422(ctx_2868904756, typeNode_2869012192, true);
      if ((typeNodeValue_2869012225.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2869012225.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_2869012192.id, NTI2181038083);
      ids_2869005584.push(Temporary43);;
      var fmtRes_2869012242 = [mnewString(0)];
      fmtRes_2869012242[0].push.apply(fmtRes_2869012242[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3003123103(fmtRes_2869012242, 0, typeNodeValue_2869012225, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012242[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_2869012225;
      if (ConstSet84[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI2952790022)); }
      typ_2869012193 = Temporary44.typ;
      }
      
      if ((2 <= len_2852126808(node_2868904757))) {
      var valueNode_2869012252 = HEX5BHEX5D_2852126804(node_2868904757, 1);
      if (!((valueNode_2869012252.kind == 0))) {
      var valueNodeType_2869012257 = computeType_2868976946(ctx_2868904756, valueNode_2869012252, true);
      if ((valueNodeType_2869012257.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if ((typ_2869012193.kind == 1)) {
      typ_2869012193 = valueNodeType_2869012257;
      }
      
      if (!(HEX3DHEX3D_2952790574(valueNodeType_2869012257, typ_2869012193))) {
      var Temporary45 = nimCopy(null, valueNode_2869012252.id, NTI2181038083);
      ids_2869005584.push(Temporary45);;
      var fmtRes_2869012274 = [mnewString(0)];
      fmtRes_2869012274[0].push.apply(fmtRes_2869012274[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2869012020(fmtRes_2869012274, 0, typ_2869012193, []);
      fmtRes_2869012274[0].push.apply(fmtRes_2869012274[0], [44,32,103,111,116,32]);;
      formatValue_2869012020(fmtRes_2869012274, 0, valueNodeType_2869012257, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012274[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2869003213 = typ_2869012193;
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 6)) {
      if ((len_2852126808(node_2868904757) < 1)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var typeNode_2869012293 = HEX5BHEX5D_2852126804(node_2868904757, 0);
      var typ_2869012294 = voidType_2952790428();
      if (!((typeNode_2869012293.kind == 0))) {
      var typeNodeType_2869012299 = computeType_2868976946(ctx_2868904756, typeNode_2869012293, true);
      if ((typeNodeType_2869012299.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2869012299.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_2869012293.id, NTI2181038083);
      ids_2869005584.push(Temporary46);;
      var fmtRes_2869012316 = [mnewString(0)];
      fmtRes_2869012316[0].push.apply(fmtRes_2869012316[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2869012020(fmtRes_2869012316, 0, typeNodeType_2869012299, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012316[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var typeNodeValue_2869012326 = computeValue_2868980422(ctx_2868904756, typeNode_2869012293, true);
      if ((typeNodeValue_2869012326.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2869012326.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_2869012293.id, NTI2181038083);
      ids_2869005584.push(Temporary47);;
      var fmtRes_2869012343 = [mnewString(0)];
      fmtRes_2869012343[0].push.apply(fmtRes_2869012343[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3003123103(fmtRes_2869012343, 0, typeNodeValue_2869012326, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012343[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_2869012326;
      if (ConstSet85[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI2952790022)); }
      typ_2869012294 = Temporary48.typ;
      }
      
      if ((2 <= len_2852126808(node_2868904757))) {
      var valueNode_2869012353 = HEX5BHEX5D_2852126804(node_2868904757, 1);
      if (!((valueNode_2869012353.kind == 0))) {
      var valueNodeType_2869012358 = computeType_2868976946(ctx_2868904756, valueNode_2869012353, true);
      if ((valueNodeType_2869012358.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if ((typ_2869012294.kind == 1)) {
      typ_2869012294 = valueNodeType_2869012358;
      }
      
      if (!(HEX3DHEX3D_2952790574(valueNodeType_2869012358, typ_2869012294))) {
      var Temporary49 = nimCopy(null, valueNode_2869012353.id, NTI2181038083);
      ids_2869005584.push(Temporary49);;
      var fmtRes_2869012375 = [mnewString(0)];
      fmtRes_2869012375[0].push.apply(fmtRes_2869012375[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2869012020(fmtRes_2869012375, 0, typ_2869012294, []);
      fmtRes_2869012375[0].push.apply(fmtRes_2869012375[0], [44,32,103,111,116,32]);;
      formatValue_2869012020(fmtRes_2869012375, 0, valueNodeType_2869012358, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869012375[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2869003213 = typ_2869012294;
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 1)) {
      var id_2869012394 = nimCopy(null, node_2868904757.reff, NTI2181038083);
      var symbols_2869012395 = computeSymbols_2868987052(ctx_2868904756, node_2868904757, true);
      if (contains_2869012472(symbols_2869012395, id_2869012394)) {
      var symbol_2869012999 = (Temporary50 = HEX5BHEX5D_2869012727(symbols_2869012395, id_2869012394), Temporary50)[0][Temporary50[1]];
      result_2869003213 = computeSymbolType_2868990524(ctx_2868904756, symbol_2869012999, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_2868904757.id, NTI2181038083);
      ids_2869005584.push(Temporary51);;
      var fmtRes_2869013008 = [mnewString(0)];
      fmtRes_2869013008[0].push.apply(fmtRes_2869013008[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_2885681372(fmtRes_2869013008, 0, id_2869012394, []);
      fmtRes_2869013008[0].push.apply(fmtRes_2869013008[0], [39]);;
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013008[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 7)) {
      if ((len_2852126808(node_2868904757) == 0)) {
      result_2869003213 = voidType_2952790428();
      break BeforeRet;
      }
      
      var lastType_2869013022 = null;
      Label52: {
        var child_2869013026 = null;
        var i_2818572402 = 0;
        var L_2818572403 = (node_2868904757.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2818572402 < L_2818572403)) break Label54;
              child_2869013026 = node_2868904757.children[chckIndx(i_2818572402, 0, (node_2868904757.children).length - 1)];
              lastType_2869013022 = computeType_2868976946(ctx_2868904756, child_2869013026, true);
              if ((lastType_2869013022.kind == 0)) {
              result_2869003213 = errorType_2952790392();
              break BeforeRet;
              }
              
              i_2818572402 = addInt(i_2818572402, 1);
              if (!(((node_2868904757.children).length == L_2818572403))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_2869003213 = lastType_2869013022;
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 9)) {
      if ((len_2852126808(node_2868904757) < 2)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var ok_2869013035 = true;
      var commonType_2869013038 = [none_2868976927()];
      var index_2869013039 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_2869013039, 1) < len_2852126808(node_2868904757))) break Label56;
            Label57: {
              try {
              var condition_2869013044 = HEX5BHEX5D_2852126804(node_2868904757, index_2869013039);
              var trueCase_2869013045 = HEX5BHEX5D_2852126804(node_2868904757, addInt(index_2869013039, 1));
              var conditionType_2869013046 = computeType_2868976946(ctx_2868904756, condition_2869013044, true);
              if ((conditionType_2869013046.kind == 0)) {
              ok_2869013035 = false;
              }
              else {
              if (!((conditionType_2869013046.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_2869013044.id, NTI2181038083);
              ids_2869005584.push(Temporary59);;
              var fmtRes_2869013063 = [mnewString(0)];
              fmtRes_2869013063[0].push.apply(fmtRes_2869013063[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_2869012020(fmtRes_2869013063, 0, conditionType_2869013046, []);
              diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013063[0], NTI33554449)});;
              ok_2869013035 = false;
              }
              }
              var trueCaseType_2869013073 = computeType_2868976946(ctx_2868904756, trueCase_2869013045, true);
              if ((trueCaseType_2869013073.kind == 0)) {
              ok_2869013035 = false;
              break Label57;
              }
              
              if ((isNone_2869013082(commonType_2869013038[0]) || HEX3DHEX3D_2952790574(trueCaseType_2869013073, (Temporary60 = get_2869013125(commonType_2869013038[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_2869013038[0] = nimCopy(commonType_2869013038[0], some_2868976914(trueCaseType_2869013073), NTI2868946880);
              }
              else {
                commonType_2869013038[0] = nimCopy(commonType_2869013038[0], some_2868976914(voidType_2952790428()), NTI2868946880);
              }
              
              } finally {
              index_2869013039 = addInt(index_2869013039, 2);
              }
            };
          }
      };
      if (!((modInt(len_2852126808(node_2868904757), 2) == 0))) {
      var falseCaseType_2869013152 = computeType_2868976946(ctx_2868904756, last_2852126978(node_2868904757), true);
      if ((falseCaseType_2869013152.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if ((isNone_2869013082(commonType_2869013038[0]) || HEX3DHEX3D_2952790574(falseCaseType_2869013152, (Temporary61 = get_2869013125(commonType_2869013038[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_2869013038[0] = nimCopy(commonType_2869013038[0], some_2868976914(falseCaseType_2869013152), NTI2868946880);
      }
      else {
        commonType_2869013038[0] = nimCopy(commonType_2869013038[0], some_2868976914(voidType_2952790428()), NTI2868946880);
      }
      
      }
      
      if (!(ok_2869013035)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      result_2869003213 = get_2869013243(commonType_2869013038[0], voidType_2952790428());
      break BeforeRet;
      }
      else {
      if ((expr_2869011957.kind == 10)) {
      if ((len_2852126808(node_2868904757) < 2)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var ok_2869013264 = true;
      var conditionType_2869013265 = computeType_2868976946(ctx_2868904756, HEX5BHEX5D_2852126804(node_2868904757, 0), true);
      if ((conditionType_2869013265.kind == 0)) {
      ok_2869013264 = false;
      }
      else {
      if (!((conditionType_2869013265.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2852126804(node_2868904757, 0).id, NTI2181038083);
      ids_2869005584.push(Temporary62);;
      var fmtRes_2869013282 = [mnewString(0)];
      fmtRes_2869013282[0].push.apply(fmtRes_2869013282[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_2869012020(fmtRes_2869013282, 0, conditionType_2869013265, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013282[0], NTI33554449)});;
      ok_2869013264 = false;
      }
      }
      var bodyType_2869013292 = computeType_2868976946(ctx_2868904756, HEX5BHEX5D_2852126804(node_2868904757, 1), true);
      if ((bodyType_2869013292.kind == 0)) {
      ok_2869013264 = false;
      }
      
      if (ok_2869013264) {
      result_2869003213 = voidType_2952790428();
      break BeforeRet;
      }
      else {
        result_2869003213 = errorType_2952790392();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_2869011957.kind == 13)) {
      if ((len_2852126808(node_2868904757) < 2)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var target_2869013301 = HEX5BHEX5D_2852126804(node_2868904757, 0);
      var value_2869013302 = HEX5BHEX5D_2852126804(node_2868904757, 1);
      var targetType_2869013303 = computeType_2868976946(ctx_2868904756, target_2869013301, true);
      if ((targetType_2869013303.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      var valueType_2869013308 = computeType_2868976946(ctx_2868904756, value_2869013302, true);
      if ((valueType_2869013308.kind == 0)) {
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_2952790574(targetType_2869013303, valueType_2869013308))) {
      var Temporary63 = nimCopy(null, value_2869013302.id, NTI2181038083);
      ids_2869005584.push(Temporary63);;
      var fmtRes_2869013321 = [mnewString(0)];
      fmtRes_2869013321[0].push.apply(fmtRes_2869013321[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_2869012020(fmtRes_2869013321, 0, valueType_2869013308, []);
      fmtRes_2869013321[0].push.apply(fmtRes_2869013321[0], [32,116,111,32]);;
      formatValue_2869012020(fmtRes_2869013321, 0, targetType_2869013303, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013321[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
        var oHEX60gensym687_2869013338 = computeSymbol_2868983552(ctx_2868904756, target_2869013301, true);
        if (!isSome_2952791605(oHEX60gensym687_2869013338)) Temporary64 = false; else {          var sym_2869013384 = get_2952791625(oHEX60gensym687_2869013338);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_2869013384.kind == 1)) {
      var Temporary65 = nimCopy(null, target_2869013301.id, NTI2181038083);
      ids_2869005584.push(Temporary65);;
      var fmtRes_2869013397 = [mnewString(0)];
      fmtRes_2869013397[0].push.apply(fmtRes_2869013397[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_2869013398(fmtRes_2869013397, 0, sym_2869013384, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013397[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      if (!((sym_2869013384.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_2869013384;
        if (ConstSet109[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI2952790025)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_2869013301.id, NTI2181038083);
      ids_2869005584.push(Temporary67);;
      var fmtRes_2869013428 = [mnewString(0)];
      fmtRes_2869013428[0].push.apply(fmtRes_2869013428[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_2869013398(fmtRes_2869013428, 0, sym_2869013384, []);
      diagnostics_2869005579.push({message: nimCopy(null, fmtRes_2869013428[0], NTI33554449)});;
      result_2869003213 = errorType_2952790392();
      break BeforeRet;
      }
      
      }
      
      result_2869003213 = voidType_2952790428();
      break BeforeRet;
      }
      else {
        result_2869003213 = errorType_2952790392();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_2869005579).length)) {
    HEX5BHEX5DHEX3D_2869005652(ctx_2868904756.diagnosticsPerQuery, key_2869003226, ids_2869005584);
    Label68: {
      var i_2869007236 = 0;
      var colontmp__2818572387 = 0;
      colontmp__2818572387 = (ids_2869005584).length - 1;
      var res_2818572388 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2818572388 <= colontmp__2818572387)) break Label70;
            i_2869007236 = res_2818572388;
            var id_2869007237 = nimCopy(null, ids_2869005584[chckIndx(i_2869007236, 0, (ids_2869005584).length - 1)], NTI2181038083);
            var diag_2869007238 = nimCopy(null, diagnostics_2869005579[chckIndx(i_2869007236, 0, (diagnostics_2869005579).length - 1)], NTI2868903939);
            if (!(contains_2869007315(ctx_2868904756.diagnosticsPerNode, id_2869007237))) {
            HEX5BHEX5DHEX3D_2869007397(ctx_2868904756.diagnosticsPerNode, id_2869007237, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_2869009131(HEX5BHEX5D_2869003957(ctx_2868904756.diagnosticsPerNode, id_2869007237).queries, key_2869003226))) {
            HEX5BHEX5DHEX3D_2869009302(HEX5BHEX5D_2869003957(ctx_2868904756.diagnosticsPerNode, id_2869007237).queries, key_2869003226, []);
            }
            
            var Temporary72 = nimCopy(null, diag_2869007238, NTI2868903939);
            (Temporary71 = HEX5BHEX5D_2869011035(HEX5BHEX5D_2869003957(ctx_2868904756.diagnosticsPerNode, id_2869007237).queries, key_2869003226), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2818572388 = addInt(res_2818572388, 1);
          }
      };
    };
    }
    else {
    del_2869011208(ctx_2868904756.diagnosticsPerQuery, key_2869003226);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym555_2869003215 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2952790452(result_2869003213) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym555_2869003215) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869003213;

}

function getOrDefault_2868906303(t_2868906306, key_2868906307, default_2868906308) {
    var Temporary1;

  var result_2868906309 = null;

    var hcHEX60gensym128_2868906312 = [0];
    var indexHEX60gensym128_2868906671 = rawGet_2868906313(t_2868906306, key_2868906307, hcHEX60gensym128_2868906312, 0);
    if ((0 <= indexHEX60gensym128_2868906671)) {
    Temporary1 = t_2868906306.data[chckIndx(indexHEX60gensym128_2868906671, 0, (t_2868906306.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868906308;
    }
    
    result_2868906309 = Temporary1;

  return result_2868906309;

}

function newDoublyLinkedNode_2868906796(value_2868906798) {
  var result_2868906799 = null;

    result_2868906799 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2868906799.value = nimCopy(result_2868906799.value, value_2868906798, NTI2868904301);

  return result_2868906799;

}

function mustRehash_2868907146(t_2868907148) {
  var result_2868907149 = false;

    if (!((t_2868907148.counter < (t_2868907148.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868907149 = ((mulInt((t_2868907148.data).length, 2) < mulInt(t_2868907148.counter, 3)) || (subInt((t_2868907148.data).length, t_2868907148.counter) < 4));

  return result_2868907149;

}

function rawInsert_2868907839(t_2868907843, data_2868907844, data_2868907844_Idx, key_2868907845, val_2868907846, hc_2868907847, h_2868907848) {
    data_2868907844[data_2868907844_Idx][chckIndx(h_2868907848, 0, (data_2868907844[data_2868907844_Idx]).length - 1)].Field1 = key_2868907845;
    data_2868907844[data_2868907844_Idx][chckIndx(h_2868907848, 0, (data_2868907844[data_2868907844_Idx]).length - 1)].Field2 = val_2868907846;
    data_2868907844[data_2868907844_Idx][chckIndx(h_2868907848, 0, (data_2868907844[data_2868907844_Idx]).length - 1)].Field0 = hc_2868907847;

  
}

function enlarge_2868907403(t_2868907406) {
    var n_2868907409 = [];
    n_2868907409 = new Array(chckRange(mulInt((t_2868907406.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868907406.data).length, 2), 0, 2147483647) ; ++i) { n_2868907409[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868907406.data; t_2868907406.data = n_2868907409; n_2868907409 = Temporary1;    Label2: {
      var i_2868907507 = 0;
      var colontmp__2818572550 = 0;
      colontmp__2818572550 = (n_2868907409).length - 1;
      var res_2818572551 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572551 <= colontmp__2818572550)) break Label4;
            i_2868907507 = res_2818572551;
            var eh_2868907588 = n_2868907409[chckIndx(i_2868907507, 0, (n_2868907409).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868907588)) {
            var j_2868907592 = (eh_2868907588 & (t_2868907406.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868907406.data[chckIndx(j_2868907592, 0, (t_2868907406.data).length - 1)].Field0)) break Label6;
                  j_2868907592 = nextTry_1308622883(j_2868907592, (t_2868907406.data).length - 1);
                }
            };
            rawInsert_2868907839(t_2868907406, t_2868907406, "data", n_2868907409[chckIndx(i_2868907507, 0, (n_2868907409).length - 1)].Field1, n_2868907409[chckIndx(i_2868907507, 0, (n_2868907409).length - 1)].Field2, eh_2868907588, j_2868907592);
            }
            
            res_2818572551 = addInt(res_2818572551, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868908089(t_2868908092, key_2868908093, hc_2868908094) {
  var result_2868908095 = 0;

  BeforeRet: {
    if (((t_2868908092.data).length == 0)) {
    result_2868908095 = -1;
    break BeforeRet;
    }
    
    var h_2868908180 = (hc_2868908094 & (t_2868908092.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868908092.data[chckIndx(h_2868908180, 0, (t_2868908092.data).length - 1)].Field0)) break Label2;
          if (((t_2868908092.data[chckIndx(h_2868908180, 0, (t_2868908092.data).length - 1)].Field0 == hc_2868908094) && (t_2868908092.data[chckIndx(h_2868908180, 0, (t_2868908092.data).length - 1)].Field1 == key_2868908093))) {
          result_2868908095 = h_2868908180;
          break BeforeRet;
          }
          
          h_2868908180 = nextTry_1308622883(h_2868908180, (t_2868908092.data).length - 1);
        }
    };
    result_2868908095 = subInt(-1, h_2868908180);
  };

  return result_2868908095;

}

function HEX5BHEX5DHEX3D_2868906878(t_2868906881, key_2868906882, val_2868906883) {
    if (((t_2868906881.data).length == 0)) {
    var correctSizeHEX60gensym133_2868906966 = slotsNeeded_1308622891(32);
    t_2868906881.counter = 0;
    t_2868906881.data = new Array(chckRange(correctSizeHEX60gensym133_2868906966, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym133_2868906966, 0, 2147483647) ; ++i) { t_2868906881.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868906971 = [0];
    var index_2868906978 = rawGet_2868906313(t_2868906881, key_2868906882, hc_2868906971, 0);
    if ((0 <= index_2868906978)) {
    t_2868906881.data[chckIndx(index_2868906978, 0, (t_2868906881.data).length - 1)].Field2 = val_2868906883;
    }
    else {
      if (((t_2868906881.data).length == 0)) {
      var correctSizeHEX60gensym136_2868907141 = slotsNeeded_1308622891(32);
      t_2868906881.counter = 0;
      t_2868906881.data = new Array(chckRange(correctSizeHEX60gensym136_2868907141, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_2868907141, 0, 2147483647) ; ++i) { t_2868906881.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868907146(t_2868906881)) {
      enlarge_2868907403(t_2868906881);
      index_2868906978 = rawGetKnownHC_2868908089(t_2868906881, key_2868906882, hc_2868906971[0]);
      }
      
      index_2868906978 = subInt(-1, index_2868906978);
      rawInsert_2868907839(t_2868906881, t_2868906881, "data", key_2868906882, val_2868906883, hc_2868906971[0], index_2868906978);
      t_2868906881.counter = addInt(t_2868906881.counter, 1);
    }
    

  
}

function rawGet_2868908720(t_2868908723, key_2868908724, hc_2868908725, hc_2868908725_Idx) {
  var result_2868908726 = 0;

  BeforeRet: {
    hc_2868908725[hc_2868908725_Idx] = hash_2852129075(key_2868908724);
    if ((hc_2868908725[hc_2868908725_Idx] == 0)) {
    hc_2868908725[hc_2868908725_Idx] = 314159265;
    }
    
    if (((t_2868908723.data).length == 0)) {
    result_2868908726 = -1;
    break BeforeRet;
    }
    
    var h_2868908812 = (hc_2868908725[hc_2868908725_Idx] & (t_2868908723.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868908723.data[chckIndx(h_2868908812, 0, (t_2868908723.data).length - 1)].Field0)) break Label2;
          if (((t_2868908723.data[chckIndx(h_2868908812, 0, (t_2868908723.data).length - 1)].Field0 == hc_2868908725[hc_2868908725_Idx]) && (t_2868908723.data[chckIndx(h_2868908812, 0, (t_2868908723.data).length - 1)].Field1 == key_2868908724))) {
          result_2868908726 = h_2868908812;
          break BeforeRet;
          }
          
          h_2868908812 = nextTry_1828716586(h_2868908812, (t_2868908723.data).length - 1);
        }
    };
    result_2868908726 = subInt(-1, h_2868908812);
  };

  return result_2868908726;

}

function exclImpl_2868908714(s_2868908716, key_2868908717) {
          var Temporary5;

  var result_2868908718 = false;

  BeforeRet: {
    var hc_2868908719 = [0];
    var i_2868909078 = rawGet_2868908720(s_2868908716, key_2868908717, hc_2868908719, 0);
    var msk_2868909082 = (s_2868908716.data).length - 1;
    result_2868908718 = true;
    if ((0 <= i_2868909078)) {
    result_2868908718 = false;
    s_2868908716.counter = subInt(s_2868908716.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2868909088 = i_2868909078;
          var r_2868909089 = j_2868909088;
          s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)].Field0 = 0;
          s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2868909078 = (addInt(i_2868909078, 1) & msk_2868909082);
                if (isEmpty_1828716580(s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2868909089 = (s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)].Field0 & msk_2868909082);
                if (!(((((r_2868909089 <= i_2868909078) && (j_2868909088 < r_2868909089)) || ((j_2868909088 < r_2868909089) && (i_2868909078 < j_2868909088))) || ((i_2868909078 < j_2868909088) && (r_2868909089 <= i_2868909078))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)];
          s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)] = genericReset(s_2868908716.data[chckIndx(i_2868909078, 0, (s_2868908716.data).length - 1)], NTI2868904357);
          s_2868908716.data[chckIndx(j_2868909088, 0, (s_2868908716.data).length - 1)] = nimCopy(s_2868908716.data[chckIndx(j_2868909088, 0, (s_2868908716.data).length - 1)], Temporary5, NTI2868904357);
        }
    };
    }
    
  };

  return result_2868908718;

}

function excl_2868908699(s_2868908701, key_2868908702) {
    var _ = exclImpl_2868908714(s_2868908701, key_2868908702);

  
}

function len_2868909833(t_2868909836) {
  var result_2868909837 = 0;

    result_2868909837 = t_2868909836.counter;

  return result_2868909837;

}

function len_2868909750(cache_2868909753) {
  var result_2868909754 = 0;

    result_2868909754 = len_2868909833(cache_2868909753.table);

  return result_2868909754;

}

function mustRehash_2868909974(t_2868909976) {
  var result_2868909977 = false;

    if (!((t_2868909976.counter < (t_2868909976.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868909977 = ((mulInt((t_2868909976.data).length, 2) < mulInt(t_2868909976.counter, 3)) || (subInt((t_2868909976.data).length, t_2868909976.counter) < 4));

  return result_2868909977;

}

function rawGetKnownHC_2868910580(t_2868910583, key_2868910584, hc_2868910585) {
  var result_2868910586 = 0;

  BeforeRet: {
    if (((t_2868910583.data).length == 0)) {
    result_2868910586 = -1;
    break BeforeRet;
    }
    
    var h_2868910671 = (hc_2868910585 & (t_2868910583.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868910583.data[chckIndx(h_2868910671, 0, (t_2868910583.data).length - 1)].Field0)) break Label2;
          if (((t_2868910583.data[chckIndx(h_2868910671, 0, (t_2868910583.data).length - 1)].Field0 == hc_2868910585) && (t_2868910583.data[chckIndx(h_2868910671, 0, (t_2868910583.data).length - 1)].Field1 == key_2868910584))) {
          result_2868910586 = h_2868910671;
          break BeforeRet;
          }
          
          h_2868910671 = nextTry_1828716586(h_2868910671, (t_2868910583.data).length - 1);
        }
    };
    result_2868910586 = subInt(-1, h_2868910671);
  };

  return result_2868910586;

}

function rawInsert_2868911084(s_2868911086, data_2868911087, data_2868911087_Idx, key_2868911088, hc_2868911089, h_2868911090) {
    if (((data_2868911087[data_2868911087_Idx]).length == 0)) {
    var correctSizeHEX60gensym155_2868911173 = slotsNeeded_1828716594(64);
    s_2868911086.counter = 0;
    s_2868911086.data = new Array(chckRange(correctSizeHEX60gensym155_2868911173, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym155_2868911173, 0, 2147483647) ; ++i) { s_2868911086.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2868911087[data_2868911087_Idx][chckIndx(h_2868911090, 0, (data_2868911087[data_2868911087_Idx]).length - 1)].Field1 = key_2868911088;
    data_2868911087[data_2868911087_Idx][chckIndx(h_2868911090, 0, (data_2868911087[data_2868911087_Idx]).length - 1)].Field0 = hc_2868911089;

  
}

function enlarge_2868910237(s_2868910239) {
    var n_2868910241 = [];
    n_2868910241 = new Array(chckRange(mulInt((s_2868910239.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2868910239.data).length, 2), 0, 2147483647) ; ++i) { n_2868910241[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2868910239.data; s_2868910239.data = n_2868910241; n_2868910241 = Temporary1;    Label2: {
      var i_2868910339 = 0;
      var colontmp__2818572559 = 0;
      colontmp__2818572559 = (n_2868910241).length - 1;
      var res_2818572560 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572560 <= colontmp__2818572559)) break Label4;
            i_2868910339 = res_2818572560;
            if (isFilled_1828716583(n_2868910241[chckIndx(i_2868910339, 0, (n_2868910241).length - 1)].Field0)) {
            var j_2868910919 = subInt(-1, rawGetKnownHC_2868910580(s_2868910239, n_2868910241[chckIndx(i_2868910339, 0, (n_2868910241).length - 1)].Field1, n_2868910241[chckIndx(i_2868910339, 0, (n_2868910241).length - 1)].Field0));
            rawInsert_2868911084(s_2868910239, s_2868910239, "data", n_2868910241[chckIndx(i_2868910339, 0, (n_2868910241).length - 1)].Field1, n_2868910241[chckIndx(i_2868910339, 0, (n_2868910241).length - 1)].Field0, j_2868910919);
            }
            
            res_2818572560 = addInt(res_2818572560, 1);
          }
      };
    };

  
}

function incl_2868909858(s_2868909860, key_2868909861) {
    if (((s_2868909860.data).length == 0)) {
    var correctSizeHEX60gensym148_2868909944 = slotsNeeded_1828716594(64);
    s_2868909860.counter = 0;
    s_2868909860.data = new Array(chckRange(correctSizeHEX60gensym148_2868909944, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_2868909944, 0, 2147483647) ; ++i) { s_2868909860.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2868909959 = [0];
    var index_2868909973 = rawGet_2868908720(s_2868909860, key_2868909861, hc_2868909959, 0);
    if ((index_2868909973 < 0)) {
    if (mustRehash_2868909974(s_2868909860)) {
    enlarge_2868910237(s_2868909860);
    index_2868909973 = rawGetKnownHC_2868910580(s_2868909860, key_2868909861, hc_2868909959[0]);
    }
    
    rawInsert_2868911084(s_2868909860, s_2868909860, "data", key_2868909861, hc_2868909959[0], subInt(-1, index_2868909973));
    s_2868909860.counter = addInt(s_2868909860.counter, 1);
    }
    

  
}

function del_2868911440(t_2868911443, key_2868911444) {
    var hc_2868911445 = [0];
    var i_2868911452 = rawGet_2868906313(t_2868911443, key_2868911444, hc_2868911445, 0);
    var mskHEX60gensym36_2868911456 = (t_2868911443.data).length - 1;
    if ((0 <= i_2868911452)) {
    t_2868911443.counter = subInt(t_2868911443.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868911463 = i_2868911452;
            var rHEX60gensym36_2868911464 = jHEX60gensym36_2868911463;
            t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)].Field0 = 0;
            t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)].Field1 = null;
            t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868911452 = (addInt(i_2868911452, 1) & mskHEX60gensym36_2868911456);
                  if (isEmpty_1308622877(t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868911464 = (t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)].Field0 & mskHEX60gensym36_2868911456);
                  if (!(((((rHEX60gensym36_2868911464 <= i_2868911452) && (jHEX60gensym36_2868911463 < rHEX60gensym36_2868911464)) || ((jHEX60gensym36_2868911463 < rHEX60gensym36_2868911464) && (i_2868911452 < jHEX60gensym36_2868911463))) || ((i_2868911452 < jHEX60gensym36_2868911463) && (rHEX60gensym36_2868911464 <= i_2868911452))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868911443.data[chckIndx(jHEX60gensym36_2868911463, 0, (t_2868911443.data).length - 1)] = nimCopy(t_2868911443.data[chckIndx(jHEX60gensym36_2868911463, 0, (t_2868911443.data).length - 1)], t_2868911443.data[chckIndx(i_2868911452, 0, (t_2868911443.data).length - 1)], NTI2868904337);
          }
      };
    };
    }
    

  
}

function resize_2868909668(cache_2868909671) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868909671.capacity < len_2868909750(cache_2868909671))) break Label2;
          var t_2868909838 = cache_2868909671.list.tail;
          if (cache_2868909671.recordRemovedKeys) {
          incl_2868909858(cache_2868909671.removedKeys, t_2868909838.value.key);
          }
          
          del_2868911440(cache_2868909671.table, t_2868909838.value.key);
          remove_2868912199(cache_2868909671.list, t_2868909838);
        }
    };

  
}

function addNewNode_2868906788(cache_2868906791, key_2868906792, val_2868906793) {
    var node_2868906814 = newDoublyLinkedNode_2868906796({key: key_2868906792, val: val_2868906793});
    HEX5BHEX5DHEX3D_2868906878(cache_2868906791.table, key_2868906792, node_2868906814);
    prepend_2868908489(cache_2868906791.list, node_2868906814);
    if (cache_2868906791.recordRemovedKeys) {
    excl_2868908699(cache_2868906791.removedKeys, key_2868906792);
    }
    
    resize_2868909668(cache_2868906791);

  
}

function HEX5BHEX5DHEX3D_2868906208(cache_2868906211, key_2868906212, val_2868906213) {
    var node_2868906761 = getOrDefault_2868906303(cache_2868906211.table, key_2868906212, null);
    if ((node_2868906761 == null)) {
    addNewNode_2868906788(cache_2868906211, key_2868906212, val_2868906213);
    }
    else {
      node_2868906761.value.val = val_2868906213;
      remove_2868912199(cache_2868906211.list, node_2868906761);
      prepend_2868908489(cache_2868906211.list, node_2868906761);
    }
    

  
}

function HEX26_2952790625(x_2952790627, y_2952790628) {
  var result_2952790629 = [];

    result_2952790629 = new Array(chckRange(addInt((x_2952790627).length, (y_2952790628).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2952790627).length, (y_2952790628).length), 0, 2147483647) ; ++i) { result_2952790629[i] = 0; }    Label1: {
      var i_2952790647 = 0;
      var colontmp__2818572571 = 0;
      colontmp__2818572571 = subInt((x_2952790627).length, 1);
      var res_2818572572 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572572 <= colontmp__2818572571)) break Label3;
            i_2952790647 = res_2818572572;
            result_2952790629[chckIndx(i_2952790647, 0, (result_2952790629).length - 1)] = x_2952790627[chckIndx(i_2952790647, 0, (x_2952790627).length - 1)];
            res_2818572572 = addInt(res_2818572572, 1);
          }
      };
    };
    Label4: {
      var i_2952790655 = 0;
      var colontmp__2818572575 = 0;
      colontmp__2818572575 = subInt((y_2952790628).length, 1);
      var res_2818572576 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818572576 <= colontmp__2818572575)) break Label6;
            i_2952790655 = res_2818572576;
            result_2952790629[chckIndx(addInt(i_2952790655, (x_2952790627).length), 0, (result_2952790629).length - 1)] = y_2952790628[chckIndx(i_2952790655, 0, (y_2952790628).length - 1)];
            res_2818572576 = addInt(res_2818572576, 1);
          }
      };
    };

  return result_2952790629;

}

function add_2952790663(x_2952790665, x_2952790665_Idx, y_2952790666) {
    var Temporary1;

    var xl_2952790670 = (x_2952790665[x_2952790665_Idx]).length;
    if (x_2952790665[x_2952790665_Idx].length < (Temporary1 = chckRange(addInt(xl_2952790670, (y_2952790666).length), 0, 2147483647), Temporary1)) { for (var i = x_2952790665[x_2952790665_Idx].length ; i < Temporary1 ; ++i) x_2952790665[x_2952790665_Idx].push(0); }
               else { x_2952790665[x_2952790665_Idx].length = Temporary1; };
    Label2: {
      var i_2952790685 = 0;
      var colontmp__2818572579 = 0;
      colontmp__2818572579 = (y_2952790666).length - 1;
      var res_2818572580 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572580 <= colontmp__2818572579)) break Label4;
            i_2952790685 = res_2818572580;
            x_2952790665[x_2952790665_Idx][chckIndx(addInt(xl_2952790670, i_2952790685), 0, (x_2952790665[x_2952790665_Idx]).length - 1)] = y_2952790666[chckIndx(i_2952790685, 0, (y_2952790666).length - 1)];
            res_2818572580 = addInt(res_2818572580, 1);
          }
      };
    };

  
}

function fingerprint_2952790618(typ_2952790619) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_2952790620 = [[]];

    switch (typ_2952790619.kind) {
    case 4:
      var Temporary1 = typ_2952790619;
      if (ConstSet110[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790019)); }
      result_2952790620[0] = nimCopy(null, HEX26_2952790625([typ_2952790619.kind], fingerprint_2952790618(Temporary1.returnType)), NTI2952790471);
      Label2: {
        var param_2952790662 = null;
        var colontmp__2818572566 = [];
        var Temporary3 = typ_2952790619;
        if (ConstSet111[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790019)); }
        colontmp__2818572566 = Temporary3.paramTypes;
        var i_2818572567 = 0;
        var L_2818572568 = (colontmp__2818572566).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2818572567 < L_2818572568)) break Label5;
              param_2952790662 = colontmp__2818572566[chckIndx(i_2818572567, 0, (colontmp__2818572566).length - 1)];
              add_2952790663(result_2952790620, 0, fingerprint_2952790618(param_2952790662));
              i_2818572567 = addInt(i_2818572567, 1);
              if (!(((colontmp__2818572566).length == L_2818572568))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_2952790619;
      if (ConstSet112[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790019)); }
      result_2952790620[0] = nimCopy(null, [typ_2952790619.kind, Temporary6.open], NTI2885681485);
      break;
    default: 
      result_2952790620[0] = nimCopy(null, [typ_2952790619.kind], NTI2952790465);
      break;
    }

  return result_2952790620[0];

}

function initDoublyLinkedList_2868912642() {
  var result_2868912644 = ({head: null, tail: null});

  return result_2868912644;

}

function initTable_2868912648(initialSize_2868912651) {
  var result_2868912652 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_2868912654 = slotsNeeded_1308622891(chckRange(initialSize_2868912651, 0, 2147483647));
    result_2868912652.counter = 0;
    result_2868912652.data = new Array(chckRange(correctSizeHEX60gensym156_2868912654, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_2868912654, 0, 2147483647) ; ++i) { result_2868912652.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868912652;

}

function newLruCache_2868912632(capacity_2868912635, recordRemovedKeys_2868912636) {
  var result_2868912637 = null;

    result_2868912637 = {capacity: capacity_2868912635, list: initDoublyLinkedList_2868912642(), table: initTable_2868912648(correctSize_2902458389(capacity_2868912635)), recordRemovedKeys: recordRemovedKeys_2868912636, removedKeys: ({data: [], counter: 0})};

  return result_2868912637;

}

function newCache_2868912627(capacity_2868912630) {
  var result_2868912631 = null;

    result_2868912631 = newLruCache_2868912632(capacity_2868912630, false);

  return result_2868912631;

}

function init_2868912622(result_2868912625, result_2868912625_Idx, capacity_2868912626) {
    result_2868912625[result_2868912625_Idx] = newCache_2868912627(capacity_2868912626);

  
}

function errorValue_2952790703() {
  var result_2952790704 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790704 = nimCopy(result_2952790704, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);

  return result_2952790704;

}

function HEX5BHEX5D_3003123477(s_3003123481, x_3003123482) {
  var result_3003123483 = [];

    var a_3003123485 = x_3003123482.a;
    var L_3003123491 = addInt(subInt(subInt((s_3003123481).length, x_3003123482.b), a_3003123485), 1);
    result_3003123483 = new Array(chckRange(L_3003123491, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3003123491, 0, 2147483647) ; ++i) { result_3003123483[i] = null; }    Label1: {
      var i_3003123500 = 0;
      var i_2818572590 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572590 < L_3003123491)) break Label3;
            i_3003123500 = i_2818572590;
            result_3003123483[chckIndx(i_3003123500, 0, (result_3003123483).length - 1)] = s_3003123481[chckIndx(addInt(i_3003123500, a_3003123485), 0, (s_3003123481).length - 1)];
            i_2818572590 = addInt(i_2818572590, 1);
          }
      };
    };

  return result_3003123483;

}

function formatValue_2952790851(result_2952790853, result_2952790853_Idx, value_2952790854, specifier_2952790855) {
    formatValue_721420459(result_2952790853, result_2952790853_Idx, HEX24_2852128727(value_2952790854), specifier_2952790855);

  
}

function hash_2952790765(x_2952790767) {
  var result_2952790768 = 0;

    result_2952790768 = hashWangYi1_1325400244(x_2952790767);

  return result_2952790768;

}

function hash_2952790527(x_2952790529) {
  var result_2952790530 = 0;

    result_2952790530 = hashWangYi1_1325400244(x_2952790529);

  return result_2952790530;

}

function hash_2952790538(x_2952790540) {
  var result_2952790541 = 0;

    Label1: {
      var a_2952790555 = null;
      var i_2818572607 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572607 < (x_2952790540).length)) break Label3;
            a_2952790555 = x_2952790540[chckIndx(i_2818572607, 0, (x_2952790540).length - 1)];
            result_2952790541 = HEX21HEX26_1325400067(result_2952790541, hash_2952790524(a_2952790555));
            i_2818572607 = addInt(i_2818572607, 1);
          }
      };
    };
    result_2952790541 = HEX21HEX24_1325400082(result_2952790541);

  return result_2952790541;

}

function hash_2566916667(x_2566916669) {
  var result_2566916670 = 0;

    result_2566916670 = hashWangYi1_1325400244((x_2566916669 ? 1 : 0));

  return result_2566916670;

}

function hash_2952790524(typ_2952790525) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2952790526 = 0;

  BeforeRet: {
    switch (typ_2952790525.kind) {
    case 4:
      var Temporary2 = typ_2952790525;
      if (ConstSet118[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790019)); }
      var Temporary3 = typ_2952790525;
      if (ConstSet119[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790019)); }
      Temporary1 = ((hash_2952790527(typ_2952790525.kind) ^ hash_2952790524(Temporary2.returnType)) ^ hash_2952790538(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_2952790525;
      if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790019)); }
      Temporary1 = (hash_2952790527(typ_2952790525.kind) ^ hash_2566916667(Temporary4.open));
      break;
    default: 
      result_2952790526 = hash_2952790527(typ_2952790525.kind);
      break BeforeRet;
      break;
    }
    result_2952790526 = Temporary1;
  };

  return result_2952790526;

}

function hash_2952790762(value_2952790763) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2952790764 = 0;

  BeforeRet: {
    switch (value_2952790763.kind) {
    case 0:
      result_2952790764 = hash_2952790765(value_2952790763.kind);
      break BeforeRet;
      break;
    case 1:
      result_2952790764 = hash_2952790765(value_2952790763.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_2952790763;
      if (ConstSet115[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
      result_2952790764 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_2952790763;
      if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790022)); }
      result_2952790764 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_2952790764 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2952790763;
      if (ConstSet117[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790022)); }
      result_2952790764 = hash_2852129075(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_2952790763;
      if (ConstSet121[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790022)); }
      result_2952790764 = hash_2952790524(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_2952790764;

}

function hash_2952790996(x_2952790998) {
  var result_2952790999 = 0;

    Label1: {
      var a_2952791013 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2818572603 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572603 < (x_2952790998).length)) break Label3;
            a_2952791013 = x_2952790998[chckIndx(i_2818572603, 0, (x_2952790998).length - 1)];
            result_2952790999 = HEX21HEX26_1325400067(result_2952790999, hash_2952790762(a_2952791013));
            i_2818572603 = addInt(i_2818572603, 1);
          }
      };
    };
    result_2952790999 = HEX21HEX24_1325400082(result_2952790999);

  return result_2952790999;

}

function hash_2952791014(x_2952791016) {
  var result_2952791017 = 0;

    result_2952791017 = HEX21HEX26_1325400067(result_2952791017, hash_1325400236(x_2952791016.val));
    result_2952791017 = HEX21HEX26_1325400067(result_2952791017, hash_2566916667(x_2952791016.has));
    result_2952791017 = HEX21HEX24_1325400082(result_2952791017);

  return result_2952791017;

}

function hash_2952790993(fec_2952790994) {
  var result_2952790995 = 0;

    result_2952790995 = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_2852129075(fec_2952790994.node), hash_2952790996(fec_2952790994.arguments)), hash_2952791014(fec_2952790994.maxLoopIterations));
    result_2952790995 = HEX21HEX24_1325400082(result_2952790995);

  return result_2952790995;

}

function HEX3DHEX3D_2952791054(x_2952791056, y_2952791057) {
  var result_2952791058 = false;

  BeforeRet: {
    var sameObject_2952791065 = false;
    sameObject_2952791065 = x_2952791056 === y_2952791057
    if (sameObject_2952791065) {
    result_2952791058 = true;
    break BeforeRet;
    }
    
    if (!(((x_2952791056).length == (y_2952791057).length))) {
    result_2952791058 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2952791079 = 0;
      var colontmp__2818572610 = 0;
      colontmp__2818572610 = subInt((x_2952791056).length, 1);
      var res_2818572611 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572611 <= colontmp__2818572610)) break Label3;
            i_2952791079 = res_2818572611;
            if (!(HEX3DHEX3D_2952790782(x_2952791056[chckIndx(i_2952791079, 0, (x_2952791056).length - 1)], y_2952791057[chckIndx(i_2952791079, 0, (y_2952791057).length - 1)]))) {
            result_2952791058 = false;
            break BeforeRet;
            }
            
            res_2818572611 = addInt(res_2818572611, 1);
          }
      };
    };
    result_2952791058 = true;
    break BeforeRet;
  };

  return result_2952791058;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_2952791130(a_2952791132, b_2952791133) {
  var result_2952791134 = false;

    result_2952791134 = (((isSome_1191185117(a_2952791132) && isSome_1191185117(b_2952791133)) && (a_2952791132.val == b_2952791133.val)) || (isNone_1191185194(a_2952791132) && isNone_1191185194(b_2952791133)));

  return result_2952791134;

}

function HEX3DHEX3D_2952791037(a_2952791038, b_2952791039) {
  var result_2952791040 = false;

  BeforeRet: {
    if ((a_2952791038 == null)) {
    result_2952791040 = (b_2952791039 == null);
    break BeforeRet;
    }
    
    if ((b_2952791039 == null)) {
    result_2952791040 = false;
    break BeforeRet;
    }
    
    if (!((a_2952791038.node == b_2952791039.node))) {
    result_2952791040 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2952791054(a_2952791038.arguments, b_2952791039.arguments))) {
    result_2952791040 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2952791130(a_2952791038.maxLoopIterations, b_2952791039.maxLoopIterations))) {
    result_2952791040 = false;
    break BeforeRet;
    }
    
    result_2952791040 = true;
    break BeforeRet;
  };

  return result_2952791040;

}

function getItem_2868970322(selfHEX60gensym84_2868970323) {
  var result_2868970324 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym84_2868970323.id, null_2181038340)) {
    selfHEX60gensym84_2868970323.id = nimCopy(selfHEX60gensym84_2868970323.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym84_2868970323.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2818572613 = nimCopy(null, selfHEX60gensym84_2868970323.id, NTI2181038083);
    var colontmp__2818572614 = 3;
    result_2868970324 = nimCopy(result_2868970324, {Field0: nimCopy(null, colontmp__2818572613, NTI2181038083), Field1: colontmp__2818572614}, NTI2885681177);
    break BeforeRet;
  };

  return result_2868970324;

}

function rawGet_2868937798(t_2868937801, key_2868937802, hc_2868937803, hc_2868937803_Idx) {
  var result_2868937804 = 0;

  BeforeRet: {
    hc_2868937803[hc_2868937803_Idx] = hash_2868904984(key_2868937802);
    if ((hc_2868937803[hc_2868937803_Idx] == 0)) {
    hc_2868937803[hc_2868937803_Idx] = 314159265;
    }
    
    if (((t_2868937801.data).length == 0)) {
    result_2868937804 = -1;
    break BeforeRet;
    }
    
    var h_2868937893 = (hc_2868937803[hc_2868937803_Idx] & (t_2868937801.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868937801.data[chckIndx(h_2868937893, 0, (t_2868937801.data).length - 1)].Field0)) break Label2;
          if (((t_2868937801.data[chckIndx(h_2868937893, 0, (t_2868937801.data).length - 1)].Field0 == hc_2868937803[hc_2868937803_Idx]) && HEX3DHEX3D_2868905321(t_2868937801.data[chckIndx(h_2868937893, 0, (t_2868937801.data).length - 1)].Field1, key_2868937802))) {
          result_2868937804 = h_2868937893;
          break BeforeRet;
          }
          
          h_2868937893 = nextTry_1308622883(h_2868937893, (t_2868937801.data).length - 1);
        }
    };
    result_2868937804 = subInt(-1, h_2868937893);
  };

  return result_2868937804;

}

function getOrDefault_2868970573(t_2868970576, key_2868970577, default_2868970578) {
    var Temporary1;

  var result_2868970579 = null;

    var hcHEX60gensym447_2868970582 = [0];
    var indexHEX60gensym447_2868970589 = rawGet_2868937798(t_2868970576, key_2868970577, hcHEX60gensym447_2868970582, 0);
    if ((0 <= indexHEX60gensym447_2868970589)) {
    Temporary1 = t_2868970576.data[chckIndx(indexHEX60gensym447_2868970589, 0, (t_2868970576.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868970578;
    }
    
    result_2868970579 = Temporary1;

  return result_2868970579;

}

function newDoublyLinkedNode_2868970705(value_2868970707) {
  var result_2868970708 = null;

    result_2868970708 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2868970708.value = nimCopy(result_2868970708.value, value_2868970707, NTI2868904199);

  return result_2868970708;

}

function mustRehash_2868971046(t_2868971048) {
  var result_2868971049 = false;

    if (!((t_2868971048.counter < (t_2868971048.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868971049 = ((mulInt((t_2868971048.data).length, 2) < mulInt(t_2868971048.counter, 3)) || (subInt((t_2868971048.data).length, t_2868971048.counter) < 4));

  return result_2868971049;

}

function rawInsert_2868971739(t_2868971743, data_2868971744, data_2868971744_Idx, key_2868971745, val_2868971746, hc_2868971747, h_2868971748) {
    data_2868971744[data_2868971744_Idx][chckIndx(h_2868971748, 0, (data_2868971744[data_2868971744_Idx]).length - 1)].Field1 = nimCopy(data_2868971744[data_2868971744_Idx][chckIndx(h_2868971748, 0, (data_2868971744[data_2868971744_Idx]).length - 1)].Field1, key_2868971745, NTI2885681177);
    data_2868971744[data_2868971744_Idx][chckIndx(h_2868971748, 0, (data_2868971744[data_2868971744_Idx]).length - 1)].Field2 = val_2868971746;
    data_2868971744[data_2868971744_Idx][chckIndx(h_2868971748, 0, (data_2868971744[data_2868971744_Idx]).length - 1)].Field0 = hc_2868971747;

  
}

function enlarge_2868971303(t_2868971306) {
    var n_2868971309 = [];
    n_2868971309 = new Array(chckRange(mulInt((t_2868971306.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868971306.data).length, 2), 0, 2147483647) ; ++i) { n_2868971309[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2868971306.data; t_2868971306.data = n_2868971309; n_2868971309 = Temporary1;    Label2: {
      var i_2868971407 = 0;
      var colontmp__2818572618 = 0;
      colontmp__2818572618 = (n_2868971309).length - 1;
      var res_2818572619 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572619 <= colontmp__2818572618)) break Label4;
            i_2868971407 = res_2818572619;
            var eh_2868971488 = n_2868971309[chckIndx(i_2868971407, 0, (n_2868971309).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868971488)) {
            var j_2868971492 = (eh_2868971488 & (t_2868971306.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868971306.data[chckIndx(j_2868971492, 0, (t_2868971306.data).length - 1)].Field0)) break Label6;
                  j_2868971492 = nextTry_1308622883(j_2868971492, (t_2868971306.data).length - 1);
                }
            };
            rawInsert_2868971739(t_2868971306, t_2868971306, "data", n_2868971309[chckIndx(i_2868971407, 0, (n_2868971309).length - 1)].Field1, n_2868971309[chckIndx(i_2868971407, 0, (n_2868971309).length - 1)].Field2, eh_2868971488, j_2868971492);
            }
            
            res_2818572619 = addInt(res_2818572619, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868971989(t_2868971992, key_2868971993, hc_2868971994) {
  var result_2868971995 = 0;

  BeforeRet: {
    if (((t_2868971992.data).length == 0)) {
    result_2868971995 = -1;
    break BeforeRet;
    }
    
    var h_2868972080 = (hc_2868971994 & (t_2868971992.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868971992.data[chckIndx(h_2868972080, 0, (t_2868971992.data).length - 1)].Field0)) break Label2;
          if (((t_2868971992.data[chckIndx(h_2868972080, 0, (t_2868971992.data).length - 1)].Field0 == hc_2868971994) && HEX3DHEX3D_2868905321(t_2868971992.data[chckIndx(h_2868972080, 0, (t_2868971992.data).length - 1)].Field1, key_2868971993))) {
          result_2868971995 = h_2868972080;
          break BeforeRet;
          }
          
          h_2868972080 = nextTry_1308622883(h_2868972080, (t_2868971992.data).length - 1);
        }
    };
    result_2868971995 = subInt(-1, h_2868972080);
  };

  return result_2868971995;

}

function HEX5BHEX5DHEX3D_2868970778(t_2868970781, key_2868970782, val_2868970783) {
    if (((t_2868970781.data).length == 0)) {
    var correctSizeHEX60gensym450_2868970866 = slotsNeeded_1308622891(32);
    t_2868970781.counter = 0;
    t_2868970781.data = new Array(chckRange(correctSizeHEX60gensym450_2868970866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym450_2868970866, 0, 2147483647) ; ++i) { t_2868970781.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2868970871 = [0];
    var index_2868970878 = rawGet_2868937798(t_2868970781, key_2868970782, hc_2868970871, 0);
    if ((0 <= index_2868970878)) {
    t_2868970781.data[chckIndx(index_2868970878, 0, (t_2868970781.data).length - 1)].Field2 = val_2868970783;
    }
    else {
      if (((t_2868970781.data).length == 0)) {
      var correctSizeHEX60gensym453_2868971041 = slotsNeeded_1308622891(32);
      t_2868970781.counter = 0;
      t_2868970781.data = new Array(chckRange(correctSizeHEX60gensym453_2868971041, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym453_2868971041, 0, 2147483647) ; ++i) { t_2868970781.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2868971046(t_2868970781)) {
      enlarge_2868971303(t_2868970781);
      index_2868970878 = rawGetKnownHC_2868971989(t_2868970781, key_2868970782, hc_2868970871[0]);
      }
      
      index_2868970878 = subInt(-1, index_2868970878);
      rawInsert_2868971739(t_2868970781, t_2868970781, "data", key_2868970782, val_2868970783, hc_2868970871[0], index_2868970878);
      t_2868970781.counter = addInt(t_2868970781.counter, 1);
    }
    

  
}

function prepend_2868938754(L_2868938756, n_2868938757) {
    n_2868938757.prev = null;
    n_2868938757.next = L_2868938756.head;
    if (!((L_2868938756.head == null))) {
    if (!((L_2868938756.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868938756.head.prev = n_2868938757;
    }
    
    L_2868938756.head = n_2868938757;
    if ((L_2868938756.tail == null)) {
    L_2868938756.tail = n_2868938757;
    }
    

  
}

function rawGet_2868959760(t_2868959763, key_2868959764, hc_2868959765, hc_2868959765_Idx) {
  var result_2868959766 = 0;

  BeforeRet: {
    hc_2868959765[hc_2868959765_Idx] = hash_2868904984(key_2868959764);
    if ((hc_2868959765[hc_2868959765_Idx] == 0)) {
    hc_2868959765[hc_2868959765_Idx] = 314159265;
    }
    
    if (((t_2868959763.data).length == 0)) {
    result_2868959766 = -1;
    break BeforeRet;
    }
    
    var h_2868959855 = (hc_2868959765[hc_2868959765_Idx] & (t_2868959763.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868959763.data[chckIndx(h_2868959855, 0, (t_2868959763.data).length - 1)].Field0)) break Label2;
          if (((t_2868959763.data[chckIndx(h_2868959855, 0, (t_2868959763.data).length - 1)].Field0 == hc_2868959765[hc_2868959765_Idx]) && HEX3DHEX3D_2868905321(t_2868959763.data[chckIndx(h_2868959855, 0, (t_2868959763.data).length - 1)].Field1, key_2868959764))) {
          result_2868959766 = h_2868959855;
          break BeforeRet;
          }
          
          h_2868959855 = nextTry_1828716586(h_2868959855, (t_2868959763.data).length - 1);
        }
    };
    result_2868959766 = subInt(-1, h_2868959855);
  };

  return result_2868959766;

}

function exclImpl_2868959754(s_2868959756, key_2868959757) {
          var Temporary5;

  var result_2868959758 = false;

  BeforeRet: {
    var hc_2868959759 = [0];
    var i_2868960121 = rawGet_2868959760(s_2868959756, key_2868959757, hc_2868959759, 0);
    var msk_2868960125 = (s_2868959756.data).length - 1;
    result_2868959758 = true;
    if ((0 <= i_2868960121)) {
    result_2868959758 = false;
    s_2868959756.counter = subInt(s_2868959756.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2868960131 = i_2868960121;
          var r_2868960132 = j_2868960131;
          s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)].Field0 = 0;
          s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)].Field1 = nimCopy(s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2868960121 = (addInt(i_2868960121, 1) & msk_2868960125);
                if (isEmpty_1828716580(s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2868960132 = (s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)].Field0 & msk_2868960125);
                if (!(((((r_2868960132 <= i_2868960121) && (j_2868960131 < r_2868960132)) || ((j_2868960131 < r_2868960132) && (i_2868960121 < j_2868960131))) || ((i_2868960121 < j_2868960131) && (r_2868960132 <= i_2868960121))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)];
          s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)] = genericReset(s_2868959756.data[chckIndx(i_2868960121, 0, (s_2868959756.data).length - 1)], NTI2868904054);
          s_2868959756.data[chckIndx(j_2868960131, 0, (s_2868959756.data).length - 1)] = nimCopy(s_2868959756.data[chckIndx(j_2868960131, 0, (s_2868959756.data).length - 1)], Temporary5, NTI2868904054);
        }
    };
    }
    
  };

  return result_2868959758;

}

function excl_2868959739(s_2868959741, key_2868959742) {
    var _ = exclImpl_2868959754(s_2868959741, key_2868959742);

  
}

function len_2868972600(t_2868972603) {
  var result_2868972604 = 0;

    result_2868972604 = t_2868972603.counter;

  return result_2868972604;

}

function len_2868972517(cache_2868972520) {
  var result_2868972521 = 0;

    result_2868972521 = len_2868972600(cache_2868972520.table);

  return result_2868972521;

}

function mustRehash_2868961026(t_2868961028) {
  var result_2868961029 = false;

    if (!((t_2868961028.counter < (t_2868961028.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868961029 = ((mulInt((t_2868961028.data).length, 2) < mulInt(t_2868961028.counter, 3)) || (subInt((t_2868961028.data).length, t_2868961028.counter) < 4));

  return result_2868961029;

}

function rawGetKnownHC_2868961632(t_2868961635, key_2868961636, hc_2868961637) {
  var result_2868961638 = 0;

  BeforeRet: {
    if (((t_2868961635.data).length == 0)) {
    result_2868961638 = -1;
    break BeforeRet;
    }
    
    var h_2868961723 = (hc_2868961637 & (t_2868961635.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868961635.data[chckIndx(h_2868961723, 0, (t_2868961635.data).length - 1)].Field0)) break Label2;
          if (((t_2868961635.data[chckIndx(h_2868961723, 0, (t_2868961635.data).length - 1)].Field0 == hc_2868961637) && HEX3DHEX3D_2868905321(t_2868961635.data[chckIndx(h_2868961723, 0, (t_2868961635.data).length - 1)].Field1, key_2868961636))) {
          result_2868961638 = h_2868961723;
          break BeforeRet;
          }
          
          h_2868961723 = nextTry_1828716586(h_2868961723, (t_2868961635.data).length - 1);
        }
    };
    result_2868961638 = subInt(-1, h_2868961723);
  };

  return result_2868961638;

}

function rawInsert_2868962136(s_2868962138, data_2868962139, data_2868962139_Idx, key_2868962140, hc_2868962141, h_2868962142) {
    if (((data_2868962139[data_2868962139_Idx]).length == 0)) {
    var correctSizeHEX60gensym403_2868962225 = slotsNeeded_1828716594(64);
    s_2868962138.counter = 0;
    s_2868962138.data = new Array(chckRange(correctSizeHEX60gensym403_2868962225, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_2868962225, 0, 2147483647) ; ++i) { s_2868962138.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    data_2868962139[data_2868962139_Idx][chckIndx(h_2868962142, 0, (data_2868962139[data_2868962139_Idx]).length - 1)].Field1 = nimCopy(data_2868962139[data_2868962139_Idx][chckIndx(h_2868962142, 0, (data_2868962139[data_2868962139_Idx]).length - 1)].Field1, key_2868962140, NTI2885681177);
    data_2868962139[data_2868962139_Idx][chckIndx(h_2868962142, 0, (data_2868962139[data_2868962139_Idx]).length - 1)].Field0 = hc_2868962141;

  
}

function enlarge_2868961289(s_2868961291) {
    var n_2868961293 = [];
    n_2868961293 = new Array(chckRange(mulInt((s_2868961291.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2868961291.data).length, 2), 0, 2147483647) ; ++i) { n_2868961293[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    var Temporary1 = s_2868961291.data; s_2868961291.data = n_2868961293; n_2868961293 = Temporary1;    Label2: {
      var i_2868961391 = 0;
      var colontmp__2818572627 = 0;
      colontmp__2818572627 = (n_2868961293).length - 1;
      var res_2818572628 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572628 <= colontmp__2818572627)) break Label4;
            i_2868961391 = res_2818572628;
            if (isFilled_1828716583(n_2868961293[chckIndx(i_2868961391, 0, (n_2868961293).length - 1)].Field0)) {
            var j_2868961971 = subInt(-1, rawGetKnownHC_2868961632(s_2868961291, n_2868961293[chckIndx(i_2868961391, 0, (n_2868961293).length - 1)].Field1, n_2868961293[chckIndx(i_2868961391, 0, (n_2868961293).length - 1)].Field0));
            rawInsert_2868962136(s_2868961291, s_2868961291, "data", n_2868961293[chckIndx(i_2868961391, 0, (n_2868961293).length - 1)].Field1, n_2868961293[chckIndx(i_2868961391, 0, (n_2868961293).length - 1)].Field0, j_2868961971);
            }
            
            res_2818572628 = addInt(res_2818572628, 1);
          }
      };
    };

  
}

function incl_2868960910(s_2868960912, key_2868960913) {
    if (((s_2868960912.data).length == 0)) {
    var correctSizeHEX60gensym396_2868960996 = slotsNeeded_1828716594(64);
    s_2868960912.counter = 0;
    s_2868960912.data = new Array(chckRange(correctSizeHEX60gensym396_2868960996, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym396_2868960996, 0, 2147483647) ; ++i) { s_2868960912.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    var hc_2868961011 = [0];
    var index_2868961025 = rawGet_2868959760(s_2868960912, key_2868960913, hc_2868961011, 0);
    if ((index_2868961025 < 0)) {
    if (mustRehash_2868961026(s_2868960912)) {
    enlarge_2868961289(s_2868960912);
    index_2868961025 = rawGetKnownHC_2868961632(s_2868960912, key_2868960913, hc_2868961011[0]);
    }
    
    rawInsert_2868962136(s_2868960912, s_2868960912, "data", key_2868960913, hc_2868961011[0], subInt(-1, index_2868961025));
    s_2868960912.counter = addInt(s_2868960912.counter, 1);
    }
    

  
}

function del_2868972692(t_2868972695, key_2868972696) {
    var hc_2868972697 = [0];
    var i_2868972704 = rawGet_2868937798(t_2868972695, key_2868972696, hc_2868972697, 0);
    var mskHEX60gensym36_2868972708 = (t_2868972695.data).length - 1;
    if ((0 <= i_2868972704)) {
    t_2868972695.counter = subInt(t_2868972695.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868972715 = i_2868972704;
            var rHEX60gensym36_2868972716 = jHEX60gensym36_2868972715;
            t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field0 = 0;
            t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field1 = nimCopy(t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868972704 = (addInt(i_2868972704, 1) & mskHEX60gensym36_2868972708);
                  if (isEmpty_1308622877(t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868972716 = (t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)].Field0 & mskHEX60gensym36_2868972708);
                  if (!(((((rHEX60gensym36_2868972716 <= i_2868972704) && (jHEX60gensym36_2868972715 < rHEX60gensym36_2868972716)) || ((jHEX60gensym36_2868972715 < rHEX60gensym36_2868972716) && (i_2868972704 < jHEX60gensym36_2868972715))) || ((i_2868972704 < jHEX60gensym36_2868972715) && (rHEX60gensym36_2868972716 <= i_2868972704))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868972695.data[chckIndx(jHEX60gensym36_2868972715, 0, (t_2868972695.data).length - 1)] = nimCopy(t_2868972695.data[chckIndx(jHEX60gensym36_2868972715, 0, (t_2868972695.data).length - 1)], t_2868972695.data[chckIndx(i_2868972704, 0, (t_2868972695.data).length - 1)], NTI2868904235);
          }
      };
    };
    }
    

  
}

function remove_2868938450(L_2868938452, n_2868938453) {
    if ((n_2868938453 == L_2868938452.tail)) {
    L_2868938452.tail = n_2868938453.prev;
    }
    
    if ((n_2868938453 == L_2868938452.head)) {
    L_2868938452.head = n_2868938453.next;
    }
    
    if (!((n_2868938453.next == null))) {
    n_2868938453.next.prev = n_2868938453.prev;
    }
    
    if (!((n_2868938453.prev == null))) {
    n_2868938453.prev.next = n_2868938453.next;
    }
    

  
}

function resize_2868972435(cache_2868972438) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868972438.capacity < len_2868972517(cache_2868972438))) break Label2;
          var t_2868972605 = cache_2868972438.list.tail;
          if (cache_2868972438.recordRemovedKeys) {
          incl_2868960910(cache_2868972438.removedKeys, t_2868972605.value.key);
          }
          
          del_2868972692(cache_2868972438.table, t_2868972605.value.key);
          remove_2868938450(cache_2868972438.list, t_2868972605);
        }
    };

  
}

function addNewNode_2868970697(cache_2868970700, key_2868970701, val_2868970702) {
    var node_2868970714 = newDoublyLinkedNode_2868970705({key: nimCopy(null, key_2868970701, NTI2885681177), val: val_2868970702});
    HEX5BHEX5DHEX3D_2868970778(cache_2868970700.table, key_2868970701, node_2868970714);
    prepend_2868938754(cache_2868970700.list, node_2868970714);
    if (cache_2868970700.recordRemovedKeys) {
    excl_2868959739(cache_2868970700.removedKeys, key_2868970701);
    }
    
    resize_2868972435(cache_2868970700);

  
}

function HEX5BHEX5DHEX3D_2868970478(cache_2868970481, key_2868970482, val_2868970483) {
    var node_2868970670 = getOrDefault_2868970573(cache_2868970481.table, key_2868970482, null);
    if ((node_2868970670 == null)) {
    addNewNode_2868970697(cache_2868970481, key_2868970482, val_2868970483);
    }
    else {
      node_2868970670.value.val = val_2868970483;
      remove_2868938450(cache_2868970481.list, node_2868970670);
      prepend_2868938754(cache_2868970481.list, node_2868970670);
    }
    

  
}

function getOrCreateFunctionExecutionContext_2868970331(ctxHEX60gensym85_2868970332, dataHEX60gensym85_2868970333) {
  var result_2868970334 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_2868970343 = null;
      Label2: {
        var node_2818572598 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818572599 = ctxHEX60gensym85_2868970332.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2818572599 == null))) break Label4;
              node_2818572598 = nimCopy(node_2818572598, it_2818572599.value, NTI2868904199);
              existingHEX60gensym85_2868970343 = node_2818572598.val;
              if (((hash_2952790993(existingHEX60gensym85_2868970343) == hash_2952790993(dataHEX60gensym85_2868970333)) && HEX3DHEX3D_2952791037(existingHEX60gensym85_2868970343, dataHEX60gensym85_2868970333))) {
              result_2868970334 = existingHEX60gensym85_2868970343;
              break BeforeRet;
              }
              
              it_2818572599 = it_2818572599.next;
            }
        };
      };
    };
    var itemHEX60gensym85_2868970344 = getItem_2868970322(dataHEX60gensym85_2868970333);
    var keyHEX60gensym85_2868970345 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_2868970344, NTI2885681177), Field1: -1}, NTI2885681180);
    HEX5BHEX5DHEX3D_2885692612(ctxHEX60gensym85_2868970332.depGraph.changed, keyHEX60gensym85_2868970345, ctxHEX60gensym85_2868970332.depGraph.revision);
    HEX5BHEX5DHEX3D_2868970478(ctxHEX60gensym85_2868970332.itemsFunctionExecutionContext, itemHEX60gensym85_2868970344, dataHEX60gensym85_2868970333);
    result_2868970334 = dataHEX60gensym85_2868970333;
    break BeforeRet;
  };

  return result_2868970334;

}

function rawGet_2868939128(t_2868939131, key_2868939132, hc_2868939133, hc_2868939133_Idx) {
  var result_2868939134 = 0;

  BeforeRet: {
    hc_2868939133[hc_2868939133_Idx] = hash_2952790993(key_2868939132);
    if ((hc_2868939133[hc_2868939133_Idx] == 0)) {
    hc_2868939133[hc_2868939133_Idx] = 314159265;
    }
    
    if (((t_2868939131.data).length == 0)) {
    result_2868939134 = -1;
    break BeforeRet;
    }
    
    var h_2868939220 = (hc_2868939133[hc_2868939133_Idx] & (t_2868939131.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868939131.data[chckIndx(h_2868939220, 0, (t_2868939131.data).length - 1)].Field0)) break Label2;
          if (((t_2868939131.data[chckIndx(h_2868939220, 0, (t_2868939131.data).length - 1)].Field0 == hc_2868939133[hc_2868939133_Idx]) && HEX3DHEX3D_2952791037(t_2868939131.data[chckIndx(h_2868939220, 0, (t_2868939131.data).length - 1)].Field1, key_2868939132))) {
          result_2868939134 = h_2868939220;
          break BeforeRet;
          }
          
          h_2868939220 = nextTry_1308622883(h_2868939220, (t_2868939131.data).length - 1);
        }
    };
    result_2868939134 = subInt(-1, h_2868939220);
  };

  return result_2868939134;

}

function hasKey_2868996375(t_2868996378, key_2868996379) {
  var result_2868996380 = false;

    var hc_2868996381 = [0];
    result_2868996380 = (0 <= rawGet_2868939128(t_2868996378, key_2868996379, hc_2868996381, 0));

  return result_2868996380;

}

function contains_2868996369(t_2868996372, key_2868996373) {
  var result_2868996374 = false;

  BeforeRet: {
    result_2868996374 = hasKey_2868996375(t_2868996372, key_2868996373);
    break BeforeRet;
  };

  return result_2868996374;

}

function contains_2868996275(cache_2868996278, key_2868996279) {
  var result_2868996280 = false;

    result_2868996280 = contains_2868996369(cache_2868996278.table, key_2868996279);

  return result_2868996280;

}

function addQuoted_2952790899(s_2952790901, s_2952790901_Idx, x_2952790902) {
    s_2952790901[s_2952790901_Idx].push.apply(s_2952790901[s_2952790901_Idx], HEX24_2952790759(x_2952790902));;

  
}

function collectionToString_2952790865(x_2952790867, prefix_2952790868, separator_2952790869, suffix_2952790870) {
  var result_2952790871 = [[]];

    result_2952790871[0] = nimCopy(null, prefix_2952790868, NTI33554449);
    var firstElement_2952790872 = true;
    Label1: {
      var value_2952790895 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2818572636 = 0;
      var L_2818572637 = (x_2952790867).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572636 < L_2818572637)) break Label3;
            value_2952790895 = x_2952790867[i_2818572636];
            if (firstElement_2952790872) {
            firstElement_2952790872 = false;
            }
            else {
            result_2952790871[0].push.apply(result_2952790871[0], separator_2952790869);;
            }
            
            addQuoted_2952790899(result_2952790871, 0, value_2952790895);
            i_2818572636 += 1;
            if (!(((x_2952790867).length == L_2818572637))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2952790871[0].push.apply(result_2952790871[0], suffix_2952790870);;

  return result_2952790871[0];

}

function HEX24_2952790861(x_2952790863) {
  var result_2952790864 = [];

    result_2952790864 = nimCopy(null, collectionToString_2952790865(x_2952790863, [64,91], [44,32], [93]), NTI33554449);

  return result_2952790864;

}

function formatValue_2952790856(result_2952790858, result_2952790858_Idx, value_2952790859, specifier_2952790860) {
    formatValue_721420459(result_2952790858, result_2952790858_Idx, HEX24_2952790861(value_2952790859), specifier_2952790860);

  
}

function HEX24_2952790974(self_2952790976) {
  var result_2952790977 = [[]];

    if (isSome_1191185117(self_2952790976)) {
    result_2952790977[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_2952790977, 0, self_2952790976.val);
    result_2952790977[0].push.apply(result_2952790977[0], [41]);;
    }
    else {
      result_2952790977[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_2952790977[0];

}

function formatValue_2952790923(result_2952790925, result_2952790925_Idx, value_2952790926, specifier_2952790927) {
    formatValue_721420459(result_2952790925, result_2952790925_Idx, HEX24_2952790974(value_2952790926), specifier_2952790927);

  
}

function HEX24_2952790843(fec_2952790844) {
  var result_2952790845 = [];

  BeforeRet: {
    var fmtRes_2952790850 = [mnewString(0)];
    fmtRes_2952790850[0].push.apply(fmtRes_2952790850[0], [67,97,108,108,32]);;
    formatValue_2952790851(fmtRes_2952790850, 0, fec_2952790844.node, []);
    fmtRes_2952790850[0].push.apply(fmtRes_2952790850[0], [40]);;
    formatValue_2952790856(fmtRes_2952790850, 0, fec_2952790844.arguments, []);
    fmtRes_2952790850[0].push.apply(fmtRes_2952790850[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_2952790923(fmtRes_2952790850, 0, fec_2952790844.maxLoopIterations, []);
    fmtRes_2952790850[0].push.apply(fmtRes_2952790850[0], [41]);;
    result_2952790845 = nimCopy(null, fmtRes_2952790850[0], NTI33554449);
    break BeforeRet;
  };

  return result_2952790845;

}

function raiseKeyError_2868996648(key_2868996650) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2952790843(key_2868996650) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2868996554(t_2868996557, key_2868996558) {
  var result_2868996559 = null;
  var result_2868996559_Idx = 0;

    var hcHEX60gensym22_2868996560 = [0];
    var indexHEX60gensym22_2868996567 = rawGet_2868939128(t_2868996557, key_2868996558, hcHEX60gensym22_2868996560, 0);
    if ((0 <= indexHEX60gensym22_2868996567)) {
    result_2868996559 = t_2868996557.data[chckIndx(indexHEX60gensym22_2868996567, 0, (t_2868996557.data).length - 1)]; result_2868996559_Idx = "Field2";
    }
    else {
    raiseKeyError_2868996648(key_2868996558);
    }
    

  return [result_2868996559, result_2868996559_Idx];

}

function remove_2868945016(L_2868945018, n_2868945019) {
    if ((n_2868945019 == L_2868945018.tail)) {
    L_2868945018.tail = n_2868945019.prev;
    }
    
    if ((n_2868945019 == L_2868945018.head)) {
    L_2868945018.head = n_2868945019.next;
    }
    
    if (!((n_2868945019.next == null))) {
    n_2868945019.next.prev = n_2868945019.prev;
    }
    
    if (!((n_2868945019.prev == null))) {
    n_2868945019.prev.next = n_2868945019.next;
    }
    

  
}

function prepend_2868941305(L_2868941307, n_2868941308) {
    n_2868941308.prev = null;
    n_2868941308.next = L_2868941307.head;
    if (!((L_2868941307.head == null))) {
    if (!((L_2868941307.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868941307.head.prev = n_2868941308;
    }
    
    L_2868941307.head = n_2868941308;
    if ((L_2868941307.tail == null)) {
    L_2868941307.tail = n_2868941308;
    }
    

  
}

function HEX5BHEX5D_2868996468(cache_2868996471, key_2868996472) {
    var Temporary1;

  var result_2868996473 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2868996661 = (Temporary1 = HEX5BHEX5D_2868996554(cache_2868996471.table, key_2868996472), Temporary1)[0][Temporary1[1]];
    result_2868996473 = nimCopy(result_2868996473, node_2868996661.value.val, NTI2952790023);
    remove_2868945016(cache_2868996471.list, node_2868996661);
    prepend_2868941305(cache_2868996471.list, node_2868996661);

  return result_2868996473;

}

function computeFunctionExecution_2868996731(ctxHEX60gensym116_2868996732, inputHEX60gensym116_2868996733) {
    var Temporary3;
    var Temporary5;

  var result_2868996734 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym116_2868996735 = startTimer_2281701428();
    ctxHEX60gensym116_2868996732.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_2868996732.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_2868996824 = getItem_2868970322(inputHEX60gensym116_2868996733);
    var keyHEX60gensym116_2868996825 = {Field0: nimCopy(null, itemHEX60gensym116_2868996824, NTI2885681177), Field1: 6};
    recordDependency_2868957436(ctxHEX60gensym116_2868996732, itemHEX60gensym116_2868996824, 6);
    if (ctxHEX60gensym116_2868996732.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym116_2868996732.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_2885681364(itemHEX60gensym116_2868996824));
    }
    
    force_2868973807(ctxHEX60gensym116_2868996732, keyHEX60gensym116_2868996825);
    if (!(contains_2868996275(ctxHEX60gensym116_2868996732.queryCacheFunctionExecution, inputHEX60gensym116_2868996733))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_2952790843(inputHEX60gensym116_2868996733) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868996734 = nimCopy(result_2868996734, HEX5BHEX5D_2868996468(ctxHEX60gensym116_2868996732.queryCacheFunctionExecution, inputHEX60gensym116_2868996733), NTI2952790023);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_2868996732.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym116_2868996732.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym116_2868996732.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym116_2868996732.statsFunctionExecution.time = addInt(ctxHEX60gensym116_2868996732.statsFunctionExecution.time, elapsed_2281701439(timerHEX60gensym116_2868996735));
    }
  };

  return result_2868996734;

}

function rawGet_2868933695(t_2868933698, key_2868933699, hc_2868933700, hc_2868933700_Idx) {
  var result_2868933701 = 0;

  BeforeRet: {
    hc_2868933700[hc_2868933700_Idx] = hash_2952791167(key_2868933699);
    if ((hc_2868933700[hc_2868933700_Idx] == 0)) {
    hc_2868933700[hc_2868933700_Idx] = 314159265;
    }
    
    if (((t_2868933698.data).length == 0)) {
    result_2868933701 = -1;
    break BeforeRet;
    }
    
    var h_2868933787 = (hc_2868933700[hc_2868933700_Idx] & (t_2868933698.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868933698.data[chckIndx(h_2868933787, 0, (t_2868933698.data).length - 1)].Field0)) break Label2;
          if (((t_2868933698.data[chckIndx(h_2868933787, 0, (t_2868933698.data).length - 1)].Field0 == hc_2868933700[hc_2868933700_Idx]) && HEX3DHEX3D_2952791170(t_2868933698.data[chckIndx(h_2868933787, 0, (t_2868933698.data).length - 1)].Field1, key_2868933699))) {
          result_2868933701 = h_2868933787;
          break BeforeRet;
          }
          
          h_2868933787 = nextTry_1308622883(h_2868933787, (t_2868933698.data).length - 1);
        }
    };
    result_2868933701 = subInt(-1, h_2868933787);
  };

  return result_2868933701;

}

function hasKey_2868993272(t_2868993275, key_2868993276) {
  var result_2868993277 = false;

    var hc_2868993278 = [0];
    result_2868993277 = (0 <= rawGet_2868933695(t_2868993275, key_2868993276, hc_2868993278, 0));

  return result_2868993277;

}

function contains_2868993266(t_2868993269, key_2868993270) {
  var result_2868993271 = false;

  BeforeRet: {
    result_2868993271 = hasKey_2868993272(t_2868993269, key_2868993270);
    break BeforeRet;
  };

  return result_2868993271;

}

function contains_2868993172(cache_2868993175, key_2868993176) {
  var result_2868993177 = false;

    result_2868993177 = contains_2868993266(cache_2868993175.table, key_2868993176);

  return result_2868993177;

}

function HEX5BHEX5D_2868993451(t_2868993454, key_2868993455) {
  var result_2868993456 = null;
  var result_2868993456_Idx = 0;

    var hcHEX60gensym22_2868993457 = [0];
    var indexHEX60gensym22_2868993464 = rawGet_2868933695(t_2868993454, key_2868993455, hcHEX60gensym22_2868993457, 0);
    if ((0 <= indexHEX60gensym22_2868993464)) {
    result_2868993456 = t_2868993454.data[chckIndx(indexHEX60gensym22_2868993464, 0, (t_2868993454.data).length - 1)]; result_2868993456_Idx = "Field2";
    }
    else {
    raiseKeyError_2868990441(key_2868993455);
    }
    

  return [result_2868993456, result_2868993456_Idx];

}

function remove_2868937125(L_2868937127, n_2868937128) {
    if ((n_2868937128 == L_2868937127.tail)) {
    L_2868937127.tail = n_2868937128.prev;
    }
    
    if ((n_2868937128 == L_2868937127.head)) {
    L_2868937127.head = n_2868937128.next;
    }
    
    if (!((n_2868937128.next == null))) {
    n_2868937128.next.prev = n_2868937128.prev;
    }
    
    if (!((n_2868937128.prev == null))) {
    n_2868937128.prev.next = n_2868937128.next;
    }
    

  
}

function prepend_2868935872(L_2868935874, n_2868935875) {
    n_2868935875.prev = null;
    n_2868935875.next = L_2868935874.head;
    if (!((L_2868935874.head == null))) {
    if (!((L_2868935874.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868935874.head.prev = n_2868935875;
    }
    
    L_2868935874.head = n_2868935875;
    if ((L_2868935874.tail == null)) {
    L_2868935874.tail = n_2868935875;
    }
    

  
}

function HEX5BHEX5D_2868993365(cache_2868993368, key_2868993369) {
    var Temporary1;

  var result_2868993370 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2868993557 = (Temporary1 = HEX5BHEX5D_2868993451(cache_2868993368.table, key_2868993369), Temporary1)[0][Temporary1[1]];
    result_2868993370 = nimCopy(result_2868993370, node_2868993557.value.val, NTI2952790023);
    remove_2868937125(cache_2868993368.list, node_2868993557);
    prepend_2868935872(cache_2868993368.list, node_2868993557);

  return result_2868993370;

}

function computeSymbolValue_2868993627(ctxHEX60gensym112_2868993628, inputHEX60gensym112_2868993629, recordDependencyHEX60gensym112_2868993630) {
    var Temporary3;
    var Temporary5;

  var result_2868993631 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym112_2868993632 = startTimer_2281701428();
    ctxHEX60gensym112_2868993628.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_2868993628.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_2868993721 = getItem_2868966918(inputHEX60gensym112_2868993629);
    var keyHEX60gensym112_2868993722 = {Field0: nimCopy(null, itemHEX60gensym112_2868993721, NTI2885681177), Field1: 5};
    if (recordDependencyHEX60gensym112_2868993630) {
    recordDependency_2868957436(ctxHEX60gensym112_2868993628, itemHEX60gensym112_2868993721, 5);
    }
    
    var colorHEX60gensym112_2868993723 = nodeColor_2885683637(ctxHEX60gensym112_2868993628.depGraph, keyHEX60gensym112_2868993722, 0);
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_2868993723, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym112_2868993721));
    }
    
    if ((colorHEX60gensym112_2868993723 == 2)) {
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym112_2868993628, keyHEX60gensym112_2868993722);
    if (false) {
    markRed_2885695989(ctxHEX60gensym112_2868993628.depGraph, keyHEX60gensym112_2868993722, []);
    }
    
    if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
      }
      
    }
    
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym112_2868993629) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868993631 = nimCopy(result_2868993631, HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629), NTI2952790023);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_2868993723 == 0)) {
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym112_2868993628, keyHEX60gensym112_2868993722);
    if (false) {
    markRed_2885695989(ctxHEX60gensym112_2868993628.depGraph, keyHEX60gensym112_2868993722, []);
    }
    
    if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
    }
    
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym112_2868993629) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868993631 = nimCopy(result_2868993631, HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629), NTI2952790023);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym112_2868993628, keyHEX60gensym112_2868993722, true) == 0)) {
    if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
    }
    
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym112_2868993629) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868993631 = nimCopy(result_2868993631, HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629), NTI2952790023);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_2868993628.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym112_2868993628, keyHEX60gensym112_2868993722);
      if (false) {
      markRed_2885695989(ctxHEX60gensym112_2868993628.depGraph, keyHEX60gensym112_2868993722, []);
      }
      
      if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
      }
      
      if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym112_2868993629) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868993631 = nimCopy(result_2868993631, HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629), NTI2952790023);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_2868993723 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_2868993628.enableLogging && contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952790759(HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629)));
    }
    
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    force_2868973807(ctxHEX60gensym112_2868993628, keyHEX60gensym112_2868993722);
    }
    
    if (!(contains_2868993172(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2952791164(inputHEX60gensym112_2868993629) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868993631 = nimCopy(result_2868993631, HEX5BHEX5D_2868993365(ctxHEX60gensym112_2868993628.queryCacheSymbolValue, inputHEX60gensym112_2868993629), NTI2952790023);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_2868993628.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym112_2868993628.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym112_2868993628.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym112_2868993628.statsSymbolValue.time = addInt(ctxHEX60gensym112_2868993628.statsSymbolValue.time, elapsed_2281701439(timerHEX60gensym112_2868993632));
    }
  };

  return result_2868993631;

}

function voidValue_2952790732() {
  var result_2952790733 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790733 = nimCopy(result_2952790733, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);

  return result_2952790733;

}

function some_2868980388(val_2868980390) {
  var result_2868980391 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2868980391.has = true;
    result_2868980391.val = nimCopy(result_2868980391.val, val_2868980390, NTI2952790023);

  return result_2868980391;

}

function none_2868980396() {
  var result_2868980403 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_2868980403;

}

function none_2868980393() {
  var result_2868980395 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2868980395 = nimCopy(result_2868980395, none_2868980396(), NTI2868948884);

  return result_2868980395;

}

function getValue_2868979853(ctxHEX60gensym95_2868979854, inputHEX60gensym95_2868979855) {
  var result_2868979861 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_2868979938(ctxHEX60gensym95_2868979854.queryCacheValue, inputHEX60gensym95_2868979855)) {
    result_2868979861 = nimCopy(result_2868979861, some_2868980388(HEX5BHEX5D_2868980131(ctxHEX60gensym95_2868979854.queryCacheValue, inputHEX60gensym95_2868979855)), NTI2868948884);
    break BeforeRet;
    }
    
    result_2868979861 = nimCopy(result_2868979861, none_2868980393(), NTI2868948884);
    break BeforeRet;
  };

  return result_2868979861;

}

function isSome_3003121696(self_3003121698) {
  var result_3003121699 = false;

    result_3003121699 = self_3003121698.has;

  return result_3003121699;

}

function isNone_3003121721(self_3003121723) {
  var result_3003121724 = false;

    result_3003121724 = !(self_3003121723.has);

  return result_3003121724;

}

function get_3003121713(self_3003121715) {
  var result_3003121716 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3003121721(self_3003121715)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003121716 = self_3003121715.val;

  return result_3003121716;

}

function newAstFunctionValue_2952790755(node_2952790756, rev_2952790757) {
  var result_2952790758 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790758 = nimCopy(result_2952790758, {kind: 5, node: node_2952790756, rev: rev_2952790757, stringValue: [], intValue: 0, impl: null, typ: null}, NTI2952790023);
    break BeforeRet;
  };

  return result_2952790758;

}

function computeValueImpl_2868904758(ctx_2868904759, node_2868904760) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_2869013486 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym695_2869013488 = (ctx_2868904759.enableLogging || ctx_2868904759.enableQueryLogging);
    if (logQueryHEX60gensym695_2869013488) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym695_2869013488) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2852128727(node_2868904760) || []));
    }
    
    try {
    Label3: {
      var expr_2869013499 = node_2868904760;
      var pos_2869013500 = 0;
      var _ = pos_2869013500;
      if ((expr_2869013499.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_2868904760.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_2869013507 = Temporary4;
      result_2869013486 = nimCopy(result_2869013486, {kind: 3, intValue: value_2869013507, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 3)) {
      result_2869013486 = nimCopy(result_2869013486, {kind: 2, stringValue: nimCopy(null, node_2868904760.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 8)) {
      var function_2869013516 = HEX5BHEX5D_2852126804(node_2868904760, 0);
      var functionValue_2869013517 = computeValue_2868980422(ctx_2868904759, function_2869013516, true);
      if ((functionValue_2869013517.kind == 0)) {
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var args_2869013526 = [];
      Label6: {
        var arg_2869013545 = null;
        var colontmp__2818572584 = [];
        colontmp__2818572584 = HEX5BHEX5D_3003123477(node_2868904760.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2818572585 = 0;
        var L_2818572586 = (colontmp__2818572584).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2818572585 < L_2818572586)) break Label8;
              arg_2869013545 = colontmp__2818572584[chckIndx(i_2818572585, 0, (colontmp__2818572584).length - 1)];
              var value_2869013546 = computeValue_2868980422(ctx_2868904759, arg_2869013545, true);
              if ((value_2869013546.kind == 0)) {
              result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_2869013546, NTI2952790023);
              args_2869013526.push(Temporary9);;
              i_2818572585 = addInt(i_2818572585, 1);
              if (!(((colontmp__2818572584).length == L_2818572586))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_2869013517.kind == 4)) {
        var Temporary10 = functionValue_2869013517;
        if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2952790022)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_2869013567 = [mnewString(0)];
      fmtRes_2869013567[0].push.apply(fmtRes_2869013567[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_2885681372(fmtRes_2869013567, 0, function_2869013516.id, []);
      fmtRes_2869013567[0].push.apply(fmtRes_2869013567[0], [39,32,97,116,32]);;
      formatValue_2952790851(fmtRes_2869013567, 0, node_2868904760, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2869013567[0], NTI33554449)]);
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_2869013517;
      if (ConstSet114[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2952790022)); }
      result_2869013486 = nimCopy(result_2869013486, Temporary11.impl(args_2869013526), NTI2952790023);
      break BeforeRet;
      }
      
      if ((functionValue_2869013517.kind == 5)) {
      var Temporary12 = functionValue_2869013517;
      if (ConstSet122[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2952790022)); }
      var fec_2869013582 = getOrCreateFunctionExecutionContext_2868970331(ctx_2868904759, {node: Temporary12.node, arguments: nimCopy(null, args_2869013526, NTI2868968260), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_2869013486 = nimCopy(result_2869013486, computeFunctionExecution_2868996731(ctx_2868904759, fec_2869013582), NTI2952790023);
      break BeforeRet;
      }
      
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 7)) {
      if ((len_2852126808(node_2868904760) == 0)) {
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      result_2869013486 = nimCopy(result_2869013486, computeValue_2868980422(ctx_2868904759, last_2852126978(node_2868904760), true), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 4)) {
      if ((len_2852126808(node_2868904760) == 0)) {
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      result_2869013486 = nimCopy(result_2869013486, computeValue_2868980422(ctx_2868904759, HEX5BHEX5D_2852126804(node_2868904760, 0), true), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 1)) {
      var id_2869013595 = nimCopy(null, node_2868904760.reff, NTI2181038083);
      var symbols_2869013596 = computeSymbols_2868987052(ctx_2868904759, node_2868904760, true);
      if (contains_2869012472(symbols_2869013596, id_2869013595)) {
      var symbol_2869013763 = (Temporary13 = HEX5BHEX5D_2869012727(symbols_2869013596, id_2869013595), Temporary13)[0][Temporary13[1]];
      result_2869013486 = nimCopy(result_2869013486, computeSymbolValue_2868993627(ctx_2868904759, symbol_2869013763, true), NTI2952790023);
      break BeforeRet;
      }
      
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 9)) {
      if ((len_2852126808(node_2868904760) < 2)) {
      result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var index_2869013768 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_2869013768, 1) < len_2852126808(node_2868904760))) break Label15;
            try {
            var condition_2869013773 = HEX5BHEX5D_2852126804(node_2868904760, index_2869013768);
            var trueCase_2869013774 = HEX5BHEX5D_2852126804(node_2868904760, addInt(index_2869013768, 1));
            var conditionValue_2869013775 = computeValue_2868980422(ctx_2868904759, condition_2869013773, true);
            if ((conditionValue_2869013775.kind == 0)) {
            result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            if (!((conditionValue_2869013775.kind == 3))) {
            var fmtRes_2869013788 = [mnewString(0)];
            fmtRes_2869013788[0].push.apply(fmtRes_2869013788[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3003123103(fmtRes_2869013788, 0, conditionValue_2869013775, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2869013788[0], NTI33554449)]);
            result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            if (!((conditionValue_2869013775.intValue == 0))) {
            var trueCaseValue_2869013794 = computeValue_2868980422(ctx_2868904759, trueCase_2869013774, true);
            result_2869013486 = nimCopy(result_2869013486, trueCaseValue_2869013794, NTI2952790023);
            break BeforeRet;
            }
            
            } finally {
            index_2869013768 = addInt(index_2869013768, 2);
            }
          }
      };
      if (!((modInt(len_2852126808(node_2868904760), 2) == 0))) {
      var falseCaseValue_2869013795 = computeValue_2868980422(ctx_2868904759, last_2852126978(node_2868904760), true);
      result_2869013486 = nimCopy(result_2869013486, falseCaseValue_2869013795, NTI2952790023);
      break BeforeRet;
      }
      
      result_2869013486 = nimCopy(result_2869013486, voidValue_2952790732(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_2869013499.kind == 11)) {
        var oHEX60gensym720_2869013802 = getValue_2868979853(ctx_2868904759, node_2868904760);
        if (!isSome_3003121696(oHEX60gensym720_2869013802)) Temporary19 = false; else {          var value_2869013848 = nimCopy(null, get_3003121713(oHEX60gensym720_2869013802), NTI2952790023);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_2869013848.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_2869013848;
      if (ConstSet123[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI2952790022)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_2869013853 = Temporary17;
      result_2869013486 = nimCopy(result_2869013486, newAstFunctionValue_2952790755(node_2868904760, addInt(currentRev_2869013853, 1)), NTI2952790023);
      break BeforeRet;
      }
      else {
        result_2869013486 = nimCopy(result_2869013486, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym695_2869013488 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2952790759(result_2869013486) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym695_2869013488) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869013486;

}

function getOrDefault_2868913020(t_2868913023, key_2868913024, default_2868913025) {
    var Temporary1;

  var result_2868913026 = null;

    var hcHEX60gensym159_2868913029 = [0];
    var indexHEX60gensym159_2868913388 = rawGet_2868913030(t_2868913023, key_2868913024, hcHEX60gensym159_2868913029, 0);
    if ((0 <= indexHEX60gensym159_2868913388)) {
    Temporary1 = t_2868913023.data[chckIndx(indexHEX60gensym159_2868913388, 0, (t_2868913023.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868913025;
    }
    
    result_2868913026 = Temporary1;

  return result_2868913026;

}

function newDoublyLinkedNode_2868913513(value_2868913515) {
  var result_2868913516 = null;

    result_2868913516 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2868913516.value = nimCopy(result_2868913516.value, value_2868913515, NTI2868904376);

  return result_2868913516;

}

function mustRehash_2868913872(t_2868913874) {
  var result_2868913875 = false;

    if (!((t_2868913874.counter < (t_2868913874.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868913875 = ((mulInt((t_2868913874.data).length, 2) < mulInt(t_2868913874.counter, 3)) || (subInt((t_2868913874.data).length, t_2868913874.counter) < 4));

  return result_2868913875;

}

function rawInsert_2868914565(t_2868914569, data_2868914570, data_2868914570_Idx, key_2868914571, val_2868914572, hc_2868914573, h_2868914574) {
    data_2868914570[data_2868914570_Idx][chckIndx(h_2868914574, 0, (data_2868914570[data_2868914570_Idx]).length - 1)].Field1 = key_2868914571;
    data_2868914570[data_2868914570_Idx][chckIndx(h_2868914574, 0, (data_2868914570[data_2868914570_Idx]).length - 1)].Field2 = val_2868914572;
    data_2868914570[data_2868914570_Idx][chckIndx(h_2868914574, 0, (data_2868914570[data_2868914570_Idx]).length - 1)].Field0 = hc_2868914573;

  
}

function enlarge_2868914129(t_2868914132) {
    var n_2868914135 = [];
    n_2868914135 = new Array(chckRange(mulInt((t_2868914132.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868914132.data).length, 2), 0, 2147483647) ; ++i) { n_2868914135[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868914132.data; t_2868914132.data = n_2868914135; n_2868914135 = Temporary1;    Label2: {
      var i_2868914233 = 0;
      var colontmp__2818572642 = 0;
      colontmp__2818572642 = (n_2868914135).length - 1;
      var res_2818572643 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572643 <= colontmp__2818572642)) break Label4;
            i_2868914233 = res_2818572643;
            var eh_2868914314 = n_2868914135[chckIndx(i_2868914233, 0, (n_2868914135).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868914314)) {
            var j_2868914318 = (eh_2868914314 & (t_2868914132.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868914132.data[chckIndx(j_2868914318, 0, (t_2868914132.data).length - 1)].Field0)) break Label6;
                  j_2868914318 = nextTry_1308622883(j_2868914318, (t_2868914132.data).length - 1);
                }
            };
            rawInsert_2868914565(t_2868914132, t_2868914132, "data", n_2868914135[chckIndx(i_2868914233, 0, (n_2868914135).length - 1)].Field1, n_2868914135[chckIndx(i_2868914233, 0, (n_2868914135).length - 1)].Field2, eh_2868914314, j_2868914318);
            }
            
            res_2818572643 = addInt(res_2818572643, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868914815(t_2868914818, key_2868914819, hc_2868914820) {
  var result_2868914821 = 0;

  BeforeRet: {
    if (((t_2868914818.data).length == 0)) {
    result_2868914821 = -1;
    break BeforeRet;
    }
    
    var h_2868914906 = (hc_2868914820 & (t_2868914818.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868914818.data[chckIndx(h_2868914906, 0, (t_2868914818.data).length - 1)].Field0)) break Label2;
          if (((t_2868914818.data[chckIndx(h_2868914906, 0, (t_2868914818.data).length - 1)].Field0 == hc_2868914820) && (t_2868914818.data[chckIndx(h_2868914906, 0, (t_2868914818.data).length - 1)].Field1 == key_2868914819))) {
          result_2868914821 = h_2868914906;
          break BeforeRet;
          }
          
          h_2868914906 = nextTry_1308622883(h_2868914906, (t_2868914818.data).length - 1);
        }
    };
    result_2868914821 = subInt(-1, h_2868914906);
  };

  return result_2868914821;

}

function HEX5BHEX5DHEX3D_2868913604(t_2868913607, key_2868913608, val_2868913609) {
    if (((t_2868913607.data).length == 0)) {
    var correctSizeHEX60gensym164_2868913692 = slotsNeeded_1308622891(32);
    t_2868913607.counter = 0;
    t_2868913607.data = new Array(chckRange(correctSizeHEX60gensym164_2868913692, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_2868913692, 0, 2147483647) ; ++i) { t_2868913607.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868913697 = [0];
    var index_2868913704 = rawGet_2868913030(t_2868913607, key_2868913608, hc_2868913697, 0);
    if ((0 <= index_2868913704)) {
    t_2868913607.data[chckIndx(index_2868913704, 0, (t_2868913607.data).length - 1)].Field2 = val_2868913609;
    }
    else {
      if (((t_2868913607.data).length == 0)) {
      var correctSizeHEX60gensym167_2868913867 = slotsNeeded_1308622891(32);
      t_2868913607.counter = 0;
      t_2868913607.data = new Array(chckRange(correctSizeHEX60gensym167_2868913867, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_2868913867, 0, 2147483647) ; ++i) { t_2868913607.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868913872(t_2868913607)) {
      enlarge_2868914129(t_2868913607);
      index_2868913704 = rawGetKnownHC_2868914815(t_2868913607, key_2868913608, hc_2868913697[0]);
      }
      
      index_2868913704 = subInt(-1, index_2868913704);
      rawInsert_2868914565(t_2868913607, t_2868913607, "data", key_2868913608, val_2868913609, hc_2868913697[0], index_2868913704);
      t_2868913607.counter = addInt(t_2868913607.counter, 1);
    }
    

  
}

function len_2868915617(t_2868915620) {
  var result_2868915621 = 0;

    result_2868915621 = t_2868915620.counter;

  return result_2868915621;

}

function len_2868915534(cache_2868915537) {
  var result_2868915538 = 0;

    result_2868915538 = len_2868915617(cache_2868915537.table);

  return result_2868915538;

}

function del_2868915709(t_2868915712, key_2868915713) {
    var hc_2868915714 = [0];
    var i_2868915721 = rawGet_2868913030(t_2868915712, key_2868915713, hc_2868915714, 0);
    var mskHEX60gensym36_2868915725 = (t_2868915712.data).length - 1;
    if ((0 <= i_2868915721)) {
    t_2868915712.counter = subInt(t_2868915712.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868915732 = i_2868915721;
            var rHEX60gensym36_2868915733 = jHEX60gensym36_2868915732;
            t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)].Field0 = 0;
            t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)].Field1 = null;
            t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868915721 = (addInt(i_2868915721, 1) & mskHEX60gensym36_2868915725);
                  if (isEmpty_1308622877(t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868915733 = (t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)].Field0 & mskHEX60gensym36_2868915725);
                  if (!(((((rHEX60gensym36_2868915733 <= i_2868915721) && (jHEX60gensym36_2868915732 < rHEX60gensym36_2868915733)) || ((jHEX60gensym36_2868915732 < rHEX60gensym36_2868915733) && (i_2868915721 < jHEX60gensym36_2868915732))) || ((i_2868915721 < jHEX60gensym36_2868915732) && (rHEX60gensym36_2868915733 <= i_2868915721))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868915712.data[chckIndx(jHEX60gensym36_2868915732, 0, (t_2868915712.data).length - 1)] = nimCopy(t_2868915712.data[chckIndx(jHEX60gensym36_2868915732, 0, (t_2868915712.data).length - 1)], t_2868915712.data[chckIndx(i_2868915721, 0, (t_2868915712.data).length - 1)], NTI2868904412);
          }
      };
    };
    }
    

  
}

function resize_2868915452(cache_2868915455) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868915455.capacity < len_2868915534(cache_2868915455))) break Label2;
          var t_2868915622 = cache_2868915455.list.tail;
          if (cache_2868915455.recordRemovedKeys) {
          incl_2868909858(cache_2868915455.removedKeys, t_2868915622.value.key);
          }
          
          del_2868915709(cache_2868915455.table, t_2868915622.value.key);
          remove_2868916468(cache_2868915455.list, t_2868915622);
        }
    };

  
}

function addNewNode_2868913505(cache_2868913508, key_2868913509, val_2868913510) {
    var node_2868913540 = newDoublyLinkedNode_2868913513({key: key_2868913509, val: nimCopy(null, val_2868913510, NTI2952790023)});
    HEX5BHEX5DHEX3D_2868913604(cache_2868913508.table, key_2868913509, node_2868913540);
    prepend_2868915215(cache_2868913508.list, node_2868913540);
    if (cache_2868913508.recordRemovedKeys) {
    excl_2868908699(cache_2868913508.removedKeys, key_2868913509);
    }
    
    resize_2868915452(cache_2868913508);

  
}

function HEX5BHEX5DHEX3D_2868912925(cache_2868912928, key_2868912929, val_2868912930) {
    var node_2868913478 = getOrDefault_2868913020(cache_2868912928.table, key_2868912929, null);
    if ((node_2868913478 == null)) {
    addNewNode_2868913505(cache_2868912928, key_2868912929, val_2868912930);
    }
    else {
      node_2868913478.value.val = nimCopy(node_2868913478.value.val, val_2868912930, NTI2952790023);
      remove_2868916468(cache_2868912928.list, node_2868913478);
      prepend_2868915215(cache_2868912928.list, node_2868913478);
    }
    

  
}

function fingerprint_2952790799(value_2952790800) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_2952790801 = [];

  BeforeRet: {
    switch (value_2952790800.kind) {
    case 0:
      result_2952790801 = nimCopy(null, [value_2952790800.kind], NTI2952790465);
      break BeforeRet;
      break;
    case 1:
      result_2952790801 = nimCopy(null, [value_2952790800.kind], NTI2952790465);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_2952790800;
      if (ConstSet124[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
      result_2952790801 = nimCopy(null, [value_2952790800.kind, Temporary1.intValue], NTI2885681485);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_2952790800;
      if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790022)); }
      result_2952790801 = nimCopy(null, [value_2952790800.kind, hash_1325400491(Temporary2.stringValue)], NTI2885681485);
      break BeforeRet;
      break;
    case 4:
      result_2952790801 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2952790800;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790022)); }
      var Temporary4 = value_2952790800;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790022)); }
      result_2952790801 = nimCopy(null, [value_2952790800.kind, hash_2852129075(Temporary3.node), Temporary4.rev], NTI2952790655);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_2952790800;
      if (ConstSet128[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790022)); }
      result_2952790801 = nimCopy(null, HEX26_2952790625([value_2952790800.kind], fingerprint_2952790618(Temporary5.typ)), NTI2952790471);
      break BeforeRet;
      break;
    }
  };

  return result_2952790801;

}

function initDoublyLinkedList_2868916911() {
  var result_2868916913 = ({head: null, tail: null});

  return result_2868916913;

}

function initTable_2868916917(initialSize_2868916920) {
  var result_2868916921 = ({data: [], counter: 0});

    var correctSizeHEX60gensym177_2868916923 = slotsNeeded_1308622891(chckRange(initialSize_2868916920, 0, 2147483647));
    result_2868916921.counter = 0;
    result_2868916921.data = new Array(chckRange(correctSizeHEX60gensym177_2868916923, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym177_2868916923, 0, 2147483647) ; ++i) { result_2868916921.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868916921;

}

function newLruCache_2868916901(capacity_2868916904, recordRemovedKeys_2868916905) {
  var result_2868916906 = null;

    result_2868916906 = {capacity: capacity_2868916904, list: initDoublyLinkedList_2868916911(), table: initTable_2868916917(correctSize_2902458389(capacity_2868916904)), recordRemovedKeys: recordRemovedKeys_2868916905, removedKeys: ({data: [], counter: 0})};

  return result_2868916906;

}

function newCache_2868916896(capacity_2868916899) {
  var result_2868916900 = null;

    result_2868916900 = newLruCache_2868916901(capacity_2868916899, false);

  return result_2868916900;

}

function init_2868916891(result_2868916894, result_2868916894_Idx, capacity_2868916895) {
    result_2868916894[result_2868916894_Idx] = newCache_2868916896(capacity_2868916895);

  
}

function some_2868966895(val_2868966897) {
  var result_2868966898 = ({val: null});

    if (!(!((val_2868966897 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2868966898.val = val_2868966897;

  return result_2868966898;

}

function rawGet_2868925664(t_2868925667, key_2868925668, hc_2868925669, hc_2868925669_Idx) {
  var result_2868925670 = 0;

  BeforeRet: {
    hc_2868925669[hc_2868925669_Idx] = hash_2868904984(key_2868925668);
    if ((hc_2868925669[hc_2868925669_Idx] == 0)) {
    hc_2868925669[hc_2868925669_Idx] = 314159265;
    }
    
    if (((t_2868925667.data).length == 0)) {
    result_2868925670 = -1;
    break BeforeRet;
    }
    
    var h_2868925759 = (hc_2868925669[hc_2868925669_Idx] & (t_2868925667.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868925667.data[chckIndx(h_2868925759, 0, (t_2868925667.data).length - 1)].Field0)) break Label2;
          if (((t_2868925667.data[chckIndx(h_2868925759, 0, (t_2868925667.data).length - 1)].Field0 == hc_2868925669[hc_2868925669_Idx]) && HEX3DHEX3D_2868905321(t_2868925667.data[chckIndx(h_2868925759, 0, (t_2868925667.data).length - 1)].Field1, key_2868925668))) {
          result_2868925670 = h_2868925759;
          break BeforeRet;
          }
          
          h_2868925759 = nextTry_1308622883(h_2868925759, (t_2868925667.data).length - 1);
        }
    };
    result_2868925670 = subInt(-1, h_2868925759);
  };

  return result_2868925670;

}

function getOrDefault_2868967169(t_2868967172, key_2868967173, default_2868967174) {
    var Temporary1;

  var result_2868967175 = null;

    var hcHEX60gensym428_2868967178 = [0];
    var indexHEX60gensym428_2868967185 = rawGet_2868925664(t_2868967172, key_2868967173, hcHEX60gensym428_2868967178, 0);
    if ((0 <= indexHEX60gensym428_2868967185)) {
    Temporary1 = t_2868967172.data[chckIndx(indexHEX60gensym428_2868967185, 0, (t_2868967172.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868967174;
    }
    
    result_2868967175 = Temporary1;

  return result_2868967175;

}

function newDoublyLinkedNode_2868967301(value_2868967303) {
  var result_2868967304 = null;

    result_2868967304 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2868967304.value = nimCopy(result_2868967304.value, value_2868967303, NTI2868904135);

  return result_2868967304;

}

function mustRehash_2868967642(t_2868967644) {
  var result_2868967645 = false;

    if (!((t_2868967644.counter < (t_2868967644.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868967645 = ((mulInt((t_2868967644.data).length, 2) < mulInt(t_2868967644.counter, 3)) || (subInt((t_2868967644.data).length, t_2868967644.counter) < 4));

  return result_2868967645;

}

function rawInsert_2868968335(t_2868968339, data_2868968340, data_2868968340_Idx, key_2868968341, val_2868968342, hc_2868968343, h_2868968344) {
    data_2868968340[data_2868968340_Idx][chckIndx(h_2868968344, 0, (data_2868968340[data_2868968340_Idx]).length - 1)].Field1 = nimCopy(data_2868968340[data_2868968340_Idx][chckIndx(h_2868968344, 0, (data_2868968340[data_2868968340_Idx]).length - 1)].Field1, key_2868968341, NTI2885681177);
    data_2868968340[data_2868968340_Idx][chckIndx(h_2868968344, 0, (data_2868968340[data_2868968340_Idx]).length - 1)].Field2 = val_2868968342;
    data_2868968340[data_2868968340_Idx][chckIndx(h_2868968344, 0, (data_2868968340[data_2868968340_Idx]).length - 1)].Field0 = hc_2868968343;

  
}

function enlarge_2868967899(t_2868967902) {
    var n_2868967905 = [];
    n_2868967905 = new Array(chckRange(mulInt((t_2868967902.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868967902.data).length, 2), 0, 2147483647) ; ++i) { n_2868967905[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2868967902.data; t_2868967902.data = n_2868967905; n_2868967905 = Temporary1;    Label2: {
      var i_2868968003 = 0;
      var colontmp__2818572653 = 0;
      colontmp__2818572653 = (n_2868967905).length - 1;
      var res_2818572654 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572654 <= colontmp__2818572653)) break Label4;
            i_2868968003 = res_2818572654;
            var eh_2868968084 = n_2868967905[chckIndx(i_2868968003, 0, (n_2868967905).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868968084)) {
            var j_2868968088 = (eh_2868968084 & (t_2868967902.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868967902.data[chckIndx(j_2868968088, 0, (t_2868967902.data).length - 1)].Field0)) break Label6;
                  j_2868968088 = nextTry_1308622883(j_2868968088, (t_2868967902.data).length - 1);
                }
            };
            rawInsert_2868968335(t_2868967902, t_2868967902, "data", n_2868967905[chckIndx(i_2868968003, 0, (n_2868967905).length - 1)].Field1, n_2868967905[chckIndx(i_2868968003, 0, (n_2868967905).length - 1)].Field2, eh_2868968084, j_2868968088);
            }
            
            res_2818572654 = addInt(res_2818572654, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868968585(t_2868968588, key_2868968589, hc_2868968590) {
  var result_2868968591 = 0;

  BeforeRet: {
    if (((t_2868968588.data).length == 0)) {
    result_2868968591 = -1;
    break BeforeRet;
    }
    
    var h_2868968676 = (hc_2868968590 & (t_2868968588.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868968588.data[chckIndx(h_2868968676, 0, (t_2868968588.data).length - 1)].Field0)) break Label2;
          if (((t_2868968588.data[chckIndx(h_2868968676, 0, (t_2868968588.data).length - 1)].Field0 == hc_2868968590) && HEX3DHEX3D_2868905321(t_2868968588.data[chckIndx(h_2868968676, 0, (t_2868968588.data).length - 1)].Field1, key_2868968589))) {
          result_2868968591 = h_2868968676;
          break BeforeRet;
          }
          
          h_2868968676 = nextTry_1308622883(h_2868968676, (t_2868968588.data).length - 1);
        }
    };
    result_2868968591 = subInt(-1, h_2868968676);
  };

  return result_2868968591;

}

function HEX5BHEX5DHEX3D_2868967374(t_2868967377, key_2868967378, val_2868967379) {
    if (((t_2868967377.data).length == 0)) {
    var correctSizeHEX60gensym431_2868967462 = slotsNeeded_1308622891(32);
    t_2868967377.counter = 0;
    t_2868967377.data = new Array(chckRange(correctSizeHEX60gensym431_2868967462, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym431_2868967462, 0, 2147483647) ; ++i) { t_2868967377.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2868967467 = [0];
    var index_2868967474 = rawGet_2868925664(t_2868967377, key_2868967378, hc_2868967467, 0);
    if ((0 <= index_2868967474)) {
    t_2868967377.data[chckIndx(index_2868967474, 0, (t_2868967377.data).length - 1)].Field2 = val_2868967379;
    }
    else {
      if (((t_2868967377.data).length == 0)) {
      var correctSizeHEX60gensym434_2868967637 = slotsNeeded_1308622891(32);
      t_2868967377.counter = 0;
      t_2868967377.data = new Array(chckRange(correctSizeHEX60gensym434_2868967637, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym434_2868967637, 0, 2147483647) ; ++i) { t_2868967377.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2868967642(t_2868967377)) {
      enlarge_2868967899(t_2868967377);
      index_2868967474 = rawGetKnownHC_2868968585(t_2868967377, key_2868967378, hc_2868967467[0]);
      }
      
      index_2868967474 = subInt(-1, index_2868967474);
      rawInsert_2868968335(t_2868967377, t_2868967377, "data", key_2868967378, val_2868967379, hc_2868967467[0], index_2868967474);
      t_2868967377.counter = addInt(t_2868967377.counter, 1);
    }
    

  
}

function prepend_2868926620(L_2868926622, n_2868926623) {
    n_2868926623.prev = null;
    n_2868926623.next = L_2868926622.head;
    if (!((L_2868926622.head == null))) {
    if (!((L_2868926622.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868926622.head.prev = n_2868926623;
    }
    
    L_2868926622.head = n_2868926623;
    if ((L_2868926622.tail == null)) {
    L_2868926622.tail = n_2868926623;
    }
    

  
}

function len_2868969196(t_2868969199) {
  var result_2868969200 = 0;

    result_2868969200 = t_2868969199.counter;

  return result_2868969200;

}

function len_2868969113(cache_2868969116) {
  var result_2868969117 = 0;

    result_2868969117 = len_2868969196(cache_2868969116.table);

  return result_2868969117;

}

function del_2868969288(t_2868969291, key_2868969292) {
    var hc_2868969293 = [0];
    var i_2868969300 = rawGet_2868925664(t_2868969291, key_2868969292, hc_2868969293, 0);
    var mskHEX60gensym36_2868969304 = (t_2868969291.data).length - 1;
    if ((0 <= i_2868969300)) {
    t_2868969291.counter = subInt(t_2868969291.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868969311 = i_2868969300;
            var rHEX60gensym36_2868969312 = jHEX60gensym36_2868969311;
            t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field0 = 0;
            t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field1 = nimCopy(t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868969300 = (addInt(i_2868969300, 1) & mskHEX60gensym36_2868969304);
                  if (isEmpty_1308622877(t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868969312 = (t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)].Field0 & mskHEX60gensym36_2868969304);
                  if (!(((((rHEX60gensym36_2868969312 <= i_2868969300) && (jHEX60gensym36_2868969311 < rHEX60gensym36_2868969312)) || ((jHEX60gensym36_2868969311 < rHEX60gensym36_2868969312) && (i_2868969300 < jHEX60gensym36_2868969311))) || ((i_2868969300 < jHEX60gensym36_2868969311) && (rHEX60gensym36_2868969312 <= i_2868969300))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868969291.data[chckIndx(jHEX60gensym36_2868969311, 0, (t_2868969291.data).length - 1)] = nimCopy(t_2868969291.data[chckIndx(jHEX60gensym36_2868969311, 0, (t_2868969291.data).length - 1)], t_2868969291.data[chckIndx(i_2868969300, 0, (t_2868969291.data).length - 1)], NTI2868904171);
          }
      };
    };
    }
    

  
}

function remove_2868926316(L_2868926318, n_2868926319) {
    if ((n_2868926319 == L_2868926318.tail)) {
    L_2868926318.tail = n_2868926319.prev;
    }
    
    if ((n_2868926319 == L_2868926318.head)) {
    L_2868926318.head = n_2868926319.next;
    }
    
    if (!((n_2868926319.next == null))) {
    n_2868926319.next.prev = n_2868926319.prev;
    }
    
    if (!((n_2868926319.prev == null))) {
    n_2868926319.prev.next = n_2868926319.next;
    }
    

  
}

function resize_2868969031(cache_2868969034) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868969034.capacity < len_2868969113(cache_2868969034))) break Label2;
          var t_2868969201 = cache_2868969034.list.tail;
          if (cache_2868969034.recordRemovedKeys) {
          incl_2868960910(cache_2868969034.removedKeys, t_2868969201.value.key);
          }
          
          del_2868969288(cache_2868969034.table, t_2868969201.value.key);
          remove_2868926316(cache_2868969034.list, t_2868969201);
        }
    };

  
}

function addNewNode_2868967293(cache_2868967296, key_2868967297, val_2868967298) {
    var node_2868967310 = newDoublyLinkedNode_2868967301({key: nimCopy(null, key_2868967297, NTI2885681177), val: val_2868967298});
    HEX5BHEX5DHEX3D_2868967374(cache_2868967296.table, key_2868967297, node_2868967310);
    prepend_2868926620(cache_2868967296.list, node_2868967310);
    if (cache_2868967296.recordRemovedKeys) {
    excl_2868959739(cache_2868967296.removedKeys, key_2868967297);
    }
    
    resize_2868969031(cache_2868967296);

  
}

function HEX5BHEX5DHEX3D_2868967074(cache_2868967077, key_2868967078, val_2868967079) {
    var node_2868967266 = getOrDefault_2868967169(cache_2868967077.table, key_2868967078, null);
    if ((node_2868967266 == null)) {
    addNewNode_2868967293(cache_2868967077, key_2868967078, val_2868967079);
    }
    else {
      node_2868967266.value.val = val_2868967079;
      remove_2868926316(cache_2868967077.list, node_2868967266);
      prepend_2868926620(cache_2868967077.list, node_2868967266);
    }
    

  
}

function newSymbol_2868973519(ctxHEX60gensym86_2868973520, dataHEX60gensym86_2868973521) {
  var result_2868973522 = null;

  BeforeRet: {
    var itemHEX60gensym86_2868973523 = getItem_2868966918(dataHEX60gensym86_2868973521);
    var keyHEX60gensym86_2868973524 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_2868973523, NTI2885681177), Field1: -1}, NTI2885681180);
    HEX5BHEX5DHEX3D_2885692612(ctxHEX60gensym86_2868973520.depGraph.changed, keyHEX60gensym86_2868973524, ctxHEX60gensym86_2868973520.depGraph.revision);
    HEX5BHEX5DHEX3D_2868967074(ctxHEX60gensym86_2868973520.itemsSymbol, itemHEX60gensym86_2868973523, dataHEX60gensym86_2868973521);
    result_2868973522 = dataHEX60gensym86_2868973521;
    break BeforeRet;
  };

  return result_2868973522;

}

function none_2868966911() {
  var result_2868966917 = ({val: null});

  return result_2868966917;

}

function none_2868966908() {
  var result_2868966910 = ({val: null});

    result_2868966910 = nimCopy(result_2868966910, none_2868966911(), NTI2952791176);

  return result_2868966910;

}

function computeSymbolImpl_2868904761(ctx_2868904762, node_2868904763) {
      var Temporary4;

  var result_2869013860 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym721_2869013862 = (ctx_2868904762.enableLogging || ctx_2868904762.enableQueryLogging);
    if (logQueryHEX60gensym721_2869013862) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym721_2869013862) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2852128727(node_2868904763) || []));
    }
    
    try {
    Label3: {
      var expr_2869013933 = node_2868904763;
      var pos_2869013934 = 0;
      var _ = pos_2869013934;
      if ((expr_2869013933.kind == 1)) {
      var symbols_2869013941 = computeSymbols_2868987052(ctx_2868904762, node_2868904763, true);
      if (contains_2869012472(symbols_2869013941, node_2868904763.reff)) {
      result_2869013860 = nimCopy(result_2869013860, some_2868966895((Temporary4 = HEX5BHEX5D_2869012727(symbols_2869013941, node_2868904763.reff), Temporary4)[0][Temporary4[1]]), NTI2952791176);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_2869013933.kind == 4)) {
      result_2869013860 = nimCopy(result_2869013860, some_2868966895(newSymbol_2868973519(ctx_2868904762, {kind: 0, id: nimCopy(null, node_2868904763.id, NTI2181038083), node: node_2868904763, name: nimCopy(null, node_2868904763.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2952791176);
      break BeforeRet;
      }
      else {
      if ((expr_2869013933.kind == 5)) {
      result_2869013860 = nimCopy(result_2869013860, some_2868966895(newSymbol_2868973519(ctx_2868904762, {kind: 0, id: nimCopy(null, node_2868904763.id, NTI2181038083), node: node_2868904763, name: nimCopy(null, node_2868904763.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2952791176);
      break BeforeRet;
      }
      else {
      if ((expr_2869013933.kind == 6)) {
      result_2869013860 = nimCopy(result_2869013860, some_2868966895(newSymbol_2868973519(ctx_2868904762, {kind: 0, id: nimCopy(null, node_2868904763.id, NTI2181038083), node: node_2868904763, name: nimCopy(null, node_2868904763.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2952791176);
      break BeforeRet;
      }
      else {
        var fmtRes_2869014136 = [mnewString(0)];
        fmtRes_2869014136[0].push.apply(fmtRes_2869014136[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_2952790851(fmtRes_2869014136, 0, node_2868904763, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2869014136[0], NTI33554449)]);
        result_2869013860 = nimCopy(result_2869013860, none_2868966908(), NTI2952791176);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym721_2869013862 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868956826(result_2869013860) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym721_2869013862) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869013860;

}

function getOrDefault_2868917290(t_2868917293, key_2868917294, default_2868917295) {
    var Temporary1;

  var result_2868917296 = null;

    var hcHEX60gensym180_2868917299 = [0];
    var indexHEX60gensym180_2868917658 = rawGet_2868917300(t_2868917293, key_2868917294, hcHEX60gensym180_2868917299, 0);
    if ((0 <= indexHEX60gensym180_2868917658)) {
    Temporary1 = t_2868917293.data[chckIndx(indexHEX60gensym180_2868917658, 0, (t_2868917293.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868917295;
    }
    
    result_2868917296 = Temporary1;

  return result_2868917296;

}

function newDoublyLinkedNode_2868917783(value_2868917785) {
  var result_2868917786 = null;

    result_2868917786 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_2868917786.value = nimCopy(result_2868917786.value, value_2868917785, NTI2868904447);

  return result_2868917786;

}

function mustRehash_2868918133(t_2868918135) {
  var result_2868918136 = false;

    if (!((t_2868918135.counter < (t_2868918135.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868918136 = ((mulInt((t_2868918135.data).length, 2) < mulInt(t_2868918135.counter, 3)) || (subInt((t_2868918135.data).length, t_2868918135.counter) < 4));

  return result_2868918136;

}

function rawInsert_2868918826(t_2868918830, data_2868918831, data_2868918831_Idx, key_2868918832, val_2868918833, hc_2868918834, h_2868918835) {
    data_2868918831[data_2868918831_Idx][chckIndx(h_2868918835, 0, (data_2868918831[data_2868918831_Idx]).length - 1)].Field1 = key_2868918832;
    data_2868918831[data_2868918831_Idx][chckIndx(h_2868918835, 0, (data_2868918831[data_2868918831_Idx]).length - 1)].Field2 = val_2868918833;
    data_2868918831[data_2868918831_Idx][chckIndx(h_2868918835, 0, (data_2868918831[data_2868918831_Idx]).length - 1)].Field0 = hc_2868918834;

  
}

function enlarge_2868918390(t_2868918393) {
    var n_2868918396 = [];
    n_2868918396 = new Array(chckRange(mulInt((t_2868918393.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868918393.data).length, 2), 0, 2147483647) ; ++i) { n_2868918396[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868918393.data; t_2868918393.data = n_2868918396; n_2868918396 = Temporary1;    Label2: {
      var i_2868918494 = 0;
      var colontmp__2818572662 = 0;
      colontmp__2818572662 = (n_2868918396).length - 1;
      var res_2818572663 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572663 <= colontmp__2818572662)) break Label4;
            i_2868918494 = res_2818572663;
            var eh_2868918575 = n_2868918396[chckIndx(i_2868918494, 0, (n_2868918396).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868918575)) {
            var j_2868918579 = (eh_2868918575 & (t_2868918393.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868918393.data[chckIndx(j_2868918579, 0, (t_2868918393.data).length - 1)].Field0)) break Label6;
                  j_2868918579 = nextTry_1308622883(j_2868918579, (t_2868918393.data).length - 1);
                }
            };
            rawInsert_2868918826(t_2868918393, t_2868918393, "data", n_2868918396[chckIndx(i_2868918494, 0, (n_2868918396).length - 1)].Field1, n_2868918396[chckIndx(i_2868918494, 0, (n_2868918396).length - 1)].Field2, eh_2868918575, j_2868918579);
            }
            
            res_2818572663 = addInt(res_2818572663, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868919076(t_2868919079, key_2868919080, hc_2868919081) {
  var result_2868919082 = 0;

  BeforeRet: {
    if (((t_2868919079.data).length == 0)) {
    result_2868919082 = -1;
    break BeforeRet;
    }
    
    var h_2868919167 = (hc_2868919081 & (t_2868919079.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868919079.data[chckIndx(h_2868919167, 0, (t_2868919079.data).length - 1)].Field0)) break Label2;
          if (((t_2868919079.data[chckIndx(h_2868919167, 0, (t_2868919079.data).length - 1)].Field0 == hc_2868919081) && (t_2868919079.data[chckIndx(h_2868919167, 0, (t_2868919079.data).length - 1)].Field1 == key_2868919080))) {
          result_2868919082 = h_2868919167;
          break BeforeRet;
          }
          
          h_2868919167 = nextTry_1308622883(h_2868919167, (t_2868919079.data).length - 1);
        }
    };
    result_2868919082 = subInt(-1, h_2868919167);
  };

  return result_2868919082;

}

function HEX5BHEX5DHEX3D_2868917865(t_2868917868, key_2868917869, val_2868917870) {
    if (((t_2868917868.data).length == 0)) {
    var correctSizeHEX60gensym185_2868917953 = slotsNeeded_1308622891(32);
    t_2868917868.counter = 0;
    t_2868917868.data = new Array(chckRange(correctSizeHEX60gensym185_2868917953, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym185_2868917953, 0, 2147483647) ; ++i) { t_2868917868.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868917958 = [0];
    var index_2868917965 = rawGet_2868917300(t_2868917868, key_2868917869, hc_2868917958, 0);
    if ((0 <= index_2868917965)) {
    t_2868917868.data[chckIndx(index_2868917965, 0, (t_2868917868.data).length - 1)].Field2 = val_2868917870;
    }
    else {
      if (((t_2868917868.data).length == 0)) {
      var correctSizeHEX60gensym188_2868918128 = slotsNeeded_1308622891(32);
      t_2868917868.counter = 0;
      t_2868917868.data = new Array(chckRange(correctSizeHEX60gensym188_2868918128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_2868918128, 0, 2147483647) ; ++i) { t_2868917868.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868918133(t_2868917868)) {
      enlarge_2868918390(t_2868917868);
      index_2868917965 = rawGetKnownHC_2868919076(t_2868917868, key_2868917869, hc_2868917958[0]);
      }
      
      index_2868917965 = subInt(-1, index_2868917965);
      rawInsert_2868918826(t_2868917868, t_2868917868, "data", key_2868917869, val_2868917870, hc_2868917958[0], index_2868917965);
      t_2868917868.counter = addInt(t_2868917868.counter, 1);
    }
    

  
}

function len_2868919878(t_2868919881) {
  var result_2868919882 = 0;

    result_2868919882 = t_2868919881.counter;

  return result_2868919882;

}

function len_2868919795(cache_2868919798) {
  var result_2868919799 = 0;

    result_2868919799 = len_2868919878(cache_2868919798.table);

  return result_2868919799;

}

function del_2868919970(t_2868919973, key_2868919974) {
    var hc_2868919975 = [0];
    var i_2868919982 = rawGet_2868917300(t_2868919973, key_2868919974, hc_2868919975, 0);
    var mskHEX60gensym36_2868919986 = (t_2868919973.data).length - 1;
    if ((0 <= i_2868919982)) {
    t_2868919973.counter = subInt(t_2868919973.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868919993 = i_2868919982;
            var rHEX60gensym36_2868919994 = jHEX60gensym36_2868919993;
            t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)].Field0 = 0;
            t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)].Field1 = null;
            t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868919982 = (addInt(i_2868919982, 1) & mskHEX60gensym36_2868919986);
                  if (isEmpty_1308622877(t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868919994 = (t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)].Field0 & mskHEX60gensym36_2868919986);
                  if (!(((((rHEX60gensym36_2868919994 <= i_2868919982) && (jHEX60gensym36_2868919993 < rHEX60gensym36_2868919994)) || ((jHEX60gensym36_2868919993 < rHEX60gensym36_2868919994) && (i_2868919982 < jHEX60gensym36_2868919993))) || ((i_2868919982 < jHEX60gensym36_2868919993) && (rHEX60gensym36_2868919994 <= i_2868919982))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868919973.data[chckIndx(jHEX60gensym36_2868919993, 0, (t_2868919973.data).length - 1)] = nimCopy(t_2868919973.data[chckIndx(jHEX60gensym36_2868919993, 0, (t_2868919973.data).length - 1)], t_2868919973.data[chckIndx(i_2868919982, 0, (t_2868919973.data).length - 1)], NTI2868904483);
          }
      };
    };
    }
    

  
}

function resize_2868919713(cache_2868919716) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868919716.capacity < len_2868919795(cache_2868919716))) break Label2;
          var t_2868919883 = cache_2868919716.list.tail;
          if (cache_2868919716.recordRemovedKeys) {
          incl_2868909858(cache_2868919716.removedKeys, t_2868919883.value.key);
          }
          
          del_2868919970(cache_2868919716.table, t_2868919883.value.key);
          remove_2868920729(cache_2868919716.list, t_2868919883);
        }
    };

  
}

function addNewNode_2868917775(cache_2868917778, key_2868917779, val_2868917780) {
    var node_2868917801 = newDoublyLinkedNode_2868917783({key: key_2868917779, val: nimCopy(null, val_2868917780, NTI2952791176)});
    HEX5BHEX5DHEX3D_2868917865(cache_2868917778.table, key_2868917779, node_2868917801);
    prepend_2868919476(cache_2868917778.list, node_2868917801);
    if (cache_2868917778.recordRemovedKeys) {
    excl_2868908699(cache_2868917778.removedKeys, key_2868917779);
    }
    
    resize_2868919713(cache_2868917778);

  
}

function HEX5BHEX5DHEX3D_2868917195(cache_2868917198, key_2868917199, val_2868917200) {
    var node_2868917748 = getOrDefault_2868917290(cache_2868917198.table, key_2868917199, null);
    if ((node_2868917748 == null)) {
    addNewNode_2868917775(cache_2868917198, key_2868917199, val_2868917200);
    }
    else {
      node_2868917748.value.val = nimCopy(node_2868917748.value.val, val_2868917200, NTI2952791176);
      remove_2868920729(cache_2868917198.list, node_2868917748);
      prepend_2868919476(cache_2868917198.list, node_2868917748);
    }
    

  
}

function fingerprint_2952791197(symbol_2952791198) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_2952791199 = [];

    switch (symbol_2952791198.kind) {
    case 0:
      var Temporary1 = symbol_2952791198;
      if (ConstSet129[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790025)); }
      result_2952791199 = nimCopy(null, [hash_2181038324(symbol_2952791198.id), hash_1325400491(symbol_2952791198.name), symbol_2952791198.kind, hash_2181038324(Temporary1.node.id)], NTI2952790925);
      break;
    case 1:
      var Temporary2 = symbol_2952791198;
      if (ConstSet130[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      var Temporary3 = symbol_2952791198;
      if (ConstSet131[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      var Temporary4 = symbol_2952791198;
      if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      var Temporary5 = symbol_2952791198;
      if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790025)); }
      result_2952791199 = nimCopy(null, HEX26_2952790625(HEX26_2952790625([hash_2181038324(symbol_2952791198.id), hash_1325400491(symbol_2952791198.name), symbol_2952791198.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_2952790618(Temporary4.typ)), fingerprint_2952790799(Temporary5.value)), NTI2952790471);
      break;
    }

  return result_2952791199;

}

function fingerprint_2952791591(symbol_2952791596) {
      var Temporary1;

  var result_2952791597 = [];

  BeforeRet: {
      var oHEX60gensym27_2952791600 = nimCopy(null, symbol_2952791596, NTI2952791176);
      if (!isSome_2952791605(oHEX60gensym27_2952791600)) Temporary1 = false; else {        var s_2952791651 = get_2952791625(oHEX60gensym27_2952791600);
        Temporary1 = true;      }    if (Temporary1) {
    result_2952791597 = nimCopy(null, fingerprint_2952791197(s_2952791651), NTI2885681176);
    break BeforeRet;
    }
    
    result_2952791597 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_2952791597;

}

function initDoublyLinkedList_2868921172() {
  var result_2868921174 = ({head: null, tail: null});

  return result_2868921174;

}

function initTable_2868921178(initialSize_2868921181) {
  var result_2868921182 = ({data: [], counter: 0});

    var correctSizeHEX60gensym198_2868921184 = slotsNeeded_1308622891(chckRange(initialSize_2868921181, 0, 2147483647));
    result_2868921182.counter = 0;
    result_2868921182.data = new Array(chckRange(correctSizeHEX60gensym198_2868921184, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym198_2868921184, 0, 2147483647) ; ++i) { result_2868921182.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868921182;

}

function newLruCache_2868921162(capacity_2868921165, recordRemovedKeys_2868921166) {
  var result_2868921167 = null;

    result_2868921167 = {capacity: capacity_2868921165, list: initDoublyLinkedList_2868921172(), table: initTable_2868921178(correctSize_2902458389(capacity_2868921165)), recordRemovedKeys: recordRemovedKeys_2868921166, removedKeys: ({data: [], counter: 0})};

  return result_2868921167;

}

function newCache_2868921157(capacity_2868921160) {
  var result_2868921161 = null;

    result_2868921161 = newLruCache_2868921162(capacity_2868921160, false);

  return result_2868921161;

}

function init_2868921152(result_2868921155, result_2868921155_Idx, capacity_2868921156) {
    result_2868921155[result_2868921155_Idx] = newCache_2868921157(capacity_2868921156);

  
}

function initTable_2868956016(initialSize_2868956019) {
  var result_2868956020 = ({data: [], counter: 0});

    var correctSizeHEX60gensym369_2868956022 = slotsNeeded_1308622891(chckRange(initialSize_2868956019, 0, 2147483647));
    result_2868956020.counter = 0;
    result_2868956020.data = new Array(chckRange(correctSizeHEX60gensym369_2868956022, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_2868956022, 0, 2147483647) ; ++i) { result_2868956020.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_2868956020;

}

function newTable_2869001024(initialSize_2869001027) {
  var result_2869001028 = null;

    result_2869001028 = ({data: [], counter: 0});
    result_2869001028 = nimCopy(result_2869001028, initTable_2868956016(initialSize_2869001027), NTI2952790984);

  return result_2869001028;

}

function none_2852126927() {
  var result_2852126933 = ({val: null});

  return result_2852126933;

}

function none_2852126924() {
  var result_2852126926 = ({val: null});

    result_2852126926 = nimCopy(result_2852126926, none_2852126927(), NTI2852126839);

  return result_2852126926;

}

function some_2852126946(val_2852126948) {
  var result_2852126949 = ({val: null});

    if (!(!((val_2852126948 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2852126949.val = val_2852126948;

  return result_2852126949;

}

function findWithParentRec_2852128645(node_2852128646, kind_2852128647) {
  var result_2852128649 = ({val: null});

  BeforeRet: {
    if ((node_2852128646.parent == null)) {
    result_2852128649 = nimCopy(result_2852128649, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    if ((node_2852128646.parent.kind == kind_2852128647)) {
    result_2852128649 = nimCopy(result_2852128649, some_2852126946(node_2852128646), NTI2852126839);
    break BeforeRet;
    }
    
    result_2852128649 = nimCopy(result_2852128649, findWithParentRec_2852128645(node_2852128646.parent, kind_2852128647), NTI2852126839);
    break BeforeRet;
  };

  return result_2852128649;

}

function isSome_2852128602(self_2852128604) {
  var result_2852128605 = false;

    result_2852128605 = !((self_2852128604.val == null));

  return result_2852128605;

}

function isNone_2852128630(self_2852128632) {
  var result_2852128633 = false;

    result_2852128633 = (self_2852128632.val == null);

  return result_2852128633;

}

function get_2852128622(self_2852128624) {
  var result_2852128625 = null;

    if (isNone_2852128630(self_2852128624)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2852128625 = self_2852128624["val"];

  return result_2852128625;

}

function mustRehash_2869001821(t_2869001823) {
  var result_2869001824 = false;

    if (!((t_2869001823.counter < (t_2869001823.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2869001824 = ((mulInt((t_2869001823.data).length, 2) < mulInt(t_2869001823.counter, 3)) || (subInt((t_2869001823.data).length, t_2869001823.counter) < 4));

  return result_2869001824;

}

function rawInsert_2869002514(t_2869002518, data_2869002519, data_2869002519_Idx, key_2869002520, val_2869002521, hc_2869002522, h_2869002523) {
    data_2869002519[data_2869002519_Idx][chckIndx(h_2869002523, 0, (data_2869002519[data_2869002519_Idx]).length - 1)].Field1 = nimCopy(data_2869002519[data_2869002519_Idx][chckIndx(h_2869002523, 0, (data_2869002519[data_2869002519_Idx]).length - 1)].Field1, key_2869002520, NTI2181038083);
    data_2869002519[data_2869002519_Idx][chckIndx(h_2869002523, 0, (data_2869002519[data_2869002519_Idx]).length - 1)].Field2 = val_2869002521;
    data_2869002519[data_2869002519_Idx][chckIndx(h_2869002523, 0, (data_2869002519[data_2869002519_Idx]).length - 1)].Field0 = hc_2869002522;

  
}

function enlarge_2869002078(t_2869002081) {
    var n_2869002084 = [];
    n_2869002084 = new Array(chckRange(mulInt((t_2869002081.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2869002081.data).length, 2), 0, 2147483647) ; ++i) { n_2869002084[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2869002081.data; t_2869002081.data = n_2869002084; n_2869002084 = Temporary1;    Label2: {
      var i_2869002182 = 0;
      var colontmp__2818572707 = 0;
      colontmp__2818572707 = (n_2869002084).length - 1;
      var res_2818572708 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572708 <= colontmp__2818572707)) break Label4;
            i_2869002182 = res_2818572708;
            var eh_2869002263 = n_2869002084[chckIndx(i_2869002182, 0, (n_2869002084).length - 1)].Field0;
            if (isFilled_1308622880(eh_2869002263)) {
            var j_2869002267 = (eh_2869002263 & (t_2869002081.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2869002081.data[chckIndx(j_2869002267, 0, (t_2869002081.data).length - 1)].Field0)) break Label6;
                  j_2869002267 = nextTry_1308622883(j_2869002267, (t_2869002081.data).length - 1);
                }
            };
            rawInsert_2869002514(t_2869002081, t_2869002081, "data", n_2869002084[chckIndx(i_2869002182, 0, (n_2869002084).length - 1)].Field1, n_2869002084[chckIndx(i_2869002182, 0, (n_2869002084).length - 1)].Field2, eh_2869002263, j_2869002267);
            }
            
            res_2818572708 = addInt(res_2818572708, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2869002764(t_2869002767, key_2869002768, hc_2869002769) {
  var result_2869002770 = 0;

  BeforeRet: {
    if (((t_2869002767.data).length == 0)) {
    result_2869002770 = -1;
    break BeforeRet;
    }
    
    var h_2869002855 = (hc_2869002769 & (t_2869002767.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2869002767.data[chckIndx(h_2869002855, 0, (t_2869002767.data).length - 1)].Field0)) break Label2;
          if (((t_2869002767.data[chckIndx(h_2869002855, 0, (t_2869002767.data).length - 1)].Field0 == hc_2869002769) && HEX3DHEX3D_2181038320(t_2869002767.data[chckIndx(h_2869002855, 0, (t_2869002767.data).length - 1)].Field1, key_2869002768))) {
          result_2869002770 = h_2869002855;
          break BeforeRet;
          }
          
          h_2869002855 = nextTry_1308622883(h_2869002855, (t_2869002767.data).length - 1);
        }
    };
    result_2869002770 = subInt(-1, h_2869002855);
  };

  return result_2869002770;

}

function HEX5BHEX5DHEX3D_2869001223(t_2869001226, key_2869001227, val_2869001228) {
    if (((t_2869001226.data).length == 0)) {
    var correctSizeHEX60gensym540_2869001312 = slotsNeeded_1308622891(32);
    t_2869001226.counter = 0;
    t_2869001226.data = new Array(chckRange(correctSizeHEX60gensym540_2869001312, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym540_2869001312, 0, 2147483647) ; ++i) { t_2869001226.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2869001317 = [0];
    var index_2869001653 = rawGet_2869001318(t_2869001226, key_2869001227, hc_2869001317, 0);
    if ((0 <= index_2869001653)) {
    t_2869001226.data[chckIndx(index_2869001653, 0, (t_2869001226.data).length - 1)].Field2 = val_2869001228;
    }
    else {
      if (((t_2869001226.data).length == 0)) {
      var correctSizeHEX60gensym545_2869001816 = slotsNeeded_1308622891(32);
      t_2869001226.counter = 0;
      t_2869001226.data = new Array(chckRange(correctSizeHEX60gensym545_2869001816, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym545_2869001816, 0, 2147483647) ; ++i) { t_2869001226.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2869001821(t_2869001226)) {
      enlarge_2869002078(t_2869001226);
      index_2869001653 = rawGetKnownHC_2869002764(t_2869001226, key_2869001227, hc_2869001317[0]);
      }
      
      index_2869001653 = subInt(-1, index_2869001653);
      rawInsert_2869002514(t_2869001226, t_2869001226, "data", key_2869001227, val_2869001228, hc_2869001317[0], index_2869001653);
      t_2869001226.counter = addInt(t_2869001226.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_2869014380(t_2869014383, key_2869014384, val_2869014385) {
    HEX5BHEX5DHEX3D_2869001223(t_2869014383, key_2869014384, val_2869014385);

  
}

function base_2852126814(node_2852126815) {
  var result_2852126816 = null;

  BeforeRet: {
    if ((node_2852126815.parent == null)) {
    result_2852126816 = node_2852126815;
    break BeforeRet;
    }
    
    result_2852126816 = base_2852126814(node_2852126815.parent);
    break BeforeRet;
  };

  return result_2852126816;

}

function len_2869015068(t_2869015071) {
  var result_2869015072 = 0;

    result_2869015072 = t_2869015071.counter;

  return result_2869015072;

}

function computeSymbolsImpl_2868904765(ctx_2868904766, node_2868904767) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_2869014175 = null;

    var logQueryHEX60gensym732_2869014177 = (ctx_2868904766.enableLogging || ctx_2868904766.enableQueryLogging);
    if (logQueryHEX60gensym732_2869014177) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym732_2869014177) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2852128727(node_2868904767) || []));
    }
    
    try {
    result_2869014175 = newTable_2869001024(32);
      var oHEX60gensym733_2869014259 = findWithParentRec_2852128645(node_2868904767, 7);
      if (!isSome_2852128602(oHEX60gensym733_2869014259)) Temporary4 = false; else {        var parentInNodeList_2869014305 = get_2852128622(oHEX60gensym733_2869014259);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_2869014305.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_2869014310 = computeSymbols_2868987052(ctx_2868904766, parentInNodeList_2869014305.parent, true);
    Label5: {
      var id_2869014315 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_2869014316 = null;
      var L_2818572670 = len_2952791314(parentSymbols_2869014310);
      Label6: {
        var h_2818572672 = 0;
        var colontmp__2818572673 = 0;
        colontmp__2818572673 = (parentSymbols_2869014310.data).length - 1;
        var res_2818572674 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2818572674 <= colontmp__2818572673)) break Label8;
              h_2818572672 = res_2818572674;
              if (isFilled_1308622880(parentSymbols_2869014310.data[chckIndx(h_2818572672, 0, (parentSymbols_2869014310.data).length - 1)].Field0)) {
              var colontmp__2818572677 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_2869014310.data[chckIndx(h_2818572672, 0, (parentSymbols_2869014310.data).length - 1)].Field1, NTI2181038083), Field1: parentSymbols_2869014310.data[chckIndx(h_2818572672, 0, (parentSymbols_2869014310.data).length - 1)].Field2}, NTI2952791002);
              id_2869014315 = nimCopy(id_2869014315, colontmp__2818572677["Field0"], NTI2181038083);
              sym_2869014316 = colontmp__2818572677["Field1"];
              HEX5BHEX5DHEX3D_2869014380(result_2869014175, id_2869014315, sym_2869014316);
              if (!((len_2952791314(parentSymbols_2869014310) == L_2818572670))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818572674 = addInt(res_2818572674, 1);
            }
        };
      };
    };
    recordDependency_2868957436(ctx_2868904766, getItem_2868957649(parentInNodeList_2869014305.parent), -1);
    var bIsOrderDependent_2869014539 = !((parentInNodeList_2869014305.parent.parent == null));
    Label9: {
      var child_2869014543 = null;
      var i_2818572680 = 0;
      var L_2818572681 = (parentInNodeList_2869014305.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2818572680 < L_2818572681)) break Label11;
            child_2869014543 = parentInNodeList_2869014305.parent.children[chckIndx(i_2818572680, 0, (parentInNodeList_2869014305.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_2869014539 && (child_2869014543 == parentInNodeList_2869014305))) {
              break Label9;
              }
              
              if (((!((child_2869014543.kind == 4)) && !((child_2869014543.kind == 5))) && !((child_2869014543.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym739_2869014562 = computeSymbol_2868983552(ctx_2868904766, child_2869014543, true);
                if (!isSome_2952791605(oHEX60gensym739_2869014562)) Temporary13 = false; else {                  var symbol_2869014608 = get_2952791625(oHEX60gensym739_2869014562);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_2869014380(result_2869014175, symbol_2869014608.id, symbol_2869014608);
              }
              
            };
            i_2818572680 = addInt(i_2818572680, 1);
            if (!(((parentInNodeList_2869014305.parent.children).length == L_2818572681))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym740_2869014680 = findWithParentRec_2852128645(node_2868904767, 11);
      if (!isSome_2852128602(oHEX60gensym740_2869014680)) Temporary14 = false; else {        var parentInFunctionDef_2869014726 = get_2852128622(oHEX60gensym740_2869014680);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_2869014727 = parentInFunctionDef_2869014726.parent;
    if ((0 < len_2852126808(functionDefinition_2869014727))) {
    var params_2869014728 = HEX5BHEX5D_2852126804(functionDefinition_2869014727, 0);
    recordDependency_2868957436(ctx_2868904766, getItem_2868957649(params_2869014728), -1);
    Label15: {
      var param_2869014732 = null;
      var i_2818572684 = 0;
      var L_2818572685 = (params_2869014728.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2818572684 < L_2818572685)) break Label17;
            param_2869014732 = params_2869014728.children[chckIndx(i_2818572684, 0, (params_2869014728.children).length - 1)];
            recordDependency_2868957436(ctx_2868904766, getItem_2868957649(param_2869014732), -1);
              var oHEX60gensym742_2869014735 = computeSymbol_2868983552(ctx_2868904766, param_2869014732, true);
              if (!isSome_2952791605(oHEX60gensym742_2869014735)) Temporary18 = false; else {                var symbol_2869014781 = get_2952791625(oHEX60gensym742_2869014735);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_2869014380(result_2869014175, param_2869014732.id, symbol_2869014781);
            }
            
            i_2818572684 = addInt(i_2818572684, 1);
            if (!(((params_2869014728.children).length == L_2818572685))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_2869014851 = base_2852126814(node_2868904767);
    recordDependency_2868957436(ctx_2868904766, getItem_2868957649(root_2869014851), -1);
    Label19: {
      var child_2869014855 = null;
      var i_2818572689 = 0;
      var L_2818572690 = (root_2869014851.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2818572689 < L_2818572690)) break Label21;
            child_2869014855 = root_2869014851.children[chckIndx(i_2818572689, 0, (root_2869014851.children).length - 1)];
            Label22: {
              if (((!((child_2869014855.kind == 4)) && !((child_2869014855.kind == 5))) && !((child_2869014855.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym746_2869014870 = computeSymbol_2868983552(ctx_2868904766, child_2869014855, true);
                if (!isSome_2952791605(oHEX60gensym746_2869014870)) Temporary23 = false; else {                  var symbol_2869014916 = get_2952791625(oHEX60gensym746_2869014870);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_2869014380(result_2869014175, symbol_2869014916.id, symbol_2869014916);
              }
              
            };
            i_2818572689 = addInt(i_2818572689, 1);
            if (!(((root_2869014851.children).length == L_2818572690))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_2869015409 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2869015410 = null;
      var L_2818572697 = len_2869015068(ctx_2868904766.globalScope);
      Label25: {
        var h_2818572699 = 0;
        var colontmp__2818572700 = 0;
        colontmp__2818572700 = (ctx_2868904766.globalScope.data).length - 1;
        var res_2818572701 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2818572701 <= colontmp__2818572700)) break Label27;
              h_2818572699 = res_2818572701;
              if (isFilled_1308622880(ctx_2868904766.globalScope.data[chckIndx(h_2818572699, 0, (ctx_2868904766.globalScope.data).length - 1)].Field0)) {
              var colontmp__2818572704 = nimCopy(null, {Field0: nimCopy(null, ctx_2868904766.globalScope.data[chckIndx(h_2818572699, 0, (ctx_2868904766.globalScope.data).length - 1)].Field1, NTI2181038083), Field1: ctx_2868904766.globalScope.data[chckIndx(h_2818572699, 0, (ctx_2868904766.globalScope.data).length - 1)].Field2}, NTI2868969167);
              key_2869015409 = nimCopy(key_2869015409, colontmp__2818572704["Field0"], NTI2181038083);
              symbol_2869015410 = colontmp__2818572704["Field1"];
              recordDependency_2868957436(ctx_2868904766, getItem_2868966918(symbol_2869015410), -1);
              HEX5BHEX5DHEX3D_2869014380(result_2869014175, symbol_2869015410.id, symbol_2869015410);
              if (!((len_2869015068(ctx_2868904766.globalScope) == L_2818572697))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818572701 = addInt(res_2818572701, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym732_2869014177 && false)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868956986(result_2869014175) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym732_2869014177) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }

  return result_2869014175;

}

function getOrDefault_2868921552(t_2868921555, key_2868921556, default_2868921557) {
    var Temporary1;

  var result_2868921558 = null;

    var hcHEX60gensym201_2868921561 = [0];
    var indexHEX60gensym201_2868921920 = rawGet_2868921562(t_2868921555, key_2868921556, hcHEX60gensym201_2868921561, 0);
    if ((0 <= indexHEX60gensym201_2868921920)) {
    Temporary1 = t_2868921555.data[chckIndx(indexHEX60gensym201_2868921920, 0, (t_2868921555.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868921557;
    }
    
    result_2868921558 = Temporary1;

  return result_2868921558;

}

function newDoublyLinkedNode_2868922045(value_2868922047) {
  var result_2868922048 = null;

    result_2868922048 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2868922048.value = nimCopy(result_2868922048.value, value_2868922047, NTI2868904520);

  return result_2868922048;

}

function mustRehash_2868922395(t_2868922397) {
  var result_2868922398 = false;

    if (!((t_2868922397.counter < (t_2868922397.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868922398 = ((mulInt((t_2868922397.data).length, 2) < mulInt(t_2868922397.counter, 3)) || (subInt((t_2868922397.data).length, t_2868922397.counter) < 4));

  return result_2868922398;

}

function rawInsert_2868923088(t_2868923092, data_2868923093, data_2868923093_Idx, key_2868923094, val_2868923095, hc_2868923096, h_2868923097) {
    data_2868923093[data_2868923093_Idx][chckIndx(h_2868923097, 0, (data_2868923093[data_2868923093_Idx]).length - 1)].Field1 = key_2868923094;
    data_2868923093[data_2868923093_Idx][chckIndx(h_2868923097, 0, (data_2868923093[data_2868923093_Idx]).length - 1)].Field2 = val_2868923095;
    data_2868923093[data_2868923093_Idx][chckIndx(h_2868923097, 0, (data_2868923093[data_2868923093_Idx]).length - 1)].Field0 = hc_2868923096;

  
}

function enlarge_2868922652(t_2868922655) {
    var n_2868922658 = [];
    n_2868922658 = new Array(chckRange(mulInt((t_2868922655.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868922655.data).length, 2), 0, 2147483647) ; ++i) { n_2868922658[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868922655.data; t_2868922655.data = n_2868922658; n_2868922658 = Temporary1;    Label2: {
      var i_2868922756 = 0;
      var colontmp__2818572713 = 0;
      colontmp__2818572713 = (n_2868922658).length - 1;
      var res_2818572714 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572714 <= colontmp__2818572713)) break Label4;
            i_2868922756 = res_2818572714;
            var eh_2868922837 = n_2868922658[chckIndx(i_2868922756, 0, (n_2868922658).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868922837)) {
            var j_2868922841 = (eh_2868922837 & (t_2868922655.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868922655.data[chckIndx(j_2868922841, 0, (t_2868922655.data).length - 1)].Field0)) break Label6;
                  j_2868922841 = nextTry_1308622883(j_2868922841, (t_2868922655.data).length - 1);
                }
            };
            rawInsert_2868923088(t_2868922655, t_2868922655, "data", n_2868922658[chckIndx(i_2868922756, 0, (n_2868922658).length - 1)].Field1, n_2868922658[chckIndx(i_2868922756, 0, (n_2868922658).length - 1)].Field2, eh_2868922837, j_2868922841);
            }
            
            res_2818572714 = addInt(res_2818572714, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868923338(t_2868923341, key_2868923342, hc_2868923343) {
  var result_2868923344 = 0;

  BeforeRet: {
    if (((t_2868923341.data).length == 0)) {
    result_2868923344 = -1;
    break BeforeRet;
    }
    
    var h_2868923429 = (hc_2868923343 & (t_2868923341.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868923341.data[chckIndx(h_2868923429, 0, (t_2868923341.data).length - 1)].Field0)) break Label2;
          if (((t_2868923341.data[chckIndx(h_2868923429, 0, (t_2868923341.data).length - 1)].Field0 == hc_2868923343) && (t_2868923341.data[chckIndx(h_2868923429, 0, (t_2868923341.data).length - 1)].Field1 == key_2868923342))) {
          result_2868923344 = h_2868923429;
          break BeforeRet;
          }
          
          h_2868923429 = nextTry_1308622883(h_2868923429, (t_2868923341.data).length - 1);
        }
    };
    result_2868923344 = subInt(-1, h_2868923429);
  };

  return result_2868923344;

}

function HEX5BHEX5DHEX3D_2868922127(t_2868922130, key_2868922131, val_2868922132) {
    if (((t_2868922130.data).length == 0)) {
    var correctSizeHEX60gensym206_2868922215 = slotsNeeded_1308622891(32);
    t_2868922130.counter = 0;
    t_2868922130.data = new Array(chckRange(correctSizeHEX60gensym206_2868922215, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym206_2868922215, 0, 2147483647) ; ++i) { t_2868922130.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868922220 = [0];
    var index_2868922227 = rawGet_2868921562(t_2868922130, key_2868922131, hc_2868922220, 0);
    if ((0 <= index_2868922227)) {
    t_2868922130.data[chckIndx(index_2868922227, 0, (t_2868922130.data).length - 1)].Field2 = val_2868922132;
    }
    else {
      if (((t_2868922130.data).length == 0)) {
      var correctSizeHEX60gensym209_2868922390 = slotsNeeded_1308622891(32);
      t_2868922130.counter = 0;
      t_2868922130.data = new Array(chckRange(correctSizeHEX60gensym209_2868922390, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym209_2868922390, 0, 2147483647) ; ++i) { t_2868922130.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868922395(t_2868922130)) {
      enlarge_2868922652(t_2868922130);
      index_2868922227 = rawGetKnownHC_2868923338(t_2868922130, key_2868922131, hc_2868922220[0]);
      }
      
      index_2868922227 = subInt(-1, index_2868922227);
      rawInsert_2868923088(t_2868922130, t_2868922130, "data", key_2868922131, val_2868922132, hc_2868922220[0], index_2868922227);
      t_2868922130.counter = addInt(t_2868922130.counter, 1);
    }
    

  
}

function len_2868924140(t_2868924143) {
  var result_2868924144 = 0;

    result_2868924144 = t_2868924143.counter;

  return result_2868924144;

}

function len_2868924057(cache_2868924060) {
  var result_2868924061 = 0;

    result_2868924061 = len_2868924140(cache_2868924060.table);

  return result_2868924061;

}

function del_2868924232(t_2868924235, key_2868924236) {
    var hc_2868924237 = [0];
    var i_2868924244 = rawGet_2868921562(t_2868924235, key_2868924236, hc_2868924237, 0);
    var mskHEX60gensym36_2868924248 = (t_2868924235.data).length - 1;
    if ((0 <= i_2868924244)) {
    t_2868924235.counter = subInt(t_2868924235.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868924255 = i_2868924244;
            var rHEX60gensym36_2868924256 = jHEX60gensym36_2868924255;
            t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)].Field0 = 0;
            t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)].Field1 = null;
            t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868924244 = (addInt(i_2868924244, 1) & mskHEX60gensym36_2868924248);
                  if (isEmpty_1308622877(t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868924256 = (t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)].Field0 & mskHEX60gensym36_2868924248);
                  if (!(((((rHEX60gensym36_2868924256 <= i_2868924244) && (jHEX60gensym36_2868924255 < rHEX60gensym36_2868924256)) || ((jHEX60gensym36_2868924255 < rHEX60gensym36_2868924256) && (i_2868924244 < jHEX60gensym36_2868924255))) || ((i_2868924244 < jHEX60gensym36_2868924255) && (rHEX60gensym36_2868924256 <= i_2868924244))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868924235.data[chckIndx(jHEX60gensym36_2868924255, 0, (t_2868924235.data).length - 1)] = nimCopy(t_2868924235.data[chckIndx(jHEX60gensym36_2868924255, 0, (t_2868924235.data).length - 1)], t_2868924235.data[chckIndx(i_2868924244, 0, (t_2868924235.data).length - 1)], NTI2868904556);
          }
      };
    };
    }
    

  
}

function resize_2868923975(cache_2868923978) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868923978.capacity < len_2868924057(cache_2868923978))) break Label2;
          var t_2868924145 = cache_2868923978.list.tail;
          if (cache_2868923978.recordRemovedKeys) {
          incl_2868909858(cache_2868923978.removedKeys, t_2868924145.value.key);
          }
          
          del_2868924232(cache_2868923978.table, t_2868924145.value.key);
          remove_2868924991(cache_2868923978.list, t_2868924145);
        }
    };

  
}

function addNewNode_2868922037(cache_2868922040, key_2868922041, val_2868922042) {
    var node_2868922063 = newDoublyLinkedNode_2868922045({key: key_2868922041, val: val_2868922042});
    HEX5BHEX5DHEX3D_2868922127(cache_2868922040.table, key_2868922041, node_2868922063);
    prepend_2868923738(cache_2868922040.list, node_2868922063);
    if (cache_2868922040.recordRemovedKeys) {
    excl_2868908699(cache_2868922040.removedKeys, key_2868922041);
    }
    
    resize_2868923975(cache_2868922040);

  
}

function HEX5BHEX5DHEX3D_2868921457(cache_2868921460, key_2868921461, val_2868921462) {
    var node_2868922010 = getOrDefault_2868921552(cache_2868921460.table, key_2868921461, null);
    if ((node_2868922010 == null)) {
    addNewNode_2868922037(cache_2868921460, key_2868921461, val_2868921462);
    }
    else {
      node_2868922010.value.val = val_2868921462;
      remove_2868924991(cache_2868921460.list, node_2868922010);
      prepend_2868923738(cache_2868921460.list, node_2868922010);
    }
    

  
}

function fingerprint_2952791252(symbols_2952791260) {
  var result_2952791261 = [[]];

    result_2952791261[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_2952791576 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_2952791577 = null;
      var L_2818572721 = len_2952791314(symbols_2952791260);
      Label2: {
        var h_2818572723 = 0;
        var colontmp__2818572724 = 0;
        colontmp__2818572724 = (symbols_2952791260.data).length - 1;
        var res_2818572725 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818572725 <= colontmp__2818572724)) break Label4;
              h_2818572723 = res_2818572725;
              if (isFilled_1308622880(symbols_2952791260.data[chckIndx(h_2818572723, 0, (symbols_2952791260.data).length - 1)].Field0)) {
              var colontmp__2818572728 = nimCopy(null, {Field0: nimCopy(null, symbols_2952791260.data[chckIndx(h_2818572723, 0, (symbols_2952791260.data).length - 1)].Field1, NTI2181038083), Field1: symbols_2952791260.data[chckIndx(h_2818572723, 0, (symbols_2952791260.data).length - 1)].Field2}, NTI2952791002);
              key_2952791576 = nimCopy(key_2952791576, colontmp__2818572728["Field0"], NTI2181038083);
              value_2952791577 = colontmp__2818572728["Field1"];
              add_2952790663(result_2952791261, 0, fingerprint_2952791197(value_2952791577));
              if (!((len_2952791314(symbols_2952791260) == L_2818572721))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818572725 = addInt(res_2818572725, 1);
            }
        };
      };
    };

  return result_2952791261[0];

}

function initDoublyLinkedList_2868925434() {
  var result_2868925436 = ({head: null, tail: null});

  return result_2868925436;

}

function initTable_2868925440(initialSize_2868925443) {
  var result_2868925444 = ({data: [], counter: 0});

    var correctSizeHEX60gensym219_2868925446 = slotsNeeded_1308622891(chckRange(initialSize_2868925443, 0, 2147483647));
    result_2868925444.counter = 0;
    result_2868925444.data = new Array(chckRange(correctSizeHEX60gensym219_2868925446, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym219_2868925446, 0, 2147483647) ; ++i) { result_2868925444.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868925444;

}

function newLruCache_2868925424(capacity_2868925427, recordRemovedKeys_2868925428) {
  var result_2868925429 = null;

    result_2868925429 = {capacity: capacity_2868925427, list: initDoublyLinkedList_2868925434(), table: initTable_2868925440(correctSize_2902458389(capacity_2868925427)), recordRemovedKeys: recordRemovedKeys_2868925428, removedKeys: ({data: [], counter: 0})};

  return result_2868925429;

}

function newCache_2868925419(capacity_2868925422) {
  var result_2868925423 = null;

    result_2868925423 = newLruCache_2868925424(capacity_2868925422, false);

  return result_2868925423;

}

function init_2868925414(result_2868925417, result_2868925417_Idx, capacity_2868925418) {
    result_2868925417[result_2868925417_Idx] = newCache_2868925419(capacity_2868925418);

  
}

function hasKey_2868925657(t_2868925660, key_2868925661) {
  var result_2868925662 = false;

    var hc_2868925663 = [0];
    result_2868925662 = (0 <= rawGet_2868925664(t_2868925660, key_2868925661, hc_2868925663, 0));

  return result_2868925662;

}

function contains_2868925651(t_2868925654, key_2868925655) {
  var result_2868925656 = false;

  BeforeRet: {
    result_2868925656 = hasKey_2868925657(t_2868925654, key_2868925655);
    break BeforeRet;
  };

  return result_2868925656;

}

function contains_2868925557(cache_2868925560, key_2868925561) {
  var result_2868925562 = false;

    result_2868925562 = contains_2868925651(cache_2868925560.table, key_2868925561);

  return result_2868925562;

}

function HEX5BHEX5D_2868926196(t_2868926199, key_2868926200) {
  var result_2868926201 = null;
  var result_2868926201_Idx = 0;

    var hcHEX60gensym22_2868926202 = [0];
    var indexHEX60gensym22_2868926209 = rawGet_2868925664(t_2868926199, key_2868926200, hcHEX60gensym22_2868926202, 0);
    if ((0 <= indexHEX60gensym22_2868926209)) {
    result_2868926201 = t_2868926199.data[chckIndx(indexHEX60gensym22_2868926209, 0, (t_2868926199.data).length - 1)]; result_2868926201_Idx = "Field2";
    }
    else {
    raiseKeyError_2868905617(key_2868926200);
    }
    

  return [result_2868926201, result_2868926201_Idx];

}

function HEX5BHEX5D_2868926110(cache_2868926113, key_2868926114) {
    var Temporary1;

  var result_2868926115 = null;

    var node_2868926302 = (Temporary1 = HEX5BHEX5D_2868926196(cache_2868926113.table, key_2868926114), Temporary1)[0][Temporary1[1]];
    result_2868926115 = node_2868926302.value.val;
    remove_2868926316(cache_2868926113.list, node_2868926302);
    prepend_2868926620(cache_2868926113.list, node_2868926302);

  return result_2868926115;

}

function computeSymbolTypeImpl_2868904770(ctx_2868904771, symbol_2868904772) {
      var Temporary3;
      var Temporary4;

  var result_2869003181 = null;

  BeforeRet: {
    var logQueryHEX60gensym553_2869003183 = (ctx_2868904771.enableLogging || ctx_2868904771.enableQueryLogging);
    if (logQueryHEX60gensym553_2869003183) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym553_2869003183) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2952791164(symbol_2868904772) || []));
    }
    
    try {
    switch (symbol_2868904772.kind) {
    case 0:
      var Temporary3 = symbol_2868904772;
      if (ConstSet134[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      result_2869003181 = computeType_2868976946(ctx_2868904771, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2868904772;
      if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      result_2869003181 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym553_2869003183 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2952790452(result_2869003181) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym553_2869003183) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869003181;

}

function getOrDefault_2868926975(t_2868926978, key_2868926979, default_2868926980) {
    var Temporary1;

  var result_2868926981 = null;

    var hcHEX60gensym226_2868926984 = [0];
    var indexHEX60gensym226_2868927339 = rawGet_2868926985(t_2868926978, key_2868926979, hcHEX60gensym226_2868926984, 0);
    if ((0 <= indexHEX60gensym226_2868927339)) {
    Temporary1 = t_2868926978.data[chckIndx(indexHEX60gensym226_2868927339, 0, (t_2868926978.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868926980;
    }
    
    result_2868926981 = Temporary1;

  return result_2868926981;

}

function newDoublyLinkedNode_2868927464(value_2868927466) {
  var result_2868927467 = null;

    result_2868927467 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2868927467.value = nimCopy(result_2868927467.value, value_2868927466, NTI2868904586);

  return result_2868927467;

}

function mustRehash_2868927814(t_2868927816) {
  var result_2868927817 = false;

    if (!((t_2868927816.counter < (t_2868927816.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868927817 = ((mulInt((t_2868927816.data).length, 2) < mulInt(t_2868927816.counter, 3)) || (subInt((t_2868927816.data).length, t_2868927816.counter) < 4));

  return result_2868927817;

}

function rawInsert_2868928507(t_2868928511, data_2868928512, data_2868928512_Idx, key_2868928513, val_2868928514, hc_2868928515, h_2868928516) {
    data_2868928512[data_2868928512_Idx][chckIndx(h_2868928516, 0, (data_2868928512[data_2868928512_Idx]).length - 1)].Field1 = key_2868928513;
    data_2868928512[data_2868928512_Idx][chckIndx(h_2868928516, 0, (data_2868928512[data_2868928512_Idx]).length - 1)].Field2 = val_2868928514;
    data_2868928512[data_2868928512_Idx][chckIndx(h_2868928516, 0, (data_2868928512[data_2868928512_Idx]).length - 1)].Field0 = hc_2868928515;

  
}

function enlarge_2868928071(t_2868928074) {
    var n_2868928077 = [];
    n_2868928077 = new Array(chckRange(mulInt((t_2868928074.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868928074.data).length, 2), 0, 2147483647) ; ++i) { n_2868928077[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868928074.data; t_2868928074.data = n_2868928077; n_2868928077 = Temporary1;    Label2: {
      var i_2868928175 = 0;
      var colontmp__2818572731 = 0;
      colontmp__2818572731 = (n_2868928077).length - 1;
      var res_2818572732 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572732 <= colontmp__2818572731)) break Label4;
            i_2868928175 = res_2818572732;
            var eh_2868928256 = n_2868928077[chckIndx(i_2868928175, 0, (n_2868928077).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868928256)) {
            var j_2868928260 = (eh_2868928256 & (t_2868928074.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868928074.data[chckIndx(j_2868928260, 0, (t_2868928074.data).length - 1)].Field0)) break Label6;
                  j_2868928260 = nextTry_1308622883(j_2868928260, (t_2868928074.data).length - 1);
                }
            };
            rawInsert_2868928507(t_2868928074, t_2868928074, "data", n_2868928077[chckIndx(i_2868928175, 0, (n_2868928077).length - 1)].Field1, n_2868928077[chckIndx(i_2868928175, 0, (n_2868928077).length - 1)].Field2, eh_2868928256, j_2868928260);
            }
            
            res_2818572732 = addInt(res_2818572732, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868928757(t_2868928760, key_2868928761, hc_2868928762) {
  var result_2868928763 = 0;

  BeforeRet: {
    if (((t_2868928760.data).length == 0)) {
    result_2868928763 = -1;
    break BeforeRet;
    }
    
    var h_2868928848 = (hc_2868928762 & (t_2868928760.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868928760.data[chckIndx(h_2868928848, 0, (t_2868928760.data).length - 1)].Field0)) break Label2;
          if (((t_2868928760.data[chckIndx(h_2868928848, 0, (t_2868928760.data).length - 1)].Field0 == hc_2868928762) && HEX3DHEX3D_2952791170(t_2868928760.data[chckIndx(h_2868928848, 0, (t_2868928760.data).length - 1)].Field1, key_2868928761))) {
          result_2868928763 = h_2868928848;
          break BeforeRet;
          }
          
          h_2868928848 = nextTry_1308622883(h_2868928848, (t_2868928760.data).length - 1);
        }
    };
    result_2868928763 = subInt(-1, h_2868928848);
  };

  return result_2868928763;

}

function HEX5BHEX5DHEX3D_2868927546(t_2868927549, key_2868927550, val_2868927551) {
    if (((t_2868927549.data).length == 0)) {
    var correctSizeHEX60gensym231_2868927634 = slotsNeeded_1308622891(32);
    t_2868927549.counter = 0;
    t_2868927549.data = new Array(chckRange(correctSizeHEX60gensym231_2868927634, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym231_2868927634, 0, 2147483647) ; ++i) { t_2868927549.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868927639 = [0];
    var index_2868927646 = rawGet_2868926985(t_2868927549, key_2868927550, hc_2868927639, 0);
    if ((0 <= index_2868927646)) {
    t_2868927549.data[chckIndx(index_2868927646, 0, (t_2868927549.data).length - 1)].Field2 = val_2868927551;
    }
    else {
      if (((t_2868927549.data).length == 0)) {
      var correctSizeHEX60gensym234_2868927809 = slotsNeeded_1308622891(32);
      t_2868927549.counter = 0;
      t_2868927549.data = new Array(chckRange(correctSizeHEX60gensym234_2868927809, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_2868927809, 0, 2147483647) ; ++i) { t_2868927549.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868927814(t_2868927549)) {
      enlarge_2868928071(t_2868927549);
      index_2868927646 = rawGetKnownHC_2868928757(t_2868927549, key_2868927550, hc_2868927639[0]);
      }
      
      index_2868927646 = subInt(-1, index_2868927646);
      rawInsert_2868928507(t_2868927549, t_2868927549, "data", key_2868927550, val_2868927551, hc_2868927639[0], index_2868927646);
      t_2868927549.counter = addInt(t_2868927549.counter, 1);
    }
    

  
}

function rawGet_2868929384(t_2868929387, key_2868929388, hc_2868929389, hc_2868929389_Idx) {
  var result_2868929390 = 0;

  BeforeRet: {
    hc_2868929389[hc_2868929389_Idx] = hash_2952791167(key_2868929388);
    if ((hc_2868929389[hc_2868929389_Idx] == 0)) {
    hc_2868929389[hc_2868929389_Idx] = 314159265;
    }
    
    if (((t_2868929387.data).length == 0)) {
    result_2868929390 = -1;
    break BeforeRet;
    }
    
    var h_2868929476 = (hc_2868929389[hc_2868929389_Idx] & (t_2868929387.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868929387.data[chckIndx(h_2868929476, 0, (t_2868929387.data).length - 1)].Field0)) break Label2;
          if (((t_2868929387.data[chckIndx(h_2868929476, 0, (t_2868929387.data).length - 1)].Field0 == hc_2868929389[hc_2868929389_Idx]) && HEX3DHEX3D_2952791170(t_2868929387.data[chckIndx(h_2868929476, 0, (t_2868929387.data).length - 1)].Field1, key_2868929388))) {
          result_2868929390 = h_2868929476;
          break BeforeRet;
          }
          
          h_2868929476 = nextTry_1828716586(h_2868929476, (t_2868929387.data).length - 1);
        }
    };
    result_2868929390 = subInt(-1, h_2868929476);
  };

  return result_2868929390;

}

function exclImpl_2868929378(s_2868929380, key_2868929381) {
          var Temporary5;

  var result_2868929382 = false;

  BeforeRet: {
    var hc_2868929383 = [0];
    var i_2868929738 = rawGet_2868929384(s_2868929380, key_2868929381, hc_2868929383, 0);
    var msk_2868929742 = (s_2868929380.data).length - 1;
    result_2868929382 = true;
    if ((0 <= i_2868929738)) {
    result_2868929382 = false;
    s_2868929380.counter = subInt(s_2868929380.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2868929748 = i_2868929738;
          var r_2868929749 = j_2868929748;
          s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)].Field0 = 0;
          s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2868929738 = (addInt(i_2868929738, 1) & msk_2868929742);
                if (isEmpty_1828716580(s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2868929749 = (s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)].Field0 & msk_2868929742);
                if (!(((((r_2868929749 <= i_2868929738) && (j_2868929748 < r_2868929749)) || ((j_2868929748 < r_2868929749) && (i_2868929738 < j_2868929748))) || ((i_2868929738 < j_2868929748) && (r_2868929749 <= i_2868929738))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)];
          s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)] = genericReset(s_2868929380.data[chckIndx(i_2868929738, 0, (s_2868929380.data).length - 1)], NTI2868904642);
          s_2868929380.data[chckIndx(j_2868929748, 0, (s_2868929380.data).length - 1)] = nimCopy(s_2868929380.data[chckIndx(j_2868929748, 0, (s_2868929380.data).length - 1)], Temporary5, NTI2868904642);
        }
    };
    }
    
  };

  return result_2868929382;

}

function excl_2868929363(s_2868929365, key_2868929366) {
    var _ = exclImpl_2868929378(s_2868929365, key_2868929366);

  
}

function len_2868930502(t_2868930505) {
  var result_2868930506 = 0;

    result_2868930506 = t_2868930505.counter;

  return result_2868930506;

}

function len_2868930419(cache_2868930422) {
  var result_2868930423 = 0;

    result_2868930423 = len_2868930502(cache_2868930422.table);

  return result_2868930423;

}

function mustRehash_2868930643(t_2868930645) {
  var result_2868930646 = false;

    if (!((t_2868930645.counter < (t_2868930645.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868930646 = ((mulInt((t_2868930645.data).length, 2) < mulInt(t_2868930645.counter, 3)) || (subInt((t_2868930645.data).length, t_2868930645.counter) < 4));

  return result_2868930646;

}

function rawGetKnownHC_2868931249(t_2868931252, key_2868931253, hc_2868931254) {
  var result_2868931255 = 0;

  BeforeRet: {
    if (((t_2868931252.data).length == 0)) {
    result_2868931255 = -1;
    break BeforeRet;
    }
    
    var h_2868931340 = (hc_2868931254 & (t_2868931252.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868931252.data[chckIndx(h_2868931340, 0, (t_2868931252.data).length - 1)].Field0)) break Label2;
          if (((t_2868931252.data[chckIndx(h_2868931340, 0, (t_2868931252.data).length - 1)].Field0 == hc_2868931254) && HEX3DHEX3D_2952791170(t_2868931252.data[chckIndx(h_2868931340, 0, (t_2868931252.data).length - 1)].Field1, key_2868931253))) {
          result_2868931255 = h_2868931340;
          break BeforeRet;
          }
          
          h_2868931340 = nextTry_1828716586(h_2868931340, (t_2868931252.data).length - 1);
        }
    };
    result_2868931255 = subInt(-1, h_2868931340);
  };

  return result_2868931255;

}

function rawInsert_2868931749(s_2868931751, data_2868931752, data_2868931752_Idx, key_2868931753, hc_2868931754, h_2868931755) {
    if (((data_2868931752[data_2868931752_Idx]).length == 0)) {
    var correctSizeHEX60gensym253_2868931838 = slotsNeeded_1828716594(64);
    s_2868931751.counter = 0;
    s_2868931751.data = new Array(chckRange(correctSizeHEX60gensym253_2868931838, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym253_2868931838, 0, 2147483647) ; ++i) { s_2868931751.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2868931752[data_2868931752_Idx][chckIndx(h_2868931755, 0, (data_2868931752[data_2868931752_Idx]).length - 1)].Field1 = key_2868931753;
    data_2868931752[data_2868931752_Idx][chckIndx(h_2868931755, 0, (data_2868931752[data_2868931752_Idx]).length - 1)].Field0 = hc_2868931754;

  
}

function enlarge_2868930906(s_2868930908) {
    var n_2868930910 = [];
    n_2868930910 = new Array(chckRange(mulInt((s_2868930908.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2868930908.data).length, 2), 0, 2147483647) ; ++i) { n_2868930910[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2868930908.data; s_2868930908.data = n_2868930910; n_2868930910 = Temporary1;    Label2: {
      var i_2868931008 = 0;
      var colontmp__2818572740 = 0;
      colontmp__2818572740 = (n_2868930910).length - 1;
      var res_2818572741 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572741 <= colontmp__2818572740)) break Label4;
            i_2868931008 = res_2818572741;
            if (isFilled_1828716583(n_2868930910[chckIndx(i_2868931008, 0, (n_2868930910).length - 1)].Field0)) {
            var j_2868931584 = subInt(-1, rawGetKnownHC_2868931249(s_2868930908, n_2868930910[chckIndx(i_2868931008, 0, (n_2868930910).length - 1)].Field1, n_2868930910[chckIndx(i_2868931008, 0, (n_2868930910).length - 1)].Field0));
            rawInsert_2868931749(s_2868930908, s_2868930908, "data", n_2868930910[chckIndx(i_2868931008, 0, (n_2868930910).length - 1)].Field1, n_2868930910[chckIndx(i_2868931008, 0, (n_2868930910).length - 1)].Field0, j_2868931584);
            }
            
            res_2818572741 = addInt(res_2818572741, 1);
          }
      };
    };

  
}

function incl_2868930527(s_2868930529, key_2868930530) {
    if (((s_2868930529.data).length == 0)) {
    var correctSizeHEX60gensym246_2868930613 = slotsNeeded_1828716594(64);
    s_2868930529.counter = 0;
    s_2868930529.data = new Array(chckRange(correctSizeHEX60gensym246_2868930613, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_2868930613, 0, 2147483647) ; ++i) { s_2868930529.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2868930628 = [0];
    var index_2868930642 = rawGet_2868929384(s_2868930529, key_2868930530, hc_2868930628, 0);
    if ((index_2868930642 < 0)) {
    if (mustRehash_2868930643(s_2868930529)) {
    enlarge_2868930906(s_2868930529);
    index_2868930642 = rawGetKnownHC_2868931249(s_2868930529, key_2868930530, hc_2868930628[0]);
    }
    
    rawInsert_2868931749(s_2868930529, s_2868930529, "data", key_2868930530, hc_2868930628[0], subInt(-1, index_2868930642));
    s_2868930529.counter = addInt(s_2868930529.counter, 1);
    }
    

  
}

function del_2868932105(t_2868932108, key_2868932109) {
    var hc_2868932110 = [0];
    var i_2868932117 = rawGet_2868926985(t_2868932108, key_2868932109, hc_2868932110, 0);
    var mskHEX60gensym36_2868932121 = (t_2868932108.data).length - 1;
    if ((0 <= i_2868932117)) {
    t_2868932108.counter = subInt(t_2868932108.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868932128 = i_2868932117;
            var rHEX60gensym36_2868932129 = jHEX60gensym36_2868932128;
            t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)].Field0 = 0;
            t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)].Field1 = null;
            t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868932117 = (addInt(i_2868932117, 1) & mskHEX60gensym36_2868932121);
                  if (isEmpty_1308622877(t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868932129 = (t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)].Field0 & mskHEX60gensym36_2868932121);
                  if (!(((((rHEX60gensym36_2868932129 <= i_2868932117) && (jHEX60gensym36_2868932128 < rHEX60gensym36_2868932129)) || ((jHEX60gensym36_2868932128 < rHEX60gensym36_2868932129) && (i_2868932117 < jHEX60gensym36_2868932128))) || ((i_2868932117 < jHEX60gensym36_2868932128) && (rHEX60gensym36_2868932129 <= i_2868932117))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868932108.data[chckIndx(jHEX60gensym36_2868932128, 0, (t_2868932108.data).length - 1)] = nimCopy(t_2868932108.data[chckIndx(jHEX60gensym36_2868932128, 0, (t_2868932108.data).length - 1)], t_2868932108.data[chckIndx(i_2868932117, 0, (t_2868932108.data).length - 1)], NTI2868904622);
          }
      };
    };
    }
    

  
}

function resize_2868930337(cache_2868930340) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868930340.capacity < len_2868930419(cache_2868930340))) break Label2;
          var t_2868930507 = cache_2868930340.list.tail;
          if (cache_2868930340.recordRemovedKeys) {
          incl_2868930527(cache_2868930340.removedKeys, t_2868930507.value.key);
          }
          
          del_2868932105(cache_2868930340.table, t_2868930507.value.key);
          remove_2868932864(cache_2868930340.list, t_2868930507);
        }
    };

  
}

function addNewNode_2868927456(cache_2868927459, key_2868927460, val_2868927461) {
    var node_2868927482 = newDoublyLinkedNode_2868927464({key: key_2868927460, val: val_2868927461});
    HEX5BHEX5DHEX3D_2868927546(cache_2868927459.table, key_2868927460, node_2868927482);
    prepend_2868929153(cache_2868927459.list, node_2868927482);
    if (cache_2868927459.recordRemovedKeys) {
    excl_2868929363(cache_2868927459.removedKeys, key_2868927460);
    }
    
    resize_2868930337(cache_2868927459);

  
}

function HEX5BHEX5DHEX3D_2868926880(cache_2868926883, key_2868926884, val_2868926885) {
    var node_2868927429 = getOrDefault_2868926975(cache_2868926883.table, key_2868926884, null);
    if ((node_2868927429 == null)) {
    addNewNode_2868927456(cache_2868926883, key_2868926884, val_2868926885);
    }
    else {
      node_2868927429.value.val = val_2868926885;
      remove_2868932864(cache_2868926883.list, node_2868927429);
      prepend_2868929153(cache_2868926883.list, node_2868927429);
    }
    

  
}

function initDoublyLinkedList_2868933307() {
  var result_2868933309 = ({head: null, tail: null});

  return result_2868933309;

}

function initTable_2868933313(initialSize_2868933316) {
  var result_2868933317 = ({data: [], counter: 0});

    var correctSizeHEX60gensym254_2868933319 = slotsNeeded_1308622891(chckRange(initialSize_2868933316, 0, 2147483647));
    result_2868933317.counter = 0;
    result_2868933317.data = new Array(chckRange(correctSizeHEX60gensym254_2868933319, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym254_2868933319, 0, 2147483647) ; ++i) { result_2868933317.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868933317;

}

function newLruCache_2868933297(capacity_2868933300, recordRemovedKeys_2868933301) {
  var result_2868933302 = null;

    result_2868933302 = {capacity: capacity_2868933300, list: initDoublyLinkedList_2868933307(), table: initTable_2868933313(correctSize_2902458389(capacity_2868933300)), recordRemovedKeys: recordRemovedKeys_2868933301, removedKeys: ({data: [], counter: 0})};

  return result_2868933302;

}

function newCache_2868933292(capacity_2868933295) {
  var result_2868933296 = null;

    result_2868933296 = newLruCache_2868933297(capacity_2868933295, false);

  return result_2868933296;

}

function init_2868933287(result_2868933290, result_2868933290_Idx, capacity_2868933291) {
    result_2868933290[result_2868933290_Idx] = newCache_2868933292(capacity_2868933291);

  
}

function computeSymbolValueImpl_2868904773(ctx_2868904774, symbol_2868904775) {
      var Temporary3;
      var Temporary4;

  var result_2869003197 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym554_2869003199 = (ctx_2868904774.enableLogging || ctx_2868904774.enableQueryLogging);
    if (logQueryHEX60gensym554_2869003199) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym554_2869003199) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2952791164(symbol_2868904775) || []));
    }
    
    try {
    switch (symbol_2868904775.kind) {
    case 0:
      var Temporary3 = symbol_2868904775;
      if (ConstSet136[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      result_2869003197 = nimCopy(result_2869003197, computeValue_2868980422(ctx_2868904774, Temporary3.node, true), NTI2952790023);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2868904775;
      if (ConstSet137[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      result_2869003197 = nimCopy(result_2869003197, Temporary4.value, NTI2952790023);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym554_2869003199 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2952790759(result_2869003197) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym554_2869003199) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869003197;

}

function getOrDefault_2868933685(t_2868933688, key_2868933689, default_2868933690) {
    var Temporary1;

  var result_2868933691 = null;

    var hcHEX60gensym257_2868933694 = [0];
    var indexHEX60gensym257_2868934049 = rawGet_2868933695(t_2868933688, key_2868933689, hcHEX60gensym257_2868933694, 0);
    if ((0 <= indexHEX60gensym257_2868934049)) {
    Temporary1 = t_2868933688.data[chckIndx(indexHEX60gensym257_2868934049, 0, (t_2868933688.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868933690;
    }
    
    result_2868933691 = Temporary1;

  return result_2868933691;

}

function newDoublyLinkedNode_2868934174(value_2868934176) {
  var result_2868934177 = null;

    result_2868934177 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2868934177.value = nimCopy(result_2868934177.value, value_2868934176, NTI2868904661);

  return result_2868934177;

}

function mustRehash_2868934533(t_2868934535) {
  var result_2868934536 = false;

    if (!((t_2868934535.counter < (t_2868934535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868934536 = ((mulInt((t_2868934535.data).length, 2) < mulInt(t_2868934535.counter, 3)) || (subInt((t_2868934535.data).length, t_2868934535.counter) < 4));

  return result_2868934536;

}

function rawInsert_2868935226(t_2868935230, data_2868935231, data_2868935231_Idx, key_2868935232, val_2868935233, hc_2868935234, h_2868935235) {
    data_2868935231[data_2868935231_Idx][chckIndx(h_2868935235, 0, (data_2868935231[data_2868935231_Idx]).length - 1)].Field1 = key_2868935232;
    data_2868935231[data_2868935231_Idx][chckIndx(h_2868935235, 0, (data_2868935231[data_2868935231_Idx]).length - 1)].Field2 = val_2868935233;
    data_2868935231[data_2868935231_Idx][chckIndx(h_2868935235, 0, (data_2868935231[data_2868935231_Idx]).length - 1)].Field0 = hc_2868935234;

  
}

function enlarge_2868934790(t_2868934793) {
    var n_2868934796 = [];
    n_2868934796 = new Array(chckRange(mulInt((t_2868934793.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868934793.data).length, 2), 0, 2147483647) ; ++i) { n_2868934796[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868934793.data; t_2868934793.data = n_2868934796; n_2868934796 = Temporary1;    Label2: {
      var i_2868934894 = 0;
      var colontmp__2818572748 = 0;
      colontmp__2818572748 = (n_2868934796).length - 1;
      var res_2818572749 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572749 <= colontmp__2818572748)) break Label4;
            i_2868934894 = res_2818572749;
            var eh_2868934975 = n_2868934796[chckIndx(i_2868934894, 0, (n_2868934796).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868934975)) {
            var j_2868934979 = (eh_2868934975 & (t_2868934793.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868934793.data[chckIndx(j_2868934979, 0, (t_2868934793.data).length - 1)].Field0)) break Label6;
                  j_2868934979 = nextTry_1308622883(j_2868934979, (t_2868934793.data).length - 1);
                }
            };
            rawInsert_2868935226(t_2868934793, t_2868934793, "data", n_2868934796[chckIndx(i_2868934894, 0, (n_2868934796).length - 1)].Field1, n_2868934796[chckIndx(i_2868934894, 0, (n_2868934796).length - 1)].Field2, eh_2868934975, j_2868934979);
            }
            
            res_2818572749 = addInt(res_2818572749, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868935476(t_2868935479, key_2868935480, hc_2868935481) {
  var result_2868935482 = 0;

  BeforeRet: {
    if (((t_2868935479.data).length == 0)) {
    result_2868935482 = -1;
    break BeforeRet;
    }
    
    var h_2868935567 = (hc_2868935481 & (t_2868935479.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868935479.data[chckIndx(h_2868935567, 0, (t_2868935479.data).length - 1)].Field0)) break Label2;
          if (((t_2868935479.data[chckIndx(h_2868935567, 0, (t_2868935479.data).length - 1)].Field0 == hc_2868935481) && HEX3DHEX3D_2952791170(t_2868935479.data[chckIndx(h_2868935567, 0, (t_2868935479.data).length - 1)].Field1, key_2868935480))) {
          result_2868935482 = h_2868935567;
          break BeforeRet;
          }
          
          h_2868935567 = nextTry_1308622883(h_2868935567, (t_2868935479.data).length - 1);
        }
    };
    result_2868935482 = subInt(-1, h_2868935567);
  };

  return result_2868935482;

}

function HEX5BHEX5DHEX3D_2868934265(t_2868934268, key_2868934269, val_2868934270) {
    if (((t_2868934268.data).length == 0)) {
    var correctSizeHEX60gensym262_2868934353 = slotsNeeded_1308622891(32);
    t_2868934268.counter = 0;
    t_2868934268.data = new Array(chckRange(correctSizeHEX60gensym262_2868934353, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym262_2868934353, 0, 2147483647) ; ++i) { t_2868934268.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868934358 = [0];
    var index_2868934365 = rawGet_2868933695(t_2868934268, key_2868934269, hc_2868934358, 0);
    if ((0 <= index_2868934365)) {
    t_2868934268.data[chckIndx(index_2868934365, 0, (t_2868934268.data).length - 1)].Field2 = val_2868934270;
    }
    else {
      if (((t_2868934268.data).length == 0)) {
      var correctSizeHEX60gensym265_2868934528 = slotsNeeded_1308622891(32);
      t_2868934268.counter = 0;
      t_2868934268.data = new Array(chckRange(correctSizeHEX60gensym265_2868934528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym265_2868934528, 0, 2147483647) ; ++i) { t_2868934268.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868934533(t_2868934268)) {
      enlarge_2868934790(t_2868934268);
      index_2868934365 = rawGetKnownHC_2868935476(t_2868934268, key_2868934269, hc_2868934358[0]);
      }
      
      index_2868934365 = subInt(-1, index_2868934365);
      rawInsert_2868935226(t_2868934268, t_2868934268, "data", key_2868934269, val_2868934270, hc_2868934358[0], index_2868934365);
      t_2868934268.counter = addInt(t_2868934268.counter, 1);
    }
    

  
}

function len_2868936274(t_2868936277) {
  var result_2868936278 = 0;

    result_2868936278 = t_2868936277.counter;

  return result_2868936278;

}

function len_2868936191(cache_2868936194) {
  var result_2868936195 = 0;

    result_2868936195 = len_2868936274(cache_2868936194.table);

  return result_2868936195;

}

function del_2868936366(t_2868936369, key_2868936370) {
    var hc_2868936371 = [0];
    var i_2868936378 = rawGet_2868933695(t_2868936369, key_2868936370, hc_2868936371, 0);
    var mskHEX60gensym36_2868936382 = (t_2868936369.data).length - 1;
    if ((0 <= i_2868936378)) {
    t_2868936369.counter = subInt(t_2868936369.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868936389 = i_2868936378;
            var rHEX60gensym36_2868936390 = jHEX60gensym36_2868936389;
            t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)].Field0 = 0;
            t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)].Field1 = null;
            t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868936378 = (addInt(i_2868936378, 1) & mskHEX60gensym36_2868936382);
                  if (isEmpty_1308622877(t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868936390 = (t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)].Field0 & mskHEX60gensym36_2868936382);
                  if (!(((((rHEX60gensym36_2868936390 <= i_2868936378) && (jHEX60gensym36_2868936389 < rHEX60gensym36_2868936390)) || ((jHEX60gensym36_2868936389 < rHEX60gensym36_2868936390) && (i_2868936378 < jHEX60gensym36_2868936389))) || ((i_2868936378 < jHEX60gensym36_2868936389) && (rHEX60gensym36_2868936390 <= i_2868936378))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868936369.data[chckIndx(jHEX60gensym36_2868936389, 0, (t_2868936369.data).length - 1)] = nimCopy(t_2868936369.data[chckIndx(jHEX60gensym36_2868936389, 0, (t_2868936369.data).length - 1)], t_2868936369.data[chckIndx(i_2868936378, 0, (t_2868936369.data).length - 1)], NTI2868904697);
          }
      };
    };
    }
    

  
}

function resize_2868936109(cache_2868936112) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868936112.capacity < len_2868936191(cache_2868936112))) break Label2;
          var t_2868936279 = cache_2868936112.list.tail;
          if (cache_2868936112.recordRemovedKeys) {
          incl_2868930527(cache_2868936112.removedKeys, t_2868936279.value.key);
          }
          
          del_2868936366(cache_2868936112.table, t_2868936279.value.key);
          remove_2868937125(cache_2868936112.list, t_2868936279);
        }
    };

  
}

function addNewNode_2868934166(cache_2868934169, key_2868934170, val_2868934171) {
    var node_2868934201 = newDoublyLinkedNode_2868934174({key: key_2868934170, val: nimCopy(null, val_2868934171, NTI2952790023)});
    HEX5BHEX5DHEX3D_2868934265(cache_2868934169.table, key_2868934170, node_2868934201);
    prepend_2868935872(cache_2868934169.list, node_2868934201);
    if (cache_2868934169.recordRemovedKeys) {
    excl_2868929363(cache_2868934169.removedKeys, key_2868934170);
    }
    
    resize_2868936109(cache_2868934169);

  
}

function HEX5BHEX5DHEX3D_2868933590(cache_2868933593, key_2868933594, val_2868933595) {
    var node_2868934139 = getOrDefault_2868933685(cache_2868933593.table, key_2868933594, null);
    if ((node_2868934139 == null)) {
    addNewNode_2868934166(cache_2868933593, key_2868933594, val_2868933595);
    }
    else {
      node_2868934139.value.val = nimCopy(node_2868934139.value.val, val_2868933595, NTI2952790023);
      remove_2868937125(cache_2868933593.list, node_2868934139);
      prepend_2868935872(cache_2868933593.list, node_2868934139);
    }
    

  
}

function initDoublyLinkedList_2868937568() {
  var result_2868937570 = ({head: null, tail: null});

  return result_2868937570;

}

function initTable_2868937574(initialSize_2868937577) {
  var result_2868937578 = ({data: [], counter: 0});

    var correctSizeHEX60gensym275_2868937580 = slotsNeeded_1308622891(chckRange(initialSize_2868937577, 0, 2147483647));
    result_2868937578.counter = 0;
    result_2868937578.data = new Array(chckRange(correctSizeHEX60gensym275_2868937580, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym275_2868937580, 0, 2147483647) ; ++i) { result_2868937578.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868937578;

}

function newLruCache_2868937558(capacity_2868937561, recordRemovedKeys_2868937562) {
  var result_2868937563 = null;

    result_2868937563 = {capacity: capacity_2868937561, list: initDoublyLinkedList_2868937568(), table: initTable_2868937574(correctSize_2902458389(capacity_2868937561)), recordRemovedKeys: recordRemovedKeys_2868937562, removedKeys: ({data: [], counter: 0})};

  return result_2868937563;

}

function newCache_2868937553(capacity_2868937556) {
  var result_2868937557 = null;

    result_2868937557 = newLruCache_2868937558(capacity_2868937556, false);

  return result_2868937557;

}

function init_2868937548(result_2868937551, result_2868937551_Idx, capacity_2868937552) {
    result_2868937551[result_2868937551_Idx] = newCache_2868937553(capacity_2868937552);

  
}

function hasKey_2868937791(t_2868937794, key_2868937795) {
  var result_2868937796 = false;

    var hc_2868937797 = [0];
    result_2868937796 = (0 <= rawGet_2868937798(t_2868937794, key_2868937795, hc_2868937797, 0));

  return result_2868937796;

}

function contains_2868937785(t_2868937788, key_2868937789) {
  var result_2868937790 = false;

  BeforeRet: {
    result_2868937790 = hasKey_2868937791(t_2868937788, key_2868937789);
    break BeforeRet;
  };

  return result_2868937790;

}

function contains_2868937691(cache_2868937694, key_2868937695) {
  var result_2868937696 = false;

    result_2868937696 = contains_2868937785(cache_2868937694.table, key_2868937695);

  return result_2868937696;

}

function HEX5BHEX5D_2868938330(t_2868938333, key_2868938334) {
  var result_2868938335 = null;
  var result_2868938335_Idx = 0;

    var hcHEX60gensym22_2868938336 = [0];
    var indexHEX60gensym22_2868938343 = rawGet_2868937798(t_2868938333, key_2868938334, hcHEX60gensym22_2868938336, 0);
    if ((0 <= indexHEX60gensym22_2868938343)) {
    result_2868938335 = t_2868938333.data[chckIndx(indexHEX60gensym22_2868938343, 0, (t_2868938333.data).length - 1)]; result_2868938335_Idx = "Field2";
    }
    else {
    raiseKeyError_2868905617(key_2868938334);
    }
    

  return [result_2868938335, result_2868938335_Idx];

}

function HEX5BHEX5D_2868938244(cache_2868938247, key_2868938248) {
    var Temporary1;

  var result_2868938249 = null;

    var node_2868938436 = (Temporary1 = HEX5BHEX5D_2868938330(cache_2868938247.table, key_2868938248), Temporary1)[0][Temporary1[1]];
    result_2868938249 = node_2868938436.value.val;
    remove_2868938450(cache_2868938247.list, node_2868938436);
    prepend_2868938754(cache_2868938247.list, node_2868938436);

  return result_2868938249;

}

function initTable_3003123900(initialSize_3003123903) {
  var result_3003123904 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3003123906 = slotsNeeded_1308622891(chckRange(initialSize_3003123903, 0, 2147483647));
    result_3003123904.counter = 0;
    result_3003123904.data = new Array(chckRange(correctSizeHEX60gensym58_3003123906, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3003123906, 0, 2147483647) ; ++i) { result_3003123904.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3003123904;

}

function rawGet_3003121829(t_3003121832, key_3003121833, hc_3003121834, hc_3003121834_Idx) {
  var result_3003121835 = 0;

  BeforeRet: {
    hc_3003121834[hc_3003121834_Idx] = hash_2181038324(key_3003121833);
    if ((hc_3003121834[hc_3003121834_Idx] == 0)) {
    hc_3003121834[hc_3003121834_Idx] = 314159265;
    }
    
    if (((t_3003121832.data).length == 0)) {
    result_3003121835 = -1;
    break BeforeRet;
    }
    
    var h_3003121886 = (hc_3003121834[hc_3003121834_Idx] & (t_3003121832.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003121832.data[chckIndx(h_3003121886, 0, (t_3003121832.data).length - 1)].Field0)) break Label2;
          if (((t_3003121832.data[chckIndx(h_3003121886, 0, (t_3003121832.data).length - 1)].Field0 == hc_3003121834[hc_3003121834_Idx]) && HEX3DHEX3D_2181038320(t_3003121832.data[chckIndx(h_3003121886, 0, (t_3003121832.data).length - 1)].Field1, key_3003121833))) {
          result_3003121835 = h_3003121886;
          break BeforeRet;
          }
          
          h_3003121886 = nextTry_1308622883(h_3003121886, (t_3003121832.data).length - 1);
        }
    };
    result_3003121835 = subInt(-1, h_3003121886);
  };

  return result_3003121835;

}

function mustRehash_3003122174(t_3003122176) {
  var result_3003122177 = false;

    if (!((t_3003122176.counter < (t_3003122176.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122177 = ((mulInt((t_3003122176.data).length, 2) < mulInt(t_3003122176.counter, 3)) || (subInt((t_3003122176.data).length, t_3003122176.counter) < 4));

  return result_3003122177;

}

function rawInsert_3003122623(t_3003122627, data_3003122628, data_3003122628_Idx, key_3003122629, val_3003122630, hc_3003122631, h_3003122632) {
    data_3003122628[data_3003122628_Idx][chckIndx(h_3003122632, 0, (data_3003122628[data_3003122628_Idx]).length - 1)].Field1 = nimCopy(data_3003122628[data_3003122628_Idx][chckIndx(h_3003122632, 0, (data_3003122628[data_3003122628_Idx]).length - 1)].Field1, key_3003122629, NTI2181038083);
    data_3003122628[data_3003122628_Idx][chckIndx(h_3003122632, 0, (data_3003122628[data_3003122628_Idx]).length - 1)].Field2 = nimCopy(data_3003122628[data_3003122628_Idx][chckIndx(h_3003122632, 0, (data_3003122628[data_3003122628_Idx]).length - 1)].Field2, val_3003122630, NTI2952790023);
    data_3003122628[data_3003122628_Idx][chckIndx(h_3003122632, 0, (data_3003122628[data_3003122628_Idx]).length - 1)].Field0 = hc_3003122631;

  
}

function enlarge_3003122329(t_3003122332) {
    var n_3003122335 = [];
    n_3003122335 = new Array(chckRange(mulInt((t_3003122332.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122332.data).length, 2), 0, 2147483647) ; ++i) { n_3003122335[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3003122332.data; t_3003122332.data = n_3003122335; n_3003122335 = Temporary1;    Label2: {
      var i_3003122399 = 0;
      var colontmp__2818572763 = 0;
      colontmp__2818572763 = (n_3003122335).length - 1;
      var res_2818572764 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572764 <= colontmp__2818572763)) break Label4;
            i_3003122399 = res_2818572764;
            var eh_3003122453 = n_3003122335[chckIndx(i_3003122399, 0, (n_3003122335).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003122453)) {
            var j_3003122457 = (eh_3003122453 & (t_3003122332.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122332.data[chckIndx(j_3003122457, 0, (t_3003122332.data).length - 1)].Field0)) break Label6;
                  j_3003122457 = nextTry_1308622883(j_3003122457, (t_3003122332.data).length - 1);
                }
            };
            rawInsert_3003122623(t_3003122332, t_3003122332, "data", n_3003122335[chckIndx(i_3003122399, 0, (n_3003122335).length - 1)].Field1, n_3003122335[chckIndx(i_3003122399, 0, (n_3003122335).length - 1)].Field2, eh_3003122453, j_3003122457);
            }
            
            res_2818572764 = addInt(res_2818572764, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003122792(t_3003122795, key_3003122796, hc_3003122797) {
  var result_3003122798 = 0;

  BeforeRet: {
    if (((t_3003122795.data).length == 0)) {
    result_3003122798 = -1;
    break BeforeRet;
    }
    
    var h_3003122849 = (hc_3003122797 & (t_3003122795.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122795.data[chckIndx(h_3003122849, 0, (t_3003122795.data).length - 1)].Field0)) break Label2;
          if (((t_3003122795.data[chckIndx(h_3003122849, 0, (t_3003122795.data).length - 1)].Field0 == hc_3003122797) && HEX3DHEX3D_2181038320(t_3003122795.data[chckIndx(h_3003122849, 0, (t_3003122795.data).length - 1)].Field1, key_3003122796))) {
          result_3003122798 = h_3003122849;
          break BeforeRet;
          }
          
          h_3003122849 = nextTry_1308622883(h_3003122849, (t_3003122795.data).length - 1);
        }
    };
    result_3003122798 = subInt(-1, h_3003122849);
  };

  return result_3003122798;

}

function HEX5BHEX5DHEX3D_3003121768(t_3003121771, key_3003121772, val_3003121773) {
    if (((t_3003121771.data).length == 0)) {
    var correctSizeHEX60gensym3_3003121823 = slotsNeeded_1308622891(32);
    t_3003121771.counter = 0;
    t_3003121771.data = new Array(chckRange(correctSizeHEX60gensym3_3003121823, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3003121823, 0, 2147483647) ; ++i) { t_3003121771.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3003121828 = [0];
    var index_3003122067 = rawGet_3003121829(t_3003121771, key_3003121772, hc_3003121828, 0);
    if ((0 <= index_3003122067)) {
    t_3003121771.data[chckIndx(index_3003122067, 0, (t_3003121771.data).length - 1)].Field2 = nimCopy(t_3003121771.data[chckIndx(index_3003122067, 0, (t_3003121771.data).length - 1)].Field2, val_3003121773, NTI2952790023);
    }
    else {
      if (((t_3003121771.data).length == 0)) {
      var correctSizeHEX60gensym8_3003122169 = slotsNeeded_1308622891(32);
      t_3003121771.counter = 0;
      t_3003121771.data = new Array(chckRange(correctSizeHEX60gensym8_3003122169, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3003122169, 0, 2147483647) ; ++i) { t_3003121771.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3003122174(t_3003121771)) {
      enlarge_3003122329(t_3003121771);
      index_3003122067 = rawGetKnownHC_3003122792(t_3003121771, key_3003121772, hc_3003121828[0]);
      }
      
      index_3003122067 = subInt(-1, index_3003122067);
      rawInsert_3003122623(t_3003121771, t_3003121771, "data", key_3003121772, val_3003121773, hc_3003121828[0], index_3003122067);
      t_3003121771.counter = addInt(t_3003121771.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3003123230(t_3003123233, key_3003123234) {
  var result_3003123235 = false;

    var hc_3003123236 = [0];
    result_3003123235 = (0 <= rawGet_3003121829(t_3003123233, key_3003123234, hc_3003123236, 0));

  return result_3003123235;

}

function contains_3003123224(t_3003123227, key_3003123228) {
  var result_3003123229 = false;

  BeforeRet: {
    result_3003123229 = hasKey_3003123230(t_3003123227, key_3003123228);
    break BeforeRet;
  };

  return result_3003123229;

}

function HEX5BHEX5D_3003123296(t_3003123299, key_3003123300) {
  var result_3003123301 = null;

    var hcHEX60gensym22_3003123302 = [0];
    var indexHEX60gensym22_3003123309 = rawGet_3003121829(t_3003123299, key_3003123300, hcHEX60gensym22_3003123302, 0);
    if ((0 <= indexHEX60gensym22_3003123309)) {
    result_3003123301 = t_3003123299.data[chckIndx(indexHEX60gensym22_3003123309, 0, (t_3003123299.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2852128536(key_3003123300);
    }
    

  return result_3003123301;

}

function newFunctionExecutionContext_2868973663(ctxHEX60gensym87_2868973664, dataHEX60gensym87_2868973665) {
  var result_2868973666 = null;

  BeforeRet: {
    var itemHEX60gensym87_2868973667 = getItem_2868970322(dataHEX60gensym87_2868973665);
    var keyHEX60gensym87_2868973668 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_2868973667, NTI2885681177), Field1: -1}, NTI2885681180);
    HEX5BHEX5DHEX3D_2885692612(ctxHEX60gensym87_2868973664.depGraph.changed, keyHEX60gensym87_2868973668, ctxHEX60gensym87_2868973664.depGraph.revision);
    HEX5BHEX5DHEX3D_2868970478(ctxHEX60gensym87_2868973664.itemsFunctionExecutionContext, itemHEX60gensym87_2868973667, dataHEX60gensym87_2868973665);
    result_2868973666 = dataHEX60gensym87_2868973665;
    break BeforeRet;
  };

  return result_2868973666;

}

function executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, node_3003123037, variables_3003123040) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3003123041 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3003123035.enableExecutionLogging) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (ctx_3003123035.enableExecutionLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2852128727(node_3003123037));
    }
    
    try {
    Label3: {
      var expr_3003123052 = node_3003123037;
      var pos_3003123053 = 0;
      var _ = pos_3003123053;
      if ((expr_3003123052.kind == 0)) {
      result_3003123041 = nimCopy(result_3003123041, voidValue_2952790732(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 7)) {
      var lastValue_3003123064 = errorValue_2952790703();
      Label4: {
        var child_3003123068 = null;
        var i_2818572769 = 0;
        var L_2818572770 = (node_3003123037.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2818572769 < L_2818572770)) break Label6;
              child_3003123068 = node_3003123037.children[chckIndx(i_2818572769, 0, (node_3003123037.children).length - 1)];
              lastValue_3003123064 = nimCopy(lastValue_3003123064, executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, child_3003123068, variables_3003123040), NTI2952790023);
              i_2818572769 = addInt(i_2818572769, 1);
              if (!(((node_3003123037.children).length == L_2818572770))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3003123041 = nimCopy(result_3003123041, lastValue_3003123064, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 3)) {
      result_3003123041 = nimCopy(result_3003123041, {kind: 2, stringValue: nimCopy(null, node_3003123037.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3003123037.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3003123077 = Temporary7;
      result_3003123041 = nimCopy(result_3003123041, {kind: 3, intValue: value_3003123077, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 9)) {
      if ((len_2852126808(node_3003123037) < 2)) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var index_3003123082 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3003123082, 1) < len_2852126808(node_3003123037))) break Label10;
            try {
            var condition_3003123087 = HEX5BHEX5D_2852126804(node_3003123037, index_3003123082);
            var trueCase_3003123088 = HEX5BHEX5D_2852126804(node_3003123037, addInt(index_3003123082, 1));
            var conditionValue_3003123089 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, condition_3003123087, variables_3003123040);
            if ((conditionValue_3003123089.kind == 0)) {
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003123089.kind == 3))) {
            var fmtRes_3003123102 = [mnewString(0)];
            fmtRes_3003123102[0].push.apply(fmtRes_3003123102[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3003123103(fmtRes_3003123102, 0, conditionValue_3003123089, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123102[0], NTI33554449)]);
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3003123089;
              if (ConstSet138[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2952790022)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3003123108 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, trueCase_3003123088, variables_3003123040);
            result_3003123041 = nimCopy(result_3003123041, trueCaseValue_3003123108, NTI2952790023);
            break BeforeRet;
            }
            
            } finally {
            index_3003123082 = addInt(index_3003123082, 2);
            }
          }
      };
      if (!((modInt(len_2852126808(node_3003123037), 2) == 0))) {
      var falseCaseValue_3003123109 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, last_2852126978(node_3003123037), variables_3003123040);
      result_3003123041 = nimCopy(result_3003123041, falseCaseValue_3003123109, NTI2952790023);
      break BeforeRet;
      }
      
      result_3003123041 = nimCopy(result_3003123041, voidValue_2952790732(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 10)) {
      if ((len_2852126808(node_3003123037) < 2)) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var condition_3003123114 = HEX5BHEX5D_2852126804(node_3003123037, 0);
      var body_3003123115 = HEX5BHEX5D_2852126804(node_3003123037, 1);
      var index_3003123116 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3003123137 = get_1191185108(fec_3003123036.maxLoopIterations, 1000);
            if ((maxLoopIterations_3003123137 < index_3003123116)) {
            var fmtRes_3003123142 = [mnewString(0)];
            fmtRes_3003123142[0].push.apply(fmtRes_3003123142[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2332033544(fmtRes_3003123142, 0, maxLoopIterations_3003123137, []);
            fmtRes_3003123142[0].push.apply(fmtRes_3003123142[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_2952790851(fmtRes_3003123142, 0, node_3003123037, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123142[0], NTI33554449)]);
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            var conditionValue_3003123153 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, condition_3003123114, variables_3003123040);
            if ((conditionValue_3003123153.kind == 0)) {
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003123153.kind == 3))) {
            var fmtRes_3003123166 = [mnewString(0)];
            fmtRes_3003123166[0].push.apply(fmtRes_3003123166[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3003123103(fmtRes_3003123166, 0, conditionValue_3003123153, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123166[0], NTI33554449)]);
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3003123153;
              if (ConstSet139[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI2952790022)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3003123172 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, body_3003123115, variables_3003123040);
            if ((bodyValue_3003123172.kind == 0)) {
            result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            } finally {
            index_3003123116 = addInt(index_3003123116, 1);
            }
          }
      };
      result_3003123041 = nimCopy(result_3003123041, voidValue_2952790732(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 1)) {
      var id_3003123181 = nimCopy(null, node_3003123037.reff, NTI2181038083);
      if (contains_3003123224(variables_3003123040, id_3003123181)) {
      result_3003123041 = nimCopy(result_3003123041, HEX5BHEX5D_3003123296(variables_3003123040, id_3003123181), NTI2952790023);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3003123377 = computeSymbol_2868983552(ctx_3003123035, node_3003123037, true);
        if (!isSome_2952791605(oHEX60gensym44_3003123377)) Temporary17 = false; else {          var sym_3003123400 = get_2952791625(oHEX60gensym44_3003123377);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3003123401 = computeSymbolValue_2868993627(ctx_3003123035, sym_3003123400, true);
      HEX5BHEX5DHEX3D_3003121768(variables_3003123040, id_3003123181, value_3003123401);
      result_3003123041 = nimCopy(result_3003123041, value_3003123401, NTI2952790023);
      break BeforeRet;
      }
      
      var fmtRes_3003123452 = [mnewString(0)];
      fmtRes_3003123452[0].push.apply(fmtRes_3003123452[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_2952790851(fmtRes_3003123452, 0, node_3003123037, []);
      fmtRes_3003123452[0].push.apply(fmtRes_3003123452[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123452[0], NTI33554449)]);
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 8)) {
      var function_3003123462 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, HEX5BHEX5D_2852126804(node_3003123037, 0), variables_3003123040);
      switch (function_3003123462.kind) {
      case 0:
        result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        break;
      case 4:
        var args_3003123467 = [];
        Label18: {
          var arg_3003123504 = null;
          var colontmp__2818572775 = [];
          colontmp__2818572775 = HEX5BHEX5D_3003123477(node_3003123037.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2818572776 = 0;
          var L_2818572777 = (colontmp__2818572775).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2818572776 < L_2818572777)) break Label20;
                arg_3003123504 = colontmp__2818572775[chckIndx(i_2818572776, 0, (colontmp__2818572775).length - 1)];
                var value_3003123505 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, arg_3003123504, variables_3003123040);
                if ((value_3003123505.kind == 0)) {
                result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3003123505, NTI2952790023);
                args_3003123467.push(Temporary21);;
                i_2818572776 = addInt(i_2818572776, 1);
                if (!(((colontmp__2818572775).length == L_2818572777))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3003123462;
        if (ConstSet140[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI2952790022)); }
        result_3003123041 = nimCopy(result_3003123041, Temporary22.impl(args_3003123467), NTI2952790023);
        break BeforeRet;
        break;
      case 5:
        var args_3003123518 = [];
        Label23: {
          var arg_3003123537 = null;
          var colontmp__2818572780 = [];
          colontmp__2818572780 = HEX5BHEX5D_3003123477(node_3003123037.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2818572781 = 0;
          var L_2818572782 = (colontmp__2818572780).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2818572781 < L_2818572782)) break Label25;
                arg_3003123537 = colontmp__2818572780[chckIndx(i_2818572781, 0, (colontmp__2818572780).length - 1)];
                var value_3003123538 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, arg_3003123537, variables_3003123040);
                if ((value_3003123538.kind == 0)) {
                result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3003123538, NTI2952790023);
                args_3003123518.push(Temporary26);;
                i_2818572781 = addInt(i_2818572781, 1);
                if (!(((colontmp__2818572780).length == L_2818572782))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3003123462;
        if (ConstSet141[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2952790022)); }
        var fec_3003123547 = newFunctionExecutionContext_2868973663(ctx_3003123035, {node: Temporary27.node, arguments: nimCopy(null, args_3003123518, NTI3003122674), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3003123041 = nimCopy(result_3003123041, computeFunctionExecution_2868996731(ctx_3003123035, fec_3003123547), NTI2952790023);
        break BeforeRet;
        break;
      default: 
        result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3003123052.kind == 5)) {
      if ((len_2852126808(node_3003123037) < 2)) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var valueNode_3003123552 = HEX5BHEX5D_2852126804(node_3003123037, 1);
      var value_3003123553 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, valueNode_3003123552, variables_3003123040);
      HEX5BHEX5DHEX3D_3003121768(variables_3003123040, node_3003123037.id, value_3003123553);
      result_3003123041 = nimCopy(result_3003123041, value_3003123553, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 6)) {
      if ((len_2852126808(node_3003123037) < 2)) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var valueNode_3003123604 = HEX5BHEX5D_2852126804(node_3003123037, 1);
      var value_3003123605 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, valueNode_3003123604, variables_3003123040);
      HEX5BHEX5DHEX3D_3003121768(variables_3003123040, node_3003123037.id, value_3003123605);
      result_3003123041 = nimCopy(result_3003123041, value_3003123605, NTI2952790023);
      break BeforeRet;
      }
      else {
      if ((expr_3003123052.kind == 4)) {
      var id_3003123656 = nimCopy(null, node_3003123037.id, NTI2181038083);
      if (contains_3003123224(variables_3003123040, id_3003123656)) {
      result_3003123041 = nimCopy(result_3003123041, HEX5BHEX5D_3003123296(variables_3003123040, id_3003123656), NTI2952790023);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3003123052.kind == 13)) {
      if ((len_2852126808(node_3003123037) < 2)) {
      result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
      break BeforeRet;
      }
      
      var targetNode_3003123766 = HEX5BHEX5D_2852126804(node_3003123037, 0);
      var valueNode_3003123767 = HEX5BHEX5D_2852126804(node_3003123037, 1);
        var oHEX60gensym55_3003123770 = computeSymbol_2868983552(ctx_3003123035, targetNode_3003123766, true);
        if (!isSome_2952791605(oHEX60gensym55_3003123770)) Temporary28 = false; else {          var sym_3003123793 = get_2952791625(oHEX60gensym55_3003123770);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3003123794 = executeNodeRec_3003123034(ctx_3003123035, fec_3003123036, valueNode_3003123767, variables_3003123040);
      HEX5BHEX5DHEX3D_3003121768(variables_3003123040, sym_3003123793.id, value_3003123794);
      result_3003123041 = nimCopy(result_3003123041, voidValue_2952790732(), NTI2952790023);
      break BeforeRet;
      }
      else {
        var fmtRes_3003123845 = [mnewString(0)];
        fmtRes_3003123845[0].push.apply(fmtRes_3003123845[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_2952790851(fmtRes_3003123845, 0, node_3003123037, []);
        fmtRes_3003123845[0].push.apply(fmtRes_3003123845[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_2952790851(fmtRes_3003123845, 0, targetNode_3003123766, []);
        fmtRes_3003123845[0].push.apply(fmtRes_3003123845[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123845[0], NTI33554449)]);
        result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3003123860 = [mnewString(0)];
        fmtRes_3003123860[0].push.apply(fmtRes_3003123860[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_2952790851(fmtRes_3003123860, 0, node_3003123037, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123860[0], NTI33554449)]);
        result_3003123041 = nimCopy(result_3003123041, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3003123035.enableExecutionLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [45,62,32], HEX24_2952790759(result_3003123041));
    }
    
    }
    } finally {
    if (ctx_3003123035.enableExecutionLogging) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_3003123041;

}

function computeFunctionExecutionImpl2_3003123895(ctx_3003123896, fec_3003123897) {
      var Temporary4;
        var Temporary5;

  var result_3003123898 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3003123899 = HEX5BHEX5D_2852126804(fec_3003123897.node, 2);
    var variables_3003123911 = [initTable_3003123900(32)];
    var params_3003123912 = HEX5BHEX5D_2852126804(fec_3003123897.node, 0);
    Label1: {
      var i_3003123954 = 0;
      var arg_3003123955 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2818572757 = 0;
      var L_2818572758 = (fec_3003123897.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572757 < L_2818572758)) break Label3;
            i_3003123954 = i_2818572757;
            arg_3003123955 = nimCopy(arg_3003123955, fec_3003123897.arguments[chckIndx(i_2818572757, 0, (fec_3003123897.arguments).length - 1)], NTI2952790023);
            if ((len_2852126808(params_3003123912) <= i_3003123954)) {
            var fmtRes_3003123960 = [mnewString(0)];
            fmtRes_3003123960[0].push.apply(fmtRes_3003123960[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2332033544(fmtRes_3003123960, 0, len_2852126808(params_3003123912), []);
            fmtRes_3003123960[0].push.apply(fmtRes_3003123960[0], [44,32,103,111,116,32]);;
            formatValue_2332033544(fmtRes_3003123960, 0, (fec_3003123897.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003123960[0], NTI33554449)]);
            result_3003123898 = nimCopy(result_3003123898, errorValue_2952790703(), NTI2952790023);
            break BeforeRet;
            }
            
            var param_3003123974 = HEX5BHEX5D_2852126804(params_3003123912, i_3003123954);
            HEX5BHEX5DHEX3D_3003121768(variables_3003123911[0], param_3003123974.id, arg_3003123955);
            i_2818572757 = addInt(i_2818572757, 1);
            if (!(((fec_3003123897.arguments).length == L_2818572758))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3003124021 = executeNodeRec_3003123034(ctx_3003123896, fec_3003123897, body_3003123899, variables_3003123911[0]);
    if ((bodyResult_3003124021.kind == 0)) {
    result_3003123898 = nimCopy(result_3003123898, errorValue_2952790703(), NTI2952790023);
    break BeforeRet;
    }
    
    var functionType_3003124026 = computeType_2868976946(ctx_3003123896, fec_3003123897.node, true);
      if (!(functionType_3003124026.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3003124026;
        if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790019)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3003123898 = nimCopy(result_3003123898, voidValue_2952790732(), NTI2952790023);
    break BeforeRet;
    }
    
    result_3003123898 = nimCopy(result_3003123898, bodyResult_3003124021, NTI2952790023);
    break BeforeRet;
  };

  return result_3003123898;

}

function computeFunctionExecutionImpl_2868904776(ctx_2868904777, fec_2868904778) {
  var result_2869000488 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym530_2869000490 = (ctx_2868904777.enableLogging || ctx_2868904777.enableQueryLogging);
    if (logQueryHEX60gensym530_2869000490) {
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym530_2869000490) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_2952790843(fec_2868904778) || []));
    }
    
    try {
    result_2869000488 = nimCopy(result_2869000488, computeFunctionExecutionImpl2_3003123895(ctx_2868904777, fec_2868904778), NTI2952790023);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym530_2869000490 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2952790759(result_2869000488) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym530_2869000490) {
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], 1);
    }
    
    }
  };

  return result_2869000488;

}

function getOrDefault_2868939118(t_2868939121, key_2868939122, default_2868939123) {
    var Temporary1;

  var result_2868939124 = null;

    var hcHEX60gensym282_2868939127 = [0];
    var indexHEX60gensym282_2868939482 = rawGet_2868939128(t_2868939121, key_2868939122, hcHEX60gensym282_2868939127, 0);
    if ((0 <= indexHEX60gensym282_2868939482)) {
    Temporary1 = t_2868939121.data[chckIndx(indexHEX60gensym282_2868939482, 0, (t_2868939121.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868939123;
    }
    
    result_2868939124 = Temporary1;

  return result_2868939124;

}

function newDoublyLinkedNode_2868939607(value_2868939609) {
  var result_2868939610 = null;

    result_2868939610 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2868939610.value = nimCopy(result_2868939610.value, value_2868939609, NTI2868904727);

  return result_2868939610;

}

function mustRehash_2868939966(t_2868939968) {
  var result_2868939969 = false;

    if (!((t_2868939968.counter < (t_2868939968.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868939969 = ((mulInt((t_2868939968.data).length, 2) < mulInt(t_2868939968.counter, 3)) || (subInt((t_2868939968.data).length, t_2868939968.counter) < 4));

  return result_2868939969;

}

function rawInsert_2868940659(t_2868940663, data_2868940664, data_2868940664_Idx, key_2868940665, val_2868940666, hc_2868940667, h_2868940668) {
    data_2868940664[data_2868940664_Idx][chckIndx(h_2868940668, 0, (data_2868940664[data_2868940664_Idx]).length - 1)].Field1 = key_2868940665;
    data_2868940664[data_2868940664_Idx][chckIndx(h_2868940668, 0, (data_2868940664[data_2868940664_Idx]).length - 1)].Field2 = val_2868940666;
    data_2868940664[data_2868940664_Idx][chckIndx(h_2868940668, 0, (data_2868940664[data_2868940664_Idx]).length - 1)].Field0 = hc_2868940667;

  
}

function enlarge_2868940223(t_2868940226) {
    var n_2868940229 = [];
    n_2868940229 = new Array(chckRange(mulInt((t_2868940226.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868940226.data).length, 2), 0, 2147483647) ; ++i) { n_2868940229[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868940226.data; t_2868940226.data = n_2868940229; n_2868940229 = Temporary1;    Label2: {
      var i_2868940327 = 0;
      var colontmp__2818572786 = 0;
      colontmp__2818572786 = (n_2868940229).length - 1;
      var res_2818572787 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572787 <= colontmp__2818572786)) break Label4;
            i_2868940327 = res_2818572787;
            var eh_2868940408 = n_2868940229[chckIndx(i_2868940327, 0, (n_2868940229).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868940408)) {
            var j_2868940412 = (eh_2868940408 & (t_2868940226.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868940226.data[chckIndx(j_2868940412, 0, (t_2868940226.data).length - 1)].Field0)) break Label6;
                  j_2868940412 = nextTry_1308622883(j_2868940412, (t_2868940226.data).length - 1);
                }
            };
            rawInsert_2868940659(t_2868940226, t_2868940226, "data", n_2868940229[chckIndx(i_2868940327, 0, (n_2868940229).length - 1)].Field1, n_2868940229[chckIndx(i_2868940327, 0, (n_2868940229).length - 1)].Field2, eh_2868940408, j_2868940412);
            }
            
            res_2818572787 = addInt(res_2818572787, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868940909(t_2868940912, key_2868940913, hc_2868940914) {
  var result_2868940915 = 0;

  BeforeRet: {
    if (((t_2868940912.data).length == 0)) {
    result_2868940915 = -1;
    break BeforeRet;
    }
    
    var h_2868941000 = (hc_2868940914 & (t_2868940912.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868940912.data[chckIndx(h_2868941000, 0, (t_2868940912.data).length - 1)].Field0)) break Label2;
          if (((t_2868940912.data[chckIndx(h_2868941000, 0, (t_2868940912.data).length - 1)].Field0 == hc_2868940914) && HEX3DHEX3D_2952791037(t_2868940912.data[chckIndx(h_2868941000, 0, (t_2868940912.data).length - 1)].Field1, key_2868940913))) {
          result_2868940915 = h_2868941000;
          break BeforeRet;
          }
          
          h_2868941000 = nextTry_1308622883(h_2868941000, (t_2868940912.data).length - 1);
        }
    };
    result_2868940915 = subInt(-1, h_2868941000);
  };

  return result_2868940915;

}

function HEX5BHEX5DHEX3D_2868939698(t_2868939701, key_2868939702, val_2868939703) {
    if (((t_2868939701.data).length == 0)) {
    var correctSizeHEX60gensym287_2868939786 = slotsNeeded_1308622891(32);
    t_2868939701.counter = 0;
    t_2868939701.data = new Array(chckRange(correctSizeHEX60gensym287_2868939786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym287_2868939786, 0, 2147483647) ; ++i) { t_2868939701.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868939791 = [0];
    var index_2868939798 = rawGet_2868939128(t_2868939701, key_2868939702, hc_2868939791, 0);
    if ((0 <= index_2868939798)) {
    t_2868939701.data[chckIndx(index_2868939798, 0, (t_2868939701.data).length - 1)].Field2 = val_2868939703;
    }
    else {
      if (((t_2868939701.data).length == 0)) {
      var correctSizeHEX60gensym290_2868939961 = slotsNeeded_1308622891(32);
      t_2868939701.counter = 0;
      t_2868939701.data = new Array(chckRange(correctSizeHEX60gensym290_2868939961, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_2868939961, 0, 2147483647) ; ++i) { t_2868939701.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868939966(t_2868939701)) {
      enlarge_2868940223(t_2868939701);
      index_2868939798 = rawGetKnownHC_2868940909(t_2868939701, key_2868939702, hc_2868939791[0]);
      }
      
      index_2868939798 = subInt(-1, index_2868939798);
      rawInsert_2868940659(t_2868939701, t_2868939701, "data", key_2868939702, val_2868939703, hc_2868939791[0], index_2868939798);
      t_2868939701.counter = addInt(t_2868939701.counter, 1);
    }
    

  
}

function rawGet_2868941536(t_2868941539, key_2868941540, hc_2868941541, hc_2868941541_Idx) {
  var result_2868941542 = 0;

  BeforeRet: {
    hc_2868941541[hc_2868941541_Idx] = hash_2952790993(key_2868941540);
    if ((hc_2868941541[hc_2868941541_Idx] == 0)) {
    hc_2868941541[hc_2868941541_Idx] = 314159265;
    }
    
    if (((t_2868941539.data).length == 0)) {
    result_2868941542 = -1;
    break BeforeRet;
    }
    
    var h_2868941628 = (hc_2868941541[hc_2868941541_Idx] & (t_2868941539.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868941539.data[chckIndx(h_2868941628, 0, (t_2868941539.data).length - 1)].Field0)) break Label2;
          if (((t_2868941539.data[chckIndx(h_2868941628, 0, (t_2868941539.data).length - 1)].Field0 == hc_2868941541[hc_2868941541_Idx]) && HEX3DHEX3D_2952791037(t_2868941539.data[chckIndx(h_2868941628, 0, (t_2868941539.data).length - 1)].Field1, key_2868941540))) {
          result_2868941542 = h_2868941628;
          break BeforeRet;
          }
          
          h_2868941628 = nextTry_1828716586(h_2868941628, (t_2868941539.data).length - 1);
        }
    };
    result_2868941542 = subInt(-1, h_2868941628);
  };

  return result_2868941542;

}

function exclImpl_2868941530(s_2868941532, key_2868941533) {
          var Temporary5;

  var result_2868941534 = false;

  BeforeRet: {
    var hc_2868941535 = [0];
    var i_2868941890 = rawGet_2868941536(s_2868941532, key_2868941533, hc_2868941535, 0);
    var msk_2868941894 = (s_2868941532.data).length - 1;
    result_2868941534 = true;
    if ((0 <= i_2868941890)) {
    result_2868941534 = false;
    s_2868941532.counter = subInt(s_2868941532.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2868941900 = i_2868941890;
          var r_2868941901 = j_2868941900;
          s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)].Field0 = 0;
          s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2868941890 = (addInt(i_2868941890, 1) & msk_2868941894);
                if (isEmpty_1828716580(s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2868941901 = (s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)].Field0 & msk_2868941894);
                if (!(((((r_2868941901 <= i_2868941890) && (j_2868941900 < r_2868941901)) || ((j_2868941900 < r_2868941901) && (i_2868941890 < j_2868941900))) || ((i_2868941890 < j_2868941900) && (r_2868941901 <= i_2868941890))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)];
          s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)] = genericReset(s_2868941532.data[chckIndx(i_2868941890, 0, (s_2868941532.data).length - 1)], NTI2868904783);
          s_2868941532.data[chckIndx(j_2868941900, 0, (s_2868941532.data).length - 1)] = nimCopy(s_2868941532.data[chckIndx(j_2868941900, 0, (s_2868941532.data).length - 1)], Temporary5, NTI2868904783);
        }
    };
    }
    
  };

  return result_2868941534;

}

function excl_2868941515(s_2868941517, key_2868941518) {
    var _ = exclImpl_2868941530(s_2868941517, key_2868941518);

  
}

function len_2868942654(t_2868942657) {
  var result_2868942658 = 0;

    result_2868942658 = t_2868942657.counter;

  return result_2868942658;

}

function len_2868942571(cache_2868942574) {
  var result_2868942575 = 0;

    result_2868942575 = len_2868942654(cache_2868942574.table);

  return result_2868942575;

}

function mustRehash_2868942795(t_2868942797) {
  var result_2868942798 = false;

    if (!((t_2868942797.counter < (t_2868942797.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868942798 = ((mulInt((t_2868942797.data).length, 2) < mulInt(t_2868942797.counter, 3)) || (subInt((t_2868942797.data).length, t_2868942797.counter) < 4));

  return result_2868942798;

}

function rawGetKnownHC_2868943401(t_2868943404, key_2868943405, hc_2868943406) {
  var result_2868943407 = 0;

  BeforeRet: {
    if (((t_2868943404.data).length == 0)) {
    result_2868943407 = -1;
    break BeforeRet;
    }
    
    var h_2868943492 = (hc_2868943406 & (t_2868943404.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868943404.data[chckIndx(h_2868943492, 0, (t_2868943404.data).length - 1)].Field0)) break Label2;
          if (((t_2868943404.data[chckIndx(h_2868943492, 0, (t_2868943404.data).length - 1)].Field0 == hc_2868943406) && HEX3DHEX3D_2952791037(t_2868943404.data[chckIndx(h_2868943492, 0, (t_2868943404.data).length - 1)].Field1, key_2868943405))) {
          result_2868943407 = h_2868943492;
          break BeforeRet;
          }
          
          h_2868943492 = nextTry_1828716586(h_2868943492, (t_2868943404.data).length - 1);
        }
    };
    result_2868943407 = subInt(-1, h_2868943492);
  };

  return result_2868943407;

}

function rawInsert_2868943901(s_2868943903, data_2868943904, data_2868943904_Idx, key_2868943905, hc_2868943906, h_2868943907) {
    if (((data_2868943904[data_2868943904_Idx]).length == 0)) {
    var correctSizeHEX60gensym309_2868943990 = slotsNeeded_1828716594(64);
    s_2868943903.counter = 0;
    s_2868943903.data = new Array(chckRange(correctSizeHEX60gensym309_2868943990, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym309_2868943990, 0, 2147483647) ; ++i) { s_2868943903.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2868943904[data_2868943904_Idx][chckIndx(h_2868943907, 0, (data_2868943904[data_2868943904_Idx]).length - 1)].Field1 = key_2868943905;
    data_2868943904[data_2868943904_Idx][chckIndx(h_2868943907, 0, (data_2868943904[data_2868943904_Idx]).length - 1)].Field0 = hc_2868943906;

  
}

function enlarge_2868943058(s_2868943060) {
    var n_2868943062 = [];
    n_2868943062 = new Array(chckRange(mulInt((s_2868943060.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2868943060.data).length, 2), 0, 2147483647) ; ++i) { n_2868943062[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2868943060.data; s_2868943060.data = n_2868943062; n_2868943062 = Temporary1;    Label2: {
      var i_2868943160 = 0;
      var colontmp__2818572795 = 0;
      colontmp__2818572795 = (n_2868943062).length - 1;
      var res_2818572796 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572796 <= colontmp__2818572795)) break Label4;
            i_2868943160 = res_2818572796;
            if (isFilled_1828716583(n_2868943062[chckIndx(i_2868943160, 0, (n_2868943062).length - 1)].Field0)) {
            var j_2868943736 = subInt(-1, rawGetKnownHC_2868943401(s_2868943060, n_2868943062[chckIndx(i_2868943160, 0, (n_2868943062).length - 1)].Field1, n_2868943062[chckIndx(i_2868943160, 0, (n_2868943062).length - 1)].Field0));
            rawInsert_2868943901(s_2868943060, s_2868943060, "data", n_2868943062[chckIndx(i_2868943160, 0, (n_2868943062).length - 1)].Field1, n_2868943062[chckIndx(i_2868943160, 0, (n_2868943062).length - 1)].Field0, j_2868943736);
            }
            
            res_2818572796 = addInt(res_2818572796, 1);
          }
      };
    };

  
}

function incl_2868942679(s_2868942681, key_2868942682) {
    if (((s_2868942681.data).length == 0)) {
    var correctSizeHEX60gensym302_2868942765 = slotsNeeded_1828716594(64);
    s_2868942681.counter = 0;
    s_2868942681.data = new Array(chckRange(correctSizeHEX60gensym302_2868942765, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_2868942765, 0, 2147483647) ; ++i) { s_2868942681.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2868942780 = [0];
    var index_2868942794 = rawGet_2868941536(s_2868942681, key_2868942682, hc_2868942780, 0);
    if ((index_2868942794 < 0)) {
    if (mustRehash_2868942795(s_2868942681)) {
    enlarge_2868943058(s_2868942681);
    index_2868942794 = rawGetKnownHC_2868943401(s_2868942681, key_2868942682, hc_2868942780[0]);
    }
    
    rawInsert_2868943901(s_2868942681, s_2868942681, "data", key_2868942682, hc_2868942780[0], subInt(-1, index_2868942794));
    s_2868942681.counter = addInt(s_2868942681.counter, 1);
    }
    

  
}

function del_2868944257(t_2868944260, key_2868944261) {
    var hc_2868944262 = [0];
    var i_2868944269 = rawGet_2868939128(t_2868944260, key_2868944261, hc_2868944262, 0);
    var mskHEX60gensym36_2868944273 = (t_2868944260.data).length - 1;
    if ((0 <= i_2868944269)) {
    t_2868944260.counter = subInt(t_2868944260.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868944280 = i_2868944269;
            var rHEX60gensym36_2868944281 = jHEX60gensym36_2868944280;
            t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)].Field0 = 0;
            t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)].Field1 = null;
            t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868944269 = (addInt(i_2868944269, 1) & mskHEX60gensym36_2868944273);
                  if (isEmpty_1308622877(t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868944281 = (t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)].Field0 & mskHEX60gensym36_2868944273);
                  if (!(((((rHEX60gensym36_2868944281 <= i_2868944269) && (jHEX60gensym36_2868944280 < rHEX60gensym36_2868944281)) || ((jHEX60gensym36_2868944280 < rHEX60gensym36_2868944281) && (i_2868944269 < jHEX60gensym36_2868944280))) || ((i_2868944269 < jHEX60gensym36_2868944280) && (rHEX60gensym36_2868944281 <= i_2868944269))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868944260.data[chckIndx(jHEX60gensym36_2868944280, 0, (t_2868944260.data).length - 1)] = nimCopy(t_2868944260.data[chckIndx(jHEX60gensym36_2868944280, 0, (t_2868944260.data).length - 1)], t_2868944260.data[chckIndx(i_2868944269, 0, (t_2868944260.data).length - 1)], NTI2868904763);
          }
      };
    };
    }
    

  
}

function resize_2868942489(cache_2868942492) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868942492.capacity < len_2868942571(cache_2868942492))) break Label2;
          var t_2868942659 = cache_2868942492.list.tail;
          if (cache_2868942492.recordRemovedKeys) {
          incl_2868942679(cache_2868942492.removedKeys, t_2868942659.value.key);
          }
          
          del_2868944257(cache_2868942492.table, t_2868942659.value.key);
          remove_2868945016(cache_2868942492.list, t_2868942659);
        }
    };

  
}

function addNewNode_2868939599(cache_2868939602, key_2868939603, val_2868939604) {
    var node_2868939634 = newDoublyLinkedNode_2868939607({key: key_2868939603, val: nimCopy(null, val_2868939604, NTI2952790023)});
    HEX5BHEX5DHEX3D_2868939698(cache_2868939602.table, key_2868939603, node_2868939634);
    prepend_2868941305(cache_2868939602.list, node_2868939634);
    if (cache_2868939602.recordRemovedKeys) {
    excl_2868941515(cache_2868939602.removedKeys, key_2868939603);
    }
    
    resize_2868942489(cache_2868939602);

  
}

function HEX5BHEX5DHEX3D_2868939023(cache_2868939026, key_2868939027, val_2868939028) {
    var node_2868939572 = getOrDefault_2868939118(cache_2868939026.table, key_2868939027, null);
    if ((node_2868939572 == null)) {
    addNewNode_2868939599(cache_2868939026, key_2868939027, val_2868939028);
    }
    else {
      node_2868939572.value.val = nimCopy(node_2868939572.value.val, val_2868939028, NTI2952790023);
      remove_2868945016(cache_2868939026.list, node_2868939572);
      prepend_2868941305(cache_2868939026.list, node_2868939572);
    }
    

  
}

function initDoublyLinkedList_2868945463() {
  var result_2868945465 = ({head: null, tail: null});

  return result_2868945465;

}

function initTable_2868945469(initialSize_2868945472) {
  var result_2868945473 = ({data: [], counter: 0});

    var correctSizeHEX60gensym310_2868945475 = slotsNeeded_1308622891(chckRange(initialSize_2868945472, 0, 2147483647));
    result_2868945473.counter = 0;
    result_2868945473.data = new Array(chckRange(correctSizeHEX60gensym310_2868945475, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym310_2868945475, 0, 2147483647) ; ++i) { result_2868945473.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868945473;

}

function newLruCache_2868945453(capacity_2868945456, recordRemovedKeys_2868945457) {
  var result_2868945458 = null;

    result_2868945458 = {capacity: capacity_2868945456, list: initDoublyLinkedList_2868945463(), table: initTable_2868945469(correctSize_2902458389(capacity_2868945456)), recordRemovedKeys: recordRemovedKeys_2868945457, removedKeys: ({data: [], counter: 0})};

  return result_2868945458;

}

function newCache_2868945448(capacity_2868945451) {
  var result_2868945452 = null;

    result_2868945452 = newLruCache_2868945453(capacity_2868945451, false);

  return result_2868945452;

}

function init_2868945443(result_2868945446, result_2868945446_Idx, capacity_2868945447) {
    result_2868945446[result_2868945446_Idx] = newCache_2868945448(capacity_2868945447);

  
}

function rawGet_2868945693(t_2868945696, key_2868945697, hc_2868945698, hc_2868945698_Idx) {
  var result_2868945699 = 0;

  BeforeRet: {
    hc_2868945698[hc_2868945698_Idx] = hash_2868904984(key_2868945697);
    if ((hc_2868945698[hc_2868945698_Idx] == 0)) {
    hc_2868945698[hc_2868945698_Idx] = 314159265;
    }
    
    if (((t_2868945696.data).length == 0)) {
    result_2868945699 = -1;
    break BeforeRet;
    }
    
    var h_2868945788 = (hc_2868945698[hc_2868945698_Idx] & (t_2868945696.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868945696.data[chckIndx(h_2868945788, 0, (t_2868945696.data).length - 1)].Field0)) break Label2;
          if (((t_2868945696.data[chckIndx(h_2868945788, 0, (t_2868945696.data).length - 1)].Field0 == hc_2868945698[hc_2868945698_Idx]) && HEX3DHEX3D_2868905321(t_2868945696.data[chckIndx(h_2868945788, 0, (t_2868945696.data).length - 1)].Field1, key_2868945697))) {
          result_2868945699 = h_2868945788;
          break BeforeRet;
          }
          
          h_2868945788 = nextTry_1308622883(h_2868945788, (t_2868945696.data).length - 1);
        }
    };
    result_2868945699 = subInt(-1, h_2868945788);
  };

  return result_2868945699;

}

function hasKey_2868945686(t_2868945689, key_2868945690) {
  var result_2868945691 = false;

    var hc_2868945692 = [0];
    result_2868945691 = (0 <= rawGet_2868945693(t_2868945689, key_2868945690, hc_2868945692, 0));

  return result_2868945691;

}

function contains_2868945680(t_2868945683, key_2868945684) {
  var result_2868945685 = false;

  BeforeRet: {
    result_2868945685 = hasKey_2868945686(t_2868945683, key_2868945684);
    break BeforeRet;
  };

  return result_2868945685;

}

function contains_2868945586(cache_2868945589, key_2868945590) {
  var result_2868945591 = false;

    result_2868945591 = contains_2868945680(cache_2868945589.table, key_2868945590);

  return result_2868945591;

}

function HEX5BHEX5D_2868946225(t_2868946228, key_2868946229) {
  var result_2868946230 = null;
  var result_2868946230_Idx = 0;

    var hcHEX60gensym22_2868946231 = [0];
    var indexHEX60gensym22_2868946238 = rawGet_2868945693(t_2868946228, key_2868946229, hcHEX60gensym22_2868946231, 0);
    if ((0 <= indexHEX60gensym22_2868946238)) {
    result_2868946230 = t_2868946228.data[chckIndx(indexHEX60gensym22_2868946238, 0, (t_2868946228.data).length - 1)]; result_2868946230_Idx = "Field2";
    }
    else {
    raiseKeyError_2868905617(key_2868946229);
    }
    

  return [result_2868946230, result_2868946230_Idx];

}

function remove_2868946345(L_2868946347, n_2868946348) {
    if ((n_2868946348 == L_2868946347.tail)) {
    L_2868946347.tail = n_2868946348.prev;
    }
    
    if ((n_2868946348 == L_2868946347.head)) {
    L_2868946347.head = n_2868946348.next;
    }
    
    if (!((n_2868946348.next == null))) {
    n_2868946348.next.prev = n_2868946348.prev;
    }
    
    if (!((n_2868946348.prev == null))) {
    n_2868946348.prev.next = n_2868946348.next;
    }
    

  
}

function prepend_2868946649(L_2868946651, n_2868946652) {
    n_2868946652.prev = null;
    n_2868946652.next = L_2868946651.head;
    if (!((L_2868946651.head == null))) {
    if (!((L_2868946651.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868946651.head.prev = n_2868946652;
    }
    
    L_2868946651.head = n_2868946652;
    if ((L_2868946651.tail == null)) {
    L_2868946651.tail = n_2868946652;
    }
    

  
}

function HEX5BHEX5D_2868946139(cache_2868946142, key_2868946143) {
    var Temporary1;

  var result_2868946144 = null;

    var node_2868946331 = (Temporary1 = HEX5BHEX5D_2868946225(cache_2868946142.table, key_2868946143), Temporary1)[0][Temporary1[1]];
    result_2868946144 = node_2868946331.value.val;
    remove_2868946345(cache_2868946142.list, node_2868946331);
    prepend_2868946649(cache_2868946142.list, node_2868946331);

  return result_2868946144;

}

function dependOnCurrentRevision_2868957460(ctxHEX60gensym73_2868957461) {
    if ((0 < (ctxHEX60gensym73_2868957461.dependencyStack).length)) {
    ctxHEX60gensym73_2868957461.dependencyStack[chckIndx((ctxHEX60gensym73_2868957461.dependencyStack).length - 1, 0, (ctxHEX60gensym73_2868957461.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_2885681184, NTI2181038083), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_2986347918(initialSize_2986347921) {
  var result_2986347922 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_2986347924 = slotsNeeded_1308622891(chckRange(initialSize_2986347921, 0, 2147483647));
    result_2986347922.counter = 0;
    result_2986347922.data = new Array(chckRange(correctSizeHEX60gensym96_2986347924, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_2986347924, 0, 2147483647) ; ++i) { result_2986347922.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_2986347922;

}

function rawGet_2952792612(t_2952792615, key_2952792616, hc_2952792617, hc_2952792617_Idx) {
  var result_2952792618 = 0;

  BeforeRet: {
    hc_2952792617[hc_2952792617_Idx] = hash_2181038324(key_2952792616);
    if ((hc_2952792617[hc_2952792617_Idx] == 0)) {
    hc_2952792617[hc_2952792617_Idx] = 314159265;
    }
    
    if (((t_2952792615.data).length == 0)) {
    result_2952792618 = -1;
    break BeforeRet;
    }
    
    var h_2952792670 = (hc_2952792617[hc_2952792617_Idx] & (t_2952792615.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2952792615.data[chckIndx(h_2952792670, 0, (t_2952792615.data).length - 1)].Field0)) break Label2;
          if (((t_2952792615.data[chckIndx(h_2952792670, 0, (t_2952792615.data).length - 1)].Field0 == hc_2952792617[hc_2952792617_Idx]) && HEX3DHEX3D_2181038320(t_2952792615.data[chckIndx(h_2952792670, 0, (t_2952792615.data).length - 1)].Field1, key_2952792616))) {
          result_2952792618 = h_2952792670;
          break BeforeRet;
          }
          
          h_2952792670 = nextTry_1308622883(h_2952792670, (t_2952792615.data).length - 1);
        }
    };
    result_2952792618 = subInt(-1, h_2952792670);
  };

  return result_2952792618;

}

function hasKey_2952792605(t_2952792608, key_2952792609) {
  var result_2952792610 = false;

    var hc_2952792611 = [0];
    result_2952792610 = (0 <= rawGet_2952792612(t_2952792608, key_2952792609, hc_2952792611, 0));

  return result_2952792610;

}

function contains_2986344813(t_2986344816, key_2986344817) {
  var result_2986344818 = false;

  BeforeRet: {
    result_2986344818 = hasKey_2952792605(t_2986344816, key_2986344817);
    break BeforeRet;
  };

  return result_2986344818;

}

function rawGet_2986345057(t_2986345060, key_2986345061, hc_2986345062, hc_2986345062_Idx) {
  var result_2986345063 = 0;

  BeforeRet: {
    hc_2986345062[hc_2986345062_Idx] = hash_2181038324(key_2986345061);
    if ((hc_2986345062[hc_2986345062_Idx] == 0)) {
    hc_2986345062[hc_2986345062_Idx] = 314159265;
    }
    
    if (((t_2986345060.data).length == 0)) {
    result_2986345063 = -1;
    break BeforeRet;
    }
    
    var h_2986345114 = (hc_2986345062[hc_2986345062_Idx] & (t_2986345060.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986345060.data[chckIndx(h_2986345114, 0, (t_2986345060.data).length - 1)].Field0)) break Label2;
          if (((t_2986345060.data[chckIndx(h_2986345114, 0, (t_2986345060.data).length - 1)].Field0 == hc_2986345062[hc_2986345062_Idx]) && HEX3DHEX3D_2181038320(t_2986345060.data[chckIndx(h_2986345114, 0, (t_2986345060.data).length - 1)].Field1, key_2986345061))) {
          result_2986345063 = h_2986345114;
          break BeforeRet;
          }
          
          h_2986345114 = nextTry_1308622883(h_2986345114, (t_2986345060.data).length - 1);
        }
    };
    result_2986345063 = subInt(-1, h_2986345114);
  };

  return result_2986345063;

}

function mustRehash_2986345402(t_2986345404) {
  var result_2986345405 = false;

    if (!((t_2986345404.counter < (t_2986345404.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986345405 = ((mulInt((t_2986345404.data).length, 2) < mulInt(t_2986345404.counter, 3)) || (subInt((t_2986345404.data).length, t_2986345404.counter) < 4));

  return result_2986345405;

}

function rawInsert_2986345851(t_2986345855, data_2986345856, data_2986345856_Idx, key_2986345857, val_2986345858, hc_2986345859, h_2986345860) {
    data_2986345856[data_2986345856_Idx][chckIndx(h_2986345860, 0, (data_2986345856[data_2986345856_Idx]).length - 1)].Field1 = nimCopy(data_2986345856[data_2986345856_Idx][chckIndx(h_2986345860, 0, (data_2986345856[data_2986345856_Idx]).length - 1)].Field1, key_2986345857, NTI2181038083);
    data_2986345856[data_2986345856_Idx][chckIndx(h_2986345860, 0, (data_2986345856[data_2986345856_Idx]).length - 1)].Field2 = nimCopy(data_2986345856[data_2986345856_Idx][chckIndx(h_2986345860, 0, (data_2986345856[data_2986345856_Idx]).length - 1)].Field2, val_2986345858, NTI2952790046);
    data_2986345856[data_2986345856_Idx][chckIndx(h_2986345860, 0, (data_2986345856[data_2986345856_Idx]).length - 1)].Field0 = hc_2986345859;

  
}

function enlarge_2986345557(t_2986345560) {
    var n_2986345563 = [];
    n_2986345563 = new Array(chckRange(mulInt((t_2986345560.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986345560.data).length, 2), 0, 2147483647) ; ++i) { n_2986345563[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_2986345560.data; t_2986345560.data = n_2986345563; n_2986345563 = Temporary1;    Label2: {
      var i_2986345627 = 0;
      var colontmp__2818572822 = 0;
      colontmp__2818572822 = (n_2986345563).length - 1;
      var res_2818572823 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572823 <= colontmp__2818572822)) break Label4;
            i_2986345627 = res_2818572823;
            var eh_2986345681 = n_2986345563[chckIndx(i_2986345627, 0, (n_2986345563).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986345681)) {
            var j_2986345685 = (eh_2986345681 & (t_2986345560.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986345560.data[chckIndx(j_2986345685, 0, (t_2986345560.data).length - 1)].Field0)) break Label6;
                  j_2986345685 = nextTry_1308622883(j_2986345685, (t_2986345560.data).length - 1);
                }
            };
            rawInsert_2986345851(t_2986345560, t_2986345560, "data", n_2986345563[chckIndx(i_2986345627, 0, (n_2986345563).length - 1)].Field1, n_2986345563[chckIndx(i_2986345627, 0, (n_2986345563).length - 1)].Field2, eh_2986345681, j_2986345685);
            }
            
            res_2818572823 = addInt(res_2818572823, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986346020(t_2986346023, key_2986346024, hc_2986346025) {
  var result_2986346026 = 0;

  BeforeRet: {
    if (((t_2986346023.data).length == 0)) {
    result_2986346026 = -1;
    break BeforeRet;
    }
    
    var h_2986346077 = (hc_2986346025 & (t_2986346023.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986346023.data[chckIndx(h_2986346077, 0, (t_2986346023.data).length - 1)].Field0)) break Label2;
          if (((t_2986346023.data[chckIndx(h_2986346077, 0, (t_2986346023.data).length - 1)].Field0 == hc_2986346025) && HEX3DHEX3D_2181038320(t_2986346023.data[chckIndx(h_2986346077, 0, (t_2986346023.data).length - 1)].Field1, key_2986346024))) {
          result_2986346026 = h_2986346077;
          break BeforeRet;
          }
          
          h_2986346077 = nextTry_1308622883(h_2986346077, (t_2986346023.data).length - 1);
        }
    };
    result_2986346026 = subInt(-1, h_2986346077);
  };

  return result_2986346026;

}

function HEX5BHEX5DHEX3D_2986344996(t_2986344999, key_2986345000, val_2986345001) {
    if (((t_2986344999.data).length == 0)) {
    var correctSizeHEX60gensym21_2986345051 = slotsNeeded_1308622891(32);
    t_2986344999.counter = 0;
    t_2986344999.data = new Array(chckRange(correctSizeHEX60gensym21_2986345051, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_2986345051, 0, 2147483647) ; ++i) { t_2986344999.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_2986345056 = [0];
    var index_2986345295 = rawGet_2986345057(t_2986344999, key_2986345000, hc_2986345056, 0);
    if ((0 <= index_2986345295)) {
    t_2986344999.data[chckIndx(index_2986345295, 0, (t_2986344999.data).length - 1)].Field2 = nimCopy(t_2986344999.data[chckIndx(index_2986345295, 0, (t_2986344999.data).length - 1)].Field2, val_2986345001, NTI2952790046);
    }
    else {
      if (((t_2986344999.data).length == 0)) {
      var correctSizeHEX60gensym26_2986345397 = slotsNeeded_1308622891(32);
      t_2986344999.counter = 0;
      t_2986344999.data = new Array(chckRange(correctSizeHEX60gensym26_2986345397, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_2986345397, 0, 2147483647) ; ++i) { t_2986344999.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_2986345402(t_2986344999)) {
      enlarge_2986345557(t_2986344999);
      index_2986345295 = rawGetKnownHC_2986346020(t_2986344999, key_2986345000, hc_2986345056[0]);
      }
      
      index_2986345295 = subInt(-1, index_2986345295);
      rawInsert_2986345851(t_2986344999, t_2986344999, "data", key_2986345000, val_2986345001, hc_2986345056[0], index_2986345295);
      t_2986344999.counter = addInt(t_2986344999.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2080374872(a_2080374873, b_2080374874) {
  var result_2080374875 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374875.x = min_33555609(a_2080374873.x, b_2080374874.x);
    result_2080374875.y = min_33555609(a_2080374873.y, b_2080374874.y);
    result_2080374875.w = (max_33555642((a_2080374873.x + a_2080374873.w), (b_2080374874.x + b_2080374874.w)) - result_2080374875.x);
    result_2080374875.h = (max_33555642((a_2080374873.y + a_2080374873.h), (b_2080374874.y + b_2080374874.h)) - result_2080374875.y);

  return result_2080374875;

}

function HEX2B_2063597727(a_2063597728, b_2063597729) {
  var result_2063597730 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597730.x = (a_2063597728.x + b_2063597729.arr[chckIndx(0, 0, (b_2063597729.arr).length - 1)]);
    result_2063597730.y = (a_2063597728.y + b_2063597729.arr[chckIndx(1, 0, (b_2063597729.arr).length - 1)]);
    result_2063597730.w = a_2063597728.w;
    result_2063597730.h = a_2063597728.h;

  return result_2063597730;

}

function vec2_2097152992(xHEX60gensym72_2097152993, yHEX60gensym72_2097152994) {
  var result_2097152995 = ({arr: new Float32Array(2)});

    result_2097152995 = nimCopy(result_2097152995, {arr: new Float32Array([xHEX60gensym72_2097152993, yHEX60gensym72_2097152994])}, NTI2097152387);

  return result_2097152995;

}

function xy_2080374820(rect_2080374821) {
  var result_2080374822 = ({arr: new Float32Array(2)});

    result_2080374822 = nimCopy(result_2080374822, vec2_2097152992(rect_2080374821.x, rect_2080374821.y), NTI2097152387);

  return result_2080374822;

}

function add_2952792083(node_2952792084, node_2952792084_Idx, child_2952792085) {
  var result_2952792086 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_2952792084[node_2952792084_Idx].children.push(child_2952792085);;
    child_2952792085.depth = addInt(node_2952792084[node_2952792084_Idx].depth, 1);
    child_2952792085.parent = node_2952792084[node_2952792084_Idx];
    child_2952792085.bounds.x = node_2952792084[node_2952792084_Idx].bounds.w;
    node_2952792084[node_2952792084_Idx].bounds = nimCopy(node_2952792084[node_2952792084_Idx].bounds, or_2080374872(node_2952792084[node_2952792084_Idx].bounds, HEX2B_2063597727(child_2952792085.bounds, xy_2080374820(node_2952792084[node_2952792084_Idx].bounds))), NTI2080374789);
    result_2952792086 = nimCopy(result_2952792086, {parent: node_2952792084[node_2952792084_Idx], first: (node_2952792084[node_2952792084_Idx].children).length - 1, last: (node_2952792084[node_2952792084_Idx].children).length}, NTI2952790046);
    break BeforeRet;
  };

  return result_2952792086;

}

function map_2952791684(s_2952791687, op_2952791689) {
  var result_2952791690 = [];

    result_2952791690 = new Array(chckRange((s_2952791687).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2952791687).length, 0, 2147483647) ; ++i) { result_2952791690[i] = null; }    Label1: {
      var i_2952791706 = 0;
      var colontmp__2818572832 = 0;
      colontmp__2818572832 = (s_2952791687).length;
      var i_2818572833 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572833 < colontmp__2818572832)) break Label3;
            i_2952791706 = i_2818572833;
            result_2952791690[chckIndx(i_2952791706, 0, (result_2952791690).length - 1)] = op_2952791689(s_2952791687[chckIndx(i_2952791706, 0, (s_2952791687).length - 1)]);
            i_2818572833 = addInt(i_2818572833, 1);
          }
      };
    };

  return result_2952791690;

}

function clone_2952791665(node_2952791666) {
    
function HEX3Aanonymous_2952791671(c_2952791679) {
      var result_2952791682 = null;

        result_2952791682 = clone_2952791665(c_2952791679);

      return result_2952791682;

    }

  var result_2952791667 = null;

    result_2952791667 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_2952791667.id = nimCopy(result_2952791667.id, newId_2181038297(), NTI2181038083);
    result_2952791667.parent = node_2952791666.parent;
    result_2952791667.node = node_2952791666.node;
    result_2952791667.text = nimCopy(null, node_2952791666.text, NTI33554449);
    result_2952791667.bounds = nimCopy(result_2952791667.bounds, node_2952791666.bounds, NTI2080374789);
    result_2952791667.indent = node_2952791666.indent;
    result_2952791667.font = nimCopy(null, node_2952791666.font, NTI33554449);
    result_2952791667.fontSize = node_2952791666.fontSize;
    result_2952791667.render = node_2952791666.render;
    result_2952791667.children = nimCopy(null, map_2952791684(node_2952791666.children, HEX3Aanonymous_2952791671), NTI2952791269);
    Label1: {
      var c_2952791710 = null;
      var i_2818572828 = 0;
      var L_2818572829 = (result_2952791667.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572828 < L_2818572829)) break Label3;
            c_2952791710 = result_2952791667.children[chckIndx(i_2818572828, 0, (result_2952791667.children).length - 1)];
            c_2952791710.parent = result_2952791667;
            i_2818572828 = addInt(i_2818572828, 1);
            if (!(((result_2952791667.children).length == L_2818572829))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2952791667;

}

function HEX5BHEX5D_2986344882(t_2986344885, key_2986344886) {
  var result_2986344887 = null;
  var result_2986344887_Idx = 0;

    var hcHEX60gensym22_2986344888 = [0];
    var indexHEX60gensym22_2986344895 = rawGet_2952792612(t_2986344885, key_2986344886, hcHEX60gensym22_2986344888, 0);
    if ((0 <= indexHEX60gensym22_2986344895)) {
    result_2986344887 = t_2986344885.data[chckIndx(indexHEX60gensym22_2986344895, 0, (t_2986344885.data).length - 1)]; result_2986344887_Idx = "Field2";
    }
    else {
    raiseKeyError_2852128536(key_2986344886);
    }
    

  return [result_2986344887, result_2986344887_Idx];

}

function createReplacement_2986344765(input_2986344766, node_2986344767, layout_2986344768, line_2986344769, line_2986344769_Idx) {
    var Temporary1;
    var Temporary2;

  var result_2986344770 = false;

  BeforeRet: {
    if (contains_2986344813(input_2986344766.replacements, node_2986344767.id)) {
    HEX5BHEX5DHEX3D_2986344996(layout_2986344768.nodeToVisualNode, node_2986344767.id, add_2952792083(line_2986344769, line_2986344769_Idx, clone_2952791665((Temporary1 = HEX5BHEX5D_2986344882(input_2986344766.replacements, node_2986344767.id), Temporary1)[0][Temporary1[1]])));
    result_2986344770 = true;
    break BeforeRet;
    }
    
    if (contains_2986344813(input_2986344766.replacements, node_2986344767.reff)) {
    HEX5BHEX5DHEX3D_2986344996(layout_2986344768.nodeToVisualNode, node_2986344767.id, add_2952792083(line_2986344769, line_2986344769_Idx, clone_2952791665((Temporary2 = HEX5BHEX5D_2986344882(input_2986344766.replacements, node_2986344767.reff), Temporary2)[0][Temporary2[1]])));
    result_2986344770 = true;
    break BeforeRet;
    }
    
    result_2986344770 = false;
    break BeforeRet;
  };

  return result_2986344770;

}

function rect_2080374808(pos_2080374809, size_2080374810) {
  var result_2080374811 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374811.x = pos_2080374809.arr[chckIndx(0, 0, (pos_2080374809.arr).length - 1)];
    result_2080374811.y = pos_2080374809.arr[chckIndx(1, 0, (pos_2080374809.arr).length - 1)];
    result_2080374811.w = size_2080374810.arr[chckIndx(0, 0, (size_2080374810.arr).length - 1)];
    result_2080374811.h = size_2080374810.arr[chckIndx(1, 0, (size_2080374810.arr).length - 1)];

  return result_2080374811;

}

function vec2_2097152926() {
  var result_2097152927 = ({arr: new Float32Array(2)});

    result_2097152927 = nimCopy(result_2097152927, {arr: new Float32Array([0.0, 0.0])}, NTI2097152387);

  return result_2097152927;

}

function whHEX3D_2080374831(rect_2080374832, v_2080374833) {
    rect_2080374832.w = v_2080374833.arr[chckIndx(0, 0, (v_2080374833.arr).length - 1)];
    rect_2080374832.h = v_2080374833.arr[chckIndx(1, 0, (v_2080374833.arr).length - 1)];

  
}

function newTextNode_2986344692(text_2986344693, color_2986344694, font_2986344695, measureText_2986344698, node_2986344699) {
  var result_2986344700 = null;

    result_2986344700 = {id: newId_2181038297(), text: nimCopy(null, text_2986344693, NTI33554449), colors: [nimCopy(null, color_2986344694, NTI33554449)], font: nimCopy(null, font_2986344695, NTI33554449), fontSize: config_2986344661[0].fontSize, node: node_2986344699, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374831(result_2986344700.bounds, measureText_2986344698(text_2986344693));

  return result_2986344700;

}

function newTextNode_2986344705(text_2986344706, colors_2986344707, font_2986344708, measureText_2986344711, node_2986344712, styleOverride_2986344722) {
  var result_2986344723 = null;

    result_2986344723 = {id: newId_2181038297(), text: nimCopy(null, text_2986344706, NTI33554449), colors: nimCopy(null, colors_2986344707, NTI2986344631), font: nimCopy(null, font_2986344708, NTI33554449), fontSize: config_2986344661[0].fontSize, node: node_2986344712, styleOverride: nimCopy(null, styleOverride_2986344722, NTI2952790060), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374831(result_2986344723.bounds, measureText_2986344711(text_2986344706));

  return result_2986344723;

}

function none_2986344714() {
  var result_2986344721 = ({val: {}, has: false});

  return result_2986344721;

}

function getColorForSymbol_2986346409(ctx_2986346410, sym_2986346411) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_2986346412 = [];

  BeforeRet: {
    var typ_2986346413 = computeSymbolType_2868990524(ctx_2986346410, sym_2986346411, false);
    switch (typ_2986346413.kind) {
    case 0:
      result_2986346412 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_2986346412 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_2986346411.kind == 1)) {
      var Temporary1 = sym_2986346411;
      if (ConstSet145[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790025)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_2986346412 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI2986345542);
        break BeforeRet;
        break;
      }
      }
      
      result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI2986345542);
      break BeforeRet;
      break;
    default: 
      if ((sym_2986346411.kind == 0)) {
        var Temporary2 = sym_2986346411;
        if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      if ((Temporary2.node.kind == 4)) {
      result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI2986345542);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_2986346411;
        if (ConstSet147[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_2986346411;
          if (ConstSet148[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790025)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_2986346411;
        if (ConstSet149[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790025)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI2986345542);
      break BeforeRet;
      }
      else {
        result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI2986345542);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_2986346412 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI2986345542);
    break BeforeRet;
  };

  return result_2986346412;

}

function some_2986346529(val_2986346531) {
  var result_2986346532 = ({val: {}, has: false});

    result_2986346532.has = true;
    result_2986346532.val = nimCopy(result_2986346532.val, val_2986346531, NTI2952790055);

  return result_2986346532;

}

function getStyleForSymbol_2986346478(ctx_2986346479, sym_2986346480) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2986346482 = ({val: {}, has: false});

    var style_2986346483 = nimCopy(null, ConstSet150, NTI2986345606);
    if ((sym_2986346480.kind == 0)) {
      var Temporary1 = sym_2986346480;
      if (ConstSet151[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790025)); }
    if ((Temporary1.node.kind == 6)) {
    style_2986346483 = nimCopy(style_2986346483, SetPlus(style_2986346483, ConstSet152), NTI2986345606);
    }
    
      var Temporary2 = sym_2986346480;
      if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_2986346502 = computeSymbolType_2868990524(ctx_2986346479, sym_2986346480, false);
    if (!((typ_2986346502.kind == 4))) {
    style_2986346483 = nimCopy(style_2986346483, SetPlus(style_2986346483, ConstSet154), NTI2986345606);
    }
    
    }
    
    }
    else {
    if ((sym_2986346480.kind == 1)) {
      var Temporary3 = sym_2986346480;
      if (ConstSet155[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_2986346483[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_2986346483, ConstSet156))) {
    result_2986346482 = nimCopy(result_2986346482, some_2986346529(style_2986346483), NTI2952790060);
    }
    

  return result_2986346482;

}

function len_2952790241(node_2952790242) {
  var result_2952790243 = 0;

  BeforeRet: {
    result_2952790243 = (node_2952790242.children).length;
    break BeforeRet;
  };

  return result_2952790243;

}

function addLine_2952792109(node_2952792110, node_2952792110_Idx, child_2952792111, child_2952792111_Idx) {
    node_2952792110[node_2952792110_Idx].children.push(child_2952792111[child_2952792111_Idx]);;
    child_2952792111[child_2952792111_Idx].depth = addInt(node_2952792110[node_2952792110_Idx].depth, 1);
    child_2952792111[child_2952792111_Idx].parent = node_2952792110[node_2952792110_Idx];
    child_2952792111[child_2952792111_Idx].bounds.y = node_2952792110[node_2952792110_Idx].bounds.h;
    node_2952792110[node_2952792110_Idx].bounds = nimCopy(node_2952792110[node_2952792110_Idx].bounds, or_2080374872(node_2952792110[node_2952792110_Idx].bounds, HEX2B_2063597727(child_2952792111[child_2952792111_Idx].bounds, xy_2080374820(node_2952792110[node_2952792110_Idx].bounds))), NTI2080374789);

  
}

function rect_2080374802(x_2080374803, y_2080374804, w_2080374805, h_2080374806) {
  var result_2080374807 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374807.x = x_2080374803;
    result_2080374807.y = y_2080374804;
    result_2080374807.w = w_2080374805;
    result_2080374807.h = h_2080374806;

  return result_2080374807;

}

function getPrecedenceForNode_2986344462(ctx_2986344463, node_2986344464) {
      var Temporary1;
      var Temporary2;

  var result_2986344465 = 0;

  BeforeRet: {
    if ((!((node_2986344464.kind == 8)) || (len_2852126808(node_2986344464) == 0))) {
    result_2986344465 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_2986344472 = computeSymbol_2868983552(ctx_2986344463, HEX5BHEX5D_2852126804(node_2986344464, 0), false);
      if (!isSome_2952791605(oHEX60gensym1_2986344472)) Temporary1 = false; else {        var symbol_2986344495 = get_2952791625(oHEX60gensym1_2986344472);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_2986344495.kind) {
    case 1:
      var Temporary2 = symbol_2986344495;
      if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      result_2986344465 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_2986344465 = 0;
    break BeforeRet;
  };

  return result_2986344465;

}

function some_2986344747(val_2986344749) {
  var result_2986344750 = ({val: [], has: false});

    result_2986344750.has = true;
    result_2986344750.val = nimCopy(null, val_2986344749, NTI2986344660);

  return result_2986344750;

}

function newBlockNode_2986344733(colors_2986344734, size_2986344735, node_2986344736, styleOverride_2986344745) {
  var result_2986344746 = null;

    result_2986344746 = {id: newId_2181038297(), node: node_2986344736, styleOverride: nimCopy(null, styleOverride_2986344745, NTI2952790060), background: some_2986344747(colors_2986344734), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2080374831(result_2986344746.bounds, size_2986344735);

  return result_2986344746;

}

function HEX2BHEX3D_2080374895(x_2080374897, x_2080374897_Idx, y_2080374898) {
    x_2080374897[x_2080374897_Idx] = (x_2080374897[x_2080374897_Idx] + y_2080374898);

  
}

function formatValue_2986347870(result_2986347872, result_2986347872_Idx, value_2986347873, specifier_2986347874) {
    formatValue_721420459(result_2986347872, result_2986347872_Idx, reprEnum(value_2986347873, NTI2852126723), specifier_2986347874);

  
}

function createLayoutLineForRemainingChildren_2986346547(ctx_2986346548, input_2986346549, node_2986346550, firstChildIndex_2986346551, result_2986346552, line_2986346553, line_2986346553_Idx) {
  BeforeRet: {
    if ((len_2852126808(node_2986346550) <= firstChildIndex_2986346551)) {
    break BeforeRet;
    }
    
    var _ = add_2952792083(line_2986346553, line_2986346553_Idx, newTextNode_2986344705([60], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346549.measureText, null, none_2986344714()));
    Label1: {
      var i_2986346562 = 0;
      var colontmp__2818572838 = 0;
      colontmp__2818572838 = len_2852126808(node_2986346550);
      var i_2818572839 = firstChildIndex_2986346551;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572839 < colontmp__2818572838)) break Label3;
            i_2986346562 = i_2818572839;
            if ((firstChildIndex_2986346551 < i_2986346562)) {
            var _ = add_2952792083(line_2986346553, line_2986346553_Idx, newTextNode_2986344705([44,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346549.measureText, null, none_2986344714()));
            }
            
            createLayoutLineForNode_2986346541(ctx_2986346548, input_2986346549, HEX5BHEX5D_2852126804(node_2986346550, i_2986346562), result_2986346552, line_2986346553, line_2986346553_Idx);
            i_2818572839 = addInt(i_2818572839, 1);
          }
      };
    };
    var _ = add_2952792083(line_2986346553, line_2986346553_Idx, newTextNode_2986344705([62], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346549.measureText, null, none_2986344714()));
  };

  
}

function createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_2986346586 = ((ConstSet143[node_2986346544.kind] != undefined) && (ConstSet144[node_2986346544.parent.kind] != undefined));
    var prevLine_2986346587 = line_2986346546[line_2986346546_Idx];
    var first_2986346591 = (prevLine_2986346587.children).length;
    try {
    var oldLineHEX60gensym42_2986346646 = [line_2986346546[line_2986346546_Idx]];
    var containerLineHEX60gensym42_2986346647 = [{id: newId_2181038297(), node: node_2986346544, parent: line_2986346546[line_2986346546_Idx], orientation: 1, depth: addInt(line_2986346546[line_2986346546_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_2986346586) {
    line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym42_2986346647[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_2986346647[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_2868976946(ctx_2986346542, node_2986346544, false);
    var lastUsedChild_2986346694 = -1;
    try {
    Label4: {
      var expr_2986346695 = node_2986346544;
      var pos_2986346696 = 0;
      var _ = pos_2986346696;
      if ((expr_2986346695.kind == 0)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(line_2986346546, line_2986346546_Idx, {id: newId_2181038297(), colors: [nimCopy(null, config_2986344661[0].colors.empty, NTI33554449)], node: node_2986346544, bounds: rect_2080374808(vec2_2097152926(), vec2_2097152992((config_2986344661[0].fontSize * 0.5), config_2986344661[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_2986346695.kind == 2)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(node_2986346544.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544)));
      }
      
      }
      else {
      if ((expr_2986346695.kind == 3)) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(node_2986346544.text, [115,116,114,105,110,103], config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544));
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      }
      else {
      if ((expr_2986346695.kind == 1)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
        var oHEX60gensym61_2986346821 = computeSymbol_2868983552(ctx_2986346542, node_2986346544, false);
        if (!isSome_2952791605(oHEX60gensym61_2986346821)) Temporary5 = false; else {          var sym_2986346844 = get_2952791625(oHEX60gensym61_2986346821);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705(sym_2986346844.name, getColorForSymbol_2986346409(ctx_2986346542, sym_2986346844), config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544, getStyleForSymbol_2986346478(ctx_2986346542, sym_2986346844))));
      }
      else {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(HEX24_2181038317(node_2986346544.reff), [118,97,114,105,97,98,108,101], config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544)));
      }
      
      }
      
      }
      else {
      if ((expr_2986346695.kind == 4)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
        var oHEX60gensym63_2986346943 = computeSymbol_2868983552(ctx_2986346542, node_2986346544, false);
        if (!isSome_2952791605(oHEX60gensym63_2986346943)) Temporary7 = false; else {          var sym_2986346966 = get_2952791625(oHEX60gensym63_2986346943);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_2986346409(ctx_2986346542, sym_2986346966);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_2986346971 = nimCopy(null, Temporary6, NTI2986345508);
        var oHEX60gensym64_2986346974 = computeSymbol_2868983552(ctx_2986346542, node_2986346544, false);
        if (!isSome_2952791605(oHEX60gensym64_2986346974)) Temporary8 = false; else {          var sym_2986346997 = get_2952791625(oHEX60gensym64_2986346974);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705(sym_2986346997.name, color_2986346971, config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544, getStyleForSymbol_2986346478(ctx_2986346542, sym_2986346997)));
      }
      else {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705(HEX24_2181038317(node_2986346544.id), color_2986346971, config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544, none_2986344714()));
      }
      
      }
      
      var typ_2986346998 = computeType_2868976946(ctx_2986346542, node_2986346544, false);
      if ((typ_2986346998.kind == 4)) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,58,58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      }
      else {
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(HEX24_2952790452(typ_2986346998), config_2986344661[0].colors.typ, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      }
      
      if ((0 < len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
      var value_2986347015 = computeValue_2868980422(ctx_2986346542, node_2986346544, false);
      switch (value_2986347015.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2852126804(node_2986346544, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,61,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(HEX24_2952790759(value_2986347015), [115,116,114,105,110,103], config_2986344661[0].fontRegular, input_2986346543.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_2986346694 = 0;
      }
      else {
      if ((expr_2986346695.kind == 5)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
        var oHEX60gensym67_2986347026 = computeSymbol_2868983552(ctx_2986346542, node_2986346544, false);
        if (!isSome_2952791605(oHEX60gensym67_2986347026)) Temporary10 = false; else {          var sym_2986347049 = get_2952791625(oHEX60gensym67_2986347026);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_2986346409(ctx_2986346542, sym_2986347049), Field1: getStyleForSymbol_2986346478(ctx_2986346542, sym_2986347049)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_2986344714()};
      }
      
      var colontmp__2818572835 = nimCopy(null, Temporary9, NTI2986345978);
      var color_2986347061 = nimCopy(null, colontmp__2818572835["Field0"], NTI2986345508);
      var style_2986347062 = nimCopy(null, colontmp__2818572835["Field1"], NTI2952790060);
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705(node_2986346544.text, color_2986347061, config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544, style_2986347062));
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((0 < len_2852126808(node_2986346544))) {
      if ((((HEX5BHEX5D_2852126804(node_2986346544, 0).kind == 0) && ((HEX5BHEX5D_2852126804(node_2986346544, 0).text).length == 0)) && !(contains_2986344813(input_2986346543.replacements, HEX5BHEX5D_2852126804(node_2986346544, 0).id)))) {
      var typ_2986347118 = computeType_2868976946(ctx_2986346542, node_2986346544, false);
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, HEX5BHEX5D_2852126804(node_2986346544, 0).id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(HEX24_2952790452(typ_2986347118), config_2986344661[0].colors.typ, config_2986344661[0].fontRegular, input_2986346543.measureText, HEX5BHEX5D_2852126804(node_2986346544, 0))));
      }
      else {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      }
      
      if ((1 < len_2852126808(node_2986346544))) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,61,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      lastUsedChild_2986346694 = 1;
      }
      else {
      if ((expr_2986346695.kind == 6)) {
      if (!(createReplacement_2986344765(input_2986346543, node_2986346544, result_2986346545, line_2986346546, line_2986346546_Idx))) {
        var oHEX60gensym71_2986347175 = computeSymbol_2868983552(ctx_2986346542, node_2986346544, false);
        if (!isSome_2952791605(oHEX60gensym71_2986347175)) Temporary12 = false; else {          var sym_2986347198 = get_2952791625(oHEX60gensym71_2986347175);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_2986346409(ctx_2986346542, sym_2986347198), Field1: getStyleForSymbol_2986346478(ctx_2986346542, sym_2986347198)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_2986344714()};
      }
      
      var colontmp__2818572836 = nimCopy(null, Temporary11, NTI2986346081);
      var color_2986347210 = nimCopy(null, colontmp__2818572836["Field0"], NTI2986345508);
      var style_2986347211 = nimCopy(null, colontmp__2818572836["Field1"], NTI2952790060);
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705(node_2986346544.text, color_2986347210, config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544, style_2986347211));
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,58,32,109,117,116,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((0 < len_2852126808(node_2986346544))) {
      if ((((HEX5BHEX5D_2852126804(node_2986346544, 0).kind == 0) && ((HEX5BHEX5D_2852126804(node_2986346544, 0).text).length == 0)) && !(contains_2986344813(input_2986346543.replacements, HEX5BHEX5D_2852126804(node_2986346544, 0).id)))) {
      var typ_2986347267 = computeType_2868976946(ctx_2986346542, node_2986346544, false);
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, HEX5BHEX5D_2852126804(node_2986346544, 0).id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692(HEX24_2952790452(typ_2986347267), config_2986344661[0].colors.typ, config_2986344661[0].fontRegular, input_2986346543.measureText, HEX5BHEX5D_2852126804(node_2986346544, 0))));
      }
      else {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      }
      
      if ((1 < len_2852126808(node_2986346544))) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,61,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      lastUsedChild_2986346694 = 1;
      }
      else {
      if ((expr_2986346695.kind == 11)) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([102,110], config_2986344661[0].colors.keyword, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([40], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((0 < len_2852126808(node_2986346544))) {
      var parent_2986347322 = line_2986346546[line_2986346546_Idx];
      var first_2986347323 = len_2952790241(parent_2986347322);
      Label13: {
        var i_2986347347 = 0;
        var param_2986347348 = null;
        var colontmp__2818572804 = [];
        colontmp__2818572804 = HEX5BHEX5D_2852126804(node_2986346544, 0).children;
        var i_2818572806 = 0;
        var L_2818572807 = (colontmp__2818572804).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2818572806 < L_2818572807)) break Label15;
              i_2986347347 = i_2818572806;
              param_2986347348 = colontmp__2818572804[chckIndx(i_2818572806, 0, (colontmp__2818572804).length - 1)];
              if ((0 < i_2986347347)) {
              var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([44,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
              }
              
              createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, param_2986347348, result_2986346545, line_2986346546, line_2986346546_Idx);
              i_2818572806 = addInt(i_2818572806, 1);
              if (!(((colontmp__2818572804).length == L_2818572807))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2852126808(HEX5BHEX5D_2852126804(node_2986346544, 0)) == 0)) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, HEX5BHEX5D_2852126804(node_2986346544, 0).id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([32], config_2986344661[0].colors.empty, config_2986344661[0].fontRegular, input_2986346543.measureText, HEX5BHEX5D_2852126804(node_2986346544, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, HEX5BHEX5D_2852126804(node_2986346544, 0).id, {parent: parent_2986347322, first: first_2986347323, last: len_2952790241(parent_2986347322)});
      }
      
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([41,32], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((1 < len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,61,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((2 < len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 2), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      lastUsedChild_2986346694 = 2;
      }
      else {
      if ((expr_2986346695.kind == 9)) {
      var parent_2986347453 = [line_2986346546[line_2986346546_Idx].parent];
      var prevIndent_2986347454 = line_2986346546[line_2986346546_Idx].indent;
      var first_2986347458 = (parent_2986347453[0].children).length;
      try {
      var i_2986347511 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_2986347511, 1) < len_2852126808(node_2986346544))) break Label18;
            try {
            if ((i_2986347511 == 0)) {
            var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([105,102,32], config_2986344661[0].colors.keyword, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
            }
            else {
              addLine_2952792109(parent_2986347453, 0, line_2986346546, line_2986346546_Idx);
              line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347453[0], bounds: rect_2080374802((prevIndent_2986347454 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347454, depth: addInt(parent_2986347453[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([101,108,105,102,32], config_2986344661[0].colors.keyword, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
            }
            
            createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, i_2986347511), result_2986346545, line_2986346546, line_2986346546_Idx);
            var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
            createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, addInt(i_2986347511, 1)), result_2986346545, line_2986346546, line_2986346546_Idx);
            } finally {
            i_2986347511 = addInt(i_2986347511, 2);
            }
          }
      };
      if ((modInt(len_2852126808(node_2986346544), 2) == 1)) {
      addLine_2952792109(parent_2986347453, 0, line_2986346546, line_2986346546_Idx);
      line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347453[0], bounds: rect_2080374802((prevIndent_2986347454 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347454, depth: addInt(parent_2986347453[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([101,108,115,101,58,32], config_2986344661[0].colors.keyword, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, last_2852126978(node_2986346544), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      addLine_2952792109(parent_2986347453, 0, line_2986346546, line_2986346546_Idx);
      line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347453[0], bounds: rect_2080374802((prevIndent_2986347454 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347454, depth: addInt(parent_2986347453[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_2986346694 = subInt(len_2852126808(node_2986346544), 1);
      } finally {
      if ((first_2986347458 < (parent_2986347453[0].children).length)) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, {parent: parent_2986347453[0], first: first_2986347458, last: (parent_2986347453[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_2986346695.kind == 10)) {
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([119,104,105,108,101,32], config_2986344661[0].colors.keyword, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
      if ((1 <= len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([58,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((2 <= len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      lastUsedChild_2986346694 = 1;
      }
      else {
      if ((expr_2986346695.kind == 7)) {
      var parent_2986347532 = [line_2986346546[line_2986346546_Idx].parent];
      var first_2986347536 = addInt((parent_2986347532[0].children).length, 1);
      try {
      var prevIndent_2986347589 = line_2986346546[line_2986346546_Idx].indent;
      Label21: {
        var child_2986347593 = null;
        var i_2818572811 = 0;
        var L_2818572812 = (node_2986346544.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2818572811 < L_2818572812)) break Label23;
              child_2986347593 = node_2986346544.children[chckIndx(i_2818572811, 0, (node_2986346544.children).length - 1)];
              addLine_2952792109(parent_2986347532, 0, line_2986346546, line_2986346546_Idx);
              line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347532[0], bounds: rect_2080374802((prevIndent_2986347589 * config_2986344661[0].indent), 0.0, config_2986344661[0].indent, 0.0), indent: addInt(prevIndent_2986347589, 1), node: child_2986347593, depth: addInt(parent_2986347532[0].depth, 1), orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, child_2986347593, result_2986346545, line_2986346546, line_2986346546_Idx);
              i_2818572811 = addInt(i_2818572811, 1);
              if (!(((node_2986346544.children).length == L_2818572812))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_2952792109(parent_2986347532, 0, line_2986346546, line_2986346546_Idx);
      line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347532[0], bounds: rect_2080374802((prevIndent_2986347589 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347589, depth: addInt(parent_2986347532[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_2986346694 = subInt(len_2852126808(node_2986346544), 1);
      } finally {
      if ((first_2986347536 < (parent_2986347532[0].children).length)) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, {parent: parent_2986347532[0], first: first_2986347536, last: (parent_2986347532[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_2986346695.kind == 13)) {
      if ((0 < len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([32,61,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
      if ((0 < len_2852126808(node_2986346544))) {
      createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
      }
      
      lastUsedChild_2986346694 = 1;
      }
      else {
      if ((expr_2986346695.kind == 8)) {
      if ((len_2852126808(node_2986346544) == 0)) {
      HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_2986344661[0].colors.empty, config_2986344661[0].fontRegular, input_2986346543.measureText, node_2986346544)));
      break BeforeRet;
      }
      
      var isDivision_2986347652 = false;
        var oHEX60gensym90_2986347655 = computeSymbol_2868983552(ctx_2986346542, HEX5BHEX5D_2852126804(node_2986346544, 0), false);
        if (!isSome_2952791605(oHEX60gensym90_2986347655)) Temporary26 = false; else {          var sym_2986347678 = get_2952791625(oHEX60gensym90_2986347655);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2986347678.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2181038320(sym_2986347678.id, IdDiv_2835349510)) {
      isDivision_2986347652 = true;
      }
      
      var Temporary27 = sym_2986347678;
      if (ConstSet157[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2952790025)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_2986347683 = Temporary28;
      if ((len_2852126808(node_2986346544) == addInt(arity_2986347683, 1))) {
      var Temporary30 = sym_2986347678;
      if (ConstSet158[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI2952790025)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_2986347684 = Temporary24;
      switch (operatorNotation_2986347684) {
      case 3:
        var parentPrecedence_2986347685 = getPrecedenceForNode_2986344462(ctx_2986346542, node_2986346544.parent);
        var precedence_2986347686 = getPrecedenceForNode_2986344462(ctx_2986346542, node_2986346544);
        var renderParens_2986347687 = (precedence_2986347686 < parentPrecedence_2986347685);
        if ((isDivision_2986347652 && !(input_2986346543.renderDivisionVertically))) {
        var oldLineHEX60gensym91_2986347690 = [line_2986346546[line_2986346546_Idx]];
        var containerLineHEX60gensym91_2986347691 = [{id: newId_2181038297(), node: node_2986346544, parent: line_2986346546[line_2986346546_Idx], orientation: 1, depth: addInt(line_2986346546[line_2986346546_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym91_2986347691[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_2986347691[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_2986347738 = [line_2986346546[line_2986346546_Idx].parent];
        var prevIndent_2986347739 = line_2986346546[line_2986346546_Idx].indent;
        var first_2986347743 = (parent_2986347738[0].children).length;
        try {
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
        addLine_2952792109(parent_2986347738, 0, line_2986346546, line_2986346546_Idx);
        var line1_2986347796 = line_2986346546[line_2986346546_Idx];
        line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347738[0], bounds: rect_2080374802((prevIndent_2986347739 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347739, depth: addInt(parent_2986347738[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_2986347801 = newBlockNode_2986344733([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2097152992(0.0, (config_2986344661[0].fontSize * 0.1)), HEX5BHEX5D_2852126804(node_2986346544, 0), none_2986344714());
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, divLine_2986347801);
        HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, HEX5BHEX5D_2852126804(node_2986346544, 0).id, {parent: line_2986346546[line_2986346546_Idx], first: 0, last: 1});
        addLine_2952792109(parent_2986347738, 0, line_2986346546, line_2986346546_Idx);
        line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347738[0], bounds: rect_2080374802((prevIndent_2986347739 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347739, depth: addInt(parent_2986347738[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 2), result_2986346545, line_2986346546, line_2986346546_Idx);
        addLine_2952792109(parent_2986347738, 0, line_2986346546, line_2986346546_Idx);
        var line2_2986347848 = line_2986346546[line_2986346546_Idx];
        line_2986346546[line_2986346546_Idx] = {id: newId_2181038297(), parent: parent_2986347738[0], bounds: rect_2080374802((prevIndent_2986347739 * config_2986344661[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2986347739, depth: addInt(parent_2986347738[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_2986347801.bounds.w = max_33555642(line1_2986347796.bounds.w, line2_2986347848.bounds.w);
        divLine_2986347801.parent.bounds.w = divLine_2986347801.bounds.w;
        var shorterLine_2986347849 = line1_2986347796;
        var longerLine_2986347850 = line2_2986347848;
        if ((longerLine_2986347850.bounds.w < shorterLine_2986347849.bounds.w)) {
        shorterLine_2986347849 = line2_2986347848;
        longerLine_2986347850 = line1_2986347796;
        }
        
        var lengthDiff_2986347851 = (longerLine_2986347850.bounds.w - shorterLine_2986347849.bounds.w);
        HEX2BHEX3D_2080374895(shorterLine_2986347849.bounds, "x", (lengthDiff_2986347851 / 2.0));
        lastUsedChild_2986346694 = 2;
        } finally {
        if ((first_2986347743 < (parent_2986347738[0].children).length)) {
        HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, {parent: parent_2986347738[0], first: first_2986347743, last: (parent_2986347738[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_2952792109(containerLineHEX60gensym91_2986347691, 0, line_2986346546, line_2986346546_Idx);
        HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(oldLineHEX60gensym91_2986347690, 0, containerLineHEX60gensym91_2986347691[0]));
        line_2986346546[line_2986346546_Idx] = oldLineHEX60gensym91_2986347690[0];
        }
        
        }
        }
        else {
          if (renderParens_2986347687) {
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([40], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
          }
          
          createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([32], config_2986344661[0].colors.separator, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
          createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344692([32], config_2986344661[0].colors.separator, config_2986344661[0].fontRegular, input_2986346543.measureText, null));
          createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 2), result_2986346545, line_2986346546, line_2986346546_Idx);
          if (renderParens_2986347687) {
          var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([41], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
          }
          
          lastUsedChild_2986346694 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
        lastUsedChild_2986346694 = 1;
        break;
      case 2:
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
        lastUsedChild_2986346694 = 1;
        break;
      default: 
        if ((0 < len_2852126808(node_2986346544))) {
        createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, 0), result_2986346545, line_2986346546, line_2986346546_Idx);
        }
        
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([40], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
        Label33: {
          var i_2986347860 = 0;
          var colontmp__2818572815 = 0;
          colontmp__2818572815 = len_2852126808(node_2986346544);
          var i_2818572816 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2818572816 < colontmp__2818572815)) break Label35;
                i_2986347860 = i_2818572816;
                if ((1 < i_2986347860)) {
                var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([44,32], [nimCopy(null, config_2986344661[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
                }
                
                createLayoutLineForNode_2986346541(ctx_2986346542, input_2986346543, HEX5BHEX5D_2852126804(node_2986346544, i_2986347860), result_2986346545, line_2986346546, line_2986346546_Idx);
                i_2818572816 = addInt(i_2818572816, 1);
              }
          };
        };
        var _ = add_2952792083(line_2986346546, line_2986346546_Idx, newTextNode_2986344705([41], config_2986344661[0].colors.separatorParen, config_2986344661[0].fontRegular, input_2986346543.measureText, null, none_2986344714()));
        lastUsedChild_2986346694 = subInt(len_2852126808(node_2986346544), 1);
        break;
      }
      }
      else {
        var fmtRes_2986347869 = [mnewString(0)];
        fmtRes_2986347869[0].push.apply(fmtRes_2986347869[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_2986347870(fmtRes_2986347869, 0, node_2986346544.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986347869[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_2986346547(ctx_2986346542, input_2986346543, node_2986346544, addInt(lastUsedChild_2986346694, 1), result_2986346545, line_2986346546, line_2986346546_Idx);
    }
    } finally {
    if (renderInline_2986346586) {
    addLine_2952792109(containerLineHEX60gensym42_2986346647, 0, line_2986346546, line_2986346546_Idx);
    HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, add_2952792083(oldLineHEX60gensym42_2986346646, 0, containerLineHEX60gensym42_2986346647[0]));
    line_2986346546[line_2986346546_Idx] = oldLineHEX60gensym42_2986346646[0];
    }
    
    }
    } finally {
    if ((first_2986346591 < (prevLine_2986346587.children).length)) {
    HEX5BHEX5DHEX3D_2986344996(result_2986346545.nodeToVisualNode, node_2986346544.id, {parent: prevLine_2986346587, first: first_2986346591, last: (prevLine_2986346587.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_2986347896(vnode_2986347897) {
    var height_2986347898 = vnode_2986347897.bounds.h;
    Label1: {
      var child_2986347902 = null;
      var i_2818572842 = 0;
      var L_2818572843 = (vnode_2986347897.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818572842 < L_2818572843)) break Label3;
            child_2986347902 = vnode_2986347897.children[chckIndx(i_2818572842, 0, (vnode_2986347897.children).length - 1)];
            if ((vnode_2986347897.orientation == 0)) {
            var heightDiff_2986347908 = (height_2986347898 - child_2986347902.bounds.h);
            HEX2BHEX3D_2080374895(child_2986347902.bounds, "y", (heightDiff_2986347908 * 0.5));
            }
            
            centerChildrenVertically_2986347896(child_2986347902);
            i_2818572842 = addInt(i_2818572842, 1);
            if (!(((vnode_2986347897.children).length == L_2818572843))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_2986347913(ctx_2986347914, input_2986347915) {
  var result_2986347916 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_2986347917 = input_2986347915.node;
    result_2986347916[0] = nimCopy(result_2986347916[0], {node: node_2986347917, root: {id: newId_2181038297(), orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_2986347918(32)}, NTI2952790047);
    var line_2986347929 = [{id: newId_2181038297(), node: node_2986347917, parent: result_2986347916[0].root, orientation: 0, depth: addInt(result_2986347916[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_2986346541(ctx_2986347914, input_2986347915, node_2986347917, result_2986347916[0], line_2986347929, 0);
    addLine_2952792109(line_2986347929[0], "parent", line_2986347929, 0);
    centerChildrenVertically_2986347896(result_2986347916[0].root);

  return result_2986347916[0];

}

function computeNodeLayoutImpl_2868904779(ctx_2868904780, nodeLayoutInput_2868904781) {
  var result_2869000484 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_2868957460(ctx_2868904780);
    result_2869000484 = nimCopy(result_2869000484, computeNodeLayoutImpl2_2986347913(ctx_2868904780, nodeLayoutInput_2868904781), NTI2952790047);
    break BeforeRet;
  };

  return result_2869000484;

}

function hash_2952792184(input_2952792185) {
  var result_2952792186 = 0;

    result_2952792186 = HEX21HEX26_1325400067(hash_2852129075(input_2952792185.node), hash_2181038324(input_2952792185.selectedNode));
    result_2952792186 = HEX21HEX24_1325400082(result_2952792186);

  return result_2952792186;

}

function len_2952792310(t_2952792313) {
  var result_2952792314 = 0;

    result_2952792314 = t_2952792313.counter;

  return result_2952792314;

}

function HEX3DHEX3D_2952792023(x_2952792025, y_2952792026) {
  var result_2952792027 = false;

  BeforeRet: {
    var sameObject_2952792034 = false;
    sameObject_2952792034 = x_2952792025 === y_2952792026
    if (sameObject_2952792034) {
    result_2952792027 = true;
    break BeforeRet;
    }
    
    if (!(((x_2952792025).length == (y_2952792026).length))) {
    result_2952792027 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2952792048 = 0;
      var colontmp__2818572858 = 0;
      colontmp__2818572858 = subInt((x_2952792025).length, 1);
      var res_2818572859 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572859 <= colontmp__2818572858)) break Label3;
            i_2952792048 = res_2818572859;
            if (!(eqStrings(x_2952792025[chckIndx(i_2952792048, 0, (x_2952792025).length - 1)], y_2952792026[chckIndx(i_2952792048, 0, (y_2952792026).length - 1)]))) {
            result_2952792027 = false;
            break BeforeRet;
            }
            
            res_2818572859 = addInt(res_2818572859, 1);
          }
      };
    };
    result_2952792027 = true;
    break BeforeRet;
  };

  return result_2952792027;

}

function HEX3DHEX3D_2332033735(x_2332033737, y_2332033738) {
  var result_2332033739 = false;

  BeforeRet: {
    if (!((x_2332033737.x == y_2332033738.x))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.y == y_2332033738.y))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.w == y_2332033738.w))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.h == y_2332033738.h))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    result_2332033739 = true;
    break BeforeRet;
  };

  return result_2332033739;

}

function HEX3DHEX3D_2952792057(x_2952792059, y_2952792060) {
  var result_2952792061 = false;

  BeforeRet: {
    var sameObject_2952792068 = false;
    sameObject_2952792068 = x_2952792059 === y_2952792060
    if (sameObject_2952792068) {
    result_2952792061 = true;
    break BeforeRet;
    }
    
    if (!(((x_2952792059).length == (y_2952792060).length))) {
    result_2952792061 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2952792082 = 0;
      var colontmp__2818572862 = 0;
      colontmp__2818572862 = subInt((x_2952792059).length, 1);
      var res_2818572863 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818572863 <= colontmp__2818572862)) break Label3;
            i_2952792082 = res_2818572863;
            if (!(HEX3DHEX3D_2952792006(x_2952792059[chckIndx(i_2952792082, 0, (x_2952792059).length - 1)], y_2952792060[chckIndx(i_2952792082, 0, (y_2952792060).length - 1)]))) {
            result_2952792061 = false;
            break BeforeRet;
            }
            
            res_2818572863 = addInt(res_2818572863, 1);
          }
      };
    };
    result_2952792061 = true;
    break BeforeRet;
  };

  return result_2952792061;

}

function HEX3DHEX3D_2952792006(a_2952792007, b_2952792008) {
  var result_2952792009 = false;

  BeforeRet: {
    if ((a_2952792007 == null)) {
    result_2952792009 = (b_2952792008 == null);
    break BeforeRet;
    }
    
    if ((b_2952792008 == null)) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_2952792007.text, b_2952792008.text))) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    if (!((a_2952792007.node == b_2952792008.node))) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2952792023(a_2952792007.colors, b_2952792008.colors))) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2332033735(a_2952792007.bounds, b_2952792008.bounds))) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    if (!((a_2952792007.render == b_2952792008.render))) {
    result_2952792009 = false;
    break BeforeRet;
    }
    
    result_2952792009 = HEX3DHEX3D_2952792057(a_2952792007.children, b_2952792008.children);
    break BeforeRet;
  };

  return result_2952792009;

}

function getOrDefault_2952792899(t_2952792902, key_2952792903) {
  var result_2952792904 = null;

    var hcHEX60gensym49_2952792907 = [0];
    var indexHEX60gensym49_2952792914 = rawGet_2952792612(t_2952792902, key_2952792903, hcHEX60gensym49_2952792907, 0);
    if ((0 <= indexHEX60gensym49_2952792914)) {
    result_2952792904 = t_2952792902.data[chckIndx(indexHEX60gensym49_2952792914, 0, (t_2952792902.data).length - 1)].Field2;
    }
    

  return result_2952792904;

}

function HEX3DHEX3D_2952792254(s_2952792257, t_2952792258) {
  var result_2952792259 = false;

  BeforeRet: {
    if ((s_2952792257.counter == t_2952792258.counter)) {
    Label1: {
      var keyHEX60gensym43_2952792563 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_2952792564 = null;
      var L_2818572851 = len_2952792310(s_2952792257);
      Label2: {
        var h_2818572853 = 0;
        var colontmp__2818572854 = 0;
        colontmp__2818572854 = (s_2952792257.data).length - 1;
        var res_2818572855 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818572855 <= colontmp__2818572854)) break Label4;
              h_2818572853 = res_2818572855;
              if (isFilled_1308622880(s_2952792257.data[chckIndx(h_2818572853, 0, (s_2952792257.data).length - 1)].Field0)) {
              keyHEX60gensym43_2952792563 = nimCopy(keyHEX60gensym43_2952792563, s_2952792257.data[chckIndx(h_2818572853, 0, (s_2952792257.data).length - 1)].Field1, NTI2181038083);
              valHEX60gensym43_2952792564 = s_2952792257.data[chckIndx(h_2818572853, 0, (s_2952792257.data).length - 1)].Field2;
              if (!(hasKey_2952792605(t_2952792258, keyHEX60gensym43_2952792563))) {
              result_2952792259 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_2952792006(getOrDefault_2952792899(t_2952792258, keyHEX60gensym43_2952792563), valHEX60gensym43_2952792564))) {
              result_2952792259 = false;
              break BeforeRet;
              }
              
              if (!((len_2952792310(s_2952792257) == L_2818572851))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818572855 = addInt(res_2818572855, 1);
            }
        };
      };
    };
    result_2952792259 = true;
    break BeforeRet;
    }
    
  };

  return result_2952792259;

}

function HEX3DHEX3D_2952792187(a_2952792188, b_2952792189) {
  var result_2952792190 = false;

  BeforeRet: {
    if ((a_2952792188 == null)) {
    result_2952792190 = (b_2952792189 == null);
    break BeforeRet;
    }
    
    if ((b_2952792189 == null)) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    if (!((a_2952792188.revision == b_2952792189.revision))) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    if (!((a_2952792188.node == b_2952792189.node))) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_2952792188.selectedNode, b_2952792189.selectedNode))) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2952792254(a_2952792188.replacements, b_2952792189.replacements))) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    if (!((a_2952792188.renderDivisionVertically == b_2952792189.renderDivisionVertically))) {
    result_2952792190 = false;
    break BeforeRet;
    }
    
    result_2952792190 = true;
    break BeforeRet;
  };

  return result_2952792190;

}

function rawGet_2868947023(t_2868947026, key_2868947027, hc_2868947028, hc_2868947028_Idx) {
  var result_2868947029 = 0;

  BeforeRet: {
    hc_2868947028[hc_2868947028_Idx] = hash_2952792184(key_2868947027);
    if ((hc_2868947028[hc_2868947028_Idx] == 0)) {
    hc_2868947028[hc_2868947028_Idx] = 314159265;
    }
    
    if (((t_2868947026.data).length == 0)) {
    result_2868947029 = -1;
    break BeforeRet;
    }
    
    var h_2868947115 = (hc_2868947028[hc_2868947028_Idx] & (t_2868947026.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868947026.data[chckIndx(h_2868947115, 0, (t_2868947026.data).length - 1)].Field0)) break Label2;
          if (((t_2868947026.data[chckIndx(h_2868947115, 0, (t_2868947026.data).length - 1)].Field0 == hc_2868947028[hc_2868947028_Idx]) && HEX3DHEX3D_2952792187(t_2868947026.data[chckIndx(h_2868947115, 0, (t_2868947026.data).length - 1)].Field1, key_2868947027))) {
          result_2868947029 = h_2868947115;
          break BeforeRet;
          }
          
          h_2868947115 = nextTry_1308622883(h_2868947115, (t_2868947026.data).length - 1);
        }
    };
    result_2868947029 = subInt(-1, h_2868947115);
  };

  return result_2868947029;

}

function getOrDefault_2868947013(t_2868947016, key_2868947017, default_2868947018) {
    var Temporary1;

  var result_2868947019 = null;

    var hcHEX60gensym317_2868947022 = [0];
    var indexHEX60gensym317_2868947377 = rawGet_2868947023(t_2868947016, key_2868947017, hcHEX60gensym317_2868947022, 0);
    if ((0 <= indexHEX60gensym317_2868947377)) {
    Temporary1 = t_2868947016.data[chckIndx(indexHEX60gensym317_2868947377, 0, (t_2868947016.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868947018;
    }
    
    result_2868947019 = Temporary1;

  return result_2868947019;

}

function newDoublyLinkedNode_2868947502(value_2868947504) {
  var result_2868947505 = null;

    result_2868947505 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_2868947505.value = nimCopy(result_2868947505.value, value_2868947504, NTI2868904802);

  return result_2868947505;

}

function mustRehash_2868947852(t_2868947854) {
  var result_2868947855 = false;

    if (!((t_2868947854.counter < (t_2868947854.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868947855 = ((mulInt((t_2868947854.data).length, 2) < mulInt(t_2868947854.counter, 3)) || (subInt((t_2868947854.data).length, t_2868947854.counter) < 4));

  return result_2868947855;

}

function rawInsert_2868948545(t_2868948549, data_2868948550, data_2868948550_Idx, key_2868948551, val_2868948552, hc_2868948553, h_2868948554) {
    data_2868948550[data_2868948550_Idx][chckIndx(h_2868948554, 0, (data_2868948550[data_2868948550_Idx]).length - 1)].Field1 = key_2868948551;
    data_2868948550[data_2868948550_Idx][chckIndx(h_2868948554, 0, (data_2868948550[data_2868948550_Idx]).length - 1)].Field2 = val_2868948552;
    data_2868948550[data_2868948550_Idx][chckIndx(h_2868948554, 0, (data_2868948550[data_2868948550_Idx]).length - 1)].Field0 = hc_2868948553;

  
}

function enlarge_2868948109(t_2868948112) {
    var n_2868948115 = [];
    n_2868948115 = new Array(chckRange(mulInt((t_2868948112.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868948112.data).length, 2), 0, 2147483647) ; ++i) { n_2868948115[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2868948112.data; t_2868948112.data = n_2868948115; n_2868948115 = Temporary1;    Label2: {
      var i_2868948213 = 0;
      var colontmp__2818572867 = 0;
      colontmp__2818572867 = (n_2868948115).length - 1;
      var res_2818572868 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572868 <= colontmp__2818572867)) break Label4;
            i_2868948213 = res_2818572868;
            var eh_2868948294 = n_2868948115[chckIndx(i_2868948213, 0, (n_2868948115).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868948294)) {
            var j_2868948298 = (eh_2868948294 & (t_2868948112.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868948112.data[chckIndx(j_2868948298, 0, (t_2868948112.data).length - 1)].Field0)) break Label6;
                  j_2868948298 = nextTry_1308622883(j_2868948298, (t_2868948112.data).length - 1);
                }
            };
            rawInsert_2868948545(t_2868948112, t_2868948112, "data", n_2868948115[chckIndx(i_2868948213, 0, (n_2868948115).length - 1)].Field1, n_2868948115[chckIndx(i_2868948213, 0, (n_2868948115).length - 1)].Field2, eh_2868948294, j_2868948298);
            }
            
            res_2818572868 = addInt(res_2818572868, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868948795(t_2868948798, key_2868948799, hc_2868948800) {
  var result_2868948801 = 0;

  BeforeRet: {
    if (((t_2868948798.data).length == 0)) {
    result_2868948801 = -1;
    break BeforeRet;
    }
    
    var h_2868948886 = (hc_2868948800 & (t_2868948798.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868948798.data[chckIndx(h_2868948886, 0, (t_2868948798.data).length - 1)].Field0)) break Label2;
          if (((t_2868948798.data[chckIndx(h_2868948886, 0, (t_2868948798.data).length - 1)].Field0 == hc_2868948800) && HEX3DHEX3D_2952792187(t_2868948798.data[chckIndx(h_2868948886, 0, (t_2868948798.data).length - 1)].Field1, key_2868948799))) {
          result_2868948801 = h_2868948886;
          break BeforeRet;
          }
          
          h_2868948886 = nextTry_1308622883(h_2868948886, (t_2868948798.data).length - 1);
        }
    };
    result_2868948801 = subInt(-1, h_2868948886);
  };

  return result_2868948801;

}

function HEX5BHEX5DHEX3D_2868947584(t_2868947587, key_2868947588, val_2868947589) {
    if (((t_2868947587.data).length == 0)) {
    var correctSizeHEX60gensym322_2868947672 = slotsNeeded_1308622891(32);
    t_2868947587.counter = 0;
    t_2868947587.data = new Array(chckRange(correctSizeHEX60gensym322_2868947672, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym322_2868947672, 0, 2147483647) ; ++i) { t_2868947587.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2868947677 = [0];
    var index_2868947684 = rawGet_2868947023(t_2868947587, key_2868947588, hc_2868947677, 0);
    if ((0 <= index_2868947684)) {
    t_2868947587.data[chckIndx(index_2868947684, 0, (t_2868947587.data).length - 1)].Field2 = val_2868947589;
    }
    else {
      if (((t_2868947587.data).length == 0)) {
      var correctSizeHEX60gensym325_2868947847 = slotsNeeded_1308622891(32);
      t_2868947587.counter = 0;
      t_2868947587.data = new Array(chckRange(correctSizeHEX60gensym325_2868947847, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_2868947847, 0, 2147483647) ; ++i) { t_2868947587.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2868947852(t_2868947587)) {
      enlarge_2868948109(t_2868947587);
      index_2868947684 = rawGetKnownHC_2868948795(t_2868947587, key_2868947588, hc_2868947677[0]);
      }
      
      index_2868947684 = subInt(-1, index_2868947684);
      rawInsert_2868948545(t_2868947587, t_2868947587, "data", key_2868947588, val_2868947589, hc_2868947677[0], index_2868947684);
      t_2868947587.counter = addInt(t_2868947587.counter, 1);
    }
    

  
}

function prepend_2868949191(L_2868949193, n_2868949194) {
    n_2868949194.prev = null;
    n_2868949194.next = L_2868949193.head;
    if (!((L_2868949193.head == null))) {
    if (!((L_2868949193.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2868949193.head.prev = n_2868949194;
    }
    
    L_2868949193.head = n_2868949194;
    if ((L_2868949193.tail == null)) {
    L_2868949193.tail = n_2868949194;
    }
    

  
}

function rawGet_2868949422(t_2868949425, key_2868949426, hc_2868949427, hc_2868949427_Idx) {
  var result_2868949428 = 0;

  BeforeRet: {
    hc_2868949427[hc_2868949427_Idx] = hash_2952792184(key_2868949426);
    if ((hc_2868949427[hc_2868949427_Idx] == 0)) {
    hc_2868949427[hc_2868949427_Idx] = 314159265;
    }
    
    if (((t_2868949425.data).length == 0)) {
    result_2868949428 = -1;
    break BeforeRet;
    }
    
    var h_2868949514 = (hc_2868949427[hc_2868949427_Idx] & (t_2868949425.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868949425.data[chckIndx(h_2868949514, 0, (t_2868949425.data).length - 1)].Field0)) break Label2;
          if (((t_2868949425.data[chckIndx(h_2868949514, 0, (t_2868949425.data).length - 1)].Field0 == hc_2868949427[hc_2868949427_Idx]) && HEX3DHEX3D_2952792187(t_2868949425.data[chckIndx(h_2868949514, 0, (t_2868949425.data).length - 1)].Field1, key_2868949426))) {
          result_2868949428 = h_2868949514;
          break BeforeRet;
          }
          
          h_2868949514 = nextTry_1828716586(h_2868949514, (t_2868949425.data).length - 1);
        }
    };
    result_2868949428 = subInt(-1, h_2868949514);
  };

  return result_2868949428;

}

function exclImpl_2868949416(s_2868949418, key_2868949419) {
          var Temporary5;

  var result_2868949420 = false;

  BeforeRet: {
    var hc_2868949421 = [0];
    var i_2868949776 = rawGet_2868949422(s_2868949418, key_2868949419, hc_2868949421, 0);
    var msk_2868949780 = (s_2868949418.data).length - 1;
    result_2868949420 = true;
    if ((0 <= i_2868949776)) {
    result_2868949420 = false;
    s_2868949418.counter = subInt(s_2868949418.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2868949786 = i_2868949776;
          var r_2868949787 = j_2868949786;
          s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)].Field0 = 0;
          s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2868949776 = (addInt(i_2868949776, 1) & msk_2868949780);
                if (isEmpty_1828716580(s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2868949787 = (s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)].Field0 & msk_2868949780);
                if (!(((((r_2868949787 <= i_2868949776) && (j_2868949786 < r_2868949787)) || ((j_2868949786 < r_2868949787) && (i_2868949776 < j_2868949786))) || ((i_2868949776 < j_2868949786) && (r_2868949787 <= i_2868949776))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)];
          s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)] = genericReset(s_2868949418.data[chckIndx(i_2868949776, 0, (s_2868949418.data).length - 1)], NTI2868904858);
          s_2868949418.data[chckIndx(j_2868949786, 0, (s_2868949418.data).length - 1)] = nimCopy(s_2868949418.data[chckIndx(j_2868949786, 0, (s_2868949418.data).length - 1)], Temporary5, NTI2868904858);
        }
    };
    }
    
  };

  return result_2868949420;

}

function excl_2868949401(s_2868949403, key_2868949404) {
    var _ = exclImpl_2868949416(s_2868949403, key_2868949404);

  
}

function len_2868950540(t_2868950543) {
  var result_2868950544 = 0;

    result_2868950544 = t_2868950543.counter;

  return result_2868950544;

}

function len_2868950457(cache_2868950460) {
  var result_2868950461 = 0;

    result_2868950461 = len_2868950540(cache_2868950460.table);

  return result_2868950461;

}

function mustRehash_2868950681(t_2868950683) {
  var result_2868950684 = false;

    if (!((t_2868950683.counter < (t_2868950683.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868950684 = ((mulInt((t_2868950683.data).length, 2) < mulInt(t_2868950683.counter, 3)) || (subInt((t_2868950683.data).length, t_2868950683.counter) < 4));

  return result_2868950684;

}

function rawGetKnownHC_2868951287(t_2868951290, key_2868951291, hc_2868951292) {
  var result_2868951293 = 0;

  BeforeRet: {
    if (((t_2868951290.data).length == 0)) {
    result_2868951293 = -1;
    break BeforeRet;
    }
    
    var h_2868951378 = (hc_2868951292 & (t_2868951290.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2868951290.data[chckIndx(h_2868951378, 0, (t_2868951290.data).length - 1)].Field0)) break Label2;
          if (((t_2868951290.data[chckIndx(h_2868951378, 0, (t_2868951290.data).length - 1)].Field0 == hc_2868951292) && HEX3DHEX3D_2952792187(t_2868951290.data[chckIndx(h_2868951378, 0, (t_2868951290.data).length - 1)].Field1, key_2868951291))) {
          result_2868951293 = h_2868951378;
          break BeforeRet;
          }
          
          h_2868951378 = nextTry_1828716586(h_2868951378, (t_2868951290.data).length - 1);
        }
    };
    result_2868951293 = subInt(-1, h_2868951378);
  };

  return result_2868951293;

}

function rawInsert_2868951787(s_2868951789, data_2868951790, data_2868951790_Idx, key_2868951791, hc_2868951792, h_2868951793) {
    if (((data_2868951790[data_2868951790_Idx]).length == 0)) {
    var correctSizeHEX60gensym344_2868951876 = slotsNeeded_1828716594(64);
    s_2868951789.counter = 0;
    s_2868951789.data = new Array(chckRange(correctSizeHEX60gensym344_2868951876, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym344_2868951876, 0, 2147483647) ; ++i) { s_2868951789.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2868951790[data_2868951790_Idx][chckIndx(h_2868951793, 0, (data_2868951790[data_2868951790_Idx]).length - 1)].Field1 = key_2868951791;
    data_2868951790[data_2868951790_Idx][chckIndx(h_2868951793, 0, (data_2868951790[data_2868951790_Idx]).length - 1)].Field0 = hc_2868951792;

  
}

function enlarge_2868950944(s_2868950946) {
    var n_2868950948 = [];
    n_2868950948 = new Array(chckRange(mulInt((s_2868950946.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2868950946.data).length, 2), 0, 2147483647) ; ++i) { n_2868950948[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2868950946.data; s_2868950946.data = n_2868950948; n_2868950948 = Temporary1;    Label2: {
      var i_2868951046 = 0;
      var colontmp__2818572876 = 0;
      colontmp__2818572876 = (n_2868950948).length - 1;
      var res_2818572877 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572877 <= colontmp__2818572876)) break Label4;
            i_2868951046 = res_2818572877;
            if (isFilled_1828716583(n_2868950948[chckIndx(i_2868951046, 0, (n_2868950948).length - 1)].Field0)) {
            var j_2868951622 = subInt(-1, rawGetKnownHC_2868951287(s_2868950946, n_2868950948[chckIndx(i_2868951046, 0, (n_2868950948).length - 1)].Field1, n_2868950948[chckIndx(i_2868951046, 0, (n_2868950948).length - 1)].Field0));
            rawInsert_2868951787(s_2868950946, s_2868950946, "data", n_2868950948[chckIndx(i_2868951046, 0, (n_2868950948).length - 1)].Field1, n_2868950948[chckIndx(i_2868951046, 0, (n_2868950948).length - 1)].Field0, j_2868951622);
            }
            
            res_2818572877 = addInt(res_2818572877, 1);
          }
      };
    };

  
}

function incl_2868950565(s_2868950567, key_2868950568) {
    if (((s_2868950567.data).length == 0)) {
    var correctSizeHEX60gensym337_2868950651 = slotsNeeded_1828716594(64);
    s_2868950567.counter = 0;
    s_2868950567.data = new Array(chckRange(correctSizeHEX60gensym337_2868950651, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_2868950651, 0, 2147483647) ; ++i) { s_2868950567.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2868950666 = [0];
    var index_2868950680 = rawGet_2868949422(s_2868950567, key_2868950568, hc_2868950666, 0);
    if ((index_2868950680 < 0)) {
    if (mustRehash_2868950681(s_2868950567)) {
    enlarge_2868950944(s_2868950567);
    index_2868950680 = rawGetKnownHC_2868951287(s_2868950567, key_2868950568, hc_2868950666[0]);
    }
    
    rawInsert_2868951787(s_2868950567, s_2868950567, "data", key_2868950568, hc_2868950666[0], subInt(-1, index_2868950680));
    s_2868950567.counter = addInt(s_2868950567.counter, 1);
    }
    

  
}

function del_2868952143(t_2868952146, key_2868952147) {
    var hc_2868952148 = [0];
    var i_2868952155 = rawGet_2868947023(t_2868952146, key_2868952147, hc_2868952148, 0);
    var mskHEX60gensym36_2868952159 = (t_2868952146.data).length - 1;
    if ((0 <= i_2868952155)) {
    t_2868952146.counter = subInt(t_2868952146.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868952166 = i_2868952155;
            var rHEX60gensym36_2868952167 = jHEX60gensym36_2868952166;
            t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)].Field0 = 0;
            t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)].Field1 = null;
            t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868952155 = (addInt(i_2868952155, 1) & mskHEX60gensym36_2868952159);
                  if (isEmpty_1308622877(t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868952167 = (t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)].Field0 & mskHEX60gensym36_2868952159);
                  if (!(((((rHEX60gensym36_2868952167 <= i_2868952155) && (jHEX60gensym36_2868952166 < rHEX60gensym36_2868952167)) || ((jHEX60gensym36_2868952166 < rHEX60gensym36_2868952167) && (i_2868952155 < jHEX60gensym36_2868952166))) || ((i_2868952155 < jHEX60gensym36_2868952166) && (rHEX60gensym36_2868952167 <= i_2868952155))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868952146.data[chckIndx(jHEX60gensym36_2868952166, 0, (t_2868952146.data).length - 1)] = nimCopy(t_2868952146.data[chckIndx(jHEX60gensym36_2868952166, 0, (t_2868952146.data).length - 1)], t_2868952146.data[chckIndx(i_2868952155, 0, (t_2868952146.data).length - 1)], NTI2868904838);
          }
      };
    };
    }
    

  
}

function remove_2868952902(L_2868952904, n_2868952905) {
    if ((n_2868952905 == L_2868952904.tail)) {
    L_2868952904.tail = n_2868952905.prev;
    }
    
    if ((n_2868952905 == L_2868952904.head)) {
    L_2868952904.head = n_2868952905.next;
    }
    
    if (!((n_2868952905.next == null))) {
    n_2868952905.next.prev = n_2868952905.prev;
    }
    
    if (!((n_2868952905.prev == null))) {
    n_2868952905.prev.next = n_2868952905.next;
    }
    

  
}

function resize_2868950375(cache_2868950378) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868950378.capacity < len_2868950457(cache_2868950378))) break Label2;
          var t_2868950545 = cache_2868950378.list.tail;
          if (cache_2868950378.recordRemovedKeys) {
          incl_2868950565(cache_2868950378.removedKeys, t_2868950545.value.key);
          }
          
          del_2868952143(cache_2868950378.table, t_2868950545.value.key);
          remove_2868952902(cache_2868950378.list, t_2868950545);
        }
    };

  
}

function addNewNode_2868947494(cache_2868947497, key_2868947498, val_2868947499) {
    var node_2868947520 = newDoublyLinkedNode_2868947502({key: key_2868947498, val: nimCopy(null, val_2868947499, NTI2952790047)});
    HEX5BHEX5DHEX3D_2868947584(cache_2868947497.table, key_2868947498, node_2868947520);
    prepend_2868949191(cache_2868947497.list, node_2868947520);
    if (cache_2868947497.recordRemovedKeys) {
    excl_2868949401(cache_2868947497.removedKeys, key_2868947498);
    }
    
    resize_2868950375(cache_2868947497);

  
}

function HEX5BHEX5DHEX3D_2868946918(cache_2868946921, key_2868946922, val_2868946923) {
    var node_2868947467 = getOrDefault_2868947013(cache_2868946921.table, key_2868946922, null);
    if ((node_2868947467 == null)) {
    addNewNode_2868947494(cache_2868946921, key_2868946922, val_2868946923);
    }
    else {
      node_2868947467.value.val = nimCopy(node_2868947467.value.val, val_2868946923, NTI2952790047);
      remove_2868952902(cache_2868946921.list, node_2868947467);
      prepend_2868949191(cache_2868946921.list, node_2868947467);
    }
    

  
}

function initDoublyLinkedList_2868953358() {
  var result_2868953360 = ({head: null, tail: null});

  return result_2868953360;

}

function initTable_2868953364(initialSize_2868953367) {
  var result_2868953368 = ({data: [], counter: 0});

    var correctSizeHEX60gensym345_2868953370 = slotsNeeded_1308622891(chckRange(initialSize_2868953367, 0, 2147483647));
    result_2868953368.counter = 0;
    result_2868953368.data = new Array(chckRange(correctSizeHEX60gensym345_2868953370, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym345_2868953370, 0, 2147483647) ; ++i) { result_2868953368.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2868953368;

}

function newLruCache_2868953348(capacity_2868953351, recordRemovedKeys_2868953352) {
  var result_2868953353 = null;

    result_2868953353 = {capacity: capacity_2868953351, list: initDoublyLinkedList_2868953358(), table: initTable_2868953364(correctSize_2902458389(capacity_2868953351)), recordRemovedKeys: recordRemovedKeys_2868953352, removedKeys: ({data: [], counter: 0})};

  return result_2868953353;

}

function newCache_2868953343(capacity_2868953346) {
  var result_2868953347 = null;

    result_2868953347 = newLruCache_2868953348(capacity_2868953346, false);

  return result_2868953347;

}

function init_2868953338(result_2868953341, result_2868953341_Idx, capacity_2868953342) {
    result_2868953341[result_2868953341_Idx] = newCache_2868953343(capacity_2868953342);

  
}

function mustRehash_2868954091(t_2868954093) {
  var result_2868954094 = false;

    if (!((t_2868954093.counter < (t_2868954093.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868954094 = ((mulInt((t_2868954093.data).length, 2) < mulInt(t_2868954093.counter, 3)) || (subInt((t_2868954093.data).length, t_2868954093.counter) < 4));

  return result_2868954094;

}

function rawInsert_2868954784(t_2868954788, data_2868954789, data_2868954789_Idx, key_2868954790, val_2868954791, hc_2868954792, h_2868954793) {
    data_2868954789[data_2868954789_Idx][chckIndx(h_2868954793, 0, (data_2868954789[data_2868954789_Idx]).length - 1)].Field1 = key_2868954790;
    data_2868954789[data_2868954789_Idx][chckIndx(h_2868954793, 0, (data_2868954789[data_2868954789_Idx]).length - 1)].Field2 = val_2868954791;
    data_2868954789[data_2868954789_Idx][chckIndx(h_2868954793, 0, (data_2868954789[data_2868954789_Idx]).length - 1)].Field0 = hc_2868954792;

  
}

function enlarge_2868954348(t_2868954351) {
    var n_2868954354 = [];
    n_2868954354 = new Array(chckRange(mulInt((t_2868954351.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868954351.data).length, 2), 0, 2147483647) ; ++i) { n_2868954354[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2868954351.data; t_2868954351.data = n_2868954354; n_2868954354 = Temporary1;    Label2: {
      var i_2868954452 = 0;
      var colontmp__2818572884 = 0;
      colontmp__2818572884 = (n_2868954354).length - 1;
      var res_2818572885 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818572885 <= colontmp__2818572884)) break Label4;
            i_2868954452 = res_2818572885;
            var eh_2868954533 = n_2868954354[chckIndx(i_2868954452, 0, (n_2868954354).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868954533)) {
            var j_2868954537 = (eh_2868954533 & (t_2868954351.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868954351.data[chckIndx(j_2868954537, 0, (t_2868954351.data).length - 1)].Field0)) break Label6;
                  j_2868954537 = nextTry_1308622883(j_2868954537, (t_2868954351.data).length - 1);
                }
            };
            rawInsert_2868954784(t_2868954351, t_2868954351, "data", n_2868954354[chckIndx(i_2868954452, 0, (n_2868954354).length - 1)].Field1, n_2868954354[chckIndx(i_2868954452, 0, (n_2868954354).length - 1)].Field2, eh_2868954533, j_2868954537);
            }
            
            res_2818572885 = addInt(res_2818572885, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868955043(t_2868955046, key_2868955047, hc_2868955048) {
  var result_2868955049 = 0;

  BeforeRet: {
    if (((t_2868955046.data).length == 0)) {
    result_2868955049 = -1;
    break BeforeRet;
    }
    
    var h_2868955134 = (hc_2868955048 & (t_2868955046.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868955046.data[chckIndx(h_2868955134, 0, (t_2868955046.data).length - 1)].Field0)) break Label2;
          if (((t_2868955046.data[chckIndx(h_2868955134, 0, (t_2868955046.data).length - 1)].Field0 == hc_2868955048) && (t_2868955046.data[chckIndx(h_2868955134, 0, (t_2868955046.data).length - 1)].Field1 == key_2868955047))) {
          result_2868955049 = h_2868955134;
          break BeforeRet;
          }
          
          h_2868955134 = nextTry_1308622883(h_2868955134, (t_2868955046.data).length - 1);
        }
    };
    result_2868955049 = subInt(-1, h_2868955134);
  };

  return result_2868955049;

}

function HEX5BHEX5DHEX3D_2868953472(t_2868953475, key_2868953476, val_2868953477) {
    if (((t_2868953475.data).length == 0)) {
    var correctSizeHEX60gensym348_2868953561 = slotsNeeded_1308622891(32);
    t_2868953475.counter = 0;
    t_2868953475.data = new Array(chckRange(correctSizeHEX60gensym348_2868953561, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym348_2868953561, 0, 2147483647) ; ++i) { t_2868953475.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2868953566 = [0];
    var index_2868953923 = rawGet_2868953567(t_2868953475, key_2868953476, hc_2868953566, 0);
    if ((0 <= index_2868953923)) {
    t_2868953475.data[chckIndx(index_2868953923, 0, (t_2868953475.data).length - 1)].Field2 = val_2868953477;
    }
    else {
      if (((t_2868953475.data).length == 0)) {
      var correctSizeHEX60gensym353_2868954086 = slotsNeeded_1308622891(32);
      t_2868953475.counter = 0;
      t_2868953475.data = new Array(chckRange(correctSizeHEX60gensym353_2868954086, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym353_2868954086, 0, 2147483647) ; ++i) { t_2868953475.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2868954091(t_2868953475)) {
      enlarge_2868954348(t_2868953475);
      index_2868953923 = rawGetKnownHC_2868955043(t_2868953475, key_2868953476, hc_2868953566[0]);
      }
      
      index_2868953923 = subInt(-1, index_2868953923);
      rawInsert_2868954784(t_2868953475, t_2868953475, "data", key_2868953476, val_2868953477, hc_2868953566[0], index_2868953923);
      t_2868953475.counter = addInt(t_2868953475.counter, 1);
    }
    

  
}

function formatValue_2869000509(result_2869000511, result_2869000511_Idx, value_2869000512, specifier_2869000513) {
    formatValue_721420459(result_2869000511, result_2869000511_Idx, HEX24_2885692000(value_2869000512), specifier_2869000513);

  
}

function getAstNode_2868957472(ctxHEX60gensym74_2868957473, idHEX60gensym74_2868957474) {
  var result_2868957476 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_2868957477 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_2868957474, NTI2181038083), Field1: 0}, NTI2885681177);
    if (contains_2868904870(ctxHEX60gensym74_2868957473.itemsAstNode, itemHEX60gensym74_2868957477)) {
    result_2868957476 = nimCopy(result_2868957476, some_2852126946(HEX5BHEX5D_2868905437(ctxHEX60gensym74_2868957473.itemsAstNode, itemHEX60gensym74_2868957477)), NTI2852126839);
    break BeforeRet;
    }
    
    result_2868957476 = nimCopy(result_2868957476, none_2852126924(), NTI2852126839);
    break BeforeRet;
  };

  return result_2868957476;

}

function recoverValue_2868904743(ctx_2868904744, key_2868904745) {
      var Temporary1;

    var fmtRes_2869000508 = [mnewString(0)];
    fmtRes_2869000508[0].push.apply(fmtRes_2869000508[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_2869000509(fmtRes_2869000508, 0, key_2868904745, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869000508[0], NTI33554449)]);
      var oHEX60gensym532_2869000519 = getAstNode_2868957472(ctx_2868904744, key_2868904745.Field0.Field0);
      if (!isSome_2852128602(oHEX60gensym532_2869000519)) Temporary1 = false; else {        var node_2869000565 = get_2852128622(oHEX60gensym532_2869000519);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2868912925(ctx_2868904744.queryCacheValue, node_2869000565, errorValue_2952790703());
    }
    

  
}

function recoverType_2868904746(ctx_2868904747, key_2868904748) {
      var Temporary1;

    var fmtRes_2869000642 = [mnewString(0)];
    fmtRes_2869000642[0].push.apply(fmtRes_2869000642[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_2869000509(fmtRes_2869000642, 0, key_2868904748, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869000642[0], NTI33554449)]);
      var oHEX60gensym534_2869000650 = getAstNode_2868957472(ctx_2868904747, key_2868904748.Field0.Field0);
      if (!isSome_2852128602(oHEX60gensym534_2869000650)) Temporary1 = false; else {        var node_2869000696 = get_2852128622(oHEX60gensym534_2869000650);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2868906208(ctx_2868904747.queryCacheType, node_2869000696, errorType_2952790392());
    }
    

  
}

function recoverSymbol_2868904749(ctx_2868904750, key_2868904751) {
      var Temporary1;

    var fmtRes_2869000773 = [mnewString(0)];
    fmtRes_2869000773[0].push.apply(fmtRes_2869000773[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_2869000509(fmtRes_2869000773, 0, key_2868904751, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869000773[0], NTI33554449)]);
      var oHEX60gensym536_2869000781 = getAstNode_2868957472(ctx_2868904750, key_2868904751.Field0.Field0);
      if (!isSome_2852128602(oHEX60gensym536_2869000781)) Temporary1 = false; else {        var node_2869000827 = get_2852128622(oHEX60gensym536_2869000781);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2868917195(ctx_2868904750.queryCacheSymbol, node_2869000827, none_2868966908());
    }
    

  
}

function recoverSymbols_2868904752(ctx_2868904753, key_2868904754) {
      var Temporary1;

    var fmtRes_2869000906 = [mnewString(0)];
    fmtRes_2869000906[0].push.apply(fmtRes_2869000906[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_2869000509(fmtRes_2869000906, 0, key_2868904754, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869000906[0], NTI33554449)]);
      var oHEX60gensym538_2869000914 = getAstNode_2868957472(ctx_2868904753, key_2868904754.Field0.Field0);
      if (!isSome_2852128602(oHEX60gensym538_2869000914)) Temporary1 = false; else {        var node_2869000960 = get_2852128622(oHEX60gensym538_2869000914);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2868921457(ctx_2868904753.queryCacheSymbols, node_2869000960, newTable_2869001024(32));
    }
    

  
}

function initDoublyLinkedList_2868955678() {
  var result_2868955680 = ({head: null, tail: null});

  return result_2868955680;

}

function initTable_2868955684(initialSize_2868955687) {
  var result_2868955688 = ({data: [], counter: 0});

    var correctSizeHEX60gensym361_2868955690 = slotsNeeded_1308622891(chckRange(initialSize_2868955687, 0, 2147483647));
    result_2868955688.counter = 0;
    result_2868955688.data = new Array(chckRange(correctSizeHEX60gensym361_2868955690, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_2868955690, 0, 2147483647) ; ++i) { result_2868955688.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2868955688;

}

function newLruCache_2868955668(capacity_2868955671, recordRemovedKeys_2868955672) {
  var result_2868955673 = null;

    result_2868955673 = {capacity: capacity_2868955671, list: initDoublyLinkedList_2868955678(), table: initTable_2868955684(correctSize_2902458389(capacity_2868955671)), recordRemovedKeys: recordRemovedKeys_2868955672, removedKeys: ({data: [], counter: 0})};

  return result_2868955673;

}

function newCache_2868955663(capacity_2868955666) {
  var result_2868955667 = null;

    result_2868955667 = newLruCache_2868955668(capacity_2868955666, false);

  return result_2868955667;

}

function init_2868955658(result_2868955661, result_2868955661_Idx, capacity_2868955662) {
    result_2868955661[result_2868955661_Idx] = newCache_2868955663(capacity_2868955662);

  
}

function initDoublyLinkedList_2868955776() {
  var result_2868955778 = ({head: null, tail: null});

  return result_2868955778;

}

function initTable_2868955782(initialSize_2868955785) {
  var result_2868955786 = ({data: [], counter: 0});

    var correctSizeHEX60gensym363_2868955788 = slotsNeeded_1308622891(chckRange(initialSize_2868955785, 0, 2147483647));
    result_2868955786.counter = 0;
    result_2868955786.data = new Array(chckRange(correctSizeHEX60gensym363_2868955788, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym363_2868955788, 0, 2147483647) ; ++i) { result_2868955786.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2868955786;

}

function newLruCache_2868955766(capacity_2868955769, recordRemovedKeys_2868955770) {
  var result_2868955771 = null;

    result_2868955771 = {capacity: capacity_2868955769, list: initDoublyLinkedList_2868955776(), table: initTable_2868955782(correctSize_2902458389(capacity_2868955769)), recordRemovedKeys: recordRemovedKeys_2868955770, removedKeys: ({data: [], counter: 0})};

  return result_2868955771;

}

function newCache_2868955761(capacity_2868955764) {
  var result_2868955765 = null;

    result_2868955765 = newLruCache_2868955766(capacity_2868955764, false);

  return result_2868955765;

}

function init_2868955756(result_2868955759, result_2868955759_Idx, capacity_2868955760) {
    result_2868955759[result_2868955759_Idx] = newCache_2868955761(capacity_2868955760);

  
}

function initDoublyLinkedList_2868955874() {
  var result_2868955876 = ({head: null, tail: null});

  return result_2868955876;

}

function initTable_2868955880(initialSize_2868955883) {
  var result_2868955884 = ({data: [], counter: 0});

    var correctSizeHEX60gensym365_2868955886 = slotsNeeded_1308622891(chckRange(initialSize_2868955883, 0, 2147483647));
    result_2868955884.counter = 0;
    result_2868955884.data = new Array(chckRange(correctSizeHEX60gensym365_2868955886, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym365_2868955886, 0, 2147483647) ; ++i) { result_2868955884.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2868955884;

}

function newLruCache_2868955864(capacity_2868955867, recordRemovedKeys_2868955868) {
  var result_2868955869 = null;

    result_2868955869 = {capacity: capacity_2868955867, list: initDoublyLinkedList_2868955874(), table: initTable_2868955880(correctSize_2902458389(capacity_2868955867)), recordRemovedKeys: recordRemovedKeys_2868955868, removedKeys: ({data: [], counter: 0})};

  return result_2868955869;

}

function newCache_2868955859(capacity_2868955862) {
  var result_2868955863 = null;

    result_2868955863 = newLruCache_2868955864(capacity_2868955862, false);

  return result_2868955863;

}

function init_2868955854(result_2868955857, result_2868955857_Idx, capacity_2868955858) {
    result_2868955857[result_2868955857_Idx] = newCache_2868955859(capacity_2868955858);

  
}

function initDoublyLinkedList_2868955972() {
  var result_2868955974 = ({head: null, tail: null});

  return result_2868955974;

}

function initTable_2868955978(initialSize_2868955981) {
  var result_2868955982 = ({data: [], counter: 0});

    var correctSizeHEX60gensym367_2868955984 = slotsNeeded_1308622891(chckRange(initialSize_2868955981, 0, 2147483647));
    result_2868955982.counter = 0;
    result_2868955982.data = new Array(chckRange(correctSizeHEX60gensym367_2868955984, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym367_2868955984, 0, 2147483647) ; ++i) { result_2868955982.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2868955982;

}

function newLruCache_2868955962(capacity_2868955965, recordRemovedKeys_2868955966) {
  var result_2868955967 = null;

    result_2868955967 = {capacity: capacity_2868955965, list: initDoublyLinkedList_2868955972(), table: initTable_2868955978(correctSize_2902458389(capacity_2868955965)), recordRemovedKeys: recordRemovedKeys_2868955966, removedKeys: ({data: [], counter: 0})};

  return result_2868955967;

}

function newCache_2868955957(capacity_2868955960) {
  var result_2868955961 = null;

    result_2868955961 = newLruCache_2868955962(capacity_2868955960, false);

  return result_2868955961;

}

function init_2868955952(result_2868955955, result_2868955955_Idx, capacity_2868955956) {
    result_2868955955[result_2868955955_Idx] = newCache_2868955957(capacity_2868955956);

  
}

function initTable_2868956027(initialSize_2868956030) {
  var result_2868956031 = ({data: [], counter: 0});

    var correctSizeHEX60gensym371_2868956033 = slotsNeeded_1308622891(chckRange(initialSize_2868956030, 0, 2147483647));
    result_2868956031.counter = 0;
    result_2868956031.data = new Array(chckRange(correctSizeHEX60gensym371_2868956033, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym371_2868956033, 0, 2147483647) ; ++i) { result_2868956031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_2868956031;

}

function initTable_2868956047(initialSize_2868956050) {
  var result_2868956051 = ({data: [], counter: 0});

    var correctSizeHEX60gensym373_2868956053 = slotsNeeded_1308622891(chckRange(initialSize_2868956050, 0, 2147483647));
    result_2868956051.counter = 0;
    result_2868956051.data = new Array(chckRange(correctSizeHEX60gensym373_2868956053, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym373_2868956053, 0, 2147483647) ; ++i) { result_2868956051.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_2868956051;

}

function newContext_2868904782() {
    
function HEX3Aanonymous_2868904791(itemHEX60gensym28_2868904792) {
      var result_2868904793 = [];

      BeforeRet: {
        if (!(contains_2868904870(ctx_2868904120.itemsAstNode, itemHEX60gensym28_2868904792))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_2885681364(itemHEX60gensym28_2868904792) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsType.forcedCalls = addInt(ctx_2868904120.statsType.forcedCalls, 1);
        var argHEX60gensym28_2868906143 = HEX5BHEX5D_2868905437(ctx_2868904120.itemsAstNode, itemHEX60gensym28_2868904792);
        var valueHEX60gensym28_2868906144 = computeTypeImpl_2868904755(ctx_2868904120, argHEX60gensym28_2868906143);
        HEX5BHEX5DHEX3D_2868906208(ctx_2868904120.queryCacheType, argHEX60gensym28_2868906143, valueHEX60gensym28_2868906144);
        result_2868904793 = nimCopy(null, fingerprint_2952790618(valueHEX60gensym28_2868906144), NTI2885681176);
        break BeforeRet;
      };

      return result_2868904793;

    }
    
function HEX3Aanonymous_2868912686(itemHEX60gensym29_2868912687) {
      var result_2868912688 = [];

      BeforeRet: {
        if (!(contains_2868904870(ctx_2868904120.itemsAstNode, itemHEX60gensym29_2868912687))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_2885681364(itemHEX60gensym29_2868912687) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsValue.forcedCalls = addInt(ctx_2868904120.statsValue.forcedCalls, 1);
        var argHEX60gensym29_2868912860 = HEX5BHEX5D_2868905437(ctx_2868904120.itemsAstNode, itemHEX60gensym29_2868912687);
        var valueHEX60gensym29_2868912861 = computeValueImpl_2868904758(ctx_2868904120, argHEX60gensym29_2868912860);
        HEX5BHEX5DHEX3D_2868912925(ctx_2868904120.queryCacheValue, argHEX60gensym29_2868912860, valueHEX60gensym29_2868912861);
        result_2868912688 = nimCopy(null, fingerprint_2952790799(valueHEX60gensym29_2868912861), NTI2885681176);
        break BeforeRet;
      };

      return result_2868912688;

    }
    
function HEX3Aanonymous_2868916955(itemHEX60gensym30_2868916956) {
      var result_2868916957 = [];

      BeforeRet: {
        if (!(contains_2868904870(ctx_2868904120.itemsAstNode, itemHEX60gensym30_2868916956))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2885681364(itemHEX60gensym30_2868916956) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsSymbol.forcedCalls = addInt(ctx_2868904120.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_2868917129 = HEX5BHEX5D_2868905437(ctx_2868904120.itemsAstNode, itemHEX60gensym30_2868916956);
        var valueHEX60gensym30_2868917131 = computeSymbolImpl_2868904761(ctx_2868904120, argHEX60gensym30_2868917129);
        HEX5BHEX5DHEX3D_2868917195(ctx_2868904120.queryCacheSymbol, argHEX60gensym30_2868917129, valueHEX60gensym30_2868917131);
        result_2868916957 = nimCopy(null, fingerprint_2952791591(valueHEX60gensym30_2868917131), NTI2885681176);
        break BeforeRet;
      };

      return result_2868916957;

    }
    
function HEX3Aanonymous_2868921216(itemHEX60gensym31_2868921217) {
      var result_2868921218 = [];

      BeforeRet: {
        if (!(contains_2868904870(ctx_2868904120.itemsAstNode, itemHEX60gensym31_2868921217))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2885681364(itemHEX60gensym31_2868921217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsSymbols.forcedCalls = addInt(ctx_2868904120.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_2868921390 = HEX5BHEX5D_2868905437(ctx_2868904120.itemsAstNode, itemHEX60gensym31_2868921217);
        var valueHEX60gensym31_2868921393 = computeSymbolsImpl_2868904765(ctx_2868904120, argHEX60gensym31_2868921390);
        HEX5BHEX5DHEX3D_2868921457(ctx_2868904120.queryCacheSymbols, argHEX60gensym31_2868921390, valueHEX60gensym31_2868921393);
        result_2868921218 = nimCopy(null, fingerprint_2952791252(valueHEX60gensym31_2868921393), NTI2885681176);
        break BeforeRet;
      };

      return result_2868921218;

    }
    
function HEX3Aanonymous_2868925478(itemHEX60gensym32_2868925479) {
      var result_2868925480 = [];

      BeforeRet: {
        if (!(contains_2868925557(ctx_2868904120.itemsSymbol, itemHEX60gensym32_2868925479))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2885681364(itemHEX60gensym32_2868925479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsSymbolType.forcedCalls = addInt(ctx_2868904120.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_2868926815 = HEX5BHEX5D_2868926110(ctx_2868904120.itemsSymbol, itemHEX60gensym32_2868925479);
        var valueHEX60gensym32_2868926816 = computeSymbolTypeImpl_2868904770(ctx_2868904120, argHEX60gensym32_2868926815);
        HEX5BHEX5DHEX3D_2868926880(ctx_2868904120.queryCacheSymbolType, argHEX60gensym32_2868926815, valueHEX60gensym32_2868926816);
        result_2868925480 = nimCopy(null, fingerprint_2952790618(valueHEX60gensym32_2868926816), NTI2885681176);
        break BeforeRet;
      };

      return result_2868925480;

    }
    
function HEX3Aanonymous_2868933351(itemHEX60gensym33_2868933352) {
      var result_2868933353 = [];

      BeforeRet: {
        if (!(contains_2868925557(ctx_2868904120.itemsSymbol, itemHEX60gensym33_2868933352))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2885681364(itemHEX60gensym33_2868933352) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsSymbolValue.forcedCalls = addInt(ctx_2868904120.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_2868933525 = HEX5BHEX5D_2868926110(ctx_2868904120.itemsSymbol, itemHEX60gensym33_2868933352);
        var valueHEX60gensym33_2868933526 = computeSymbolValueImpl_2868904773(ctx_2868904120, argHEX60gensym33_2868933525);
        HEX5BHEX5DHEX3D_2868933590(ctx_2868904120.queryCacheSymbolValue, argHEX60gensym33_2868933525, valueHEX60gensym33_2868933526);
        result_2868933353 = nimCopy(null, fingerprint_2952790799(valueHEX60gensym33_2868933526), NTI2885681176);
        break BeforeRet;
      };

      return result_2868933353;

    }
    
function HEX3Aanonymous_2868937612(itemHEX60gensym34_2868937613) {
      var result_2868937614 = [];

      BeforeRet: {
        if (!(contains_2868937691(ctx_2868904120.itemsFunctionExecutionContext, itemHEX60gensym34_2868937613))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_2885681364(itemHEX60gensym34_2868937613) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsFunctionExecution.forcedCalls = addInt(ctx_2868904120.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_2868938958 = HEX5BHEX5D_2868938244(ctx_2868904120.itemsFunctionExecutionContext, itemHEX60gensym34_2868937613);
        var valueHEX60gensym34_2868938959 = computeFunctionExecutionImpl_2868904776(ctx_2868904120, argHEX60gensym34_2868938958);
        HEX5BHEX5DHEX3D_2868939023(ctx_2868904120.queryCacheFunctionExecution, argHEX60gensym34_2868938958, valueHEX60gensym34_2868938959);
        result_2868937614 = nimCopy(null, [], NTI2868928522);
        break BeforeRet;
      };

      return result_2868937614;

    }
    
function HEX3Aanonymous_2868945507(itemHEX60gensym35_2868945508) {
      var result_2868945509 = [];

      BeforeRet: {
        if (!(contains_2868945586(ctx_2868904120.itemsNodeLayoutInput, itemHEX60gensym35_2868945508))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2885681364(itemHEX60gensym35_2868945508) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2868904120.statsNodeLayout.forcedCalls = addInt(ctx_2868904120.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_2868946853 = HEX5BHEX5D_2868946139(ctx_2868904120.itemsNodeLayoutInput, itemHEX60gensym35_2868945508);
        var valueHEX60gensym35_2868946854 = computeNodeLayoutImpl_2868904779(ctx_2868904120, argHEX60gensym35_2868946853);
        HEX5BHEX5DHEX3D_2868946918(ctx_2868904120.queryCacheNodeLayout, argHEX60gensym35_2868946853, valueHEX60gensym35_2868946854);
        result_2868945509 = nimCopy(null, [], NTI2868933119);
        break BeforeRet;
      };

      return result_2868945509;

    }
    
function HEX3Aanonymous_2868953407(keyHEX60gensym36_2868953408) {
        recoverValue_2868904743(ctx_2868904120, keyHEX60gensym36_2868953408);

      
    }
    
function HEX3Aanonymous_2868955401(keyHEX60gensym37_2868955402) {
        recoverType_2868904746(ctx_2868904120, keyHEX60gensym37_2868955402);

      
    }
    
function HEX3Aanonymous_2868955477(keyHEX60gensym38_2868955478) {
        recoverSymbol_2868904749(ctx_2868904120, keyHEX60gensym38_2868955478);

      
    }
    
function HEX3Aanonymous_2868955553(keyHEX60gensym39_2868955554) {
        recoverSymbols_2868904752(ctx_2868904120, keyHEX60gensym39_2868955554);

      
    }

  var result_2868904783 = null;

  BeforeRet: {
    var ctx_2868904120 = null;
    ctx_2868904120 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_2868904120.depGraph = newDependencyGraph_2885681428();
    ctx_2868904120.dependencyStack = nimCopy(null, [], NTI2868904896);
    ctx_2868904120.updateType = HEX3Aanonymous_2868904791;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateType);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 0, [84,121,112,101]);
    init_2868912622(ctx_2868904120, "queryCacheType", 2000);
    ctx_2868904120.updateValue = HEX3Aanonymous_2868912686;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateValue);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_2868916891(ctx_2868904120, "queryCacheValue", 2000);
    ctx_2868904120.updateSymbol = HEX3Aanonymous_2868916955;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateSymbol);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_2868921152(ctx_2868904120, "queryCacheSymbol", 2000);
    ctx_2868904120.updateSymbols = HEX3Aanonymous_2868921216;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateSymbols);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_2868925414(ctx_2868904120, "queryCacheSymbols", 2000);
    ctx_2868904120.updateSymbolType = HEX3Aanonymous_2868925478;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateSymbolType);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_2868933287(ctx_2868904120, "queryCacheSymbolType", 2000);
    ctx_2868904120.updateSymbolValue = HEX3Aanonymous_2868933351;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateSymbolValue);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_2868937548(ctx_2868904120, "queryCacheSymbolValue", 2000);
    ctx_2868904120.updateFunctionExecution = HEX3Aanonymous_2868937612;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_2868945443(ctx_2868904120, "queryCacheFunctionExecution", 2000);
    ctx_2868904120.updateNodeLayout = HEX3Aanonymous_2868945507;
    ctx_2868904120.updateFunctions.push(ctx_2868904120.updateNodeLayout);;
    HEX5BHEX5DHEX3D_2885681496(ctx_2868904120.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_2868953338(ctx_2868904120, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_2868953472(ctx_2868904120.recoveryFunctions, 1, HEX3Aanonymous_2868953407);
    HEX5BHEX5DHEX3D_2868953472(ctx_2868904120.recoveryFunctions, 0, HEX3Aanonymous_2868955401);
    HEX5BHEX5DHEX3D_2868953472(ctx_2868904120.recoveryFunctions, 2, HEX3Aanonymous_2868955477);
    HEX5BHEX5DHEX3D_2868953472(ctx_2868904120.recoveryFunctions, 3, HEX3Aanonymous_2868955553);
    init_2868955658(ctx_2868904120, "itemsAstNode", 2000);
    init_2868955756(ctx_2868904120, "itemsNodeLayoutInput", 2000);
    init_2868955854(ctx_2868904120, "itemsSymbol", 2000);
    init_2868955952(ctx_2868904120, "itemsFunctionExecutionContext", 2000);
    ctx_2868904120.globalScope = nimCopy(ctx_2868904120.globalScope, initTable_2868956016(32), NTI2952790984);
    ctx_2868904120.enableQueryLogging = false;
    ctx_2868904120.enableExecutionLogging = false;
    ctx_2868904120.diagnosticsPerNode = nimCopy(ctx_2868904120.diagnosticsPerNode, initTable_2868956027(32), NTI2868904261);
    ctx_2868904120.diagnosticsPerQuery = nimCopy(ctx_2868904120.diagnosticsPerQuery, initTable_2868956047(32), NTI2868904278);
    result_2868904783 = ctx_2868904120;
    break BeforeRet;
  };

  return result_2868904783;

}
var executionOutput_2818572340 = [{lines: [], scroll: 0}];
var ctx_2818572341 = newContext_2868904782();
ctx_2818572341.enableLogging = false;
ctx_2818572341.enableQueryLogging = false;

function newFunctionValue_2952790743(impl_2952790744) {
  var result_2952790745 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790745 = nimCopy(result_2952790745, {kind: 4, impl: impl_2952790744, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI2952790023);
    break BeforeRet;
  };

  return result_2952790745;

}

function createBinaryIntOperator_2818572888(operator_2818572892) {
    
function HEX3Aanonymous_2818572894(values_2818572895) {
        var Temporary1;
        var Temporary2;

      var result_2818572896 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2818572895).length < 2)) {
        result_2818572896 = nimCopy(result_2818572896, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        }
        
        if ((!((values_2818572895[chckIndx(0, 0, (values_2818572895).length - 1)].kind == 3)) || !((values_2818572895[chckIndx(1, 0, (values_2818572895).length - 1)].kind == 3)))) {
        result_2818572896 = nimCopy(result_2818572896, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        }
        
        var Temporary1 = values_2818572895[chckIndx(0, 0, (values_2818572895).length - 1)];
        if (ConstSet160[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
        var Temporary2 = values_2818572895[chckIndx(1, 0, (values_2818572895).length - 1)];
        if (ConstSet161[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790022)); }
        result_2818572896 = nimCopy(result_2818572896, {kind: 3, intValue: operator_2818572892(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
        break BeforeRet;
      };

      return result_2818572896;

    }

  var result_2818572893 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2818572893 = nimCopy(result_2818572893, newFunctionValue_2952790743(HEX3Aanonymous_2818572894), NTI2952790023);
    break BeforeRet;
  };

  return result_2818572893;

}

function createUnityIntOperator_2818572908(operator_2818572911) {
    
function HEX3Aanonymous_2818572913(values_2818572914) {
        var Temporary1;

      var result_2818572915 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2818572914).length < 1)) {
        result_2818572915 = nimCopy(result_2818572915, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        }
        
        var value_2818572919 = nimCopy(null, values_2818572914[chckIndx(0, 0, (values_2818572914).length - 1)], NTI2952790023);
        if (!((value_2818572919.kind == 3))) {
        result_2818572915 = nimCopy(result_2818572915, errorValue_2952790703(), NTI2952790023);
        break BeforeRet;
        }
        
        var Temporary1 = value_2818572919;
        if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
        result_2818572915 = nimCopy(result_2818572915, {kind: 3, intValue: operator_2818572911(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
        break BeforeRet;
      };

      return result_2818572915;

    }

  var result_2818572912 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2818572912 = nimCopy(result_2818572912, newFunctionValue_2952790743(HEX3Aanonymous_2818572913), NTI2952790023);
    break BeforeRet;
  };

  return result_2818572912;

}

function stringValue_2952790737(value_2952790738) {
  var result_2952790739 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790739 = nimCopy(result_2952790739, {kind: 2, stringValue: nimCopy(null, value_2952790738, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);

  return result_2952790739;

}

function join_2818573063(a_2818573065, sep_2818573066) {
  var result_2818573067 = [];

    result_2818573067 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2818573082 = 0;
      var x_2818573083 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2818574818 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818574818 < (a_2818573065).length)) break Label3;
            i_2818573082 = i_2818574818;
            x_2818573083 = nimCopy(x_2818573083, a_2818573065[chckIndx(i_2818574818, 0, (a_2818573065).length - 1)], NTI2952790023);
            if ((0 < i_2818573082)) {
            result_2818573067.push.apply(result_2818573067, sep_2818573066);;
            }
            
            result_2818573067.push.apply(result_2818573067, HEX24_2952790759(x_2818573083));;
            i_2818574818 = addInt(i_2818574818, 1);
          }
      };
    };

  return result_2818573067;

}

function delete_2818573101(s_2818573103, s_2818573103_Idx, slice_2818573104) {
    if (!((((slice_2818573104.a < (s_2818573103[s_2818573103_Idx]).length) && (0 <= slice_2818573104.a)) && (slice_2818573104.b < (s_2818573103[s_2818573103_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818573104, NTI805306392), Field1: (s_2818573103[s_2818573103_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818573104.a <= slice_2818573104.b)) {
    var n_2818573151 = addInt(subInt(slice_2818573104.b, slice_2818573104.a), 1);
    var first_2818573152 = slice_2818573104.a;
    s_2818573103[s_2818573103_Idx].splice(first_2818573152, n_2818573151);
    }
    

  
}

function color_2449473918(c_2449473919) {
  var result_2449473920 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473920 = nimCopy(result_2449473920, c_2449473919, NTI2365587459);

  return result_2449473920;

}

function addOutput_2818573084(self_2818573086, line_2818573087, color_2818573088) {
    if ((1500 <= (self_2818573086.lines).length)) {
    delete_2818573101(self_2818573086, "lines", HEX2EHEX2E_805306418(0, subInt((self_2818573086.lines).length, 1000)));
    }
    
    if ((0 < self_2818573086.scroll)) {
    self_2818573086.scroll = addInt(self_2818573086.scroll, 1);
    }
    
    self_2818573086.lines.push({Field0: nimCopy(null, line_2818573087, NTI33554449), Field1: color_2449473918(color_2818573088)});;

  
}

function typeType_2952790447() {
  var result_2952790448 = null;

    result_2952790448 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_2952790448;

}

function typeValue_2952790740(typ_2952790741) {
  var result_2952790742 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790742 = nimCopy(result_2952790742, {kind: 6, typ: typ_2952790741, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI2952790023);

  return result_2952790742;

}

function HEX3Aanonymous_2818572969(a_2818572970, b_2818572971) {
  var result_2818572972 = 0;

    result_2818572972 = addInt(a_2818572970, b_2818572971);

  return result_2818572972;

}

function HEX3Aanonymous_2818572974(a_2818572975, b_2818572976) {
  var result_2818572977 = 0;

    result_2818572977 = subInt(a_2818572975, b_2818572976);

  return result_2818572977;

}

function HEX3Aanonymous_2818572979(a_2818572980, b_2818572981) {
  var result_2818572982 = 0;

    result_2818572982 = mulInt(a_2818572980, b_2818572981);

  return result_2818572982;

}

function HEX3Aanonymous_2818572984(a_2818572985, b_2818572986) {
  var result_2818572987 = 0;

    result_2818572987 = divInt(a_2818572985, b_2818572986);

  return result_2818572987;

}

function HEX3Aanonymous_2818572989(a_2818572990, b_2818572991) {
  var result_2818572992 = 0;

    result_2818572992 = modInt(a_2818572990, b_2818572991);

  return result_2818572992;

}

function HEX3Aanonymous_2818572994(a_2818572995) {
  var result_2818572996 = 0;

    result_2818572996 = negInt(a_2818572995);

  return result_2818572996;

}

function HEX3Aanonymous_2818572998(a_2818572999) {
    var Temporary1;

  var result_2818573000 = 0;

    if (!((a_2818572999 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2818573000 = Temporary1;

  return result_2818573000;

}

function HEX3Aanonymous_2818573002(a_2818573003, b_2818573004) {
    var Temporary1;

  var result_2818573005 = 0;

    if ((a_2818573003 < b_2818573004)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573005 = Temporary1;

  return result_2818573005;

}

function HEX3Aanonymous_2818573007(a_2818573008, b_2818573009) {
    var Temporary1;

  var result_2818573010 = 0;

    if ((a_2818573008 <= b_2818573009)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573010 = Temporary1;

  return result_2818573010;

}

function HEX3Aanonymous_2818573012(a_2818573013, b_2818573014) {
    var Temporary1;

  var result_2818573015 = 0;

    if ((b_2818573014 < a_2818573013)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573015 = Temporary1;

  return result_2818573015;

}

function HEX3Aanonymous_2818573017(a_2818573018, b_2818573019) {
    var Temporary1;

  var result_2818573020 = 0;

    if ((b_2818573019 <= a_2818573018)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573020 = Temporary1;

  return result_2818573020;

}

function HEX3Aanonymous_2818573022(a_2818573023, b_2818573024) {
    var Temporary1;

  var result_2818573025 = 0;

    if ((a_2818573023 == b_2818573024)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573025 = Temporary1;

  return result_2818573025;

}

function HEX3Aanonymous_2818573027(a_2818573028, b_2818573029) {
    var Temporary1;

  var result_2818573030 = 0;

    if (!((a_2818573028 == b_2818573029))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573030 = Temporary1;

  return result_2818573030;

}

function HEX3Aanonymous_2818573032(a_2818573033, b_2818573034) {
    var Temporary1;

  var result_2818573035 = 0;

    if ((!((a_2818573033 == 0)) && !((b_2818573034 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573035 = Temporary1;

  return result_2818573035;

}

function HEX3Aanonymous_2818573037(a_2818573038, b_2818573039) {
    var Temporary1;

  var result_2818573040 = 0;

    if ((!((a_2818573038 == 0)) || !((b_2818573039 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2818573040 = Temporary1;

  return result_2818573040;

}

function HEX3Aanonymous_2818573042(a_2818573043, b_2818573044) {
    var Temporary1;

  var result_2818573045 = 0;

    if ((a_2818573043 < b_2818573044)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2818573044 < a_2818573043)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2818573045 = Temporary1;

  return result_2818573045;

}

function HEX3Aanonymous_2818573047(values_2818573048) {
    var Temporary1;

  var result_2818573049 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2818573048).length < 2)) {
    result_2818573049 = nimCopy(result_2818573049, errorValue_2952790703(), NTI2952790023);
    break BeforeRet;
    }
    
    var leftValue_2818573053 = nimCopy(null, values_2818573048[chckIndx(0, 0, (values_2818573048).length - 1)], NTI2952790023);
    var rightValue_2818573054 = nimCopy(null, values_2818573048[chckIndx(1, 0, (values_2818573048).length - 1)], NTI2952790023);
    if (!((leftValue_2818573053.kind == 2))) {
    result_2818573049 = nimCopy(result_2818573049, errorValue_2952790703(), NTI2952790023);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2818573053;
    if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790022)); }
    result_2818573049 = nimCopy(result_2818573049, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_2952790759(rightValue_2818573054) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2952790023);
    break BeforeRet;
  };

  return result_2818573049;

}

function HEX3Aanonymous_2818573060(values_2818573061) {
  var result_2818573062 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2818573062 = nimCopy(result_2818573062, stringValue_2952790737(join_2818573063(values_2818573061, [])), NTI2952790023);
    addOutput_2818573084(executionOutput_2818572340[0], HEX24_2952790759(result_2818573062), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_2952790759(result_2818573062)]);
    result_2818573062 = nimCopy(result_2818573062, voidValue_2952790732(), NTI2952790023);
    break BeforeRet;
  };

  return result_2818573062;

}

function HEX3Aanonymous_2818573171(values_2818573174) {
  var result_2818573177 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2818573177 = nimCopy(result_2818573177, stringValue_2952790737(join_2818573063(values_2818573174, [])), NTI2952790023);

  return result_2818573177;

}
var typeAddIntInt_2818572928 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var typeSubIntInt_2818572933 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var typeMulIntInt_2818572938 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var typeDivIntInt_2818572943 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var typeModIntInt_2818572948 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var typeAddStringInt_2818572953 = newFunctionType_2952790434([stringType_2952790432(), intType_2952790430()], stringType_2952790432());
var typeNegInt_2818572958 = newFunctionType_2952790434([intType_2952790430()], intType_2952790430());
var typeNotInt_2818572963 = newFunctionType_2952790434([intType_2952790430()], intType_2952790430());
var typeFnIntIntInt_2818572968 = newFunctionType_2952790434([intType_2952790430(), intType_2952790430()], intType_2952790430());
var funcAddIntInt_2818572973 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818572969);
var funcSubIntInt_2818572978 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818572974);
var funcMulIntInt_2818572983 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818572979);
var funcDivIntInt_2818572988 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818572984);
var funcModIntInt_2818572993 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818572989);
var funcNegInt_2818572997 = createUnityIntOperator_2818572908(HEX3Aanonymous_2818572994);
var funcNotInt_2818573001 = createUnityIntOperator_2818572908(HEX3Aanonymous_2818572998);
var funcLessIntInt_2818573006 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573002);
var funcLessEqualIntInt_2818573011 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573007);
var funcGreaterIntInt_2818573016 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573012);
var funcGreaterEqualIntInt_2818573021 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573017);
var funcEqualIntInt_2818573026 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573022);
var funcNotEqualIntInt_2818573031 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573027);
var funcAndIntInt_2818573036 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573032);
var funcOrIntInt_2818573041 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573037);
var funcOrderIntInt_2818573046 = createBinaryIntOperator_2818572888(HEX3Aanonymous_2818573042);
var funcAddStringInt_2818573059 = newFunctionValue_2952790743(HEX3Aanonymous_2818573047);
var funcPrintAny_2818573170 = newFunctionValue_2952790743(HEX3Aanonymous_2818573060);
var funcBuildStringAny_2818573182 = newFunctionValue_2952790743(HEX3Aanonymous_2818573171);
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdAdd_2835349507, {id: nimCopy(null, IdAdd_2835349507, NTI2181038083), name: [43], kind: 1, typ: typeAddIntInt_2818572928, value: nimCopy(null, funcAddIntInt_2818572973, NTI2952790023), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdSub_2835349508, {id: nimCopy(null, IdSub_2835349508, NTI2181038083), name: [45], kind: 1, typ: typeSubIntInt_2818572933, value: nimCopy(null, funcSubIntInt_2818572978, NTI2952790023), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdMul_2835349509, {id: nimCopy(null, IdMul_2835349509, NTI2181038083), name: [42], kind: 1, typ: typeMulIntInt_2818572938, value: nimCopy(null, funcMulIntInt_2818572983, NTI2952790023), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdDiv_2835349510, {id: nimCopy(null, IdDiv_2835349510, NTI2181038083), name: [47], kind: 1, typ: typeDivIntInt_2818572943, value: nimCopy(null, funcDivIntInt_2818572988, NTI2952790023), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdMod_2835349511, {id: nimCopy(null, IdMod_2835349511, NTI2181038083), name: [37], kind: 1, typ: typeModIntInt_2818572948, value: nimCopy(null, funcModIntInt_2818572993, NTI2952790023), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdNegate_2835349512, {id: nimCopy(null, IdNegate_2835349512, NTI2181038083), name: [45], kind: 1, typ: typeNegInt_2818572958, value: nimCopy(null, funcNegInt_2818572997, NTI2952790023), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdNot_2835349513, {id: nimCopy(null, IdNot_2835349513, NTI2181038083), name: [33], kind: 1, typ: typeNotInt_2818572963, value: nimCopy(null, funcNotInt_2818573001, NTI2952790023), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdAppendString_2835349515, {id: nimCopy(null, IdAppendString_2835349515, NTI2181038083), name: [38], kind: 1, typ: typeAddStringInt_2818572953, value: nimCopy(null, funcAddStringInt_2818573059, NTI2952790023), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdLess_2835349519, {id: nimCopy(null, IdLess_2835349519, NTI2181038083), name: [60], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcLessIntInt_2818573006, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdLessEqual_2835349520, {id: nimCopy(null, IdLessEqual_2835349520, NTI2181038083), name: [60,61], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcLessEqualIntInt_2818573011, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdGreater_2835349521, {id: nimCopy(null, IdGreater_2835349521, NTI2181038083), name: [62], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcGreaterIntInt_2818573016, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdGreaterEqual_2835349522, {id: nimCopy(null, IdGreaterEqual_2835349522, NTI2181038083), name: [62,61], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcGreaterEqualIntInt_2818573021, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdEqual_2835349523, {id: nimCopy(null, IdEqual_2835349523, NTI2181038083), name: [61,61], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcEqualIntInt_2818573026, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdNotEqual_2835349524, {id: nimCopy(null, IdNotEqual_2835349524, NTI2181038083), name: [33,61], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcNotEqualIntInt_2818573031, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdAnd_2835349525, {id: nimCopy(null, IdAnd_2835349525, NTI2181038083), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcAndIntInt_2818573036, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdOr_2835349526, {id: nimCopy(null, IdOr_2835349526, NTI2181038083), name: [111,114], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcOrIntInt_2818573041, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdOrder_2835349527, {id: nimCopy(null, IdOrder_2835349527, NTI2181038083), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2818572968, value: nimCopy(null, funcOrderIntInt_2818573046, NTI2952790023), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdInt_2835349516, {id: nimCopy(null, IdInt_2835349516, NTI2181038083), name: [105,110,116], kind: 1, typ: typeType_2952790447(), value: typeValue_2952790740(intType_2952790430()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdString_2835349517, {id: nimCopy(null, IdString_2835349517, NTI2181038083), name: [115,116,114,105,110,103], kind: 1, typ: typeType_2952790447(), value: typeValue_2952790740(stringType_2952790432()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdVoid_2835349518, {id: nimCopy(null, IdVoid_2835349518, NTI2181038083), name: [118,111,105,100], kind: 1, typ: typeType_2952790447(), value: typeValue_2952790740(voidType_2952790428()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdPrint_2835349506, {id: nimCopy(null, IdPrint_2835349506, NTI2181038083), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_2952790434([anyType_2952790449(true)], voidType_2952790428()), value: nimCopy(null, funcPrintAny_2818573170, NTI2952790023), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2869001223(ctx_2818572341.globalScope, IdBuildString_2835349528, {id: nimCopy(null, IdBuildString_2835349528, NTI2181038083), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_2952790434([anyType_2952790449(true)], stringType_2952790432()), value: nimCopy(null, funcBuildStringAny_2818573182, NTI2952790023), node: null, operatorNotation: 0, precedence: 0});
Label160: {
  var symbol_2818574723 = [null];
  var L_2818574810 = len_2869015068(ctx_2818572341.globalScope);
  Label161: {
    var h_2818574812 = 0;
    var colontmp__2818574813 = 0;
    colontmp__2818574813 = (ctx_2818572341.globalScope.data).length - 1;
    var res_2818574814 = 0;
    Label162: {
        Label163: while (true) {
        if (!(res_2818574814 <= colontmp__2818574813)) break Label163;
          h_2818574812 = res_2818574814;
          if (isFilled_1308622880(ctx_2818572341.globalScope.data[chckIndx(h_2818574812, 0, (ctx_2818572341.globalScope.data).length - 1)].Field0)) {
          symbol_2818574723[0] = ctx_2818572341.globalScope.data[chckIndx(h_2818574812, 0, (ctx_2818572341.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_2868973519(ctx_2818572341, symbol_2818574723[0]);
          if (!((len_2869015068(ctx_2818572341.globalScope) == L_2818574810))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2818574814 = addInt(res_2818574814, 1);
        }
    };
  };
};

function isEditing_2818580488(self_2818580489) {
  var result_2818580490 = false;

    result_2818580490 = !((self_2818580489.textEditor == null));

  return result_2818580490;

}

function node_2818574967(editor_2818574968) {
  var result_2818574969 = null;

  BeforeRet: {
    result_2818574969 = editor_2818574968.selectedNode;
    break BeforeRet;
  };

  return result_2818574969;

}

function newSeq_2818576889(len_2818576891) {
  var result_2818576892 = [];

    result_2818576892 = new Array(len_2818576891); for (var i = 0 ; i < len_2818576891 ; ++i) { result_2818576892[i] = null; }
  return result_2818576892;

}

function expandIfNeeded_2818576879(deq_2818576881) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818576881.mask == 0)) {
    var correctSizeHEX60gensym52_2818576883 = nextPowerOfTwo_872415437(4);
    deq_2818576881.mask = subInt(correctSizeHEX60gensym52_2818576883, 1);
    deq_2818576881.data = new Array(chckRange(correctSizeHEX60gensym52_2818576883, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym52_2818576883, 0, 2147483647) ; ++i) { deq_2818576881.data[i] = null; }    }
    
    var cap_2818576888 = addInt(deq_2818576881.mask, 1);
    if ((cap_2818576888 <= deq_2818576881.count)) {
    var n_2818576897 = newSeq_2818576889(chckRange(mulInt(cap_2818576888, 2), 0, 2147483647));
    var i_2818576898 = 0;
    Label1: {
      var x_2818576908 = null;
      var x_2818576908_Idx = 0;
      var i_2818584347 = deq_2818576881.head;
      Label2: {
        var c_2818584349 = 0;
        var i_2818584350 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584350 < deq_2818576881.count)) break Label4;
              c_2818584349 = i_2818584350;
              x_2818576908 = deq_2818576881.data; x_2818576908_Idx = chckIndx(i_2818584347, 0, (deq_2818576881.data).length - 1);
              Temporary5 = x_2818576908[x_2818576908_Idx];
              x_2818576908[x_2818576908_Idx] = genericReset(x_2818576908[x_2818576908_Idx], NTI2852126724);
              n_2818576897[chckIndx(i_2818576898, 0, (n_2818576897).length - 1)] = Temporary5;
              i_2818576898 = addInt(i_2818576898, 1);
              i_2818584347 = (addInt(i_2818584347, 1) & deq_2818576881.mask);
              i_2818584350 = addInt(i_2818584350, 1);
            }
        };
      };
    };
    Temporary6 = n_2818576897;
    n_2818576897 = genericReset(n_2818576897, NTI2818574753);
    deq_2818576881.data = nimCopy(null, Temporary6, NTI2818574753);
    deq_2818576881.mask = subInt(mulInt(cap_2818576888, 2), 1);
    deq_2818576881.tail = deq_2818576881.count;
    deq_2818576881.head = 0;
    }
    

  
}

function addLast_2818576870(deq_2818576872, item_2818576873) {
    expandIfNeeded_2818576879(deq_2818576872);
    deq_2818576872.count = addInt(deq_2818576872.count, 1);
    deq_2818576872.data[chckIndx(deq_2818576872.tail, 0, (deq_2818576872.data).length - 1)] = item_2818576873;
    deq_2818576872.tail = (addInt(deq_2818576872.tail, 1) & deq_2818576872.mask);

  
}

function len_2818577011(deq_2818577013) {
  var result_2818577014 = 0;

    result_2818577014 = deq_2818577013.count;

  return result_2818577014;

}

function popFirst_2818577020(deq_2818577022) {
    var Temporary1;

  var result_2818577023 = null;

    if ((deq_2818577022.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818577022.count = subInt(deq_2818577022.count, 1);
    Temporary1 = deq_2818577022.data[chckIndx(deq_2818577022.head, 0, (deq_2818577022.data).length - 1)];
    deq_2818577022.data[chckIndx(deq_2818577022.head, 0, (deq_2818577022.data).length - 1)] = genericReset(deq_2818577022.data[chckIndx(deq_2818577022.head, 0, (deq_2818577022.data).length - 1)], NTI2852126724);
    result_2818577023 = Temporary1;
    deq_2818577022.head = (addInt(deq_2818577022.head, 1) & deq_2818577022.mask);

  return result_2818577023;

}

function hasKey_2818575050(t_2818575053, key_2818575054) {
  var result_2818575055 = false;

    var hc_2818575056 = [0];
    result_2818575055 = (0 <= rawGet_2986345057(t_2818575053, key_2818575054, hc_2818575056, 0));

  return result_2818575055;

}

function contains_2818575044(t_2818575047, key_2818575048) {
  var result_2818575049 = false;

  BeforeRet: {
    result_2818575049 = hasKey_2818575050(t_2818575047, key_2818575048);
    break BeforeRet;
  };

  return result_2818575049;

}

function HEX5BHEX5D_2818575140(t_2818575143, key_2818575144) {
  var result_2818575145 = null;

    var hcHEX60gensym22_2818575146 = [0];
    var indexHEX60gensym22_2818575153 = rawGet_2986345057(t_2818575143, key_2818575144, hcHEX60gensym22_2818575146, 0);
    if ((0 <= indexHEX60gensym22_2818575153)) {
    result_2818575145 = t_2818575143.data[chckIndx(indexHEX60gensym22_2818575153, 0, (t_2818575143.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2852128536(key_2818575144);
    }
    

  return result_2818575145;

}

function xyHEX3D_2080374823(rect_2080374824, v_2080374825) {
    rect_2080374824.x = v_2080374825.arr[chckIndx(0, 0, (v_2080374825.arr).length - 1)];
    rect_2080374824.y = v_2080374825.arr[chckIndx(1, 0, (v_2080374825.arr).length - 1)];

  
}

function HEX2B_2080375257(aHEX60gensym153_2080375259, bHEX60gensym153_2080375260) {
  var result_2080375261 = ({arr: new Float32Array(2)});

    result_2080375261 = nimCopy(result_2080375261, {arr: new Float32Array([(aHEX60gensym153_2080375259.arr[0] + bHEX60gensym153_2080375260.arr[0]), (aHEX60gensym153_2080375259.arr[1] + bHEX60gensym153_2080375260.arr[1])])}, NTI2097152387);

  return result_2080375261;

}

function wh_2080374828(rect_2080374829) {
  var result_2080374830 = ({arr: new Float32Array(2)});

    result_2080374830 = nimCopy(result_2080374830, vec2_2097152992(rect_2080374829.w, rect_2080374829.h), NTI2097152387);

  return result_2080374830;

}

function absoluteBounds_2952791776(node_2952791777) {
  var result_2952791778 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_2952791777.parent == null)) {
    result_2952791778 = nimCopy(result_2952791778, node_2952791777.bounds, NTI2080374789);
    }
    else {
      result_2952791778 = nimCopy(result_2952791778, rect_2080374808(HEX2B_2080375257(xy_2080374820(absoluteBounds_2952791776(node_2952791777.parent)), xy_2080374820(node_2952791777.bounds)), wh_2080374828(node_2952791777.bounds)), NTI2080374789);
    }
    

  return result_2952791778;

}

function absoluteBounds_2952791796(nodeRange_2952791797) {
  var result_2952791798 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_2952791798[0] = nimCopy(result_2952791798[0], nodeRange_2952791797.parent.children[chckIndx(nodeRange_2952791797.first, 0, (nodeRange_2952791797.parent.children).length - 1)].bounds, NTI2080374789);
    Label1: {
      var i_2952791803 = 0;
      var colontmp__2818584365 = 0;
      colontmp__2818584365 = addInt(nodeRange_2952791797.first, 1);
      var i_2818584366 = colontmp__2818584365;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584366 < nodeRange_2952791797.last)) break Label3;
            i_2952791803 = i_2818584366;
            result_2952791798[0] = nimCopy(result_2952791798[0], or_2080374872(result_2952791798[0], nodeRange_2952791797.parent.children[chckIndx(i_2952791803, 0, (nodeRange_2952791797.parent.children).length - 1)].bounds), NTI2080374789);
            i_2818584366 = addInt(i_2818584366, 1);
          }
      };
    };
    xyHEX3D_2080374823(result_2952791798[0], HEX2B_2080375257(xy_2080374820(result_2952791798[0]), xy_2080374820(absoluteBounds_2952791776(nodeRange_2952791797.parent))));

  return result_2952791798[0];

}

function and_2080374876(a_2080374877, b_2080374878) {
  var result_2080374879 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374879.x = max_33555642(a_2080374877.x, b_2080374878.x);
    result_2080374879.y = max_33555642(a_2080374877.y, b_2080374878.y);
    result_2080374879.w = (min_33555609((a_2080374877.x + a_2080374877.w), (b_2080374878.x + b_2080374878.w)) - result_2080374879.x);
    result_2080374879.h = (min_33555609((a_2080374877.y + a_2080374877.h), (b_2080374878.y + b_2080374878.h)) - result_2080374879.y);

  return result_2080374879;

}

function intersects_2063597753(a_2063597754, b_2063597755) {
  var result_2063597756 = false;

  BeforeRet: {
    var intersection_2063597757 = and_2080374876(a_2063597754, b_2063597755);
    result_2063597756 = ((0.0 < intersection_2063597757.w) && (0.0 < intersection_2063597757.h));
    break BeforeRet;
  };

  return result_2063597756;

}

function subbase_2852126821(node_2852126822) {
  var result_2852126823 = null;

  BeforeRet: {
    if ((node_2852126822.parent.parent == null)) {
    result_2852126823 = node_2852126822;
    break BeforeRet;
    }
    
    result_2852126823 = subbase_2852126821(node_2852126822.parent);
    break BeforeRet;
  };

  return result_2852126823;

}

function getItem_2868963526(selfHEX60gensym78_2868963527) {
  var result_2868963528 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym78_2868963527.id, null_2181038340)) {
    selfHEX60gensym78_2868963527.id = nimCopy(selfHEX60gensym78_2868963527.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym78_2868963527.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2818584377 = nimCopy(null, selfHEX60gensym78_2868963527.id, NTI2181038083);
    var colontmp__2818584378 = 1;
    result_2868963528 = nimCopy(result_2868963528, {Field0: nimCopy(null, colontmp__2818584377, NTI2181038083), Field1: colontmp__2818584378}, NTI2885681177);
    break BeforeRet;
  };

  return result_2868963528;

}

function getOrDefault_2868963777(t_2868963780, key_2868963781, default_2868963782) {
    var Temporary1;

  var result_2868963783 = null;

    var hcHEX60gensym409_2868963786 = [0];
    var indexHEX60gensym409_2868963793 = rawGet_2868945693(t_2868963780, key_2868963781, hcHEX60gensym409_2868963786, 0);
    if ((0 <= indexHEX60gensym409_2868963793)) {
    Temporary1 = t_2868963780.data[chckIndx(indexHEX60gensym409_2868963793, 0, (t_2868963780.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868963782;
    }
    
    result_2868963783 = Temporary1;

  return result_2868963783;

}

function newDoublyLinkedNode_2868963909(value_2868963911) {
  var result_2868963912 = null;

    result_2868963912 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2868963912.value = nimCopy(result_2868963912.value, value_2868963911, NTI2868904071);

  return result_2868963912;

}

function mustRehash_2868964250(t_2868964252) {
  var result_2868964253 = false;

    if (!((t_2868964252.counter < (t_2868964252.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868964253 = ((mulInt((t_2868964252.data).length, 2) < mulInt(t_2868964252.counter, 3)) || (subInt((t_2868964252.data).length, t_2868964252.counter) < 4));

  return result_2868964253;

}

function rawInsert_2868964943(t_2868964947, data_2868964948, data_2868964948_Idx, key_2868964949, val_2868964950, hc_2868964951, h_2868964952) {
    data_2868964948[data_2868964948_Idx][chckIndx(h_2868964952, 0, (data_2868964948[data_2868964948_Idx]).length - 1)].Field1 = nimCopy(data_2868964948[data_2868964948_Idx][chckIndx(h_2868964952, 0, (data_2868964948[data_2868964948_Idx]).length - 1)].Field1, key_2868964949, NTI2885681177);
    data_2868964948[data_2868964948_Idx][chckIndx(h_2868964952, 0, (data_2868964948[data_2868964948_Idx]).length - 1)].Field2 = val_2868964950;
    data_2868964948[data_2868964948_Idx][chckIndx(h_2868964952, 0, (data_2868964948[data_2868964948_Idx]).length - 1)].Field0 = hc_2868964951;

  
}

function enlarge_2868964507(t_2868964510) {
    var n_2868964513 = [];
    n_2868964513 = new Array(chckRange(mulInt((t_2868964510.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868964510.data).length, 2), 0, 2147483647) ; ++i) { n_2868964513[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2868964510.data; t_2868964510.data = n_2868964513; n_2868964513 = Temporary1;    Label2: {
      var i_2868964611 = 0;
      var colontmp__2818584381 = 0;
      colontmp__2818584381 = (n_2868964513).length - 1;
      var res_2818584382 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584382 <= colontmp__2818584381)) break Label4;
            i_2868964611 = res_2818584382;
            var eh_2868964692 = n_2868964513[chckIndx(i_2868964611, 0, (n_2868964513).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868964692)) {
            var j_2868964696 = (eh_2868964692 & (t_2868964510.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868964510.data[chckIndx(j_2868964696, 0, (t_2868964510.data).length - 1)].Field0)) break Label6;
                  j_2868964696 = nextTry_1308622883(j_2868964696, (t_2868964510.data).length - 1);
                }
            };
            rawInsert_2868964943(t_2868964510, t_2868964510, "data", n_2868964513[chckIndx(i_2868964611, 0, (n_2868964513).length - 1)].Field1, n_2868964513[chckIndx(i_2868964611, 0, (n_2868964513).length - 1)].Field2, eh_2868964692, j_2868964696);
            }
            
            res_2818584382 = addInt(res_2818584382, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868965193(t_2868965196, key_2868965197, hc_2868965198) {
  var result_2868965199 = 0;

  BeforeRet: {
    if (((t_2868965196.data).length == 0)) {
    result_2868965199 = -1;
    break BeforeRet;
    }
    
    var h_2868965284 = (hc_2868965198 & (t_2868965196.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868965196.data[chckIndx(h_2868965284, 0, (t_2868965196.data).length - 1)].Field0)) break Label2;
          if (((t_2868965196.data[chckIndx(h_2868965284, 0, (t_2868965196.data).length - 1)].Field0 == hc_2868965198) && HEX3DHEX3D_2868905321(t_2868965196.data[chckIndx(h_2868965284, 0, (t_2868965196.data).length - 1)].Field1, key_2868965197))) {
          result_2868965199 = h_2868965284;
          break BeforeRet;
          }
          
          h_2868965284 = nextTry_1308622883(h_2868965284, (t_2868965196.data).length - 1);
        }
    };
    result_2868965199 = subInt(-1, h_2868965284);
  };

  return result_2868965199;

}

function HEX5BHEX5DHEX3D_2868963982(t_2868963985, key_2868963986, val_2868963987) {
    if (((t_2868963985.data).length == 0)) {
    var correctSizeHEX60gensym412_2868964070 = slotsNeeded_1308622891(32);
    t_2868963985.counter = 0;
    t_2868963985.data = new Array(chckRange(correctSizeHEX60gensym412_2868964070, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym412_2868964070, 0, 2147483647) ; ++i) { t_2868963985.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2868964075 = [0];
    var index_2868964082 = rawGet_2868945693(t_2868963985, key_2868963986, hc_2868964075, 0);
    if ((0 <= index_2868964082)) {
    t_2868963985.data[chckIndx(index_2868964082, 0, (t_2868963985.data).length - 1)].Field2 = val_2868963987;
    }
    else {
      if (((t_2868963985.data).length == 0)) {
      var correctSizeHEX60gensym415_2868964245 = slotsNeeded_1308622891(32);
      t_2868963985.counter = 0;
      t_2868963985.data = new Array(chckRange(correctSizeHEX60gensym415_2868964245, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_2868964245, 0, 2147483647) ; ++i) { t_2868963985.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2868964250(t_2868963985)) {
      enlarge_2868964507(t_2868963985);
      index_2868964082 = rawGetKnownHC_2868965193(t_2868963985, key_2868963986, hc_2868964075[0]);
      }
      
      index_2868964082 = subInt(-1, index_2868964082);
      rawInsert_2868964943(t_2868963985, t_2868963985, "data", key_2868963986, val_2868963987, hc_2868964075[0], index_2868964082);
      t_2868963985.counter = addInt(t_2868963985.counter, 1);
    }
    

  
}

function len_2868965804(t_2868965807) {
  var result_2868965808 = 0;

    result_2868965808 = t_2868965807.counter;

  return result_2868965808;

}

function len_2868965721(cache_2868965724) {
  var result_2868965725 = 0;

    result_2868965725 = len_2868965804(cache_2868965724.table);

  return result_2868965725;

}

function del_2868965896(t_2868965899, key_2868965900) {
    var hc_2868965901 = [0];
    var i_2868965908 = rawGet_2868945693(t_2868965899, key_2868965900, hc_2868965901, 0);
    var mskHEX60gensym36_2868965912 = (t_2868965899.data).length - 1;
    if ((0 <= i_2868965908)) {
    t_2868965899.counter = subInt(t_2868965899.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868965919 = i_2868965908;
            var rHEX60gensym36_2868965920 = jHEX60gensym36_2868965919;
            t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field0 = 0;
            t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field1 = nimCopy(t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868965908 = (addInt(i_2868965908, 1) & mskHEX60gensym36_2868965912);
                  if (isEmpty_1308622877(t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868965920 = (t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)].Field0 & mskHEX60gensym36_2868965912);
                  if (!(((((rHEX60gensym36_2868965920 <= i_2868965908) && (jHEX60gensym36_2868965919 < rHEX60gensym36_2868965920)) || ((jHEX60gensym36_2868965919 < rHEX60gensym36_2868965920) && (i_2868965908 < jHEX60gensym36_2868965919))) || ((i_2868965908 < jHEX60gensym36_2868965919) && (rHEX60gensym36_2868965920 <= i_2868965908))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868965899.data[chckIndx(jHEX60gensym36_2868965919, 0, (t_2868965899.data).length - 1)] = nimCopy(t_2868965899.data[chckIndx(jHEX60gensym36_2868965919, 0, (t_2868965899.data).length - 1)], t_2868965899.data[chckIndx(i_2868965908, 0, (t_2868965899.data).length - 1)], NTI2868904107);
          }
      };
    };
    }
    

  
}

function resize_2868965639(cache_2868965642) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868965642.capacity < len_2868965721(cache_2868965642))) break Label2;
          var t_2868965809 = cache_2868965642.list.tail;
          if (cache_2868965642.recordRemovedKeys) {
          incl_2868960910(cache_2868965642.removedKeys, t_2868965809.value.key);
          }
          
          del_2868965896(cache_2868965642.table, t_2868965809.value.key);
          remove_2868946345(cache_2868965642.list, t_2868965809);
        }
    };

  
}

function addNewNode_2868963901(cache_2868963904, key_2868963905, val_2868963906) {
    var node_2868963918 = newDoublyLinkedNode_2868963909({key: nimCopy(null, key_2868963905, NTI2885681177), val: val_2868963906});
    HEX5BHEX5DHEX3D_2868963982(cache_2868963904.table, key_2868963905, node_2868963918);
    prepend_2868946649(cache_2868963904.list, node_2868963918);
    if (cache_2868963904.recordRemovedKeys) {
    excl_2868959739(cache_2868963904.removedKeys, key_2868963905);
    }
    
    resize_2868965639(cache_2868963904);

  
}

function HEX5BHEX5DHEX3D_2868963682(cache_2868963685, key_2868963686, val_2868963687) {
    var node_2868963874 = getOrDefault_2868963777(cache_2868963685.table, key_2868963686, null);
    if ((node_2868963874 == null)) {
    addNewNode_2868963901(cache_2868963685, key_2868963686, val_2868963687);
    }
    else {
      node_2868963874.value.val = val_2868963687;
      remove_2868946345(cache_2868963685.list, node_2868963874);
      prepend_2868946649(cache_2868963685.list, node_2868963874);
    }
    

  
}

function getOrCreateNodeLayoutInput_2868963535(ctxHEX60gensym79_2868963536, dataHEX60gensym79_2868963537) {
  var result_2868963538 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_2868963547 = null;
      Label2: {
        var node_2818584374 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818584375 = ctxHEX60gensym79_2868963536.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2818584375 == null))) break Label4;
              node_2818584374 = nimCopy(node_2818584374, it_2818584375.value, NTI2868904071);
              existingHEX60gensym79_2868963547 = node_2818584374.val;
              if (((hash_2952792184(existingHEX60gensym79_2868963547) == hash_2952792184(dataHEX60gensym79_2868963537)) && HEX3DHEX3D_2952792187(existingHEX60gensym79_2868963547, dataHEX60gensym79_2868963537))) {
              result_2868963538 = existingHEX60gensym79_2868963547;
              break BeforeRet;
              }
              
              it_2818584375 = it_2818584375.next;
            }
        };
      };
    };
    var itemHEX60gensym79_2868963548 = getItem_2868963526(dataHEX60gensym79_2868963537);
    var keyHEX60gensym79_2868963549 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_2868963548, NTI2885681177), Field1: -1}, NTI2885681180);
    HEX5BHEX5DHEX3D_2885692612(ctxHEX60gensym79_2868963536.depGraph.changed, keyHEX60gensym79_2868963549, ctxHEX60gensym79_2868963536.depGraph.revision);
    HEX5BHEX5DHEX3D_2868963682(ctxHEX60gensym79_2868963536.itemsNodeLayoutInput, itemHEX60gensym79_2868963548, dataHEX60gensym79_2868963537);
    result_2868963538 = dataHEX60gensym79_2868963537;
    break BeforeRet;
  };

  return result_2868963538;

}

function hasKey_2868997535(t_2868997538, key_2868997539) {
  var result_2868997540 = false;

    var hc_2868997541 = [0];
    result_2868997540 = (0 <= rawGet_2868947023(t_2868997538, key_2868997539, hc_2868997541, 0));

  return result_2868997540;

}

function contains_2868997529(t_2868997532, key_2868997533) {
  var result_2868997534 = false;

  BeforeRet: {
    result_2868997534 = hasKey_2868997535(t_2868997532, key_2868997533);
    break BeforeRet;
  };

  return result_2868997534;

}

function contains_2868997435(cache_2868997438, key_2868997439) {
  var result_2868997440 = false;

    result_2868997440 = contains_2868997529(cache_2868997438.table, key_2868997439);

  return result_2868997440;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2097153066(result_2097153068, result_2097153068_Idx, x_2097153069) {
    add_33556386(result_2097153068, result_2097153068_Idx, nimFloatToString_385876087(x_2097153069));

  
}

function HEX24_2097153062(x_2097153064) {
  var result_2097153065 = [[]];

    addFloat_2097153066(result_2097153065, 0, x_2097153064);

  return result_2097153065[0];

}

function HEX24_2080374857(a_2080374858) {
  var result_2080374859 = [];

    result_2080374859 = nimCopy(null, ([40] || []).concat(HEX24_2097153062(a_2080374858.x) || [],[44,32] || [],HEX24_2097153062(a_2080374858.y) || [],[58,32] || [],HEX24_2097153062(a_2080374858.w) || [],[32,120,32] || [],HEX24_2097153062(a_2080374858.h) || [],[41] || []), NTI33554449);

  return result_2080374859;

}

function collectionToString_2952791828(x_2952791830, prefix_2952791831, separator_2952791832, suffix_2952791833) {
  var result_2952791834 = [[]];

    result_2952791834[0] = nimCopy(null, prefix_2952791831, NTI33554449);
    var firstElement_2952791835 = true;
    Label1: {
      var value_2952791839 = [];
      var i_2818584393 = 0;
      var L_2818584394 = (x_2952791830).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584393 < L_2818584394)) break Label3;
            value_2952791839 = x_2952791830[i_2818584393];
            if (firstElement_2952791835) {
            firstElement_2952791835 = false;
            }
            else {
            result_2952791834[0].push.apply(result_2952791834[0], separator_2952791832);;
            }
            
            addQuoted_1593835572(result_2952791834, 0, value_2952791839);
            i_2818584393 += 1;
            if (!(((x_2952791830).length == L_2818584394))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2952791834[0].push.apply(result_2952791834[0], suffix_2952791833);;

  return result_2952791834[0];

}

function HEX24_2952791824(x_2952791826) {
  var result_2952791827 = [];

    result_2952791827 = nimCopy(null, collectionToString_2952791828(x_2952791826, [64,91], [44,32], [93]), NTI33554449);

  return result_2952791827;

}

function HEX24_2952791817(vnode_2952791818) {
  var result_2952791819 = [];

    result_2952791819 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_2952791819.push.apply(result_2952791819, (vnode_2952791818.text || []).concat([39,44,32] || []));;
    result_2952791819.push.apply(result_2952791819, (HEX24_2080374857(vnode_2952791818.bounds) || []).concat([44,32] || []));;
    if (!((vnode_2952791818.node == null))) {
    result_2952791819.push.apply(result_2952791819, (HEX24_2852128727(vnode_2952791818.node) || []).concat([44,32] || []));;
    }
    
    result_2952791819.push.apply(result_2952791819, (HEX24_2952791824(vnode_2952791818.colors) || []).concat([44,32] || []));;
    result_2952791819.push.apply(result_2952791819, [41]);;

  return result_2952791819;

}

function join_2952792122(a_2952792124, sep_2952792125) {
  var result_2952792126 = [];

    result_2952792126 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2952792141 = 0;
      var x_2952792142 = null;
      var i_2818584390 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584390 < (a_2952792124).length)) break Label3;
            i_2952792141 = i_2818584390;
            x_2952792142 = a_2952792124[chckIndx(i_2818584390, 0, (a_2952792124).length - 1)];
            if ((0 < i_2952792141)) {
            result_2952792126.push.apply(result_2952792126, sep_2952792125);;
            }
            
            result_2952792126.push.apply(result_2952792126, HEX24_2952791817(x_2952792142));;
            i_2818584390 = addInt(i_2818584390, 1);
          }
      };
    };

  return result_2952792126;

}

function HEX24_2952792119(nodeLayout_2952792120) {
  var result_2952792121 = [];

    result_2952792121 = nimCopy(null, join_2952792122(nodeLayout_2952792120.root.children, [10]), NTI33554449);

  return result_2952792121;

}

function HEX24_2952792156(input_2952792157) {
  var result_2952792158 = [];

  BeforeRet: {
    var fmtRes_2952792163 = [mnewString(0)];
    fmtRes_2952792163[0].push.apply(fmtRes_2952792163[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_2885681372(fmtRes_2952792163, 0, input_2952792157.id, []);
    fmtRes_2952792163[0].push.apply(fmtRes_2952792163[0], [44,32,110,111,100,101,58,32]);;
    formatValue_2952790851(fmtRes_2952792163, 0, input_2952792157.node, []);
    fmtRes_2952792163[0].push.apply(fmtRes_2952792163[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_2885681372(fmtRes_2952792163, 0, input_2952792157.selectedNode, []);
    fmtRes_2952792163[0].push.apply(fmtRes_2952792163[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2332033544(fmtRes_2952792163, 0, input_2952792157.revision, []);
    fmtRes_2952792163[0].push.apply(fmtRes_2952792163[0], [41]);;
    result_2952792158 = nimCopy(null, fmtRes_2952792163[0], NTI33554449);
    break BeforeRet;
  };

  return result_2952792158;

}

function raiseKeyError_2868997808(key_2868997810) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2952792156(key_2868997810) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2868997714(t_2868997717, key_2868997718) {
  var result_2868997719 = null;
  var result_2868997719_Idx = 0;

    var hcHEX60gensym22_2868997720 = [0];
    var indexHEX60gensym22_2868997727 = rawGet_2868947023(t_2868997717, key_2868997718, hcHEX60gensym22_2868997720, 0);
    if ((0 <= indexHEX60gensym22_2868997727)) {
    result_2868997719 = t_2868997717.data[chckIndx(indexHEX60gensym22_2868997727, 0, (t_2868997717.data).length - 1)]; result_2868997719_Idx = "Field2";
    }
    else {
    raiseKeyError_2868997808(key_2868997718);
    }
    

  return [result_2868997719, result_2868997719_Idx];

}

function HEX5BHEX5D_2868997628(cache_2868997631, key_2868997632) {
    var Temporary1;

  var result_2868997633 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_2868997821 = (Temporary1 = HEX5BHEX5D_2868997714(cache_2868997631.table, key_2868997632), Temporary1)[0][Temporary1[1]];
    result_2868997633 = nimCopy(result_2868997633, node_2868997821.value.val, NTI2952790047);
    remove_2868952902(cache_2868997631.list, node_2868997821);
    prepend_2868949191(cache_2868997631.list, node_2868997821);

  return result_2868997633;

}

function computeNodeLayout_2868997911(ctxHEX60gensym120_2868997912, inputHEX60gensym120_2868997913, recordDependencyHEX60gensym120_2868997914) {
    var Temporary3;
    var Temporary5;

  var result_2868997915 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym120_2868997916 = startTimer_2281701428();
    ctxHEX60gensym120_2868997912.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_2868997912.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_2868998005 = getItem_2868963526(inputHEX60gensym120_2868997913);
    var keyHEX60gensym120_2868998006 = {Field0: nimCopy(null, itemHEX60gensym120_2868998005, NTI2885681177), Field1: 7};
    if (recordDependencyHEX60gensym120_2868997914) {
    recordDependency_2868957436(ctxHEX60gensym120_2868997912, itemHEX60gensym120_2868998005, 7);
    }
    
    var colorHEX60gensym120_2868998007 = nodeColor_2885683637(ctxHEX60gensym120_2868997912.depGraph, keyHEX60gensym120_2868998006, 0);
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2885681166[0] = addInt(currentIndent_2885681166[0], Temporary3);
    try {
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(subInt(currentIndent_2885681166[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_2868998007, NTI2885681182), [44,32], HEX24_2885681364(itemHEX60gensym120_2868998005));
    }
    
    if ((colorHEX60gensym120_2868998007 == 2)) {
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym120_2868997912, keyHEX60gensym120_2868998006);
    if (true) {
    markRed_2885695989(ctxHEX60gensym120_2868997912.depGraph, keyHEX60gensym120_2868998006, []);
    }
    
    if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
      }
      
    }
    
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2952792156(inputHEX60gensym120_2868997913) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868997915 = nimCopy(result_2868997915, HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913), NTI2952790047);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_2868998007 == 0)) {
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2868973807(ctxHEX60gensym120_2868997912, keyHEX60gensym120_2868998006);
    if (true) {
    markRed_2885695989(ctxHEX60gensym120_2868997912.depGraph, keyHEX60gensym120_2868998006, []);
    }
    
    if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
    }
    
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2952792156(inputHEX60gensym120_2868997913) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868997915 = nimCopy(result_2868997915, HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913), NTI2952790047);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2868974822(ctxHEX60gensym120_2868997912, keyHEX60gensym120_2868998006, true) == 0)) {
    if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
    }
    
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2952792156(inputHEX60gensym120_2868997913) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868997915 = nimCopy(result_2868997915, HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913), NTI2952790047);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_2868997912.enableLogging) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2868973807(ctxHEX60gensym120_2868997912, keyHEX60gensym120_2868998006);
      if (true) {
      markRed_2885695989(ctxHEX60gensym120_2868997912.depGraph, keyHEX60gensym120_2868998006, []);
      }
      
      if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
      rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
      }
      
      if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2952792156(inputHEX60gensym120_2868997913) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2868997915 = nimCopy(result_2868997915, HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913), NTI2952790047);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_2868998007 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_2868997912.enableLogging && contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    rawEcho(repeat2_2885681167([124,32], chckRange(currentIndent_2885681166[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2952792119(HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913)));
    }
    
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    force_2868973807(ctxHEX60gensym120_2868997912, keyHEX60gensym120_2868998006);
    }
    
    if (!(contains_2868997435(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2952792156(inputHEX60gensym120_2868997913) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2868997915 = nimCopy(result_2868997915, HEX5BHEX5D_2868997628(ctxHEX60gensym120_2868997912.queryCacheNodeLayout, inputHEX60gensym120_2868997913), NTI2952790047);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_2868997912.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2885681166[0] = subInt(currentIndent_2885681166[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym120_2868997912.dependencyStack).length == 0)) {
    clear_2868977037(ctxHEX60gensym120_2868997912.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym120_2868997912.statsNodeLayout.time = addInt(ctxHEX60gensym120_2868997912.statsNodeLayout.time, elapsed_2281701439(timerHEX60gensym120_2868997916));
    }
  };

  return result_2868997915;

}

function prev_2852126959(node_2852126960) {
  var result_2852126962 = ({val: null});

  BeforeRet: {
    if ((node_2852126960.parent == null)) {
    result_2852126962 = nimCopy(result_2852126962, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    var i_2852126969 = index_2852126828(node_2852126960);
    if ((i_2852126969 <= 0)) {
    result_2852126962 = nimCopy(result_2852126962, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    result_2852126962 = nimCopy(result_2852126962, some_2852126946(HEX5BHEX5D_2852126804(node_2852126960.parent, subInt(i_2852126969, 1))), NTI2852126839);
    break BeforeRet;
  };

  return result_2852126962;

}

function HEX2BHEX3D_2818575681(aHEX60gensym160_2818575683, bHEX60gensym160_2818575684) {
    HEX2BHEX3D_2080374895(aHEX60gensym160_2818575683.arr, 0, bHEX60gensym160_2818575684);
    HEX2BHEX3D_2080374895(aHEX60gensym160_2818575683.arr, 1, bHEX60gensym160_2818575684);

  
}

function bounds_2952792153(nodeLayout_2952792154) {
  var result_2952792155 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_2952792155 = nimCopy(result_2952792155, nodeLayout_2952792154.root.bounds, NTI2080374789);
    break BeforeRet;
  };

  return result_2952792155;

}

function insert_2818575849(x_2818575851, x_2818575851_Idx, item_2818575852, i_2818575853) {
    var it_2818575873 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({arr: new Float32Array(2)})};
    x_2818575851[x_2818575851_Idx] = x_2818575851[x_2818575851_Idx] || []; x_2818575851[x_2818575851_Idx].splice(i_2818575853, 0, it_2818575873);
    x_2818575851[x_2818575851_Idx][chckIndx(i_2818575853, 0, (x_2818575851[x_2818575851_Idx]).length - 1)] = nimCopy(x_2818575851[x_2818575851_Idx][chckIndx(i_2818575853, 0, (x_2818575851[x_2818575851_Idx]).length - 1)], item_2818575852, NTI2818573822);

  
}

function next_2852126913(node_2852126914) {
  var result_2852126919 = ({val: null});

  BeforeRet: {
    if ((node_2852126914.parent == null)) {
    result_2852126919 = nimCopy(result_2852126919, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    var i_2852126943 = index_2852126828(node_2852126914);
    if ((subInt(len_2852126808(node_2852126914.parent), 1) <= i_2852126943)) {
    result_2852126919 = nimCopy(result_2852126919, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    result_2852126919 = nimCopy(result_2852126919, some_2852126946(HEX5BHEX5D_2852126804(node_2852126914.parent, addInt(i_2852126943, 1))), NTI2852126839);
    break BeforeRet;
  };

  return result_2852126919;

}

function HEX5BHEX5D_2818576705(t_2818576708, key_2818576709) {
  var result_2818576710 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2818576711 = [0];
    var indexHEX60gensym20_2818576718 = rawGet_2986345057(t_2818576708, key_2818576709, hcHEX60gensym20_2818576711, 0);
    if ((0 <= indexHEX60gensym20_2818576718)) {
    result_2818576710 = nimCopy(result_2818576710, t_2818576708.data[chckIndx(indexHEX60gensym20_2818576718, 0, (t_2818576708.data).length - 1)].Field2, NTI2952790046);
    }
    else {
    raiseKeyError_2852128536(key_2818576709);
    }
    

  return result_2818576710;

}

function handleSelectedNodeChanged_2818574970(editor_2818574971) {
          
function HEX3Aanonymous_2818575566(t_2818575569) {
            var result_2818575572 = ({arr: new Float32Array(2)});

              result_2818575572 = nimCopy(result_2818575572, measureText_2315255958(gEditor.platform, t_2818575569), NTI2097152387);

            return result_2818575572;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2818575667(t_2818575670) {
            var result_2818575673 = ({arr: new Float32Array(2)});

              result_2818575673 = nimCopy(result_2818575673, measureText_2315255958(gEditor.platform, t_2818575670), NTI2097152387);

            return result_2818575673;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2818576066(t_2818576069) {
            var result_2818576072 = ({arr: new Float32Array(2)});

              result_2818576072 = nimCopy(result_2818576072, measureText_2315255958(gEditor.platform, t_2818576069), NTI2097152387);

            return result_2818576072;

          }
    
function HEX3Aanonymous_2818576556(t_2818576559) {
      var result_2818576562 = ({arr: new Float32Array(2)});

        result_2818576562 = nimCopy(result_2818576562, measureText_2315255958(gEditor.platform, t_2818576559), NTI2097152387);

      return result_2818576562;

    }

  BeforeRet: {
    var node_2818574972 = node_2818574967(editor_2818574971);
    var foundNode_2818574973 = false;
    var i_2818574974 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2818574974 < (editor_2818574971.lastLayouts).length)) break Label2;
          try {
          var layout_2818574984 = nimCopy(null, editor_2818574971.lastLayouts[chckIndx(i_2818574974, 0, (editor_2818574971.lastLayouts).length - 1)].Field0, NTI2952790047);
          var offset_2818574985 = nimCopy(null, editor_2818574971.lastLayouts[chckIndx(i_2818574974, 0, (editor_2818574971.lastLayouts).length - 1)].Field1, NTI2097152387);
          if (contains_2818575044(layout_2818574984.nodeToVisualNode, node_2818574972.id)) {
          var visualNode_2818575243 = nimCopy(null, HEX5BHEX5D_2818575140(layout_2818574984.nodeToVisualNode, node_2818574972.id), NTI2952790046);
          var bounds_2818575325 = HEX2B_2063597727(absoluteBounds_2952791796(visualNode_2818575243), vec2_2097152992(0.0, offset_2818574985.arr[chckIndx(1, 0, (offset_2818574985.arr).length - 1)]));
          if (!(intersects_2063597753(bounds_2818575325, editor_2818574971.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2818575325.y + bounds_2818575325.h) < 100.0)) {
          var subbase_2818575326 = subbase_2852126821(node_2818574972);
          editor_2818574971.previousBaseIndex = index_2852126828(subbase_2818575326);
          editor_2818574971.scrollOffset = (100.0 - ((bounds_2818575325.y + bounds_2818575325.h) - offset_2818574985.arr[chckIndx(1, 0, (offset_2818574985.arr).length - 1)]));
          }
          else {
          if (((editor_2818574971.lastBounds.h - 100.0) < bounds_2818575325.y)) {
          var subbase_2818575405 = subbase_2852126821(node_2818574972);
          editor_2818574971.previousBaseIndex = index_2852126828(subbase_2818575405);
          editor_2818574971.scrollOffset = ((-((bounds_2818575325.y - offset_2818574985.arr[chckIndx(1, 0, (offset_2818574985.arr).length - 1)])) + editor_2818574971.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2818574974 = addInt(i_2818574974, 1);
          }
        }
    };
    i_2818574974 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2818574974 < (editor_2818574971.lastLayouts).length)) break Label5;
          try {
          var layout_2818575492 = nimCopy(null, editor_2818574971.lastLayouts[chckIndx(i_2818574974, 0, (editor_2818574971.lastLayouts).length - 1)].Field0, NTI2952790047);
          var offset_2818575493 = [nimCopy(null, editor_2818574971.lastLayouts[chckIndx(i_2818574974, 0, (editor_2818574971.lastLayouts).length - 1)].Field1, NTI2097152387)];
          var targetNode_2818575494 = node_2818574972;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2818575494 == null)) && !(contains_2818575044(layout_2818575492.nodeToVisualNode, targetNode_2818575494.id)))) break Label8;
                targetNode_2818575494 = targetNode_2818575494.parent;
              }
          };
          if (!((targetNode_2818575494 == null))) {
          var input_2818575573 = getOrCreateNodeLayoutInput_2868963535(ctx_2818572341, {node: subbase_2852126821(targetNode_2818575494), selectedNode: nimCopy(null, node_2818574972.id, NTI2181038083), measureText: HEX3Aanonymous_2818575566, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2818575492 = nimCopy(layout_2818575492, computeNodeLayout_2868997911(ctx_2818572341, input_2818575573, true), NTI2952790047);
          foundNode_2818574973 = true;
          }
          else {
            if (!(node_2818574972.parent == editor_2818574971.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym34_2818575580 = prev_2852126959(node_2818574972);
              if (!isSome_2852128602(oHEX60gensym34_2818575580)) Temporary11 = false; else {                var prev_2818575603 = get_2852128622(oHEX60gensym34_2818575580);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2818575044(layout_2818575492.nodeToVisualNode, prev_2818575603.id);            }          if (Temporary9) {
          var input_2818575674 = getOrCreateNodeLayoutInput_2868963535(ctx_2818572341, {node: subbase_2852126821(node_2818574972), selectedNode: nimCopy(null, node_2818574972.id, NTI2181038083), measureText: HEX3Aanonymous_2818575667, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2818575492 = nimCopy(layout_2818575492, computeNodeLayout_2868997911(ctx_2818572341, input_2818575674, true), NTI2952790047);
          HEX2BHEX3D_2818575681(offset_2818575493[0], bounds_2952792153(layout_2818575492).h);
          insert_2818575849(editor_2818574971, "lastLayouts", {Field0: nimCopy(null, layout_2818575492, NTI2952790047), Field1: nimCopy(null, offset_2818575493[0], NTI2097152387)}, chckRange(addInt(i_2818574974, 1), 0, 2147483647));
          Label12: {
            var k_2818575890 = 0;
            var colontmp__2818584356 = 0;
            var colontmp__2818584357 = 0;
            colontmp__2818584356 = addInt(i_2818574974, 1);
            colontmp__2818584357 = (editor_2818574971.lastLayouts).length - 1;
            var res_2818584358 = colontmp__2818584356;
            Label13: {
                Label14: while (true) {
                if (!(res_2818584358 <= colontmp__2818584357)) break Label14;
                  k_2818575890 = res_2818584358;
                  HEX2BHEX3D_2080374895(editor_2818574971.lastLayouts[chckIndx(k_2818575890, 0, (editor_2818574971.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2818574971.lastLayouts[chckIndx(k_2818575890, 0, (editor_2818574971.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_2952792153(layout_2818575492).h);
                  res_2818584358 = addInt(res_2818584358, 1);
                }
            };
          };
          foundNode_2818574973 = true;
          }
          else {
            if (!(node_2818574972.parent == editor_2818574971.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym40_2818575979 = next_2852126913(node_2818574972);
              if (!isSome_2852128602(oHEX60gensym40_2818575979)) Temporary17 = false; else {                var next_2818576002 = get_2852128622(oHEX60gensym40_2818575979);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2818575044(layout_2818575492.nodeToVisualNode, next_2818576002.id);            }          if (Temporary15) {
          var input_2818576073 = getOrCreateNodeLayoutInput_2868963535(ctx_2818572341, {node: subbase_2852126821(node_2818574972), selectedNode: nimCopy(null, node_2818574972.id, NTI2181038083), measureText: HEX3Aanonymous_2818576066, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2818575492 = nimCopy(layout_2818575492, computeNodeLayout_2868997911(ctx_2818572341, input_2818576073, true), NTI2952790047);
          insert_2818575849(editor_2818574971, "lastLayouts", {Field0: nimCopy(null, layout_2818575492, NTI2952790047), Field1: nimCopy(null, offset_2818575493[0], NTI2097152387)}, chckRange(i_2818574974, 0, 2147483647));
          Label18: {
            var k_2818576086 = 0;
            var colontmp__2818584361 = 0;
            colontmp__2818584361 = (editor_2818574971.lastLayouts).length - 1;
            var res_2818584362 = i_2818574974;
            Label19: {
                Label20: while (true) {
                if (!(res_2818584362 <= colontmp__2818584361)) break Label20;
                  k_2818576086 = res_2818584362;
                  HEX2BHEX3D_2080374895(editor_2818574971.lastLayouts[chckIndx(k_2818576086, 0, (editor_2818574971.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2818574971.lastLayouts[chckIndx(k_2818576086, 0, (editor_2818574971.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_2952792153(layout_2818575492).h);
                  res_2818584362 = addInt(res_2818584362, 1);
                }
            };
          };
          foundNode_2818574973 = true;
          }
          }}
          if ((foundNode_2818574973 && contains_2818575044(layout_2818575492.nodeToVisualNode, node_2818574972.id))) {
          var visualNode_2818576314 = nimCopy(null, HEX5BHEX5D_2818575140(layout_2818575492.nodeToVisualNode, node_2818574972.id), NTI2952790046);
          var bounds_2818576396 = HEX2B_2063597727(absoluteBounds_2952791796(visualNode_2818576314), vec2_2097152992(0.0, offset_2818575493[0].arr[chckIndx(1, 0, (offset_2818575493[0].arr).length - 1)]));
          if (!(intersects_2063597753(bounds_2818576396, rect_2080374802(0.0, 0.0, editor_2818574971.lastBounds.w, editor_2818574971.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2818576396.y + bounds_2818576396.h) < 100.0)) {
          var subbase_2818576397 = subbase_2852126821(node_2818574972);
          editor_2818574971.previousBaseIndex = index_2852126828(subbase_2818576397);
          editor_2818574971.scrollOffset = (100.0 - ((bounds_2818576396.y + bounds_2818576396.h) - offset_2818575493[0].arr[chckIndx(1, 0, (offset_2818575493[0].arr).length - 1)]));
          }
          else {
          if (((editor_2818574971.lastBounds.h - 100.0) < bounds_2818576396.y)) {
          var subbase_2818576476 = subbase_2852126821(node_2818574972);
          editor_2818574971.previousBaseIndex = index_2852126828(subbase_2818576476);
          editor_2818574971.scrollOffset = ((-((bounds_2818576396.y - offset_2818575493[0].arr[chckIndx(1, 0, (offset_2818575493[0].arr).length - 1)])) + editor_2818574971.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2818574974 = addInt(i_2818574974, 1);
          }
        }
    };
    var subbase_2818576555 = subbase_2852126821(node_2818574972);
    var input_2818576563 = getOrCreateNodeLayoutInput_2868963535(ctx_2818572341, {node: subbase_2818576555, selectedNode: nimCopy(null, node_2818574972.id, NTI2181038083), measureText: HEX3Aanonymous_2818576556, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2818576564 = computeNodeLayout_2868997911(ctx_2818572341, input_2818576563, true);
    if (contains_2818575044(layout_2818576564.nodeToVisualNode, node_2818574972.id)) {
    var visualNode_2818576799 = HEX5BHEX5D_2818576705(layout_2818576564.nodeToVisualNode, node_2818574972.id);
    var bounds_2818576800 = absoluteBounds_2952791796(visualNode_2818576799);
    editor_2818574971.previousBaseIndex = index_2852126828(subbase_2818576555);
    editor_2818574971.scrollOffset = (-(bounds_2818576800.y) + (editor_2818574971.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2818576846(editor_2818576847, node_2818576848) {
  BeforeRet: {
    if ((node_2818576848 == editor_2818576847.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2818576848.parent == null) || !((base_2852126814(node_2818576848) == editor_2818576847.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2818576847.selectedNode == null))) {
    addLast_2818576870(editor_2818576847.selectionHistory, editor_2818576847.selectedNode);
    }
    
    if ((100 < len_2818577011(editor_2818576847.selectionHistory))) {
    var _ = popFirst_2818577020(editor_2818576847.selectionHistory);
    }
    
    editor_2818576847.selectedNode = node_2818576848;
    handleSelectedNodeChanged_2818574970(editor_2818576847);
  };

  
}

function moveCursor_2818584245(self_2818584246, direction_2818584247) {
  BeforeRet: {
    if ((direction_2818584247 < 0)) {
    if (isEditing_2818580488(self_2818584246)) {
    break BeforeRet;
    }
    
    var index_2818584248 = index_2852126828(node_2818574967(self_2818584246));
    if ((0 < index_2818584248)) {
    nodeHEX3D_2818576846(self_2818584246, HEX5BHEX5D_2852126804(node_2818574967(self_2818584246).parent, subInt(index_2818584248, 1)));
    }
    
    }
    else {
      if (isEditing_2818580488(self_2818584246)) {
      break BeforeRet;
      }
      
      var index_2818584249 = index_2852126828(node_2818574967(self_2818584246));
      if (((0 <= index_2818584249) && (index_2818584249 < subInt(len_2852126808(node_2818574967(self_2818584246).parent), 1)))) {
      nodeHEX3D_2818576846(self_2818584246, HEX5BHEX5D_2852126804(node_2818574967(self_2818584246).parent, addInt(index_2818584249, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2818584241(self_2818584301, direction_2818584302) {
    moveCursor_2818584245(self_2818584301, direction_2818584302);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2818584241(this, direction_));};

function moveCursorUp_2818584403(self_2818584404) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818584404)) {
    break BeforeRet;
    }
    
    if (((!((node_2818574967(self_2818584404) == self_2818584404.document.rootNode)) && !((node_2818574967(self_2818584404).parent == self_2818584404.document.rootNode))) && !((node_2818574967(self_2818584404).parent == null)))) {
    nodeHEX3D_2818576846(self_2818584404, node_2818574967(self_2818584404).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2818584399(self_2818584444) {
    moveCursorUp_2818584403(self_2818584444);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2818584399(this));};

function moveCursorDown_2818584465(self_2818584466) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818584466)) {
    break BeforeRet;
    }
    
    if ((0 < len_2852126808(node_2818574967(self_2818584466)))) {
    nodeHEX3D_2818576846(self_2818584466, HEX5BHEX5D_2852126804(node_2818574967(self_2818584466), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2818584461(self_2818584494) {
    moveCursorDown_2818584465(self_2818584494);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2818584461(this));};

function getNextChild_2818574962(document_2818574963, node_2818574964, min_2818574965) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2818581122 = ({val: null});

  BeforeRet: {
    if ((len_2852126808(node_2818574964) == 0)) {
    result_2818581122 = nimCopy(result_2818581122, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2818581125 = node_2818574964;
      var pos_2818581126 = 0;
      var _ = pos_2818581126;
      if ((expr_2818581125.kind == 8)) {
        var oHEX60gensym128_2818581135 = computeSymbol_2868983552(ctx_2818572341, HEX5BHEX5D_2852126804(node_2818574964, 0), true);
        if (!isSome_2952791605(oHEX60gensym128_2818581135)) Temporary3 = false; else {          var sym_2818581158 = get_2952791625(oHEX60gensym128_2818581135);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2818581158.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2818581158;
      if (ConstSet164[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2852126808(node_2818574964) == 3)) {
        if ((min_2818574965 == 0)) {
        result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 2)), NTI2852126839);
        break BeforeRet;
        }
        
        if ((min_2818574965 == 1)) {
        result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 0)), NTI2852126839);
        break BeforeRet;
        }
        
        if ((min_2818574965 == 2)) {
        result_2818581122 = nimCopy(result_2818581122, none_2852126924(), NTI2852126839);
        break BeforeRet;
        }
        
        result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 1)), NTI2852126839);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2852126808(node_2818574964) == 2)) {
        if ((min_2818574965 == 0)) {
        result_2818581122 = nimCopy(result_2818581122, none_2852126924(), NTI2852126839);
        break BeforeRet;
        }
        
        if ((min_2818574965 == 1)) {
        result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 0)), NTI2852126839);
        break BeforeRet;
        }
        
        result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 1)), NTI2852126839);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2818574965 < 0)) {
    result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, 0)), NTI2852126839);
    break BeforeRet;
    }
    
    if ((subInt(len_2852126808(node_2818574964), 1) <= min_2818574965)) {
    result_2818581122 = nimCopy(result_2818581122, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    result_2818581122 = nimCopy(result_2818581122, some_2852126946(HEX5BHEX5D_2852126804(node_2818574964, addInt(min_2818574965, 1))), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581122;

}

function shouldSelectNode_2818581190(node_2818581191) {
  var result_2818581192 = false;

  BeforeRet: {
    switch (node_2818581191.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2818581192 = (len_2852126808(node_2818581191) == 0);
      break BeforeRet;
      break;
    default: 
      result_2818581192 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2818581192;

}

function moveCursorNext_2818584515(self_2818584516) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2818580488(self_2818584516)) {
    break BeforeRet;
    }
    
    var node_2818584517 = node_2818574967(self_2818584516);
    Label1: {
      var __2818584518 = 0;
      var n_2818584519 = null;
      var colontmp__2818584568 = null;
      colontmp__2818584568 = node_2818574967(self_2818584516);
      var n_2818584570 = colontmp__2818584568;
      var i_2818584571 = 0;
      var gotoChild_2818584572 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2818584570 == null))) break Label3;
            if ((gotoChild_2818584572 && (0 < len_2852126808(n_2818584570)))) {
            n_2818584570 = get_2852128622(getNextChild_2818574962(self_2818584516.document, n_2818584570, -1));
            __2818584518 = i_2818584571;
            n_2818584519 = n_2818584570;
            Label4: {
              if (!(shouldSelectNode_2818581190(n_2818584519))) {
              break Label4;
              }
              
              if (!((n_2818584519 == node_2818574967(self_2818584516)))) {
              nodeHEX3D_2818576846(self_2818584516, n_2818584519);
              break Label1;
              }
              
            };
            gotoChild_2818584572 = true;
            }
            else {
              if (!!((n_2818584570.parent == null))) Temporary5 = false; else {                var oHEX60gensym85_2818584574 = getNextChild_2818574962(self_2818584516.document, n_2818584570.parent, index_2852126828(n_2818584570));
                if (!isSome_2852128602(oHEX60gensym85_2818584574)) Temporary6 = false; else {                  var ne_2818584575 = get_2852128622(oHEX60gensym85_2818584574);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2818584570 = ne_2818584575;
            __2818584518 = i_2818584571;
            n_2818584519 = n_2818584570;
            Label7: {
              if (!(shouldSelectNode_2818581190(n_2818584519))) {
              break Label7;
              }
              
              if (!((n_2818584519 == node_2818574967(self_2818584516)))) {
              nodeHEX3D_2818576846(self_2818584516, n_2818584519);
              break Label1;
              }
              
            };
            gotoChild_2818584572 = true;
            }
            else {
              gotoChild_2818584572 = false;
              n_2818584570 = n_2818584570.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2818584511(self_2818584551) {
    moveCursorNext_2818584515(self_2818584551);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2818584511(this));};

function getPrevChild_2818574957(document_2818574958, node_2818574959, max_2818574960) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2818581272 = ({val: null});

  BeforeRet: {
    if ((len_2852126808(node_2818574959) == 0)) {
    result_2818581272 = nimCopy(result_2818581272, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2818581275 = node_2818574959;
      var pos_2818581276 = 0;
      var _ = pos_2818581276;
      if ((expr_2818581275.kind == 8)) {
        var oHEX60gensym137_2818581285 = computeSymbol_2868983552(ctx_2818572341, HEX5BHEX5D_2852126804(node_2818574959, 0), true);
        if (!isSome_2952791605(oHEX60gensym137_2818581285)) Temporary3 = false; else {          var sym_2818581308 = get_2952791625(oHEX60gensym137_2818581285);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2818581308.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2818581308;
      if (ConstSet165[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790025)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2852126808(node_2818574959) == 3)) {
        if ((max_2818574960 == 0)) {
        result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, 1)), NTI2852126839);
        break BeforeRet;
        }
        
        if ((max_2818574960 == 1)) {
        result_2818581272 = nimCopy(result_2818581272, none_2852126924(), NTI2852126839);
        break BeforeRet;
        }
        
        if ((max_2818574960 == 2)) {
        result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, 0)), NTI2852126839);
        break BeforeRet;
        }
        
        result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, 2)), NTI2852126839);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2852126808(node_2818574959) == 2)) {
        if ((max_2818574960 == 0)) {
        result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, 1)), NTI2852126839);
        break BeforeRet;
        }
        
        if ((max_2818574960 == 1)) {
        result_2818581272 = nimCopy(result_2818581272, none_2852126924(), NTI2852126839);
        break BeforeRet;
        }
        
        result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, 0)), NTI2852126839);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2818574960 < 0)) {
    result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, subInt(len_2852126808(node_2818574959), 1))), NTI2852126839);
    break BeforeRet;
    }
    else {
    if ((max_2818574960 == 0)) {
    result_2818581272 = nimCopy(result_2818581272, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    }
    result_2818581272 = nimCopy(result_2818581272, some_2852126946(HEX5BHEX5D_2852126804(node_2818574959, subInt(max_2818574960, 1))), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581272;

}

function moveCursorPrev_2818584583(self_2818584584) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2818580488(self_2818584584)) {
    break BeforeRet;
    }
    
    var node_2818584585 = node_2818574967(self_2818584584);
    Label1: {
      var n_2818584586 = null;
      var colontmp__2818584635 = null;
      colontmp__2818584635 = node_2818574967(self_2818584584);
      var gotoChild_2818584637 = false;
      var n_2818584638 = colontmp__2818584635;
      Label2: {
          Label3: while (true) {
          if (!!((n_2818584638 == null))) break Label3;
            if ((gotoChild_2818584637 && (0 < len_2852126808(n_2818584638)))) {
            n_2818584638 = get_2852128622(getPrevChild_2818574957(self_2818584584.document, n_2818584638, -1));
            gotoChild_2818584637 = true;
            }
            else {
              if (!!((n_2818584638.parent == null))) Temporary4 = false; else {                var oHEX60gensym89_2818584640 = getPrevChild_2818574957(self_2818584584.document, n_2818584638.parent, index_2852126828(n_2818584638));
                if (!isSome_2852128602(oHEX60gensym89_2818584640)) Temporary5 = false; else {                  var ne_2818584641 = get_2852128622(oHEX60gensym89_2818584640);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2818584586 = n_2818584638;
            Label6: {
              if (!(shouldSelectNode_2818581190(n_2818584586))) {
              break Label6;
              }
              
              if (!((n_2818584586 == node_2818574967(self_2818584584)))) {
              nodeHEX3D_2818576846(self_2818584584, n_2818584586);
              break Label1;
              }
              
            };
            n_2818584638 = ne_2818584641;
            gotoChild_2818584637 = true;
            }
            else {
              n_2818584586 = n_2818584638;
              Label7: {
                if (!(shouldSelectNode_2818581190(n_2818584586))) {
                break Label7;
                }
                
                if (!((n_2818584586 == node_2818574967(self_2818584584)))) {
                nodeHEX3D_2818576846(self_2818584584, n_2818584586);
                break Label1;
                }
                
              };
              gotoChild_2818584637 = false;
              n_2818584638 = n_2818584638.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2818584579(self_2818584618) {
    moveCursorPrev_2818584583(self_2818584618);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2818584579(this));};

function getNextLine_2818581356(document_2818581357, node_2818581358) {
              var Temporary6;
              var Temporary7;

  var result_2818581360 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2818581361 = 0;
      var n_2818581362 = null;
      var n_2818584722 = node_2818581358;
      var idx_2818584723 = -1;
      var i_2818584724 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2818584723 == -1)) {
            __2818581361 = i_2818584724;
            n_2818581362 = n_2818584722;
            Label5: {
              if (((n_2818581362 == node_2818581358) || (n_2818581362.parent == null))) {
              break Label5;
              }
              
              if ((n_2818581362.parent.kind == 7)) {
              if (((n_2818581362.kind == 7) && (len_2852126808(n_2818581362) == 0))) {
              result_2818581360 = nimCopy(result_2818581360, some_2852126946(n_2818581362), NTI2852126839);
              break BeforeRet;
              }
              else {
              if (!((n_2818581362.kind == 7))) {
              result_2818581360 = nimCopy(result_2818581360, some_2852126946(n_2818581362), NTI2852126839);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2818581362.parent.kind == 9)) {
              var isElse_2818581397 = ((n_2818581362 == last_2852126978(n_2818581362.parent)) && !((modInt(len_2852126808(n_2818581362.parent), 2) == 0)));
              var isCondition_2818581398 = (!(isElse_2818581397) && (modInt(index_2852126828(n_2818581362), 2) == 0));
              if (((n_2818581362.kind == 7) && (len_2852126808(n_2818581362) == 0))) {
              result_2818581360 = nimCopy(result_2818581360, some_2852126946(n_2818581362), NTI2852126839);
              break BeforeRet;
              }
              else {
              if ((!((n_2818581362.kind == 7)) && (!(isCondition_2818581398) || (0 < index_2852126828(n_2818581362))))) {
              result_2818581360 = nimCopy(result_2818581360, some_2852126946(n_2818581362), NTI2852126839);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2818584723, 1) < len_2852126808(n_2818584722))) {
            n_2818584722 = HEX5BHEX5D_2852126804(n_2818584722, addInt(idx_2818584723, 1));
            idx_2818584723 = -1;
            }
            else {
              var oHEX60gensym74_2818584726 = next_2852126913(n_2818584722);
              if (!isSome_2852128602(oHEX60gensym74_2818584726)) Temporary7 = false; else {                var ne_2818584727 = get_2852128622(oHEX60gensym74_2818584726);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2818584722 == null));              }            if (Temporary6) {
            n_2818584722 = ne_2818584727;
            idx_2818584723 = -1;
            }
            else {
            if (((!((n_2818584722.parent == null)) && !((n_2818584722 == null))) && !((n_2818584722.parent == null)))) {
            idx_2818584723 = index_2852126828(n_2818584722);
            n_2818584722 = n_2818584722.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2818584724 = addInt(i_2818584724, 1);
            }
          }
      };
    };
    result_2818581360 = nimCopy(result_2818581360, none_2852126924(), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581360;

}

function moveCursorNextLine_2818584649(self_2818584650) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2818580488(self_2818584650)) {
    break BeforeRet;
    }
    
      var oHEX60gensym593_2818584653 = getNextLine_2818581356(self_2818584650.document, node_2818574967(self_2818584650));
      if (!isSome_2852128602(oHEX60gensym593_2818584653)) Temporary1 = false; else {        var next_2818584676 = get_2852128622(oHEX60gensym593_2818584653);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2818576846(self_2818584650, next_2818584676);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2818584645(self_2818584704) {
    moveCursorNextLine_2818584649(self_2818584704);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2818584645(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2818581415(document_2818581416, node_2818581417) {
              var Temporary4;

  var result_2818581419 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2818581420 = null;
      var idx_2818584807 = 0;
      var n_2818584808 = node_2818581417;
      Label2: {
          Label3: while (true) {
          if (!!((n_2818584808 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818584808), 1)), subInt(idx_2818584807, 1))) {
            n_2818584808 = HEX5BHEX5D_2852126804(n_2818584808, subInt(idx_2818584807, 1));
            idx_2818584807 = len_2852126808(n_2818584808);
            }
            else {
              var oHEX60gensym93_2818584810 = prev_2852126959(n_2818584808);
              if (!isSome_2852128602(oHEX60gensym93_2818584810)) Temporary4 = false; else {                var ne_2818584811 = get_2852128622(oHEX60gensym93_2818584810);
                Temporary4 = true;              }            if (Temporary4) {
            n_2818581420 = n_2818584808;
            Label5: {
              if (((n_2818581420 == node_2818581417) || (n_2818581420.parent == null))) {
              break Label5;
              }
              
              if ((n_2818581420.parent.kind == 7)) {
              if (((n_2818581420.kind == 7) && (len_2852126808(n_2818581420) == 0))) {
              result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
              break BeforeRet;
              }
              else {
              if (!((n_2818581420.kind == 7))) {
              result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2818581420.parent.kind == 9)) {
              var isElse_2818581455 = ((n_2818581420 == last_2852126978(n_2818581420.parent)) && !((modInt(len_2852126808(n_2818581420.parent), 2) == 0)));
              var isCondition_2818581456 = (!(isElse_2818581455) && (modInt(index_2852126828(n_2818581420), 2) == 0));
              if (((n_2818581420.kind == 7) && (len_2852126808(n_2818581420) == 0))) {
              result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
              break BeforeRet;
              }
              else {
              if ((!((n_2818581420.kind == 7)) && (!(isCondition_2818581456) || (0 < index_2852126828(n_2818581420))))) {
              result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2818581420.kind == 9)) {
              result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
              break BeforeRet;
              }
              
            };
            n_2818584808 = ne_2818584811;
            idx_2818584807 = len_2852126808(n_2818584808);
            }
            else {
              n_2818581420 = n_2818584808;
              Label6: {
                if (((n_2818581420 == node_2818581417) || (n_2818581420.parent == null))) {
                break Label6;
                }
                
                if ((n_2818581420.parent.kind == 7)) {
                if (((n_2818581420.kind == 7) && (len_2852126808(n_2818581420) == 0))) {
                result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
                break BeforeRet;
                }
                else {
                if (!((n_2818581420.kind == 7))) {
                result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2818581420.parent.kind == 9)) {
                var isElse_2818584812 = ((n_2818581420 == last_2852126978(n_2818581420.parent)) && !((modInt(len_2852126808(n_2818581420.parent), 2) == 0)));
                var isCondition_2818584813 = (!(isElse_2818584812) && (modInt(index_2852126828(n_2818581420), 2) == 0));
                if (((n_2818581420.kind == 7) && (len_2852126808(n_2818581420) == 0))) {
                result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
                break BeforeRet;
                }
                else {
                if ((!((n_2818581420.kind == 7)) && (!(isCondition_2818584813) || (0 < index_2852126828(n_2818581420))))) {
                result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2818581420.kind == 9)) {
                result_2818581419 = nimCopy(result_2818581419, some_2852126946(n_2818581420), NTI2852126839);
                break BeforeRet;
                }
                
              };
              idx_2818584807 = index_2852126828(n_2818584808);
              n_2818584808 = n_2818584808.parent;
            }
            }
          }
      };
    };
    result_2818581419 = nimCopy(result_2818581419, none_2852126924(), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581419;

}

function moveCursorPrevLine_2818584734(self_2818584735) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2818580488(self_2818584735)) {
    break BeforeRet;
    }
    
      var oHEX60gensym602_2818584738 = getPrevLine_2818581415(self_2818584735.document, node_2818574967(self_2818584735));
      if (!isSome_2852128602(oHEX60gensym602_2818584738)) Temporary1 = false; else {        var prev_2818584761 = get_2852128622(oHEX60gensym602_2818584738);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2818576846(self_2818584735, prev_2818584761);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2818584730(self_2818584789) {
    moveCursorPrevLine_2818584734(self_2818584789);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2818584730(this));};

function selectContaining_2818584820(self_2818584821, container_2818584822) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2818580488(self_2818584821)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2818584822)) {
    case "function":
        var oHEX60gensym612_2818584825 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 11);
        if (!isSome_2852128602(oHEX60gensym612_2818584825)) Temporary1 = false; else {          var child_2818584848 = get_2852128622(oHEX60gensym612_2818584825);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584848.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym613_2818584851 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 4);
        if (!isSome_2852128602(oHEX60gensym613_2818584851)) Temporary2 = false; else {          var child_2818584874 = get_2852128622(oHEX60gensym613_2818584851);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584874.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym614_2818584877 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 7);
        if (!isSome_2852128602(oHEX60gensym614_2818584877)) Temporary3 = false; else {          var child_2818584900 = get_2852128622(oHEX60gensym614_2818584877);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584900);
      }
      
      break;
    case "node-list":
        var oHEX60gensym615_2818584903 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 7);
        if (!isSome_2852128602(oHEX60gensym615_2818584903)) Temporary4 = false; else {          var child_2818584926 = get_2852128622(oHEX60gensym615_2818584903);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584926.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym616_2818584929 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 9);
        if (!isSome_2852128602(oHEX60gensym616_2818584929)) Temporary5 = false; else {          var child_2818584952 = get_2852128622(oHEX60gensym616_2818584929);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584952.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym617_2818584955 = findWithParentRec_2852128645(node_2818574967(self_2818584821), 10);
        if (!isSome_2852128602(oHEX60gensym617_2818584955)) Temporary6 = false; else {          var child_2818584978 = get_2852128622(oHEX60gensym617_2818584955);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2818576846(self_2818584821, child_2818584978.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2818584816(self_2818585007, container_2818585008) {
    selectContaining_2818584820(self_2818585007, container_2818585008);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2818584816(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_2869016328(cache_2869016331, key_2869016332) {
    var node_2869016428 = getOrDefault_2885683827(cache_2869016331.table, key_2869016332, null);
    if (!((node_2869016428 == null))) {
    del_2885694926(cache_2869016331.table, key_2869016332);
    remove_2885695685(cache_2869016331.list, node_2869016428);
    }
    

  
}

function deleteNode_2869016258(ctx_2869016259, node_2869016260) {
          var Temporary3;
            var Temporary4;

    ctx_2869016259.depGraph.revision = addInt(ctx_2869016259.depGraph.revision, 1);
    del_2869016328(ctx_2869016259.depGraph.changed, {Field0: getItem_2868957649(node_2869016260), Field1: -1});
    if (!((node_2869016260.parent == null))) {
    HEX5BHEX5DHEX3D_2885692612(ctx_2869016259.depGraph.changed, {Field0: getItem_2868957649(node_2869016260.parent), Field1: -1}, ctx_2869016259.depGraph.revision);
    }
    
    var parent_2869016590 = node_2869016260.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2869016590 == null))) Temporary3 = false; else {            var oHEX60gensym758_2869016597 = findWithParentRec_2852128645(parent_2869016590, 11);
            if (!isSome_2852128602(oHEX60gensym758_2869016597)) Temporary4 = false; else {              var child_2869016643 = get_2852128622(oHEX60gensym758_2869016597);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2869016644 = child_2869016643.parent;
          HEX5BHEX5DHEX3D_2885692612(ctx_2869016259.depGraph.changed, {Field0: getItem_2868957649(functionDefinition_2869016644), Field1: -1}, ctx_2869016259.depGraph.revision);
          parent_2869016590 = functionDefinition_2869016644.parent;
        }
    };

  
}

function rawGet_3053453386(t_3053453389, key_3053453390, hc_3053453391, hc_3053453391_Idx) {
  var result_3053453392 = 0;

  BeforeRet: {
    hc_3053453391[hc_3053453391_Idx] = hash_2181038324(key_3053453390);
    if ((hc_3053453391[hc_3053453391_Idx] == 0)) {
    hc_3053453391[hc_3053453391_Idx] = 314159265;
    }
    
    if (((t_3053453389.data).length == 0)) {
    result_3053453392 = -1;
    break BeforeRet;
    }
    
    var h_3053453444 = (hc_3053453391[hc_3053453391_Idx] & (t_3053453389.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3053453389.data[chckIndx(h_3053453444, 0, (t_3053453389.data).length - 1)].Field0)) break Label2;
          if (((t_3053453389.data[chckIndx(h_3053453444, 0, (t_3053453389.data).length - 1)].Field0 == hc_3053453391[hc_3053453391_Idx]) && HEX3DHEX3D_2181038320(t_3053453389.data[chckIndx(h_3053453444, 0, (t_3053453389.data).length - 1)].Field1, key_3053453390))) {
          result_3053453392 = h_3053453444;
          break BeforeRet;
          }
          
          h_3053453444 = nextTry_1308622883(h_3053453444, (t_3053453389.data).length - 1);
        }
    };
    result_3053453392 = subInt(-1, h_3053453444);
  };

  return result_3053453392;

}

function del_2818579628(t_2818579631, key_2818579632) {
    var hc_2818579633 = [0];
    var i_2818579640 = rawGet_3053453386(t_2818579631, key_2818579632, hc_2818579633, 0);
    var mskHEX60gensym36_2818579644 = (t_2818579631.data).length - 1;
    if ((0 <= i_2818579640)) {
    t_2818579631.counter = subInt(t_2818579631.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818579651 = i_2818579640;
            var rHEX60gensym36_2818579652 = jHEX60gensym36_2818579651;
            t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field0 = 0;
            t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field1 = nimCopy(t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2181038083);
            t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818579640 = (addInt(i_2818579640, 1) & mskHEX60gensym36_2818579644);
                  if (isEmpty_1308622877(t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818579652 = (t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)].Field0 & mskHEX60gensym36_2818579644);
                  if (!(((((rHEX60gensym36_2818579652 <= i_2818579640) && (jHEX60gensym36_2818579651 < rHEX60gensym36_2818579652)) || ((jHEX60gensym36_2818579651 < rHEX60gensym36_2818579652) && (i_2818579640 < jHEX60gensym36_2818579651))) || ((i_2818579640 < jHEX60gensym36_2818579651) && (rHEX60gensym36_2818579652 <= i_2818579640))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818579631.data[chckIndx(jHEX60gensym36_2818579651, 0, (t_2818579631.data).length - 1)] = nimCopy(t_2818579631.data[chckIndx(jHEX60gensym36_2818579651, 0, (t_2818579631.data).length - 1)], t_2818579631.data[chckIndx(i_2818579640, 0, (t_2818579631.data).length - 1)], NTI2818573793);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2818579214(doc_2818579215, node_2818579216) {
              var Temporary8;

    var fmtRes_2818579221 = [mnewString(0)];
    fmtRes_2818579221[0].push.apply(fmtRes_2818579221[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_2952790851(fmtRes_2818579221, 0, node_2818579216, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818579221[0], NTI33554449)]);
    Label1: {
      var child_2818579230 = null;
      var i_2818585082 = 0;
      var L_2818585083 = (node_2818579216.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585082 < L_2818585083)) break Label3;
            child_2818579230 = node_2818579216.children[chckIndx(i_2818585082, 0, (node_2818579216.children).length - 1)];
            handleNodeDelete_2818579214(doc_2818579215, child_2818579230);
            i_2818585082 = addInt(i_2818585082, 1);
            if (!(((node_2818579216.children).length == L_2818585083))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_2869016258(ctx_2818572341, node_2818579216);
    Label4: {
      var i_2818579264 = 0;
      var update_2818579265 = null;
      var i_2818585092 = 0;
      var L_2818585093 = (ctx_2818572341.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2818585092 < L_2818585093)) break Label6;
            i_2818579264 = i_2818585092;
            update_2818579265 = ctx_2818572341.updateFunctions[chckIndx(i_2818585092, 0, (ctx_2818572341.updateFunctions).length - 1)];
            var key_2818579266 = {Field0: getItem_2868957649(node_2818579216), Field1: i_2818579264};
            if (contains_2869003303(ctx_2818572341.diagnosticsPerQuery, key_2818579266)) {
            Label7: {
              var id_2818579415 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2818585087 = [];
              colontmp__2818585087 = (Temporary8 = HEX5BHEX5D_2869003748(ctx_2818572341.diagnosticsPerQuery, key_2818579266), Temporary8)[0][Temporary8[1]];
              var i_2818585088 = 0;
              var L_2818585089 = (colontmp__2818585087).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2818585088 < L_2818585089)) break Label10;
                    id_2818579415 = colontmp__2818585087[chckIndx(i_2818585088, 0, (colontmp__2818585087).length - 1)];
                    del_2869004465(HEX5BHEX5D_2869003957(ctx_2818572341.diagnosticsPerNode, id_2818579415).queries, key_2818579266);
                    i_2818585088 = addInt(i_2818585088, 1);
                    if (!(((colontmp__2818585087).length == L_2818585089))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_2869011208(ctx_2818572341.diagnosticsPerQuery, key_2818579266);
            }
            
            i_2818585092 = addInt(i_2818585092, 1);
            if (!(((ctx_2818572341.updateFunctions).length == L_2818585093))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2818579628(doc_2818579215.nodes, node_2818579216.id);

  
}

function HEX5BHEX5DHEX3D_2852126984(node_2852126985, index_2852126986, newNode_2852126987) {
    newNode_2852126987.parent = node_2852126985;
    node_2852126985.children[chckIndx(index_2852126986, 0, (node_2852126985.children).length - 1)].parent = null;
    node_2852126985.children[chckIndx(index_2852126986, 0, (node_2852126985.children).length - 1)] = newNode_2852126987;

  
}

function getOrDefault_2868957904(t_2868957907, key_2868957908, default_2868957909) {
    var Temporary1;

  var result_2868957910 = null;

    var hcHEX60gensym380_2868957913 = [0];
    var indexHEX60gensym380_2868957920 = rawGet_2868904977(t_2868957907, key_2868957908, hcHEX60gensym380_2868957913, 0);
    if ((0 <= indexHEX60gensym380_2868957920)) {
    Temporary1 = t_2868957907.data[chckIndx(indexHEX60gensym380_2868957920, 0, (t_2868957907.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2868957909;
    }
    
    result_2868957910 = Temporary1;

  return result_2868957910;

}

function newDoublyLinkedNode_2868958036(value_2868958038) {
  var result_2868958039 = null;

    result_2868958039 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2868958039.value = nimCopy(result_2868958039.value, value_2868958038, NTI2868903998);

  return result_2868958039;

}

function mustRehash_2868958377(t_2868958379) {
  var result_2868958380 = false;

    if (!((t_2868958379.counter < (t_2868958379.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2868958380 = ((mulInt((t_2868958379.data).length, 2) < mulInt(t_2868958379.counter, 3)) || (subInt((t_2868958379.data).length, t_2868958379.counter) < 4));

  return result_2868958380;

}

function rawInsert_2868959070(t_2868959074, data_2868959075, data_2868959075_Idx, key_2868959076, val_2868959077, hc_2868959078, h_2868959079) {
    data_2868959075[data_2868959075_Idx][chckIndx(h_2868959079, 0, (data_2868959075[data_2868959075_Idx]).length - 1)].Field1 = nimCopy(data_2868959075[data_2868959075_Idx][chckIndx(h_2868959079, 0, (data_2868959075[data_2868959075_Idx]).length - 1)].Field1, key_2868959076, NTI2885681177);
    data_2868959075[data_2868959075_Idx][chckIndx(h_2868959079, 0, (data_2868959075[data_2868959075_Idx]).length - 1)].Field2 = val_2868959077;
    data_2868959075[data_2868959075_Idx][chckIndx(h_2868959079, 0, (data_2868959075[data_2868959075_Idx]).length - 1)].Field0 = hc_2868959078;

  
}

function enlarge_2868958634(t_2868958637) {
    var n_2868958640 = [];
    n_2868958640 = new Array(chckRange(mulInt((t_2868958637.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2868958637.data).length, 2), 0, 2147483647) ; ++i) { n_2868958640[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2868958637.data; t_2868958637.data = n_2868958640; n_2868958640 = Temporary1;    Label2: {
      var i_2868958738 = 0;
      var colontmp__2818585126 = 0;
      colontmp__2818585126 = (n_2868958640).length - 1;
      var res_2818585127 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585127 <= colontmp__2818585126)) break Label4;
            i_2868958738 = res_2818585127;
            var eh_2868958819 = n_2868958640[chckIndx(i_2868958738, 0, (n_2868958640).length - 1)].Field0;
            if (isFilled_1308622880(eh_2868958819)) {
            var j_2868958823 = (eh_2868958819 & (t_2868958637.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2868958637.data[chckIndx(j_2868958823, 0, (t_2868958637.data).length - 1)].Field0)) break Label6;
                  j_2868958823 = nextTry_1308622883(j_2868958823, (t_2868958637.data).length - 1);
                }
            };
            rawInsert_2868959070(t_2868958637, t_2868958637, "data", n_2868958640[chckIndx(i_2868958738, 0, (n_2868958640).length - 1)].Field1, n_2868958640[chckIndx(i_2868958738, 0, (n_2868958640).length - 1)].Field2, eh_2868958819, j_2868958823);
            }
            
            res_2818585127 = addInt(res_2818585127, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2868959320(t_2868959323, key_2868959324, hc_2868959325) {
  var result_2868959326 = 0;

  BeforeRet: {
    if (((t_2868959323.data).length == 0)) {
    result_2868959326 = -1;
    break BeforeRet;
    }
    
    var h_2868959411 = (hc_2868959325 & (t_2868959323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2868959323.data[chckIndx(h_2868959411, 0, (t_2868959323.data).length - 1)].Field0)) break Label2;
          if (((t_2868959323.data[chckIndx(h_2868959411, 0, (t_2868959323.data).length - 1)].Field0 == hc_2868959325) && HEX3DHEX3D_2868905321(t_2868959323.data[chckIndx(h_2868959411, 0, (t_2868959323.data).length - 1)].Field1, key_2868959324))) {
          result_2868959326 = h_2868959411;
          break BeforeRet;
          }
          
          h_2868959411 = nextTry_1308622883(h_2868959411, (t_2868959323.data).length - 1);
        }
    };
    result_2868959326 = subInt(-1, h_2868959411);
  };

  return result_2868959326;

}

function HEX5BHEX5DHEX3D_2868958109(t_2868958112, key_2868958113, val_2868958114) {
    if (((t_2868958112.data).length == 0)) {
    var correctSizeHEX60gensym383_2868958197 = slotsNeeded_1308622891(32);
    t_2868958112.counter = 0;
    t_2868958112.data = new Array(chckRange(correctSizeHEX60gensym383_2868958197, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym383_2868958197, 0, 2147483647) ; ++i) { t_2868958112.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2868958202 = [0];
    var index_2868958209 = rawGet_2868904977(t_2868958112, key_2868958113, hc_2868958202, 0);
    if ((0 <= index_2868958209)) {
    t_2868958112.data[chckIndx(index_2868958209, 0, (t_2868958112.data).length - 1)].Field2 = val_2868958114;
    }
    else {
      if (((t_2868958112.data).length == 0)) {
      var correctSizeHEX60gensym386_2868958372 = slotsNeeded_1308622891(32);
      t_2868958112.counter = 0;
      t_2868958112.data = new Array(chckRange(correctSizeHEX60gensym386_2868958372, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym386_2868958372, 0, 2147483647) ; ++i) { t_2868958112.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2868958377(t_2868958112)) {
      enlarge_2868958634(t_2868958112);
      index_2868958209 = rawGetKnownHC_2868959320(t_2868958112, key_2868958113, hc_2868958202[0]);
      }
      
      index_2868958209 = subInt(-1, index_2868958209);
      rawInsert_2868959070(t_2868958112, t_2868958112, "data", key_2868958113, val_2868958114, hc_2868958202[0], index_2868958209);
      t_2868958112.counter = addInt(t_2868958112.counter, 1);
    }
    

  
}

function len_2868960885(t_2868960888) {
  var result_2868960889 = 0;

    result_2868960889 = t_2868960888.counter;

  return result_2868960889;

}

function len_2868960802(cache_2868960805) {
  var result_2868960806 = 0;

    result_2868960806 = len_2868960885(cache_2868960805.table);

  return result_2868960806;

}

function del_2868962492(t_2868962495, key_2868962496) {
    var hc_2868962497 = [0];
    var i_2868962504 = rawGet_2868904977(t_2868962495, key_2868962496, hc_2868962497, 0);
    var mskHEX60gensym36_2868962508 = (t_2868962495.data).length - 1;
    if ((0 <= i_2868962504)) {
    t_2868962495.counter = subInt(t_2868962495.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2868962515 = i_2868962504;
            var rHEX60gensym36_2868962516 = jHEX60gensym36_2868962515;
            t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field0 = 0;
            t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field1 = nimCopy(t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2868962504 = (addInt(i_2868962504, 1) & mskHEX60gensym36_2868962508);
                  if (isEmpty_1308622877(t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2868962516 = (t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)].Field0 & mskHEX60gensym36_2868962508);
                  if (!(((((rHEX60gensym36_2868962516 <= i_2868962504) && (jHEX60gensym36_2868962515 < rHEX60gensym36_2868962516)) || ((jHEX60gensym36_2868962515 < rHEX60gensym36_2868962516) && (i_2868962504 < jHEX60gensym36_2868962515))) || ((i_2868962504 < jHEX60gensym36_2868962515) && (rHEX60gensym36_2868962516 <= i_2868962504))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2868962495.data[chckIndx(jHEX60gensym36_2868962515, 0, (t_2868962495.data).length - 1)] = nimCopy(t_2868962495.data[chckIndx(jHEX60gensym36_2868962515, 0, (t_2868962495.data).length - 1)], t_2868962495.data[chckIndx(i_2868962504, 0, (t_2868962495.data).length - 1)], NTI2868904034);
          }
      };
    };
    }
    

  
}

function resize_2868960720(cache_2868960723) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2868960723.capacity < len_2868960802(cache_2868960723))) break Label2;
          var t_2868960890 = cache_2868960723.list.tail;
          if (cache_2868960723.recordRemovedKeys) {
          incl_2868960910(cache_2868960723.removedKeys, t_2868960890.value.key);
          }
          
          del_2868962492(cache_2868960723.table, t_2868960890.value.key);
          remove_2868905644(cache_2868960723.list, t_2868960890);
        }
    };

  
}

function addNewNode_2868958028(cache_2868958031, key_2868958032, val_2868958033) {
    var node_2868958045 = newDoublyLinkedNode_2868958036({key: nimCopy(null, key_2868958032, NTI2885681177), val: val_2868958033});
    HEX5BHEX5DHEX3D_2868958109(cache_2868958031.table, key_2868958032, node_2868958045);
    prepend_2868905948(cache_2868958031.list, node_2868958045);
    if (cache_2868958031.recordRemovedKeys) {
    excl_2868959739(cache_2868958031.removedKeys, key_2868958032);
    }
    
    resize_2868960720(cache_2868958031);

  
}

function HEX5BHEX5DHEX3D_2868957809(cache_2868957812, key_2868957813, val_2868957814) {
    var node_2868958001 = getOrDefault_2868957904(cache_2868957812.table, key_2868957813, null);
    if ((node_2868958001 == null)) {
    addNewNode_2868958028(cache_2868957812, key_2868957813, val_2868957814);
    }
    else {
      node_2868958001.value.val = val_2868957814;
      remove_2868905644(cache_2868957812.list, node_2868958001);
      prepend_2868905948(cache_2868957812.list, node_2868958001);
    }
    

  
}

function insertNode_2869015566(ctx_2869015567, node_2869015568) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_2869015567.depGraph.revision = addInt(ctx_2869015567.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2885692612(ctx_2869015567.depGraph.changed, {Field0: getItem_2868957649(node_2869015568), Field1: -1}, ctx_2869015567.depGraph.revision);
    if (!((node_2869015568.parent == null))) {
    HEX5BHEX5DHEX3D_2885692612(ctx_2869015567.depGraph.changed, {Field0: getItem_2868957649(node_2869015568.parent), Field1: -1}, ctx_2869015567.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_2868957809(ctx_2869015567.itemsAstNode, getItem_2868957649(node_2869015568), node_2869015568);
    Label1: {
      var key_2869015784 = 0;
      var child_2869015785 = null;
      var n_2818585115 = node_2869015568;
      var idx_2818585116 = -1;
      var i_2818585117 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2818585116 == -1)) {
            var colontmp__2818585120 = nimCopy(null, {Field0: i_2818585117, Field1: n_2818585115}, NTI2852128057);
            key_2869015784 = colontmp__2818585120["Field0"];
            child_2869015785 = colontmp__2818585120["Field1"];
            HEX5BHEX5DHEX3D_2885692612(ctx_2869015567.depGraph.changed, {Field0: getItem_2868957649(child_2869015785), Field1: -1}, ctx_2869015567.depGraph.revision);
            HEX5BHEX5DHEX3D_2868957809(ctx_2869015567.itemsAstNode, getItem_2868957649(child_2869015785), child_2869015785);
            }
            
            if ((addInt(idx_2818585116, 1) < len_2852126808(n_2818585115))) {
            n_2818585115 = HEX5BHEX5D_2852126804(n_2818585115, addInt(idx_2818585116, 1));
            idx_2818585116 = -1;
            }
            else {
              var oHEX60gensym74_2818585121 = next_2852126913(n_2818585115);
              if (!isSome_2852128602(oHEX60gensym74_2818585121)) Temporary5 = false; else {                var ne_2818585122 = get_2852128622(oHEX60gensym74_2818585121);
                Temporary5 = true;              }            if (Temporary5) {
            n_2818585115 = ne_2818585122;
            idx_2818585116 = -1;
            }
            else {
            if ((!((n_2818585115.parent == null)) && !((n_2818585115.parent == node_2869015568)))) {
            idx_2818585116 = index_2852126828(n_2818585115);
            n_2818585115 = n_2818585115.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2818585117 = addInt(i_2818585117, 1);
            }
          }
      };
    };
    var parent_2869015924 = node_2869015568.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_2869015924 == null))) Temporary8 = false; else {            var oHEX60gensym752_2869015931 = findWithParentRec_2852128645(parent_2869015924, 11);
            if (!isSome_2852128602(oHEX60gensym752_2869015931)) Temporary9 = false; else {              var child_2869015977 = get_2852128622(oHEX60gensym752_2869015931);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_2869015978 = child_2869015977.parent;
          HEX5BHEX5DHEX3D_2885692612(ctx_2869015567.depGraph.changed, {Field0: getItem_2868957649(functionDefinition_2869015978), Field1: -1}, ctx_2869015567.depGraph.revision);
          parent_2869015924 = functionDefinition_2869015978.parent;
        }
    };

  
}

function mustRehash_2818577954(t_2818577956) {
  var result_2818577957 = false;

    if (!((t_2818577956.counter < (t_2818577956.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577957 = ((mulInt((t_2818577956.data).length, 2) < mulInt(t_2818577956.counter, 3)) || (subInt((t_2818577956.data).length, t_2818577956.counter) < 4));

  return result_2818577957;

}

function rawInsert_2818578563(t_2818578567, data_2818578568, data_2818578568_Idx, key_2818578569, val_2818578570, hc_2818578571, h_2818578572) {
    data_2818578568[data_2818578568_Idx][chckIndx(h_2818578572, 0, (data_2818578568[data_2818578568_Idx]).length - 1)].Field1 = nimCopy(data_2818578568[data_2818578568_Idx][chckIndx(h_2818578572, 0, (data_2818578568[data_2818578568_Idx]).length - 1)].Field1, key_2818578569, NTI2181038083);
    data_2818578568[data_2818578568_Idx][chckIndx(h_2818578572, 0, (data_2818578568[data_2818578568_Idx]).length - 1)].Field2 = val_2818578570;
    data_2818578568[data_2818578568_Idx][chckIndx(h_2818578572, 0, (data_2818578568[data_2818578568_Idx]).length - 1)].Field0 = hc_2818578571;

  
}

function enlarge_2818578157(t_2818578160) {
    var n_2818578163 = [];
    n_2818578163 = new Array(chckRange(mulInt((t_2818578160.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818578160.data).length, 2), 0, 2147483647) ; ++i) { n_2818578163[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2818578160.data; t_2818578160.data = n_2818578163; n_2818578163 = Temporary1;    Label2: {
      var i_2818578243 = 0;
      var colontmp__2818585135 = 0;
      colontmp__2818585135 = (n_2818578163).length - 1;
      var res_2818585136 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585136 <= colontmp__2818585135)) break Label4;
            i_2818578243 = res_2818585136;
            var eh_2818578321 = n_2818578163[chckIndx(i_2818578243, 0, (n_2818578163).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818578321)) {
            var j_2818578325 = (eh_2818578321 & (t_2818578160.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818578160.data[chckIndx(j_2818578325, 0, (t_2818578160.data).length - 1)].Field0)) break Label6;
                  j_2818578325 = nextTry_1308622883(j_2818578325, (t_2818578160.data).length - 1);
                }
            };
            rawInsert_2818578563(t_2818578160, t_2818578160, "data", n_2818578163[chckIndx(i_2818578243, 0, (n_2818578163).length - 1)].Field1, n_2818578163[chckIndx(i_2818578243, 0, (n_2818578163).length - 1)].Field2, eh_2818578321, j_2818578325);
            }
            
            res_2818585136 = addInt(res_2818585136, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578804(t_2818578807, key_2818578808, hc_2818578809) {
  var result_2818578810 = 0;

  BeforeRet: {
    if (((t_2818578807.data).length == 0)) {
    result_2818578810 = -1;
    break BeforeRet;
    }
    
    var h_2818578877 = (hc_2818578809 & (t_2818578807.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578807.data[chckIndx(h_2818578877, 0, (t_2818578807.data).length - 1)].Field0)) break Label2;
          if (((t_2818578807.data[chckIndx(h_2818578877, 0, (t_2818578807.data).length - 1)].Field0 == hc_2818578809) && HEX3DHEX3D_2181038320(t_2818578807.data[chckIndx(h_2818578877, 0, (t_2818578807.data).length - 1)].Field1, key_2818578808))) {
          result_2818578810 = h_2818578877;
          break BeforeRet;
          }
          
          h_2818578877 = nextTry_1308622883(h_2818578877, (t_2818578807.data).length - 1);
        }
    };
    result_2818578810 = subInt(-1, h_2818578877);
  };

  return result_2818578810;

}

function HEX5BHEX5DHEX3D_2818577725(t_2818577728, key_2818577729, val_2818577730) {
    if (((t_2818577728.data).length == 0)) {
    var correctSizeHEX60gensym98_2818577795 = slotsNeeded_1308622891(32);
    t_2818577728.counter = 0;
    t_2818577728.data = new Array(chckRange(correctSizeHEX60gensym98_2818577795, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_2818577795, 0, 2147483647) ; ++i) { t_2818577728.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2818577800 = [0];
    var index_2818577807 = rawGet_3053453386(t_2818577728, key_2818577729, hc_2818577800, 0);
    if ((0 <= index_2818577807)) {
    t_2818577728.data[chckIndx(index_2818577807, 0, (t_2818577728.data).length - 1)].Field2 = val_2818577730;
    }
    else {
      if (((t_2818577728.data).length == 0)) {
      var correctSizeHEX60gensym101_2818577949 = slotsNeeded_1308622891(32);
      t_2818577728.counter = 0;
      t_2818577728.data = new Array(chckRange(correctSizeHEX60gensym101_2818577949, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym101_2818577949, 0, 2147483647) ; ++i) { t_2818577728.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2818577954(t_2818577728)) {
      enlarge_2818578157(t_2818577728);
      index_2818577807 = rawGetKnownHC_2818578804(t_2818577728, key_2818577729, hc_2818577800[0]);
      }
      
      index_2818577807 = subInt(-1, index_2818577807);
      rawInsert_2818578563(t_2818577728, t_2818577728, "data", key_2818577729, val_2818577730, hc_2818577800[0], index_2818577807);
      t_2818577728.counter = addInt(t_2818577728.counter, 1);
    }
    

  
}

function handleNodeInserted_2818577639(doc_2818577640, node_2818577641) {
              var Temporary8;

    var fmtRes_2818577646 = [mnewString(0)];
    fmtRes_2818577646[0].push.apply(fmtRes_2818577646[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_2952790851(fmtRes_2818577646, 0, node_2818577641, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818577646[0], NTI33554449)]);
    insertNode_2869015566(ctx_2818572341, node_2818577641);
    Label1: {
      var handler_2818577674 = null;
      var i_2818585101 = 0;
      var L_2818585102 = (doc_2818577640.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585101 < L_2818585102)) break Label3;
            handler_2818577674 = doc_2818577640.onNodeInserted[chckIndx(i_2818585101, 0, (doc_2818577640.onNodeInserted).length - 1)];
            handler_2818577674(doc_2818577640, node_2818577641);
            i_2818585101 = addInt(i_2818585101, 1);
            if (!(((doc_2818577640.onNodeInserted).length == L_2818585102))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2818577725(doc_2818577640.nodes, node_2818577641.id, node_2818577641);
    Label4: {
      var key_2818579130 = 0;
      var child_2818579131 = null;
      var n_2818585106 = node_2818577641;
      var idx_2818585107 = -1;
      var i_2818585108 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2818585107 == -1)) {
            var colontmp__2818585111 = nimCopy(null, {Field0: i_2818585108, Field1: n_2818585106}, NTI2852128057);
            key_2818579130 = colontmp__2818585111["Field0"];
            child_2818579131 = colontmp__2818585111["Field1"];
            HEX5BHEX5DHEX3D_2818577725(doc_2818577640.nodes, child_2818579131.id, child_2818579131);
            }
            
            if ((addInt(idx_2818585107, 1) < len_2852126808(n_2818585106))) {
            n_2818585106 = HEX5BHEX5D_2852126804(n_2818585106, addInt(idx_2818585107, 1));
            idx_2818585107 = -1;
            }
            else {
              var oHEX60gensym74_2818585112 = next_2852126913(n_2818585106);
              if (!isSome_2852128602(oHEX60gensym74_2818585112)) Temporary8 = false; else {                var ne_2818585113 = get_2852128622(oHEX60gensym74_2818585112);
                Temporary8 = true;              }            if (Temporary8) {
            n_2818585106 = ne_2818585113;
            idx_2818585107 = -1;
            }
            else {
            if ((!((n_2818585106.parent == null)) && !((n_2818585106.parent == node_2818577641)))) {
            idx_2818585107 = index_2852126828(n_2818585106);
            n_2818585106 = n_2818585106.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2818585108 = addInt(i_2818585108, 1);
            }
          }
      };
    };

  
}

function replaceNode_2818581480(document_2818581481, node_2818581482, newNode_2818581483) {
  var result_2818581484 = null;

  BeforeRet: {
    if ((node_2818581482.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2818581490 = index_2852126828(node_2818581482);
    document_2818581481.undoOps.push({kind: 1, parent: node_2818581482.parent, idx: idx_2818581490, node: node_2818581482, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2818581481.redoOps = nimCopy(null, [], NTI2818577394);
    handleNodeDelete_2818579214(document_2818581481, node_2818581482);
    HEX5BHEX5DHEX3D_2852126984(node_2818581482.parent, idx_2818581490, newNode_2818581483);
    handleNodeInserted_2818577639(document_2818581481, newNode_2818581483);
    result_2818581484 = newNode_2818581483;
    break BeforeRet;
  };

  return result_2818581484;

}

function delete_2852126992(x_2852126994, x_2852126994_Idx, i_2852126995) {
    x_2852126994[x_2852126994_Idx].splice(i_2852126995, 1);

  
}

function delete_2852126988(node_2852126989, index_2852126990) {
  var result_2852126991 = null;

  BeforeRet: {
    if (((index_2852126990 < 0) || (len_2852126808(node_2852126989) <= index_2852126990))) {
    result_2852126991 = node_2852126989;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2852126804(node_2852126989, index_2852126990).parent = null;
    delete_2852126992(node_2852126989, "children", chckRange(index_2852126990, 0, 2147483647));
    if ((index_2852126990 < len_2852126808(node_2852126989))) {
    result_2852126991 = HEX5BHEX5D_2852126804(node_2852126989, index_2852126990);
    break BeforeRet;
    }
    else {
    if ((0 < len_2852126808(node_2852126989))) {
    result_2852126991 = HEX5BHEX5D_2852126804(node_2852126989, subInt(index_2852126990, 1));
    break BeforeRet;
    }
    else {
      result_2852126991 = node_2852126989;
      break BeforeRet;
    }
    }
  };

  return result_2852126991;

}

function deleteNode_2818581544(document_2818581545, node_2818581546) {
  var result_2818581547 = null;

  BeforeRet: {
    if ((node_2818581546.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2818581546.parent == document_2818581545.rootNode) && (len_2852126808(document_2818581545.rootNode) == 1))) {
    result_2818581547 = replaceNode_2818581480(document_2818581545, node_2818581546, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2818581545.undoOps.push({kind: 0, parent: node_2818581546.parent, idx: index_2852126828(node_2818581546), node: node_2818581546, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2818581545.redoOps = nimCopy(null, [], NTI2818577394);
    handleNodeDelete_2818579214(document_2818581545, node_2818581546);
    result_2818581547 = delete_2852126988(node_2818581546.parent, index_2852126828(node_2818581546));
    break BeforeRet;
  };

  return result_2818581547;

}

function deleteSelected_2818585034(self_2818585035) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818585035)) {
    break BeforeRet;
    }
    
    self_2818585035.deletedNode = nimCopy(self_2818585035.deletedNode, some_2852126946(node_2818574967(self_2818585035)), NTI2852126839);
    nodeHEX3D_2818576846(self_2818585035, deleteNode_2818581544(self_2818585035.document, node_2818574967(self_2818585035)));
  };

  
}

function deleteSelectedJsWrapper_2818585030(self_2818585066) {
    deleteSelected_2818585034(self_2818585066);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2818585030(this));};

function initTable_2852128556(initialSize_2852128559) {
  var result_2852128560 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2852128562 = slotsNeeded_1308622891(chckRange(initialSize_2852128559, 0, 2147483647));
    result_2852128560.counter = 0;
    result_2852128560.data = new Array(chckRange(correctSizeHEX60gensym29_2852128562, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2852128562, 0, 2147483647) ; ++i) { result_2852128560.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_2852128560;

}

function rawGet_2852127127(t_2852127130, key_2852127131, hc_2852127132, hc_2852127132_Idx) {
  var result_2852127133 = 0;

  BeforeRet: {
    hc_2852127132[hc_2852127132_Idx] = hash_2181038324(key_2852127131);
    if ((hc_2852127132[hc_2852127132_Idx] == 0)) {
    hc_2852127132[hc_2852127132_Idx] = 314159265;
    }
    
    if (((t_2852127130.data).length == 0)) {
    result_2852127133 = -1;
    break BeforeRet;
    }
    
    var h_2852127184 = (hc_2852127132[hc_2852127132_Idx] & (t_2852127130.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2852127130.data[chckIndx(h_2852127184, 0, (t_2852127130.data).length - 1)].Field0)) break Label2;
          if (((t_2852127130.data[chckIndx(h_2852127184, 0, (t_2852127130.data).length - 1)].Field0 == hc_2852127132[hc_2852127132_Idx]) && HEX3DHEX3D_2181038320(t_2852127130.data[chckIndx(h_2852127184, 0, (t_2852127130.data).length - 1)].Field1, key_2852127131))) {
          result_2852127133 = h_2852127184;
          break BeforeRet;
          }
          
          h_2852127184 = nextTry_1308622883(h_2852127184, (t_2852127130.data).length - 1);
        }
    };
    result_2852127133 = subInt(-1, h_2852127184);
  };

  return result_2852127133;

}

function mustRehash_2852127472(t_2852127474) {
  var result_2852127475 = false;

    if (!((t_2852127474.counter < (t_2852127474.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2852127475 = ((mulInt((t_2852127474.data).length, 2) < mulInt(t_2852127474.counter, 3)) || (subInt((t_2852127474.data).length, t_2852127474.counter) < 4));

  return result_2852127475;

}

function rawInsert_2852127921(t_2852127925, data_2852127926, data_2852127926_Idx, key_2852127927, val_2852127928, hc_2852127929, h_2852127930) {
    data_2852127926[data_2852127926_Idx][chckIndx(h_2852127930, 0, (data_2852127926[data_2852127926_Idx]).length - 1)].Field1 = nimCopy(data_2852127926[data_2852127926_Idx][chckIndx(h_2852127930, 0, (data_2852127926[data_2852127926_Idx]).length - 1)].Field1, key_2852127927, NTI2181038083);
    data_2852127926[data_2852127926_Idx][chckIndx(h_2852127930, 0, (data_2852127926[data_2852127926_Idx]).length - 1)].Field2 = nimCopy(data_2852127926[data_2852127926_Idx][chckIndx(h_2852127930, 0, (data_2852127926[data_2852127926_Idx]).length - 1)].Field2, val_2852127928, NTI2181038083);
    data_2852127926[data_2852127926_Idx][chckIndx(h_2852127930, 0, (data_2852127926[data_2852127926_Idx]).length - 1)].Field0 = hc_2852127929;

  
}

function enlarge_2852127627(t_2852127630) {
    var n_2852127633 = [];
    n_2852127633 = new Array(chckRange(mulInt((t_2852127630.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2852127630.data).length, 2), 0, 2147483647) ; ++i) { n_2852127633[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_2852127630.data; t_2852127630.data = n_2852127633; n_2852127633 = Temporary1;    Label2: {
      var i_2852127697 = 0;
      var colontmp__2818585204 = 0;
      colontmp__2818585204 = (n_2852127633).length - 1;
      var res_2818585205 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585205 <= colontmp__2818585204)) break Label4;
            i_2852127697 = res_2818585205;
            var eh_2852127751 = n_2852127633[chckIndx(i_2852127697, 0, (n_2852127633).length - 1)].Field0;
            if (isFilled_1308622880(eh_2852127751)) {
            var j_2852127755 = (eh_2852127751 & (t_2852127630.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2852127630.data[chckIndx(j_2852127755, 0, (t_2852127630.data).length - 1)].Field0)) break Label6;
                  j_2852127755 = nextTry_1308622883(j_2852127755, (t_2852127630.data).length - 1);
                }
            };
            rawInsert_2852127921(t_2852127630, t_2852127630, "data", n_2852127633[chckIndx(i_2852127697, 0, (n_2852127633).length - 1)].Field1, n_2852127633[chckIndx(i_2852127697, 0, (n_2852127633).length - 1)].Field2, eh_2852127751, j_2852127755);
            }
            
            res_2818585205 = addInt(res_2818585205, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2852128090(t_2852128093, key_2852128094, hc_2852128095) {
  var result_2852128096 = 0;

  BeforeRet: {
    if (((t_2852128093.data).length == 0)) {
    result_2852128096 = -1;
    break BeforeRet;
    }
    
    var h_2852128147 = (hc_2852128095 & (t_2852128093.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2852128093.data[chckIndx(h_2852128147, 0, (t_2852128093.data).length - 1)].Field0)) break Label2;
          if (((t_2852128093.data[chckIndx(h_2852128147, 0, (t_2852128093.data).length - 1)].Field0 == hc_2852128095) && HEX3DHEX3D_2181038320(t_2852128093.data[chckIndx(h_2852128147, 0, (t_2852128093.data).length - 1)].Field1, key_2852128094))) {
          result_2852128096 = h_2852128147;
          break BeforeRet;
          }
          
          h_2852128147 = nextTry_1308622883(h_2852128147, (t_2852128093.data).length - 1);
        }
    };
    result_2852128096 = subInt(-1, h_2852128147);
  };

  return result_2852128096;

}

function HEX5BHEX5DHEX3D_2852127066(t_2852127069, key_2852127070, val_2852127071) {
    if (((t_2852127069.data).length == 0)) {
    var correctSizeHEX60gensym15_2852127121 = slotsNeeded_1308622891(32);
    t_2852127069.counter = 0;
    t_2852127069.data = new Array(chckRange(correctSizeHEX60gensym15_2852127121, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2852127121, 0, 2147483647) ; ++i) { t_2852127069.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_2852127126 = [0];
    var index_2852127365 = rawGet_2852127127(t_2852127069, key_2852127070, hc_2852127126, 0);
    if ((0 <= index_2852127365)) {
    t_2852127069.data[chckIndx(index_2852127365, 0, (t_2852127069.data).length - 1)].Field2 = nimCopy(t_2852127069.data[chckIndx(index_2852127365, 0, (t_2852127069.data).length - 1)].Field2, val_2852127071, NTI2181038083);
    }
    else {
      if (((t_2852127069.data).length == 0)) {
      var correctSizeHEX60gensym20_2852127467 = slotsNeeded_1308622891(32);
      t_2852127069.counter = 0;
      t_2852127069.data = new Array(chckRange(correctSizeHEX60gensym20_2852127467, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2852127467, 0, 2147483647) ; ++i) { t_2852127069.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_2852127472(t_2852127069)) {
      enlarge_2852127627(t_2852127069);
      index_2852127365 = rawGetKnownHC_2852128090(t_2852127069, key_2852127070, hc_2852127126[0]);
      }
      
      index_2852127365 = subInt(-1, index_2852127365);
      rawInsert_2852127921(t_2852127069, t_2852127069, "data", key_2852127070, val_2852127071, hc_2852127126[0], index_2852127365);
      t_2852127069.counter = addInt(t_2852127069.counter, 1);
    }
    

  
}

function add_2852126758(node_2852126759, child_2852126760) {
    if (HEX3DHEX3D_2181038320(node_2852126759.id, null_2181038340)) {
    node_2852126759.id = nimCopy(node_2852126759.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2852126760.id, null_2181038340)) {
    child_2852126760.id = nimCopy(child_2852126760.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2852126760.parent = node_2852126759;
    node_2852126759.children.push(child_2852126760);;

  
}

function clone_2852127014(node_2852127015, idMap_2852127023) {
  var result_2852127024 = null;

    var newNodeId_2852127025 = newId_2181038297();
    result_2852127024 = {kind: node_2852127015.kind, id: nimCopy(null, newNodeId_2852127025, NTI2181038083), reff: nimCopy(null, node_2852127015.reff, NTI2181038083), text: nimCopy(null, node_2852127015.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2852127066(idMap_2852127023, node_2852127015.id, newNodeId_2852127025);
    Label1: {
      var child_2852128331 = null;
      var i_2818585198 = 0;
      var L_2818585199 = (node_2852127015.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585198 < L_2818585199)) break Label3;
            child_2852128331 = node_2852127015.children[chckIndx(i_2818585198, 0, (node_2852127015.children).length - 1)];
            add_2852126758(result_2852127024, clone_2852127014(child_2852128331, idMap_2852127023));
            i_2818585198 = addInt(i_2818585198, 1);
            if (!(((node_2852127015.children).length == L_2818585199))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2852127024;

}

function hasKey_2852128403(t_2852128406, key_2852128407) {
  var result_2852128408 = false;

    var hc_2852128409 = [0];
    result_2852128408 = (0 <= rawGet_2852127127(t_2852128406, key_2852128407, hc_2852128409, 0));

  return result_2852128408;

}

function contains_2852128397(t_2852128400, key_2852128401) {
  var result_2852128402 = false;

  BeforeRet: {
    result_2852128402 = hasKey_2852128403(t_2852128400, key_2852128401);
    break BeforeRet;
  };

  return result_2852128402;

}

function HEX5BHEX5D_2852128469(t_2852128472, key_2852128473) {
  var result_2852128474 = null;

    var hcHEX60gensym22_2852128475 = [0];
    var indexHEX60gensym22_2852128482 = rawGet_2852127127(t_2852128472, key_2852128473, hcHEX60gensym22_2852128475, 0);
    if ((0 <= indexHEX60gensym22_2852128482)) {
    result_2852128474 = t_2852128472.data[chckIndx(indexHEX60gensym22_2852128482, 0, (t_2852128472.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2852128536(key_2852128473);
    }
    

  return result_2852128474;

}

function replaceReferences_2852128350(node_2852128351, idMap_2852128354) {
    if (contains_2852128397(idMap_2852128354, node_2852128351.reff)) {
    node_2852128351.reff = nimCopy(node_2852128351.reff, HEX5BHEX5D_2852128469(idMap_2852128354, node_2852128351.reff), NTI2181038083);
    }
    
    Label1: {
      var child_2852128552 = null;
      var i_2818585209 = 0;
      var L_2818585210 = (node_2852128351.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585209 < L_2818585210)) break Label3;
            child_2852128552 = node_2852128351.children[chckIndx(i_2818585209, 0, (node_2852128351.children).length - 1)];
            replaceReferences_2852128350(child_2852128552, idMap_2852128354);
            i_2818585209 = addInt(i_2818585209, 1);
            if (!(((node_2852128351.children).length == L_2818585210))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2852128553(node_2852128554) {
  var result_2852128555 = null;

  BeforeRet: {
    var idMap_2852128567 = [initTable_2852128556(32)];
    var newNode_2852128568 = clone_2852127014(node_2852128554, idMap_2852128567[0]);
    replaceReferences_2852128350(newNode_2852128568, idMap_2852128567[0]);
    result_2852128555 = newNode_2852128568;
    break BeforeRet;
  };

  return result_2852128555;

}

function copySelected_2818585150(self_2818585151) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818585151)) {
    break BeforeRet;
    }
    
    self_2818585151.deletedNode = nimCopy(self_2818585151.deletedNode, some_2852126946(cloneAndMapIds_2852128553(node_2818574967(self_2818585151))), NTI2852126839);
  };

  
}

function copySelectedJsWrapper_2818585146(self_2818585182) {
    copySelected_2818585150(self_2818585182);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2818585146(this));};

function getSymbol_2868966723(ctxHEX60gensym80_2868966724, idHEX60gensym80_2868966725) {
  var result_2868966727 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_2868966728 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_2868966725, NTI2181038083), Field1: 2}, NTI2885681177);
    if (contains_2868925557(ctxHEX60gensym80_2868966724.itemsSymbol, itemHEX60gensym80_2868966728)) {
    result_2868966727 = nimCopy(result_2868966727, some_2868966895(HEX5BHEX5D_2868926110(ctxHEX60gensym80_2868966724.itemsSymbol, itemHEX60gensym80_2868966728)), NTI2952791176);
    break BeforeRet;
    }
    
    result_2868966727 = nimCopy(result_2868966727, none_2868966908(), NTI2952791176);
    break BeforeRet;
  };

  return result_2868966727;

}

function content_2650801275(document_2650801276) {
  var result_2650801277 = [];

  BeforeRet: {
    result_2650801277 = nimCopy(null, document_2650801276.lines, NTI2650800264);
    break BeforeRet;
  };

  return result_2650801277;

}

function updateNode_2869016048(ctx_2869016049, node_2869016050) {
          var Temporary3;
            var Temporary4;

    ctx_2869016049.depGraph.revision = addInt(ctx_2869016049.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2885692612(ctx_2869016049.depGraph.changed, {Field0: getItem_2868957649(node_2869016050), Field1: -1}, ctx_2869016049.depGraph.revision);
    var parent_2869016124 = node_2869016050.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2869016124 == null))) Temporary3 = false; else {            var oHEX60gensym754_2869016131 = findWithParentRec_2852128645(parent_2869016124, 11);
            if (!isSome_2852128602(oHEX60gensym754_2869016131)) Temporary4 = false; else {              var child_2869016177 = get_2852128622(oHEX60gensym754_2869016131);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2869016178 = child_2869016177.parent;
          HEX5BHEX5DHEX3D_2885692612(ctx_2869016049.depGraph.changed, {Field0: getItem_2868957649(functionDefinition_2869016178), Field1: -1}, ctx_2869016049.depGraph.revision);
          parent_2869016124 = functionDefinition_2869016178.parent;
        }
    };
    var fmtRes_2869016252 = [mnewString(0)];
    fmtRes_2869016252[0].push.apply(fmtRes_2869016252[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_2952790851(fmtRes_2869016252, 0, node_2869016050, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869016252[0], NTI33554449)]);

  
}

function notifySymbolChanged_2869015480(ctx_2869015481, sym_2869015482) {
    ctx_2869015481.depGraph.revision = addInt(ctx_2869015481.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2885692612(ctx_2869015481.depGraph.changed, {Field0: getItem_2868966918(sym_2869015482), Field1: -1}, ctx_2869015481.depGraph.revision);
    var fmtRes_2869015560 = [mnewString(0)];
    fmtRes_2869015560[0].push.apply(fmtRes_2869015560[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2869015560, 0, sym_2869015482.name, []);
    fmtRes_2869015560[0].push.apply(fmtRes_2869015560[0], [32,40]);;
    formatValue_2885681372(fmtRes_2869015560, 0, sym_2869015482.id, []);
    fmtRes_2869015560[0].push.apply(fmtRes_2869015560[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2869015560[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2818585323 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585323 < rows_1979711496)) break Label3;
            i_1979711534 = i_2818585323;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2818585323 = addInt(i_2818585323, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2818585329 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2818585329 < rows_1979711496)) break Label6;
            i_1979711551 = i_2818585329;
            Label7: {
              var k_1979711556 = 0;
              var i_2818585327 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2818585327 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2818585327;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2818585327 = addInt(i_2818585327, 1);
                  }
              };
            };
            i_2818585329 = addInt(i_2818585329, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2818585335 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2818585335 < cols_1979711497)) break Label12;
            col_1979711561 = i_2818585335;
            Label13: {
              var row_1979711566 = 0;
              var i_2818585333 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2818585333 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2818585333;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2818585333 = addInt(i_2818585333, 1);
                  }
              };
            };
            i_2818585335 = addInt(i_2818585335, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2818585345 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585345 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2818585345];
            addChar(str_33557214, x_33557228);;
            i_2818585345 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3036676200(len_3036676202) {
  var result_3036676203 = [];

    result_3036676203 = new Array(len_3036676202); for (var i = 0 ; i < len_3036676202 ; ++i) { result_3036676203[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3036676203;

}

function mergeAlt_3036676239(a_3036676241, b_3036676242, lo_3036676243, m_3036676244, hi_3036676245, cmp_3036676248, order_3036676249) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3036676248(a_3036676241[chckIndx(m_3036676244, 0, (a_3036676241).length - 1)], a_3036676241[chckIndx(addInt(m_3036676244, 1), 0, (a_3036676241).length - 1)]), order_3036676249) <= 0)) {
    break BeforeRet;
    }
    
    var j_3036676250 = lo_3036676243;
    if (!((j_3036676250 <= m_3036676244))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3036676256 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3036676250 <= m_3036676244)) break Label2;
          b_3036676242[chckIndx(bb_3036676256, 0, (b_3036676242).length - 1)] = nimCopy(b_3036676242[chckIndx(bb_3036676256, 0, (b_3036676242).length - 1)], a_3036676241[chckIndx(j_3036676250, 0, (a_3036676241).length - 1)], NTI2818573800);
          bb_3036676256 = addInt(bb_3036676256, 1);
          j_3036676250 = addInt(j_3036676250, 1);
        }
    };
    var i_3036676267 = 0;
    var k_3036676268 = lo_3036676243;
    Label3: {
        Label4: while (true) {
        if (!((k_3036676268 < j_3036676250) && (j_3036676250 <= hi_3036676245))) break Label4;
          if ((HEX2A_1023410184(cmp_3036676248(b_3036676242[chckIndx(i_3036676267, 0, (b_3036676242).length - 1)], a_3036676241[chckIndx(j_3036676250, 0, (a_3036676241).length - 1)]), order_3036676249) <= 0)) {
          a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)] = nimCopy(a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)], b_3036676242[chckIndx(i_3036676267, 0, (b_3036676242).length - 1)], NTI2818573800);
          i_3036676267 = addInt(i_3036676267, 1);
          }
          else {
            a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)] = nimCopy(a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)], a_3036676241[chckIndx(j_3036676250, 0, (a_3036676241).length - 1)], NTI2818573800);
            j_3036676250 = addInt(j_3036676250, 1);
          }
          
          k_3036676268 = addInt(k_3036676268, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3036676268 < j_3036676250)) break Label6;
          a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)] = nimCopy(a_3036676241[chckIndx(k_3036676268, 0, (a_3036676241).length - 1)], b_3036676242[chckIndx(i_3036676267, 0, (b_3036676242).length - 1)], NTI2818573800);
          k_3036676268 = addInt(k_3036676268, 1);
          i_3036676267 = addInt(i_3036676267, 1);
        }
    };
  };

  
}

function sort_3036676188(a_3036676190, cmp_3036676193, order_3036676194) {
    var n_3036676199 = (a_3036676190).length;
    var b_3036676236 = newSeq_3036676200(chckRange(divInt(n_3036676199, 2), 0, 2147483647));
    var s_3036676237 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3036676237 < n_3036676199)) break Label2;
          var m_3036676238 = subInt(subInt(n_3036676199, 1), s_3036676237);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3036676238)) break Label4;
                mergeAlt_3036676239(a_3036676190, b_3036676236, nimMax(addInt(subInt(m_3036676238, s_3036676237), 1), 0), m_3036676238, addInt(m_3036676238, s_3036676237), cmp_3036676193, order_3036676194);
                m_3036676238 = subInt(m_3036676238, mulInt(s_3036676237, 2));
              }
          };
          s_3036676237 = mulInt(s_3036676237, 2);
        }
    };

  
}

function cmp_3036676168(x_3036676170, y_3036676171) {
  var result_3036676172 = 0;

  BeforeRet: {
    if ((x_3036676170 == y_3036676171)) {
    result_3036676172 = 0;
    break BeforeRet;
    }
    
    if ((x_3036676170 < y_3036676171)) {
    result_3036676172 = -1;
    break BeforeRet;
    }
    
    result_3036676172 = 1;
    break BeforeRet;
  };

  return result_3036676172;

}

function getCompletions_2818580699(editor_2818580700, text_2818580701, contextNode_2818580705) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2818580849(a_2818580867, b_2818580868) {
      var result_2818580873 = 0;

        result_2818580873 = cmp_3036676168(a_2818580867.score, b_2818580868.score);

      return result_2818580873;

    }

  var result_2818580706 = [];

  BeforeRet: {
    result_2818580706 = nimCopy(null, [], NTI3036676114);
    if (((isNone_2852128630(contextNode_2818580705) || (get_2852128622(contextNode_2818580705).kind == 1)) || (get_2852128622(contextNode_2818580705).kind == 0))) {
    var symbols_2818580771 = computeSymbols_2868987052(ctx_2818572341, get_2852128622(contextNode_2818580705), true);
    Label1: {
      var key_2818580776 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2818580777 = null;
      var L_2818585314 = len_2952791314(symbols_2818580771);
      Label2: {
        var h_2818585316 = 0;
        var colontmp__2818585317 = 0;
        colontmp__2818585317 = (symbols_2818580771.data).length - 1;
        var res_2818585318 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818585318 <= colontmp__2818585317)) break Label4;
              h_2818585316 = res_2818585318;
              if (isFilled_1308622880(symbols_2818580771.data[chckIndx(h_2818585316, 0, (symbols_2818580771.data).length - 1)].Field0)) {
              var colontmp__2818585321 = nimCopy(null, {Field0: nimCopy(null, symbols_2818580771.data[chckIndx(h_2818585316, 0, (symbols_2818580771.data).length - 1)].Field1, NTI2181038083), Field1: symbols_2818580771.data[chckIndx(h_2818585316, 0, (symbols_2818580771.data).length - 1)].Field2}, NTI2952791002);
              key_2818580776 = nimCopy(key_2818580776, colontmp__2818585321["Field0"], NTI2181038083);
              symbol_2818580777 = colontmp__2818585321["Field1"];
              var score_2818580778 = fuzzyMatch_1979711568(text_2818580701, symbol_2818580777.name);
              result_2818580706.push({kind: 0, score: score_2818580778, id: nimCopy(null, symbol_2818580777.id, NTI2181038083), nodeKind: 0, name: []});;
              if (!((len_2952791314(symbols_2818580771) == L_2818585314))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818585318 = addInt(res_2818585318, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2818580785 = nimCopy(null, contextNode_2818580705, NTI2852126839);
      if (!isSome_2852128602(oHEX60gensym121_2818580785)) Temporary6 = false; else {        var node_2818580808 = get_2852128622(oHEX60gensym121_2818580785);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2818580808.kind == 0);      }    if (Temporary5) {
    result_2818580706.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2818580701, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2818580701, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2818580701, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2818580701, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2818580701, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2818580701, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2818580706.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2818580701, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2818580706.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2818580701, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2818580701);
    result_2818580706.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3036676188(result_2818580706, HEX3Aanonymous_2818580849, 0);
    break BeforeRet;
  };

  return result_2818580706;

}

function updateCompletions_2818574955(editor_2818574956) {
  BeforeRet: {
    if ((editor_2818574956.textDocument == null)) {
    editor_2818574956.completions = nimCopy(null, [], NTI3036676114);
    editor_2818574956.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2818580897 = nsuJoinSep(content_2650801275(editor_2818574956.textDocument), []);
    editor_2818574956.completions = nimCopy(null, getCompletions_2818580699(editor_2818574956, text_2818580897, some_2852126946(node_2818574967(editor_2818574956))), NTI2818576786);
    editor_2818574956.completionText = nimCopy(null, text_2818580897, NTI33554449);
    if ((0 < (editor_2818574956.completions).length)) {
    editor_2818574956.selectedCompletion = clamp_1660945119(editor_2818574956.selectedCompletion, 0, subInt((editor_2818574956.completions).length, 1));
    }
    else {
      editor_2818574956.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2818580912(self_2818580913, apply_2818580914) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2818580488(self_2818580913))) {
    break BeforeRet;
    }
    
    if (apply_2818580914) {
    if (!(HEX3DHEX3D_2181038320(self_2818580913.currentlyEditedSymbol, null_2181038340))) {
      var oHEX60gensym644_2818585223 = getSymbol_2868966723(ctx_2818572341, self_2818580913.currentlyEditedSymbol);
      if (!isSome_2952791605(oHEX60gensym644_2818585223)) Temporary1 = false; else {        var sym_2818585246 = get_2952791625(oHEX60gensym644_2818585223);
        Temporary1 = true;      }    if (Temporary1) {
    self_2818580913.document.undoOps.push({kind: 4, id: nimCopy(null, self_2818580913.currentlyEditedSymbol, NTI2181038083), text: nimCopy(null, sym_2818585246.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2818585246.name = nimCopy(null, nsuJoinSep(content_2650801275(self_2818580913.textDocument), []), NTI33554449);
    if ((sym_2818585246.kind == 0)) {
    var Temporary2 = sym_2818585246;
    if (ConstSet166[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
    Temporary2.node.text = nimCopy(null, sym_2818585246.name, NTI33554449);
    var Temporary3 = sym_2818585246;
    if (ConstSet167[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
    updateNode_2869016048(ctx_2818572341, Temporary3.node);
    }
    
    notifySymbolChanged_2869015480(ctx_2818572341, sym_2818585246);
    }
    
    }
    else {
    if (!((self_2818580913.currentlyEditedNode == null))) {
    self_2818580913.document.undoOps.push({kind: 3, node: self_2818580913.currentlyEditedNode, text: nimCopy(null, self_2818580913.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2818580913.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2650801275(self_2818580913.textDocument), [10]), NTI33554449);
    updateNode_2869016048(ctx_2818572341, self_2818580913.currentlyEditedNode);
    }
    }
    }
    
    unregister_2147483811(self_2818580913.textEditor);
    self_2818580913.textEditor = null;
    self_2818580913.textDocument = null;
    self_2818580913.currentlyEditedSymbol = nimCopy(self_2818580913.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2818580913.currentlyEditedNode = null;
    updateCompletions_2818574955(self_2818580913);
  };

  
}

function finishEditJsWrapper_2818585214(self_2818585291, apply_2818585292) {
    finishEdit_2818580912(self_2818585291, apply_2818585292);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2818585214(this, apply_));};

function pop_2818581617(s_2818581619, s_2818581619_Idx) {
  var result_2818581620 = null;

    var L_2818581624 = subInt((s_2818581619[s_2818581619_Idx]).length, 1);
    result_2818581620 = s_2818581619[s_2818581619_Idx][chckIndx(L_2818581624, 0, (s_2818581619[s_2818581619_Idx]).length - 1)];
    if (s_2818581619[s_2818581619_Idx].length < chckRange(L_2818581624, 0, 2147483647)) { for (var i = s_2818581619[s_2818581619_Idx].length ; i < chckRange(L_2818581624, 0, 2147483647) ; ++i) s_2818581619[s_2818581619_Idx].push(null); }
               else { s_2818581619[s_2818581619_Idx].length = chckRange(L_2818581624, 0, 2147483647); };

  return result_2818581620;

}

function formatValue_2818574829(result_2818574831, result_2818574831_Idx, value_2818574832, specifier_2818574833) {
    formatValue_721420459(result_2818574831, result_2818574831_Idx, reprEnum(value_2818574832, NTI2818573643), specifier_2818574833);

  
}

function HEX24_2818574821(op_2818574822) {
  var result_2818574823 = [];

    var fmtRes_2818574828 = [mnewString(0)];
    formatValue_2818574829(fmtRes_2818574828, 0, op_2818574822.kind, []);
    fmtRes_2818574828[0].push.apply(fmtRes_2818574828[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2818574828, 0, op_2818574822.text, []);
    fmtRes_2818574828[0].push.apply(fmtRes_2818574828[0], [39]);;
    result_2818574823 = nimCopy(null, fmtRes_2818574828[0], NTI33554449);
    if (!(HEX3DHEX3D_2181038320(op_2818574822.id, null_2181038340))) {
    var fmtRes_2818574841 = [mnewString(0)];
    fmtRes_2818574841[0].push.apply(fmtRes_2818574841[0], [44,32,105,100,32,61,32]);;
    formatValue_2885681372(fmtRes_2818574841, 0, op_2818574822.id, []);
    result_2818574823.push.apply(result_2818574823, fmtRes_2818574841[0]);;
    }
    
    if (!((op_2818574822.node == null))) {
    var fmtRes_2818574855 = [mnewString(0)];
    fmtRes_2818574855[0].push.apply(fmtRes_2818574855[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_2952790851(fmtRes_2818574855, 0, op_2818574822.node, []);
    result_2818574823.push.apply(result_2818574823, fmtRes_2818574855[0]);;
    }
    
    if (!((op_2818574822.parent == null))) {
    var fmtRes_2818574869 = [mnewString(0)];
    fmtRes_2818574869[0].push.apply(fmtRes_2818574869[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_2952790851(fmtRes_2818574869, 0, op_2818574822.parent, []);
    fmtRes_2818574869[0].push.apply(fmtRes_2818574869[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2332033544(fmtRes_2818574869, 0, op_2818574822.idx, []);
    result_2818574823.push.apply(result_2818574823, fmtRes_2818574869[0]);;
    }
    

  return result_2818574823;

}

function formatValue_2818581635(result_2818581637, result_2818581637_Idx, value_2818581638, specifier_2818581639) {
    formatValue_721420459(result_2818581637, result_2818581637_Idx, HEX24_2818574821(value_2818581638), specifier_2818581639);

  
}

function insert_2852126778(x_2852126780, x_2852126780_Idx, item_2852126781, i_2852126782) {
    var it_2852126803 = null;
    x_2852126780[x_2852126780_Idx] = x_2852126780[x_2852126780_Idx] || []; x_2852126780[x_2852126780_Idx].splice(i_2852126782, 0, it_2852126803);
    x_2852126780[x_2852126780_Idx][chckIndx(i_2852126782, 0, (x_2852126780[x_2852126780_Idx]).length - 1)] = item_2852126781;

  
}

function insert_2852126774(node_2852126775, child_2852126776, idx_2852126777) {
    if (HEX3DHEX3D_2181038320(node_2852126775.id, null_2181038340)) {
    node_2852126775.id = nimCopy(node_2852126775.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2852126776.id, null_2181038340)) {
    child_2852126776.id = nimCopy(child_2852126776.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2852126776.parent = node_2852126775;
    insert_2852126778(node_2852126775, "children", child_2852126776, chckRange(idx_2852126777, 0, 2147483647));

  
}

function undo_2818581607(document_2818581608) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2818581610 = ({val: null});

  BeforeRet: {
    if (((document_2818581608.undoOps).length == 0)) {
    result_2818581610 = nimCopy(result_2818581610, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    var undoOp_2818581629 = pop_2818581617(document_2818581608, "undoOps");
    var fmtRes_2818581634 = [mnewString(0)];
    fmtRes_2818581634[0].push.apply(fmtRes_2818581634[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2818581635(fmtRes_2818581634, 0, undoOp_2818581629, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818581634[0], NTI33554449)]);
    switch (undoOp_2818581629.kind) {
    case 0:
      insert_2852126774(undoOp_2818581629.parent, undoOp_2818581629.node, undoOp_2818581629.idx);
      handleNodeInserted_2818577639(document_2818581608, undoOp_2818581629.node);
      document_2818581608.redoOps.push(undoOp_2818581629);;
      result_2818581610 = nimCopy(result_2818581610, some_2852126946(undoOp_2818581629.node), NTI2852126839);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2818581647 = HEX5BHEX5D_2852126804(undoOp_2818581629.parent, undoOp_2818581629.idx);
      handleNodeDelete_2818579214(document_2818581608, HEX5BHEX5D_2852126804(undoOp_2818581629.parent, undoOp_2818581629.idx));
      HEX5BHEX5DHEX3D_2852126984(undoOp_2818581629.parent, undoOp_2818581629.idx, undoOp_2818581629.node);
      handleNodeInserted_2818577639(document_2818581608, undoOp_2818581629.node);
      document_2818581608.redoOps.push({kind: 1, parent: undoOp_2818581629.parent, idx: undoOp_2818581629.idx, node: oldNode_2818581647, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2818581610 = nimCopy(result_2818581610, some_2852126946(undoOp_2818581629.node), NTI2852126839);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2818579214(document_2818581608, HEX5BHEX5D_2852126804(undoOp_2818581629.parent, undoOp_2818581629.idx));
      var _ = delete_2852126988(undoOp_2818581629.parent, undoOp_2818581629.idx);
      document_2818581608.redoOps.push(undoOp_2818581629);;
      if ((undoOp_2818581629.idx < len_2852126808(undoOp_2818581629.parent))) {
      result_2818581610 = nimCopy(result_2818581610, some_2852126946(HEX5BHEX5D_2852126804(undoOp_2818581629.parent, undoOp_2818581629.idx)), NTI2852126839);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2818581629.idx)) {
      result_2818581610 = nimCopy(result_2818581610, some_2852126946(HEX5BHEX5D_2852126804(undoOp_2818581629.parent, subInt(undoOp_2818581629.idx, 1))), NTI2852126839);
      break BeforeRet;
      }
      }
      result_2818581610 = nimCopy(result_2818581610, some_2852126946(undoOp_2818581629.parent), NTI2852126839);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2818581670 = getSymbol_2868966723(ctx_2818572341, undoOp_2818581629.id);
        if (!isSome_2952791605(oHEX60gensym151_2818581670)) Temporary1 = false; else {          var symbol_2818581693 = get_2952791625(oHEX60gensym151_2818581670);
          Temporary1 = true;        }      if (Temporary1) {
      document_2818581608.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2818581629.id, NTI2181038083), text: nimCopy(null, symbol_2818581693.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2818581693.name = nimCopy(null, undoOp_2818581629.text, NTI33554449);
      if ((symbol_2818581693.kind == 0)) {
      var Temporary2 = symbol_2818581693;
      if (ConstSet175[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      Temporary2.node.text = nimCopy(null, symbol_2818581693.name, NTI33554449);
      var Temporary3 = symbol_2818581693;
      if (ConstSet176[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      updateNode_2869016048(ctx_2818572341, Temporary3.node);
      }
      
      notifySymbolChanged_2869015480(ctx_2818572341, symbol_2818581693);
      }
      
      break;
    case 3:
      document_2818581608.redoOps.push({kind: 3, node: undoOp_2818581629.node, text: nimCopy(null, undoOp_2818581629.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2818581629.node.text = nimCopy(null, undoOp_2818581629.text, NTI33554449);
      updateNode_2869016048(ctx_2818572341, undoOp_2818581629.node);
      break;
    }
    result_2818581610 = nimCopy(result_2818581610, none_2852126924(), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581610;

}

function undo_2818585358(self_2818585359) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2818580488(self_2818585359)) {
    break BeforeRet;
    }
    
    finishEdit_2818580912(self_2818585359, false);
      var oHEX60gensym654_2818585362 = undo_2818581607(self_2818585359.document);
      if (!isSome_2852128602(oHEX60gensym654_2818585362)) Temporary1 = false; else {        var node_2818585385 = get_2852128622(oHEX60gensym654_2818585362);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2818576846(self_2818585359, node_2818585385);
    }
    
  };

  
}

function undoJsWrapper2_2818585354(self_2818585413) {
    undo_2818585358(self_2818585413);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2818585354(this));};

function redo_2818581708(document_2818581709) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2818581711 = ({val: null});

  BeforeRet: {
    if (((document_2818581709.redoOps).length == 0)) {
    result_2818581711 = nimCopy(result_2818581711, none_2852126924(), NTI2852126839);
    break BeforeRet;
    }
    
    var redoOp_2818581720 = pop_2818581617(document_2818581709, "redoOps");
    var fmtRes_2818581725 = [mnewString(0)];
    fmtRes_2818581725[0].push.apply(fmtRes_2818581725[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2818581635(fmtRes_2818581725, 0, redoOp_2818581720, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818581725[0], NTI33554449)]);
    switch (redoOp_2818581720.kind) {
    case 0:
      document_2818581709.undoOps.push({kind: 0, parent: redoOp_2818581720.parent, idx: redoOp_2818581720.idx, node: redoOp_2818581720.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2818579214(document_2818581709, HEX5BHEX5D_2852126804(redoOp_2818581720.parent, redoOp_2818581720.idx));
      var _ = delete_2852126988(redoOp_2818581720.parent, redoOp_2818581720.idx);
      if ((redoOp_2818581720.idx < len_2852126808(redoOp_2818581720.parent))) {
      result_2818581711 = nimCopy(result_2818581711, some_2852126946(HEX5BHEX5D_2852126804(redoOp_2818581720.parent, redoOp_2818581720.idx)), NTI2852126839);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2818581720.idx)) {
      result_2818581711 = nimCopy(result_2818581711, some_2852126946(HEX5BHEX5D_2852126804(redoOp_2818581720.parent, subInt(redoOp_2818581720.idx, 1))), NTI2852126839);
      break BeforeRet;
      }
      }
      result_2818581711 = nimCopy(result_2818581711, some_2852126946(redoOp_2818581720.parent), NTI2852126839);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2818581744 = HEX5BHEX5D_2852126804(redoOp_2818581720.parent, redoOp_2818581720.idx);
      handleNodeDelete_2818579214(document_2818581709, HEX5BHEX5D_2852126804(redoOp_2818581720.parent, redoOp_2818581720.idx));
      HEX5BHEX5DHEX3D_2852126984(redoOp_2818581720.parent, redoOp_2818581720.idx, redoOp_2818581720.node);
      handleNodeInserted_2818577639(document_2818581709, redoOp_2818581720.node);
      document_2818581709.undoOps.push({kind: 1, parent: redoOp_2818581720.parent, idx: redoOp_2818581720.idx, node: oldNode_2818581744, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2818581711 = nimCopy(result_2818581711, some_2852126946(redoOp_2818581720.node), NTI2852126839);
      break BeforeRet;
      break;
    case 2:
      insert_2852126774(redoOp_2818581720.parent, redoOp_2818581720.node, redoOp_2818581720.idx);
      handleNodeInserted_2818577639(document_2818581709, redoOp_2818581720.node);
      document_2818581709.undoOps.push(redoOp_2818581720);;
      result_2818581711 = nimCopy(result_2818581711, some_2852126946(redoOp_2818581720.node), NTI2852126839);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2818581761 = getSymbol_2868966723(ctx_2818572341, redoOp_2818581720.id);
        if (!isSome_2952791605(oHEX60gensym154_2818581761)) Temporary1 = false; else {          var symbol_2818581784 = get_2952791625(oHEX60gensym154_2818581761);
          Temporary1 = true;        }      if (Temporary1) {
      document_2818581709.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2818581720.id, NTI2181038083), text: nimCopy(null, symbol_2818581784.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2818581784.name = nimCopy(null, redoOp_2818581720.text, NTI33554449);
      if ((symbol_2818581784.kind == 0)) {
      var Temporary2 = symbol_2818581784;
      if (ConstSet177[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      Temporary2.node.text = nimCopy(null, symbol_2818581784.name, NTI33554449);
      var Temporary3 = symbol_2818581784;
      if (ConstSet178[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2952790025)); }
      updateNode_2869016048(ctx_2818572341, Temporary3.node);
      }
      
      notifySymbolChanged_2869015480(ctx_2818572341, symbol_2818581784);
      }
      
      break;
    case 3:
      document_2818581709.undoOps.push({kind: 3, node: redoOp_2818581720.node, text: nimCopy(null, redoOp_2818581720.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2818581720.node.text = nimCopy(null, redoOp_2818581720.text, NTI33554449);
      updateNode_2869016048(ctx_2818572341, redoOp_2818581720.node);
      break;
    }
    result_2818581711 = nimCopy(result_2818581711, none_2852126924(), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581711;

}

function redo_2818585435(self_2818585436) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2818580488(self_2818585436)) {
    break BeforeRet;
    }
    
    finishEdit_2818580912(self_2818585436, false);
      var oHEX60gensym663_2818585439 = redo_2818581708(self_2818585436.document);
      if (!isSome_2852128602(oHEX60gensym663_2818585439)) Temporary1 = false; else {        var node_2818585462 = get_2852128622(oHEX60gensym663_2818585439);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2818576846(self_2818585436, node_2818585462);
    }
    
  };

  
}

function redoJsWrapper2_2818585431(self_2818585490) {
    redo_2818585435(self_2818585490);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2818585431(this));};

function canInsertInto_2818584092(self_2818584093, parent_2818584094) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2818584095 = false;

  BeforeRet: {
    switch (parent_2818584094.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2818584095 = false;
      break BeforeRet;
      break;
    case 4:
      result_2818584095 = (len_2852126808(parent_2818584094) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2818584095 = (len_2852126808(parent_2818584094) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2818584095 = (len_2852126808(parent_2818584094) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2818584095 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2852126808(parent_2818584094) == 0)) {
      result_2818584095 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym530_2818584098 = computeSymbol_2868983552(ctx_2818572341, HEX5BHEX5D_2852126804(parent_2818584094, 0), true);
        if (!isSome_2952791605(oHEX60gensym530_2818584098)) Temporary1 = false; else {          var sym_2818584121 = get_2952791625(oHEX60gensym530_2818584098);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2818584121.kind == 1)) {
      var Temporary2 = sym_2818584121;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2818584095 = (len_2852126808(parent_2818584094) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2818584095 = (len_2852126808(parent_2818584094) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2818584126 = computeType_2868976946(ctx_2818572341, HEX5BHEX5D_2852126804(parent_2818584094, 0), true);
      if ((typ_2818584126.kind == 4)) {
        var Temporary4 = typ_2818584126;
        if (ConstSet180[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790019)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2818584126;
          if (ConstSet181[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2952790019)); }
          var Temporary6 = typ_2818584126;
          if (ConstSet182[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2952790019)); }
          Temporary3 = HEX3DHEX3D_2952790574((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_2952790449(true));        }      if (Temporary3) {
      result_2818584095 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2818584126;
      if (ConstSet183[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2952790019)); }
      result_2818584095 = (len_2852126808(parent_2818584094) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2818584095 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2818584095;

}

function some_2818581839(val_2818581841) {
  var result_2818581842 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2818581842.has = true;
    result_2818581842.val = nimCopy(result_2818581842.val, val_2818581841, NTI2818577688);

  return result_2818581842;

}

function none_2818581853() {
  var result_2818581860 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2818581860;

}

function none_2818582340() {
  var result_2818582342 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2818582342 = nimCopy(result_2818582342, none_2818581853(), NTI2818577693);

  return result_2818582342;

}

function createNodeFromAction_2818581799(editor_2818581800, arg_2818581801, node_2818581802, typ_2818581803) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2818581809 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2818581801)) {
    case "deleted":
        var oHEX60gensym155_2818581812 = nimCopy(null, editor_2818581800.deletedNode, NTI2852126839);
        if (!isSome_2852128602(oHEX60gensym155_2818581812)) Temporary1 = false; else {          var node_2818581835 = get_2852128622(oHEX60gensym155_2818581812);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2818581800.deletedNode = nimCopy(editor_2818581800.deletedNode, some_2852126946(cloneAndMapIds_2852128553(node_2818581835)), NTI2852126839);
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818581835, Field1: 0}), NTI2818577693);
      break BeforeRet;
      }
      
      result_2818581809 = nimCopy(result_2818581809, none_2818581853(), NTI2818577693);
      break BeforeRet;
      break;
    case "empty":
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "identifier":
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "number-literal":
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2818581874 = null;
        Label3: {
          var res_2818581944 = null;
          res_2818581944 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818581944.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818581944.id = nimCopy(res_2818581944.id, newId_2181038297(), NTI2181038083);
          Label5: {
            Label6: {
              var res_2818581947 = null;
              res_2818581947 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818581947.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2852126758(res_2818581944, res_2818581947);
        };
      };
      var node_2818581966 = res_2818581944;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818581966, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2818581974 = null;
        Label9: {
          var res_2818581980 = null;
          res_2818581980 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818581980.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818581980.id = nimCopy(res_2818581980.id, newId_2181038297(), NTI2181038083);
          Label11: {
            Label12: {
              var res_2818581983 = null;
              res_2818581983 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818581983.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818581980, res_2818581983);
            Label14: {
              var res_2818581985 = null;
              res_2818581985 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818581985.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818581980, res_2818581985);
          };
        };
      };
      var node_2818582013 = res_2818581980;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582013, Field1: 1}), NTI2818577693);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2818582021 = null;
        Label17: {
          var res_2818582027 = null;
          res_2818582027 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582027.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818582027.id = nimCopy(res_2818582027.id, newId_2181038297(), NTI2181038083);
          Label19: {
            Label20: {
              var res_2818582030 = null;
              res_2818582030 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582030.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582027, res_2818582030);
            Label22: {
              var res_2818582032 = null;
              res_2818582032 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582032.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582027, res_2818582032);
          };
        };
      };
      var node_2818582060 = res_2818582027;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582060, Field1: 1}), NTI2818577693);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2818582064 = computeSymbol_2868983552(ctx_2818572341, node_2818581802, true);
        var oHEX60gensym183_2818582067 = nimCopy(null, sym_2818582064, NTI2952791176);
        if (!isSome_2952791605(oHEX60gensym183_2818582067)) Temporary26 = false; else {          var sym_2818582090 = get_2952791625(oHEX60gensym183_2818582067);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2818582090.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2818582090;
      if (ConstSet184[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2952790025)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2818582095 = Temporary24;
      switch (kind_2818582095) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2818582100 = null;
          Label30: {
            var res_2818582106 = null;
            res_2818582106 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818582106.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2818582108 = null;
                res_2818582108 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582108.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582106, res_2818582108);
              Label35: {
                var res_2818582110 = null;
                res_2818582110 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582110.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582106, res_2818582110);
            };
          };
        };
        Temporary28 = res_2818582106;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2818582142 = null;
          Label38: {
            var res_2818582148 = null;
            res_2818582148 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818582148.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2818582150 = null;
                res_2818582150 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582150.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582148, res_2818582150);
              Label43: {
                var res_2818582152 = null;
                res_2818582152 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582152.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582148, res_2818582152);
              Label45: {
                var res_2818582154 = null;
                res_2818582154 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582154.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582148, res_2818582154);
            };
          };
        };
        Temporary28 = res_2818582148;
        break;
      case 0:
        var typ_2818582191 = computeType_2868976946(ctx_2818572341, node_2818581802, true);
        if ((typ_2818582191.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2818582200 = null;
          Label49: {
            var res_2818582206 = null;
            res_2818582206 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818582206.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2818582208 = null;
                res_2818582208 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582208.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582206, res_2818582208);
              Label54: {
                var res_2818582210 = null;
                res_2818582210 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582210.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582206, res_2818582210);
              Label56: {
                var res_2818582212 = null;
                res_2818582212 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582212.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818582206, res_2818582212);
            };
          };
        };
        Temporary47 = res_2818582206;
        }
        else {
        if (!((typ_2818582191.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2818582257 = null;
          Label59: {
            var res_2818582263 = null;
            res_2818582263 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818582263.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2818582265 = null;
                res_2818582265 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818582265.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2852126758(res_2818582263, res_2818582265);
          };
        };
        Temporary47 = res_2818582263;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2818582288 = null;
            Label65: {
              var res_2818582294 = null;
              res_2818582294 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582294.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2818582296 = null;
                  res_2818582296 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2818582296.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2852126758(res_2818582294, res_2818582296);
            };
          };
          var newNode_2818582315 = res_2818582294;
          Label70: {
            var __2818582319 = null;
            var colontmp__2818585745 = [];
            var Temporary71 = typ_2818582191;
            if (ConstSet185[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI2952790019)); }
            colontmp__2818585745 = Temporary71.paramTypes;
            var i_2818585746 = 0;
            var L_2818585747 = (colontmp__2818585745).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2818585746 < L_2818585747)) break Label73;
                  __2818582319 = colontmp__2818585745[chckIndx(i_2818585746, 0, (colontmp__2818585745).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2818582324 = null;
                    Label75: {
                      var res_2818582330 = null;
                      res_2818582330 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2818582330.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2852126758(newNode_2818582315, res_2818582330);
                  i_2818585746 = addInt(i_2818585746, 1);
                  if (!(((colontmp__2818585745).length == L_2818585747))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2818582315;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2818581809 = nimCopy(result_2818581809, none_2818582340(), NTI2818577693);
        break BeforeRet;
        break;
      }
      var node_2818582359 = Temporary28;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582359, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2818582367 = null;
        Label78: {
          var res_2818582373 = null;
          res_2818582373 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582373.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2818582375 = null;
              res_2818582375 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582375.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582373, res_2818582375);
            Label83: {
              var res_2818582377 = null;
              res_2818582377 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582377.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582373, res_2818582377);
          };
        };
      };
      var node_2818582405 = res_2818582373;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582405, Field1: 1}), NTI2818577693);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2818581803.kind == 2)) {
      Temporary85 = IdAppendString_2835349515;
      }
      else {
      Temporary85 = IdAdd_2835349507;
      }
      
      var operator_2818582413 = nimCopy(null, Temporary85, NTI2181038083);
      Label86: {
        var tmpHEX60gensym249_2818582418 = null;
        Label87: {
          var res_2818582424 = null;
          res_2818582424 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582424.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2818582426 = null;
              res_2818582426 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582426.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582426.reff = nimCopy(res_2818582426.reff, operator_2818582413, NTI2181038083);
            };
            add_2852126758(res_2818582424, res_2818582426);
            Label92: {
              var res_2818582429 = null;
              res_2818582429 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582429.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582424, res_2818582429);
            Label94: {
              var res_2818582431 = null;
              res_2818582431 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582431.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582424, res_2818582431);
          };
        };
      };
      var node_2818582468 = res_2818582424;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582468, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2818582476 = null;
        Label97: {
          var res_2818582482 = null;
          res_2818582482 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582482.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2818582484 = null;
              res_2818582484 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582484.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582484.reff = nimCopy(res_2818582484.reff, IdSub_2835349508, NTI2181038083);
            };
            add_2852126758(res_2818582482, res_2818582484);
            Label102: {
              var res_2818582487 = null;
              res_2818582487 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582487.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582482, res_2818582487);
            Label104: {
              var res_2818582489 = null;
              res_2818582489 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582489.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582482, res_2818582489);
          };
        };
      };
      var node_2818582526 = res_2818582482;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582526, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2818582534 = null;
        Label107: {
          var res_2818582540 = null;
          res_2818582540 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582540.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2818582542 = null;
              res_2818582542 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582542.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582542.reff = nimCopy(res_2818582542.reff, IdMul_2835349509, NTI2181038083);
            };
            add_2852126758(res_2818582540, res_2818582542);
            Label112: {
              var res_2818582545 = null;
              res_2818582545 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582545.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582540, res_2818582545);
            Label114: {
              var res_2818582547 = null;
              res_2818582547 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582547.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582540, res_2818582547);
          };
        };
      };
      var node_2818582584 = res_2818582540;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582584, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2818582592 = null;
        Label117: {
          var res_2818582598 = null;
          res_2818582598 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582598.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2818582600 = null;
              res_2818582600 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582600.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582600.reff = nimCopy(res_2818582600.reff, IdDiv_2835349510, NTI2181038083);
            };
            add_2852126758(res_2818582598, res_2818582600);
            Label122: {
              var res_2818582603 = null;
              res_2818582603 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582603.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582598, res_2818582603);
            Label124: {
              var res_2818582605 = null;
              res_2818582605 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582605.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582598, res_2818582605);
          };
        };
      };
      var node_2818582642 = res_2818582598;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582642, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2818582650 = null;
        Label127: {
          var res_2818582656 = null;
          res_2818582656 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582656.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2818582658 = null;
              res_2818582658 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582658.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582658.reff = nimCopy(res_2818582658.reff, IdMod_2835349511, NTI2181038083);
            };
            add_2852126758(res_2818582656, res_2818582658);
            Label132: {
              var res_2818582661 = null;
              res_2818582661 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582661.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582656, res_2818582661);
            Label134: {
              var res_2818582663 = null;
              res_2818582663 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582663.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582656, res_2818582663);
          };
        };
      };
      var node_2818582700 = res_2818582656;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582700, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2818582708 = null;
        Label137: {
          var res_2818582714 = null;
          res_2818582714 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582714.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818582714.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2818582725 = res_2818582714;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582725, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2818582733 = null;
        Label140: {
          var res_2818582739 = null;
          res_2818582739 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582739.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2818582741 = null;
              res_2818582741 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582741.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2852126758(res_2818582739, res_2818582741);
        };
      };
      var node_2818582760 = res_2818582739;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582760, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2818582768 = null;
        Label146: {
          var res_2818582774 = null;
          res_2818582774 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582774.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2818582776 = null;
              res_2818582776 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582776.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582774, res_2818582776);
            Label151: {
              var res_2818582778 = null;
              res_2818582778 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582778.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582774, res_2818582778);
          };
        };
      };
      var node_2818582806 = res_2818582774;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582806, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2818582814 = null;
        Label154: {
          var res_2818582820 = null;
          res_2818582820 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582820.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2818582822 = null;
              res_2818582822 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582822.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582822.reff = nimCopy(res_2818582822.reff, IdEqual_2835349523, NTI2181038083);
            };
            add_2852126758(res_2818582820, res_2818582822);
            Label159: {
              var res_2818582825 = null;
              res_2818582825 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582825.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582820, res_2818582825);
            Label161: {
              var res_2818582827 = null;
              res_2818582827 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582827.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582820, res_2818582827);
          };
        };
      };
      var node_2818582864 = res_2818582820;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582864, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2818582872 = null;
        Label164: {
          var res_2818582878 = null;
          res_2818582878 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582878.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2818582880 = null;
              res_2818582880 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582880.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582880.reff = nimCopy(res_2818582880.reff, IdNotEqual_2835349524, NTI2181038083);
            };
            add_2852126758(res_2818582878, res_2818582880);
            Label169: {
              var res_2818582883 = null;
              res_2818582883 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582883.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582878, res_2818582883);
            Label171: {
              var res_2818582885 = null;
              res_2818582885 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582885.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582878, res_2818582885);
          };
        };
      };
      var node_2818582922 = res_2818582878;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582922, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2818582930 = null;
        Label174: {
          var res_2818582936 = null;
          res_2818582936 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582936.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2818582938 = null;
              res_2818582938 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582938.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582938.reff = nimCopy(res_2818582938.reff, IdLessEqual_2835349520, NTI2181038083);
            };
            add_2852126758(res_2818582936, res_2818582938);
            Label179: {
              var res_2818582941 = null;
              res_2818582941 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582941.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582936, res_2818582941);
            Label181: {
              var res_2818582943 = null;
              res_2818582943 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582943.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582936, res_2818582943);
          };
        };
      };
      var node_2818582980 = res_2818582936;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818582980, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2818582988 = null;
        Label184: {
          var res_2818582994 = null;
          res_2818582994 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818582994.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2818582996 = null;
              res_2818582996 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582996.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818582996.reff = nimCopy(res_2818582996.reff, IdGreaterEqual_2835349522, NTI2181038083);
            };
            add_2852126758(res_2818582994, res_2818582996);
            Label189: {
              var res_2818582999 = null;
              res_2818582999 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818582999.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582994, res_2818582999);
            Label191: {
              var res_2818583001 = null;
              res_2818583001 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583001.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818582994, res_2818583001);
          };
        };
      };
      var node_2818583038 = res_2818582994;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583038, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2818583046 = null;
        Label194: {
          var res_2818583052 = null;
          res_2818583052 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583052.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2818583054 = null;
              res_2818583054 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583054.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818583054.reff = nimCopy(res_2818583054.reff, IdLess_2835349519, NTI2181038083);
            };
            add_2852126758(res_2818583052, res_2818583054);
            Label199: {
              var res_2818583057 = null;
              res_2818583057 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583057.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583052, res_2818583057);
            Label201: {
              var res_2818583059 = null;
              res_2818583059 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583059.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583052, res_2818583059);
          };
        };
      };
      var node_2818583096 = res_2818583052;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583096, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2818583104 = null;
        Label204: {
          var res_2818583110 = null;
          res_2818583110 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583110.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2818583112 = null;
              res_2818583112 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583112.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818583112.reff = nimCopy(res_2818583112.reff, IdGreater_2835349521, NTI2181038083);
            };
            add_2852126758(res_2818583110, res_2818583112);
            Label209: {
              var res_2818583115 = null;
              res_2818583115 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583115.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583110, res_2818583115);
            Label211: {
              var res_2818583117 = null;
              res_2818583117 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583117.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583110, res_2818583117);
          };
        };
      };
      var node_2818583154 = res_2818583110;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583154, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2818583162 = null;
        Label214: {
          var res_2818583168 = null;
          res_2818583168 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583168.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2818583170 = null;
              res_2818583170 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583170.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818583170.reff = nimCopy(res_2818583170.reff, IdOrder_2835349527, NTI2181038083);
            };
            add_2852126758(res_2818583168, res_2818583170);
            Label219: {
              var res_2818583173 = null;
              res_2818583173 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583173.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583168, res_2818583173);
            Label221: {
              var res_2818583175 = null;
              res_2818583175 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583175.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583168, res_2818583175);
          };
        };
      };
      var node_2818583212 = res_2818583168;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583212, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2818583220 = null;
        Label224: {
          var res_2818583226 = null;
          res_2818583226 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583226.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2818583228 = null;
              res_2818583228 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583228.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818583228.reff = nimCopy(res_2818583228.reff, IdAnd_2835349525, NTI2181038083);
            };
            add_2852126758(res_2818583226, res_2818583228);
            Label229: {
              var res_2818583231 = null;
              res_2818583231 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583231.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583226, res_2818583231);
            Label231: {
              var res_2818583233 = null;
              res_2818583233 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583233.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583226, res_2818583233);
          };
        };
      };
      var node_2818583270 = res_2818583226;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583270, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2818583278 = null;
        Label234: {
          var res_2818583284 = null;
          res_2818583284 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583284.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2818583286 = null;
              res_2818583286 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583286.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2818583286.reff = nimCopy(res_2818583286.reff, IdOr_2835349526, NTI2181038083);
            };
            add_2852126758(res_2818583284, res_2818583286);
            Label239: {
              var res_2818583289 = null;
              res_2818583289 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583289.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583284, res_2818583289);
            Label241: {
              var res_2818583291 = null;
              res_2818583291 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583291.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583284, res_2818583291);
          };
        };
      };
      var node_2818583328 = res_2818583284;
      result_2818581809 = nimCopy(result_2818581809, some_2818581839({Field0: node_2818583328, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    default: 
      result_2818581809 = nimCopy(result_2818581809, none_2818582340(), NTI2818577693);
      break BeforeRet;
      break;
    }
  };

  return result_2818581809;

}

function isSome_2818585524(self_2818585526) {
  var result_2818585527 = false;

    result_2818585527 = self_2818585526.has;

  return result_2818585527;

}

function isNone_2818585549(self_2818585551) {
  var result_2818585552 = false;

    result_2818585552 = !(self_2818585551.has);

  return result_2818585552;

}

function get_2818585541(self_2818585543) {
  var result_2818585544 = {Field0: null, Field1: 0};

    if (isNone_2818585549(self_2818585543)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818585544 = self_2818585543.val;

  return result_2818585544;

}

function insertNode_2818579208(document_2818579209, node_2818579210, index_2818579211, newNode_2818579212) {
  var result_2818581571 = ({val: null});

  BeforeRet: {
    var node_2818581572 = node_2818579210;
    var index_2818581573 = index_2818579211;
    if ((node_2818581572 == null)) {
    node_2818581572 = document_2818579209.rootNode;
    index_2818581573 = 0;
    }
    
    document_2818579209.undoOps.push({kind: 2, parent: node_2818581572, idx: index_2818581573, node: newNode_2818579212, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2818579209.redoOps = nimCopy(null, [], NTI2818577394);
    insert_2852126774(node_2818581572, newNode_2818579212, index_2818581573);
    handleNodeInserted_2818577639(document_2818579209, newNode_2818579212);
    result_2818581571 = nimCopy(result_2818581571, some_2852126946(newNode_2818579212), NTI2852126839);
    break BeforeRet;
  };

  return result_2818581571;

}

function shouldEditNode_2818583678(doc_2818583679, node_2818583680) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2818583681 = false;

  BeforeRet: {
    if (((node_2818583680.kind == 0) && eqStrings(node_2818583680.text, []))) {
    result_2818583681 = true;
    break BeforeRet;
    }
    
    if (((node_2818583680.kind == 2) && eqStrings(node_2818583680.text, []))) {
    result_2818583681 = true;
    break BeforeRet;
    }
    
    if ((node_2818583680.kind == 4)) {
    var oHEX60gensym522_2818583696 = computeSymbol_2868983552(ctx_2818572341, node_2818583680, true);
    if (!isSome_2952791605(oHEX60gensym522_2818583696)) Temporary2 = false; else {      var symbol_2818583719 = get_2952791625(oHEX60gensym522_2818583696);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2818583719.name, []);    }    result_2818583681 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2818583680.kind == 5)) {
    var oHEX60gensym523_2818583726 = computeSymbol_2868983552(ctx_2818572341, node_2818583680, true);
    if (!isSome_2952791605(oHEX60gensym523_2818583726)) Temporary4 = false; else {      var symbol_2818583749 = get_2952791625(oHEX60gensym523_2818583726);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2818583749.name, []);    }    result_2818583681 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2818583680.kind == 6)) {
    var oHEX60gensym524_2818583756 = computeSymbol_2868983552(ctx_2818572341, node_2818583680, true);
    if (!isSome_2952791605(oHEX60gensym524_2818583756)) Temporary6 = false; else {      var symbol_2818583779 = get_2952791625(oHEX60gensym524_2818583756);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2818583779.name, []);    }    result_2818583681 = Temporary5;
    break BeforeRet;
    }
    
    result_2818583681 = false;
    break BeforeRet;
  };

  return result_2818583681;

}

function formatValue_2818580503(result_2818580505, result_2818580505_Idx, value_2818580506, specifier_2818580507) {
    formatValue_721420459(result_2818580505, result_2818580505_Idx, reprEnum(value_2818580506, NTI2952790025), specifier_2818580507);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2818585850 = 0;
      var last_2818585851 = 0;
      var eolpos_2818585852 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2818585851 < (s_855638695).length) && !((ConstSet187[s_855638695[chckIndx(last_2818585851, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2818585851 = addInt(last_2818585851, 1);
                }
            };
            eolpos_2818585852 = last_2818585851;
            if ((last_2818585851 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2818585851, 0, (s_855638695).length - 1)] == 10)) {
            last_2818585851 = addInt(last_2818585851, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2818585851, 0, (s_855638695).length - 1)] == 13)) {
            last_2818585851 = addInt(last_2818585851, 1);
            if (((last_2818585851 < (s_855638695).length) && (s_855638695[chckIndx(last_2818585851, 0, (s_855638695).length - 1)] == 10))) {
            last_2818585851 = addInt(last_2818585851, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2818585851, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2818585852, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2818585850, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2818585852 == last_2818585851)) {
            break Label2;
            }
            
            first_2818585850 = last_2818585851;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2650801043(self_2650801044, value_2650801045) {
    if (self_2650801044.singleLine) {
    self_2650801044.lines = nimCopy(null, [nsuReplaceStr(value_2650801045, [10], [])], NTI1560281203);
    if (((self_2650801044.lines).length == 0)) {
    self_2650801044.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2650801044.tsParser == null))) {
    self_2650801044.currentTree = parseString_2751463483(self_2650801044.tsParser, self_2650801044.lines[chckIndx(0, 0, (self_2650801044.lines).length - 1)], none_2751463490());
    }
    
    }
    else {
      self_2650801044.lines = nimCopy(null, nsuSplitLines(value_2650801045, false), NTI855638530);
      if (((self_2650801044.lines).length == 0)) {
      self_2650801044.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2650801044.tsParser == null))) {
      self_2650801044.currentTree = parseString_2751463483(self_2650801044.tsParser, value_2650801045, none_2751463490());
      }
      
    }
    
    self_2650801044.version = addInt(self_2650801044.version, 1);
    invoke_2650801097(self_2650801044.textChanged, self_2650801044);

  
}

function newTextDocument_3036676679(filename_3036676681, content_3036676682) {
  var result_3036676683 = null;

    result_3036676683 = ({m_type: NTI2650800263, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0});
    var self_3036676687 = result_3036676683;
    self_3036676687.filename = nimCopy(null, filename_3036676681, NTI33554449);
    self_3036676687.currentTree = null;
    var _ = initTreesitter_2650803857(self_3036676687);
    var language_3036676688 = getLanguageForFile_2768240644(filename_3036676681);
    if (isSome_2650803879(language_3036676688)) {
    self_3036676687.languageId = nimCopy(null, get_2650803896(language_3036676688), NTI33554449);
    }
    
    contentHEX3D_2650801043(self_3036676687, content_3036676682);

  return result_3036676683;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2650801153(self_2650801154, value_2650801155) {
    if (self_2650801154.singleLine) {
    self_2650801154.lines = nimCopy(null, [nsuJoinSep(value_2650801155, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym21_2650801217 = 0;
        var resultHEX60gensym21_2650801224 = newSeq_503316959(chckRange((value_2650801155).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym21_2650801228 = [];
          var i_2818585857 = 0;
          var L_2818585858 = (value_2650801155).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2818585857 < L_2818585858)) break Label4;
                itHEX60gensym21_2650801228 = value_2650801155[chckIndx(i_2818585857, 0, (value_2650801155).length - 1)];
                resultHEX60gensym21_2650801224[chckIndx(iHEX60gensym21_2650801217, 0, (resultHEX60gensym21_2650801224).length - 1)] = nimCopy(null, itHEX60gensym21_2650801228, NTI33554449);
                iHEX60gensym21_2650801217 = addInt(iHEX60gensym21_2650801217, 1);
                i_2818585857 = addInt(i_2818585857, 1);
                if (!(((value_2650801155).length == L_2818585858))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2650801154.lines = nimCopy(null, resultHEX60gensym21_2650801224, NTI503316776);
    }
    
    if (((self_2650801154.lines).length == 0)) {
    self_2650801154.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2650801240 = nsuJoinSep(value_2650801155, [10]);
    if (!((self_2650801154.tsParser == null))) {
    self_2650801154.currentTree = parseString_2751463483(self_2650801154.tsParser, strValue_2650801240, none_2751463490());
    }
    
    self_2650801154.version = addInt(self_2650801154.version, 1);
    invoke_2650801097(self_2650801154.textChanged, self_2650801154);

  
}

function createTextEditorInstance_2650816354() {
  var result_2650816355 = null;

  BeforeRet: {
    var editor_2650816360 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], m_type: NTI2650800335, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2650816360 = createWithPrototype(editor_text_prototype, editor_2650816360);
    result_2650816355 = editor_2650816360;
    break BeforeRet;
  };

  return result_2650816355;

}

function newEditorId_2231370043() {
  var result_2231370044 = 0;

    result_2231370044 = nextEditorId_2231370042[0];
    nextEditorId_2231370042[0] = addInt(nextEditorId_2231370042[0], 1);

  return result_2231370044;

}

function init_2147483681(self_2147483682) {
    self_2147483682.id = newEditorId_2231370043();
    self_2147483682.renderHeader = true;
    self_2147483682.fillAvailableSpace = true;

  
}

function subscribe_2650816418(event_2650816420, callback_2650816422) {
  var result_2650816423 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2650816423 = nimCopy(result_2650816423, newId_2181038297(), NTI2181038083);
    event_2650816420.handlers.push({Field0: nimCopy(null, result_2650816423, NTI2181038083), Field1: callback_2650816422});;

  return result_2650816423;

}

function clampSelection_2650801041(self_2650801042) {
    selectionsHEX3D_2650800880(self_2650801042, clampAndMergeSelections_2650800617(self_2650801042, self_2650801042.selectionsInternal));
    markDirty_2147483686(self_2650801042);

  
}

function handleTextDocumentTextChanged_2650816352(self_2650816353) {
    clampSelection_2650801041(self_2650816353);
    updateSearchResults_2650805175(self_2650816353);
    markDirty_2147483686(self_2650816353);

  
}

function newTextEditor_2650816370(document_2650816371, ed_2650816372) {
    
function HEX3Aanonymous_2650816393(__2650816394) {
        handleTextDocumentTextChanged_2650816352(editor_2650816374);

      
    }

  var result_2650816373 = null;

  BeforeRet: {
    var editor_2650816374 = createTextEditorInstance_2650816354();
    editor_2650816374.document = document_2650816371;
    init_2147483681(editor_2650816374);
    if (((editor_2650816374.document.lines).length == 0)) {
    editor_2650816374.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847741(editor_2650816374, ed_2650816372);
    var _ = subscribe_2650816418(document_2650816371.textChanged, HEX3Aanonymous_2650816393);
    result_2650816373 = editor_2650816374;
    break BeforeRet;
  };

  return result_2650816373;

}

function some_3036676720(val_3036676722) {
  var result_3036676723 = ({val: 0, has: false});

    result_3036676723.has = true;
    result_3036676723.val = val_3036676722;

  return result_3036676723;

}

function handleTextDocumentChanged_2818580486(self_2818580487) {
    updateCompletions_2818574955(self_2818580487);

  
}

function editSymbol_2818580495(self_2818580496, symbol_2818580497) {
    var Temporary1;
    
function HEX3Aanonymous_2818580552(doc_2818580553) {
        handleTextDocumentChanged_2818580486(self_2818580496);

      
    }

    var fmtRes_2818580502 = [mnewString(0)];
    fmtRes_2818580502[0].push.apply(fmtRes_2818580502[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2818580502, 0, symbol_2818580497.name, []);
    fmtRes_2818580502[0].push.apply(fmtRes_2818580502[0], [32,40]);;
    formatValue_2818580503(fmtRes_2818580502, 0, symbol_2818580497.kind, []);
    fmtRes_2818580502[0].push.apply(fmtRes_2818580502[0], [44,32]);;
    formatValue_2885681372(fmtRes_2818580502, 0, symbol_2818580497.id, []);
    fmtRes_2818580502[0].push.apply(fmtRes_2818580502[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580502[0], NTI33554449)]);
    if ((symbol_2818580497.kind == 0)) {
    var fmtRes_2818580524 = [mnewString(0)];
    fmtRes_2818580524[0].push.apply(fmtRes_2818580524[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2818580497;
    if (ConstSet186[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952790025)); }
    formatValue_2952790851(fmtRes_2818580524, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580524[0], NTI33554449)]);
    }
    
    self_2818580496.currentlyEditedNode = null;
    self_2818580496.currentlyEditedSymbol = nimCopy(self_2818580496.currentlyEditedSymbol, symbol_2818580497.id, NTI2181038083);
    self_2818580496.textDocument = newTextDocument_3036676679([], []);
    contentHEX3D_2650801153(self_2818580496.textDocument, [nimCopy(null, symbol_2818580497.name, NTI33554449)]);
    self_2818580496.textEditor = newTextEditor_2650816370(self_2818580496.textDocument, self_2818580496.editor);
    setMode_2650808915(self_2818580496.textEditor, [105,110,115,101,114,116]);
    self_2818580496.textEditor.renderHeader = false;
    self_2818580496.textEditor.fillAvailableSpace = false;
    self_2818580496.textEditor.lineNumbers = nimCopy(self_2818580496.textEditor.lineNumbers, some_3036676720(0), NTI2650800379);
    var _ = subscribe_2650816418(self_2818580496.textDocument.textChanged, HEX3Aanonymous_2818580552);
    updateCompletions_2818574955(self_2818580496);

  
}

function editNode_2818580582(self_2818580583, node_2818580584) {
    
function HEX3Aanonymous_2818580613(doc_2818580614) {
        handleTextDocumentChanged_2818580486(self_2818580583);

      
    }

    var fmtRes_2818580589 = [mnewString(0)];
    fmtRes_2818580589[0].push.apply(fmtRes_2818580589[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_2952790851(fmtRes_2818580589, 0, node_2818580584, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580589[0], NTI33554449)]);
    self_2818580583.currentlyEditedNode = node_2818580584;
    self_2818580583.currentlyEditedSymbol = nimCopy(self_2818580583.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2818580583.textDocument = newTextDocument_3036676679([], []);
    contentHEX3D_2650801153(self_2818580583.textDocument, nsuSplitLines(node_2818580584.text, false));
    self_2818580583.textEditor = newTextEditor_2650816370(self_2818580583.textDocument, self_2818580583.editor);
    setMode_2650808915(self_2818580583.textEditor, [105,110,115,101,114,116]);
    self_2818580583.textEditor.renderHeader = false;
    self_2818580583.textEditor.fillAvailableSpace = false;
    self_2818580583.textEditor.lineNumbers = nimCopy(self_2818580583.textEditor.lineNumbers, some_3036676720(0), NTI2650800379);
    var _ = subscribe_2650816418(self_2818580583.textDocument.textChanged, HEX3Aanonymous_2818580613);
    updateCompletions_2818574955(self_2818580583);

  
}

function tryEdit_2818580643(self_2818580644, node_2818580645) {
      var Temporary1;
      var Temporary2;

  var result_2818580646 = false;

  BeforeRet: {
      var oHEX60gensym119_2818580649 = getSymbol_2868966723(ctx_2818572341, node_2818580645.id);
      if (!isSome_2952791605(oHEX60gensym119_2818580649)) Temporary1 = false; else {        var sym_2818580672 = get_2952791625(oHEX60gensym119_2818580649);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2818580495(self_2818580644, sym_2818580672);
    result_2818580646 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2818580675 = getSymbol_2868966723(ctx_2818572341, node_2818580645.reff);
      if (!isSome_2952791605(oHEX60gensym120_2818580675)) Temporary2 = false; else {        var sym_2818580698 = get_2952791625(oHEX60gensym120_2818580675);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2818580495(self_2818580644, sym_2818580698);
    result_2818580646 = true;
    break BeforeRet;
    }
    else {
      switch (node_2818580645.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2818580582(self_2818580644, node_2818580645);
        result_2818580646 = true;
        break BeforeRet;
        break;
      default: 
        result_2818580646 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2818580646;

}

function insertAfterSmart_2818585511(self_2818585512, nodeTemplate_2818585513) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2818585593(n_2818585596) {
        var result_2818585599 = false;

          result_2818585599 = shouldEditNode_2818583678(self_2818585512.document, n_2818585596);

        return result_2818585599;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2818580488(self_2818585512)) {
    break BeforeRet;
    }
    
    var node_2818585514 = node_2818574967(self_2818585512);
    Label1: {
      var next_2818585515 = null;
      if (true) {
      Temporary2 = node_2818585514;
      }
      else {
      Temporary2 = node_2818585514.parent;
      }
      
      var node_2818585682 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2818585682 == null))) break Label4;
            next_2818585515 = node_2818585682;
            if (canInsertInto_2818584092(self_2818585512, next_2818585515.parent)) {
            node_2818585514 = next_2818585515;
            break Label1;
            }
            
            node_2818585682 = node_2818585682.parent;
          }
      };
    };
    var index_2818585516 = index_2852126828(node_2818585514);
      var oHEX60gensym673_2818585519 = createNodeFromAction_2818581799(self_2818585512, nodeTemplate_2818585513, node_2818585514, errorType_2952790392());
      if (!isSome_2818585524(oHEX60gensym673_2818585519)) Temporary5 = false; else {        var newNodeIndex_2818585564 = nimCopy(null, get_2818585541(oHEX60gensym673_2818585519), NTI2818577688);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2818585565 = newNodeIndex_2818585564["Field0"];
    var __2818585566 = newNodeIndex_2818585564["Field1"];
      var oHEX60gensym675_2818585569 = insertNode_2818579208(self_2818585512.document, node_2818585514.parent, addInt(index_2818585516, 1), newNode_2818585565);
      if (!isSome_2852128602(oHEX60gensym675_2818585569)) Temporary6 = false; else {        var node_2818585592 = get_2852128622(oHEX60gensym675_2818585569);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2818576846(self_2818585512, node_2818585592);
    Label7: {
      var __2818585600 = 0;
      var emptyNode_2818585601 = null;
      var colontmp__2818585685 = null;
      colontmp__2818585685 = HEX3Aanonymous_2818585593;
      var i_2818585693 = 0;
      Label8: {
        var __2818585695 = 0;
        var child_2818585696 = null;
        var n_2818585697 = newNode_2818585565;
        var idx_2818585698 = -1;
        var i_2818585699 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2818585698 == -1)) {
              __2818585695 = i_2818585699;
              child_2818585696 = n_2818585697;
              if (colontmp__2818585685(child_2818585696)) {
              __2818585600 = i_2818585693;
              emptyNode_2818585601 = child_2818585696;
              nodeHEX3D_2818576846(self_2818585512, emptyNode_2818585601);
              var _ = tryEdit_2818580643(self_2818585512, node_2818574967(self_2818585512));
              break Label7;
              i_2818585693 = addInt(i_2818585693, 1);
              }
              
              }
              
              if ((addInt(idx_2818585698, 1) < len_2852126808(n_2818585697))) {
              n_2818585697 = HEX5BHEX5D_2852126804(n_2818585697, addInt(idx_2818585698, 1));
              idx_2818585698 = -1;
              }
              else {
                var oHEX60gensym74_2818585701 = next_2852126913(n_2818585697);
                if (!isSome_2852128602(oHEX60gensym74_2818585701)) Temporary13 = false; else {                  var ne_2818585702 = get_2852128622(oHEX60gensym74_2818585701);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2818585697 == newNode_2818585565));                }              if (Temporary12) {
              n_2818585697 = ne_2818585702;
              idx_2818585698 = -1;
              }
              else {
              if (((!((n_2818585697.parent == null)) && !((n_2818585697 == newNode_2818585565))) && !((n_2818585697.parent == newNode_2818585565)))) {
              idx_2818585698 = index_2852126828(n_2818585697);
              n_2818585697 = n_2818585697.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2818585699 = addInt(i_2818585699, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2818585606 = [mnewString(0)];
      fmtRes_2818585606[0].push.apply(fmtRes_2818585606[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2952790851(fmtRes_2818585606, 0, newNode_2818585565, []);
      fmtRes_2818585606[0].push.apply(fmtRes_2818585606[0], [32,105,110,116,111,32]);;
      formatValue_2952790851(fmtRes_2818585606, 0, node_2818574967(self_2818585512).parent, []);
      fmtRes_2818585606[0].push.apply(fmtRes_2818585606[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2818585606, 0, addInt(index_2818585516, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818585606[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2818585507(self_2818585659, nodeTemplate_2818585660) {
    insertAfterSmart_2818585511(self_2818585659, nodeTemplate_2818585660);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2818585507(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2818585866(self_2818585867, nodeTemplate_2818585868) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2818585925(n_2818585928) {
        var result_2818585931 = false;

          result_2818585931 = shouldEditNode_2818583678(self_2818585867.document, n_2818585928);

        return result_2818585931;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2818580488(self_2818585867)) {
    break BeforeRet;
    }
    
    var node_2818585869 = node_2818574967(self_2818585867);
    var index_2818585870 = index_2852126828(node_2818585869);
      var oHEX60gensym686_2818585873 = createNodeFromAction_2818581799(self_2818585867, nodeTemplate_2818585868, node_2818585869, errorType_2952790392());
      if (!isSome_2818585524(oHEX60gensym686_2818585873)) Temporary1 = false; else {        var newNodeIndex_2818585896 = nimCopy(null, get_2818585541(oHEX60gensym686_2818585873), NTI2818577688);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2818585897 = newNodeIndex_2818585896["Field0"];
    var __2818585898 = newNodeIndex_2818585896["Field1"];
      var oHEX60gensym687_2818585901 = insertNode_2818579208(self_2818585867.document, node_2818585869.parent, addInt(index_2818585870, 1), newNode_2818585897);
      if (!isSome_2852128602(oHEX60gensym687_2818585901)) Temporary2 = false; else {        var node_2818585924 = get_2852128622(oHEX60gensym687_2818585901);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2818576846(self_2818585867, node_2818585924);
    Label3: {
      var __2818585932 = 0;
      var emptyNode_2818585933 = null;
      var colontmp__2818586004 = null;
      colontmp__2818586004 = HEX3Aanonymous_2818585925;
      var i_2818586005 = 0;
      Label4: {
        var __2818586007 = 0;
        var child_2818586008 = null;
        var n_2818586009 = newNode_2818585897;
        var idx_2818586010 = -1;
        var i_2818586011 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2818586010 == -1)) {
              __2818586007 = i_2818586011;
              child_2818586008 = n_2818586009;
              if (colontmp__2818586004(child_2818586008)) {
              __2818585932 = i_2818586005;
              emptyNode_2818585933 = child_2818586008;
              nodeHEX3D_2818576846(self_2818585867, emptyNode_2818585933);
              var _ = tryEdit_2818580643(self_2818585867, node_2818574967(self_2818585867));
              break Label3;
              i_2818586005 = addInt(i_2818586005, 1);
              }
              
              }
              
              if ((addInt(idx_2818586010, 1) < len_2852126808(n_2818586009))) {
              n_2818586009 = HEX5BHEX5D_2852126804(n_2818586009, addInt(idx_2818586010, 1));
              idx_2818586010 = -1;
              }
              else {
                var oHEX60gensym74_2818586013 = next_2852126913(n_2818586009);
                if (!isSome_2852128602(oHEX60gensym74_2818586013)) Temporary9 = false; else {                  var ne_2818586014 = get_2852128622(oHEX60gensym74_2818586013);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2818586009 == newNode_2818585897));                }              if (Temporary8) {
              n_2818586009 = ne_2818586014;
              idx_2818586010 = -1;
              }
              else {
              if (((!((n_2818586009.parent == null)) && !((n_2818586009 == newNode_2818585897))) && !((n_2818586009.parent == newNode_2818585897)))) {
              idx_2818586010 = index_2852126828(n_2818586009);
              n_2818586009 = n_2818586009.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2818586011 = addInt(i_2818586011, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2818585938 = [mnewString(0)];
      fmtRes_2818585938[0].push.apply(fmtRes_2818585938[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2952790851(fmtRes_2818585938, 0, newNode_2818585897, []);
      fmtRes_2818585938[0].push.apply(fmtRes_2818585938[0], [32,105,110,116,111,32]);;
      formatValue_2952790851(fmtRes_2818585938, 0, node_2818574967(self_2818585867).parent, []);
      fmtRes_2818585938[0].push.apply(fmtRes_2818585938[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2818585938, 0, addInt(index_2818585870, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818585938[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2818585862(self_2818585982, nodeTemplate_2818585983) {
    insertAfter_2818585866(self_2818585982, nodeTemplate_2818585983);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2818585862(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2818586021(self_2818586022, nodeTemplate_2818586023) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2818586079(n_2818586082) {
        var result_2818586085 = false;

          result_2818586085 = shouldEditNode_2818583678(self_2818586022.document, n_2818586082);

        return result_2818586085;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586022)) {
    break BeforeRet;
    }
    
    var index_2818586024 = index_2852126828(node_2818574967(self_2818586022));
      var oHEX60gensym698_2818586027 = createNodeFromAction_2818581799(self_2818586022, nodeTemplate_2818586023, node_2818574967(self_2818586022), errorType_2952790392());
      if (!isSome_2818585524(oHEX60gensym698_2818586027)) Temporary1 = false; else {        var newNodeIndex_2818586050 = nimCopy(null, get_2818585541(oHEX60gensym698_2818586027), NTI2818577688);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2818586051 = newNodeIndex_2818586050["Field0"];
    var __2818586052 = newNodeIndex_2818586050["Field1"];
      var oHEX60gensym699_2818586055 = insertNode_2818579208(self_2818586022.document, node_2818574967(self_2818586022).parent, index_2818586024, newNode_2818586051);
      if (!isSome_2852128602(oHEX60gensym699_2818586055)) Temporary2 = false; else {        var node_2818586078 = get_2852128622(oHEX60gensym699_2818586055);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2818576846(self_2818586022, node_2818586078);
    Label3: {
      var __2818586086 = 0;
      var emptyNode_2818586087 = null;
      var colontmp__2818586158 = null;
      colontmp__2818586158 = HEX3Aanonymous_2818586079;
      var i_2818586159 = 0;
      Label4: {
        var __2818586161 = 0;
        var child_2818586162 = null;
        var n_2818586163 = newNode_2818586051;
        var idx_2818586164 = -1;
        var i_2818586165 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2818586164 == -1)) {
              __2818586161 = i_2818586165;
              child_2818586162 = n_2818586163;
              if (colontmp__2818586158(child_2818586162)) {
              __2818586086 = i_2818586159;
              emptyNode_2818586087 = child_2818586162;
              nodeHEX3D_2818576846(self_2818586022, emptyNode_2818586087);
              var _ = tryEdit_2818580643(self_2818586022, node_2818574967(self_2818586022));
              break Label3;
              i_2818586159 = addInt(i_2818586159, 1);
              }
              
              }
              
              if ((addInt(idx_2818586164, 1) < len_2852126808(n_2818586163))) {
              n_2818586163 = HEX5BHEX5D_2852126804(n_2818586163, addInt(idx_2818586164, 1));
              idx_2818586164 = -1;
              }
              else {
                var oHEX60gensym74_2818586167 = next_2852126913(n_2818586163);
                if (!isSome_2852128602(oHEX60gensym74_2818586167)) Temporary9 = false; else {                  var ne_2818586168 = get_2852128622(oHEX60gensym74_2818586167);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2818586163 == newNode_2818586051));                }              if (Temporary8) {
              n_2818586163 = ne_2818586168;
              idx_2818586164 = -1;
              }
              else {
              if (((!((n_2818586163.parent == null)) && !((n_2818586163 == newNode_2818586051))) && !((n_2818586163.parent == newNode_2818586051)))) {
              idx_2818586164 = index_2852126828(n_2818586163);
              n_2818586163 = n_2818586163.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2818586165 = addInt(i_2818586165, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2818586092 = [mnewString(0)];
      fmtRes_2818586092[0].push.apply(fmtRes_2818586092[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2952790851(fmtRes_2818586092, 0, newNode_2818586051, []);
      fmtRes_2818586092[0].push.apply(fmtRes_2818586092[0], [32,105,110,116,111,32]);;
      formatValue_2952790851(fmtRes_2818586092, 0, node_2818574967(self_2818586022).parent, []);
      fmtRes_2818586092[0].push.apply(fmtRes_2818586092[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2818586092, 0, index_2818586024, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818586092[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2818586017(self_2818586136, nodeTemplate_2818586137) {
    insertBefore_2818586021(self_2818586136, nodeTemplate_2818586137);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2818586017(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2818586175(self_2818586176, nodeTemplate_2818586177) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2818586232(n_2818586235) {
        var result_2818586238 = false;

          result_2818586238 = shouldEditNode_2818583678(self_2818586176.document, n_2818586235);

        return result_2818586238;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586176)) {
    break BeforeRet;
    }
    
      var oHEX60gensym710_2818586180 = createNodeFromAction_2818581799(self_2818586176, nodeTemplate_2818586177, node_2818574967(self_2818586176), errorType_2952790392());
      if (!isSome_2818585524(oHEX60gensym710_2818586180)) Temporary1 = false; else {        var newNodeIndex_2818586203 = nimCopy(null, get_2818585541(oHEX60gensym710_2818586180), NTI2818577688);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2818586204 = newNodeIndex_2818586203["Field0"];
    var __2818586205 = newNodeIndex_2818586203["Field1"];
      var oHEX60gensym711_2818586208 = insertNode_2818579208(self_2818586176.document, node_2818574967(self_2818586176), len_2852126808(node_2818574967(self_2818586176)), newNode_2818586204);
      if (!isSome_2852128602(oHEX60gensym711_2818586208)) Temporary2 = false; else {        var node_2818586231 = get_2852128622(oHEX60gensym711_2818586208);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2818576846(self_2818586176, node_2818586231);
    Label3: {
      var __2818586239 = 0;
      var emptyNode_2818586240 = null;
      var colontmp__2818586311 = null;
      colontmp__2818586311 = HEX3Aanonymous_2818586232;
      var i_2818586312 = 0;
      Label4: {
        var __2818586314 = 0;
        var child_2818586315 = null;
        var n_2818586316 = newNode_2818586204;
        var idx_2818586317 = -1;
        var i_2818586318 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2818586317 == -1)) {
              __2818586314 = i_2818586318;
              child_2818586315 = n_2818586316;
              if (colontmp__2818586311(child_2818586315)) {
              __2818586239 = i_2818586312;
              emptyNode_2818586240 = child_2818586315;
              nodeHEX3D_2818576846(self_2818586176, emptyNode_2818586240);
              var _ = tryEdit_2818580643(self_2818586176, node_2818574967(self_2818586176));
              break Label3;
              i_2818586312 = addInt(i_2818586312, 1);
              }
              
              }
              
              if ((addInt(idx_2818586317, 1) < len_2852126808(n_2818586316))) {
              n_2818586316 = HEX5BHEX5D_2852126804(n_2818586316, addInt(idx_2818586317, 1));
              idx_2818586317 = -1;
              }
              else {
                var oHEX60gensym74_2818586320 = next_2852126913(n_2818586316);
                if (!isSome_2852128602(oHEX60gensym74_2818586320)) Temporary9 = false; else {                  var ne_2818586321 = get_2852128622(oHEX60gensym74_2818586320);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2818586316 == newNode_2818586204));                }              if (Temporary8) {
              n_2818586316 = ne_2818586321;
              idx_2818586317 = -1;
              }
              else {
              if (((!((n_2818586316.parent == null)) && !((n_2818586316 == newNode_2818586204))) && !((n_2818586316.parent == newNode_2818586204)))) {
              idx_2818586317 = index_2852126828(n_2818586316);
              n_2818586316 = n_2818586316.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2818586318 = addInt(i_2818586318, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2818586245 = [mnewString(0)];
      fmtRes_2818586245[0].push.apply(fmtRes_2818586245[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2952790851(fmtRes_2818586245, 0, newNode_2818586204, []);
      fmtRes_2818586245[0].push.apply(fmtRes_2818586245[0], [32,105,110,116,111,32]);;
      formatValue_2952790851(fmtRes_2818586245, 0, node_2818574967(self_2818586176), []);
      fmtRes_2818586245[0].push.apply(fmtRes_2818586245[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2818586245, 0, len_2852126808(node_2818574967(self_2818586176)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818586245[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2818586171(self_2818586289, nodeTemplate_2818586290) {
    insertChild_2818586175(self_2818586289, nodeTemplate_2818586290);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2818586171(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2818586328(self_2818586329, nodeTemplate_2818586330) {
      var Temporary1;
      
function HEX3Aanonymous_2818586359(n_2818586362) {
        var result_2818586365 = false;

          result_2818586365 = shouldEditNode_2818583678(self_2818586329.document, n_2818586362);

        return result_2818586365;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586329)) {
    break BeforeRet;
    }
    
      var oHEX60gensym722_2818586333 = createNodeFromAction_2818581799(self_2818586329, nodeTemplate_2818586330, node_2818574967(self_2818586329), errorType_2952790392());
      if (!isSome_2818585524(oHEX60gensym722_2818586333)) Temporary1 = false; else {        var newNodeIndex_2818586356 = nimCopy(null, get_2818585541(oHEX60gensym722_2818586333), NTI2818577688);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2818586357 = newNodeIndex_2818586356["Field0"];
    var __2818586358 = newNodeIndex_2818586356["Field1"];
    nodeHEX3D_2818576846(self_2818586329, replaceNode_2818581480(self_2818586329.document, node_2818574967(self_2818586329), newNode_2818586357));
    Label2: {
      var __2818586366 = 0;
      var emptyNode_2818586367 = null;
      var colontmp__2818586418 = null;
      colontmp__2818586418 = HEX3Aanonymous_2818586359;
      var i_2818586419 = 0;
      Label3: {
        var __2818586421 = 0;
        var child_2818586422 = null;
        var n_2818586423 = newNode_2818586357;
        var idx_2818586424 = -1;
        var i_2818586425 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2818586424 == -1)) {
              __2818586421 = i_2818586425;
              child_2818586422 = n_2818586423;
              if (colontmp__2818586418(child_2818586422)) {
              __2818586366 = i_2818586419;
              emptyNode_2818586367 = child_2818586422;
              nodeHEX3D_2818576846(self_2818586329, emptyNode_2818586367);
              var _ = tryEdit_2818580643(self_2818586329, node_2818574967(self_2818586329));
              break Label2;
              i_2818586419 = addInt(i_2818586419, 1);
              }
              
              }
              
              if ((addInt(idx_2818586424, 1) < len_2852126808(n_2818586423))) {
              n_2818586423 = HEX5BHEX5D_2852126804(n_2818586423, addInt(idx_2818586424, 1));
              idx_2818586424 = -1;
              }
              else {
                var oHEX60gensym74_2818586427 = next_2852126913(n_2818586423);
                if (!isSome_2852128602(oHEX60gensym74_2818586427)) Temporary8 = false; else {                  var ne_2818586428 = get_2852128622(oHEX60gensym74_2818586427);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2818586423 == newNode_2818586357));                }              if (Temporary7) {
              n_2818586423 = ne_2818586428;
              idx_2818586424 = -1;
              }
              else {
              if (((!((n_2818586423.parent == null)) && !((n_2818586423 == newNode_2818586357))) && !((n_2818586423.parent == newNode_2818586357)))) {
              idx_2818586424 = index_2852126828(n_2818586423);
              n_2818586423 = n_2818586423.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2818586425 = addInt(i_2818586425, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2818586324(self_2818586396, nodeTemplate_2818586397) {
    replace_2818586328(self_2818586396, nodeTemplate_2818586397);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2818586324(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2818586435(self_2818586436, nodeTemplate_2818586437) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2818586470(n_2818586473) {
        var result_2818586476 = false;

          result_2818586476 = shouldEditNode_2818583678(self_2818586436.document, n_2818586473);

        return result_2818586476;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586436)) {
    break BeforeRet;
    }
    
      if (!(node_2818574967(self_2818586436).kind == 0)) Temporary1 = false; else {        var oHEX60gensym732_2818586444 = createNodeFromAction_2818581799(self_2818586436, nodeTemplate_2818586437, node_2818574967(self_2818586436), errorType_2952790392());
        if (!isSome_2818585524(oHEX60gensym732_2818586444)) Temporary2 = false; else {          var newNodeIndex_2818586467 = nimCopy(null, get_2818585541(oHEX60gensym732_2818586444), NTI2818577688);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2818586468 = newNodeIndex_2818586467["Field0"];
    var __2818586469 = newNodeIndex_2818586467["Field1"];
    nodeHEX3D_2818576846(self_2818586436, replaceNode_2818581480(self_2818586436.document, node_2818574967(self_2818586436), newNode_2818586468));
    Label3: {
      var __2818586477 = 0;
      var emptyNode_2818586478 = null;
      var colontmp__2818586529 = null;
      colontmp__2818586529 = HEX3Aanonymous_2818586470;
      var i_2818586530 = 0;
      Label4: {
        var __2818586532 = 0;
        var child_2818586533 = null;
        var n_2818586534 = newNode_2818586468;
        var idx_2818586535 = -1;
        var i_2818586536 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2818586535 == -1)) {
              __2818586532 = i_2818586536;
              child_2818586533 = n_2818586534;
              if (colontmp__2818586529(child_2818586533)) {
              __2818586477 = i_2818586530;
              emptyNode_2818586478 = child_2818586533;
              nodeHEX3D_2818576846(self_2818586436, emptyNode_2818586478);
              var _ = tryEdit_2818580643(self_2818586436, node_2818574967(self_2818586436));
              break Label3;
              i_2818586530 = addInt(i_2818586530, 1);
              }
              
              }
              
              if ((addInt(idx_2818586535, 1) < len_2852126808(n_2818586534))) {
              n_2818586534 = HEX5BHEX5D_2852126804(n_2818586534, addInt(idx_2818586535, 1));
              idx_2818586535 = -1;
              }
              else {
                var oHEX60gensym74_2818586538 = next_2852126913(n_2818586534);
                if (!isSome_2852128602(oHEX60gensym74_2818586538)) Temporary9 = false; else {                  var ne_2818586539 = get_2852128622(oHEX60gensym74_2818586538);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2818586534 == newNode_2818586468));                }              if (Temporary8) {
              n_2818586534 = ne_2818586539;
              idx_2818586535 = -1;
              }
              else {
              if (((!((n_2818586534.parent == null)) && !((n_2818586534 == newNode_2818586468))) && !((n_2818586534.parent == newNode_2818586468)))) {
              idx_2818586535 = index_2852126828(n_2818586534);
              n_2818586534 = n_2818586534.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2818586536 = addInt(i_2818586536, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2818586431(self_2818586507, nodeTemplate_2818586508) {
    replaceEmpty_2818586435(self_2818586507, nodeTemplate_2818586508);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2818586431(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2818586546(self_2818586547) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818586547)) {
    break BeforeRet;
    }
    
    var node_2818586548 = node_2818574967(self_2818586547);
    if (((node_2818586548.parent == null) || (node_2818586548.parent == self_2818586547.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2818586557 = node_2818586548.parent;
    var _ = deleteNode_2818581544(self_2818586547.document, node_2818574967(self_2818586547));
    nodeHEX3D_2818576846(self_2818586547, replaceNode_2818581480(self_2818586547.document, parent_2818586557, node_2818586548));
  };

  
}

function replaceParentJsWrapper_2818586542(self_2818586585) {
    replaceParent_2818586546(self_2818586585);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2818586542(this));};

function wrap_2818586606(self_2818586607, nodeTemplate_2818586608) {
      var Temporary1;
      
function HEX3Aanonymous_2818586639(n_2818586642) {
        var result_2818586645 = false;

          result_2818586645 = (n_2818586642.kind == 0);

        return result_2818586645;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2818586652(n_2818586655) {
        var result_2818586658 = false;

          result_2818586658 = shouldEditNode_2818583678(self_2818586607.document, n_2818586655);

        return result_2818586658;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586607)) {
    break BeforeRet;
    }
    
    var typ_2818586609 = computeType_2868976946(ctx_2818572341, node_2818574967(self_2818586607), true);
      var oHEX60gensym750_2818586612 = createNodeFromAction_2818581799(self_2818586607, nodeTemplate_2818586608, node_2818574967(self_2818586607), typ_2818586609);
      if (!isSome_2818585524(oHEX60gensym750_2818586612)) Temporary1 = false; else {        var newNodeIndex_2818586635 = nimCopy(null, get_2818585541(oHEX60gensym750_2818586612), NTI2818577688);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2818586636 = newNodeIndex_2818586635["Field0"];
    var index_2818586637 = newNodeIndex_2818586635["Field1"];
    var oldNode_2818586638 = node_2818574967(self_2818586607);
    nodeHEX3D_2818576846(self_2818586607, replaceNode_2818581480(self_2818586607.document, node_2818574967(self_2818586607), newNode_2818586636));
    Label2: {
      var i_2818586650 = 0;
      var emptyNode_2818586651 = null;
      var colontmp__2818586720 = null;
      colontmp__2818586720 = HEX3Aanonymous_2818586639;
      var i_2818586721 = 0;
      Label3: {
        var __2818586723 = 0;
        var child_2818586724 = null;
        var n_2818586725 = newNode_2818586636;
        var idx_2818586726 = -1;
        var i_2818586727 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2818586726 == -1)) {
              __2818586723 = i_2818586727;
              child_2818586724 = n_2818586725;
              if (colontmp__2818586720(child_2818586724)) {
              i_2818586650 = i_2818586721;
              emptyNode_2818586651 = child_2818586724;
              if ((i_2818586650 == index_2818586637)) {
              nodeHEX3D_2818576846(self_2818586607, replaceNode_2818581480(self_2818586607.document, emptyNode_2818586651, oldNode_2818586638));
              break Label2;
              }
              
              i_2818586721 = addInt(i_2818586721, 1);
              }
              
              }
              
              if ((addInt(idx_2818586726, 1) < len_2852126808(n_2818586725))) {
              n_2818586725 = HEX5BHEX5D_2852126804(n_2818586725, addInt(idx_2818586726, 1));
              idx_2818586726 = -1;
              }
              else {
                var oHEX60gensym74_2818586729 = next_2852126913(n_2818586725);
                if (!isSome_2852128602(oHEX60gensym74_2818586729)) Temporary8 = false; else {                  var ne_2818586730 = get_2852128622(oHEX60gensym74_2818586729);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2818586725 == newNode_2818586636));                }              if (Temporary7) {
              n_2818586725 = ne_2818586730;
              idx_2818586726 = -1;
              }
              else {
              if (((!((n_2818586725.parent == null)) && !((n_2818586725 == newNode_2818586636))) && !((n_2818586725.parent == newNode_2818586636)))) {
              idx_2818586726 = index_2852126828(n_2818586725);
              n_2818586725 = n_2818586725.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2818586727 = addInt(i_2818586727, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2818586659 = 0;
      var emptyNode_2818586660 = null;
      var colontmp__2818586732 = null;
      colontmp__2818586732 = HEX3Aanonymous_2818586652;
      var i_2818586733 = 0;
      Label10: {
        var __2818586735 = 0;
        var child_2818586736 = null;
        var n_2818586737 = newNode_2818586636;
        var idx_2818586738 = -1;
        var i_2818586739 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2818586738 == -1)) {
              __2818586735 = i_2818586739;
              child_2818586736 = n_2818586737;
              if (colontmp__2818586732(child_2818586736)) {
              __2818586659 = i_2818586733;
              emptyNode_2818586660 = child_2818586736;
              nodeHEX3D_2818576846(self_2818586607, emptyNode_2818586660);
              var _ = tryEdit_2818580643(self_2818586607, node_2818574967(self_2818586607));
              break Label9;
              i_2818586733 = addInt(i_2818586733, 1);
              }
              
              }
              
              if ((addInt(idx_2818586738, 1) < len_2852126808(n_2818586737))) {
              n_2818586737 = HEX5BHEX5D_2852126804(n_2818586737, addInt(idx_2818586738, 1));
              idx_2818586738 = -1;
              }
              else {
                var oHEX60gensym74_2818586741 = next_2852126913(n_2818586737);
                if (!isSome_2852128602(oHEX60gensym74_2818586741)) Temporary15 = false; else {                  var ne_2818586742 = get_2852128622(oHEX60gensym74_2818586741);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2818586737 == newNode_2818586636));                }              if (Temporary14) {
              n_2818586737 = ne_2818586742;
              idx_2818586738 = -1;
              }
              else {
              if (((!((n_2818586737.parent == null)) && !((n_2818586737 == newNode_2818586636))) && !((n_2818586737.parent == newNode_2818586636)))) {
              idx_2818586738 = index_2852126828(n_2818586737);
              n_2818586737 = n_2818586737.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2818586739 = addInt(i_2818586739, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2818586602(self_2818586698, nodeTemplate_2818586699) {
    wrap_2818586606(self_2818586698, nodeTemplate_2818586699);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2818586602(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2818586749(self_2818586750) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586750)) {
    break BeforeRet;
    }
    
    var current_2818586751 = node_2818574967(self_2818586750);
    Label1: {
      var emptyNode_2818586752 = null;
      var colontmp__2818586800 = null;
      colontmp__2818586800 = node_2818574967(self_2818586750);
      var idx_2818586801 = 0;
      var n_2818586802 = colontmp__2818586800;
      Label2: {
          Label3: while (true) {
          if (!!((n_2818586802 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818586802), 1)), subInt(idx_2818586801, 1))) {
            n_2818586802 = HEX5BHEX5D_2852126804(n_2818586802, subInt(idx_2818586801, 1));
            idx_2818586801 = len_2852126808(n_2818586802);
            }
            else {
              var oHEX60gensym93_2818586804 = prev_2852126959(n_2818586802);
              if (!isSome_2852128602(oHEX60gensym93_2818586804)) Temporary4 = false; else {                var ne_2818586805 = get_2852128622(oHEX60gensym93_2818586804);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2818586752 = n_2818586802;
            if ((!((emptyNode_2818586752 == current_2818586751)) && shouldEditNode_2818583678(self_2818586750.document, emptyNode_2818586752))) {
            nodeHEX3D_2818576846(self_2818586750, emptyNode_2818586752);
            var _ = tryEdit_2818580643(self_2818586750, node_2818574967(self_2818586750));
            break Label1;
            }
            
            n_2818586802 = ne_2818586805;
            idx_2818586801 = len_2852126808(n_2818586802);
            }
            else {
              emptyNode_2818586752 = n_2818586802;
              if ((!((emptyNode_2818586752 == current_2818586751)) && shouldEditNode_2818583678(self_2818586750.document, emptyNode_2818586752))) {
              nodeHEX3D_2818576846(self_2818586750, emptyNode_2818586752);
              var _ = tryEdit_2818580643(self_2818586750, node_2818574967(self_2818586750));
              break Label1;
              }
              
              idx_2818586801 = index_2852126828(n_2818586802);
              n_2818586802 = n_2818586802.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2818586745(self_2818586784) {
    editPrevEmpty_2818586749(self_2818586784);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2818586745(this));};

function editNextEmpty_2818586812(self_2818586813) {
      
function HEX3Aanonymous_2818586815(n_2818586818) {
        var result_2818586821 = false;

          result_2818586821 = (!((n_2818586818 == current_2818586814)) && shouldEditNode_2818583678(self_2818586813.document, n_2818586818));

        return result_2818586821;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2818580488(self_2818586813)) {
    break BeforeRet;
    }
    
    var current_2818586814 = node_2818574967(self_2818586813);
    Label1: {
      var __2818586826 = 0;
      var emptyNode_2818586827 = null;
      var colontmp__2818586871 = null;
      var colontmp__2818586872 = null;
      colontmp__2818586871 = node_2818574967(self_2818586813);
      colontmp__2818586872 = HEX3Aanonymous_2818586815;
      var i_2818586873 = 0;
      Label2: {
        var __2818586875 = 0;
        var child_2818586876 = null;
        var n_2818586877 = colontmp__2818586871;
        var idx_2818586878 = -1;
        var i_2818586879 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2818586878 == -1)) {
              __2818586875 = i_2818586879;
              child_2818586876 = n_2818586877;
              if (colontmp__2818586872(child_2818586876)) {
              __2818586826 = i_2818586873;
              emptyNode_2818586827 = child_2818586876;
              nodeHEX3D_2818576846(self_2818586813, emptyNode_2818586827);
              var _ = tryEdit_2818580643(self_2818586813, node_2818574967(self_2818586813));
              break Label1;
              i_2818586873 = addInt(i_2818586873, 1);
              }
              
              }
              
              if ((addInt(idx_2818586878, 1) < len_2852126808(n_2818586877))) {
              n_2818586877 = HEX5BHEX5D_2852126804(n_2818586877, addInt(idx_2818586878, 1));
              idx_2818586878 = -1;
              }
              else {
                var oHEX60gensym74_2818586881 = next_2852126913(n_2818586877);
                if (!isSome_2852128602(oHEX60gensym74_2818586881)) Temporary7 = false; else {                  var ne_2818586882 = get_2852128622(oHEX60gensym74_2818586881);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2818586877 == null));                }              if (Temporary6) {
              n_2818586877 = ne_2818586882;
              idx_2818586878 = -1;
              }
              else {
              if (((!((n_2818586877.parent == null)) && !((n_2818586877 == null))) && !((n_2818586877.parent == null)))) {
              idx_2818586878 = index_2852126828(n_2818586877);
              n_2818586877 = n_2818586877.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2818586879 = addInt(i_2818586879, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2818586808(self_2818586855) {
    editNextEmpty_2818586812(self_2818586855);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2818586808(this));};

function rename_2818586889(self_2818586890) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818586890)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2818580643(self_2818586890, node_2818574967(self_2818586890));
  };

  
}

function renameJsWrapper_2818586885(self_2818586918) {
    rename_2818586889(self_2818586918);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2818586885(this));};

function selectPrevCompletion_2818586939(self_2818586940) {
    if ((0 < (self_2818586940.completions).length)) {
    self_2818586940.selectedCompletion = clamp_1660945119(subInt(self_2818586940.selectedCompletion, 1), 0, subInt((self_2818586940.completions).length, 1));
    }
    else {
      self_2818586940.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2818586935(self_2818586979) {
    selectPrevCompletion_2818586939(self_2818586979);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2818586935(this));};

function selectNextCompletion_2818587000(editor_2818587001) {
    if ((0 < (editor_2818587001.completions).length)) {
    editor_2818587001.selectedCompletion = clamp_1660945119(addInt(editor_2818587001.selectedCompletion, 1), 0, subInt((editor_2818587001.completions).length, 1));
    }
    else {
      editor_2818587001.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2818586996(editor_2818587040) {
    selectNextCompletion_2818587000(editor_2818587040);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2818586996(editor_));};

function createDefaultNode_2818583334(editor_2818583335, kind_2818583336) {
  var result_2818583338 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2818583336) {
    case 0:
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 1:
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 2:
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 3:
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2818583355 = null;
        Label2: {
          var res_2818583361 = null;
          res_2818583361 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583361.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818583361.id = nimCopy(res_2818583361.id, newId_2181038297(), NTI2181038083);
          Label4: {
            Label5: {
              var res_2818583364 = null;
              res_2818583364 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583364.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2852126758(res_2818583361, res_2818583364);
        };
      };
      var node_2818583383 = res_2818583361;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583383, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2818583391 = null;
        Label8: {
          var res_2818583397 = null;
          res_2818583397 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583397.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818583397.id = nimCopy(res_2818583397.id, newId_2181038297(), NTI2181038083);
          Label10: {
            Label11: {
              var res_2818583400 = null;
              res_2818583400 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583400.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583397, res_2818583400);
            Label13: {
              var res_2818583402 = null;
              res_2818583402 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583402.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583397, res_2818583402);
          };
        };
      };
      var node_2818583430 = res_2818583397;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583430, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2818583438 = null;
        Label16: {
          var res_2818583444 = null;
          res_2818583444 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583444.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2818583444.id = nimCopy(res_2818583444.id, newId_2181038297(), NTI2181038083);
          Label18: {
            Label19: {
              var res_2818583447 = null;
              res_2818583447 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583447.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583444, res_2818583447);
            Label21: {
              var res_2818583449 = null;
              res_2818583449 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583449.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583444, res_2818583449);
          };
        };
      };
      var node_2818583477 = res_2818583444;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583477, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2818583485 = null;
        Label24: {
          var res_2818583491 = null;
          res_2818583491 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583491.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2818583493 = null;
              res_2818583493 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583493.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583491, res_2818583493);
            Label29: {
              var res_2818583495 = null;
              res_2818583495 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583495.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583491, res_2818583495);
            Label31: {
              var res_2818583497 = null;
              res_2818583497 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583497.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2818583499 = null;
                  res_2818583499 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2818583499.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2852126758(res_2818583497, res_2818583499);
            };
            add_2852126758(res_2818583491, res_2818583497);
          };
        };
      };
      var node_2818583545 = res_2818583491;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583545, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2818583553 = null;
        Label37: {
          var res_2818583559 = null;
          res_2818583559 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583559.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2818583561 = null;
              res_2818583561 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583561.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583559, res_2818583561);
            Label42: {
              var res_2818583563 = null;
              res_2818583563 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583563.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583559, res_2818583563);
          };
        };
      };
      var node_2818583591 = res_2818583559;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583591, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2818583599 = null;
        Label45: {
          var res_2818583605 = null;
          res_2818583605 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583605.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2818583607 = null;
              res_2818583607 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583607.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583605, res_2818583607);
            Label50: {
              var res_2818583609 = null;
              res_2818583609 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583609.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2852126758(res_2818583605, res_2818583609);
          };
        };
      };
      var node_2818583637 = res_2818583605;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583637, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2818583645 = null;
        Label53: {
          var res_2818583651 = null;
          res_2818583651 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2818583651.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2818583653 = null;
              res_2818583653 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2818583653.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2852126758(res_2818583651, res_2818583653);
        };
      };
      var node_2818583672 = res_2818583651;
      result_2818583338 = nimCopy(result_2818583338, some_2818581839({Field0: node_2818583672, Field1: 0}), NTI2818577693);
      break BeforeRet;
      break;
    default: 
      result_2818583338 = nimCopy(result_2818583338, none_2818582340(), NTI2818577693);
      break BeforeRet;
      break;
    }
  };

  return result_2818583338;

}

function applySelectedCompletion_2818587061(editor_2818587062) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2818587167(n_2818587170) {
          var result_2818587173 = false;

            result_2818587173 = shouldEditNode_2818583678(editor_2818587062.document, n_2818587170);

          return result_2818587173;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2818587062.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2818587062.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2818587070 = nimCopy(null, editor_2818587062.completions[chckIndx(editor_2818587062.selectedCompletion, 0, (editor_2818587062.completions).length - 1)], NTI2818573800);
    var completionText_2818587071 = nimCopy(null, editor_2818587062.completionText, NTI33554449);
    var fmtRes_2818587076 = [mnewString(0)];
    fmtRes_2818587076[0].push.apply(fmtRes_2818587076[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2332033544(fmtRes_2818587076, 0, editor_2818587062.selectedCompletion, []);
    fmtRes_2818587076[0].push.apply(fmtRes_2818587076[0], [32,40]);;
    formatValue_721420459(fmtRes_2818587076, 0, completionText_2818587071, []);
    fmtRes_2818587076[0].push.apply(fmtRes_2818587076[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818587076[0], NTI33554449)]);
    finishEdit_2818580912(editor_2818587062, false);
    switch (com_2818587070.kind) {
    case 0:
        var Temporary2 = com_2818587070;
        if (ConstSet188[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818573799)); }
        var oHEX60gensym804_2818587084 = getSymbol_2868966723(ctx_2818572341, Temporary2.id);
        if (!isSome_2952791605(oHEX60gensym804_2818587084)) Temporary1 = false; else {          var symbol_2818587107 = get_2952791625(oHEX60gensym804_2818587084);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2818576846(editor_2818587062, replaceNode_2818581480(editor_2818587062.document, node_2818574967(editor_2818587062), {kind: 1, reff: nimCopy(null, symbol_2818587107.id, NTI2181038083), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2818587070;
        if (ConstSet189[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818573799)); }
        var oHEX60gensym805_2818587110 = createDefaultNode_2818583334(editor_2818587062, Temporary4.nodeKind);
        if (!isSome_2818585524(oHEX60gensym805_2818587110)) Temporary3 = false; else {          var nodeIndex_2818587133 = nimCopy(null, get_2818585541(oHEX60gensym805_2818587110), NTI2818577688);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2818587134 = nodeIndex_2818587133["Field0"];
      var __2818587135 = nodeIndex_2818587133["Field1"];
      var _ = replaceNode_2818581480(editor_2818587062.document, node_2818574967(editor_2818587062), newNode_2818587134);
      if ((newNode_2818587134.kind == 2)) {
      newNode_2818587134.text = nimCopy(null, completionText_2818587071, NTI33554449);
      updateNode_2869016048(ctx_2818572341, newNode_2818587134);
      }
      else {
      if ((newNode_2818587134.kind == 3)) {
      if (!((completionText_2818587071[chckIndx(0, 0, (completionText_2818587071).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,53,57,50,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2818587134.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2818587071, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_2869016048(ctx_2818572341, newNode_2818587134);
      }
      }
      nodeHEX3D_2818576846(editor_2818587062, newNode_2818587134);
      Label5: {
        var __2818587174 = 0;
        var emptyNode_2818587175 = null;
        var colontmp__2818587219 = null;
        colontmp__2818587219 = HEX3Aanonymous_2818587167;
        var i_2818587220 = 0;
        Label6: {
          var __2818587222 = 0;
          var child_2818587223 = null;
          var n_2818587224 = newNode_2818587134;
          var idx_2818587225 = -1;
          var i_2818587226 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2818587225 == -1)) {
                __2818587222 = i_2818587226;
                child_2818587223 = n_2818587224;
                if (colontmp__2818587219(child_2818587223)) {
                __2818587174 = i_2818587220;
                emptyNode_2818587175 = child_2818587223;
                nodeHEX3D_2818576846(editor_2818587062, emptyNode_2818587175);
                var _ = tryEdit_2818580643(editor_2818587062, node_2818574967(editor_2818587062));
                break Label5;
                i_2818587220 = addInt(i_2818587220, 1);
                }
                
                }
                
                if ((addInt(idx_2818587225, 1) < len_2852126808(n_2818587224))) {
                n_2818587224 = HEX5BHEX5D_2852126804(n_2818587224, addInt(idx_2818587225, 1));
                idx_2818587225 = -1;
                }
                else {
                  var oHEX60gensym74_2818587228 = next_2852126913(n_2818587224);
                  if (!isSome_2852128602(oHEX60gensym74_2818587228)) Temporary11 = false; else {                    var ne_2818587229 = get_2852128622(oHEX60gensym74_2818587228);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2818587224 == newNode_2818587134));                  }                if (Temporary10) {
                n_2818587224 = ne_2818587229;
                idx_2818587225 = -1;
                }
                else {
                if (((!((n_2818587224.parent == null)) && !((n_2818587224 == newNode_2818587134))) && !((n_2818587224.parent == newNode_2818587134)))) {
                idx_2818587225 = index_2852126828(n_2818587224);
                n_2818587224 = n_2818587224.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2818587226 = addInt(i_2818587226, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2818587057(editor_2818587203) {
    applySelectedCompletion_2818587061(editor_2818587203);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2818587057(editor_));};

function cancelAndNextCompletion_2818587272(self_2818587273) {
    finishEdit_2818580912(self_2818587273, false);
    editNextEmpty_2818586812(self_2818587273);

  
}

function cancelAndNextCompletionJsWrapper_2818587268(self_2818587301) {
    cancelAndNextCompletion_2818587272(self_2818587301);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2818587268(this));};

function cancelAndPrevCompletion_2818587322(self_2818587323) {
    finishEdit_2818580912(self_2818587323, false);
    editPrevEmpty_2818586749(self_2818587323);

  
}

function cancelAndPrevCompletionJsWrapper_2818587318(self_2818587351) {
    cancelAndPrevCompletion_2818587322(self_2818587351);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2818587318(this));};

function cancelAndDelete_2818587372(self_2818587373) {
    finishEdit_2818580912(self_2818587373, false);
    self_2818587373.deletedNode = nimCopy(self_2818587373.deletedNode, some_2852126946(node_2818574967(self_2818587373)), NTI2852126839);
    nodeHEX3D_2818576846(self_2818587373, deleteNode_2818581544(self_2818587373.document, node_2818574967(self_2818587373)));

  
}

function cancelAndDeleteJsWrapper_2818587368(self_2818587404) {
    cancelAndDelete_2818587372(self_2818587404);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2818587368(this));};

function none_2852126898() {
  var result_2852126905 = ({val: 0, has: false});

  return result_2852126905;

}

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function index_2852126890(node_2852126891, parent_2852126892) {
  var result_2852126894 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2852126891.parent == null)) {
    result_2852126894 = nimCopy(result_2852126894, none_2852126898(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_2852126891.parent == parent_2852126892)) {
    result_2852126894 = nimCopy(result_2852126894, some_1191184367(index_2852126828(node_2852126891)), NTI1191183280);
    break BeforeRet;
    }
    
    result_2852126894 = nimCopy(result_2852126894, index_2852126890(node_2852126891.parent, parent_2852126892), NTI1191183280);
    break BeforeRet;
  };

  return result_2852126894;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2818587425(self_2818587426) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2818587427 = isEditing_2818580488(self_2818587426);
    finishEdit_2818580912(self_2818587426, false);
    var targetNode_2818587434 = none_2852126927();
    Label1: {
      var next_2818587435 = null;
      var colontmp__2818587575 = null;
      colontmp__2818587575 = node_2818574967(self_2818587426);
      var idx_2818587576 = 0;
      var n_2818587577 = colontmp__2818587575;
      Label2: {
          Label3: while (true) {
          if (!!((n_2818587577 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818587577), 1)), subInt(idx_2818587576, 1))) {
            n_2818587577 = HEX5BHEX5D_2852126804(n_2818587577, subInt(idx_2818587576, 1));
            idx_2818587576 = len_2852126808(n_2818587577);
            }
            else {
              var oHEX60gensym93_2818587579 = prev_2852126959(n_2818587577);
              if (!isSome_2852128602(oHEX60gensym93_2818587579)) Temporary4 = false; else {                var ne_2818587580 = get_2852128622(oHEX60gensym93_2818587579);
                Temporary4 = true;              }            if (Temporary4) {
            next_2818587435 = n_2818587577;
            Label5: {
              if ((next_2818587435 == node_2818574967(self_2818587426))) {
              break Label5;
              }
              
              if ((canInsertInto_2818584092(self_2818587426, next_2818587435) && (!((next_2818587435 == node_2818574967(self_2818587426).parent)) || (0 < index_2852126828(node_2818574967(self_2818587426)))))) {
              targetNode_2818587434 = nimCopy(targetNode_2818587434, some_2852126946(next_2818587435), NTI2852126860);
              break Label1;
              }
              
            };
            n_2818587577 = ne_2818587580;
            idx_2818587576 = len_2852126808(n_2818587577);
            }
            else {
              next_2818587435 = n_2818587577;
              Label6: {
                if ((next_2818587435 == node_2818574967(self_2818587426))) {
                break Label6;
                }
                
                if ((canInsertInto_2818584092(self_2818587426, next_2818587435) && (!((next_2818587435 == node_2818574967(self_2818587426).parent)) || (0 < index_2852126828(node_2818574967(self_2818587426)))))) {
                targetNode_2818587434 = nimCopy(targetNode_2818587434, some_2852126946(next_2818587435), NTI2852126860);
                break Label1;
                }
                
              };
              idx_2818587576 = index_2852126828(n_2818587577);
              n_2818587577 = n_2818587577.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym844_2818587449 = nimCopy(null, targetNode_2818587434, NTI2852126860);
      if (!isSome_2852128602(oHEX60gensym844_2818587449)) Temporary7 = false; else {        var newParent_2818587472 = get_2852128622(oHEX60gensym844_2818587449);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2818587473 = node_2818574967(self_2818587426);
    if ((nodeToMove_2818587473.parent == newParent_2818587472)) {
    Temporary8 = subInt(index_2852126828(nodeToMove_2818587473), 1);
    }
    else {
      var oHEX60gensym845_2818587480 = index_2852126890(nodeToMove_2818587473, newParent_2818587472);
      if (!isSome_1191185117(oHEX60gensym845_2818587480)) Temporary9 = false; else {        var index_2818587503 = get_1191185211(oHEX60gensym845_2818587480);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2818587503;
    }
    else {
    Temporary8 = len_2852126808(newParent_2818587472);
    }
    }
    var index_2818587504 = Temporary8;
    nodeHEX3D_2818576846(self_2818587426, deleteNode_2818581544(self_2818587426.document, nodeToMove_2818587473));
      var oHEX60gensym846_2818587507 = insertNode_2818579208(self_2818587426.document, newParent_2818587472, index_2818587504, nodeToMove_2818587473);
      if (!isSome_2852128602(oHEX60gensym846_2818587507)) Temporary10 = false; else {        var newNode_2818587530 = get_2852128622(oHEX60gensym846_2818587507);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2818576846(self_2818587426, newNode_2818587530);
    if (wasEditing_2818587427) {
    var _ = tryEdit_2818580643(self_2818587426, node_2818574967(self_2818587426));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2818587421(self_2818587558) {
    moveNodeToPrevSpace_2818587425(self_2818587558);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2818587421(this));};

function moveNodeToNextSpace_2818587587(self_2818587588) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2818587589 = isEditing_2818580488(self_2818587588);
    finishEdit_2818580912(self_2818587588, false);
    var targetNode_2818587596 = none_2852126927();
    Label1: {
      var __2818587597 = 0;
      var next_2818587598 = null;
      var colontmp__2818587738 = null;
      var colontmp__2818587739 = 0;
      colontmp__2818587738 = node_2818574967(self_2818587588).parent;
      colontmp__2818587739 = index_2852126828(node_2818574967(self_2818587588));
      var n_2818587741 = colontmp__2818587738;
      var idx_2818587742 = colontmp__2818587739;
      var i_2818587743 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2818587742 == subInt(len_2852126808(n_2818587741), 1))) {
            var colontmp__2818587746 = nimCopy(null, {Field0: i_2818587743, Field1: n_2818587741}, NTI2818575093);
            __2818587597 = colontmp__2818587746["Field0"];
            next_2818587598 = colontmp__2818587746["Field1"];
            Label5: {
              if ((next_2818587598 == node_2818574967(self_2818587588))) {
              break Label5;
              }
              
              if ((canInsertInto_2818584092(self_2818587588, next_2818587598) && (!((next_2818587598 == node_2818574967(self_2818587588).parent)) || (addInt(index_2852126828(node_2818574967(self_2818587588)), 1) < len_2852126808(node_2818574967(self_2818587588).parent))))) {
              targetNode_2818587596 = nimCopy(targetNode_2818587596, some_2852126946(next_2818587598), NTI2852126860);
              break Label1;
              }
              
            };
            if (((!((n_2818587741.parent == null)) && !((n_2818587741 == null))) && !((n_2818587741.parent == null)))) {
            idx_2818587742 = index_2852126828(n_2818587741);
            n_2818587741 = n_2818587741.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2818587742, 1) < len_2852126808(colontmp__2818587738))) {
            n_2818587741 = HEX5BHEX5D_2852126804(n_2818587741, addInt(idx_2818587742, 1));
            idx_2818587742 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2818587743 = addInt(i_2818587743, 1);
            }
          }
      };
    };
      var oHEX60gensym856_2818587612 = nimCopy(null, targetNode_2818587596, NTI2852126860);
      if (!isSome_2852128602(oHEX60gensym856_2818587612)) Temporary6 = false; else {        var newParent_2818587635 = get_2852128622(oHEX60gensym856_2818587612);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2818587636 = node_2818574967(self_2818587588);
    if ((nodeToMove_2818587636.parent == newParent_2818587635)) {
    Temporary7 = addInt(index_2852126828(nodeToMove_2818587636), 1);
    }
    else {
      var oHEX60gensym857_2818587643 = index_2852126890(nodeToMove_2818587636, newParent_2818587635);
      if (!isSome_1191185117(oHEX60gensym857_2818587643)) Temporary8 = false; else {        var index_2818587666 = get_1191185211(oHEX60gensym857_2818587643);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2818587666, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2818587667 = Temporary7;
    nodeHEX3D_2818576846(self_2818587588, deleteNode_2818581544(self_2818587588.document, nodeToMove_2818587636));
      var oHEX60gensym858_2818587670 = insertNode_2818579208(self_2818587588.document, newParent_2818587635, index_2818587667, nodeToMove_2818587636);
      if (!isSome_2852128602(oHEX60gensym858_2818587670)) Temporary9 = false; else {        var newNode_2818587693 = get_2852128622(oHEX60gensym858_2818587670);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2818576846(self_2818587588, newNode_2818587693);
    if (wasEditing_2818587589) {
    var _ = tryEdit_2818580643(self_2818587588, node_2818574967(self_2818587588));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2818587583(self_2818587721) {
    moveNodeToNextSpace_2818587587(self_2818587721);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2818587583(this));};

function popLast_2818577103(deq_2818577105) {
    var Temporary1;

  var result_2818577106 = null;

    if ((deq_2818577105.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818577105.count = subInt(deq_2818577105.count, 1);
    deq_2818577105.tail = (subInt(deq_2818577105.tail, 1) & deq_2818577105.mask);
    Temporary1 = deq_2818577105.data[chckIndx(deq_2818577105.tail, 0, (deq_2818577105.data).length - 1)];
    deq_2818577105.data[chckIndx(deq_2818577105.tail, 0, (deq_2818577105.data).length - 1)] = genericReset(deq_2818577105.data[chckIndx(deq_2818577105.tail, 0, (deq_2818577105.data).length - 1)], NTI2852126724);
    result_2818577106 = Temporary1;

  return result_2818577106;

}

function addFirst_2818577134(deq_2818577136, item_2818577137) {
    expandIfNeeded_2818576879(deq_2818577136);
    deq_2818577136.count = addInt(deq_2818577136.count, 1);
    deq_2818577136.head = (subInt(deq_2818577136.head, 1) & deq_2818577136.mask);
    deq_2818577136.data[chckIndx(deq_2818577136.head, 0, (deq_2818577136.data).length - 1)] = item_2818577137;

  
}

function selectPrevNode_2818577033(editor_2818577034) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2818577011(editor_2818577034.selectionHistory))) break Label2;
          var node_2818577116 = popLast_2818577103(editor_2818577034.selectionHistory);
          if (((!((node_2818577116 == null)) && !((node_2818577116.parent == null))) && (base_2852126814(node_2818577116) == editor_2818577034.document.rootNode))) {
          addFirst_2818577134(editor_2818577034.selectionHistory, editor_2818577034.selectedNode);
          editor_2818577034.selectedNode = node_2818577116;
          handleSelectedNodeChanged_2818574970(editor_2818577034);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2818587753(self_2818587754) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818587754)) {
    break BeforeRet;
    }
    
    selectPrevNode_2818577033(self_2818587754);
  };

  
}

function selectPrevJsWrapper2_2818587749(self_2818587782) {
    selectPrev_2818587753(self_2818587782);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2818587749(this));};

function selectNextNode_2818577151(editor_2818577152) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2818577011(editor_2818577152.selectionHistory))) break Label2;
          var node_2818577224 = popFirst_2818577020(editor_2818577152.selectionHistory);
          if (((!((node_2818577224 == null)) && !((node_2818577224.parent == null))) && (base_2852126814(node_2818577224) == editor_2818577152.document.rootNode))) {
          addLast_2818576870(editor_2818577152.selectionHistory, editor_2818577152.selectedNode);
          editor_2818577152.selectedNode = node_2818577224;
          handleSelectedNodeChanged_2818574970(editor_2818577152);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2818587804(self_2818587805) {
  BeforeRet: {
    if (isEditing_2818580488(self_2818587805)) {
    break BeforeRet;
    }
    
    selectNextNode_2818577151(self_2818587805);
  };

  
}

function selectNextJsWrapper2_2818587800(self_2818587833) {
    selectNext_2818587804(self_2818587833);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2818587800(this));};

function len_2818588177(t_2818588180) {
  var result_2818588181 = 0;

    result_2818588181 = t_2818588180.counter;

  return result_2818588181;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2550137470 = 0;
      colontmp__2550137470 = (a_1979711593).length - 1;
      var res_2550137471 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2550137471 <= colontmp__2550137470)) break Label3;
            i_1979711612 = res_2550137471;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2550137471 = addInt(res_2550137471, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2818588788 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818588788 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2818588788;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2818588788 = addInt(res_2818588788, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3036676132(self_3036676133, text_3036676134) {
    
function HEX3Aanonymous_3036676156(a_3036676175, b_3036676176) {
      var result_3036676181 = 0;

        result_3036676181 = cmp_3036676168(a_3036676175.score, b_3036676176.score);

      return result_3036676181;

    }

  var result_3036676135 = [];

  BeforeRet: {
    result_3036676135 = nimCopy(null, [], NTI3036676114);
    var symbols_3036676140 = computeSymbols_2868987052(ctx_2818572341, self_3036676133.document.rootNode, true);
    Label1: {
      var key_3036676145 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3036676146 = null;
      var L_2818588779 = len_2952791314(symbols_3036676140);
      Label2: {
        var h_2818588781 = 0;
        var colontmp__2818588782 = 0;
        colontmp__2818588782 = (symbols_3036676140.data).length - 1;
        var res_2818588783 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818588783 <= colontmp__2818588782)) break Label4;
              h_2818588781 = res_2818588783;
              if (isFilled_1308622880(symbols_3036676140.data[chckIndx(h_2818588781, 0, (symbols_3036676140.data).length - 1)].Field0)) {
              var colontmp__2818588786 = nimCopy(null, {Field0: nimCopy(null, symbols_3036676140.data[chckIndx(h_2818588781, 0, (symbols_3036676140.data).length - 1)].Field1, NTI2181038083), Field1: symbols_3036676140.data[chckIndx(h_2818588781, 0, (symbols_3036676140.data).length - 1)].Field2}, NTI2952791002);
              key_3036676145 = nimCopy(key_3036676145, colontmp__2818588786["Field0"], NTI2181038083);
              symbol_3036676146 = colontmp__2818588786["Field1"];
              Label5: {
                if (!((symbol_3036676146.kind == 0))) {
                break Label5;
                }
                
                var score_3036676151 = fuzzyMatchSmart_1979711572(text_3036676134, symbol_3036676146.name, true);
                result_3036676135.push({kind: 0, score: score_3036676151, id: nimCopy(null, symbol_3036676146.id, NTI2181038083), nodeKind: 0, name: []});;
              };
              if (!((len_2952791314(symbols_3036676140) == L_2818588779))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818588783 = addInt(res_2818588783, 1);
            }
        };
      };
    };
    sort_3036676188(result_3036676135, HEX3Aanonymous_3036676156, 0);
    break BeforeRet;
  };

  return result_3036676135;

}

function updateCompletions_3036676344(self_3036676345) {
    var text_3036676346 = nsuJoinSep(content_2650801275(self_3036676345.textEditor.document), []);
    self_3036676345.completions = nimCopy(null, getCompletions_3036676132(self_3036676345, text_3036676346), NTI3036676106);
    if ((0 < (self_3036676345.completions).length)) {
    self_3036676345.selected = clamp_1660945119(self_3036676345.selected, 0, subInt((self_3036676345.completions).length, 1));
    }
    else {
      self_3036676345.selected = 0;
    }
    

  
}

function handleTextChanged_3036676538(self_3036676539) {
    updateCompletions_3036676344(self_3036676539);
    self_3036676539.selected = 0;

  
}

function pop_1291849081(s_1291849083, s_1291849083_Idx) {
  var result_1291849084 = null;

    var L_1291849088 = subInt((s_1291849083[s_1291849083_Idx]).length, 1);
    result_1291849084 = s_1291849083[s_1291849083_Idx][chckIndx(L_1291849088, 0, (s_1291849083[s_1291849083_Idx]).length - 1)];
    if (s_1291849083[s_1291849083_Idx].length < chckRange(L_1291849088, 0, 2147483647)) { for (var i = s_1291849083[s_1291849083_Idx].length ; i < chckRange(L_1291849088, 0, 2147483647) ; ++i) s_1291849083[s_1291849083_Idx].push(null); }
               else { s_1291849083[s_1291849083_Idx].length = chckRange(L_1291849088, 0, 2147483647); };

  return result_1291849084;

}

function popPopup_1291849064(self_1291849065, popup_1291849066) {
    if (((0 < (self_1291849065.popups).length) && (self_1291849065.popups[chckIndx((self_1291849065.popups).length - 1, 0, (self_1291849065.popups).length - 1)] == popup_1291849066))) {
    var _ = pop_1291849081(self_1291849065, "popups");
    }
    
    requestRender_2315255899(self_1291849065.platform, false);

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function handleUnknownPopupAction_1291848821(self_1291848822, popup_1291848823, action_1291848824, arg_1291848825) {
  var result_1291848826 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848826 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848836 = [mnewString(0)];
    fmtRes_1291848836[0].push.apply(fmtRes_1291848836[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848836, 0, action_1291848824, []);
    fmtRes_1291848836[0].push.apply(fmtRes_1291848836[0], [32]);;
    formatValue_721420459(fmtRes_1291848836, 0, arg_1291848825, []);
    fmtRes_1291848836[0].push.apply(fmtRes_1291848836[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848836, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848836[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848826 = 0;
    break BeforeRet;
  };

  return result_1291848826;

}

function handleAction_3036676504(self_3036676505, action_3036676506, arg_3036676507) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3036676508 = 0;

  BeforeRet: {
    switch (toJSStr(action_3036676506)) {
    case "accept":
      if ((self_3036676505.selected < (self_3036676505.completions).length)) {
      var Temporary1 = self_3036676505.completions[chckIndx(self_3036676505.selected, 0, (self_3036676505.completions).length - 1)];
      if (ConstSet191[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818573799)); }
      self_3036676505.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849064(self_3036676505.editor, self_3036676505);
      break;
    case "cancel":
      popPopup_1291849064(self_3036676505.editor, self_3036676505);
      break;
    case "prev":
      if (((self_3036676505.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3036676505.selected, (self_3036676505.completions).length), 1), (self_3036676505.completions).length);
      }
      
      self_3036676505.selected = Temporary2;
      break;
    case "next":
      if (((self_3036676505.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3036676505.selected, 1), (self_3036676505.completions).length);
      }
      
      self_3036676505.selected = Temporary3;
      break;
    default: 
      result_3036676508 = handleUnknownPopupAction_1291848821(self_3036676505.editor, self_3036676505, action_3036676506, arg_3036676507);
      break BeforeRet;
      break;
    }
    result_3036676508 = 3;
    break BeforeRet;
  };

  return result_3036676508;

}

function newGotoPopup_3036676674(editor_3036676675, document_3036676676) {
    
function HEX3Aanonymous_3036676745(doc_3036676746) {
        handleTextChanged_3036676538(popup_3036676678);

      
    }
      
function HEX3Aanonymous_3036676794(actionHEX60gensym10HEX60gensym11_3036676795, argHEX60gensym10HEX60gensym11_3036676796) {
        var result_3036676797 = 0;

        BeforeRet: {
          if (handlerHEX60gensym10_3036676782.config.handleActions) {
          var action_3036676798 = nimCopy(null, actionHEX60gensym10HEX60gensym11_3036676795, NTI33554449);
          var arg_3036676799 = nimCopy(null, argHEX60gensym10HEX60gensym11_3036676796, NTI33554449);
          var responseHEX60gensym10HEX60gensym11_3036676800 = handleAction_3036676504(popup_3036676678, action_3036676798, arg_3036676799);
          if (handlerHEX60gensym10_3036676782.config.consumeAllActions) {
          result_3036676797 = 3;
          break BeforeRet;
          }
          
          result_3036676797 = responseHEX60gensym10HEX60gensym11_3036676800;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym10_3036676782.config.consumeAllActions) {
          result_3036676797 = 3;
          break BeforeRet;
          }
          else {
            result_3036676797 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3036676797;

      }
      
function HEX3Aanonymous_3036676802(inputHEX60gensym10HEX60gensym12_3036676803) {
        var result_3036676804 = 0;

        BeforeRet: {
          if (handlerHEX60gensym10_3036676782.config.handleInputs) {
          var input_3036676805 = nimCopy(null, inputHEX60gensym10HEX60gensym12_3036676803, NTI33554449);
          result_3036676804 = 1;
          break BeforeRet;
          }
          else {
            result_3036676804 = 1;
            break BeforeRet;
          }
          
        };

        return result_3036676804;

      }

  var result_3036676677 = null;

  BeforeRet: {
    var popup_3036676678 = {editor: editor_3036676675, document: document_3036676676, m_type: NTI3036676100, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};
    popup_3036676678.textEditor = newTextEditor_2650816370(newTextDocument_3036676679([], []), editor_3036676675);
    setMode_2650808915(popup_3036676678.textEditor, [105,110,115,101,114,116]);
    popup_3036676678.textEditor.renderHeader = false;
    popup_3036676678.textEditor.lineNumbers = nimCopy(popup_3036676678.textEditor.lineNumbers, some_3036676720(0), NTI2650800379);
    popup_3036676678.textEditor.document.singleLine = true;
    var _ = subscribe_2650816418(popup_3036676678.textEditor.document.textChanged, HEX3Aanonymous_3036676745);
    Label1: {
      var handlerHEX60gensym10_3036676782 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym10_3036676782.config = getEventHandlerConfig_1291849111(editor_3036676675, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym10_3036676782.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(editor_3036676675, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym10_3036676782.handleAction = HEX3Aanonymous_3036676794;
      handlerHEX60gensym10_3036676782.handleInput = HEX3Aanonymous_3036676802;
    };
    popup_3036676678.eventHandler = handlerHEX60gensym10_3036676782;
    updateCompletions_3036676344(popup_3036676678);
    result_3036676677 = popup_3036676678;
    break BeforeRet;
  };

  return result_3036676677;

}

function init_2264924174(self_2264924175) {
    self_2264924175.id = newEditorId_2231370043();

  
}

function pushPopup_1291849048(self_1291849049, popup_1291849050) {
    init_2264924174(popup_1291849050);
    self_1291849049.popups.push(popup_1291849050);;
    requestRender_2315255899(self_1291849049.platform, false);

  
}

function goto_2818587855(self_2818587856, where_2818587857) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2818587901(n_2818587904) {
          var result_2818587907 = false;

            result_2818587907 = (!((n_2818587904 == node_2818574967(self_2818587856))) && (HEX3DHEX3D_2181038320(n_2818587904.id, id_2818587900) || HEX3DHEX3D_2181038320(n_2818587904.reff, id_2818587900)));

          return result_2818587907;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2818587928(n_2818587931) {
          var result_2818587934 = false;

            result_2818587934 = (!((n_2818587931 == node_2818574967(self_2818587856))) && (computeType_2868976946(ctx_2818572341, n_2818587931, true).kind == 0));

          return result_2818587934;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2818587954(n_2818587957) {
          var result_2818587960 = false;

            result_2818587960 = !((n_2818587957 == node_2818574967(self_2818587856)));

          return result_2818587960;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2818588578(id_2818588579) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym901_2818588582 = getAstNode_2868957472(ctx_2818572341, id_2818588579);
            if (!isSome_2852128602(oHEX60gensym901_2818588582)) Temporary2 = false; else {              var node_2818588605 = get_2852128622(oHEX60gensym901_2818588582);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2852126814(node_2818588605) == self_2818587856.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2818576846(self_2818587856, node_2818588605);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2818580488(self_2818587856)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2818587857)) {
    case "definition":
        var oHEX60gensym884_2818587860 = computeSymbol_2868983552(ctx_2818572341, node_2818574967(self_2818587856), true);
        if (!isSome_2952791605(oHEX60gensym884_2818587860)) Temporary1 = false; else {          var sym_2818587883 = get_2952791625(oHEX60gensym884_2818587860);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2818587883.kind == 0) && !((sym_2818587883.node == self_2818587856.document.rootNode)))) {
      var Temporary2 = sym_2818587883;
      if (ConstSet190[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952790025)); }
      nodeHEX3D_2818576846(self_2818587856, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2818587892 = node_2818574967(self_2818587856);
        var pos_2818587893 = 0;
        var _ = pos_2818587893;
        if ((expr_2818587892.kind == 1)) {
        Temporary4 = node_2818574967(self_2818587856).reff;
        }
        else {
        Temporary4 = node_2818574967(self_2818587856).id;
        }
        
      };
      var id_2818587900 = nimCopy(null, Temporary4, NTI2181038083);
      Label5: {
        var __2818587912 = 0;
        var n_2818587913 = null;
        var colontmp__2818588688 = null;
        var colontmp__2818588689 = null;
        colontmp__2818588688 = node_2818574967(self_2818587856);
        colontmp__2818588689 = HEX3Aanonymous_2818587901;
        var i_2818588690 = 0;
        Label6: {
          var __2818588692 = 0;
          var child_2818588693 = null;
          var n_2818588694 = colontmp__2818588688;
          var idx_2818588695 = -1;
          var i_2818588696 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2818588695 == -1)) {
                __2818588692 = i_2818588696;
                child_2818588693 = n_2818588694;
                if (colontmp__2818588689(child_2818588693)) {
                __2818587912 = i_2818588690;
                n_2818587913 = child_2818588693;
                nodeHEX3D_2818576846(self_2818587856, n_2818587913);
                break Label5;
                i_2818588690 = addInt(i_2818588690, 1);
                }
                
                }
                
                if ((addInt(idx_2818588695, 1) < len_2852126808(n_2818588694))) {
                n_2818588694 = HEX5BHEX5D_2852126804(n_2818588694, addInt(idx_2818588695, 1));
                idx_2818588695 = -1;
                }
                else {
                  var oHEX60gensym74_2818588698 = next_2852126913(n_2818588694);
                  if (!isSome_2852128602(oHEX60gensym74_2818588698)) Temporary11 = false; else {                    var ne_2818588699 = get_2852128622(oHEX60gensym74_2818588698);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2818588694 == null));                  }                if (Temporary10) {
                n_2818588694 = ne_2818588699;
                idx_2818588695 = -1;
                }
                else {
                if (((!((n_2818588694.parent == null)) && !((n_2818588694 == null))) && !((n_2818588694.parent == null)))) {
                idx_2818588695 = index_2852126828(n_2818588694);
                n_2818588694 = n_2818588694.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2818588696 = addInt(i_2818588696, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2818587914 = node_2818574967(self_2818587856);
        var pos_2818587915 = 0;
        var _ = pos_2818587915;
        if ((expr_2818587914.kind == 1)) {
        Temporary13 = node_2818574967(self_2818587856).reff;
        }
        else {
        Temporary13 = node_2818574967(self_2818587856).id;
        }
        
      };
      var id_2818587922 = nimCopy(null, Temporary13, NTI2181038083);
      Label14: {
        var n_2818587923 = null;
        var colontmp__2818588702 = null;
        colontmp__2818588702 = node_2818574967(self_2818587856);
        var idx_2818588703 = 0;
        var n_2818588704 = colontmp__2818588702;
        Label15: {
            Label16: while (true) {
            if (!!((n_2818588704 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818588704), 1)), subInt(idx_2818588703, 1))) {
              n_2818588704 = HEX5BHEX5D_2852126804(n_2818588704, subInt(idx_2818588703, 1));
              idx_2818588703 = len_2852126808(n_2818588704);
              }
              else {
                var oHEX60gensym93_2818588706 = prev_2852126959(n_2818588704);
                if (!isSome_2852128602(oHEX60gensym93_2818588706)) Temporary17 = false; else {                  var ne_2818588707 = get_2852128622(oHEX60gensym93_2818588706);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2818587923 = n_2818588704;
              if ((!((n_2818587923 == node_2818574967(self_2818587856))) && (HEX3DHEX3D_2181038320(n_2818587923.id, id_2818587922) || HEX3DHEX3D_2181038320(n_2818587923.reff, id_2818587922)))) {
              nodeHEX3D_2818576846(self_2818587856, n_2818587923);
              break Label14;
              }
              
              n_2818588704 = ne_2818588707;
              idx_2818588703 = len_2852126808(n_2818588704);
              }
              else {
                n_2818587923 = n_2818588704;
                if ((!((n_2818587923 == node_2818574967(self_2818587856))) && (HEX3DHEX3D_2181038320(n_2818587923.id, id_2818587922) || HEX3DHEX3D_2181038320(n_2818587923.reff, id_2818587922)))) {
                nodeHEX3D_2818576846(self_2818587856, n_2818587923);
                break Label14;
                }
                
                idx_2818588703 = index_2852126828(n_2818588704);
                n_2818588704 = n_2818588704.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2818587943 = 0;
        var n_2818587944 = null;
        var colontmp__2818588709 = null;
        var colontmp__2818588710 = null;
        colontmp__2818588709 = node_2818574967(self_2818587856);
        colontmp__2818588710 = HEX3Aanonymous_2818587928;
        var i_2818588711 = 0;
        Label19: {
          var __2818588713 = 0;
          var child_2818588714 = null;
          var n_2818588715 = colontmp__2818588709;
          var idx_2818588716 = -1;
          var i_2818588717 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2818588716 == -1)) {
                __2818588713 = i_2818588717;
                child_2818588714 = n_2818588715;
                if (colontmp__2818588710(child_2818588714)) {
                __2818587943 = i_2818588711;
                n_2818587944 = child_2818588714;
                nodeHEX3D_2818576846(self_2818587856, n_2818587944);
                break Label18;
                i_2818588711 = addInt(i_2818588711, 1);
                }
                
                }
                
                if ((addInt(idx_2818588716, 1) < len_2852126808(n_2818588715))) {
                n_2818588715 = HEX5BHEX5D_2852126804(n_2818588715, addInt(idx_2818588716, 1));
                idx_2818588716 = -1;
                }
                else {
                  var oHEX60gensym74_2818588719 = next_2852126913(n_2818588715);
                  if (!isSome_2852128602(oHEX60gensym74_2818588719)) Temporary24 = false; else {                    var ne_2818588720 = get_2852128622(oHEX60gensym74_2818588719);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2818588715 == null));                  }                if (Temporary23) {
                n_2818588715 = ne_2818588720;
                idx_2818588716 = -1;
                }
                else {
                if (((!((n_2818588715.parent == null)) && !((n_2818588715 == null))) && !((n_2818588715.parent == null)))) {
                idx_2818588716 = index_2852126828(n_2818588715);
                n_2818588715 = n_2818588715.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2818588717 = addInt(i_2818588717, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2818587945 = null;
        var colontmp__2818588722 = null;
        colontmp__2818588722 = node_2818574967(self_2818587856);
        var idx_2818588723 = 0;
        var n_2818588724 = colontmp__2818588722;
        Label26: {
            Label27: while (true) {
            if (!!((n_2818588724 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818588724), 1)), subInt(idx_2818588723, 1))) {
              n_2818588724 = HEX5BHEX5D_2852126804(n_2818588724, subInt(idx_2818588723, 1));
              idx_2818588723 = len_2852126808(n_2818588724);
              }
              else {
                var oHEX60gensym93_2818588726 = prev_2852126959(n_2818588724);
                if (!isSome_2852128602(oHEX60gensym93_2818588726)) Temporary28 = false; else {                  var ne_2818588727 = get_2852128622(oHEX60gensym93_2818588726);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2818587945 = n_2818588724;
              if ((!((n_2818587945 == node_2818574967(self_2818587856))) && (computeType_2868976946(ctx_2818572341, n_2818587945, true).kind == 0))) {
              nodeHEX3D_2818576846(self_2818587856, n_2818587945);
              break Label25;
              }
              
              n_2818588724 = ne_2818588727;
              idx_2818588723 = len_2852126808(n_2818588724);
              }
              else {
                n_2818587945 = n_2818588724;
                if ((!((n_2818587945 == node_2818574967(self_2818587856))) && (computeType_2868976946(ctx_2818572341, n_2818587945, true).kind == 0))) {
                nodeHEX3D_2818576846(self_2818587856, n_2818587945);
                break Label25;
                }
                
                idx_2818588723 = index_2852126828(n_2818588724);
                n_2818588724 = n_2818588724.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2818587965 = 0;
        var n_2818587966 = null;
        var colontmp__2818588741 = null;
        var colontmp__2818588742 = null;
        colontmp__2818588741 = node_2818574967(self_2818587856);
        colontmp__2818588742 = HEX3Aanonymous_2818587954;
        var i_2818588743 = 0;
        Label30: {
          var __2818588745 = 0;
          var child_2818588746 = null;
          var n_2818588747 = colontmp__2818588741;
          var idx_2818588748 = -1;
          var i_2818588749 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2818588748 == -1)) {
                __2818588745 = i_2818588749;
                child_2818588746 = n_2818588747;
                if (colontmp__2818588742(child_2818588746)) {
                __2818587965 = i_2818588743;
                n_2818587966 = child_2818588746;
                if (contains_2869007315(ctx_2818572341.diagnosticsPerNode, n_2818587966.id)) {
                var found_2818588030 = false;
                Label34: {
                  var diags_2818588414 = [];
                  var colontmp__2818588730 = ({data: [], counter: 0});
                  colontmp__2818588730 = nimCopy(colontmp__2818588730, HEX5BHEX5D_2869003957(ctx_2818572341.diagnosticsPerNode, n_2818587966.id).queries, NTI2868903950);
                  var L_2818588735 = len_2818588177(colontmp__2818588730);
                  Label35: {
                    var h_2818588737 = 0;
                    var colontmp__2818588738 = 0;
                    colontmp__2818588738 = (colontmp__2818588730.data).length - 1;
                    var res_2818588739 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2818588739 <= colontmp__2818588738)) break Label37;
                          h_2818588737 = res_2818588739;
                          if (isFilled_1308622880(colontmp__2818588730.data[chckIndx(h_2818588737, 0, (colontmp__2818588730.data).length - 1)].Field0)) {
                          diags_2818588414 = colontmp__2818588730.data[chckIndx(h_2818588737, 0, (colontmp__2818588730.data).length - 1)]["Field2"];
                          if ((0 < (diags_2818588414).length)) {
                          found_2818588030 = true;
                          }
                          
                          if (!((len_2818588177(colontmp__2818588730) == L_2818588735))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2818588739 = addInt(res_2818588739, 1);
                        }
                    };
                  };
                };
                if (found_2818588030) {
                nodeHEX3D_2818576846(self_2818587856, n_2818587966);
                }
                
                break Label29;
                }
                
                i_2818588743 = addInt(i_2818588743, 1);
                }
                
                }
                
                if ((addInt(idx_2818588748, 1) < len_2852126808(n_2818588747))) {
                n_2818588747 = HEX5BHEX5D_2852126804(n_2818588747, addInt(idx_2818588748, 1));
                idx_2818588748 = -1;
                }
                else {
                  var oHEX60gensym74_2818588751 = next_2852126913(n_2818588747);
                  if (!isSome_2852128602(oHEX60gensym74_2818588751)) Temporary39 = false; else {                    var ne_2818588752 = get_2852128622(oHEX60gensym74_2818588751);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2818588747 == null));                  }                if (Temporary38) {
                n_2818588747 = ne_2818588752;
                idx_2818588748 = -1;
                }
                else {
                if (((!((n_2818588747.parent == null)) && !((n_2818588747 == null))) && !((n_2818588747.parent == null)))) {
                idx_2818588748 = index_2852126828(n_2818588747);
                n_2818588747 = n_2818588747.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2818588749 = addInt(i_2818588749, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2818588418 = null;
        var colontmp__2818588763 = null;
        colontmp__2818588763 = node_2818574967(self_2818587856);
        var idx_2818588764 = 0;
        var n_2818588765 = colontmp__2818588763;
        Label41: {
            Label42: while (true) {
            if (!!((n_2818588765 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2852126808(n_2818588765), 1)), subInt(idx_2818588764, 1))) {
              n_2818588765 = HEX5BHEX5D_2852126804(n_2818588765, subInt(idx_2818588764, 1));
              idx_2818588764 = len_2852126808(n_2818588765);
              }
              else {
                var oHEX60gensym93_2818588767 = prev_2852126959(n_2818588765);
                if (!isSome_2852128602(oHEX60gensym93_2818588767)) Temporary43 = false; else {                  var ne_2818588768 = get_2852128622(oHEX60gensym93_2818588767);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2818588418 = n_2818588765;
              Label44: {
                if ((n_2818588418 == node_2818574967(self_2818587856))) {
                break Label44;
                }
                
                if (contains_2869007315(ctx_2818572341.diagnosticsPerNode, n_2818588418.id)) {
                var found_2818588486 = false;
                Label45: {
                  var diags_2818588573 = [];
                  var colontmp__2818588756 = ({data: [], counter: 0});
                  colontmp__2818588756 = nimCopy(colontmp__2818588756, HEX5BHEX5D_2869003957(ctx_2818572341.diagnosticsPerNode, n_2818588418.id).queries, NTI2868903950);
                  var L_2818588757 = len_2818588177(colontmp__2818588756);
                  Label46: {
                    var h_2818588759 = 0;
                    var colontmp__2818588760 = 0;
                    colontmp__2818588760 = (colontmp__2818588756.data).length - 1;
                    var res_2818588761 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2818588761 <= colontmp__2818588760)) break Label48;
                          h_2818588759 = res_2818588761;
                          if (isFilled_1308622880(colontmp__2818588756.data[chckIndx(h_2818588759, 0, (colontmp__2818588756.data).length - 1)].Field0)) {
                          diags_2818588573 = colontmp__2818588756.data[chckIndx(h_2818588759, 0, (colontmp__2818588756.data).length - 1)]["Field2"];
                          if ((0 < (diags_2818588573).length)) {
                          found_2818588486 = true;
                          }
                          
                          if (!((len_2818588177(colontmp__2818588756) == L_2818588757))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2818588761 = addInt(res_2818588761, 1);
                        }
                    };
                  };
                };
                if (found_2818588486) {
                nodeHEX3D_2818576846(self_2818587856, n_2818588418);
                break Label40;
                }
                
                }
                
              };
              n_2818588765 = ne_2818588768;
              idx_2818588764 = len_2852126808(n_2818588765);
              }
              else {
                n_2818588418 = n_2818588765;
                Label49: {
                  if ((n_2818588418 == node_2818574967(self_2818587856))) {
                  break Label49;
                  }
                  
                  if (contains_2869007315(ctx_2818572341.diagnosticsPerNode, n_2818588418.id)) {
                  var found_2818588769 = false;
                  Label50: {
                    var diags_2818588770 = [];
                    var colontmp__2818588771 = ({data: [], counter: 0});
                    colontmp__2818588771 = nimCopy(colontmp__2818588771, HEX5BHEX5D_2869003957(ctx_2818572341.diagnosticsPerNode, n_2818588418.id).queries, NTI2868903950);
                    var L_2818588772 = len_2818588177(colontmp__2818588771);
                    Label51: {
                      var h_2818588773 = 0;
                      var colontmp__2818588774 = 0;
                      colontmp__2818588774 = (colontmp__2818588771.data).length - 1;
                      var res_2818588775 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2818588775 <= colontmp__2818588774)) break Label53;
                            h_2818588773 = res_2818588775;
                            if (isFilled_1308622880(colontmp__2818588771.data[chckIndx(h_2818588773, 0, (colontmp__2818588771.data).length - 1)].Field0)) {
                            diags_2818588770 = colontmp__2818588771.data[chckIndx(h_2818588773, 0, (colontmp__2818588771.data).length - 1)]["Field2"];
                            if ((0 < (diags_2818588770).length)) {
                            found_2818588769 = true;
                            }
                            
                            if (!((len_2818588177(colontmp__2818588771) == L_2818588772))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2818588775 = addInt(res_2818588775, 1);
                          }
                      };
                    };
                  };
                  if (found_2818588769) {
                  nodeHEX3D_2818576846(self_2818587856, n_2818588418);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2818588764 = index_2852126828(n_2818588765);
                n_2818588765 = n_2818588765.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2818588577 = newGotoPopup_3036676674(self_2818587856.editor, self_2818587856.document);
      popup_2818588577.handleSymbolSelected = HEX3Aanonymous_2818588578;
      pushPopup_1291849048(self_2818587856.editor, popup_2818588577);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2818587851(self_2818588665, where_2818588666) {
    goto_2818587855(self_2818588665, where_2818588666);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2818587851(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2449473569(c_2449473570) {
  var result_2449473571 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473571.r = (c_2449473570.r / 255.0);
    result_2449473571.g = (c_2449473570.g / 255.0);
    result_2449473571.b = (c_2449473570.b / 255.0);
    result_2449473571.a = 1.0;

  return result_2449473571;

}

function addOutput_2818588832(self_2818588834, line_2818588835, color_2818588836) {
    if ((1500 <= (self_2818588834.lines).length)) {
    delete_2818573101(self_2818588834, "lines", HEX2EHEX2E_805306418(0, subInt((self_2818588834.lines).length, 1000)));
    }
    
    if ((0 < self_2818588834.scroll)) {
    self_2818588834.scroll = addInt(self_2818588834.scroll, 1);
    }
    
    self_2818588834.lines.push({Field0: nimCopy(null, line_2818588835, NTI33554449), Field1: color_2449473569(color_2818588836)});;

  
}

function rgb_2365587543(r_2365587544, g_2365587545, b_2365587546) {
  var result_2365587547 = ({r: 0, g: 0, b: 0});

    result_2365587547 = nimCopy(result_2365587547, {r: r_2365587544, g: g_2365587545, b: b_2365587546}, NTI2365587460);

  return result_2365587547;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2818589062 = 0;
      colontmp__2818589062 = (result_855640118).length;
      var i_2818589063 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589063 < colontmp__2818589062)) break Label3;
            i_855640125 = i_2818589063;
            if ((ConstSet192[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2818589063 = addInt(i_2818589063, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet194[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2818589066 = 0;
      colontmp__2818589066 = subInt((s_855638126).length, 1);
      var res_2818589067 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818589067 <= colontmp__2818589066)) break Label3;
            iHEX60gensym11_855638133 = res_2818589067;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2818589067 = addInt(res_2818589067, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2332033664(result_2332033666, result_2332033666_Idx, value_2332033667, specifier_2332033668) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2332033668).length == 0)) {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], HEX24_33557336(value_2332033667));;
    break BeforeRet;
    }
    
    var spec_2332033672 = parseStandardFormatSpecifier_721420346(specifier_2332033668, 0, false);
    var fmode_2332033673 = 0;
    switch (spec_2332033672.typ) {
    case 101:
    case 69:
      fmode_2332033673 = 2;
      break;
    case 102:
    case 70:
      fmode_2332033673 = 1;
      break;
    case 103:
    case 71:
      fmode_2332033673 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2332033672.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2332033675 = [nsuformatBiggestFloat(value_2332033667, fmode_2332033673, chckRange(spec_2332033672.precision, -1, 32), 46)];
    var sign_2332033676 = false;
    if ((0.0 <= value_2332033667)) {
    if (!((spec_2332033672.sign == 45))) {
    sign_2332033676 = true;
    if ((value_2332033667 == 0.0)) {
    if (((1.0 / value_2332033667) == Infinity)) {
    insert_33557745(f_2332033675, 0, nimCharToStr(spec_2332033672.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2332033675, 0, nimCharToStr(spec_2332033672.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2332033676 = true;
    }
    
    if (spec_2332033672.padWithZero) {
    var signStr_2332033677 = [];
    if (sign_2332033676) {
    signStr_2332033677 = nimCopy(null, nimCharToStr(f_2332033675[0][chckIndx(0, 0, (f_2332033675[0]).length - 1)]), NTI33554449);
    f_2332033675[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2332033675[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2332033699 = subInt(subInt(spec_2332033672.minimumWidth, (f_2332033675[0]).length), (sign_2332033676 ? 1 : 0));
    if ((0 < toFill_2332033699)) {
    f_2332033675[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033699, 0, 2147483647)) || []).concat(f_2332033675[0] || []), NTI33554449);
    }
    
    if (sign_2332033676) {
    f_2332033675[0] = nimCopy(null, (signStr_2332033677 || []).concat(f_2332033675[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2332033672.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2332033672.align;
    }
    
    var align_2332033700 = Temporary1;
    var res_2332033701 = alignString_721420308(f_2332033675[0], spec_2332033672.minimumWidth, align_2332033700, spec_2332033672.fill);
    if ((ConstSet193[spec_2332033672.typ] != undefined)) {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], nsuToUpperAsciiStr(res_2332033701));;
    }
    else {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], res_2332033701);;
    }
    
  };

  
}

function ms_2281701425(nanos_2281701426) {
  var result_2281701427 = 0.0;

    result_2281701427 = (nanos_2281701426 / 1000000.0);

  return result_2281701427;

}

function runSelectedFunction_2818588797(self_2818588798) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2818580488(self_2818588798)) {
    break BeforeRet;
    }
    
    var node_2818588799 = node_2818574967(self_2818588798);
    Label1: {
        Label2: while (true) {
        if (!!((node_2818588799.parent == null))) break Label2;
          if (((node_2818588799.parent == self_2818588798.document.rootNode) && (node_2818588799.kind == 8))) {
          var timer_2818588812 = startTimer_2281701428();
          var fmtRes_2818588817 = [mnewString(0)];
          fmtRes_2818588817[0].push.apply(fmtRes_2818588817[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_2952790851(fmtRes_2818588817, 0, node_2818588799, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818588817[0], NTI33554449)]);
          updateNode_2869016048(ctx_2818572341, node_2818588799);
          var result_2818588823 = computeValue_2868980422(ctx_2818572341, node_2818588799, true);
          if (!((result_2818588823.kind == 1))) {
          if ((result_2818588823.kind == 0)) {
          Temporary3 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2818588832(executionOutput_2818572340[0], HEX24_2952790759(result_2818588823), Temporary3);
          }
          
          var fmtRes_2818588864 = [mnewString(0)];
          fmtRes_2818588864[0].push.apply(fmtRes_2818588864[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_2952790851(fmtRes_2818588864, 0, node_2818588799, []);
          fmtRes_2818588864[0].push.apply(fmtRes_2818588864[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3003123103(fmtRes_2818588864, 0, result_2818588823, []);
          fmtRes_2818588864[0].push.apply(fmtRes_2818588864[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033664(fmtRes_2818588864, 0, ms_2281701425(elapsed_2281701439(timer_2818588812)), []);
          fmtRes_2818588864[0].push.apply(fmtRes_2818588864[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818588864[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2818588799.kind == 4) && (0 < len_2852126808(node_2818588799))) && (HEX5BHEX5D_2852126804(node_2818588799, 0).kind == 11))) {
          var functionType_2818588888 = computeType_2868976946(ctx_2818572341, node_2818588799, true);
          if ((functionType_2818588888.kind == 0)) {
          var fmtRes_2818588897 = [mnewString(0)];
          fmtRes_2818588897[0].push.apply(fmtRes_2818588897[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_2952790851(fmtRes_2818588897, 0, node_2818588799, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818588897[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2818588888.kind == 4))) {
          var fmtRes_2818588911 = [mnewString(0)];
          fmtRes_2818588911[0].push.apply(fmtRes_2818588911[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_2952790851(fmtRes_2818588911, 0, node_2818588799, []);
          fmtRes_2818588911[0].push.apply(fmtRes_2818588911[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2869012020(fmtRes_2818588911, 0, functionType_2818588888, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818588911[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2818588888;
            if (ConstSet195[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952790019)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2818588929 = [mnewString(0)];
          fmtRes_2818588929[0].push.apply(fmtRes_2818588929[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_2952790851(fmtRes_2818588929, 0, node_2818588799, []);
          fmtRes_2818588929[0].push.apply(fmtRes_2818588929[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2869012020(fmtRes_2818588929, 0, functionType_2818588888, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818588929[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2818588944 = [mnewString(0)];
          fmtRes_2818588944[0].push.apply(fmtRes_2818588944[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_2952790851(fmtRes_2818588944, 0, node_2818588799, []);
          fmtRes_2818588944[0].push.apply(fmtRes_2818588944[0], [32,40]);;
          formatValue_2869012020(fmtRes_2818588944, 0, functionType_2818588888, []);
          fmtRes_2818588944[0].push.apply(fmtRes_2818588944[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818588944[0], NTI33554449)]);
          var timer_2818588955 = startTimer_2281701428();
          var maxLoopIterations_2818588965 = getOption_2650814206(self_2818588798.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2818588973 = newFunctionExecutionContext_2868973663(ctx_2818572341, {node: HEX5BHEX5D_2852126804(node_2818588799, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2818588965), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2818588974 = computeFunctionExecution_2868996731(ctx_2818572341, fec_2818588973);
          if (!((result_2818588974.kind == 1))) {
          if ((result_2818588974.kind == 0)) {
          Temporary5 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2818588832(executionOutput_2818572340[0], HEX24_2952790759(result_2818588974), Temporary5);
          }
          
          var fmtRes_2818588992 = [mnewString(0)];
          fmtRes_2818588992[0].push.apply(fmtRes_2818588992[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_2952790851(fmtRes_2818588992, 0, node_2818588799, []);
          fmtRes_2818588992[0].push.apply(fmtRes_2818588992[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3003123103(fmtRes_2818588992, 0, result_2818588974, []);
          fmtRes_2818588992[0].push.apply(fmtRes_2818588992[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033664(fmtRes_2818588992, 0, ms_2281701425(elapsed_2281701439(timer_2818588955)), []);
          fmtRes_2818588992[0].push.apply(fmtRes_2818588992[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818588992[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2818588799 = node_2818588799.parent;
        }
    };
    var fmtRes_2818589012 = [mnewString(0)];
    fmtRes_2818589012[0].push.apply(fmtRes_2818589012[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_2952790851(fmtRes_2818589012, 0, node_2818574967(self_2818588798), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818589012[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2818588793(self_2818589045) {
    runSelectedFunction_2818588797(self_2818589045);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2818588793(this));};

function toggleOption_2818589075(self_2818589076, name_2818589077) {
    switch (toJSStr(name_2818589077)) {
    case "logging":
      ctx_2818572341.enableLogging = !(ctx_2818572341.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2818589071(self_2818589106, name_2818589107) {
    toggleOption_2818589075(self_2818589106, name_2818589107);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2818589071(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2818589137(self_2818589138, which_2818589139) {
    switch (toJSStr(which_2818589139)) {
    case "":
      var _ = handleAction_2818589127(self_2818589138, self_2818589138.lastCommand["Field0"], self_2818589138.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2818589127(self_2818589138, self_2818589138.lastMoveCommand["Field0"], self_2818589138.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2818589127(self_2818589138, self_2818589138.lastEditCommand["Field0"], self_2818589138.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2818589127(self_2818589138, self_2818589138.lastOtherCommand["Field0"], self_2818589138.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2818589133(self_2818589168, which_2818589169) {
    runLastCommand_2818589137(self_2818589168, which_2818589169);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2818589133(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_2952790228(node_2952790229, index_2952790230) {
  var result_2952790231 = null;

  BeforeRet: {
    result_2952790231 = node_2952790229.children[chckIndx(index_2952790230, 0, (node_2952790229.children).length - 1)];
    break BeforeRet;
  };

  return result_2952790231;

}

function none_2952790261() {
  var result_2952790267 = ({val: null});

  return result_2952790267;

}

function none_2952790258() {
  var result_2952790260 = ({val: null});

    result_2952790260 = nimCopy(result_2952790260, none_2952790261(), NTI2952790168);

  return result_2952790260;

}

function index_2952790175(node_2952790176) {
  var result_2952790177 = 0;

  BeforeRet: {
    if ((node_2952790176.parent == null)) {
    result_2952790177 = -1;
    break BeforeRet;
    }
    
    result_2952790177 = 0;
    Label1: {
      var i_2952790204 = null;
      var i_2818589667 = 0;
      var L_2818589668 = (node_2952790176.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589667 < L_2818589668)) break Label3;
            i_2952790204 = node_2952790176.parent.children[chckIndx(i_2818589667, 0, (node_2952790176.parent.children).length - 1)];
            if (HEX3DHEX3D_2181038320(i_2952790204.id, node_2952790176.id)) {
            break BeforeRet;
            }
            
            result_2952790177 = addInt(result_2952790177, 1);
            i_2818589667 = addInt(i_2818589667, 1);
            if (!(((node_2952790176.parent.children).length == L_2818589668))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952790177;

}

function some_2952790280(val_2952790282) {
  var result_2952790283 = ({val: null});

    if (!(!((val_2952790282 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2952790283.val = val_2952790282;

  return result_2952790283;

}

function next_2952790247(node_2952790248) {
  var result_2952790253 = ({val: null});

  BeforeRet: {
    if ((node_2952790248.parent == null)) {
    result_2952790253 = nimCopy(result_2952790253, none_2952790258(), NTI2952790168);
    break BeforeRet;
    }
    
    var i_2952790277 = index_2952790175(node_2952790248);
    if ((subInt(len_2952790241(node_2952790248.parent), 1) <= i_2952790277)) {
    result_2952790253 = nimCopy(result_2952790253, none_2952790258(), NTI2952790168);
    break BeforeRet;
    }
    
    result_2952790253 = nimCopy(result_2952790253, some_2952790280(HEX5BHEX5D_2952790228(node_2952790248.parent, addInt(i_2952790277, 1))), NTI2952790168);
    break BeforeRet;
  };

  return result_2952790253;

}

function isSome_2952790329(self_2952790331) {
  var result_2952790332 = false;

    result_2952790332 = !((self_2952790331.val == null));

  return result_2952790332;

}

function isNone_2952790357(self_2952790359) {
  var result_2952790360 = false;

    result_2952790360 = (self_2952790359.val == null);

  return result_2952790360;

}

function get_2952790349(self_2952790351) {
  var result_2952790352 = null;

    if (isNone_2952790357(self_2952790351)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952790352 = self_2952790351["val"];

  return result_2952790352;

}

function newSeq_2818589422(len_2818589424) {
  var result_2818589425 = [];

    result_2818589425 = new Array(len_2818589424); for (var i = 0 ; i < len_2818589424 ; ++i) { result_2818589425[i] = {Field0: 0.0, Field1: null}; }
  return result_2818589425;

}

function mergeAlt_2818589451(a_2818589453, b_2818589454, lo_2818589455, m_2818589456, hi_2818589457, cmp_2818589460, order_2818589461) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2818589460(a_2818589453[chckIndx(m_2818589456, 0, (a_2818589453).length - 1)], a_2818589453[chckIndx(addInt(m_2818589456, 1), 0, (a_2818589453).length - 1)]), order_2818589461) <= 0)) {
    break BeforeRet;
    }
    
    var j_2818589462 = lo_2818589455;
    if (!((j_2818589462 <= m_2818589456))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2818589468 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2818589462 <= m_2818589456)) break Label2;
          b_2818589454[chckIndx(bb_2818589468, 0, (b_2818589454).length - 1)] = nimCopy(b_2818589454[chckIndx(bb_2818589468, 0, (b_2818589454).length - 1)], a_2818589453[chckIndx(j_2818589462, 0, (a_2818589453).length - 1)], NTI2818583406);
          bb_2818589468 = addInt(bb_2818589468, 1);
          j_2818589462 = addInt(j_2818589462, 1);
        }
    };
    var i_2818589479 = 0;
    var k_2818589480 = lo_2818589455;
    Label3: {
        Label4: while (true) {
        if (!((k_2818589480 < j_2818589462) && (j_2818589462 <= hi_2818589457))) break Label4;
          if ((HEX2A_1023410184(cmp_2818589460(b_2818589454[chckIndx(i_2818589479, 0, (b_2818589454).length - 1)], a_2818589453[chckIndx(j_2818589462, 0, (a_2818589453).length - 1)]), order_2818589461) <= 0)) {
          a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)] = nimCopy(a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)], b_2818589454[chckIndx(i_2818589479, 0, (b_2818589454).length - 1)], NTI2818583406);
          i_2818589479 = addInt(i_2818589479, 1);
          }
          else {
            a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)] = nimCopy(a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)], a_2818589453[chckIndx(j_2818589462, 0, (a_2818589453).length - 1)], NTI2818583406);
            j_2818589462 = addInt(j_2818589462, 1);
          }
          
          k_2818589480 = addInt(k_2818589480, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2818589480 < j_2818589462)) break Label6;
          a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)] = nimCopy(a_2818589453[chckIndx(k_2818589480, 0, (a_2818589453).length - 1)], b_2818589454[chckIndx(i_2818589479, 0, (b_2818589454).length - 1)], NTI2818583406);
          k_2818589480 = addInt(k_2818589480, 1);
          i_2818589479 = addInt(i_2818589479, 1);
        }
    };
  };

  
}

function sort_2818589410(a_2818589412, cmp_2818589415, order_2818589416) {
    var n_2818589421 = (a_2818589412).length;
    var b_2818589448 = newSeq_2818589422(chckRange(divInt(n_2818589421, 2), 0, 2147483647));
    var s_2818589449 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2818589449 < n_2818589421)) break Label2;
          var m_2818589450 = subInt(subInt(n_2818589421, 1), s_2818589449);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2818589450)) break Label4;
                mergeAlt_2818589451(a_2818589412, b_2818589448, nimMax(addInt(subInt(m_2818589450, s_2818589449), 1), 0), m_2818589450, addInt(m_2818589450, s_2818589449), cmp_2818589415, order_2818589416);
                m_2818589450 = subInt(m_2818589450, mulInt(s_2818589449, 2));
              }
          };
          s_2818589449 = mulInt(s_2818589449, 2);
        }
    };

  
}

function cmp_2818589390(x_2818589392, y_2818589393) {
  var result_2818589394 = 0;

  BeforeRet: {
    if ((x_2818589392 == y_2818589393)) {
    result_2818589394 = 0;
    break BeforeRet;
    }
    
    if ((x_2818589392 < y_2818589393)) {
    result_2818589394 = -1;
    break BeforeRet;
    }
    
    result_2818589394 = 1;
    break BeforeRet;
  };

  return result_2818589394;

}

function selectCenterNode_2818589195(self_2818589196) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2818589378(a_2818589397, b_2818589398) {
      var result_2818589403 = 0;

        result_2818589403 = cmp_2818589390(a_2818589397.Field0, b_2818589398.Field0);

      return result_2818589403;

    }

    var nodes_2818589203 = [];
    Label1: {
      var layout_2818589207 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2818589208 = ({arr: new Float32Array(2)});
      var i_2818589658 = 0;
      var L_2818589659 = (self_2818589196.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589658 < L_2818589659)) break Label3;
            layout_2818589207 = self_2818589196.lastLayouts[chckIndx(i_2818589658, 0, (self_2818589196.lastLayouts).length - 1)]["Field0"];
            offset_2818589208 = self_2818589196.lastLayouts[chckIndx(i_2818589658, 0, (self_2818589196.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2818589209 = 0;
              var node_2818589210 = null;
              var n_2818589649 = layout_2818589207.root;
              var idx_2818589650 = -1;
              var i_2818589651 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2818589650 == -1)) {
                    var colontmp__2818589654 = nimCopy(null, {Field0: i_2818589651, Field1: n_2818589649}, NTI2952790239);
                    i_2818589209 = colontmp__2818589654["Field0"];
                    node_2818589210 = colontmp__2818589654["Field1"];
                    if ((!((node_2818589210.node == null)) && (0 < len_2952790241(node_2818589210)))) {
                    var bounds_2818589214 = absoluteBounds_2952791776(node_2818589210);
                    if (intersects_2063597753(rect_2080374802(0.0, 0.0, self_2818589196.lastBounds.w, self_2818589196.lastBounds.h), HEX2B_2063597727(bounds_2818589214, vec2_2097152992(0.0, offset_2818589208.arr[chckIndx(1, 0, (offset_2818589208.arr).length - 1)])))) {
                    nodes_2818589203.push({Field0: (bounds_2818589214.y + offset_2818589208.arr[chckIndx(1, 0, (offset_2818589208.arr).length - 1)]), Field1: node_2818589210});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2818589650, 1) < len_2952790241(n_2818589649))) {
                    n_2818589649 = HEX5BHEX5D_2952790228(n_2818589649, addInt(idx_2818589650, 1));
                    idx_2818589650 = -1;
                    }
                    else {
                      var oHEX60gensym5_2818589655 = next_2952790247(n_2818589649);
                      if (!isSome_2952790329(oHEX60gensym5_2818589655)) Temporary9 = false; else {                        var ne_2818589656 = get_2952790349(oHEX60gensym5_2818589655);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2818589649 == null));                      }                    if (Temporary8) {
                    n_2818589649 = ne_2818589656;
                    idx_2818589650 = -1;
                    }
                    else {
                    if (((!((n_2818589649.parent == null)) && !((n_2818589649 == null))) && !((n_2818589649.parent == null)))) {
                    idx_2818589650 = index_2952790175(n_2818589649);
                    n_2818589649 = n_2818589649.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2818589651 = addInt(i_2818589651, 1);
                    }
                  }
              };
            };
            i_2818589658 = addInt(i_2818589658, 1);
            if (!(((self_2818589196.lastLayouts).length == L_2818589659))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2818589410(nodes_2818589203, HEX3Aanonymous_2818589378, 1);
    if ((0 < (nodes_2818589203).length)) {
    var firstY_2818589524 = nodes_2818589203[chckIndx(0, 0, (nodes_2818589203).length - 1)].Field0;
    var lastY_2818589528 = nodes_2818589203[chckIndx((nodes_2818589203).length - 1, 0, (nodes_2818589203).length - 1)].Field0;
    var middleY_2818589529 = ((firstY_2818589524 + lastY_2818589528) * 0.5);
    Label10: {
      var i_2818589562 = 0;
      var y_2818589563 = 0.0;
      var node_2818589564 = null;
      var i_2818589663 = 0;
      var L_2818589664 = (nodes_2818589203).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2818589663 < L_2818589664)) break Label12;
            i_2818589562 = i_2818589663;
            y_2818589563 = nodes_2818589203[chckIndx(i_2818589663, 0, (nodes_2818589203).length - 1)]["Field0"];
            node_2818589564 = nodes_2818589203[chckIndx(i_2818589663, 0, (nodes_2818589203).length - 1)]["Field1"];
            if (((i_2818589562 == (nodes_2818589203).length - 1) || (middleY_2818589529 < nodes_2818589203[chckIndx(addInt(i_2818589562, 1), 0, (nodes_2818589203).length - 1)].Field0))) {
            nodeHEX3D_2818576846(self_2818589196, node_2818589564.node);
            break Label10;
            }
            
            i_2818589663 = addInt(i_2818589663, 1);
            if (!(((nodes_2818589203).length == L_2818589664))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2818589191(self_2818589631) {
    selectCenterNode_2818589195(self_2818589631);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2818589191(this));};

function scroll_2818589681(self_2818589682, amount_2818589683) {
    HEX2BHEX3D_855640304(self_2818589682, "scrollOffset", amount_2818589683);

  
}

function scrollJsWrapper_2818589677(self_2818589716, amount_2818589717) {
    scroll_2818589681(self_2818589716, amount_2818589717);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2818589677(this, amount_));};

function scrollOutput_2818589743(self_2818589744, arg_2818589745) {
    switch (toJSStr(arg_2818589745)) {
    case "home":
      executionOutput_2818572340[0].scroll = (executionOutput_2818572340[0].lines).length;
      break;
    case "end":
      executionOutput_2818572340[0].scroll = 0;
      break;
    default: 
      executionOutput_2818572340[0].scroll = clamp_1660945119(addInt(executionOutput_2818572340[0].scroll, nsuParseInt(arg_2818589745)), 0, (executionOutput_2818572340[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2818589739(self_2818589785, arg_2818589786) {
    scrollOutput_2818589743(self_2818589785, arg_2818589786);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2818589739(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2818589991 = 0;
      var last_2818589992 = 0;
      var eolpos_2818589993 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2818589992 < (s_855639240).length) && !((ConstSet196[s_855639240[chckIndx(last_2818589992, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2818589992 = addInt(last_2818589992, 1);
                }
            };
            eolpos_2818589993 = last_2818589992;
            if ((last_2818589992 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2818589992, 0, (s_855639240).length - 1)] == 10)) {
            last_2818589992 = addInt(last_2818589992, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2818589992, 0, (s_855639240).length - 1)] == 13)) {
            last_2818589992 = addInt(last_2818589992, 1);
            if (((last_2818589992 < (s_855639240).length) && (s_855639240[chckIndx(last_2818589992, 0, (s_855639240).length - 1)] == 10))) {
            last_2818589992 = addInt(last_2818589992, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2818589992, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2818589993, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2818589991, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2818589988 = 0;
              colontmp__2818589988 = count_855639241;
              var res_2818589989 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2818589989 <= colontmp__2818589988)) break Label9;
                    j_855639250 = res_2818589989;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2818589989 = addInt(res_2818589989, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2818589993 == last_2818589992)) {
            break Label2;
            }
            
            first_2818589991 = last_2818589992;
          }
      };
    };

  return result_855639243;

}

function HEX24_2885699244(graph_2885699245) {
  var result_2885699246 = [];

    result_2885699246 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_2885699246.push.apply(result_2885699246, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_2885699245.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_2885699246.push.apply(result_2885699246, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_2885699246.push.apply(result_2885699246, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_2885699246.push.apply(result_2885699246, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_2885699246.push.apply(result_2885699246, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_2885699246.push.apply(result_2885699246, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_2885699246;

}

function toString_2868956148(HEX3Atmp_2868904149) {
  var result_2868956149 = [];

  BeforeRet: {
    var HEX3Atmp_2868904150 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_2868956239 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_2868956240 = null;
      Label2: {
        var node_2818589862 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818589863 = HEX3Atmp_2868904149.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2818589863 == null))) break Label4;
              node_2818589862 = nimCopy(node_2818589862, it_2818589863.value, NTI2868903998);
              var colontmp__2818589866 = nimCopy(null, {Field0: nimCopy(null, node_2818589862.key, NTI2885681177), Field1: node_2818589862.val}, NTI2868934934);
              keyHEX60gensym50_2868956239 = nimCopy(keyHEX60gensym50_2868956239, colontmp__2818589866["Field0"], NTI2885681177);
              valueHEX60gensym50_2868956240 = colontmp__2818589866["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2885681364(keyHEX60gensym50_2868956239) || [],[32,45,62,32] || [],HEX24_2852128727(valueHEX60gensym50_2868956240) || [],[10] || []));;
              it_2818589863 = it_2818589863.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym51_2868956330 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_2868956331 = null;
      Label6: {
        var node_2818589872 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818589873 = HEX3Atmp_2868904149.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_2818589873 == null))) break Label8;
              node_2818589872 = nimCopy(node_2818589872, it_2818589873.value, NTI2868904071);
              var colontmp__2818589876 = nimCopy(null, {Field0: nimCopy(null, node_2818589872.key, NTI2885681177), Field1: node_2818589872.val}, NTI2868934987);
              keyHEX60gensym51_2868956330 = nimCopy(keyHEX60gensym51_2868956330, colontmp__2818589876["Field0"], NTI2885681177);
              valueHEX60gensym51_2868956331 = colontmp__2818589876["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2885681364(keyHEX60gensym51_2868956330) || [],[32,45,62,32] || [],HEX24_2952792156(valueHEX60gensym51_2868956331) || [],[10] || []));;
              it_2818589873 = it_2818589873.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label9: {
      var keyHEX60gensym52_2868956421 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_2868956422 = null;
      Label10: {
        var node_2818589883 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818589884 = HEX3Atmp_2868904149.itemsSymbol.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_2818589884 == null))) break Label12;
              node_2818589883 = nimCopy(node_2818589883, it_2818589884.value, NTI2868904135);
              var colontmp__2818589887 = nimCopy(null, {Field0: nimCopy(null, node_2818589883.key, NTI2885681177), Field1: node_2818589883.val}, NTI2868935040);
              keyHEX60gensym52_2868956421 = nimCopy(keyHEX60gensym52_2868956421, colontmp__2818589887["Field0"], NTI2885681177);
              valueHEX60gensym52_2868956422 = colontmp__2818589887["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2885681364(keyHEX60gensym52_2868956421) || [],[32,45,62,32] || [],HEX24_2952791164(valueHEX60gensym52_2868956422) || [],[10] || []));;
              it_2818589884 = it_2818589884.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label13: {
      var keyHEX60gensym53_2868956512 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_2868956513 = null;
      Label14: {
        var node_2818589893 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2818589894 = HEX3Atmp_2868904149.itemsFunctionExecutionContext.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_2818589894 == null))) break Label16;
              node_2818589893 = nimCopy(node_2818589893, it_2818589894.value, NTI2868904199);
              var colontmp__2818589897 = nimCopy(null, {Field0: nimCopy(null, node_2818589893.key, NTI2885681177), Field1: node_2818589893.val}, NTI2868935093);
              keyHEX60gensym53_2868956512 = nimCopy(keyHEX60gensym53_2868956512, colontmp__2818589897["Field0"], NTI2885681177);
              valueHEX60gensym53_2868956513 = colontmp__2818589897["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2885681364(keyHEX60gensym53_2868956512) || [],[32,45,62,32] || [],HEX24_2952790843(valueHEX60gensym53_2868956513) || [],[10] || []));;
              it_2818589894 = it_2818589894.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label17: {
      var keyHEX60gensym54_2868956594 = null;
      var valueHEX60gensym54_2868956595 = null;
      Label18: {
        var node_2818589904 = ({key: null, val: null});
        var it_2818589905 = HEX3Atmp_2868904149.queryCacheType.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_2818589905 == null))) break Label20;
              node_2818589904 = nimCopy(node_2818589904, it_2818589905.value, NTI2868904301);
              var colontmp__2818589908 = nimCopy(null, {Field0: node_2818589904.key, Field1: node_2818589904.val}, NTI2868935146);
              keyHEX60gensym54_2868956594 = colontmp__2818589908["Field0"];
              valueHEX60gensym54_2868956595 = colontmp__2818589908["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2852128727(keyHEX60gensym54_2868956594) || [],[32,45,62,32] || [],HEX24_2952790452(valueHEX60gensym54_2868956595) || [],[10] || []));;
              it_2818589905 = it_2818589905.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label21: {
      var keyHEX60gensym55_2868956685 = null;
      var valueHEX60gensym55_2868956686 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label22: {
        var node_2818589915 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2818589916 = HEX3Atmp_2868904149.queryCacheValue.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_2818589916 == null))) break Label24;
              node_2818589915 = nimCopy(node_2818589915, it_2818589916.value, NTI2868904376);
              var colontmp__2818589919 = nimCopy(null, {Field0: node_2818589915.key, Field1: nimCopy(null, node_2818589915.val, NTI2952790023)}, NTI2868935193);
              keyHEX60gensym55_2868956685 = colontmp__2818589919["Field0"];
              valueHEX60gensym55_2868956686 = nimCopy(valueHEX60gensym55_2868956686, colontmp__2818589919["Field1"], NTI2952790023);
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2852128727(keyHEX60gensym55_2868956685) || [],[32,45,62,32] || [],HEX24_2952790759(valueHEX60gensym55_2868956686) || [],[10] || []));;
              it_2818589916 = it_2818589916.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label25: {
      var keyHEX60gensym56_2868956767 = null;
      var valueHEX60gensym56_2868956768 = ({val: null});
      Label26: {
        var node_2818589926 = ({key: null, val: ({val: null})});
        var it_2818589927 = HEX3Atmp_2868904149.queryCacheSymbol.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_2818589927 == null))) break Label28;
              node_2818589926 = nimCopy(node_2818589926, it_2818589927.value, NTI2868904447);
              var colontmp__2818589930 = nimCopy(null, {Field0: node_2818589926.key, Field1: nimCopy(null, node_2818589926.val, NTI2952791176)}, NTI2868935240);
              keyHEX60gensym56_2868956767 = colontmp__2818589930["Field0"];
              valueHEX60gensym56_2868956768 = nimCopy(valueHEX60gensym56_2868956768, colontmp__2818589930["Field1"], NTI2952791176);
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2852128727(keyHEX60gensym56_2868956767) || [],[32,45,62,32] || [],HEX24_2868956826(valueHEX60gensym56_2868956768) || [],[10] || []));;
              it_2818589927 = it_2818589927.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label29: {
      var keyHEX60gensym57_2868956927 = null;
      var valueHEX60gensym57_2868956928 = null;
      Label30: {
        var node_2818589937 = ({key: null, val: null});
        var it_2818589938 = HEX3Atmp_2868904149.queryCacheSymbols.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_2818589938 == null))) break Label32;
              node_2818589937 = nimCopy(node_2818589937, it_2818589938.value, NTI2868904520);
              var colontmp__2818589941 = nimCopy(null, {Field0: node_2818589937.key, Field1: node_2818589937.val}, NTI2868935334);
              keyHEX60gensym57_2868956927 = colontmp__2818589941["Field0"];
              valueHEX60gensym57_2868956928 = colontmp__2818589941["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2852128727(keyHEX60gensym57_2868956927) || [],[32,45,62,32] || [],HEX24_2868956986(valueHEX60gensym57_2868956928) || [],[10] || []));;
              it_2818589938 = it_2818589938.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label33: {
      var keyHEX60gensym58_2868957169 = null;
      var valueHEX60gensym58_2868957170 = null;
      Label34: {
        var node_2818589948 = ({key: null, val: null});
        var it_2818589949 = HEX3Atmp_2868904149.queryCacheSymbolType.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_2818589949 == null))) break Label36;
              node_2818589948 = nimCopy(node_2818589948, it_2818589949.value, NTI2868904586);
              var colontmp__2818589952 = nimCopy(null, {Field0: node_2818589948.key, Field1: node_2818589948.val}, NTI2868935467);
              keyHEX60gensym58_2868957169 = colontmp__2818589952["Field0"];
              valueHEX60gensym58_2868957170 = colontmp__2818589952["Field1"];
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2952791164(keyHEX60gensym58_2868957169) || [],[32,45,62,32] || [],HEX24_2952790452(valueHEX60gensym58_2868957170) || [],[10] || []));;
              it_2818589949 = it_2818589949.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label37: {
      var keyHEX60gensym59_2868957260 = null;
      var valueHEX60gensym59_2868957261 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label38: {
        var node_2818589959 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2818589960 = HEX3Atmp_2868904149.queryCacheSymbolValue.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_2818589960 == null))) break Label40;
              node_2818589959 = nimCopy(node_2818589959, it_2818589960.value, NTI2868904661);
              var colontmp__2818589963 = nimCopy(null, {Field0: node_2818589959.key, Field1: nimCopy(null, node_2818589959.val, NTI2952790023)}, NTI2868935514);
              keyHEX60gensym59_2868957260 = colontmp__2818589963["Field0"];
              valueHEX60gensym59_2868957261 = nimCopy(valueHEX60gensym59_2868957261, colontmp__2818589963["Field1"], NTI2952790023);
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2952791164(keyHEX60gensym59_2868957260) || [],[32,45,62,32] || [],HEX24_2952790759(valueHEX60gensym59_2868957261) || [],[10] || []));;
              it_2818589960 = it_2818589960.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label41: {
      var keyHEX60gensym60_2868957351 = null;
      var valueHEX60gensym60_2868957352 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_2818589970 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2818589971 = HEX3Atmp_2868904149.queryCacheFunctionExecution.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_2818589971 == null))) break Label44;
              node_2818589970 = nimCopy(node_2818589970, it_2818589971.value, NTI2868904727);
              var colontmp__2818589974 = nimCopy(null, {Field0: node_2818589970.key, Field1: nimCopy(null, node_2818589970.val, NTI2952790023)}, NTI2868935561);
              keyHEX60gensym60_2868957351 = colontmp__2818589974["Field0"];
              valueHEX60gensym60_2868957352 = nimCopy(valueHEX60gensym60_2868957352, colontmp__2818589974["Field1"], NTI2952790023);
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2952790843(keyHEX60gensym60_2868957351) || [],[32,45,62,32] || [],HEX24_2952790759(valueHEX60gensym60_2868957352) || [],[10] || []));;
              it_2818589971 = it_2818589971.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label45: {
      var keyHEX60gensym61_2868957433 = null;
      var valueHEX60gensym61_2868957434 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label46: {
        var node_2818589981 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_2818589982 = HEX3Atmp_2868904149.queryCacheNodeLayout.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_2818589982 == null))) break Label48;
              node_2818589981 = nimCopy(node_2818589981, it_2818589982.value, NTI2868904802);
              var colontmp__2818589985 = nimCopy(null, {Field0: node_2818589981.key, Field1: nimCopy(null, node_2818589981.val, NTI2952790047)}, NTI2868935608);
              keyHEX60gensym61_2868957433 = colontmp__2818589985["Field0"];
              valueHEX60gensym61_2868957434 = nimCopy(valueHEX60gensym61_2868957434, colontmp__2818589985["Field1"], NTI2952790047);
              HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, (repeat2_2885681167([124,32], 2) || []).concat(HEX24_2952792156(keyHEX60gensym61_2868957433) || [],[32,45,62,32] || [],HEX24_2952792119(valueHEX60gensym61_2868957434) || [],[10] || []));;
              it_2818589982 = it_2818589982.next;
            }
        };
      };
    };
    HEX3Atmp_2868904150.push.apply(HEX3Atmp_2868904150, nsuIndent(HEX24_2885699244(HEX3Atmp_2868904149.depGraph), 1, [124,32]));;
    result_2868956149 = nimCopy(null, HEX3Atmp_2868904150, NTI33554449);
    break BeforeRet;
  };

  return result_2868956149;

}

function dumpContext_2818589812(self_2818589813) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_2868956148(ctx_2818572341)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2818589808(self_2818589841) {
    dumpContext_2818589812(self_2818589841);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2818589808(this));};

function getModeConfig_2818589996(self_2818589997, mode_2818589998) {
  var result_2818589999 = null;

  BeforeRet: {
    result_2818589999 = getEventHandlerConfig_1291849111(self_2818589997.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2818589998 || []));
    break BeforeRet;
  };

  return result_2818589999;

}

function setMode_2818590006(self_2818590007, mode_2818590008) {
        
function HEX3Aanonymous_2818590029(actionHEX60gensym995HEX60gensym996_2818590030, argHEX60gensym995HEX60gensym996_2818590031) {
          var result_2818590032 = 0;

          BeforeRet: {
            if (handlerHEX60gensym995_2818590017.config.handleActions) {
            var action_2818590033 = nimCopy(null, actionHEX60gensym995HEX60gensym996_2818590030, NTI33554449);
            var arg_2818590034 = nimCopy(null, argHEX60gensym995HEX60gensym996_2818590031, NTI33554449);
            var responseHEX60gensym995HEX60gensym996_2818590035 = handleAction_2818589127(self_2818590007, action_2818590033, arg_2818590034);
            if (handlerHEX60gensym995_2818590017.config.consumeAllActions) {
            result_2818590032 = 3;
            break BeforeRet;
            }
            
            result_2818590032 = responseHEX60gensym995HEX60gensym996_2818590035;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym995_2818590017.config.consumeAllActions) {
            result_2818590032 = 3;
            break BeforeRet;
            }
            else {
              result_2818590032 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818590032;

        }
        
function HEX3Aanonymous_2818590037(inputHEX60gensym995HEX60gensym997_2818590038) {
          var result_2818590039 = 0;

          BeforeRet: {
            if (handlerHEX60gensym995_2818590017.config.handleInputs) {
            var input_2818590040 = nimCopy(null, inputHEX60gensym995HEX60gensym997_2818590038, NTI33554449);
            result_2818590039 = 1;
            break BeforeRet;
            }
            else {
              result_2818590039 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818590039;

        }

    if (((mode_2818590008).length == 0)) {
    self_2818590007.modeEventHandler = null;
    }
    else {
      var config_2818590009 = getModeConfig_2818589996(self_2818590007, mode_2818590008);
      Label1: {
        var handlerHEX60gensym995_2818590017 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym995_2818590017.config = config_2818590009;
        handlerHEX60gensym995_2818590017.dfaInternal = buildDFA_2046820415(config_2818590009);
        handlerHEX60gensym995_2818590017.handleAction = HEX3Aanonymous_2818590029;
        handlerHEX60gensym995_2818590017.handleInput = HEX3Aanonymous_2818590037;
      };
      self_2818590007.modeEventHandler = handlerHEX60gensym995_2818590017;
    }
    
    self_2818590007.currentMode = nimCopy(null, mode_2818590008, NTI33554449);

  
}

function setModeJsWrapper2_2818590002(self_2818590069, mode_2818590070) {
    setMode_2818590006(self_2818590069, mode_2818590070);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2818590002(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818590097(self_2818590098) {
  var result_2818590099 = [];

  BeforeRet: {
    result_2818590099 = nimCopy(null, self_2818590098.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818590099;

}

function modeJsWrapper2_2818590093(self_2818590128) {
  var result_2818590129 = [];

    result_2818590129 = nimCopy(null, mode_2818590097(self_2818590128), NTI33554449);

  return result_2818590129;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2818590093(this));};

function getContextWithMode_2818590154(self_2818590155, context_2818590156) {
  var result_2818590157 = [];

  BeforeRet: {
    result_2818590157 = nimCopy(null, (context_2818590156 || []).concat([46] || [],self_2818590155.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818590157;

}

function getContextWithModeJsWrapper2_2818590150(self_2818590187, context_2818590188) {
  var result_2818590189 = [];

    result_2818590189 = nimCopy(null, getContextWithMode_2818590154(self_2818590187, context_2818590188), NTI33554449);

  return result_2818590189;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2818590150(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function accept_3087008012(self_3087008013) {
    if ((self_3087008013.selected < (self_3087008013.completions).length)) {
    self_3087008013.handleItemConfirmed(self_3087008013.completions[chckIndx(self_3087008013.selected, 0, (self_3087008013.completions).length - 1)]);
    }
    
    popPopup_1291849064(self_3087008013.editor, self_3087008013);

  
}

function acceptJsWrapper_3087008008(self_3087008069) {
    accept_3087008012(self_3087008069);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3087008008(this));};

function cancel_3087008111(self_3087008112) {
    if (!((self_3087008112.handleCanceled == null))) {
    self_3087008112.handleCanceled();
    }
    
    popPopup_1291849064(self_3087008112.editor, self_3087008112);

  
}

function cancelJsWrapper_3087008107(self_3087008146) {
    cancel_3087008111(self_3087008146);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3087008107(this));};

function prev_3087008167(self_3087008168) {
    var Temporary1;

    if (((self_3087008168.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3087008168.selected, (self_3087008168.completions).length), 1), (self_3087008168.completions).length);
    }
    
    self_3087008168.selected = Temporary1;
    if (((0 < (self_3087008168.completions).length) && !((self_3087008168.handleItemSelected == null)))) {
    self_3087008168.handleItemSelected(self_3087008168.completions[chckIndx(self_3087008168.selected, 0, (self_3087008168.completions).length - 1)]);
    }
    

  
}

function prevJsWrapper_3087008163(self_3087008214) {
    prev_3087008167(self_3087008214);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3087008163(this));};

function next_3087008235(self_3087008236) {
    var Temporary1;

    if (((self_3087008236.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3087008236.selected, 1), (self_3087008236.completions).length);
    }
    
    self_3087008236.selected = Temporary1;
    if (((0 < (self_3087008236.completions).length) && !((self_3087008236.handleItemSelected == null)))) {
    self_3087008236.handleItemSelected(self_3087008236.completions[chckIndx(self_3087008236.selected, 0, (self_3087008236.completions).length - 1)]);
    }
    

  
}

function nextJsWrapper_3087008231(self_3087008279) {
    next_3087008235(self_3087008279);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3087008231(this));};

function getBackend_1291853763(self_1291853764) {
  var result_1291853765 = 0;

  BeforeRet: {
    result_1291853765 = self_1291853764.backend;
    break BeforeRet;
  };

  return result_1291853765;

}

function getBackendJsWrapper_1291853759(self_1291853816) {
  var result_1291853817 = 0;

    result_1291853817 = getBackend_1291853763(self_1291853816);

  return result_1291853817;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291853759(this));};

function requestRender_1291853930(self_1291853931, redrawEverything_1291853932) {
    requestRender_2315255899(self_1291853931.platform, redrawEverything_1291853932);

  
}

function requestRenderJsWrapper_1291853926(self_1291853960, redrawEverything_1291853961) {
    requestRender_1291853930(self_1291853960, redrawEverything_1291853961);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291853926(this, redrawEverything_));};

function setHandleInputs_2046820706(config_2046820707, value_2046820708) {
    config_2046820707.handleInputs = value_2046820708;
    config_2046820707.revision = addInt(config_2046820707.revision, 1);

  
}

function setHandleInputs_1291853982(self_1291853983, context_1291853984, value_1291853985) {
    setHandleInputs_2046820706(getEventHandlerConfig_1291849111(self_1291853983, context_1291853984), value_1291853985);

  
}

function setHandleInputsJsWrapper_1291853978(self_1291854014, context_1291854015, value_1291854016) {
    setHandleInputs_1291853982(self_1291854014, context_1291854015, value_1291854016);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291853978(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2046820713(config_2046820714, value_2046820715) {
    config_2046820714.handleActions = value_2046820715;
    config_2046820714.revision = addInt(config_2046820714.revision, 1);

  
}

function setHandleActions_1291854042(self_1291854043, context_1291854044, value_1291854045) {
    setHandleActions_2046820713(getEventHandlerConfig_1291849111(self_1291854043, context_1291854044), value_1291854045);

  
}

function setHandleActionsJsWrapper_1291854038(self_1291854074, context_1291854075, value_1291854076) {
    setHandleActions_1291854042(self_1291854074, context_1291854075, value_1291854076);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291854038(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2046820720(config_2046820721, value_2046820722) {
    config_2046820721.consumeAllActions = value_2046820722;
    config_2046820721.revision = addInt(config_2046820721.revision, 1);

  
}

function setConsumeAllActions_1291854102(self_1291854103, context_1291854104, value_1291854105) {
    setConsumeAllActions_2046820720(getEventHandlerConfig_1291849111(self_1291854103, context_1291854104), value_1291854105);

  
}

function setConsumeAllActionsJsWrapper_1291854098(self_1291854134, context_1291854135, value_1291854136) {
    setConsumeAllActions_1291854102(self_1291854134, context_1291854135, value_1291854136);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291854098(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2046820727(config_2046820728, value_2046820729) {
    config_2046820728.consumeAllInput = value_2046820729;
    config_2046820728.revision = addInt(config_2046820728.revision, 1);

  
}

function setConsumeAllInput_1291854162(self_1291854163, context_1291854164, value_1291854165) {
    setConsumeAllInput_2046820727(getEventHandlerConfig_1291849111(self_1291854163, context_1291854164), value_1291854165);

  
}

function setConsumeAllInputJsWrapper_1291854158(self_1291854194, context_1291854195, value_1291854196) {
    setConsumeAllInput_1291854162(self_1291854194, context_1291854195, value_1291854196);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291854158(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet197[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2650808286(editor_2650808288, path_2650808289, default_2650808290) {
  var result_2650808295 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2650808288 == null)) {
      result_2650808295 = default_2650808290;
      break BeforeRet;
      }
      
      var nodeHEX60gensym141_2650808306 = HEX7BHEX7D_1627393316(editor_2650808288.options, nsuSplitString(path_2650808289, [46], -1));
      if ((nodeHEX60gensym141_2650808306 == null)) {
      result_2650808295 = default_2650808290;
      break BeforeRet;
      }
      
    };
    result_2650808295 = getBool_1627390147(nodeHEX60gensym141_2650808306, default_2650808290);
    break BeforeRet;
  };

  return result_2650808295;

}

function getFlag_1291848862(self_1291848863, flag_1291848864, default_1291848865) {
  var result_1291854226 = false;

  BeforeRet: {
    result_1291854226 = getOption_2650808286(self_1291848863, flag_1291848864, default_1291848865);
    break BeforeRet;
  };

  return result_1291854226;

}

function getFlagJsWrapper2_1291854218(self_1291854265, flag_1291854266, default_1291854267) {
  var result_1291854268 = false;

    result_1291854268 = getFlag_1291848862(self_1291854265, flag_1291854266, default_1291854267);

  return result_1291854268;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291854218(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function setOption_1291854303(editor_1291854305, path_1291854306, value_1291854307) {
  BeforeRet: {
    Label1: {
      if ((editor_1291854305 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym200_1291854322 = nsuSplitString(path_1291854306, [46], -1);
      var nodeHEX60gensym200_1291854323 = editor_1291854305.options;
      Label2: {
        var keyHEX60gensym200_1291854342 = [];
        var colontmp__1291854410 = [];
        colontmp__1291854410 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym200_1291854322, HEX2EHEX2E_1040187488(0, 2));
        var i_1291854411 = 0;
        var L_1291854412 = (colontmp__1291854410).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291854411 < L_1291854412)) break Label4;
              keyHEX60gensym200_1291854342 = colontmp__1291854410[chckIndx(i_1291854411, 0, (colontmp__1291854410).length - 1)];
              if (!((nodeHEX60gensym200_1291854323.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym200_1291854323, keyHEX60gensym200_1291854342))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym200_1291854323, keyHEX60gensym200_1291854342, newJObject_1627390051());
              }
              
              nodeHEX60gensym200_1291854323 = HEX5BHEX5D_1627393037(nodeHEX60gensym200_1291854323, keyHEX60gensym200_1291854342);
              i_1291854411 = addInt(i_1291854411, 1);
              if (!(((colontmp__1291854410).length == L_1291854412))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym200_1291854323 == null) || !((nodeHEX60gensym200_1291854323.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym200_1291854323, HEX5BHEX5D_2566914816(pathItemsHEX60gensym200_1291854322, 1), newJBool_1627390046(value_1291854307));
    };
  };

  
}

function setFlag_1291848939(self_1291848940, flag_1291848941, value_1291848942) {
    setOption_1291854303(self_1291848940, flag_1291848941, value_1291848942);

  
}

function setFlagJsWrapper2_1291854295(self_1291854386, flag_1291854387, value_1291854388) {
    setFlag_1291848939(self_1291854386, flag_1291854387, value_1291854388);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291854295(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848943(self_1291848944, flag_1291848945) {
    setFlag_1291848939(self_1291848944, flag_1291848945, !(getFlag_1291848862(self_1291848944, flag_1291848945, false)));

  
}

function toggleFlagJsWrapper_1291854416(self_1291854450, flag_1291854451) {
    toggleFlag_1291848943(self_1291854450, flag_1291854451);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291854416(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291854472(self_1291854473, option_1291854474, value_1291854475) {
  BeforeRet: {
    if ((self_1291854473 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1291854479 = nsuSplitString(option_1291854474, [46], -1);
    var node_1291854480 = self_1291854473.options;
    Label1: {
      var key_1291854499 = [];
      var colontmp__1291854561 = [];
      colontmp__1291854561 = HEX5BHEX5D_2650814138(pathItems_1291854479, HEX2EHEX2E_1040187488(0, 2));
      var i_1291854562 = 0;
      var L_1291854563 = (colontmp__1291854561).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854562 < L_1291854563)) break Label3;
            key_1291854499 = colontmp__1291854561[chckIndx(i_1291854562, 0, (colontmp__1291854561).length - 1)];
            if (!((node_1291854480.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291854480, key_1291854499))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291854480, key_1291854499, newJObject_1627390051());
            }
            
            node_1291854480 = HEX5BHEX5D_1627393037(node_1291854480, key_1291854499);
            i_1291854562 = addInt(i_1291854562, 1);
            if (!(((colontmp__1291854561).length == L_1291854563))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291854480 == null) || !((node_1291854480.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291854480, HEX5BHEX5D_2566914816(pathItems_1291854479, 1), value_1291854475);
  };

  
}

function setOptionJsWrapper_1291854468(self_1291854543, option_1291854544, value_1291854545) {
    setOption_1291854472(self_1291854543, option_1291854544, value_1291854545);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291854468(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291854571(self_1291854572) {
    self_1291854572.closeRequested = true;

  
}

function quitJsWrapper_1291854567(self_1291854599) {
    quit_1291854571(self_1291854599);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291854567(this));};

function changeFontSize_1291854615(self_1291854616, amount_1291854617) {
    fontSizeHEX3D_2315255929(self_1291854616.platform, (fontSize_2315255937(self_1291854616.platform) + amount_1291854617));
    requestRender_2315255899(self_1291854616.platform, true);

  
}

function changeFontSizeJsWrapper_1291854611(self_1291854645, amount_1291854646) {
    changeFontSize_1291854615(self_1291854645, amount_1291854646);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291854611(this, amount_));};

function rawGet_1291848300(t_1291848303, key_1291848304, hc_1291848305, hc_1291848305_Idx) {
  var result_1291848306 = 0;

  BeforeRet: {
    hc_1291848305[hc_1291848305_Idx] = hash_1325400491(key_1291848304);
    if ((hc_1291848305[hc_1291848305_Idx] == 0)) {
    hc_1291848305[hc_1291848305_Idx] = 314159265;
    }
    
    if (((t_1291848303.data).length == 0)) {
    result_1291848306 = -1;
    break BeforeRet;
    }
    
    var h_1291848358 = (hc_1291848305[hc_1291848305_Idx] & (t_1291848303.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848303.data[chckIndx(h_1291848358, 0, (t_1291848303.data).length - 1)].Field0)) break Label2;
          if (((t_1291848303.data[chckIndx(h_1291848358, 0, (t_1291848303.data).length - 1)].Field0 == hc_1291848305[hc_1291848305_Idx]) && eqStrings(t_1291848303.data[chckIndx(h_1291848358, 0, (t_1291848303.data).length - 1)].Field1, key_1291848304))) {
          result_1291848306 = h_1291848358;
          break BeforeRet;
          }
          
          h_1291848358 = nextTry_1308622883(h_1291848358, (t_1291848303.data).length - 1);
        }
    };
    result_1291848306 = subInt(-1, h_1291848358);
  };

  return result_1291848306;

}

function mustRehash_1291851756(t_1291851758) {
  var result_1291851759 = false;

    if (!((t_1291851758.counter < (t_1291851758.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851759 = ((mulInt((t_1291851758.data).length, 2) < mulInt(t_1291851758.counter, 3)) || (subInt((t_1291851758.data).length, t_1291851758.counter) < 4));

  return result_1291851759;

}

function rawInsert_1291852205(t_1291852209, data_1291852210, data_1291852210_Idx, key_1291852211, val_1291852212, hc_1291852213, h_1291852214) {
    data_1291852210[data_1291852210_Idx][chckIndx(h_1291852214, 0, (data_1291852210[data_1291852210_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852211, NTI33554449);
    data_1291852210[data_1291852210_Idx][chckIndx(h_1291852214, 0, (data_1291852210[data_1291852210_Idx]).length - 1)].Field2 = val_1291852212;
    data_1291852210[data_1291852210_Idx][chckIndx(h_1291852214, 0, (data_1291852210[data_1291852210_Idx]).length - 1)].Field0 = hc_1291852213;

  
}

function enlarge_1291851911(t_1291851914) {
    var n_1291851917 = [];
    n_1291851917 = new Array(chckRange(mulInt((t_1291851914.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291851914.data).length, 2), 0, 2147483647) ; ++i) { n_1291851917[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291851914.data; t_1291851914.data = n_1291851917; n_1291851917 = Temporary1;    Label2: {
      var i_1291851981 = 0;
      var colontmp__1291854973 = 0;
      colontmp__1291854973 = (n_1291851917).length - 1;
      var res_1291854974 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291854974 <= colontmp__1291854973)) break Label4;
            i_1291851981 = res_1291854974;
            var eh_1291852035 = n_1291851917[chckIndx(i_1291851981, 0, (n_1291851917).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852035)) {
            var j_1291852039 = (eh_1291852035 & (t_1291851914.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291851914.data[chckIndx(j_1291852039, 0, (t_1291851914.data).length - 1)].Field0)) break Label6;
                  j_1291852039 = nextTry_1308622883(j_1291852039, (t_1291851914.data).length - 1);
                }
            };
            rawInsert_1291852205(t_1291851914, t_1291851914, "data", n_1291851917[chckIndx(i_1291851981, 0, (n_1291851917).length - 1)].Field1, n_1291851917[chckIndx(i_1291851981, 0, (n_1291851917).length - 1)].Field2, eh_1291852035, j_1291852039);
            }
            
            res_1291854974 = addInt(res_1291854974, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852383(t_1291852386, key_1291852387, hc_1291852388) {
  var result_1291852389 = 0;

  BeforeRet: {
    if (((t_1291852386.data).length == 0)) {
    result_1291852389 = -1;
    break BeforeRet;
    }
    
    var h_1291852440 = (hc_1291852388 & (t_1291852386.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852386.data[chckIndx(h_1291852440, 0, (t_1291852386.data).length - 1)].Field0)) break Label2;
          if (((t_1291852386.data[chckIndx(h_1291852440, 0, (t_1291852386.data).length - 1)].Field0 == hc_1291852388) && eqStrings(t_1291852386.data[chckIndx(h_1291852440, 0, (t_1291852386.data).length - 1)].Field1, key_1291852387))) {
          result_1291852389 = h_1291852440;
          break BeforeRet;
          }
          
          h_1291852440 = nextTry_1308622883(h_1291852440, (t_1291852386.data).length - 1);
        }
    };
    result_1291852389 = subInt(-1, h_1291852440);
  };

  return result_1291852389;

}

function mgetOrPut_1291854697(t_1291854700, key_1291854701, val_1291854702) {
  var result_1291854703 = null;
  var result_1291854703_Idx = 0;

    if (((t_1291854700.data).length == 0)) {
    var correctSizeHEX60gensym257_1291854752 = slotsNeeded_1308622891(32);
    t_1291854700.counter = 0;
    t_1291854700.data = new Array(chckRange(correctSizeHEX60gensym257_1291854752, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym257_1291854752, 0, 2147483647) ; ++i) { t_1291854700.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291854757 = [0];
    var index_1291854764 = rawGet_1291848300(t_1291854700, key_1291854701, hc_1291854757, 0);
    if ((index_1291854764 < 0)) {
    if (((t_1291854700.data).length == 0)) {
    var correctSizeHEX60gensym260_1291854813 = slotsNeeded_1308622891(32);
    t_1291854700.counter = 0;
    t_1291854700.data = new Array(chckRange(correctSizeHEX60gensym260_1291854813, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym260_1291854813, 0, 2147483647) ; ++i) { t_1291854700.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851756(t_1291854700)) {
    enlarge_1291851911(t_1291854700);
    index_1291854764 = rawGetKnownHC_1291852383(t_1291854700, key_1291854701, hc_1291854757[0]);
    }
    
    index_1291854764 = subInt(-1, index_1291854764);
    rawInsert_1291852205(t_1291854700, t_1291854700, "data", key_1291854701, val_1291854702, hc_1291854757[0], index_1291854764);
    t_1291854700.counter = addInt(t_1291854700.counter, 1);
    }
    
    result_1291854703 = t_1291854700.data[chckIndx(index_1291854764, 0, (t_1291854700.data).length - 1)]; result_1291854703_Idx = "Field2";

  return [result_1291854703, result_1291854703_Idx];

}

function changeLayoutProp_1291854667(self_1291854668, prop_1291854669, change_1291854670) {
    var Temporary1;

    HEX2BHEX3D_2080374895((Temporary1 = mgetOrPut_1291854697(self_1291854668.layout_props.props, prop_1291854669, 0.0), Temporary1)[0], Temporary1[1], change_1291854670);
    requestRender_2315255899(self_1291854668.platform, true);

  
}

function changeLayoutPropJsWrapper_1291854663(self_1291854948, prop_1291854949, change_1291854950) {
    changeLayoutProp_1291854667(self_1291854948, prop_1291854949, change_1291854950);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291854663(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291854983(self_1291854984) {
    self_1291854984.statusBarOnTop = !(self_1291854984.statusBarOnTop);
    requestRender_2315255899(self_1291854984.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291854979(self_1291855011) {
    toggleStatusBarLocation_1291854983(self_1291855011);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291854979(this));};

function createEditorForDocument_1291848866(self_1291848867, document_1291848868) {
  var result_1291848869 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848892 = null;
      var i_1291855071 = 0;
      var L_1291855072 = (self_1291848867.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855071 < L_1291855072)) break Label3;
            editor_1291848892 = self_1291848867.editor_defaults[chckIndx(i_1291855071, 0, (self_1291848867.editor_defaults).length - 1)];
            if (canEdit_2147483771(editor_1291848892, document_1291848868)) {
            result_1291848869 = createWithDocument_2147483786(editor_1291848892, document_1291848868);
            break BeforeRet;
            }
            
            i_1291855071 = addInt(i_1291855071, 1);
            if (!(((self_1291848867.editor_defaults).length == L_1291855072))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2130706438(document_1291848868) || [])]);
    result_1291848869 = null;
    break BeforeRet;
  };

  return result_1291848869;

}

function subscribe_1291848985(event_1291848987, callback_1291848988) {
  var result_1291848989 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291848989 = nimCopy(result_1291848989, newId_2181038297(), NTI2181038083);
    event_1291848987.handlers.push({Field0: nimCopy(null, result_1291848989, NTI2181038083), Field1: callback_1291848988});;

  return result_1291848989;

}

function createView_1291848946(self_1291848947, document_1291848948) {
    
function HEX3Aanonymous_1291848961() {
        requestRender_2315255899(self_1291848947.platform, false);

      
    }

    var editor_1291848949 = createEditorForDocument_1291848866(self_1291848947, document_1291848948);
    injectDependencies_1291847741(editor_1291848949, self_1291848947);
    var _ = subscribe_1291848985(editor_1291848949.onMarkedDirty, HEX3Aanonymous_1291848961);
    var view_1291849012 = {document: document_1291848948, editor: editor_1291848949};
    self_1291848947.views.push(view_1291849012);;
    self_1291848947.currentView = subInt((self_1291848947.views).length, 1);
    requestRender_2315255899(self_1291848947.platform, false);

  
}

function createView_1291855027(self_1291855028) {
    createView_1291848946(self_1291855028, newTextDocument_3036676679([], []));

  
}

function createViewJsWrapper_1291855023(self_1291855059) {
    createView_1291855027(self_1291855059);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291855023(this));};

function delete_1291855082(x_1291855084, x_1291855084_Idx, i_1291855085) {
    x_1291855084[x_1291855084_Idx].splice(i_1291855085, 1);

  
}

function closeCurrentView_1291855080(self_1291855081) {
    unregister_2147483811(self_1291855081.views[chckIndx(self_1291855081.currentView, 0, (self_1291855081.views).length - 1)].editor);
    delete_1291855082(self_1291855081, "views", chckRange(self_1291855081.currentView, 0, 2147483647));
    self_1291855081.currentView = clamp_1660945119(self_1291855081.currentView, 0, subInt((self_1291855081.views).length, 1));
    requestRender_2315255899(self_1291855081.platform, false);

  
}

function closeCurrentViewJsWrapper_1291855076(self_1291855138) {
    closeCurrentView_1291855080(self_1291855138);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291855076(this));};

function insert_1291855172(x_1291855174, x_1291855174_Idx, item_1291855175, i_1291855176) {
    var it_1291855196 = null;
    x_1291855174[x_1291855174_Idx] = x_1291855174[x_1291855174_Idx] || []; x_1291855174[x_1291855174_Idx].splice(i_1291855176, 0, it_1291855196);
    x_1291855174[x_1291855174_Idx][chckIndx(i_1291855176, 0, (x_1291855174[x_1291855174_Idx]).length - 1)] = item_1291855175;

  
}

function moveCurrentViewToTop_1291855159(self_1291855160) {
    if ((0 < (self_1291855160.views).length)) {
    var view_1291855167 = self_1291855160.views[chckIndx(self_1291855160.currentView, 0, (self_1291855160.views).length - 1)];
    delete_1291855082(self_1291855160, "views", chckRange(self_1291855160.currentView, 0, 2147483647));
    insert_1291855172(self_1291855160, "views", view_1291855167, 0);
    }
    
    self_1291855160.currentView = 0;
    requestRender_2315255899(self_1291855160.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291855155(self_1291855223) {
    moveCurrentViewToTop_1291855159(self_1291855223);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291855155(this));};

function nextView_1291855240(self_1291855241) {
    var Temporary1;

    if (((self_1291855241.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291855241.currentView, 1), (self_1291855241.views).length);
    }
    
    self_1291855241.currentView = Temporary1;
    requestRender_2315255899(self_1291855241.platform, false);

  
}

function nextViewJsWrapper_1291855236(self_1291855274) {
    nextView_1291855240(self_1291855274);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291855236(this));};

function prevView_1291855290(self_1291855291) {
    var Temporary1;

    if (((self_1291855291.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291855291.currentView, (self_1291855291.views).length), 1), (self_1291855291.views).length);
    }
    
    self_1291855291.currentView = Temporary1;
    requestRender_2315255899(self_1291855291.platform, false);

  
}

function prevViewJsWrapper_1291855286(self_1291855327) {
    prevView_1291855290(self_1291855327);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291855286(this));};

function moveCurrentViewPrev_1291855343(self_1291855344) {
    if ((0 < (self_1291855344.views).length)) {
    var view_1291855351 = self_1291855344.views[chckIndx(self_1291855344.currentView, 0, (self_1291855344.views).length - 1)];
    var index_1291855358 = modInt(subInt(addInt(self_1291855344.currentView, (self_1291855344.views).length), 1), (self_1291855344.views).length);
    delete_1291855082(self_1291855344, "views", chckRange(self_1291855344.currentView, 0, 2147483647));
    insert_1291855172(self_1291855344, "views", view_1291855351, chckRange(index_1291855358, 0, 2147483647));
    self_1291855344.currentView = index_1291855358;
    }
    
    requestRender_2315255899(self_1291855344.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291855339(self_1291855394) {
    moveCurrentViewPrev_1291855343(self_1291855394);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291855339(this));};

function moveCurrentViewNext_1291855410(self_1291855411) {
    if ((0 < (self_1291855411.views).length)) {
    var view_1291855418 = self_1291855411.views[chckIndx(self_1291855411.currentView, 0, (self_1291855411.views).length - 1)];
    var index_1291855422 = modInt(addInt(self_1291855411.currentView, 1), (self_1291855411.views).length);
    delete_1291855082(self_1291855411, "views", chckRange(self_1291855411.currentView, 0, 2147483647));
    insert_1291855172(self_1291855411, "views", view_1291855418, chckRange(index_1291855422, 0, 2147483647));
    self_1291855411.currentView = index_1291855422;
    }
    
    requestRender_2315255899(self_1291855411.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291855406(self_1291855458) {
    moveCurrentViewNext_1291855410(self_1291855458);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291855406(this));};

function setLayout_1291855474(self_1291855475, layout_1291855476) {
    var Temporary1;

    switch (toJSStr(layout_1291855476)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291855475.layout = Temporary1;
    requestRender_2315255899(self_1291855475.platform, false);

  
}

function setLayoutJsWrapper_1291855470(self_1291855540, layout_1291855541) {
    setLayout_1291855474(self_1291855540, layout_1291855541);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291855470(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291850979(self_1291850980) {
  var result_1291850981 = null;

    result_1291850981 = self_1291850980.commandLineTextEditor;

  return result_1291850981;

}

function commandLine_1291855562(self_1291855563, initialValue_1291855564) {
    contentHEX3D_2650801153(getCommandLineTextEditor_1291850979(self_1291855563).document, [nimCopy(null, initialValue_1291855564, NTI33554449)]);
    self_1291855563.commandLineMode = true;
    requestRender_2315255899(self_1291855563.platform, false);

  
}

function commandLineJsWrapper_1291855558(self_1291855596, initialValue_1291855597) {
    commandLine_1291855562(self_1291855596, initialValue_1291855597);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291855558(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291855618(self_1291855619) {
    contentHEX3D_2650801153(getCommandLineTextEditor_1291850979(self_1291855619).document, [[]]);
    self_1291855619.commandLineMode = false;
    requestRender_2315255899(self_1291855619.platform, false);

  
}

function exitCommandLineJsWrapper_1291855614(self_1291855650) {
    exitCommandLine_1291855618(self_1291855650);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291855614(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291855723 = 0;
      var L_1291855724 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855723 < L_1291855724)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291855723, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291855723 = addInt(i_1291855723, 1);
            if (!(((a_1593835606).length == L_1291855724))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2046821786(action_2046821787) {
  var result_2046821790 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2046821796 = find_1593835603(action_2046821787, 32);
    if ((spaceIndex_2046821796 == -1)) {
    var colontmp__1291855718 = nimCopy(null, action_2046821787, NTI33554449);
    var colontmp__1291855719 = [];
    result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291855718, NTI33554449), Field1: nimCopy(null, colontmp__1291855719, NTI33554449)}, NTI2046821074);
    break BeforeRet;
    }
    else {
      var colontmp__1291855720 = HEX5BHEX5D_855639291(action_2046821787, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2046821796, 1)));
      var colontmp__1291855721 = HEX5BHEX5D_855639319(action_2046821787, HEX2EHEX2E_1040187488(addInt(spaceIndex_2046821796, 1), 1));
      result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291855720, NTI33554449), Field1: nimCopy(null, colontmp__1291855721, NTI33554449)}, NTI2046821074);
      break BeforeRet;
    }
    
  };

  return result_2046821790;

}

function executeCommandLine_1291855666(self_1291855667) {
  var result_1291855668 = false;

  BeforeRet: {
    try {
    self_1291855667.commandLineMode = false;
    var colontmp__1291855717 = parseAction_2046821786(nsuJoinSep(content_2650801275(getCommandLineTextEditor_1291850979(self_1291855667).document), []));
    var action_1291855669 = nimCopy(null, colontmp__1291855717["Field0"], NTI33554449);
    var arg_1291855670 = nimCopy(null, colontmp__1291855717["Field1"], NTI33554449);
    contentHEX3D_2650801153(getCommandLineTextEditor_1291850979(self_1291855667).document, [[]]);
    result_1291855668 = handleAction_1291848858(self_1291855667, action_1291855669, arg_1291855670);
    break BeforeRet;
    } finally {
    requestRender_2315255899(self_1291855667.platform, false);
    }
  };

  return result_1291855668;

}

function executeCommandLineJsWrapper_1291855662(self_1291855702) {
  var result_1291855703 = false;

    result_1291855703 = executeCommandLine_1291855666(self_1291855702);

  return result_1291855703;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291855662(this));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet198[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__1291855818 = 0;
        colontmp__1291855818 = len_1627395282(x_1627395286);
        var i_1291855819 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_1291855819 < colontmp__1291855818)) break Label3;
              i_1627395293 = i_1291855819;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_1291855819 = addInt(i_1291855819, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291855843 = 0;
      colontmp__1291855843 = subInt((x_1627392045).length, 1);
      var res_1291855844 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291855844 <= colontmp__1291855843)) break Label3;
            i_1627392069 = res_1291855844;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291855844 = addInt(res_1291855844, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet199[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet200[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet201[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet202[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet203[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet204[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet205[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet206[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet207[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet208[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet209[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet210[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291855836 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet211[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291855836 = nimCopy(colontmp__1291855836, Temporary14.fields, NTI1627389966);
          var L_1291855838 = len_1627392114(colontmp__1291855836);
          if ((0 < colontmp__1291855836.counter)) {
          var h_1291855839 = colontmp__1291855836.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291855839)) break Label16;
                var nxt_1291855841 = colontmp__1291855836.data[chckIndx(h_1291855839, 0, (colontmp__1291855836.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291855836.data[chckIndx(h_1291855839, 0, (colontmp__1291855836.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291855836.data[chckIndx(h_1291855839, 0, (colontmp__1291855836.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291855836.data[chckIndx(h_1291855839, 0, (colontmp__1291855836.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet212[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet213[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291855836) == L_1291855838))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291855839 = nxt_1291855841;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet214[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet215[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291855862 = 0;
      colontmp__1291855862 = subInt(len_855638790, 1);
      var res_1291855863 = colontmp__1291855862;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291855863)) break Label3;
            j_855638800 = res_1291855863;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291855863 = subInt(res_1291855863, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291855858 = 0;
      var L_1291855859 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855858 < L_1291855859)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291855858, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291855858 = addInt(i_1291855858, 1);
            if (!(((s_1627394347).length == L_1291855859))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291855847 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet216[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291855847 = Temporary2.elems;
        var i_1291855848 = 0;
        var L_1291855849 = (colontmp__1291855847).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855848 < L_1291855849)) break Label4;
              child_1627394384 = colontmp__1291855847[chckIndx(i_1291855848, 0, (colontmp__1291855847).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291855848 = addInt(i_1291855848, 1);
              if (!(((colontmp__1291855847).length == L_1291855849))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291855852 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet217[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855852 = nimCopy(colontmp__1291855852, Temporary6.fields, NTI1627389966);
        var L_1291855853 = len_1627392114(colontmp__1291855852);
        if ((0 < colontmp__1291855852.counter)) {
        var h_1291855854 = colontmp__1291855852.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855854)) break Label8;
              var nxt_1291855856 = colontmp__1291855852.data[chckIndx(h_1291855854, 0, (colontmp__1291855852.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855852.data[chckIndx(h_1291855854, 0, (colontmp__1291855852.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291855852.data[chckIndx(h_1291855854, 0, (colontmp__1291855852.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291855852.data[chckIndx(h_1291855854, 0, (colontmp__1291855852.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291855852) == L_1291855853))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855854 = nxt_1291855856;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet218[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet219[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet220[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet221[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet222[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function parseEnum_2852128965(s_2852128967, default_2852128968) {
    var Temporary1;

  var result_2852128969 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2852128967))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_2852128968;
      break;
    }
    result_2852128969 = Temporary1;

  return result_2852128969;

}

function fromJsonHook_2852128962(t_2852128963, t_2852128963_Idx, jsonNode_2852128964) {
    var Temporary1;

    var Temporary1 = jsonNode_2852128964;
    if (ConstSet223[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_2852128963[t_2852128963_Idx] = parseEnum_2852128965(Temporary1.str, 0);

  
}

function fromJson_2852129033(a_2852129035, a_2852129035_Idx, b_2852129036, opt_2852129037) {
    if (!(!(HEX3DHEX3D_1627392026(b_2852129036, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_2852129036}));
    }
    
    fromJsonHook_2852128962(a_2852129035, a_2852129035_Idx, b_2852129036);

  
}

function jsonTo_2852129027(b_2852129029, opt_2852129031) {
  var result_2852129032 = [0];

    fromJson_2852129033(result_2852129032, 0, b_2852129029, opt_2852129031);

  return result_2852129032[0];

}

function fromJsonHook_2181038341(id_2181038342, json_2181038343) {
    var Temporary1;

    if ((json_2181038343.kind == 4)) {
    var Temporary1 = json_2181038343;
    if (ConstSet224[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2181038342 = nimCopy(id_2181038342, parseId_2181038327(Temporary1.str), NTI2181038083);
    }
    else {
      id_2181038342 = nimCopy(id_2181038342, null_2181038340, NTI2181038083);
    }
    

  
}

function fromJson_2852129050(a_2852129052, b_2852129053, opt_2852129054) {
    if (!(!(HEX3DHEX3D_1627392026(b_2852129053, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_2852129053}));
    }
    
    fromJsonHook_2181038341(a_2852129052, b_2852129053);

  
}

function jsonTo_2852129044(b_2852129046, opt_2852129048) {
  var result_2852129049 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_2852129050(result_2852129049[0], b_2852129046, opt_2852129048);

  return result_2852129049[0];

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet229[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet226[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet227[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet228[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet230[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291855875 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855875 <= 6)) break Label3;
            if ((x_1627395424[i_1291855875] != undefined)) {
            value_1627395451 = i_1291855875;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291855875 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet225[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet231), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet232[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function jsonToAstNode_2852129023(json_2852129024, opt_2852129025) {
        var Temporary3;

  var result_2852129026 = null;

    result_2852129026 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_2852129026.kind = jsonTo_2852129027(HEX5BHEX5D_1627393037(json_2852129024, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_2852129026.id = nimCopy(result_2852129026.id, jsonTo_2852129044(HEX5BHEX5D_1627393037(json_2852129024, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    if (hasKey_1627393154(json_2852129024, [114,101,102,102])) {
    result_2852129026.reff = nimCopy(result_2852129026.reff, jsonTo_2852129044(HEX5BHEX5D_1627393037(json_2852129024, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    }
    
    if (hasKey_1627393154(json_2852129024, [116,101,120,116])) {
    result_2852129026.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2852129024, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2852129024, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_2852129071 = null;
      var colontmp__1291855822 = null;
      colontmp__1291855822 = HEX5BHEX5D_1627393037(json_2852129024, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__1291855822.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__1291855822.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_1291855830 = null;
        var colontmp__1291855831 = [];
        var Temporary3 = colontmp__1291855822;
        if (ConstSet233[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855831 = Temporary3.elems;
        var i_1291855832 = 0;
        var L_1291855833 = (colontmp__1291855831).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291855832 < L_1291855833)) break Label5;
              i_1291855830 = colontmp__1291855831[chckIndx(i_1291855832, 0, (colontmp__1291855831).length - 1)];
              child_2852129071 = i_1291855830;
              add_2852126758(result_2852129026, jsonToAstNode_2852129023(child_2852129071, {allowExtraKeys: false, allowMissingKeys: false}));
              i_1291855832 = addInt(i_1291855832, 1);
              if (!(((colontmp__1291855831).length == L_1291855833))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2852129026;

}

function newAstDocument_2818577249(filename_2818577250) {
  var result_2818577251 = null;

    result_2818577251 = ({m_type: NTI2818573774, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: []});
    result_2818577251.filename = nimCopy(null, filename_2818577250, NTI33554449);
    result_2818577251.rootNode = {kind: 7, parent: null, id: newId_2181038297(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2818577251.symbols = nimCopy(result_2818577251.symbols, initTable_2868956016(32), NTI2952790984);
    if ((0 < (filename_2818577250).length)) {
    var fmtRes_2818577263 = [mnewString(0)];
    fmtRes_2818577263[0].push.apply(fmtRes_2818577263[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2818577263, 0, result_2818577251.filename, []);
    fmtRes_2818577263[0].push.apply(fmtRes_2818577263[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818577263[0], NTI33554449)]);
++excHandler;
    try {
    var file_2818577264 = loadFile_2499805191(fs_2499805237, result_2818577251.filename);
    var jsn_2818577265 = parseJson_1627395313(file_2818577264);
    result_2818577251.rootNode = jsonToAstNode_2852129023(jsn_2818577265, {allowExtraKeys: false, allowMissingKeys: false});
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818577270 = [mnewString(0)];
    fmtRes_2818577270[0].push.apply(fmtRes_2818577270[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2818577270, 0, result_2818577251.filename, []);
    fmtRes_2818577270[0].push.apply(fmtRes_2818577270[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818577270[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    

  return result_2818577251;

}

function newTextDocument_1291855736(filename_1291855738, content_1291855739) {
  var result_1291855740 = null;

    result_1291855740 = ({m_type: NTI2650800263, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0});
    var self_1291855744 = result_1291855740;
    self_1291855744.filename = nimCopy(null, filename_1291855738, NTI33554449);
    self_1291855744.currentTree = null;
    var _ = initTreesitter_2650803857(self_1291855744);
    var language_1291855745 = getLanguageForFile_2768240644(filename_1291855738);
    if (isSome_2650803879(language_1291855745)) {
    self_1291855744.languageId = nimCopy(null, get_2650803896(language_1291855745), NTI33554449);
    }
    
    contentHEX3D_2650801153(self_1291855744, content_1291855739);

  return result_1291855740;

}

function openFile_1291855732(self_1291855733, path_1291855734) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291855734, [46,97,115,116])) {
    createView_1291848946(self_1291855733, newAstDocument_2818577249(path_1291855734));
    }
    else {
      var file_1291855735 = loadFile_2499805191(fs_2499805237, path_1291855734);
      createView_1291848946(self_1291855733, newTextDocument_1291855736(path_1291855734, nsuSplitLines(file_1291855735, false)));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291855772 = [mnewString(0)];
    fmtRes_1291855772[0].push.apply(fmtRes_1291855772[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291855772, 0, path_1291855734, []);
    fmtRes_1291855772[0].push.apply(fmtRes_1291855772[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291855772, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291855772[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2315255899(self_1291855733.platform, false);
    }

  
}

function openFileJsWrapper_1291855728(self_1291855800, path_1291855801) {
    openFile_1291855732(self_1291855800, path_1291855801);

  
}
editor_prototype.openFile = function(path_ /* : string */) { return (openFileJsWrapper_1291855728(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function writeFile_1291855883(self_1291855884, path_1291855885) {
    try {
    if ((((0 <= self_1291855884.currentView) && (self_1291855884.currentView < (self_1291855884.views).length)) && !((self_1291855884.views[chckIndx(self_1291855884.currentView, 0, (self_1291855884.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2130706443(self_1291855884.views[chckIndx(self_1291855884.currentView, 0, (self_1291855884.views).length - 1)].document, path_1291855885);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291855897 = [mnewString(0)];
    fmtRes_1291855897[0].push.apply(fmtRes_1291855897[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291855897, 0, path_1291855885, []);
    fmtRes_1291855897[0].push.apply(fmtRes_1291855897[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291855897, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291855897[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291855884.platform, false);
    }

  
}

function writeFileJsWrapper_1291855879(self_1291855925, path_1291855926) {
    writeFile_1291855883(self_1291855925, path_1291855926);

  
}
editor_prototype.writeFile = function(path_ /* : string */) { return (writeFileJsWrapper_1291855879(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function loadFile_1291855947(self_1291855948, path_1291855949) {
    try {
    if ((((0 <= self_1291855948.currentView) && (self_1291855948.currentView < (self_1291855948.views).length)) && !((self_1291855948.views[chckIndx(self_1291855948.currentView, 0, (self_1291855948.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2130706447(self_1291855948.views[chckIndx(self_1291855948.currentView, 0, (self_1291855948.views).length - 1)].document, path_1291855949);
    handleDocumentChanged_2147483808(self_1291855948.views[chckIndx(self_1291855948.currentView, 0, (self_1291855948.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291855961 = [mnewString(0)];
    fmtRes_1291855961[0].push.apply(fmtRes_1291855961[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291855961, 0, path_1291855949, []);
    fmtRes_1291855961[0].push.apply(fmtRes_1291855961[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291855961, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291855961[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291855948.platform, false);
    }

  
}

function loadFileJsWrapper_1291855943(self_1291855989, path_1291855990) {
    loadFile_1291855947(self_1291855989, path_1291855990);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291855943(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function loadFromFile_2483031627(path_2483031628) {
  var result_2483031630 = ({val: null});

  return result_2483031630;

}

function isSome_1291850932(self_1291850934) {
  var result_1291850935 = false;

    result_1291850935 = !((self_1291850934.val == null));

  return result_1291850935;

}

function isNone_1291850960(self_1291850962) {
  var result_1291850963 = false;

    result_1291850963 = (self_1291850962.val == null);

  return result_1291850963;

}

function get_1291850952(self_1291850954) {
  var result_1291850955 = null;

    if (isNone_1291850960(self_1291850954)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291850955 = self_1291850954["val"];

  return result_1291850955;

}

function loadTheme_1291856011(self_1291856012, name_1291856013) {
      var Temporary2;

    try {
      var fmtRes_1291856018 = [mnewString(0)];
      fmtRes_1291856018[0].push.apply(fmtRes_1291856018[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291856018, 0, name_1291856013, []);
      fmtRes_1291856018[0].push.apply(fmtRes_1291856018[0], [46,106,115,111,110]);;
      var oHEX60gensym415_1291856021 = loadFromFile_2483031627(fmtRes_1291856018[0]);
      if (!isSome_1291850932(oHEX60gensym415_1291856021)) Temporary2 = false; else {        var theme_1291856044 = get_1291850952(oHEX60gensym415_1291856021);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291856012.theme = theme_1291856044;
    }
    else {
      var fmtRes_1291856049 = [mnewString(0)];
      fmtRes_1291856049[0].push.apply(fmtRes_1291856049[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291856049, 0, name_1291856013, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856049[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2315255899(self_1291856012.platform, false);
    }

  
}

function loadThemeJsWrapper_1291856007(self_1291856077, name_1291856078) {
    loadTheme_1291856011(self_1291856077, name_1291856078);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291856007(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function updateCompletions_3087007788(self_3087007789) {
    var text_3087007790 = nsuJoinSep(content_2650801275(self_3087007789.textEditor.document), []);
    self_3087007789.completions = nimCopy(null, self_3087007789.getCompletions(self_3087007789, text_3087007790), NTI3087007756);
    if ((0 < (self_3087007789.completions).length)) {
    self_3087007789.selected = clamp_1660945119(self_3087007789.selected, 0, subInt((self_3087007789.completions).length, 1));
    }
    else {
      self_3087007789.selected = 0;
    }
    

  
}

function handleTextChanged_3087008336(self_3087008337) {
    updateCompletions_3087007788(self_3087008337);
    self_3087008337.selected = 0;

  
}

function toJson_3087007994(self_3087007995, opt_3087007996) {
  var result_3087007997 = null;

    result_3087007997 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3087007997, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3087007997, [105,100], newJInt_1627390040(self_3087007995.id));

  return result_3087007997;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_1291856424 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856424 < L_855639192)) break Label3;
            i_855639197 = i_1291856424;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_1291856424 = addInt(i_1291856424, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__1291856427 = 0;
        var colontmp__1291856428 = 0;
        colontmp__1291856427 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__1291856428 = addInt(a_855639190, (b_855639188).length);
        var res_1291856429 = colontmp__1291856427;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__1291856428 <= res_1291856429)) break Label6;
              iHEX60gensym109_855639210 = res_1291856429;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_1291856429 = subInt(res_1291856429, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__1291856432 = 0;
          var colontmp__1291856433 = 0;
          colontmp__1291856432 = addInt(a_855639190, (b_855639188).length);
          colontmp__1291856433 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_1291856434 = colontmp__1291856432;
          Label8: {
              Label9: while (true) {
              if (!(res_1291856434 <= colontmp__1291856433)) break Label9;
                iHEX60gensym109_855639216 = res_1291856434;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_1291856434 = addInt(res_1291856434, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__1291856437 = 0;
        colontmp__1291856437 = (b_855639188).length;
        var i_1291856438 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_1291856438 < colontmp__1291856437)) break Label12;
              iHEX60gensym109_855639221 = i_1291856438;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_1291856438 = addInt(i_1291856438, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_1291856441 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856441 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_1291856441;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_1291856441 = addInt(i_1291856441, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet234);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet235[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet236[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet237[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet238[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet239[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__1291856452 = 0;
      colontmp__1291856452 = start_855639721;
      var res_1291856453 = colontmp__1291856452;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856453 <= last_855639724)) break Label4;
            i_855639729 = res_1291856453;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_1291856453 = addInt(res_1291856453, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_1291856460 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291856460 <= 3)) break Label3;
            __1694499043 = res_1291856460;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_1291856460 = addInt(res_1291856460, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_1291856457 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_1291856457 <= length_1694499110)) break Label5;
                      i_1694499115 = res_1291856457;
                      if ((ConstSet241[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_1291856457 = addInt(res_1291856457, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet242[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet243[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet240)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet244[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function isSome_2650816240(self_2650816242) {
  var result_2650816243 = false;

    result_2650816243 = !((self_2650816242.val == null));

  return result_2650816243;

}

function some_2650815976(val_2650815978) {
  var result_2650815979 = ({val: null});

    if (!(!((val_2650815978 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2650815979.val = val_2650815978;

  return result_2650815979;

}

function none_3087007898() {
  var result_3087007904 = ({val: null});

  return result_3087007904;

}

function some_1291850874(val_1291850876) {
  var result_1291850877 = ({val: null});

    if (!(!((val_1291850876 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850877.val = val_1291850876;

  return result_1291850877;

}

function none_1291850887() {
  var result_1291850893 = ({val: null});

  return result_1291850893;

}

function getPopupForId_1291850844(self_1291850845, id_1291850846) {
  var result_1291850851 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850873 = null;
      var i_1291856469 = 0;
      var L_1291856470 = (self_1291850845.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856469 < L_1291856470)) break Label3;
            popup_1291850873 = self_1291850845.popups[chckIndx(i_1291856469, 0, (self_1291850845.popups).length - 1)];
            if ((popup_1291850873.id == id_1291850846)) {
            result_1291850851 = nimCopy(result_1291850851, some_1291850874(popup_1291850873), NTI1291848446);
            break BeforeRet;
            }
            
            i_1291856469 = addInt(i_1291856469, 1);
            if (!(((self_1291850845.popups).length == L_1291856470))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850851 = nimCopy(result_1291850851, none_1291850887(), NTI1291848446);
    break BeforeRet;
  };

  return result_1291850851;

}

function isSome_3087007912(self_3087007914) {
  var result_3087007915 = false;

    result_3087007915 = !((self_3087007914.val == null));

  return result_3087007915;

}

function isNone_3087007940(self_3087007942) {
  var result_3087007943 = false;

    result_3087007943 = (self_3087007942.val == null);

  return result_3087007943;

}

function get_3087007932(self_3087007934) {
  var result_3087007935 = null;

    if (isNone_3087007940(self_3087007934)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087007935 = self_3087007934["val"];

  return result_3087007935;

}

function some_3087007957(val_3087007959) {
  var result_3087007960 = ({val: null});

    if (!(!((val_3087007959 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087007960.val = val_3087007959;

  return result_3087007960;

}

function getSelectorPopup_3087007888(wrapper_3087007889) {
      var Temporary1;

  var result_3087007894 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3087007894 = nimCopy(result_3087007894, none_3087007898(), NTI3087007854);
    break BeforeRet;
    }
    
      var oHEX60gensym4_3087007907 = getPopupForId_1291850844(gEditor, wrapper_3087007889.id);
      if (!isSome_3087007912(oHEX60gensym4_3087007907)) Temporary1 = false; else {        var editor_3087007949 = get_3087007932(oHEX60gensym4_3087007907);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3087007949.m_type, NTI3087007750)) {
    result_3087007894 = nimCopy(result_3087007894, some_3087007957(editor_3087007949), NTI3087007854);
    break BeforeRet;
    }
    
    }
    
    result_3087007894 = nimCopy(result_3087007894, none_3087007898(), NTI3087007854);
    break BeforeRet;
  };

  return result_3087007894;

}

function isNone_3087008026(self_3087008028) {
  var result_3087008029 = false;

    result_3087008029 = (self_3087008028.val == null);

  return result_3087008029;

}

function get_3087008046(self_3087008048) {
  var result_3087008049 = null;

    if (isNone_3087008026(self_3087008048)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008049 = self_3087008048["val"];

  return result_3087008049;

}

function acceptScript_3087008007_3087008019(self_3087008020) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym9_3087008021 = getSelectorPopup_3087007888(self_3087008020);
      if (isNone_3087008026(rHEX60gensym9_3087008021)) {
      break BeforeRet;
      }
      
    };
    accept_3087008012(get_3087008046(rHEX60gensym9_3087008021));
  };

  
}

function initFromJson_2650808770(dst_2650808772, dst_2650808772_Idx, jsonNode_2650808773, jsonPath_2650808774, jsonPath_2650808774_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2650808773, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2650808774[jsonPath_2650808774_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet245[jsonNode_2650808773.kind] != undefined))) {
    var msgHEX60gensym151_2650808791 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet246), nimCopy(null, jsonPath_2650808774[jsonPath_2650808774_Idx], NTI33554449), reprEnum(jsonNode_2650808773.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym151_2650808791, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2650808773;
    if (ConstSet247[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2650808772[dst_2650808772_Idx] = Temporary1.num;

  
}

function to_2650808759(node_2650808762) {
  var result_2650808764 = [0];

    var jsonPath_2650808765 = [[]];
    result_2650808764[0] = 0;
    initFromJson_2650808770(result_2650808764, 0, node_2650808762, jsonPath_2650808765, 0);

  return result_2650808764[0];

}

function fromJson_2650808746(a_2650808748, a_2650808748_Idx, b_2650808749, opt_2650808750) {
    if (!(!(HEX3DHEX3D_1627392026(b_2650808749, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2650808749}));
    }
    
    a_2650808748[a_2650808748_Idx] = to_2650808759(b_2650808749);

  
}

function jsonTo_2650808740(b_2650808742, opt_2650808744) {
  var result_2650808745 = [0];

    fromJson_2650808746(result_2650808745, 0, b_2650808742, opt_2650808744);

  return result_2650808745[0];

}

function fromJsonHook_3087007998(t_3087007999, jsonNode_3087008000) {
    t_3087007999.id = jsonTo_2650808740(HEX5BHEX5D_1627393037(jsonNode_3087008000, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3087008078(a_3087008080, b_3087008081, opt_3087008082) {
    if (!(!(HEX3DHEX3D_1627392026(b_3087008081, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3087008081}));
    }
    
    fromJsonHook_3087007998(a_3087008080, b_3087008081);

  
}

function jsonTo_3087008072(b_3087008074, opt_3087008076) {
  var result_3087008077 = [({id: 0})];

    fromJson_3087008078(result_3087008077[0], b_3087008074, opt_3087008076);

  return result_3087008077[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet248[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3087008070(HEX3Atmp_3087008009) {
  var result_3087008071 = null;

    result_3087008071 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3087008007_3087008019(jsonTo_3087008072(HEX5BHEX5D_1627393116(HEX3Atmp_3087008009, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym14_3087008089 = [97,99,99,101,112,116];
    var fmtRes_3087008094 = [mnewString(0)];
    fmtRes_3087008094[0].push.apply(fmtRes_3087008094[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3087008094, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym14_3087008089 || [],fmtRes_3087008094[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3087008071;

}

function cancelScript_3087008106_3087008119(self_3087008120) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym19_3087008121 = getSelectorPopup_3087007888(self_3087008120);
      if (isNone_3087008026(rHEX60gensym19_3087008121)) {
      break BeforeRet;
      }
      
    };
    cancel_3087008111(get_3087008046(rHEX60gensym19_3087008121));
  };

  
}

function cancelApi_3087008147(HEX3Atmp_3087008108) {
  var result_3087008148 = null;

    result_3087008148 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3087008106_3087008119(jsonTo_3087008072(HEX5BHEX5D_1627393116(HEX3Atmp_3087008108, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym24_3087008154 = [99,97,110,99,101,108];
    var fmtRes_3087008159 = [mnewString(0)];
    fmtRes_3087008159[0].push.apply(fmtRes_3087008159[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3087008159, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym24_3087008154 || [],fmtRes_3087008159[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3087008148;

}

function prevScript_3087008162_3087008187(self_3087008188) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym28_3087008189 = getSelectorPopup_3087007888(self_3087008188);
      if (isNone_3087008026(rHEX60gensym28_3087008189)) {
      break BeforeRet;
      }
      
    };
    prev_3087008167(get_3087008046(rHEX60gensym28_3087008189));
  };

  
}

function prevApi_3087008215(HEX3Atmp_3087008164) {
  var result_3087008216 = null;

    result_3087008216 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3087008162_3087008187(jsonTo_3087008072(HEX5BHEX5D_1627393116(HEX3Atmp_3087008164, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym33_3087008222 = [112,114,101,118];
    var fmtRes_3087008227 = [mnewString(0)];
    fmtRes_3087008227[0].push.apply(fmtRes_3087008227[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3087008227, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym33_3087008222 || [],fmtRes_3087008227[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3087008216;

}

function nextScript_3087008230_3087008252(self_3087008253) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym38_3087008254 = getSelectorPopup_3087007888(self_3087008253);
      if (isNone_3087008026(rHEX60gensym38_3087008254)) {
      break BeforeRet;
      }
      
    };
    next_3087008235(get_3087008046(rHEX60gensym38_3087008254));
  };

  
}

function nextApi_3087008280(HEX3Atmp_3087008232) {
  var result_3087008281 = null;

    result_3087008281 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3087008230_3087008252(jsonTo_3087008072(HEX5BHEX5D_1627393116(HEX3Atmp_3087008232, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym43_3087008287 = [110,101,120,116];
    var fmtRes_3087008292 = [mnewString(0)];
    fmtRes_3087008292[0].push.apply(fmtRes_3087008292[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3087008292, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym43_3087008287 || [],fmtRes_3087008292[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3087008281;

}

function none_2650816172() {
  var result_2650816178 = ({val: null});

  return result_2650816178;

}

function dispatch_3087008297(command_3087008296, arg_3087008295) {
    var Temporary1;

  var result_3087008299 = ({val: null});

    switch (toJSStr(command_3087008296)) {
    case "accept":
      Temporary1 = some_2650815976(acceptApi_3087008070(arg_3087008295));
      break;
    case "cancel":
      Temporary1 = some_2650815976(cancelApi_3087008147(arg_3087008295));
      break;
    case "prev":
      Temporary1 = some_2650815976(prevApi_3087008215(arg_3087008295));
      break;
    case "next":
      Temporary1 = some_2650815976(nextApi_3087008280(arg_3087008295));
      break;
    default: 
      Temporary1 = none_2650816172();
      break;
    }
    result_3087008299 = nimCopy(result_3087008299, Temporary1, NTI2650810879);

  return result_3087008299;

}

function handleAction_3087008318(self_3087008319, action_3087008320, arg_3087008321) {
  var result_3087008322 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848821(self_3087008319.editor, self_3087008319, action_3087008320, arg_3087008321) == 3)) {
    result_3087008322 = 3;
    break BeforeRet;
    }
    
    var args_3087008327 = newJArray_1627390082();
    add_1627390190(args_3087008327, toJson_3087007994({id: self_3087008319.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3087008328 = null;
      var colontmp__1291856417 = null;
      colontmp__1291856417 = newStringStream_1660945417(arg_3087008321);
      var p_1291856419 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291856419[0], colontmp__1291856417, [], false);
      try {
      var _ = getTok_1694499270(p_1291856419[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291856419[0].tok == 1))) break Label4;
            a_3087008328 = parseJson_1627395211(p_1291856419[0], false, false, 0);
            add_1627390190(args_3087008327, a_3087008328);
          }
      };
      } finally {
      close_1694498967(p_1291856419[0]);
      }
    };
    if (isSome_2650816240(dispatch_3087008297(action_3087008320, args_3087008327))) {
    result_3087008322 = 3;
    break BeforeRet;
    }
    
    result_3087008322 = 1;
    break BeforeRet;
  };

  return result_3087008322;

}

function newSelectorPopup_3087008425(editor_3087008426, getCompletions_3087008430) {
    
function HEX3Aanonymous_3087008451(doc_3087008452) {
        handleTextChanged_3087008336(popup_3087008432);

      
    }
      
function HEX3Aanonymous_3087008500(actionHEX60gensym56HEX60gensym57_3087008501, argHEX60gensym56HEX60gensym57_3087008502) {
        var result_3087008503 = 0;

        BeforeRet: {
          if (handlerHEX60gensym56_3087008488.config.handleActions) {
          var action_3087008504 = nimCopy(null, actionHEX60gensym56HEX60gensym57_3087008501, NTI33554449);
          var arg_3087008505 = nimCopy(null, argHEX60gensym56HEX60gensym57_3087008502, NTI33554449);
          var responseHEX60gensym56HEX60gensym57_3087008506 = handleAction_3087008318(popup_3087008432, action_3087008504, arg_3087008505);
          if (handlerHEX60gensym56_3087008488.config.consumeAllActions) {
          result_3087008503 = 3;
          break BeforeRet;
          }
          
          result_3087008503 = responseHEX60gensym56HEX60gensym57_3087008506;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym56_3087008488.config.consumeAllActions) {
          result_3087008503 = 3;
          break BeforeRet;
          }
          else {
            result_3087008503 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3087008503;

      }
      
function HEX3Aanonymous_3087008508(inputHEX60gensym56HEX60gensym58_3087008509) {
        var result_3087008510 = 0;

        BeforeRet: {
          if (handlerHEX60gensym56_3087008488.config.handleInputs) {
          var input_3087008511 = nimCopy(null, inputHEX60gensym56HEX60gensym58_3087008509, NTI33554449);
          result_3087008510 = 1;
          break BeforeRet;
          }
          else {
            result_3087008510 = 1;
            break BeforeRet;
          }
          
        };

        return result_3087008510;

      }

  var result_3087008431 = null;

  BeforeRet: {
    var popup_3087008432 = {editor: editor_3087008426, m_type: NTI3087007750, textEditor: null, selected: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};
    popup_3087008432.textEditor = newTextEditor_2650816370(newTextDocument_3036676679([], []), editor_3087008426);
    setMode_2650808915(popup_3087008432.textEditor, [105,110,115,101,114,116]);
    popup_3087008432.textEditor.renderHeader = false;
    popup_3087008432.textEditor.lineNumbers = nimCopy(popup_3087008432.textEditor.lineNumbers, some_3036676720(0), NTI2650800379);
    popup_3087008432.textEditor.document.singleLine = true;
    var _ = subscribe_2650816418(popup_3087008432.textEditor.document.textChanged, HEX3Aanonymous_3087008451);
    popup_3087008432.getCompletions = getCompletions_3087008430;
    Label1: {
      var handlerHEX60gensym56_3087008488 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym56_3087008488.config = getEventHandlerConfig_1291849111(editor_3087008426, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym56_3087008488.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(editor_3087008426, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym56_3087008488.handleAction = HEX3Aanonymous_3087008500;
      handlerHEX60gensym56_3087008488.handleInput = HEX3Aanonymous_3087008508;
    };
    popup_3087008432.eventHandler = handlerHEX60gensym56_3087008488;
    updateCompletions_3087007788(popup_3087008432);
    if (((0 < (popup_3087008432.completions).length) && !((popup_3087008432.handleItemSelected == null)))) {
    popup_3087008432.handleItemSelected(popup_3087008432.completions[chckIndx(0, 0, (popup_3087008432.completions).length - 1)]);
    }
    
    result_3087008431 = popup_3087008432;
    break BeforeRet;
  };

  return result_3087008431;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet251[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet252[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet254[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet255[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291856540 = it_1442840587.prev;
    var colontmp__1291856541 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291856540, Field1: colontmp__1291856541}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet256[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet257[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet253[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet258[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet259[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet260[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet261[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet249[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet250[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291856170(len_1291856172) {
  var result_1291856173 = [];

    result_1291856173 = new Array(len_1291856172); for (var i = 0 ; i < len_1291856172 ; ++i) { result_1291856173[i] = null; }
  return result_1291856173;

}

function mergeAlt_1291856181(a_1291856183, b_1291856184, lo_1291856185, m_1291856186, hi_1291856187, cmp_1291856190, order_1291856191) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291856190(a_1291856183[chckIndx(m_1291856186, 0, (a_1291856183).length - 1)], a_1291856183[chckIndx(addInt(m_1291856186, 1), 0, (a_1291856183).length - 1)]), order_1291856191) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291856192 = lo_1291856185;
    if (!((j_1291856192 <= m_1291856186))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291856198 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291856192 <= m_1291856186)) break Label2;
          b_1291856184[chckIndx(bb_1291856198, 0, (b_1291856184).length - 1)] = a_1291856183[chckIndx(j_1291856192, 0, (a_1291856183).length - 1)];
          bb_1291856198 = addInt(bb_1291856198, 1);
          j_1291856192 = addInt(j_1291856192, 1);
        }
    };
    var i_1291856209 = 0;
    var k_1291856210 = lo_1291856185;
    Label3: {
        Label4: while (true) {
        if (!((k_1291856210 < j_1291856192) && (j_1291856192 <= hi_1291856187))) break Label4;
          if ((HEX2A_1023410184(cmp_1291856190(b_1291856184[chckIndx(i_1291856209, 0, (b_1291856184).length - 1)], a_1291856183[chckIndx(j_1291856192, 0, (a_1291856183).length - 1)]), order_1291856191) <= 0)) {
          a_1291856183[chckIndx(k_1291856210, 0, (a_1291856183).length - 1)] = b_1291856184[chckIndx(i_1291856209, 0, (b_1291856184).length - 1)];
          i_1291856209 = addInt(i_1291856209, 1);
          }
          else {
            a_1291856183[chckIndx(k_1291856210, 0, (a_1291856183).length - 1)] = a_1291856183[chckIndx(j_1291856192, 0, (a_1291856183).length - 1)];
            j_1291856192 = addInt(j_1291856192, 1);
          }
          
          k_1291856210 = addInt(k_1291856210, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291856210 < j_1291856192)) break Label6;
          a_1291856183[chckIndx(k_1291856210, 0, (a_1291856183).length - 1)] = b_1291856184[chckIndx(i_1291856209, 0, (b_1291856184).length - 1)];
          k_1291856210 = addInt(k_1291856210, 1);
          i_1291856209 = addInt(i_1291856209, 1);
        }
    };
  };

  
}

function sort_1291856158(a_1291856160, cmp_1291856163, order_1291856164) {
    var n_1291856169 = (a_1291856160).length;
    var b_1291856178 = newSeq_1291856170(chckRange(divInt(n_1291856169, 2), 0, 2147483647));
    var s_1291856179 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291856179 < n_1291856169)) break Label2;
          var m_1291856180 = subInt(subInt(n_1291856169, 1), s_1291856179);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291856180)) break Label4;
                mergeAlt_1291856181(a_1291856160, b_1291856178, nimMax(addInt(subInt(m_1291856180, s_1291856179), 1), 0), m_1291856180, addInt(m_1291856180, s_1291856179), cmp_1291856163, order_1291856164);
                m_1291856180 = subInt(m_1291856180, mulInt(s_1291856179, 2));
              }
          };
          s_1291856179 = mulInt(s_1291856179, 2);
        }
    };

  
}

function chooseTheme_1291856099(self_1291856100) {
    
function HEX3Aanonymous_1291856102(popup_1291856103, text_1291856104) {
                          var Temporary9;
        
function HEX3Aanonymous_1291856118(a_1291856145, b_1291856146) {
          var result_1291856151 = 0;

            result_1291856151 = cmp_2818589390(a_1291856145.score, b_1291856146.score);

          return result_1291856151;

        }

      var result_1291856105 = [];

        Label1: {
          var file_1291856106 = [];
          var stack_1291856508 = [[[]]];
          var checkDir_1291856509 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291856508[0]).length)) break Label3;
                var d_1291856511 = pop_1560281227(stack_1291856508, 0);
                Label4: {
                  var k_1291856513 = 0;
                  var p_1291856514 = [];
                  var colontmp__1291856515 = [];
                  colontmp__1291856515 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291856511);
                  Label5: {
                    var k_1291856525 = 0;
                    var v_1291856526 = [];
                    var colontmp__1291856527 = [];
                    colontmp__1291856527 = staticWalkDir_1560281124(colontmp__1291856515, true);
                    var i_1291856528 = 0;
                    var L_1291856529 = (colontmp__1291856527).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291856528 < L_1291856529)) break Label7;
                          k_1291856525 = colontmp__1291856527[chckIndx(i_1291856528, 0, (colontmp__1291856527).length - 1)]["Field0"];
                          v_1291856526 = colontmp__1291856527[chckIndx(i_1291856528, 0, (colontmp__1291856527).length - 1)]["Field1"];
                          k_1291856513 = k_1291856525;
                          p_1291856514 = v_1291856526;
                          var rel_1291856531 = HEX2F_1426063446(d_1291856511, p_1291856514);
                          if (((ConstSet262[k_1291856513] != undefined) && (ConstSet263[k_1291856513] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291856531, NTI33554449);
                          stack_1291856508[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet264[k_1291856513] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291856531;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291856531);
                          }
                          
                          file_1291856106 = Temporary9;
                          if (nsuEndsWith(file_1291856106, [46,106,115,111,110])) {
                          var name_1291856532 = nimCopy(null, nossplitFile(file_1291856106).Field1, NTI33554449);
                          var score_1291856533 = fuzzyMatchSmart_1979711572(text_1291856104, name_1291856532, true);
                          var fmtRes_1291856534 = [mnewString(0)];
                          fmtRes_1291856534[0].push.apply(fmtRes_1291856534[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291856534, 0, file_1291856106, []);
                          result_1291856105.push({name: nimCopy(null, name_1291856532, NTI33554449), path: nimCopy(null, fmtRes_1291856534[0], NTI33554449), score: score_1291856533, m_type: NTI1291848501});;
                          }
                          
                          }
                          
                          i_1291856528 = addInt(i_1291856528, 1);
                          if (!(((colontmp__1291856527).length == L_1291856529))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291856509 = false;
              }
          };
        };
        sort_1291856158(result_1291856105, HEX3Aanonymous_1291856118, 0);

      return result_1291856105;

    }
    
function HEX3Aanonymous_1291856278(item_1291856279) {
          var Temporary1;

          var oHEX60gensym428_1291856282 = loadFromFile_2483031627(item_1291856279.path);
          if (!isSome_1291850932(oHEX60gensym428_1291856282)) Temporary1 = false; else {            var theme_1291856305 = get_1291850952(oHEX60gensym428_1291856282);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856100.theme = theme_1291856305;
        }
        

      
    }
    
function HEX3Aanonymous_1291856306(item_1291856307) {
          var Temporary1;

          var oHEX60gensym429_1291856310 = loadFromFile_2483031627(item_1291856307.path);
          if (!isSome_1291850932(oHEX60gensym429_1291856310)) Temporary1 = false; else {            var theme_1291856333 = get_1291850952(oHEX60gensym429_1291856310);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856100.theme = theme_1291856333;
        }
        

      
    }
    
function HEX3Aanonymous_1291856334() {
          var Temporary1;

          var oHEX60gensym430_1291856337 = loadFromFile_2483031627(originalTheme_1291856101);
          if (!isSome_1291850932(oHEX60gensym430_1291856337)) Temporary1 = false; else {            var theme_1291856360 = get_1291850952(oHEX60gensym430_1291856337);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856100.theme = theme_1291856360;
        }
        

      
    }

    try {
    var originalTheme_1291856101 = nimCopy(null, self_1291856100.theme.path, NTI33554449);
    var popup_1291856277 = newSelectorPopup_3087008425(self_1291856100, HEX3Aanonymous_1291856102);
    popup_1291856277.handleItemSelected = HEX3Aanonymous_1291856278;
    popup_1291856277.handleItemConfirmed = HEX3Aanonymous_1291856306;
    popup_1291856277.handleCanceled = HEX3Aanonymous_1291856334;
    pushPopup_1291849048(self_1291856100, popup_1291856277);
    } finally {
    requestRender_2315255899(self_1291856100.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291856095(self_1291856405) {
    chooseTheme_1291856099(self_1291856405);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291856095(this));};

function chooseFile_1291856554(self_1291856555, view_1291856556) {
    
function HEX3Aanonymous_1291856557(popup_1291856558, text_1291856559) {
                          var Temporary9;
        
function HEX3Aanonymous_1291856573(a_1291856600, b_1291856601) {
          var result_1291856606 = 0;

            result_1291856606 = cmp_2818589390(a_1291856600.score, b_1291856601.score);

          return result_1291856606;

        }

      var result_1291856560 = [];

        Label1: {
          var file_1291856561 = [];
          var stack_1291856681 = [[[]]];
          var checkDir_1291856682 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291856681[0]).length)) break Label3;
                var d_1291856684 = pop_1560281227(stack_1291856681, 0);
                Label4: {
                  var k_1291856686 = 0;
                  var p_1291856687 = [];
                  var colontmp__1291856688 = [];
                  colontmp__1291856688 = HEX2F_1426063446([46], d_1291856684);
                  Label5: {
                    var k_1291856698 = 0;
                    var v_1291856699 = [];
                    var colontmp__1291856700 = [];
                    colontmp__1291856700 = staticWalkDir_1560281124(colontmp__1291856688, true);
                    var i_1291856701 = 0;
                    var L_1291856702 = (colontmp__1291856700).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291856701 < L_1291856702)) break Label7;
                          k_1291856698 = colontmp__1291856700[chckIndx(i_1291856701, 0, (colontmp__1291856700).length - 1)]["Field0"];
                          v_1291856699 = colontmp__1291856700[chckIndx(i_1291856701, 0, (colontmp__1291856700).length - 1)]["Field1"];
                          k_1291856686 = k_1291856698;
                          p_1291856687 = v_1291856699;
                          var rel_1291856704 = HEX2F_1426063446(d_1291856684, p_1291856687);
                          if (((ConstSet265[k_1291856686] != undefined) && (ConstSet266[k_1291856686] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291856704, NTI33554449);
                          stack_1291856681[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet267[k_1291856686] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291856704;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46], rel_1291856704);
                          }
                          
                          file_1291856561 = Temporary9;
                          var name_1291856705 = nimCopy(null, nossplitFile(file_1291856561).Field1, NTI33554449);
                          var score_1291856706 = fuzzyMatchSmart_1979711572(text_1291856559, name_1291856705, true);
                          var fmtRes_1291856707 = [mnewString(0)];
                          fmtRes_1291856707[0].push.apply(fmtRes_1291856707[0], [46,47]);;
                          formatValue_721420459(fmtRes_1291856707, 0, file_1291856561, []);
                          result_1291856560.push({path: nimCopy(null, fmtRes_1291856707[0], NTI33554449), score: score_1291856706, m_type: NTI1291848503});;
                          }
                          
                          i_1291856701 = addInt(i_1291856701, 1);
                          if (!(((colontmp__1291856700).length == L_1291856702))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291856682 = false;
              }
          };
        };
        sort_1291856158(result_1291856560, HEX3Aanonymous_1291856573, 0);

      return result_1291856560;

    }
    view_1291856556 = nimCopy(null, view_1291856556, NTI33554449);
    
function HEX3Aanonymous_1291856630(item_1291856631) {
        switch (toJSStr(view_1291856556)) {
        case "current":
          loadFile_1291855947(self_1291856555, item_1291856631.path);
          break;
        case "new":
          openFile_1291855732(self_1291856555, item_1291856631.path);
          break;
        default: 
          var fmtRes_1291856636 = [mnewString(0)];
          fmtRes_1291856636[0].push.apply(fmtRes_1291856636[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291856636, 0, view_1291856556, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856636[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291856629 = newSelectorPopup_3087008425(self_1291856555, HEX3Aanonymous_1291856557);
    popup_1291856629.handleItemConfirmed = HEX3Aanonymous_1291856630;
    pushPopup_1291849048(self_1291856555, popup_1291856629);
    } finally {
    requestRender_2315255899(self_1291856555.platform, false);
    }

  
}

function chooseFileJsWrapper_1291856550(self_1291856664, view_1291856665) {
    chooseFile_1291856554(self_1291856664, view_1291856665);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291856550(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function reloadConfig_1291856714(self_1291856715) {
    try {
    if (!((self_1291856715.scriptContext == null))) {
++excHandler;
    try {
    reload_2617245711(self_1291856715.scriptContext);
    if (!(self_1291856715.initializeCalled)) {
    var _ = false;
    self_1291856715.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856728 = mnewString(0);
    fmtRes_1291856728.push.apply(fmtRes_1291856728, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856728, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291856715.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291856710(self_1291856755) {
    reloadConfig_1291856714(self_1291856755);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291856710(this));};

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet268[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291856810 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet269[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291856810 = nimCopy(colontmp__1291856810, Temporary3.fields, NTI1627389966);
        var L_1291856811 = len_1627392114(colontmp__1291856810);
        if ((0 < colontmp__1291856810.counter)) {
        var h_1291856812 = colontmp__1291856810.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291856812)) break Label5;
              var nxt_1291856814 = colontmp__1291856810.data[chckIndx(h_1291856812, 0, (colontmp__1291856810.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291856810.data[chckIndx(h_1291856812, 0, (colontmp__1291856810.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291856810.data[chckIndx(h_1291856812, 0, (colontmp__1291856810.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291856810.data[chckIndx(h_1291856812, 0, (colontmp__1291856810.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291856810) == L_1291856811))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291856812 = nxt_1291856814;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet270[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet271[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet272[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet273[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291856816 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet274[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291856816 = subInt((Temporary12.elems).length, 1);
        var res_1291856817 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291856817 <= colontmp__1291856816)) break Label14;
              i_1627394476 = res_1291856817;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet275[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291856817 = addInt(res_1291856817, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function logOptions_1291856771(self_1291856772) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291856772.options, 2)]);

  
}

function logOptionsJsWrapper_1291856767(self_1291856799) {
    logOptions_1291856771(self_1291856799);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291856767(this));};

function clear_2046821383(t_2046821386) {
    Label1: {
      var i_2046821438 = 0;
      var colontmp__1291856872 = 0;
      colontmp__1291856872 = (t_2046821386.data).length;
      var i_1291856873 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856873 < colontmp__1291856872)) break Label3;
            i_2046821438 = i_1291856873;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field0 = 0;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291856873 = addInt(i_1291856873, 1);
          }
      };
    };
    t_2046821386.counter = 0;

  
}

function clearCommands_2046821341(config_2046821342) {
    clear_2046821383(config_2046821342.commands);
    config_2046821342.revision = addInt(config_2046821342.revision, 1);

  
}

function clearCommands_1291856825(self_1291856826, context_1291856827) {
    clearCommands_2046821341(getEventHandlerConfig_1291849111(self_1291856826, context_1291856827));

  
}

function clearCommandsJsWrapper_1291856821(self_1291856855, context_1291856856) {
    clearCommands_1291856825(self_1291856855, context_1291856856);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291856821(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853509(t_1291853512) {
  var result_1291853513 = 0;

    result_1291853513 = t_1291853512.counter;

  return result_1291853513;

}

function getAllEditors_1291856881(self_1291856882) {
  var result_1291856883 = [];

    Label1: {
      var id_1291857104 = 0;
      var L_1291857168 = len_1291853509(self_1291856882.editors);
      Label2: {
        var h_1291857170 = 0;
        var colontmp__1291857171 = 0;
        colontmp__1291857171 = (self_1291856882.editors.data).length - 1;
        var res_1291857172 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857172 <= colontmp__1291857171)) break Label4;
              h_1291857170 = res_1291857172;
              if (isFilled_1308622880(self_1291856882.editors.data[chckIndx(h_1291857170, 0, (self_1291856882.editors.data).length - 1)].Field0)) {
              id_1291857104 = self_1291856882.editors.data[chckIndx(h_1291857170, 0, (self_1291856882.editors.data).length - 1)]["Field1"];
              result_1291856883.push(id_1291857104);;
              if (!((len_1291853509(self_1291856882.editors) == L_1291857168))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857172 = addInt(res_1291857172, 1);
            }
        };
      };
    };

  return result_1291856883;

}

function getAllEditorsJsWrapper_1291856877(self_1291857136) {
  var result_1291857137 = [];

    result_1291857137 = nimCopy(null, getAllEditors_1291856881(self_1291857136), NTI1291852913);

  return result_1291857137;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291856877(this));};

function getModeConfig_1291857174(self_1291857175, mode_1291857176) {
  var result_1291857177 = null;

  BeforeRet: {
    result_1291857177 = getEventHandlerConfig_1291849111(self_1291857175, ([101,100,105,116,111,114,46] || []).concat(mode_1291857176 || []));
    break BeforeRet;
  };

  return result_1291857177;

}

function setMode_1291857184(self_1291857185, mode_1291857186) {
        
function HEX3Aanonymous_1291857207(actionHEX60gensym490HEX60gensym491_1291857208, argHEX60gensym490HEX60gensym491_1291857209) {
            var Temporary1;

          var result_1291857210 = 0;

          BeforeRet: {
            if (handlerHEX60gensym490_1291857195.config.handleActions) {
            var action_1291857211 = nimCopy(null, actionHEX60gensym490HEX60gensym491_1291857208, NTI33554449);
            var arg_1291857212 = nimCopy(null, argHEX60gensym490HEX60gensym491_1291857209, NTI33554449);
            if (handleAction_1291848858(self_1291857185, action_1291857211, arg_1291857212)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym490HEX60gensym491_1291857213 = Temporary1;
            if (handlerHEX60gensym490_1291857195.config.consumeAllActions) {
            result_1291857210 = 3;
            break BeforeRet;
            }
            
            result_1291857210 = responseHEX60gensym490HEX60gensym491_1291857213;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym490_1291857195.config.consumeAllActions) {
            result_1291857210 = 3;
            break BeforeRet;
            }
            else {
              result_1291857210 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291857210;

        }
        
function HEX3Aanonymous_1291857215(inputHEX60gensym490HEX60gensym492_1291857216) {
          var result_1291857217 = 0;

          BeforeRet: {
            if (handlerHEX60gensym490_1291857195.config.handleInputs) {
            var input_1291857218 = nimCopy(null, inputHEX60gensym490HEX60gensym492_1291857216, NTI33554449);
            result_1291857217 = 1;
            break BeforeRet;
            }
            else {
              result_1291857217 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291857217;

        }

    try {
    if (((mode_1291857186).length == 0)) {
    self_1291857185.modeEventHandler = null;
    }
    else {
      var config_1291857187 = getModeConfig_1291857174(self_1291857185, mode_1291857186);
      Label2: {
        var handlerHEX60gensym490_1291857195 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym490_1291857195.config = config_1291857187;
        handlerHEX60gensym490_1291857195.dfaInternal = buildDFA_2046820415(config_1291857187);
        handlerHEX60gensym490_1291857195.handleAction = HEX3Aanonymous_1291857207;
        handlerHEX60gensym490_1291857195.handleInput = HEX3Aanonymous_1291857215;
      };
      self_1291857185.modeEventHandler = handlerHEX60gensym490_1291857195;
    }
    
    self_1291857185.currentMode = nimCopy(null, mode_1291857186, NTI33554449);
    } finally {
    requestRender_2315255899(self_1291857185.platform, false);
    }

  
}

function setModeJsWrapper22_1291857180(self_1291857246, mode_1291857247) {
    setMode_1291857184(self_1291857246, mode_1291857247);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291857180(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291857269(self_1291857270) {
  var result_1291857271 = [];

  BeforeRet: {
    result_1291857271 = nimCopy(null, self_1291857270.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291857271;

}

function modeJsWrapper22_1291857265(self_1291857299) {
  var result_1291857300 = [];

    result_1291857300 = nimCopy(null, mode_1291857269(self_1291857299), NTI33554449);

  return result_1291857300;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291857265(this));};

function getContextWithMode_1291857320(self_1291857321, context_1291857322) {
  var result_1291857323 = [];

  BeforeRet: {
    result_1291857323 = nimCopy(null, (context_1291857322 || []).concat([46] || [],self_1291857321.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291857323;

}

function getContextWithModeJsWrapper22_1291857316(self_1291857352, context_1291857353) {
  var result_1291857354 = [];

    result_1291857354 = nimCopy(null, getContextWithMode_1291857320(self_1291857352, context_1291857353), NTI33554449);

  return result_1291857354;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291857316(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291857596(action_1291857597, arg_1291857598) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848858(gEditor, action_1291857597, arg_1291857598);
  };

  
}

function scriptRunActionJsWrapper_1291857593(action_1291857607, arg_1291857608) {
    scriptRunAction_1291857596(action_1291857607, arg_1291857608);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291857593(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291857633(message_1291857634) {
    var fmtRes_1291857639 = [mnewString(0)];
    fmtRes_1291857639[0].push.apply(fmtRes_1291857639[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291857639, 0, message_1291857634, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291857639[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291857630(message_1291857644) {
    scriptLog_1291857633(message_1291857644);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291857630(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291857738 = 0;
      colontmp__1291857738 = (n_1795163066).length - 1;
      var res_1291857739 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857739 <= colontmp__1291857738)) break Label4;
            i_1795163130 = res_1291857739;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291857739 = addInt(res_1291857739, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2046820734(config_2046820735, keys_2046820736, action_2046820737) {
    HEX5BHEX5DHEX3D_1795162732(config_2046820735.commands, keys_2046820736, action_2046820737);
    config_2046820735.revision = addInt(config_2046820735.revision, 1);

  
}

function addCommandScript_1291857665(self_1291857666, context_1291857667, keys_1291857668, action_1291857669, arg_1291857670) {
    var Temporary1;

    if (((arg_1291857670).length == 0)) {
    Temporary1 = action_1291857669;
    }
    else {
    Temporary1 = (action_1291857669 || []).concat([32] || [],arg_1291857670 || []);
    }
    
    var command_1291857671 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2046820734(getEventHandlerConfig_1291849111(self_1291857666, context_1291857667), keys_1291857668, command_1291857671);

  
}

function addCommandScriptJsWrapper_1291857661(self_1291857702, context_1291857703, keys_1291857704, action_1291857705, arg_1291857706) {
    addCommandScript_1291857665(self_1291857702, context_1291857703, keys_1291857704, action_1291857705, arg_1291857706);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291857661(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2046820831(t_2046820834, key_2046820835) {
    var hc_2046820836 = [0];
    var i_2046820843 = rawGet_1795162457(t_2046820834, key_2046820835, hc_2046820836, 0);
    var mskHEX60gensym36_2046820847 = (t_2046820834.data).length - 1;
    if ((0 <= i_2046820843)) {
    t_2046820834.counter = subInt(t_2046820834.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2046820854 = i_2046820843;
            var rHEX60gensym36_2046820855 = jHEX60gensym36_2046820854;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 = 0;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2046820843 = (addInt(i_2046820843, 1) & mskHEX60gensym36_2046820847);
                  if (isEmpty_1308622877(t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2046820855 = (t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 & mskHEX60gensym36_2046820847);
                  if (!(((((rHEX60gensym36_2046820855 <= i_2046820843) && (jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855)) || ((jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855) && (i_2046820843 < jHEX60gensym36_2046820854))) || ((i_2046820843 < jHEX60gensym36_2046820854) && (rHEX60gensym36_2046820855 <= i_2046820843))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)] = nimCopy(t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)], t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2046820788(config_2046820789, keys_2046820790) {
    del_2046820831(config_2046820789.commands, keys_2046820790);
    config_2046820789.revision = addInt(config_2046820789.revision, 1);

  
}

function removeCommand_1291857748(self_1291857749, context_1291857750, keys_1291857751) {
    removeCommand_2046820788(getEventHandlerConfig_1291849111(self_1291857749, context_1291857750), keys_1291857751);

  
}

function removeCommandJsWrapper_1291857744(self_1291857780, context_1291857781, keys_1291857782) {
    removeCommand_1291857748(self_1291857780, context_1291857781, keys_1291857782);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291857744(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291857809() {
  var result_1291857810 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291857810 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291857810 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291857810 = -1;
    break BeforeRet;
  };

  return result_1291857810;

}

function getActivePopupJsWrapper_1291857806() {
  var result_1291857827 = 0;

    result_1291857827 = getActivePopup_1291857809();

  return result_1291857827;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291857806());};

function getActiveEditor_1291857846() {
  var result_1291857847 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291857847 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291857847 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291857847 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291857847 = -1;
    break BeforeRet;
  };

  return result_1291857847;

}

function getActiveEditorJsWrapper_1291857843() {
  var result_1291857858 = 0;

    result_1291857858 = getActiveEditor_1291857846();

  return result_1291857858;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291857843());};

function getActiveEditor2_1291857877(self_1291857878) {
  var result_1291857879 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291857879 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291857879 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291857879 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291857879 = null;
    break BeforeRet;
  };

  return result_1291857879;

}

function getActiveEditor2JsWrapper_1291857874(self_1291857913) {
  var result_1291857914 = null;

    result_1291857914 = getActiveEditor2_1291857877(self_1291857913);

  return result_1291857914;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291857874(this));};

function loadCurrentConfig_1291857921(self_1291857922) {
    createView_1291848946(self_1291857922, newTextDocument_3036676679([99,111,110,102,105,103,46,106,115], [99,111,110,115,111,108,101,46,108,111,103,40,39,104,105,39,41]));

  
}

function loadCurrentConfigJsWrapper_1291857917(self_1291857953) {
    loadCurrentConfig_1291857921(self_1291857953);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291857917(this));};

function sourceCurrentDocument_1291857969(self_1291857970) {
    var editor_1291857973 = getActiveEditor2_1291857877(self_1291857970);
    if (isObj(editor_1291857973.m_type, NTI2650800335)) {
    var document_1291857980 = editor_1291857973.document;
    var contentStrict_1291857981 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2650801278(document_1291857980) || []);
    rawEcho(contentStrict_1291857981);
    eval(toJSStr(contentStrict_1291857981));
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291857965(self_1291858008) {
    sourceCurrentDocument_1291857969(self_1291858008);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291857965(this));};

function getEditor_1291858023(index_1291858024) {
  var result_1291858025 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858025 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291858024) && (index_1291858024 < (gEditor.views).length))) {
    result_1291858025 = gEditor.views[chckIndx(index_1291858024, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291858025 = -1;
    break BeforeRet;
  };

  return result_1291858025;

}

function getEditorJsWrapper_1291858020(index_1291858037) {
  var result_1291858038 = 0;

    result_1291858038 = getEditor_1291858023(index_1291858037);

  return result_1291858038;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291858020(index_));};

function rawGet_1291845888(t_1291845891, key_1291845892, hc_1291845893, hc_1291845893_Idx) {
  var result_1291845894 = 0;

  BeforeRet: {
    hc_1291845893[hc_1291845893_Idx] = hash_1325400236(key_1291845892);
    if ((hc_1291845893[hc_1291845893_Idx] == 0)) {
    hc_1291845893[hc_1291845893_Idx] = 314159265;
    }
    
    if (((t_1291845891.data).length == 0)) {
    result_1291845894 = -1;
    break BeforeRet;
    }
    
    var h_1291845948 = (hc_1291845893[hc_1291845893_Idx] & (t_1291845891.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845891.data[chckIndx(h_1291845948, 0, (t_1291845891.data).length - 1)].Field0)) break Label2;
          if (((t_1291845891.data[chckIndx(h_1291845948, 0, (t_1291845891.data).length - 1)].Field0 == hc_1291845893[hc_1291845893_Idx]) && (t_1291845891.data[chckIndx(h_1291845948, 0, (t_1291845891.data).length - 1)].Field1 == key_1291845892))) {
          result_1291845894 = h_1291845948;
          break BeforeRet;
          }
          
          h_1291845948 = nextTry_1308622883(h_1291845948, (t_1291845891.data).length - 1);
        }
    };
    result_1291845894 = subInt(-1, h_1291845948);
  };

  return result_1291845894;

}

function hasKey_1291850666(t_1291850669, key_1291850670) {
  var result_1291850671 = false;

    var hc_1291850672 = [0];
    result_1291850671 = (0 <= rawGet_1291845888(t_1291850669, key_1291850670, hc_1291850672, 0));

  return result_1291850671;

}

function contains_1291850660(t_1291850663, key_1291850664) {
  var result_1291850665 = false;

  BeforeRet: {
    result_1291850665 = hasKey_1291850666(t_1291850663, key_1291850664);
    break BeforeRet;
  };

  return result_1291850665;

}

function some_1291850812(val_1291850814) {
  var result_1291850815 = ({val: null});

    if (!(!((val_1291850814 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850815.val = val_1291850814;

  return result_1291850815;

}

function HEX5BHEX5D_1291850732(t_1291850735, key_1291850736) {
  var result_1291850737 = null;
  var result_1291850737_Idx = 0;

    var hcHEX60gensym22_1291850738 = [0];
    var indexHEX60gensym22_1291850745 = rawGet_1291845888(t_1291850735, key_1291850736, hcHEX60gensym22_1291850738, 0);
    if ((0 <= indexHEX60gensym22_1291850745)) {
    result_1291850737 = t_1291850735.data[chckIndx(indexHEX60gensym22_1291850745, 0, (t_1291850735.data).length - 1)]; result_1291850737_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850799(key_1291850736);
    }
    

  return [result_1291850737, result_1291850737_Idx];

}

function none_1291850828() {
  var result_1291850834 = ({val: null});

  return result_1291850834;

}

function getEditorForId_1291850610(self_1291850611, id_1291850612) {
    var Temporary1;

  var result_1291850617 = ({val: null});

  BeforeRet: {
    if (contains_1291850660(self_1291850611.editors, id_1291850612)) {
    result_1291850617 = nimCopy(result_1291850617, some_1291850812((Temporary1 = HEX5BHEX5D_1291850732(self_1291850611.editors, id_1291850612), Temporary1)[0][Temporary1[1]]), NTI1291848314);
    break BeforeRet;
    }
    
    if ((self_1291850611.commandLineTextEditor.id == id_1291850612)) {
    result_1291850617 = nimCopy(result_1291850617, some_1291850812(self_1291850611.commandLineTextEditor), NTI1291848314);
    break BeforeRet;
    }
    
    result_1291850617 = nimCopy(result_1291850617, none_1291850828(), NTI1291848314);
    break BeforeRet;
  };

  return result_1291850617;

}

function isSome_2650808653(self_2650808655) {
  var result_2650808656 = false;

    result_2650808656 = !((self_2650808655.val == null));

  return result_2650808656;

}

function isNone_2650808681(self_2650808683) {
  var result_2650808684 = false;

    result_2650808684 = (self_2650808683.val == null);

  return result_2650808684;

}

function get_2650808673(self_2650808675) {
  var result_2650808676 = null;

    if (isNone_2650808681(self_2650808675)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650808676 = self_2650808675["val"];

  return result_2650808676;

}

function scriptIsTextEditor_1291858062(editorId_1291858063) {
      var Temporary1;

  var result_1291858064 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858064 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym615_1291858070 = getEditorForId_1291850610(gEditor, editorId_1291858063);
      if (!isSome_2650808653(oHEX60gensym615_1291858070)) Temporary1 = false; else {        var editor_1291858093 = get_2650808673(oHEX60gensym615_1291858070);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291858064 = isObj(editor_1291858093.m_type, NTI2650800335);
    break BeforeRet;
    }
    
    result_1291858064 = false;
    break BeforeRet;
  };

  return result_1291858064;

}

function scriptIsTextEditorJsWrapper_1291858059(editorId_1291858105) {
  var result_1291858106 = false;

    result_1291858106 = scriptIsTextEditor_1291858062(editorId_1291858105);

  return result_1291858106;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291858059(editorId_));};

function scriptIsAstEditor_1291858131(editorId_1291858132) {
      var Temporary1;

  var result_1291858133 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858133 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym624_1291858139 = getEditorForId_1291850610(gEditor, editorId_1291858132);
      if (!isSome_2650808653(oHEX60gensym624_1291858139)) Temporary1 = false; else {        var editor_1291858162 = get_2650808673(oHEX60gensym624_1291858139);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291858133 = isObj(editor_1291858162.m_type, NTI2818573803);
    break BeforeRet;
    }
    
    result_1291858133 = false;
    break BeforeRet;
  };

  return result_1291858133;

}

function scriptIsAstEditorJsWrapper_1291858128(editorId_1291858174) {
  var result_1291858175 = false;

    result_1291858175 = scriptIsAstEditor_1291858131(editorId_1291858174);

  return result_1291858175;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291858128(editorId_));};

function scriptRunActionFor_1291858199(editorId_1291858200, action_1291858201, arg_1291858202) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym634_1291858208 = getEditorForId_1291850610(gEditor, editorId_1291858200);
      if (!isSome_2650808653(oHEX60gensym634_1291858208)) Temporary2 = false; else {        var editor_1291858231 = get_2650808673(oHEX60gensym634_1291858208);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291858231.eventHandler.handleAction(action_1291858201, arg_1291858202);
    }
    else {
      var oHEX60gensym635_1291858234 = getPopupForId_1291850844(gEditor, editorId_1291858200);
      if (!isSome_3087007912(oHEX60gensym635_1291858234)) Temporary3 = false; else {        var popup_1291858257 = get_3087007932(oHEX60gensym635_1291858234);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291858257.eventHandler.handleAction(action_1291858201, arg_1291858202);
    }
    }
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291858196(editorId_1291858268, action_1291858269, arg_1291858270) {
    scriptRunActionFor_1291858199(editorId_1291858268, action_1291858269, arg_1291858270);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291858196(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291858300(editorId_1291858301, text_1291858302) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym644_1291858308 = getEditorForId_1291850610(gEditor, editorId_1291858301);
      if (!isSome_2650808653(oHEX60gensym644_1291858308)) Temporary2 = false; else {        var editor_1291858331 = get_2650808673(oHEX60gensym644_1291858308);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291858331.eventHandler.handleInput(text_1291858302);
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291858297(editorId_1291858339, text_1291858340) {
    scriptInsertTextInto_1291858300(editorId_1291858339, text_1291858340);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291858297(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291858365(editorId_1291858366) {
      var Temporary2;

  var result_1291858367 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291858429 = {Field0: 0, Field1: 0};
    var colontmp__1291858430 = {Field0: 0, Field1: 0};
    result_1291858367 = nimCopy(result_1291858367, {Field0: nimCopy(null, colontmp__1291858429, NTI2231369737), Field1: nimCopy(null, colontmp__1291858430, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym653_1291858373 = getEditorForId_1291850610(gEditor, editorId_1291858366);
      if (!isSome_2650808653(oHEX60gensym653_1291858373)) Temporary2 = false; else {        var editor_1291858396 = get_2650808673(oHEX60gensym653_1291858373);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291858396.m_type, NTI2650800335)) {
    var editor_1291858403 = editor_1291858396;
    result_1291858367 = nimCopy(result_1291858367, selection_2650800624(editor_1291858403), NTI2231369739);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291858431 = {Field0: 0, Field1: 0};
    var colontmp__1291858432 = {Field0: 0, Field1: 0};
    result_1291858367 = nimCopy(result_1291858367, {Field0: nimCopy(null, colontmp__1291858431, NTI2231369737), Field1: nimCopy(null, colontmp__1291858432, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  return result_1291858367;

}

function scriptTextEditorSelectionJsWrapper_1291858362(editorId_1291858409) {
  var result_1291858410 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291858410 = nimCopy(result_1291858410, scriptTextEditorSelection_1291858365(editorId_1291858409), NTI2231369739);

  return result_1291858410;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291858362(editorId_));};

function scriptSetTextEditorSelection_1291858438(editorId_1291858439, selection_1291858440) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym662_1291858446 = getEditorForId_1291850610(gEditor, editorId_1291858439);
      if (!isSome_2650808653(oHEX60gensym662_1291858446)) Temporary2 = false; else {        var editor_1291858469 = get_2650808673(oHEX60gensym662_1291858446);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291858469.m_type, NTI2650800335)) {
    selectionHEX3D_2650800630(editor_1291858469, selection_1291858440);
    }
    
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291858435(editorId_1291858481, selection_1291858482) {
    scriptSetTextEditorSelection_1291858438(editorId_1291858481, selection_1291858482);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291858435(editorId_, selection_));};

function scriptTextEditorSelections_1291858507(editorId_1291858508) {
      var Temporary1;

  var result_1291858509 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858509 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854219);
    break BeforeRet;
    }
    
      var oHEX60gensym671_1291858519 = getEditorForId_1291850610(gEditor, editorId_1291858508);
      if (!isSome_2650808653(oHEX60gensym671_1291858519)) Temporary1 = false; else {        var editor_1291858542 = get_2650808673(oHEX60gensym671_1291858519);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291858542.m_type, NTI2650800335)) {
    var editor_1291858549 = editor_1291858542;
    result_1291858509 = nimCopy(null, selections_2650800621(editor_1291858549), NTI2231369747);
    break BeforeRet;
    }
    
    }
    
    result_1291858509 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854219);
    break BeforeRet;
  };

  return result_1291858509;

}

function scriptTextEditorSelectionsJsWrapper_1291858504(editorId_1291858559) {
  var result_1291858560 = [];

    result_1291858560 = nimCopy(null, scriptTextEditorSelections_1291858507(editorId_1291858559), NTI1291854206);

  return result_1291858560;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291858504(editorId_));};

function scriptSetTextEditorSelections_1291858584(editorId_1291858585, selections_1291858586) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym680_1291858592 = getEditorForId_1291850610(gEditor, editorId_1291858585);
      if (!isSome_2650808653(oHEX60gensym680_1291858592)) Temporary2 = false; else {        var editor_1291858615 = get_2650808673(oHEX60gensym680_1291858592);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291858615.m_type, NTI2650800335)) {
    selectionsHEX3D_2650800880(editor_1291858615, selections_1291858586);
    }
    
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291858581(editorId_1291858627, selections_1291858628) {
    scriptSetTextEditorSelections_1291858584(editorId_1291858627, selections_1291858628);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291858581(editorId_, selections_));};

function scriptGetTextEditorLine_1291858653(editorId_1291858654, line_1291858655) {
      var Temporary1;
    var Temporary2;

  var result_1291858656 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858656 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym690_1291858662 = getEditorForId_1291850610(gEditor, editorId_1291858654);
      if (!isSome_2650808653(oHEX60gensym690_1291858662)) Temporary1 = false; else {        var editor_1291858685 = get_2650808673(oHEX60gensym690_1291858662);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291858685.m_type, NTI2650800335)) {
    var editor_1291858692 = editor_1291858685;
    if (((0 <= line_1291858655) && (line_1291858655 < (content_2650801275(editor_1291858692.document)).length))) {
    result_1291858656 = nimCopy(null, (Temporary2 = content_2650801275(editor_1291858692.document), Temporary2)[chckIndx(line_1291858655, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291858656 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291858656;

}

function scriptGetTextEditorLineJsWrapper_1291858650(editorId_1291858702, line_1291858703) {
  var result_1291858704 = [];

    result_1291858704 = nimCopy(null, scriptGetTextEditorLine_1291858653(editorId_1291858702, line_1291858703), NTI33554449);

  return result_1291858704;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291858650(editorId_, line_));};

function scriptGetTextEditorLineCount_1291858733(editorId_1291858734) {
      var Temporary1;

  var result_1291858735 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858735 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym700_1291858741 = getEditorForId_1291850610(gEditor, editorId_1291858734);
      if (!isSome_2650808653(oHEX60gensym700_1291858741)) Temporary1 = false; else {        var editor_1291858764 = get_2650808673(oHEX60gensym700_1291858741);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291858764.m_type, NTI2650800335)) {
    var editor_1291858771 = editor_1291858764;
    result_1291858735 = (content_2650801275(editor_1291858771.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291858735 = 0;
    break BeforeRet;
  };

  return result_1291858735;

}

function scriptGetTextEditorLineCountJsWrapper_1291858730(editorId_1291858780) {
  var result_1291858781 = 0;

    result_1291858781 = scriptGetTextEditorLineCount_1291858733(editorId_1291858780);

  return result_1291858781;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291858730(editorId_));};

function scriptGetOptionInt_1291858816(path_1291858817, default_1291858818) {
  var result_1291858819 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291858819 = default_1291858818;
      break BeforeRet;
      }
      
      var nodeHEX60gensym710_1291858824 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291858817, [46], -1));
      if ((nodeHEX60gensym710_1291858824 == null)) {
      result_1291858819 = default_1291858818;
      break BeforeRet;
      }
      
    };
    result_1291858819 = getInt_1627390118(nodeHEX60gensym710_1291858824, default_1291858818);
  };

  return result_1291858819;

}

function scriptGetOptionIntJsWrapper_1291858813(path_1291858834, default_1291858835) {
  var result_1291858836 = 0;

    result_1291858836 = scriptGetOptionInt_1291858816(path_1291858834, default_1291858835);

  return result_1291858836;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291858813(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291858866(path_1291858867, default_1291858868) {
  var result_1291858869 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291858869 = default_1291858868;
      break BeforeRet;
      }
      
      var nodeHEX60gensym720_1291858874 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291858867, [46], -1));
      if ((nodeHEX60gensym720_1291858874 == null)) {
      result_1291858869 = default_1291858868;
      break BeforeRet;
      }
      
    };
    result_1291858869 = getFloat_1627390140(nodeHEX60gensym720_1291858874, default_1291858868);
  };

  return result_1291858869;

}

function scriptGetOptionFloatJsWrapper_1291858863(path_1291858884, default_1291858885) {
  var result_1291858886 = 0.0;

    result_1291858886 = scriptGetOptionFloat_1291858866(path_1291858884, default_1291858885);

  return result_1291858886;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291858863(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291858981(path_1291858982, default_1291858983) {
  var result_1291858984 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291858984 = default_1291858983;
      break BeforeRet;
      }
      
      var nodeHEX60gensym736_1291858989 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291858982, [46], -1));
      if ((nodeHEX60gensym736_1291858989 == null)) {
      result_1291858984 = default_1291858983;
      break BeforeRet;
      }
      
    };
    result_1291858984 = getBool_1627390147(nodeHEX60gensym736_1291858989, default_1291858983);
  };

  return result_1291858984;

}

function scriptGetOptionBoolJsWrapper_1291858978(path_1291858999, default_1291859000) {
  var result_1291859001 = false;

    result_1291859001 = scriptGetOptionBool_1291858981(path_1291858999, default_1291859000);

  return result_1291859001;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291858978(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291859031(path_1291859032, default_1291859033) {
  var result_1291859034 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859034 = nimCopy(null, default_1291859033, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym746_1291859039 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859032, [46], -1));
      if ((nodeHEX60gensym746_1291859039 == null)) {
      result_1291859034 = nimCopy(null, default_1291859033, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291859034 = nimCopy(null, getStr_1627390106(nodeHEX60gensym746_1291859039, default_1291859033), NTI33554449);
  };

  return result_1291859034;

}

function scriptGetOptionStringJsWrapper_1291859028(path_1291859049, default_1291859050) {
  var result_1291859051 = [];

    result_1291859051 = nimCopy(null, scriptGetOptionString_1291859031(path_1291859049, default_1291859050), NTI33554449);

  return result_1291859051;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291859028(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291859081(path_1291859082, value_1291859083) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym755_1291859090 = nsuSplitString(path_1291859082, [46], -1);
      var nodeHEX60gensym755_1291859091 = gEditor.options;
      Label3: {
        var keyHEX60gensym755_1291859110 = [];
        var colontmp__1291859154 = [];
        colontmp__1291859154 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym755_1291859090, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859155 = 0;
        var L_1291859156 = (colontmp__1291859154).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859155 < L_1291859156)) break Label5;
              keyHEX60gensym755_1291859110 = colontmp__1291859154[chckIndx(i_1291859155, 0, (colontmp__1291859154).length - 1)];
              if (!((nodeHEX60gensym755_1291859091.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym755_1291859091, keyHEX60gensym755_1291859110))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym755_1291859091, keyHEX60gensym755_1291859110, newJObject_1627390051());
              }
              
              nodeHEX60gensym755_1291859091 = HEX5BHEX5D_1627393037(nodeHEX60gensym755_1291859091, keyHEX60gensym755_1291859110);
              i_1291859155 = addInt(i_1291859155, 1);
              if (!(((colontmp__1291859154).length == L_1291859156))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym755_1291859091 == null) || !((nodeHEX60gensym755_1291859091.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym755_1291859091, HEX5BHEX5D_2566914816(pathItemsHEX60gensym755_1291859090, 1), newJInt_1627390040(value_1291859083));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291859078(path_1291859131, value_1291859132) {
    scriptSetOptionInt_1291859081(path_1291859131, value_1291859132);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291859078(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291859163(path_1291859164, value_1291859165) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym769_1291859172 = nsuSplitString(path_1291859164, [46], -1);
      var nodeHEX60gensym769_1291859173 = gEditor.options;
      Label3: {
        var keyHEX60gensym769_1291859192 = [];
        var colontmp__1291859236 = [];
        colontmp__1291859236 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym769_1291859172, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859237 = 0;
        var L_1291859238 = (colontmp__1291859236).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859237 < L_1291859238)) break Label5;
              keyHEX60gensym769_1291859192 = colontmp__1291859236[chckIndx(i_1291859237, 0, (colontmp__1291859236).length - 1)];
              if (!((nodeHEX60gensym769_1291859173.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym769_1291859173, keyHEX60gensym769_1291859192))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym769_1291859173, keyHEX60gensym769_1291859192, newJObject_1627390051());
              }
              
              nodeHEX60gensym769_1291859173 = HEX5BHEX5D_1627393037(nodeHEX60gensym769_1291859173, keyHEX60gensym769_1291859192);
              i_1291859237 = addInt(i_1291859237, 1);
              if (!(((colontmp__1291859236).length == L_1291859238))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym769_1291859173 == null) || !((nodeHEX60gensym769_1291859173.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym769_1291859173, HEX5BHEX5D_2566914816(pathItemsHEX60gensym769_1291859172, 1), newJFloat_1627390043(value_1291859165));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291859160(path_1291859213, value_1291859214) {
    scriptSetOptionFloat_1291859163(path_1291859213, value_1291859214);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291859160(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291859245(path_1291859246, value_1291859247) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym783_1291859254 = nsuSplitString(path_1291859246, [46], -1);
      var nodeHEX60gensym783_1291859255 = gEditor.options;
      Label3: {
        var keyHEX60gensym783_1291859274 = [];
        var colontmp__1291859318 = [];
        colontmp__1291859318 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym783_1291859254, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859319 = 0;
        var L_1291859320 = (colontmp__1291859318).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859319 < L_1291859320)) break Label5;
              keyHEX60gensym783_1291859274 = colontmp__1291859318[chckIndx(i_1291859319, 0, (colontmp__1291859318).length - 1)];
              if (!((nodeHEX60gensym783_1291859255.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym783_1291859255, keyHEX60gensym783_1291859274))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym783_1291859255, keyHEX60gensym783_1291859274, newJObject_1627390051());
              }
              
              nodeHEX60gensym783_1291859255 = HEX5BHEX5D_1627393037(nodeHEX60gensym783_1291859255, keyHEX60gensym783_1291859274);
              i_1291859319 = addInt(i_1291859319, 1);
              if (!(((colontmp__1291859318).length == L_1291859320))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym783_1291859255 == null) || !((nodeHEX60gensym783_1291859255.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym783_1291859255, HEX5BHEX5D_2566914816(pathItemsHEX60gensym783_1291859254, 1), newJBool_1627390046(value_1291859247));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291859242(path_1291859295, value_1291859296) {
    scriptSetOptionBool_1291859245(path_1291859295, value_1291859296);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291859242(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291859327(path_1291859328, value_1291859329) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym797_1291859336 = nsuSplitString(path_1291859328, [46], -1);
      var nodeHEX60gensym797_1291859337 = gEditor.options;
      Label3: {
        var keyHEX60gensym797_1291859356 = [];
        var colontmp__1291859400 = [];
        colontmp__1291859400 = HEX5BHEX5D_2650814138(pathItemsHEX60gensym797_1291859336, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859401 = 0;
        var L_1291859402 = (colontmp__1291859400).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859401 < L_1291859402)) break Label5;
              keyHEX60gensym797_1291859356 = colontmp__1291859400[chckIndx(i_1291859401, 0, (colontmp__1291859400).length - 1)];
              if (!((nodeHEX60gensym797_1291859337.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym797_1291859337, keyHEX60gensym797_1291859356))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym797_1291859337, keyHEX60gensym797_1291859356, newJObject_1627390051());
              }
              
              nodeHEX60gensym797_1291859337 = HEX5BHEX5D_1627393037(nodeHEX60gensym797_1291859337, keyHEX60gensym797_1291859356);
              i_1291859401 = addInt(i_1291859401, 1);
              if (!(((colontmp__1291859400).length == L_1291859402))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym797_1291859337 == null) || !((nodeHEX60gensym797_1291859337.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym797_1291859337, HEX5BHEX5D_2566914816(pathItemsHEX60gensym797_1291859336, 1), newJString_1627389994(value_1291859329));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291859324(path_1291859377, value_1291859378) {
    scriptSetOptionString_1291859327(path_1291859377, value_1291859378);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291859324(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847802(t_1291847805, key_1291847806, hc_1291847807, hc_1291847807_Idx) {
  var result_1291847808 = 0;

  BeforeRet: {
    hc_1291847807[hc_1291847807_Idx] = hash_1325400491(key_1291847806);
    if ((hc_1291847807[hc_1291847807_Idx] == 0)) {
    hc_1291847807[hc_1291847807_Idx] = 314159265;
    }
    
    if (((t_1291847805.data).length == 0)) {
    result_1291847808 = -1;
    break BeforeRet;
    }
    
    var h_1291847860 = (hc_1291847807[hc_1291847807_Idx] & (t_1291847805.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847805.data[chckIndx(h_1291847860, 0, (t_1291847805.data).length - 1)].Field0)) break Label2;
          if (((t_1291847805.data[chckIndx(h_1291847860, 0, (t_1291847805.data).length - 1)].Field0 == hc_1291847807[hc_1291847807_Idx]) && eqStrings(t_1291847805.data[chckIndx(h_1291847860, 0, (t_1291847805.data).length - 1)].Field1, key_1291847806))) {
          result_1291847808 = h_1291847860;
          break BeforeRet;
          }
          
          h_1291847860 = nextTry_1308622883(h_1291847860, (t_1291847805.data).length - 1);
        }
    };
    result_1291847808 = subInt(-1, h_1291847860);
  };

  return result_1291847808;

}

function mustRehash_2885699893(t_2885699895) {
  var result_2885699896 = false;

    if (!((t_2885699895.counter < (t_2885699895.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2885699896 = ((mulInt((t_2885699895.data).length, 2) < mulInt(t_2885699895.counter, 3)) || (subInt((t_2885699895.data).length, t_2885699895.counter) < 4));

  return result_2885699896;

}

function rawInsert_2885700586(t_2885700590, data_2885700591, data_2885700591_Idx, key_2885700592, val_2885700593, hc_2885700594, h_2885700595) {
    data_2885700591[data_2885700591_Idx][chckIndx(h_2885700595, 0, (data_2885700591[data_2885700591_Idx]).length - 1)].Field1 = nimCopy(null, key_2885700592, NTI33554449);
    data_2885700591[data_2885700591_Idx][chckIndx(h_2885700595, 0, (data_2885700591[data_2885700591_Idx]).length - 1)].Field2 = val_2885700593;
    data_2885700591[data_2885700591_Idx][chckIndx(h_2885700595, 0, (data_2885700591[data_2885700591_Idx]).length - 1)].Field0 = hc_2885700594;

  
}

function enlarge_2885700150(t_2885700153) {
    var n_2885700156 = [];
    n_2885700156 = new Array(chckRange(mulInt((t_2885700153.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2885700153.data).length, 2), 0, 2147483647) ; ++i) { n_2885700156[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_2885700153.data; t_2885700153.data = n_2885700156; n_2885700156 = Temporary1;    Label2: {
      var i_2885700254 = 0;
      var colontmp__1291859489 = 0;
      colontmp__1291859489 = (n_2885700156).length - 1;
      var res_1291859490 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859490 <= colontmp__1291859489)) break Label4;
            i_2885700254 = res_1291859490;
            var eh_2885700335 = n_2885700156[chckIndx(i_2885700254, 0, (n_2885700156).length - 1)].Field0;
            if (isFilled_1308622880(eh_2885700335)) {
            var j_2885700339 = (eh_2885700335 & (t_2885700153.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2885700153.data[chckIndx(j_2885700339, 0, (t_2885700153.data).length - 1)].Field0)) break Label6;
                  j_2885700339 = nextTry_1308622883(j_2885700339, (t_2885700153.data).length - 1);
                }
            };
            rawInsert_2885700586(t_2885700153, t_2885700153, "data", n_2885700156[chckIndx(i_2885700254, 0, (n_2885700156).length - 1)].Field1, n_2885700156[chckIndx(i_2885700254, 0, (n_2885700156).length - 1)].Field2, eh_2885700335, j_2885700339);
            }
            
            res_1291859490 = addInt(res_1291859490, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2885700836(t_2885700839, key_2885700840, hc_2885700841) {
  var result_2885700842 = 0;

  BeforeRet: {
    if (((t_2885700839.data).length == 0)) {
    result_2885700842 = -1;
    break BeforeRet;
    }
    
    var h_2885700927 = (hc_2885700841 & (t_2885700839.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2885700839.data[chckIndx(h_2885700927, 0, (t_2885700839.data).length - 1)].Field0)) break Label2;
          if (((t_2885700839.data[chckIndx(h_2885700927, 0, (t_2885700839.data).length - 1)].Field0 == hc_2885700841) && eqStrings(t_2885700839.data[chckIndx(h_2885700927, 0, (t_2885700839.data).length - 1)].Field1, key_2885700840))) {
          result_2885700842 = h_2885700927;
          break BeforeRet;
          }
          
          h_2885700927 = nextTry_1308622883(h_2885700927, (t_2885700839.data).length - 1);
        }
    };
    result_2885700842 = subInt(-1, h_2885700927);
  };

  return result_2885700842;

}

function HEX5BHEX5DHEX3D_2885699625(t_2885699628, key_2885699629, val_2885699630) {
    if (((t_2885699628.data).length == 0)) {
    var correctSizeHEX60gensym115_2885699713 = slotsNeeded_1308622891(32);
    t_2885699628.counter = 0;
    t_2885699628.data = new Array(chckRange(correctSizeHEX60gensym115_2885699713, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_2885699713, 0, 2147483647) ; ++i) { t_2885699628.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_2885699718 = [0];
    var index_2885699725 = rawGet_1291847802(t_2885699628, key_2885699629, hc_2885699718, 0);
    if ((0 <= index_2885699725)) {
    t_2885699628.data[chckIndx(index_2885699725, 0, (t_2885699628.data).length - 1)].Field2 = val_2885699630;
    }
    else {
      if (((t_2885699628.data).length == 0)) {
      var correctSizeHEX60gensym118_2885699888 = slotsNeeded_1308622891(32);
      t_2885699628.counter = 0;
      t_2885699628.data = new Array(chckRange(correctSizeHEX60gensym118_2885699888, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_2885699888, 0, 2147483647) ; ++i) { t_2885699628.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_2885699893(t_2885699628)) {
      enlarge_2885700150(t_2885699628);
      index_2885699725 = rawGetKnownHC_2885700836(t_2885699628, key_2885699629, hc_2885699718[0]);
      }
      
      index_2885699725 = subInt(-1, index_2885699725);
      rawInsert_2885700586(t_2885699628, t_2885699628, "data", key_2885699629, val_2885699630, hc_2885699718[0], index_2885699725);
      t_2885699628.counter = addInt(t_2885699628.counter, 1);
    }
    

  
}

function scriptSetCallback_1291859409(path_1291859410, id_1291859411) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2885699625(gEditor.callbacks, path_1291859410, id_1291859411);
  };

  
}

function scriptSetCallbackJsWrapper_1291859406(path_1291859466, id_1291859467) {
    scriptSetCallback_1291859409(path_1291859466, id_1291859467);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291859406(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3103785002(initialSize_3103785005) {
  var result_3103785011 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3103785013 = slotsNeeded_1308622891(chckRange(initialSize_3103785005, 0, 2147483647));
    result_3103785011.counter = 0;
    result_3103785011.data = new Array(chckRange(correctSizeHEX60gensym0_3103785013, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3103785013, 0, 2147483647) ; ++i) { result_3103785011.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3103785011;

}
var commandLineWidget_3103784998 = [null];
var mainStack_3103784999 = [null];
var viewPanel_3103785000 = [null];
var mainPanel_3103785001 = [null];
var widgetsPerEditor_3103785027 = [initTable_3103785002(32)];

function new_536870928() {
  var result_536870931 = null;

  BeforeRet: {
    var r_536870933 = null;
    r_536870933 = ({m_type: NTI3154116614, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870931 = r_536870933;
    break BeforeRet;
  };

  return result_536870931;

}

function subscribe_1291851064(event_1291851066, callback_1291851068) {
  var result_1291851069 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851069 = nimCopy(result_1291851069, newId_2181038297(), NTI2181038083);
    event_1291851066.handlers.push({Field0: nimCopy(null, result_1291851069, NTI2181038083), Field1: callback_1291851068});;

  return result_1291851069;

}

function anyInProgress_2046821873(handlers_2046821874) {
  var result_2046821875 = false;

  BeforeRet: {
    Label1: {
      var h_2046821889 = null;
      var i_536871005 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871005 < (handlers_2046821874).length)) break Label3;
            h_2046821889 = handlers_2046821874[chckIndx(i_536871005, 0, (handlers_2046821874).length - 1)];
            if (!((h_2046821889.state.current == 0))) {
            result_2046821875 = true;
            break BeforeRet;
            }
            
            i_536871005 = addInt(i_536871005, 1);
          }
      };
    };
    result_2046821875 = false;
    break BeforeRet;
  };

  return result_2046821875;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2046820703(handler_2046820704) {
  var result_2046820705 = null;

  BeforeRet: {
    if ((handler_2046820704.revision < handler_2046820704.config.revision)) {
    handler_2046820704.dfaInternal = buildDFA_2046820415(handler_2046820704.config);
    handler_2046820704.revision = handler_2046820704.config.revision;
    }
    
    result_2046820705 = handler_2046820704.dfaInternal;
    break BeforeRet;
  };

  return result_2046820705;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet278)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet279))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet280)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2046821839(handler_2046821840, handler_2046821840_Idx, input_2046821841, modifiers_2046821842, handleUnknownAsInput_2046821843) {
  var result_2046821844 = 0;

  BeforeRet: {
    if (!((input_2046821841 == 0))) {
    var prevState_2046821845 = nimCopy(null, handler_2046821840[handler_2046821840_Idx].state, NTI2013265955);
    handler_2046821840[handler_2046821840_Idx].state = nimCopy(handler_2046821840[handler_2046821840_Idx].state, step_2013266020(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state, input_2046821841, modifiers_2046821842), NTI2013265955);
    if ((handler_2046821840[handler_2046821840_Idx].state.current == 0)) {
    if ((prevState_2046821845.current == 0)) {
    if ((((handleUnknownAsInput_2046821843 && (0 < input_2046821841)) && SetEq(SetPlus(modifiers_2046821842, ConstSet276), ConstSet277)) && !((handler_2046821840[handler_2046821840_Idx].handleInput == null)))) {
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleInput(inputToString_2013267082(input_2046821841, ConstSet281));
    break BeforeRet;
    }
    
    result_2046821844 = 1;
    break BeforeRet;
    }
    else {
      result_2046821844 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current)) {
    var colontmp__536871007 = parseAction_2046821786(getAction_2013267075(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current));
    var action_2046821858 = nimCopy(null, colontmp__536871007["Field0"], NTI33554449);
    var arg_2046821859 = nimCopy(null, colontmp__536871007["Field1"], NTI33554449);
    handler_2046821840[handler_2046821840_Idx].state.current = getDefaultState_2013267071(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current);
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleAction(action_2046821858, arg_2046821859);
    break BeforeRet;
    }
    else {
      result_2046821844 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2046821844 = 0;
      break BeforeRet;
    }
    
  };

  return result_2046821844;

}

function reset_2046821779(handler_2046821780, handler_2046821780_Idx) {
    handler_2046821780[handler_2046821780_Idx].state = nimCopy(handler_2046821780[handler_2046821780_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2046821899(handlers_2046821900, input_2046821901, modifiers_2046821902) {
            var Temporary4;

    var anyInProgress_2046821903 = anyInProgress_2046821873(handlers_2046821900);
    var allowHandlingUnknownAsInput_2046821904 = true;
    Label1: {
      var i_2046821913 = 0;
      var colontmp__536871000 = 0;
      colontmp__536871000 = (handlers_2046821900).length;
      var i_536871001 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871001 < colontmp__536871000)) break Label3;
            i_2046821913 = i_536871001;
            var handlerIndex_2046821917 = subInt(subInt((handlers_2046821900).length, i_2046821913), 1);
            var handler_2046821918 = [handlers_2046821900[chckIndx(handlerIndex_2046821917, 0, (handlers_2046821900).length - 1)]];
            if (((anyInProgress_2046821903 && !((handler_2046821918[0].state.current == 0))) || (!(anyInProgress_2046821903) && (handler_2046821918[0].state.current == 0)))) {
            Temporary4 = handleEvent_2046821839(handler_2046821918, 0, input_2046821901, modifiers_2046821902, allowHandlingUnknownAsInput_2046821904);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2046821919 = Temporary4;
            switch (response_2046821919) {
            case 3:
              allowHandlingUnknownAsInput_2046821904 = false;
              Label5: {
                var k_2046821961 = 0;
                var h_2046821962 = null;
                var i_536870997 = 0;
                var L_536870998 = (handlers_2046821900).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536870997 < L_536870998)) break Label7;
                      k_2046821961 = i_536870997;
                      h_2046821962 = handlers_2046821900[chckIndx(i_536870997, 0, (handlers_2046821900).length - 1)];
                      if (!((k_2046821961 == handlerIndex_2046821917))) {
                      var h_2046821963 = [h_2046821962];
                      reset_2046821779(h_2046821963, 0);
                      }
                      
                      i_536870997 = addInt(i_536870997, 1);
                      if (!(((handlers_2046821900).length == L_536870998))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2046821904 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2046821918[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871001 = addInt(i_536871001, 1);
          }
      };
    };

  
}

function add_2818580949(x_2818580951, x_2818580951_Idx, y_2818580952) {
    var Temporary1;

    var xl_2818580956 = (x_2818580951[x_2818580951_Idx]).length;
    if (x_2818580951[x_2818580951_Idx].length < (Temporary1 = chckRange(addInt(xl_2818580956, (y_2818580952).length), 0, 2147483647), Temporary1)) { for (var i = x_2818580951[x_2818580951_Idx].length ; i < Temporary1 ; ++i) x_2818580951[x_2818580951_Idx].push(null); }
               else { x_2818580951[x_2818580951_Idx].length = Temporary1; };
    Label2: {
      var i_2818580971 = 0;
      var colontmp__536871009 = 0;
      colontmp__536871009 = (y_2818580952).length - 1;
      var res_536871010 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871010 <= colontmp__536871009)) break Label4;
            i_2818580971 = res_536871010;
            x_2818580951[x_2818580951_Idx][chckIndx(addInt(xl_2818580956, i_2818580971), 0, (x_2818580951[x_2818580951_Idx]).length - 1)] = y_2818580952[chckIndx(i_2818580971, 0, (y_2818580952).length - 1)];
            res_536871010 = addInt(res_536871010, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291857373(self_1291857374) {
  var result_1291857375 = [[]];

    result_1291857375[0] = nimCopy(null, [self_1291857374.eventHandler], NTI2248146958);
    var modeOnTop_1291857389 = getOption_2650808286(self_1291857374, getContextWithMode_1291857320(self_1291857374, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291857374.modeEventHandler == null)) && !(modeOnTop_1291857389))) {
    result_1291857375[0].push(self_1291857374.modeEventHandler);;
    }
    
    if (self_1291857374.commandLineMode) {
    add_2818580949(result_1291857375, 0, getEventHandlers_2147483804(getCommandLineTextEditor_1291850979(self_1291857374)));
    result_1291857375[0].push(self_1291857374.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291857374.popups).length)) {
    add_2818580949(result_1291857375, 0, getEventHandlers_2264924183(self_1291857374.popups[chckIndx((self_1291857374.popups).length - 1, 0, (self_1291857374.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291857374.currentView) && (self_1291857374.currentView < (self_1291857374.views).length))) {
    add_2818580949(result_1291857375, 0, getEventHandlers_2147483804(self_1291857374.views[chckIndx(self_1291857374.currentView, 0, (self_1291857374.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291857374.modeEventHandler == null)) && modeOnTop_1291857389)) {
    result_1291857375[0].push(self_1291857374.modeEventHandler);;
    }
    

  return result_1291857375[0];

}

function handleKeyPress_1291850982(self_1291850983, input_1291850984, modifiers_1291850985) {
    handleEvent_2046821899(currentEventHandlers_1291857373(self_1291850983), input_1291850984, modifiers_1291850985);

  
}

function handleKeyRelease_1291850986(self_1291850987, input_1291850988, modifiers_1291850989) {
  
}

function handleRune_1291850990(self_1291850991, input_1291850992, modifiers_1291850993) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291850992)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291850992, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291850993;
    }
    else {
    Temporary1 = ConstSet282;
    }
    
    var modifiers_1291857590 = nimCopy(null, Temporary1, NTI2013265950);
    handleEvent_2046821899(currentEventHandlers_1291857373(self_1291850991), input_1291850992, modifiers_1291857590);

  
}

function subscribe_1291851234(event_1291851236, callback_1291851238) {
  var result_1291851239 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851239 = nimCopy(result_1291851239, newId_2181038297(), NTI2181038083);
    event_1291851236.handlers.push({Field0: nimCopy(null, result_1291851239, NTI2181038083), Field1: callback_1291851238});;

  return result_1291851239;

}

function contains_2063597758(a_2063597759, b_2063597760) {
  var result_2063597761 = false;

  BeforeRet: {
    result_2063597761 = ((((a_2063597759.x <= b_2063597760.arr[chckIndx(0, 0, (b_2063597760.arr).length - 1)]) && (b_2063597760.arr[chckIndx(0, 0, (b_2063597760.arr).length - 1)] <= (a_2063597759.x + a_2063597759.w))) && (a_2063597759.y <= b_2063597760.arr[chckIndx(1, 0, (b_2063597760.arr).length - 1)])) && (b_2063597760.arr[chckIndx(1, 0, (b_2063597760.arr).length - 1)] <= (a_2063597759.y + a_2063597759.h)));
    break BeforeRet;
  };

  return result_2063597761;

}

function handleMousePress_1291850994(self_1291850995, button_1291850996, modifiers_1291850997, mousePosWindow_1291850998) {
  BeforeRet: {
    Label1: {
      var i_1291857444 = 0;
      var colontmp__536871013 = 0;
      colontmp__536871013 = (self_1291850995.popups).length - 1;
      var res_536871014 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871014 <= colontmp__536871013)) break Label3;
            i_1291857444 = res_536871014;
            var popup_1291857448 = self_1291850995.popups[chckIndx(subInt((self_1291850995.popups).length - 1, i_1291857444), 0, (self_1291850995.popups).length - 1)];
            if (contains_2063597758(popup_1291857448.lastBounds, mousePosWindow_1291850998)) {
            handleMousePress_2264924194(popup_1291857448, button_1291850996, mousePosWindow_1291850998);
            break BeforeRet;
            }
            
            res_536871014 = addInt(res_536871014, 1);
          }
      };
    };
    var rects_1291857452 = layoutViews_1291848216(self_1291850995.layout, self_1291850995.layout_props, self_1291850995.lastBounds, (self_1291850995.views).length);
    Label4: {
      var i_1291857485 = 0;
      var view_1291857486 = null;
      var i_536871018 = 0;
      var L_536871019 = (self_1291850995.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871018 < L_536871019)) break Label6;
            i_1291857485 = i_536871018;
            view_1291857486 = self_1291850995.views[chckIndx(i_536871018, 0, (self_1291850995.views).length - 1)];
            if (((rects_1291857452).length <= i_1291857485)) {
            break BeforeRet;
            }
            
            if (contains_2063597758(rects_1291857452[chckIndx(i_1291857485, 0, (rects_1291857452).length - 1)], mousePosWindow_1291850998)) {
            self_1291850995.currentView = i_1291857485;
            handleMousePress_2147483821(view_1291857486.editor, button_1291850996, mousePosWindow_1291850998);
            break BeforeRet;
            }
            
            i_536871018 = addInt(i_536871018, 1);
            if (!(((self_1291850995.views).length == L_536871019))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291850999(self_1291851000, button_1291851001, modifiers_1291851002, mousePosWindow_1291851003) {
  BeforeRet: {
    Label1: {
      var i_1291857503 = 0;
      var colontmp__536871022 = 0;
      colontmp__536871022 = (self_1291851000.popups).length - 1;
      var res_536871023 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871023 <= colontmp__536871022)) break Label3;
            i_1291857503 = res_536871023;
            var popup_1291857507 = self_1291851000.popups[chckIndx(subInt((self_1291851000.popups).length - 1, i_1291857503), 0, (self_1291851000.popups).length - 1)];
            if (contains_2063597758(popup_1291857507.lastBounds, mousePosWindow_1291851003)) {
            handleMouseRelease_2264924199(popup_1291857507, button_1291851001, mousePosWindow_1291851003);
            break BeforeRet;
            }
            
            res_536871023 = addInt(res_536871023, 1);
          }
      };
    };
    var rects_1291857511 = layoutViews_1291848216(self_1291851000.layout, self_1291851000.layout_props, self_1291851000.lastBounds, (self_1291851000.views).length);
    Label4: {
      var i_1291857517 = 0;
      var view_1291857518 = null;
      var i_536871026 = 0;
      var L_536871027 = (self_1291851000.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871026 < L_536871027)) break Label6;
            i_1291857517 = i_536871026;
            view_1291857518 = self_1291851000.views[chckIndx(i_536871026, 0, (self_1291851000.views).length - 1)];
            if (((rects_1291857511).length <= i_1291857517)) {
            break BeforeRet;
            }
            
            if (((self_1291851000.currentView == i_1291857517) && contains_2063597758(rects_1291857511[chckIndx(i_1291857517, 0, (rects_1291857511).length - 1)], mousePosWindow_1291851003))) {
            handleMouseRelease_2147483826(view_1291857518.editor, button_1291851001, mousePosWindow_1291851003);
            break BeforeRet;
            }
            
            i_536871026 = addInt(i_536871026, 1);
            if (!(((self_1291851000.views).length == L_536871027))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851355(event_1291851357, callback_1291851359) {
  var result_1291851360 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851360 = nimCopy(result_1291851360, newId_2181038297(), NTI2181038083);
    event_1291851357.handlers.push({Field0: nimCopy(null, result_1291851360, NTI2181038083), Field1: callback_1291851359});;

  return result_1291851360;

}

function handleMouseMove_1291851004(self_1291851005, mousePosWindow_1291851006, mousePosDelta_1291851007, modifiers_1291851008, buttons_1291851009) {
  BeforeRet: {
    Label1: {
      var i_1291857535 = 0;
      var colontmp__536871030 = 0;
      colontmp__536871030 = (self_1291851005.popups).length - 1;
      var res_536871031 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871031 <= colontmp__536871030)) break Label3;
            i_1291857535 = res_536871031;
            var popup_1291857539 = self_1291851005.popups[chckIndx(subInt((self_1291851005.popups).length - 1, i_1291857535), 0, (self_1291851005.popups).length - 1)];
            if (contains_2063597758(popup_1291857539.lastBounds, mousePosWindow_1291851006)) {
            handleMouseMove_2264924206(popup_1291857539, mousePosWindow_1291851006, mousePosDelta_1291851007, modifiers_1291851008, buttons_1291851009);
            break BeforeRet;
            }
            
            res_536871031 = addInt(res_536871031, 1);
          }
      };
    };
    var rects_1291857543 = layoutViews_1291848216(self_1291851005.layout, self_1291851005.layout_props, self_1291851005.lastBounds, (self_1291851005.views).length);
    Label4: {
      var i_1291857549 = 0;
      var view_1291857550 = null;
      var i_536871034 = 0;
      var L_536871035 = (self_1291851005.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871034 < L_536871035)) break Label6;
            i_1291857549 = i_536871034;
            view_1291857550 = self_1291851005.views[chckIndx(i_536871034, 0, (self_1291851005.views).length - 1)];
            if (((rects_1291857543).length <= i_1291857549)) {
            break BeforeRet;
            }
            
            if (((self_1291851005.currentView == i_1291857549) && contains_2063597758(rects_1291857543[chckIndx(i_1291857549, 0, (rects_1291857543).length - 1)], mousePosWindow_1291851006))) {
            handleMouseMove_2147483833(view_1291857550.editor, mousePosWindow_1291851006, mousePosDelta_1291851007, modifiers_1291851008, buttons_1291851009);
            break BeforeRet;
            }
            
            i_536871034 = addInt(i_536871034, 1);
            if (!(((self_1291851005.views).length == L_536871035))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851427(event_1291851429, callback_1291851431) {
  var result_1291851432 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851432 = nimCopy(result_1291851432, newId_2181038297(), NTI2181038083);
    event_1291851429.handlers.push({Field0: nimCopy(null, result_1291851432, NTI2181038083), Field1: callback_1291851431});;

  return result_1291851432;

}

function handleScroll_1291851010(self_1291851011, scroll_1291851012, mousePosWindow_1291851013, modifiers_1291851014) {
  BeforeRet: {
    Label1: {
      var i_1291857566 = 0;
      var colontmp__536871038 = 0;
      colontmp__536871038 = (self_1291851011.popups).length - 1;
      var res_536871039 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871039 <= colontmp__536871038)) break Label3;
            i_1291857566 = res_536871039;
            var popup_1291857570 = self_1291851011.popups[chckIndx(subInt((self_1291851011.popups).length - 1, i_1291857566), 0, (self_1291851011.popups).length - 1)];
            if (contains_2063597758(popup_1291857570.lastBounds, mousePosWindow_1291851013)) {
            handleScroll_2264924189(popup_1291857570, scroll_1291851012, mousePosWindow_1291851013);
            break BeforeRet;
            }
            
            res_536871039 = addInt(res_536871039, 1);
          }
      };
    };
    Label4: {
      var i_1291857576 = 0;
      var view_1291857577 = null;
      var i_536871042 = 0;
      var L_536871043 = (self_1291851011.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871042 < L_536871043)) break Label6;
            i_1291857576 = i_536871042;
            view_1291857577 = self_1291851011.views[chckIndx(i_536871042, 0, (self_1291851011.views).length - 1)];
            if (contains_2063597758(view_1291857577.editor.lastContentBounds, mousePosWindow_1291851013)) {
            handleScroll_2147483816(view_1291857577.editor, scroll_1291851012, mousePosWindow_1291851013);
            break BeforeRet;
            }
            
            i_536871042 = addInt(i_536871042, 1);
            if (!(((self_1291851011.views).length == L_536871043))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851499(event_1291851501, callback_1291851503) {
  var result_1291851504 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851504 = nimCopy(result_1291851504, newId_2181038297(), NTI2181038083);
    event_1291851501.handlers.push({Field0: nimCopy(null, result_1291851504, NTI2181038083), Field1: callback_1291851503});;

  return result_1291851504;

}

function initTable_1291851514(initialSize_1291851517) {
  var result_1291851518 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_1291851520 = slotsNeeded_1308622891(chckRange(initialSize_1291851517, 0, 2147483647));
    result_1291851518.counter = 0;
    result_1291851518.data = new Array(chckRange(correctSizeHEX60gensym58_1291851520, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_1291851520, 0, 2147483647) ; ++i) { result_1291851518.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851518;

}

function HEX5BHEX5DHEX3D_1291851583(t_1291851586, key_1291851587, val_1291851588) {
    if (((t_1291851586.data).length == 0)) {
    var correctSizeHEX60gensym61_1291851637 = slotsNeeded_1308622891(32);
    t_1291851586.counter = 0;
    t_1291851586.data = new Array(chckRange(correctSizeHEX60gensym61_1291851637, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_1291851637, 0, 2147483647) ; ++i) { t_1291851586.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851642 = [0];
    var index_1291851649 = rawGet_1291848300(t_1291851586, key_1291851587, hc_1291851642, 0);
    if ((0 <= index_1291851649)) {
    t_1291851586.data[chckIndx(index_1291851649, 0, (t_1291851586.data).length - 1)].Field2 = val_1291851588;
    }
    else {
      if (((t_1291851586.data).length == 0)) {
      var correctSizeHEX60gensym64_1291851751 = slotsNeeded_1308622891(32);
      t_1291851586.counter = 0;
      t_1291851586.data = new Array(chckRange(correctSizeHEX60gensym64_1291851751, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym64_1291851751, 0, 2147483647) ; ++i) { t_1291851586.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851756(t_1291851586)) {
      enlarge_1291851911(t_1291851586);
      index_1291851649 = rawGetKnownHC_1291852383(t_1291851586, key_1291851587, hc_1291851642[0]);
      }
      
      index_1291851649 = subInt(-1, index_1291851649);
      rawInsert_1291852205(t_1291851586, t_1291851586, "data", key_1291851587, val_1291851588, hc_1291851642[0], index_1291851649);
      t_1291851586.counter = addInt(t_1291851586.counter, 1);
    }
    

  
}

function toTable_1291851509(pairs_1291851512) {
  var result_1291851513 = [({data: [], counter: 0})];

    result_1291851513[0] = nimCopy(result_1291851513[0], initTable_1291851514((pairs_1291851512).length), NTI1291845654);
    Label1: {
      var key_1291851541 = [];
      var val_1291851542 = 0.0;
      var i_536871047 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871047 < (pairs_1291851512).length)) break Label3;
            key_1291851541 = pairs_1291851512[chckIndx(i_536871047, 0, (pairs_1291851512).length - 1)]["Field0"];
            val_1291851542 = pairs_1291851512[chckIndx(i_536871047, 0, (pairs_1291851512).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851583(result_1291851513[0], key_1291851541, val_1291851542);
            i_536871047 = addInt(i_536871047, 1);
          }
      };
    };

  return result_1291851513[0];

}

function rawGet_2483028997(t_2483029000, key_2483029001, hc_2483029002, hc_2483029002_Idx) {
  var result_2483029003 = 0;

  BeforeRet: {
    hc_2483029002[hc_2483029002_Idx] = hash_1325400491(key_2483029001);
    if ((hc_2483029002[hc_2483029002_Idx] == 0)) {
    hc_2483029002[hc_2483029002_Idx] = 314159265;
    }
    
    if (((t_2483029000.data).length == 0)) {
    result_2483029003 = -1;
    break BeforeRet;
    }
    
    var h_2483029054 = (hc_2483029002[hc_2483029002_Idx] & (t_2483029000.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0)) break Label2;
          if (((t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0 == hc_2483029002[hc_2483029002_Idx]) && eqStrings(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field1, key_2483029001))) {
          result_2483029003 = h_2483029054;
          break BeforeRet;
          }
          
          h_2483029054 = nextTry_1308622883(h_2483029054, (t_2483029000.data).length - 1);
        }
    };
    result_2483029003 = subInt(-1, h_2483029054);
  };

  return result_2483029003;

}

function mustRehash_2483029342(t_2483029344) {
  var result_2483029345 = false;

    if (!((t_2483029344.counter < (t_2483029344.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483029345 = ((mulInt((t_2483029344.data).length, 2) < mulInt(t_2483029344.counter, 3)) || (subInt((t_2483029344.data).length, t_2483029344.counter) < 4));

  return result_2483029345;

}

function rawInsert_2483029791(t_2483029795, data_2483029796, data_2483029796_Idx, key_2483029797, val_2483029798, hc_2483029799, h_2483029800) {
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field1 = nimCopy(null, key_2483029797, NTI33554449);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2 = nimCopy(data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2, val_2483029798, NTI2365587459);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field0 = hc_2483029799;

  
}

function enlarge_2483029497(t_2483029500) {
    var n_2483029503 = [];
    n_2483029503 = new Array(chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647) ; ++i) { n_2483029503[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2483029500.data; t_2483029500.data = n_2483029503; n_2483029503 = Temporary1;    Label2: {
      var i_2483029567 = 0;
      var colontmp__536871052 = 0;
      colontmp__536871052 = (n_2483029503).length - 1;
      var res_536871053 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871053 <= colontmp__536871052)) break Label4;
            i_2483029567 = res_536871053;
            var eh_2483029621 = n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483029621)) {
            var j_2483029625 = (eh_2483029621 & (t_2483029500.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483029500.data[chckIndx(j_2483029625, 0, (t_2483029500.data).length - 1)].Field0)) break Label6;
                  j_2483029625 = nextTry_1308622883(j_2483029625, (t_2483029500.data).length - 1);
                }
            };
            rawInsert_2483029791(t_2483029500, t_2483029500, "data", n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field1, n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field2, eh_2483029621, j_2483029625);
            }
            
            res_536871053 = addInt(res_536871053, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483029960(t_2483029963, key_2483029964, hc_2483029965) {
  var result_2483029966 = 0;

  BeforeRet: {
    if (((t_2483029963.data).length == 0)) {
    result_2483029966 = -1;
    break BeforeRet;
    }
    
    var h_2483030017 = (hc_2483029965 & (t_2483029963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0)) break Label2;
          if (((t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0 == hc_2483029965) && eqStrings(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field1, key_2483029964))) {
          result_2483029966 = h_2483030017;
          break BeforeRet;
          }
          
          h_2483030017 = nextTry_1308622883(h_2483030017, (t_2483029963.data).length - 1);
        }
    };
    result_2483029966 = subInt(-1, h_2483030017);
  };

  return result_2483029966;

}

function HEX5BHEX5DHEX3D_2483028936(t_2483028939, key_2483028940, val_2483028941) {
    if (((t_2483028939.data).length == 0)) {
    var correctSizeHEX60gensym23_2483028991 = slotsNeeded_1308622891(32);
    t_2483028939.counter = 0;
    t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2483028996 = [0];
    var index_2483029235 = rawGet_2483028997(t_2483028939, key_2483028940, hc_2483028996, 0);
    if ((0 <= index_2483029235)) {
    t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2 = nimCopy(t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2, val_2483028941, NTI2365587459);
    }
    else {
      if (((t_2483028939.data).length == 0)) {
      var correctSizeHEX60gensym28_2483029337 = slotsNeeded_1308622891(32);
      t_2483028939.counter = 0;
      t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2483029342(t_2483028939)) {
      enlarge_2483029497(t_2483028939);
      index_2483029235 = rawGetKnownHC_2483029960(t_2483028939, key_2483028940, hc_2483028996[0]);
      }
      
      index_2483029235 = subInt(-1, index_2483029235);
      rawInsert_2483029791(t_2483028939, t_2483028939, "data", key_2483028940, val_2483028941, hc_2483028996[0], index_2483029235);
      t_2483028939.counter = addInt(t_2483028939.counter, 1);
    }
    

  
}

function c2n_2348810428(hex_2348810429, i_2348810430) {
  var result_2348810431 = 0;

  BeforeRet: {
    var c_2348810435 = hex_2348810429[chckIndx(i_2348810430, 0, (hex_2348810429).length - 1)];
    if (    c_2348810435 >= 48 && c_2348810435 <= 57    ){      result_2348810431 = subInt(c_2348810435, 48);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 97 && c_2348810435 <= 102    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 97);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 65 && c_2348810435 <= 70    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2348810431;

}

function parseHex_2348810482(hex_2348810483) {
  var result_2348810484 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810483).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2348810484.r = (addInt(mulInt(c2n_2348810428(hex_2348810483, 0), 16), c2n_2348810428(hex_2348810483, 1)) / 255.0);
    result_2348810484.g = (addInt(mulInt(c2n_2348810428(hex_2348810483, 2), 16), c2n_2348810428(hex_2348810483, 3)) / 255.0);
    result_2348810484.b = (addInt(mulInt(c2n_2348810428(hex_2348810483, 4), 16), c2n_2348810428(hex_2348810483, 5)) / 255.0);
    result_2348810484.a = 1.0;

  return result_2348810484;

}

function parseHexAlpha_2348810573(hex_2348810574) {
  var result_2348810575 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810574).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2348810575.r = (addInt(mulInt(c2n_2348810428(hex_2348810574, 0), 16), c2n_2348810428(hex_2348810574, 1)) / 255.0);
    result_2348810575.g = (addInt(mulInt(c2n_2348810428(hex_2348810574, 2), 16), c2n_2348810428(hex_2348810574, 3)) / 255.0);
    result_2348810575.b = (addInt(mulInt(c2n_2348810428(hex_2348810574, 4), 16), c2n_2348810428(hex_2348810574, 5)) / 255.0);
    result_2348810575.a = (addInt(mulInt(c2n_2348810428(hex_2348810574, 6), 16), c2n_2348810428(hex_2348810574, 7)) / 255.0);

  return result_2348810575;

}

function parseHtmlHexTiny_2348810683(hex_2348810684) {
  var result_2348810685 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2348810684[chckIndx(0, 0, (hex_2348810684).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2348810684).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2348810685.r = (c2n_2348810428(hex_2348810684, 1) / 15.0);
    result_2348810685.g = (c2n_2348810428(hex_2348810684, 2) / 15.0);
    result_2348810685.b = (c2n_2348810428(hex_2348810684, 3) / 15.0);
    result_2348810685.a = 1.0;

  return result_2348810685;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet283[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2348810522(s_2348810525, x_2348810526) {
  var result_2348810527 = [];

    var a_2348810529 = subInt((s_2348810525).length, x_2348810526.a);
    var L_2348810531 = addInt(subInt(subInt((s_2348810525).length, x_2348810526.b), a_2348810529), 1);
    result_2348810527 = nimCopy(null, mnewString(chckRange(L_2348810531, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2348810536 = 0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < L_2348810531)) break Label3;
            i_2348810536 = i_536871058;
            result_2348810527[chckIndx(i_2348810536, 0, (result_2348810527).length - 1)] = s_2348810525[chckIndx(addInt(i_2348810536, a_2348810529), 0, (s_2348810525).length - 1)];
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_2348810527;

}

function HEX2EHEX2E_2348810495(a_2348810498, b_2348810499) {
  var result_2348810502 = ({a: 0, b: 0});

    result_2348810502 = nimCopy(result_2348810502, {a: a_2348810498, b: b_2348810499}, NTI2348810397);

  return result_2348810502;

}

function parseHexVar_2483028016(text_2483028017) {
    var Temporary1;

  var result_2483028018 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2483028017, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2483028019 = Temporary1;
    if (((text_2483028017).length == addInt(6, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHex_2348810482(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(8, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHexAlpha_2348810573(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(3, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1)) || [])), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(4, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 2)) || [])), NTI2365587459);
    result_2483028018.a = (nsuParseHexInt(HEX5BHEX5D_2348810522(text_2483028017, HEX2EHEX2E_2348810495(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2483028017, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2483028018 = nimCopy(result_2483028018, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2365587459);
    break BeforeRet;
  };

  return result_2483028018;

}

function rawGet_2483028233(t_2483028236, key_2483028237, hc_2483028238, hc_2483028238_Idx) {
  var result_2483028239 = 0;

  BeforeRet: {
    hc_2483028238[hc_2483028238_Idx] = hash_1325400491(key_2483028237);
    if ((hc_2483028238[hc_2483028238_Idx] == 0)) {
    hc_2483028238[hc_2483028238_Idx] = 314159265;
    }
    
    if (((t_2483028236.data).length == 0)) {
    result_2483028239 = -1;
    break BeforeRet;
    }
    
    var h_2483028291 = (hc_2483028238[hc_2483028238_Idx] & (t_2483028236.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0)) break Label2;
          if (((t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0 == hc_2483028238[hc_2483028238_Idx]) && eqStrings(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field1, key_2483028237))) {
          result_2483028239 = h_2483028291;
          break BeforeRet;
          }
          
          h_2483028291 = nextTry_1308622883(h_2483028291, (t_2483028236.data).length - 1);
        }
    };
    result_2483028239 = subInt(-1, h_2483028291);
  };

  return result_2483028239;

}

function mustRehash_2483030507(t_2483030509) {
  var result_2483030510 = false;

    if (!((t_2483030509.counter < (t_2483030509.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483030510 = ((mulInt((t_2483030509.data).length, 2) < mulInt(t_2483030509.counter, 3)) || (subInt((t_2483030509.data).length, t_2483030509.counter) < 4));

  return result_2483030510;

}

function rawInsert_2483030956(t_2483030960, data_2483030961, data_2483030961_Idx, key_2483030962, val_2483030963, hc_2483030964, h_2483030965) {
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field1 = nimCopy(null, key_2483030962, NTI33554449);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2 = nimCopy(data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2, val_2483030963, NTI2483027972);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field0 = hc_2483030964;

  
}

function enlarge_2483030662(t_2483030665) {
    var n_2483030668 = [];
    n_2483030668 = new Array(chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647) ; ++i) { n_2483030668[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2483030665.data; t_2483030665.data = n_2483030668; n_2483030668 = Temporary1;    Label2: {
      var i_2483030732 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2483030668).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2483030732 = res_536871064;
            var eh_2483030786 = n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483030786)) {
            var j_2483030790 = (eh_2483030786 & (t_2483030665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483030665.data[chckIndx(j_2483030790, 0, (t_2483030665.data).length - 1)].Field0)) break Label6;
                  j_2483030790 = nextTry_1308622883(j_2483030790, (t_2483030665.data).length - 1);
                }
            };
            rawInsert_2483030956(t_2483030665, t_2483030665, "data", n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field1, n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field2, eh_2483030786, j_2483030790);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483031125(t_2483031128, key_2483031129, hc_2483031130) {
  var result_2483031131 = 0;

  BeforeRet: {
    if (((t_2483031128.data).length == 0)) {
    result_2483031131 = -1;
    break BeforeRet;
    }
    
    var h_2483031182 = (hc_2483031130 & (t_2483031128.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0)) break Label2;
          if (((t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0 == hc_2483031130) && eqStrings(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field1, key_2483031129))) {
          result_2483031131 = h_2483031182;
          break BeforeRet;
          }
          
          h_2483031182 = nextTry_1308622883(h_2483031182, (t_2483031128.data).length - 1);
        }
    };
    result_2483031131 = subInt(-1, h_2483031182);
  };

  return result_2483031131;

}

function HEX5BHEX5DHEX3D_2483030334(t_2483030337, key_2483030338, val_2483030339) {
    if (((t_2483030337.data).length == 0)) {
    var correctSizeHEX60gensym37_2483030388 = slotsNeeded_1308622891(32);
    t_2483030337.counter = 0;
    t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2483030393 = [0];
    var index_2483030400 = rawGet_2483028233(t_2483030337, key_2483030338, hc_2483030393, 0);
    if ((0 <= index_2483030400)) {
    t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2 = nimCopy(t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2, val_2483030339, NTI2483027972);
    }
    else {
      if (((t_2483030337.data).length == 0)) {
      var correctSizeHEX60gensym40_2483030502 = slotsNeeded_1308622891(32);
      t_2483030337.counter = 0;
      t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2483030507(t_2483030337)) {
      enlarge_2483030662(t_2483030337);
      index_2483030400 = rawGetKnownHC_2483031125(t_2483030337, key_2483030338, hc_2483030393[0]);
      }
      
      index_2483030400 = subInt(-1, index_2483030400);
      rawInsert_2483030956(t_2483030337, t_2483030337, "data", key_2483030338, val_2483030339, hc_2483030393[0], index_2483030400);
      t_2483030337.counter = addInt(t_2483030337.counter, 1);
    }
    

  
}

function some_2483028819(val_2483028821) {
  var result_2483028822 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2483028822.has = true;
    result_2483028822.val = nimCopy(result_2483028822.val, val_2483028821, NTI2365587459);

  return result_2483028822;

}

function defaultTheme_2483031631() {
  var result_2483031632 = null;

    result_2483031632 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2483031632.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2483031632.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2483028016([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483030334(result_2483031632.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2483028819(parseHexVar_2483028016([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet284, NTI2483027991), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2483031632;

}

function setTheme_1291850922(self_1291850923, path_1291850924) {
      var Temporary1;

      var oHEX60gensym56_1291850927 = loadFromFile_2483031627(path_1291850924);
      if (!isSome_1291850932(oHEX60gensym56_1291850927)) Temporary1 = false; else {        var theme_1291850978 = get_1291850952(oHEX60gensym56_1291850927);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291850923.theme = theme_1291850978;
    }
    
    requestRender_2315255899(self_1291850923.platform, false);

  
}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function symbolName_1291853836(a_1291853838) {
  var result_1291853839 = [];

    result_1291853839 = nimCopy(null, names_1291853841[chckIndx(subInt(a_1291853838, 0), 0, (names_1291853841).length - 1)], NTI33554449);

  return result_1291853839;

}

function toJson_1291853820(a_1291853822, opt_1291853823) {
    var Temporary1;

  var result_1291853824 = null;

    switch (opt_1291853823.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291853822);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291853836(a_1291853822), opt_1291853823);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291853822, NTI2231369745), opt_1291853823);
      break;
    }
    result_1291853824 = Temporary1;

  return result_1291853824;

}

function none_1291853728() {
  var result_1291853734 = ({val: null});

  return result_1291853734;

}

function some_1291853735(val_1291853737) {
  var result_1291853738 = ({val: null});

    if (!(!((val_1291853737 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291853738.val = val_1291853737;

  return result_1291853738;

}

function getEditor_1291853719() {
  var result_1291853724 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291853724 = nimCopy(result_1291853724, none_1291853728(), NTI1291850254);
    break BeforeRet;
    }
    
    result_1291853724 = nimCopy(result_1291853724, some_1291853735(gEditor), NTI1291850254);
    break BeforeRet;
  };

  return result_1291853724;

}

function isNone_1291853773(self_1291853775) {
  var result_1291853776 = false;

    result_1291853776 = (self_1291853775.val == null);

  return result_1291853776;

}

function get_1291853793(self_1291853795) {
  var result_1291853796 = null;

    if (isNone_1291853773(self_1291853795)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291853796 = self_1291853795["val"];

  return result_1291853796;

}

function getBackendScript_1291853758_1291853766() {
  var result_1291853767 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym119_1291853768 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym119_1291853768)) {
      break BeforeRet;
      }
      
    };
    result_1291853767 = getBackend_1291853763(get_1291853793(rHEX60gensym119_1291853768));
  };

  return result_1291853767;

}

function getBackendApi_1291853818(HEX3Atmp_1291853760) {
  var result_1291853819 = null;

  BeforeRet: {
    result_1291853819 = newJNull_1627390049();
++excHandler;
    try {
    result_1291853819 = toJson_1291853820(getBackendScript_1291853758_1291853766(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym125_1291853917 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291853922 = [mnewString(0)];
    fmtRes_1291853922[0].push.apply(fmtRes_1291853922[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291853922, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym125_1291853917 || [],fmtRes_1291853922[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291853819;

}

function requestRenderScript_1291853925_1291853933(redrawEverything_1291853934) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym131_1291853935 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym131_1291853935)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291853930(get_1291853793(rHEX60gensym131_1291853935), redrawEverything_1291853934);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet285[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet286), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet287[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2650809799(node_2650809802) {
  var result_2650809804 = [false];

    var jsonPath_2650809805 = [[]];
    result_2650809804[0] = false;
    initFromJson_1627395343(result_2650809804, 0, node_2650809802, jsonPath_2650809805, 0);

  return result_2650809804[0];

}

function fromJson_2650809788(a_2650809790, a_2650809790_Idx, b_2650809791, opt_2650809792) {
    if (!(!(HEX3DHEX3D_1627392026(b_2650809791, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2650809791}));
    }
    
    a_2650809790[a_2650809790_Idx] = to_2650809799(b_2650809791);

  
}

function jsonTo_2650809782(b_2650809784, opt_2650809786) {
  var result_2650809787 = [false];

    fromJson_2650809788(result_2650809787, 0, b_2650809784, opt_2650809786);

  return result_2650809787[0];

}

function requestRenderApi_1291853962(HEX3Atmp_1291853927) {
      var Temporary3;

  var result_1291853963 = null;

    result_1291853963 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291853927))) {
      Temporary3 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291853927, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291853925_1291853933(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym136_1291853969 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291853974 = [mnewString(0)];
    fmtRes_1291853974[0].push.apply(fmtRes_1291853974[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291853974, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym136_1291853969 || [],fmtRes_1291853974[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291853963;

}

function setHandleInputsScript_1291853977_1291853986(context_1291853987, value_1291853988) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym142_1291853989 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym142_1291853989)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291853982(get_1291853793(rHEX60gensym142_1291853989), context_1291853987, value_1291853988);
  };

  
}

function setHandleInputsApi_1291854017(HEX3Atmp_1291853979) {
  var result_1291854018 = null;

    result_1291854018 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291853977_1291853986(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291853979, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291853979, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym147_1291854029 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291854034 = [mnewString(0)];
    fmtRes_1291854034[0].push.apply(fmtRes_1291854034[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854034, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym147_1291854029 || [],fmtRes_1291854034[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854018;

}

function setHandleActionsScript_1291854037_1291854046(context_1291854047, value_1291854048) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym152_1291854049 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym152_1291854049)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291854042(get_1291853793(rHEX60gensym152_1291854049), context_1291854047, value_1291854048);
  };

  
}

function setHandleActionsApi_1291854077(HEX3Atmp_1291854039) {
  var result_1291854078 = null;

    result_1291854078 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291854037_1291854046(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854039, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291854039, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym157_1291854089 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291854094 = [mnewString(0)];
    fmtRes_1291854094[0].push.apply(fmtRes_1291854094[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854094, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym157_1291854089 || [],fmtRes_1291854094[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854078;

}

function setConsumeAllActionsScript_1291854097_1291854106(context_1291854107, value_1291854108) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym162_1291854109 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym162_1291854109)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291854102(get_1291853793(rHEX60gensym162_1291854109), context_1291854107, value_1291854108);
  };

  
}

function setConsumeAllActionsApi_1291854137(HEX3Atmp_1291854099) {
  var result_1291854138 = null;

    result_1291854138 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291854097_1291854106(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854099, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291854099, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym167_1291854149 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291854154 = [mnewString(0)];
    fmtRes_1291854154[0].push.apply(fmtRes_1291854154[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854154, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym167_1291854149 || [],fmtRes_1291854154[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854138;

}

function setConsumeAllInputScript_1291854157_1291854166(context_1291854167, value_1291854168) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym172_1291854169 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym172_1291854169)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291854162(get_1291853793(rHEX60gensym172_1291854169), context_1291854167, value_1291854168);
  };

  
}

function setConsumeAllInputApi_1291854197(HEX3Atmp_1291854159) {
  var result_1291854198 = null;

    result_1291854198 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291854157_1291854166(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854159, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291854159, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym177_1291854209 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291854214 = [mnewString(0)];
    fmtRes_1291854214[0].push.apply(fmtRes_1291854214[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854214, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym177_1291854209 || [],fmtRes_1291854214[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854198;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2650813668(a_2650813670, opt_2650813671) {
  var result_2650813672 = null;

    result_2650813672 = HEX25_1627391795(a_2650813670);

  return result_2650813672;

}

function getFlagScript2_1291854217_1291854236(flag_1291854237, default_1291854238) {
  var result_1291854239 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym182_1291854240 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym182_1291854240)) {
      break BeforeRet;
      }
      
    };
    result_1291854239 = getFlag_1291848862(get_1291853793(rHEX60gensym182_1291854240), flag_1291854237, default_1291854238);
  };

  return result_1291854239;

}

function getFlagApi2_1291854269(HEX3Atmp_1291854219) {
      var Temporary4;

  var result_1291854270 = null;

  BeforeRet: {
    result_1291854270 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291854219))) {
      Temporary4 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291854219, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291854270 = toJson_2650813668(getFlagScript2_1291854217_1291854236(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854219, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym188_1291854285 = [103,101,116,70,108,97,103];
    var fmtRes_1291854290 = [mnewString(0)];
    fmtRes_1291854290[0].push.apply(fmtRes_1291854290[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854290, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym188_1291854285 || [],fmtRes_1291854290[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854270;

}

function setFlagScript2_1291854294_1291854358(flag_1291854359, value_1291854360) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym194_1291854361 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym194_1291854361)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848939(get_1291853793(rHEX60gensym194_1291854361), flag_1291854359, value_1291854360);
  };

  
}

function setFlagApi2_1291854389(HEX3Atmp_1291854296) {
  var result_1291854390 = null;

    result_1291854390 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291854294_1291854358(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854296, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291854296, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym199_1291854401 = [115,101,116,70,108,97,103];
    var fmtRes_1291854406 = [mnewString(0)];
    fmtRes_1291854406[0].push.apply(fmtRes_1291854406[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854406, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym199_1291854401 || [],fmtRes_1291854406[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854390;

}

function toggleFlagScript_1291854415_1291854423(flag_1291854424) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym208_1291854425 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym208_1291854425)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848943(get_1291853793(rHEX60gensym208_1291854425), flag_1291854424);
  };

  
}

function toggleFlagApi_1291854452(HEX3Atmp_1291854417) {
  var result_1291854453 = null;

    result_1291854453 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291854415_1291854423(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854417, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym213_1291854459 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291854464 = [mnewString(0)];
    fmtRes_1291854464[0].push.apply(fmtRes_1291854464[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854464, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym213_1291854459 || [],fmtRes_1291854464[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854453;

}

function setOptionScript_1291854467_1291854515(option_1291854516, value_1291854517) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym218_1291854518 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym218_1291854518)) {
      break BeforeRet;
      }
      
    };
    setOption_1291854472(get_1291853793(rHEX60gensym218_1291854518), option_1291854516, value_1291854517);
  };

  
}

function setOptionApi_1291854546(HEX3Atmp_1291854469) {
  var result_1291854547 = null;

    result_1291854547 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291854467_1291854515(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854469, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291854469, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym223_1291854553 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291854558 = [mnewString(0)];
    fmtRes_1291854558[0].push.apply(fmtRes_1291854558[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854558, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym223_1291854553 || [],fmtRes_1291854558[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854547;

}

function quitScript_1291854566_1291854573() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym231_1291854574 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym231_1291854574)) {
      break BeforeRet;
      }
      
    };
    quit_1291854571(get_1291853793(rHEX60gensym231_1291854574));
  };

  
}

function quitApi_1291854600(HEX3Atmp_1291854568) {
  var result_1291854601 = null;

    result_1291854601 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291854566_1291854573();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym236_1291854602 = [113,117,105,116];
    var fmtRes_1291854607 = [mnewString(0)];
    fmtRes_1291854607[0].push.apply(fmtRes_1291854607[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854607, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym236_1291854602 || [],fmtRes_1291854607[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854601;

}

function changeFontSizeScript_1291854610_1291854618(amount_1291854619) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym240_1291854620 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym240_1291854620)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291854615(get_1291853793(rHEX60gensym240_1291854620), amount_1291854619);
  };

  
}

function initFromJson_2650811155(dst_2650811157, dst_2650811157_Idx, jsonNode_2650811158, jsonPath_2650811159, jsonPath_2650811159_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2650811158.kind == 4)) {
    var Temporary1 = jsonNode_2650811158;
    if (ConstSet288[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2650811164 = NaN;
      dst_2650811157[dst_2650811157_Idx] = b_2650811164;
      break;
    case "inf":
      var b_2650811165 = Infinity;
      dst_2650811157[dst_2650811157_Idx] = b_2650811165;
      break;
    case "-inf":
      var b_2650811166 = -Infinity;
      dst_2650811157[dst_2650811157_Idx] = b_2650811166;
      break;
    default: 
      var Temporary2 = jsonNode_2650811158;
      if (ConstSet289[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2650811158, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2650811159[jsonPath_2650811159_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet290[jsonNode_2650811158.kind] != undefined))) {
      var msgHEX60gensym375_2650811180 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet291), nimCopy(null, jsonPath_2650811159[jsonPath_2650811159_Idx], NTI33554449), reprEnum(jsonNode_2650811158.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym375_2650811180, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2650811158.kind == 3)) {
      var Temporary3 = jsonNode_2650811158;
      if (ConstSet292[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2650811157[dst_2650811157_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2650811158;
        if (ConstSet293[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2650811157[dst_2650811157_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2650811144(node_2650811147) {
  var result_2650811149 = [0.0];

    var jsonPath_2650811150 = [[]];
    result_2650811149[0] = 0.0;
    initFromJson_2650811155(result_2650811149, 0, node_2650811147, jsonPath_2650811150, 0);

  return result_2650811149[0];

}

function fromJson_2650811129(a_2650811131, a_2650811131_Idx, b_2650811132, opt_2650811133) {
    if (!(!(HEX3DHEX3D_1627392026(b_2650811132, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2650811132}));
    }
    
    a_2650811131[a_2650811131_Idx] = to_2650811144(b_2650811132);

  
}

function jsonTo_2650811123(b_2650811125, opt_2650811127) {
  var result_2650811128 = [0.0];

    fromJson_2650811129(result_2650811128, 0, b_2650811125, opt_2650811127);

  return result_2650811128[0];

}

function changeFontSizeApi_1291854647(HEX3Atmp_1291854612) {
  var result_1291854648 = null;

    result_1291854648 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291854610_1291854618(jsonTo_2650811123(HEX5BHEX5D_1627393116(HEX3Atmp_1291854612, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym245_1291854654 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291854659 = [mnewString(0)];
    fmtRes_1291854659[0].push.apply(fmtRes_1291854659[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854659, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym245_1291854654 || [],fmtRes_1291854659[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854648;

}

function changeLayoutPropScript_1291854662_1291854920(prop_1291854921, change_1291854922) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym250_1291854923 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym250_1291854923)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291854667(get_1291853793(rHEX60gensym250_1291854923), prop_1291854921, change_1291854922);
  };

  
}

function changeLayoutPropApi_1291854951(HEX3Atmp_1291854664) {
  var result_1291854952 = null;

    result_1291854952 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291854662_1291854920(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854664, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650811123(HEX5BHEX5D_1627393116(HEX3Atmp_1291854664, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym255_1291854963 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291854968 = [mnewString(0)];
    fmtRes_1291854968[0].push.apply(fmtRes_1291854968[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854968, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym255_1291854963 || [],fmtRes_1291854968[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854952;

}

function toggleStatusBarLocationScript_1291854978_1291854985() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym264_1291854986 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym264_1291854986)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291854983(get_1291853793(rHEX60gensym264_1291854986));
  };

  
}

function toggleStatusBarLocationApi_1291855012(HEX3Atmp_1291854980) {
  var result_1291855013 = null;

    result_1291855013 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291854978_1291854985();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym269_1291855014 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291855019 = [mnewString(0)];
    fmtRes_1291855019[0].push.apply(fmtRes_1291855019[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855019, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym269_1291855014 || [],fmtRes_1291855019[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855013;

}

function createViewScript_1291855022_1291855033() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym272_1291855034 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym272_1291855034)) {
      break BeforeRet;
      }
      
    };
    createView_1291855027(get_1291853793(rHEX60gensym272_1291855034));
  };

  
}

function createViewApi_1291855060(HEX3Atmp_1291855024) {
  var result_1291855061 = null;

    result_1291855061 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291855022_1291855033();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym277_1291855062 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291855067 = [mnewString(0)];
    fmtRes_1291855067[0].push.apply(fmtRes_1291855067[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855067, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym277_1291855062 || [],fmtRes_1291855067[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855061;

}

function closeCurrentViewScript_1291855075_1291855112() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym280_1291855113 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym280_1291855113)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291855080(get_1291853793(rHEX60gensym280_1291855113));
  };

  
}

function closeCurrentViewApi_1291855139(HEX3Atmp_1291855077) {
  var result_1291855140 = null;

    result_1291855140 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291855075_1291855112();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym285_1291855141 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291855146 = [mnewString(0)];
    fmtRes_1291855146[0].push.apply(fmtRes_1291855146[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855146, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym285_1291855141 || [],fmtRes_1291855146[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855140;

}

function moveCurrentViewToTopScript_1291855154_1291855197() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym290_1291855198 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym290_1291855198)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291855159(get_1291853793(rHEX60gensym290_1291855198));
  };

  
}

function moveCurrentViewToTopApi_1291855224(HEX3Atmp_1291855156) {
  var result_1291855225 = null;

    result_1291855225 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291855154_1291855197();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym295_1291855226 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291855231 = [mnewString(0)];
    fmtRes_1291855231[0].push.apply(fmtRes_1291855231[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855231, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym295_1291855226 || [],fmtRes_1291855231[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855225;

}

function nextViewScript_1291855235_1291855248() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym301_1291855249 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym301_1291855249)) {
      break BeforeRet;
      }
      
    };
    nextView_1291855240(get_1291853793(rHEX60gensym301_1291855249));
  };

  
}

function nextViewApi_1291855275(HEX3Atmp_1291855237) {
  var result_1291855276 = null;

    result_1291855276 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291855235_1291855248();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym306_1291855277 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291855282 = [mnewString(0)];
    fmtRes_1291855282[0].push.apply(fmtRes_1291855282[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855282, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym306_1291855277 || [],fmtRes_1291855282[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855276;

}

function prevViewScript_1291855285_1291855301() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym309_1291855302 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym309_1291855302)) {
      break BeforeRet;
      }
      
    };
    prevView_1291855290(get_1291853793(rHEX60gensym309_1291855302));
  };

  
}

function prevViewApi_1291855328(HEX3Atmp_1291855287) {
  var result_1291855329 = null;

    result_1291855329 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291855285_1291855301();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym314_1291855330 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291855335 = [mnewString(0)];
    fmtRes_1291855335[0].push.apply(fmtRes_1291855335[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855335, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym314_1291855330 || [],fmtRes_1291855335[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855329;

}

function moveCurrentViewPrevScript_1291855338_1291855368() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_1291855369 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym317_1291855369)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291855343(get_1291853793(rHEX60gensym317_1291855369));
  };

  
}

function moveCurrentViewPrevApi_1291855395(HEX3Atmp_1291855340) {
  var result_1291855396 = null;

    result_1291855396 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291855338_1291855368();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym322_1291855397 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291855402 = [mnewString(0)];
    fmtRes_1291855402[0].push.apply(fmtRes_1291855402[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855402, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym322_1291855397 || [],fmtRes_1291855402[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855396;

}

function moveCurrentViewNextScript_1291855405_1291855432() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym326_1291855433 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym326_1291855433)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291855410(get_1291853793(rHEX60gensym326_1291855433));
  };

  
}

function moveCurrentViewNextApi_1291855459(HEX3Atmp_1291855407) {
  var result_1291855460 = null;

    result_1291855460 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291855405_1291855432();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym331_1291855461 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291855466 = [mnewString(0)];
    fmtRes_1291855466[0].push.apply(fmtRes_1291855466[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855466, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym331_1291855461 || [],fmtRes_1291855466[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855460;

}

function setLayoutScript_1291855469_1291855513(layout_1291855514) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym336_1291855515 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym336_1291855515)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291855474(get_1291853793(rHEX60gensym336_1291855515), layout_1291855514);
  };

  
}

function setLayoutApi_1291855542(HEX3Atmp_1291855471) {
  var result_1291855543 = null;

    result_1291855543 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291855469_1291855513(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855471, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym341_1291855549 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291855554 = [mnewString(0)];
    fmtRes_1291855554[0].push.apply(fmtRes_1291855554[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855554, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym341_1291855549 || [],fmtRes_1291855554[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855543;

}

function commandLineScript_1291855557_1291855569(initialValue_1291855570) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym345_1291855571 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym345_1291855571)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291855562(get_1291853793(rHEX60gensym345_1291855571), initialValue_1291855570);
  };

  
}

function commandLineApi_1291855598(HEX3Atmp_1291855559) {
      var Temporary3;

  var result_1291855599 = null;

    result_1291855599 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855559))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855559, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291855557_1291855569(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym350_1291855605 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855610 = [mnewString(0)];
    fmtRes_1291855610[0].push.apply(fmtRes_1291855610[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855610, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym350_1291855605 || [],fmtRes_1291855610[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855599;

}

function exitCommandLineScript_1291855613_1291855624() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym354_1291855625 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym354_1291855625)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291855618(get_1291853793(rHEX60gensym354_1291855625));
  };

  
}

function exitCommandLineApi_1291855651(HEX3Atmp_1291855615) {
  var result_1291855652 = null;

    result_1291855652 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291855613_1291855624();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym359_1291855653 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855658 = [mnewString(0)];
    fmtRes_1291855658[0].push.apply(fmtRes_1291855658[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855658, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym359_1291855653 || [],fmtRes_1291855658[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855652;

}

function executeCommandLineScript_1291855661_1291855675() {
  var result_1291855676 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym362_1291855677 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym362_1291855677)) {
      break BeforeRet;
      }
      
    };
    result_1291855676 = executeCommandLine_1291855666(get_1291853793(rHEX60gensym362_1291855677));
  };

  return result_1291855676;

}

function executeCommandLineApi_1291855704(HEX3Atmp_1291855663) {
  var result_1291855705 = null;

  BeforeRet: {
    result_1291855705 = newJNull_1627390049();
++excHandler;
    try {
    result_1291855705 = toJson_2650813668(executeCommandLineScript_1291855661_1291855675(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym368_1291855710 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855715 = [mnewString(0)];
    fmtRes_1291855715[0].push.apply(fmtRes_1291855715[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855715, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym368_1291855710 || [],fmtRes_1291855715[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855705;

}

function openFileScript_1291855727_1291855773(path_1291855774) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym372_1291855775 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym372_1291855775)) {
      break BeforeRet;
      }
      
    };
    openFile_1291855732(get_1291853793(rHEX60gensym372_1291855775), path_1291855774);
  };

  
}

function openFileApi_1291855802(HEX3Atmp_1291855729) {
  var result_1291855803 = null;

    result_1291855803 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openFileScript_1291855727_1291855773(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855729, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym377_1291855809 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291855814 = [mnewString(0)];
    fmtRes_1291855814[0].push.apply(fmtRes_1291855814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym377_1291855809 || [],fmtRes_1291855814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855803;

}

function writeFileScript_1291855878_1291855898(path_1291855899) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_1291855900 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym382_1291855900)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291855883(get_1291853793(rHEX60gensym382_1291855900), path_1291855899);
  };

  
}

function writeFileApi_1291855927(HEX3Atmp_1291855880) {
      var Temporary3;

  var result_1291855928 = null;

    result_1291855928 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855880))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855880, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    writeFileScript_1291855878_1291855898(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_1291855934 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291855939 = [mnewString(0)];
    fmtRes_1291855939[0].push.apply(fmtRes_1291855939[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855939, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_1291855934 || [],fmtRes_1291855939[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855928;

}

function loadFileScript_1291855942_1291855962(path_1291855963) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym395_1291855964 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym395_1291855964)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291855947(get_1291853793(rHEX60gensym395_1291855964), path_1291855963);
  };

  
}

function loadFileApi_1291855991(HEX3Atmp_1291855944) {
      var Temporary3;

  var result_1291855992 = null;

    result_1291855992 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855944))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855944, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291855942_1291855962(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym400_1291855998 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291856003 = [mnewString(0)];
    fmtRes_1291856003[0].push.apply(fmtRes_1291856003[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856003, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym400_1291855998 || [],fmtRes_1291856003[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855992;

}

function loadThemeScript_1291856006_1291856050(name_1291856051) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym408_1291856052 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym408_1291856052)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291856011(get_1291853793(rHEX60gensym408_1291856052), name_1291856051);
  };

  
}

function loadThemeApi_1291856079(HEX3Atmp_1291856008) {
  var result_1291856080 = null;

    result_1291856080 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291856006_1291856050(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856008, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym413_1291856086 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291856091 = [mnewString(0)];
    fmtRes_1291856091[0].push.apply(fmtRes_1291856091[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856091, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym413_1291856086 || [],fmtRes_1291856091[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856080;

}

function chooseThemeScript_1291856094_1291856379() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym419_1291856380 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym419_1291856380)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291856099(get_1291853793(rHEX60gensym419_1291856380));
  };

  
}

function chooseThemeApi_1291856406(HEX3Atmp_1291856096) {
  var result_1291856407 = null;

    result_1291856407 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291856094_1291856379();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym424_1291856408 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291856413 = [mnewString(0)];
    fmtRes_1291856413[0].push.apply(fmtRes_1291856413[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856413, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym424_1291856408 || [],fmtRes_1291856413[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856407;

}

function chooseFileScript_1291856549_1291856637(view_1291856638) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym434_1291856639 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym434_1291856639)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291856554(get_1291853793(rHEX60gensym434_1291856639), view_1291856638);
  };

  
}

function chooseFileApi_1291856666(HEX3Atmp_1291856551) {
      var Temporary3;

  var result_1291856667 = null;

    result_1291856667 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856551))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856551, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291856549_1291856637(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym439_1291856673 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291856678 = [mnewString(0)];
    fmtRes_1291856678[0].push.apply(fmtRes_1291856678[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856678, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym439_1291856673 || [],fmtRes_1291856678[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856667;

}

function reloadConfigScript_1291856709_1291856729() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym445_1291856730 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym445_1291856730)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291856714(get_1291853793(rHEX60gensym445_1291856730));
  };

  
}

function reloadConfigApi_1291856756(HEX3Atmp_1291856711) {
  var result_1291856757 = null;

    result_1291856757 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291856709_1291856729();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_1291856758 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291856763 = [mnewString(0)];
    fmtRes_1291856763[0].push.apply(fmtRes_1291856763[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856763, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_1291856758 || [],fmtRes_1291856763[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856757;

}

function logOptionsScript_1291856766_1291856773() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym455_1291856774 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym455_1291856774)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291856771(get_1291853793(rHEX60gensym455_1291856774));
  };

  
}

function logOptionsApi_1291856800(HEX3Atmp_1291856768) {
  var result_1291856801 = null;

    result_1291856801 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291856766_1291856773();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym460_1291856802 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291856807 = [mnewString(0)];
    fmtRes_1291856807[0].push.apply(fmtRes_1291856807[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856807, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym460_1291856802 || [],fmtRes_1291856807[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856801;

}

function clearCommandsScript_1291856820_1291856828(context_1291856829) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym464_1291856830 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym464_1291856830)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291856825(get_1291853793(rHEX60gensym464_1291856830), context_1291856829);
  };

  
}

function clearCommandsApi_1291856857(HEX3Atmp_1291856822) {
  var result_1291856858 = null;

    result_1291856858 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291856820_1291856828(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856822, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym469_1291856864 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291856869 = [mnewString(0)];
    fmtRes_1291856869[0].push.apply(fmtRes_1291856869[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856869, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym469_1291856864 || [],fmtRes_1291856869[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856858;

}

function toJson_2650809858(a_2650809860, opt_2650809861) {
  var result_2650809862 = null;

    result_2650809862 = HEX25_1627391779(a_2650809860);

  return result_2650809862;

}

function toJson_1291857140(a_1291857142, opt_1291857143) {
  var result_1291857144 = null;

    result_1291857144 = newJArray_1627390082();
    Label1: {
      var ai_1291857151 = 0;
      var i_536871133 = 0;
      var L_536871134 = (a_1291857142).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871133 < L_536871134)) break Label3;
            ai_1291857151 = a_1291857142[chckIndx(i_536871133, 0, (a_1291857142).length - 1)];
            add_1627390190(result_1291857144, toJson_2650809858(ai_1291857151, opt_1291857143));
            i_536871133 = addInt(i_536871133, 1);
            if (!(((a_1291857142).length == L_536871134))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291857144;

}

function getAllEditorsScript_1291856876_1291857109() {
  var result_1291857110 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym472_1291857111 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym472_1291857111)) {
      break BeforeRet;
      }
      
    };
    result_1291857110 = nimCopy(null, getAllEditors_1291856881(get_1291853793(rHEX60gensym472_1291857111)), NTI1291852913);
  };

  return result_1291857110;

}

function getAllEditorsApi_1291857138(HEX3Atmp_1291856878) {
  var result_1291857139 = null;

  BeforeRet: {
    result_1291857139 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857139 = toJson_1291857140(getAllEditorsScript_1291856876_1291857109(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym478_1291857156 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291857161 = [mnewString(0)];
    fmtRes_1291857161[0].push.apply(fmtRes_1291857161[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857161, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym478_1291857156 || [],fmtRes_1291857161[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857139;

}

function setModeScript22_1291857179_1291857219(mode_1291857220) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym484_1291857221 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym484_1291857221)) {
      break BeforeRet;
      }
      
    };
    setMode_1291857184(get_1291853793(rHEX60gensym484_1291857221), mode_1291857220);
  };

  
}

function setModeApi22_1291857248(HEX3Atmp_1291857181) {
  var result_1291857249 = null;

    result_1291857249 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291857179_1291857219(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857181, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym489_1291857255 = [115,101,116,77,111,100,101];
    var fmtRes_1291857260 = [mnewString(0)];
    fmtRes_1291857260[0].push.apply(fmtRes_1291857260[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857260, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym489_1291857255 || [],fmtRes_1291857260[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857249;

}

function modeScript22_1291857264_1291857272() {
  var result_1291857273 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857274 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym495_1291857274)) {
      break BeforeRet;
      }
      
    };
    result_1291857273 = nimCopy(null, mode_1291857269(get_1291853793(rHEX60gensym495_1291857274)), NTI33554449);
  };

  return result_1291857273;

}

function modeApi22_1291857301(HEX3Atmp_1291857266) {
  var result_1291857302 = null;

  BeforeRet: {
    result_1291857302 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857302 = toJson_1811939932(modeScript22_1291857264_1291857272(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym501_1291857307 = [109,111,100,101];
    var fmtRes_1291857312 = [mnewString(0)];
    fmtRes_1291857312[0].push.apply(fmtRes_1291857312[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857312, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym501_1291857307 || [],fmtRes_1291857312[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857302;

}

function getContextWithModeScript22_1291857315_1291857324(context_1291857325) {
  var result_1291857326 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym505_1291857327 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym505_1291857327)) {
      break BeforeRet;
      }
      
    };
    result_1291857326 = nimCopy(null, getContextWithMode_1291857320(get_1291853793(rHEX60gensym505_1291857327), context_1291857325), NTI33554449);
  };

  return result_1291857326;

}

function getContextWithModeApi22_1291857355(HEX3Atmp_1291857317) {
  var result_1291857356 = null;

  BeforeRet: {
    result_1291857356 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291857356 = toJson_1811939932(getContextWithModeScript22_1291857315_1291857324(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857317, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_1291857366 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291857371 = [mnewString(0)];
    fmtRes_1291857371[0].push.apply(fmtRes_1291857371[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857371, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_1291857366 || [],fmtRes_1291857371[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857356;

}

function scriptRunActionScript_1291857592_1291857602(action_1291857603, arg_1291857604) {
    scriptRunAction_1291857596(action_1291857603, arg_1291857604);

  
}

function scriptRunActionApi_1291857609(HEX3Atmp_1291857594) {
  var result_1291857610 = null;

    result_1291857610 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291857592_1291857602(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857594, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857594, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym526_1291857621 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291857626 = [mnewString(0)];
    fmtRes_1291857626[0].push.apply(fmtRes_1291857626[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857626, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym526_1291857621 || [],fmtRes_1291857626[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857610;

}

function scriptLogScript_1291857629_1291857640(message_1291857641) {
    scriptLog_1291857633(message_1291857641);

  
}

function scriptLogApi_1291857645(HEX3Atmp_1291857631) {
  var result_1291857646 = null;

    result_1291857646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291857629_1291857640(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857631, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym533_1291857652 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291857657 = [mnewString(0)];
    fmtRes_1291857657[0].push.apply(fmtRes_1291857657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym533_1291857652 || [],fmtRes_1291857657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857646;

}

function addCommandScriptScript_1291857660_1291857672(context_1291857673, keys_1291857674, action_1291857675, arg_1291857676) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym541_1291857677 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym541_1291857677)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291857665(get_1291853793(rHEX60gensym541_1291857677), context_1291857673, keys_1291857674, action_1291857675, arg_1291857676);
  };

  
}

function addCommandScriptApi_1291857707(HEX3Atmp_1291857662) {
      var Temporary6;

  var result_1291857708 = null;

    result_1291857708 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291857662))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857662, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291857660_1291857672(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857662, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857662, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857662, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym546_1291857729 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291857734 = [mnewString(0)];
    fmtRes_1291857734[0].push.apply(fmtRes_1291857734[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857734, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym546_1291857729 || [],fmtRes_1291857734[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857708;

}

function removeCommandScript_1291857743_1291857752(context_1291857753, keys_1291857754) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym552_1291857755 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym552_1291857755)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291857748(get_1291853793(rHEX60gensym552_1291857755), context_1291857753, keys_1291857754);
  };

  
}

function removeCommandApi_1291857783(HEX3Atmp_1291857745) {
  var result_1291857784 = null;

    result_1291857784 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291857743_1291857752(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857745, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857745, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym557_1291857795 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291857800 = [mnewString(0)];
    fmtRes_1291857800[0].push.apply(fmtRes_1291857800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym557_1291857795 || [],fmtRes_1291857800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857784;

}

function getActivePopupScript_1291857805_1291857823() {
  var result_1291857824 = 0;

    result_1291857824 = getActivePopup_1291857809();

  return result_1291857824;

}

function getActivePopupApi_1291857828(HEX3Atmp_1291857807) {
  var result_1291857829 = null;

  BeforeRet: {
    result_1291857829 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857829 = toJson_2650809858(getActivePopupScript_1291857805_1291857823(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym564_1291857834 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291857839 = [mnewString(0)];
    fmtRes_1291857839[0].push.apply(fmtRes_1291857839[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857839, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym564_1291857834 || [],fmtRes_1291857839[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857829;

}

function getActiveEditorScript_1291857842_1291857854() {
  var result_1291857855 = 0;

    result_1291857855 = getActiveEditor_1291857846();

  return result_1291857855;

}

function getActiveEditorApi_1291857859(HEX3Atmp_1291857844) {
  var result_1291857860 = null;

  BeforeRet: {
    result_1291857860 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857860 = toJson_2650809858(getActiveEditorScript_1291857842_1291857854(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_1291857865 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291857870 = [mnewString(0)];
    fmtRes_1291857870[0].push.apply(fmtRes_1291857870[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857870, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_1291857865 || [],fmtRes_1291857870[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857860;

}

function loadCurrentConfigScript_1291857916_1291857927() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym584_1291857928 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym584_1291857928)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291857921(get_1291853793(rHEX60gensym584_1291857928));
  };

  
}

function loadCurrentConfigApi_1291857954(HEX3Atmp_1291857918) {
  var result_1291857955 = null;

    result_1291857955 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291857916_1291857927();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym589_1291857956 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291857961 = [mnewString(0)];
    fmtRes_1291857961[0].push.apply(fmtRes_1291857961[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857961, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym589_1291857956 || [],fmtRes_1291857961[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857955;

}

function sourceCurrentDocumentScript_1291857964_1291857982() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_1291857983 = getEditor_1291853719();
      if (isNone_1291853773(rHEX60gensym592_1291857983)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291857969(get_1291853793(rHEX60gensym592_1291857983));
  };

  
}

function sourceCurrentDocumentApi_1291858009(HEX3Atmp_1291857966) {
  var result_1291858010 = null;

    result_1291858010 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291857964_1291857982();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_1291858011 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291858016 = [mnewString(0)];
    fmtRes_1291858016[0].push.apply(fmtRes_1291858016[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858016, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_1291858011 || [],fmtRes_1291858016[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858010;

}

function getEditorScript_1291858019_1291858032(index_1291858033) {
  var result_1291858034 = 0;

    result_1291858034 = getEditor_1291858023(index_1291858033);

  return result_1291858034;

}

function getEditorApi_1291858039(HEX3Atmp_1291858021) {
  var result_1291858040 = null;

  BeforeRet: {
    result_1291858040 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858040 = toJson_2650809858(getEditorScript_1291858019_1291858032(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858021, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym605_1291858050 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291858055 = [mnewString(0)];
    fmtRes_1291858055[0].push.apply(fmtRes_1291858055[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858055, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym605_1291858050 || [],fmtRes_1291858055[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858040;

}

function scriptIsTextEditorScript_1291858058_1291858100(editorId_1291858101) {
  var result_1291858102 = false;

    result_1291858102 = scriptIsTextEditor_1291858062(editorId_1291858101);

  return result_1291858102;

}

function scriptIsTextEditorApi_1291858107(HEX3Atmp_1291858060) {
  var result_1291858108 = null;

  BeforeRet: {
    result_1291858108 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858108 = toJson_2650813668(scriptIsTextEditorScript_1291858058_1291858100(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858060, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym614_1291858118 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291858123 = [mnewString(0)];
    fmtRes_1291858123[0].push.apply(fmtRes_1291858123[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858123, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym614_1291858118 || [],fmtRes_1291858123[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858108;

}

function scriptIsAstEditorScript_1291858127_1291858169(editorId_1291858170) {
  var result_1291858171 = false;

    result_1291858171 = scriptIsAstEditor_1291858131(editorId_1291858170);

  return result_1291858171;

}

function scriptIsAstEditorApi_1291858176(HEX3Atmp_1291858129) {
  var result_1291858177 = null;

  BeforeRet: {
    result_1291858177 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858177 = toJson_2650813668(scriptIsAstEditorScript_1291858127_1291858169(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858129, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym623_1291858187 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291858192 = [mnewString(0)];
    fmtRes_1291858192[0].push.apply(fmtRes_1291858192[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858192, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym623_1291858187 || [],fmtRes_1291858192[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858177;

}

function scriptRunActionForScript_1291858195_1291858262(editorId_1291858263, action_1291858264, arg_1291858265) {
    scriptRunActionFor_1291858199(editorId_1291858263, action_1291858264, arg_1291858265);

  
}

function scriptRunActionForApi_1291858271(HEX3Atmp_1291858197) {
  var result_1291858272 = null;

    result_1291858272 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291858195_1291858262(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858197, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858197, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858197, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym633_1291858288 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291858293 = [mnewString(0)];
    fmtRes_1291858293[0].push.apply(fmtRes_1291858293[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858293, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym633_1291858288 || [],fmtRes_1291858293[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858272;

}

function scriptInsertTextIntoScript_1291858296_1291858334(editorId_1291858335, text_1291858336) {
    scriptInsertTextInto_1291858300(editorId_1291858335, text_1291858336);

  
}

function scriptInsertTextIntoApi_1291858341(HEX3Atmp_1291858298) {
  var result_1291858342 = null;

    result_1291858342 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291858296_1291858334(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858298, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858298, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym643_1291858353 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291858358 = [mnewString(0)];
    fmtRes_1291858358[0].push.apply(fmtRes_1291858358[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858358, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym643_1291858353 || [],fmtRes_1291858358[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858342;

}

function toJson_2650809845(a_2650809847, opt_2650809848) {
  var result_2650809849 = null;

    result_2650809849 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2650809849, [108,105,110,101], toJson_2650809858(a_2650809847["Field0"], opt_2650809848));
    HEX5BHEX5DHEX3D_1627391903(result_2650809849, [99,111,108,117,109,110], toJson_2650809858(a_2650809847["Field1"], opt_2650809848));

  return result_2650809849;

}

function toJson_2650809832(a_2650809834, opt_2650809835) {
  var result_2650809836 = null;

    result_2650809836 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2650809836, [102,105,114,115,116], toJson_2650809845(a_2650809834["Field0"], opt_2650809835));
    HEX5BHEX5DHEX3D_1627391903(result_2650809836, [108,97,115,116], toJson_2650809845(a_2650809834["Field1"], opt_2650809835));

  return result_2650809836;

}

function scriptTextEditorSelectionScript_1291858361_1291858404(editorId_1291858405) {
  var result_1291858406 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291858406 = nimCopy(result_1291858406, scriptTextEditorSelection_1291858365(editorId_1291858405), NTI2231369739);

  return result_1291858406;

}

function scriptTextEditorSelectionApi_1291858411(HEX3Atmp_1291858363) {
  var result_1291858412 = null;

  BeforeRet: {
    result_1291858412 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858412 = toJson_2650809832(scriptTextEditorSelectionScript_1291858361_1291858404(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858363, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym652_1291858422 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291858427 = [mnewString(0)];
    fmtRes_1291858427[0].push.apply(fmtRes_1291858427[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858427, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym652_1291858422 || [],fmtRes_1291858427[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858412;

}

function scriptSetTextEditorSelectionScript_1291858434_1291858476(editorId_1291858477, selection_1291858478) {
    scriptSetTextEditorSelection_1291858438(editorId_1291858477, selection_1291858478);

  
}

function fromJson_2650809643(a_2650809645, b_2650809646, opt_2650809647) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2650809646, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2650809646}));
    }
    
    if (!((b_2650809646.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2650809646.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2650809673 = 0;
    var numMatchedHEX60gensym25_2650809674 = 0;
    numHEX60gensym25_2650809673 = addInt(numHEX60gensym25_2650809673, 1);
    if (hasKey_1627393154(b_2650809646, [108,105,110,101])) {
    numMatchedHEX60gensym25_2650809674 = addInt(numMatchedHEX60gensym25_2650809674, 1);
    fromJson_2650808746(a_2650809645, "Field0", HEX5BHEX5D_1627393037(b_2650809646, [108,105,110,101]), opt_2650809647);
    }
    else {
    if (opt_2650809647.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2650809646, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2650809673 = addInt(numHEX60gensym25_2650809673, 1);
    if (hasKey_1627393154(b_2650809646, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2650809674 = addInt(numMatchedHEX60gensym25_2650809674, 1);
    fromJson_2650808746(a_2650809645, "Field1", HEX5BHEX5D_1627393037(b_2650809646, [99,111,108,117,109,110]), opt_2650809647);
    }
    else {
    if (opt_2650809647.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2650809646, 2)]));
      }
      
    }
    }
    if ((opt_2650809647.allowExtraKeys && opt_2650809647.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2650809647.allowExtraKeys) {
    if (!((numHEX60gensym25_2650809673 == numMatchedHEX60gensym25_2650809674))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2650809673 == numMatchedHEX60gensym25_2650809674);
    }
    else {
    if (opt_2650809647.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2650809646) == numMatchedHEX60gensym25_2650809674);
    }
    else {
    Temporary1 = ((len_1627392983(b_2650809646) == numHEX60gensym25_2650809673) && (numHEX60gensym25_2650809673 == numMatchedHEX60gensym25_2650809674));
    }
    }}
    var okHEX60gensym25_2650809735 = Temporary1;
    if (!(okHEX60gensym25_2650809735)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2650809646)), HEX24_369098760(numHEX60gensym25_2650809673), [67,117,114,115,111,114], pretty_1627394477(b_2650809646, 2)]));
    }
    

  
}

function fromJson_2650809589(a_2650809591, b_2650809592, opt_2650809593) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2650809592, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2650809592}));
    }
    
    if (!((b_2650809592.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2650809592.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2650809619 = 0;
    var numMatchedHEX60gensym25_2650809620 = 0;
    numHEX60gensym25_2650809619 = addInt(numHEX60gensym25_2650809619, 1);
    if (hasKey_1627393154(b_2650809592, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2650809620 = addInt(numMatchedHEX60gensym25_2650809620, 1);
    fromJson_2650809643(a_2650809591["Field0"], HEX5BHEX5D_1627393037(b_2650809592, [102,105,114,115,116]), opt_2650809593);
    }
    else {
    if (opt_2650809593.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2650809592, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2650809619 = addInt(numHEX60gensym25_2650809619, 1);
    if (hasKey_1627393154(b_2650809592, [108,97,115,116])) {
    numMatchedHEX60gensym25_2650809620 = addInt(numMatchedHEX60gensym25_2650809620, 1);
    fromJson_2650809643(a_2650809591["Field1"], HEX5BHEX5D_1627393037(b_2650809592, [108,97,115,116]), opt_2650809593);
    }
    else {
    if (opt_2650809593.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2650809592, 2)]));
      }
      
    }
    }
    if ((opt_2650809593.allowExtraKeys && opt_2650809593.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2650809593.allowExtraKeys) {
    if (!((numHEX60gensym25_2650809619 == numMatchedHEX60gensym25_2650809620))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2650809619 == numMatchedHEX60gensym25_2650809620);
    }
    else {
    if (opt_2650809593.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2650809592) == numMatchedHEX60gensym25_2650809620);
    }
    else {
    Temporary1 = ((len_1627392983(b_2650809592) == numHEX60gensym25_2650809619) && (numHEX60gensym25_2650809619 == numMatchedHEX60gensym25_2650809620));
    }
    }}
    var okHEX60gensym25_2650809773 = Temporary1;
    if (!(okHEX60gensym25_2650809773)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2650809592)), HEX24_369098760(numHEX60gensym25_2650809619), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2650809592, 2)]));
    }
    

  
}

function jsonTo_2650810741(b_2650810743, opt_2650810745) {
  var result_2650810746 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2650809589(result_2650810746[0], b_2650810743, opt_2650810745);

  return result_2650810746[0];

}

function scriptSetTextEditorSelectionApi_1291858483(HEX3Atmp_1291858436) {
  var result_1291858484 = null;

    result_1291858484 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291858434_1291858476(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858436, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810741(HEX5BHEX5D_1627393116(HEX3Atmp_1291858436, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym661_1291858495 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291858500 = [mnewString(0)];
    fmtRes_1291858500[0].push.apply(fmtRes_1291858500[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858500, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym661_1291858495 || [],fmtRes_1291858500[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858484;

}

function toJson_2650809820(a_2650809822, opt_2650809823) {
  var result_2650809824 = null;

    result_2650809824 = newJArray_1627390082();
    Label1: {
      var ai_2650809831 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871168 = 0;
      var L_536871169 = (a_2650809822).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871168 < L_536871169)) break Label3;
            ai_2650809831 = a_2650809822[chckIndx(i_536871168, 0, (a_2650809822).length - 1)];
            add_1627390190(result_2650809824, toJson_2650809832(ai_2650809831, opt_2650809823));
            i_536871168 = addInt(i_536871168, 1);
            if (!(((a_2650809822).length == L_536871169))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2650809824;

}

function scriptTextEditorSelectionsScript_1291858503_1291858554(editorId_1291858555) {
  var result_1291858556 = [];

    result_1291858556 = nimCopy(null, scriptTextEditorSelections_1291858507(editorId_1291858555), NTI1291854206);

  return result_1291858556;

}

function scriptTextEditorSelectionsApi_1291858561(HEX3Atmp_1291858505) {
  var result_1291858562 = null;

  BeforeRet: {
    result_1291858562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858562 = toJson_2650809820(scriptTextEditorSelectionsScript_1291858503_1291858554(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858505, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym670_1291858572 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291858577 = [mnewString(0)];
    fmtRes_1291858577[0].push.apply(fmtRes_1291858577[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858577, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym670_1291858572 || [],fmtRes_1291858577[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858562;

}

function scriptSetTextEditorSelectionsScript_1291858580_1291858622(editorId_1291858623, selections_1291858624) {
    scriptSetTextEditorSelections_1291858584(editorId_1291858623, selections_1291858624);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet294[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2650809534(a_2650809536, a_2650809536_Idx, b_2650809537, opt_2650809538) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2650809537, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2650809537}));
    }
    
    if (a_2650809536[a_2650809536_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2650809537), 0, 2147483647), Temporary1)) { for (var i = a_2650809536[a_2650809536_Idx].length ; i < Temporary1 ; ++i) a_2650809536[a_2650809536_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2650809536[a_2650809536_Idx].length = Temporary1; };
    Label2: {
      var i_2650809587 = 0;
      var val_2650809588 = null;
      var colontmp__536871174 = [];
      colontmp__536871174 = getElems_1627390175(b_2650809537, []);
      var i_536871176 = 0;
      var L_536871177 = (colontmp__536871174).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871176 < L_536871177)) break Label4;
            i_2650809587 = i_536871176;
            val_2650809588 = colontmp__536871174[chckIndx(i_536871176, 0, (colontmp__536871174).length - 1)];
            fromJson_2650809589(a_2650809536[a_2650809536_Idx][chckIndx(i_2650809587, 0, (a_2650809536[a_2650809536_Idx]).length - 1)], val_2650809588, opt_2650809538);
            i_536871176 = addInt(i_536871176, 1);
            if (!(((colontmp__536871174).length == L_536871177))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2650809528(b_2650809530, opt_2650809532) {
  var result_2650809533 = [[]];

    fromJson_2650809534(result_2650809533, 0, b_2650809530, opt_2650809532);

  return result_2650809533[0];

}

function scriptSetTextEditorSelectionsApi_1291858629(HEX3Atmp_1291858582) {
  var result_1291858630 = null;

    result_1291858630 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291858580_1291858622(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858582, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809528(HEX5BHEX5D_1627393116(HEX3Atmp_1291858582, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_1291858641 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291858646 = [mnewString(0)];
    fmtRes_1291858646[0].push.apply(fmtRes_1291858646[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858646, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_1291858641 || [],fmtRes_1291858646[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858630;

}

function scriptGetTextEditorLineScript_1291858649_1291858696(editorId_1291858697, line_1291858698) {
  var result_1291858699 = [];

    result_1291858699 = nimCopy(null, scriptGetTextEditorLine_1291858653(editorId_1291858697, line_1291858698), NTI33554449);

  return result_1291858699;

}

function scriptGetTextEditorLineApi_1291858705(HEX3Atmp_1291858651) {
  var result_1291858706 = null;

  BeforeRet: {
    result_1291858706 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291858706 = toJson_1811939932(scriptGetTextEditorLineScript_1291858649_1291858696(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858651, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858651, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym689_1291858721 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291858726 = [mnewString(0)];
    fmtRes_1291858726[0].push.apply(fmtRes_1291858726[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858726, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym689_1291858721 || [],fmtRes_1291858726[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858706;

}

function scriptGetTextEditorLineCountScript_1291858729_1291858775(editorId_1291858776) {
  var result_1291858777 = 0;

    result_1291858777 = scriptGetTextEditorLineCount_1291858733(editorId_1291858776);

  return result_1291858777;

}

function scriptGetTextEditorLineCountApi_1291858782(HEX3Atmp_1291858731) {
  var result_1291858783 = null;

  BeforeRet: {
    result_1291858783 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858783 = toJson_2650809858(scriptGetTextEditorLineCountScript_1291858729_1291858775(jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858731, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym699_1291858793 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291858798 = [mnewString(0)];
    fmtRes_1291858798[0].push.apply(fmtRes_1291858798[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858798, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym699_1291858793 || [],fmtRes_1291858798[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858783;

}

function scriptGetOptionIntScript_1291858812_1291858828(path_1291858829, default_1291858830) {
  var result_1291858831 = 0;

    result_1291858831 = scriptGetOptionInt_1291858816(path_1291858829, default_1291858830);

  return result_1291858831;

}

function scriptGetOptionIntApi_1291858837(HEX3Atmp_1291858814) {
  var result_1291858838 = null;

  BeforeRet: {
    result_1291858838 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291858838 = toJson_2650809858(scriptGetOptionIntScript_1291858812_1291858828(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858814, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291858814, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym709_1291858853 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291858858 = [mnewString(0)];
    fmtRes_1291858858[0].push.apply(fmtRes_1291858858[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858858, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym709_1291858853 || [],fmtRes_1291858858[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858838;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291858957(a_1291858959, opt_1291858960) {
  var result_1291858961 = null;

    result_1291858961 = HEX25_1627391792(a_1291858959);

  return result_1291858961;

}

function scriptGetOptionFloatScript_1291858862_1291858878(path_1291858879, default_1291858880) {
  var result_1291858881 = 0.0;

    result_1291858881 = scriptGetOptionFloat_1291858866(path_1291858879, default_1291858880);

  return result_1291858881;

}

function initFromJson_1291858926(dst_1291858928, dst_1291858928_Idx, jsonNode_1291858929, jsonPath_1291858930, jsonPath_1291858930_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291858929.kind == 4)) {
    var Temporary1 = jsonNode_1291858929;
    if (ConstSet295[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291858935 = NaN;
      dst_1291858928[dst_1291858928_Idx] = b_1291858935;
      break;
    case "inf":
      var b_1291858936 = Infinity;
      dst_1291858928[dst_1291858928_Idx] = b_1291858936;
      break;
    case "-inf":
      var b_1291858937 = -Infinity;
      dst_1291858928[dst_1291858928_Idx] = b_1291858937;
      break;
    default: 
      var Temporary2 = jsonNode_1291858929;
      if (ConstSet296[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291858929, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291858930[jsonPath_1291858930_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet297[jsonNode_1291858929.kind] != undefined))) {
      var msgHEX60gensym723_1291858951 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet298), nimCopy(null, jsonPath_1291858930[jsonPath_1291858930_Idx], NTI33554449), reprEnum(jsonNode_1291858929.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym723_1291858951, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291858929.kind == 3)) {
      var Temporary3 = jsonNode_1291858929;
      if (ConstSet299[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291858928[dst_1291858928_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291858929;
        if (ConstSet300[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291858928[dst_1291858928_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291858915(node_1291858918) {
  var result_1291858920 = [0.0];

    var jsonPath_1291858921 = [[]];
    result_1291858920[0] = 0.0;
    initFromJson_1291858926(result_1291858920, 0, node_1291858918, jsonPath_1291858921, 0);

  return result_1291858920[0];

}

function fromJson_1291858900(a_1291858902, a_1291858902_Idx, b_1291858903, opt_1291858904) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291858903, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291858903}));
    }
    
    a_1291858902[a_1291858902_Idx] = to_1291858915(b_1291858903);

  
}

function jsonTo_1291858894(b_1291858896, opt_1291858898) {
  var result_1291858899 = [0.0];

    fromJson_1291858900(result_1291858899, 0, b_1291858896, opt_1291858898);

  return result_1291858899[0];

}

function scriptGetOptionFloatApi_1291858887(HEX3Atmp_1291858864) {
  var result_1291858888 = null;

  BeforeRet: {
    result_1291858888 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291858888 = toJson_1291858957(scriptGetOptionFloatScript_1291858862_1291858878(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858864, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291858894(HEX5BHEX5D_1627393116(HEX3Atmp_1291858864, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym719_1291858968 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291858973 = [mnewString(0)];
    fmtRes_1291858973[0].push.apply(fmtRes_1291858973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym719_1291858968 || [],fmtRes_1291858973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858888;

}

function scriptGetOptionBoolScript_1291858977_1291858993(path_1291858994, default_1291858995) {
  var result_1291858996 = false;

    result_1291858996 = scriptGetOptionBool_1291858981(path_1291858994, default_1291858995);

  return result_1291858996;

}

function scriptGetOptionBoolApi_1291859002(HEX3Atmp_1291858979) {
  var result_1291859003 = null;

  BeforeRet: {
    result_1291859003 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859003 = toJson_2650813668(scriptGetOptionBoolScript_1291858977_1291858993(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858979, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291858979, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym735_1291859018 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291859023 = [mnewString(0)];
    fmtRes_1291859023[0].push.apply(fmtRes_1291859023[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859023, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym735_1291859018 || [],fmtRes_1291859023[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859003;

}

function scriptGetOptionStringScript_1291859027_1291859043(path_1291859044, default_1291859045) {
  var result_1291859046 = [];

    result_1291859046 = nimCopy(null, scriptGetOptionString_1291859031(path_1291859044, default_1291859045), NTI33554449);

  return result_1291859046;

}

function scriptGetOptionStringApi_1291859052(HEX3Atmp_1291859029) {
  var result_1291859053 = null;

  BeforeRet: {
    result_1291859053 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859053 = toJson_1811939932(scriptGetOptionStringScript_1291859027_1291859043(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859029, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859029, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym745_1291859068 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291859073 = [mnewString(0)];
    fmtRes_1291859073[0].push.apply(fmtRes_1291859073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym745_1291859068 || [],fmtRes_1291859073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859053;

}

function scriptSetOptionIntScript_1291859077_1291859126(path_1291859127, value_1291859128) {
    scriptSetOptionInt_1291859081(path_1291859127, value_1291859128);

  
}

function scriptSetOptionIntApi_1291859133(HEX3Atmp_1291859079) {
  var result_1291859134 = null;

    result_1291859134 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291859077_1291859126(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859079, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291859079, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym754_1291859145 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291859150 = [mnewString(0)];
    fmtRes_1291859150[0].push.apply(fmtRes_1291859150[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859150, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym754_1291859145 || [],fmtRes_1291859150[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859134;

}

function scriptSetOptionFloatScript_1291859159_1291859208(path_1291859209, value_1291859210) {
    scriptSetOptionFloat_1291859163(path_1291859209, value_1291859210);

  
}

function scriptSetOptionFloatApi_1291859215(HEX3Atmp_1291859161) {
  var result_1291859216 = null;

    result_1291859216 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291859159_1291859208(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859161, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291858894(HEX5BHEX5D_1627393116(HEX3Atmp_1291859161, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym768_1291859227 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291859232 = [mnewString(0)];
    fmtRes_1291859232[0].push.apply(fmtRes_1291859232[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859232, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym768_1291859227 || [],fmtRes_1291859232[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859216;

}

function scriptSetOptionBoolScript_1291859241_1291859290(path_1291859291, value_1291859292) {
    scriptSetOptionBool_1291859245(path_1291859291, value_1291859292);

  
}

function scriptSetOptionBoolApi_1291859297(HEX3Atmp_1291859243) {
  var result_1291859298 = null;

    result_1291859298 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291859241_1291859290(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859243, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_1291859243, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym782_1291859309 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291859314 = [mnewString(0)];
    fmtRes_1291859314[0].push.apply(fmtRes_1291859314[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859314, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym782_1291859309 || [],fmtRes_1291859314[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859298;

}

function scriptSetOptionStringScript_1291859323_1291859372(path_1291859373, value_1291859374) {
    scriptSetOptionString_1291859327(path_1291859373, value_1291859374);

  
}

function scriptSetOptionStringApi_1291859379(HEX3Atmp_1291859325) {
  var result_1291859380 = null;

    result_1291859380 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291859323_1291859372(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859325, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859325, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym796_1291859391 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291859396 = [mnewString(0)];
    fmtRes_1291859396[0].push.apply(fmtRes_1291859396[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859396, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym796_1291859391 || [],fmtRes_1291859396[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859380;

}

function scriptSetCallbackScript_1291859405_1291859461(path_1291859462, id_1291859463) {
    scriptSetCallback_1291859409(path_1291859462, id_1291859463);

  
}

function scriptSetCallbackApi_1291859468(HEX3Atmp_1291859407) {
  var result_1291859469 = null;

    result_1291859469 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291859405_1291859461(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859407, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_1291859407, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym810_1291859480 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291859485 = [mnewString(0)];
    fmtRes_1291859485[0].push.apply(fmtRes_1291859485[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859485, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym810_1291859480 || [],fmtRes_1291859485[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859469;

}

function dispatch_1291859496(command_1291859495, arg_1291859494) {
    var Temporary1;

  var result_1291859498 = ({val: null});

    switch (toJSStr(command_1291859495)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2650815976(getBackendApi_1291853818(arg_1291859494));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2650815976(requestRenderApi_1291853962(arg_1291859494));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2650815976(setHandleInputsApi_1291854017(arg_1291859494));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2650815976(setHandleActionsApi_1291854077(arg_1291859494));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2650815976(setConsumeAllActionsApi_1291854137(arg_1291859494));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2650815976(setConsumeAllInputApi_1291854197(arg_1291859494));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2650815976(getFlagApi2_1291854269(arg_1291859494));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2650815976(setFlagApi2_1291854389(arg_1291859494));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2650815976(toggleFlagApi_1291854452(arg_1291859494));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2650815976(setOptionApi_1291854546(arg_1291859494));
      break;
    case "quit":
      Temporary1 = some_2650815976(quitApi_1291854600(arg_1291859494));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2650815976(changeFontSizeApi_1291854647(arg_1291859494));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2650815976(changeLayoutPropApi_1291854951(arg_1291859494));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2650815976(toggleStatusBarLocationApi_1291855012(arg_1291859494));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2650815976(createViewApi_1291855060(arg_1291859494));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2650815976(closeCurrentViewApi_1291855139(arg_1291859494));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2650815976(moveCurrentViewToTopApi_1291855224(arg_1291859494));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2650815976(nextViewApi_1291855275(arg_1291859494));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2650815976(prevViewApi_1291855328(arg_1291859494));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2650815976(moveCurrentViewPrevApi_1291855395(arg_1291859494));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2650815976(moveCurrentViewNextApi_1291855459(arg_1291859494));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2650815976(setLayoutApi_1291855542(arg_1291859494));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2650815976(commandLineApi_1291855598(arg_1291859494));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2650815976(exitCommandLineApi_1291855651(arg_1291859494));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2650815976(executeCommandLineApi_1291855704(arg_1291859494));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2650815976(openFileApi_1291855802(arg_1291859494));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2650815976(writeFileApi_1291855927(arg_1291859494));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2650815976(loadFileApi_1291855991(arg_1291859494));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2650815976(loadThemeApi_1291856079(arg_1291859494));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2650815976(chooseThemeApi_1291856406(arg_1291859494));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2650815976(chooseFileApi_1291856666(arg_1291859494));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2650815976(reloadConfigApi_1291856756(arg_1291859494));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2650815976(logOptionsApi_1291856800(arg_1291859494));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2650815976(clearCommandsApi_1291856857(arg_1291859494));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2650815976(getAllEditorsApi_1291857138(arg_1291859494));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2650815976(setModeApi22_1291857248(arg_1291859494));
      break;
    case "mode":
      Temporary1 = some_2650815976(modeApi22_1291857301(arg_1291859494));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2650815976(getContextWithModeApi22_1291857355(arg_1291859494));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2650815976(scriptRunActionApi_1291857609(arg_1291859494));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2650815976(scriptLogApi_1291857645(arg_1291859494));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2650815976(addCommandScriptApi_1291857707(arg_1291859494));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2650815976(removeCommandApi_1291857783(arg_1291859494));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2650815976(getActivePopupApi_1291857828(arg_1291859494));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2650815976(getActiveEditorApi_1291857859(arg_1291859494));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2650815976(loadCurrentConfigApi_1291857954(arg_1291859494));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2650815976(sourceCurrentDocumentApi_1291858009(arg_1291859494));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2650815976(getEditorApi_1291858039(arg_1291859494));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2650815976(scriptIsTextEditorApi_1291858107(arg_1291859494));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2650815976(scriptIsAstEditorApi_1291858176(arg_1291859494));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2650815976(scriptRunActionForApi_1291858271(arg_1291859494));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2650815976(scriptInsertTextIntoApi_1291858341(arg_1291859494));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2650815976(scriptTextEditorSelectionApi_1291858411(arg_1291859494));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2650815976(scriptSetTextEditorSelectionApi_1291858483(arg_1291859494));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2650815976(scriptTextEditorSelectionsApi_1291858561(arg_1291859494));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2650815976(scriptSetTextEditorSelectionsApi_1291858629(arg_1291859494));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2650815976(scriptGetTextEditorLineApi_1291858705(arg_1291859494));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2650815976(scriptGetTextEditorLineCountApi_1291858782(arg_1291859494));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2650815976(scriptGetOptionIntApi_1291858837(arg_1291859494));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2650815976(scriptGetOptionFloatApi_1291858887(arg_1291859494));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2650815976(scriptGetOptionBoolApi_1291859002(arg_1291859494));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2650815976(scriptGetOptionStringApi_1291859052(arg_1291859494));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2650815976(scriptSetOptionIntApi_1291859133(arg_1291859494));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2650815976(scriptSetOptionFloatApi_1291859215(arg_1291859494));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2650815976(scriptSetOptionBoolApi_1291859297(arg_1291859494));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2650815976(scriptSetOptionStringApi_1291859379(arg_1291859494));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2650815976(scriptSetCallbackApi_1291859468(arg_1291859494));
      break;
    default: 
      Temporary1 = none_2650816172();
      break;
    }
    result_1291859498 = nimCopy(result_1291859498, Temporary1, NTI2650810879);

  return result_1291859498;

}

function handleAction_1291848858(self_1291848859, action_1291848860, arg_1291848861) {
  var result_1291859707 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848860, NTI33554449), nimCopy(null, arg_1291848861, NTI33554449)])]);
++excHandler;
    try {
    if (false) {
    result_1291859707 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291859717 = [mnewString(0)];
    fmtRes_1291859717[0].push.apply(fmtRes_1291859717[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291859717, 0, action_1291848860, []);
    fmtRes_1291859717[0].push.apply(fmtRes_1291859717[0], [32]);;
    formatValue_721420459(fmtRes_1291859717, 0, arg_1291848861, []);
    fmtRes_1291859717[0].push.apply(fmtRes_1291859717[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291859717, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291859717[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291859707 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var args_1291859718 = newJArray_1627390082();
    Label2: {
      var a_1291859719 = null;
      var colontmp__536871068 = null;
      colontmp__536871068 = newStringStream_1660945417(arg_1291848861);
      var p_536871069 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871069[0], colontmp__536871068, [], false);
      try {
      var _ = getTok_1694499270(p_536871069[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871069[0].tok == 1))) break Label5;
            a_1291859719 = parseJson_1627395211(p_536871069[0], false, false, 0);
            add_1627390190(args_1291859718, a_1291859719);
          }
      };
      } finally {
      close_1694498967(p_536871069[0]);
      }
    };
    result_1291859707 = isSome_2650816240(dispatch_1291859496(action_1291848860, args_1291859718));
    break BeforeRet;
  };

  return result_1291859707;

}

function fromJson_1291852953(a_1291852955, b_1291852956, opt_1291852957) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852956, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291852956}));
    }
    
    if (!((b_1291852956.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852956.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852992 = 0;
    var numMatchedHEX60gensym16_1291852993 = 0;
    numHEX60gensym16_1291852992 = addInt(numHEX60gensym16_1291852992, 1);
    if (hasKey_1627393154(b_1291852956, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291852993 = addInt(numMatchedHEX60gensym16_1291852993, 1);
    fromJson_1811939890(a_1291852955, "filename", HEX5BHEX5D_1627393037(b_1291852956, [102,105,108,101,110,97,109,101]), opt_1291852957);
    }
    else {
    if (opt_1291852957.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291852956, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852992 = addInt(numHEX60gensym16_1291852992, 1);
    if (hasKey_1627393154(b_1291852956, [97,115,116])) {
    numMatchedHEX60gensym16_1291852993 = addInt(numMatchedHEX60gensym16_1291852993, 1);
    fromJson_2650809788(a_1291852955, "ast", HEX5BHEX5D_1627393037(b_1291852956, [97,115,116]), opt_1291852957);
    }
    else {
    if (opt_1291852957.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291852956, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852992 = addInt(numHEX60gensym16_1291852992, 1);
    if (hasKey_1627393154(b_1291852956, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291852993 = addInt(numMatchedHEX60gensym16_1291852993, 1);
    fromJson_1811939890(a_1291852955, "languageID", HEX5BHEX5D_1627393037(b_1291852956, [108,97,110,103,117,97,103,101,73,68]), opt_1291852957);
    }
    else {
    if (opt_1291852957.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291852956, 2)]));
      }
      
    }
    }
    if ((opt_1291852957.allowExtraKeys && opt_1291852957.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852957.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852992 == numMatchedHEX60gensym16_1291852993))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852992 == numMatchedHEX60gensym16_1291852993);
    }
    else {
    if (opt_1291852957.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852956) == numMatchedHEX60gensym16_1291852993);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852956) == numHEX60gensym16_1291852992) && (numHEX60gensym16_1291852992 == numMatchedHEX60gensym16_1291852993));
    }
    }}
    var okHEX60gensym16_1291853068 = Temporary1;
    if (!(okHEX60gensym16_1291853068)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852956)), HEX24_369098760(numHEX60gensym16_1291852992), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291852956, 2)]));
    }
    

  
}

function fromJson_1291852925(a_1291852927, a_1291852927_Idx, b_1291852928, opt_1291852929) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852928, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291852928}));
    }
    
    if (a_1291852927[a_1291852927_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291852928), 0, 2147483647), Temporary1)) { for (var i = a_1291852927[a_1291852927_Idx].length ; i < Temporary1 ; ++i) a_1291852927[a_1291852927_Idx].push(({filename: [], ast: false, languageID: []})); }
               else { a_1291852927[a_1291852927_Idx].length = Temporary1; };
    Label2: {
      var i_1291852951 = 0;
      var val_1291852952 = null;
      var colontmp__536871201 = [];
      colontmp__536871201 = getElems_1627390175(b_1291852928, []);
      var i_536871202 = 0;
      var L_536871203 = (colontmp__536871201).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871202 < L_536871203)) break Label4;
            i_1291852951 = i_536871202;
            val_1291852952 = colontmp__536871201[chckIndx(i_536871202, 0, (colontmp__536871201).length - 1)];
            fromJson_1291852953(a_1291852927[a_1291852927_Idx][chckIndx(i_1291852951, 0, (a_1291852927[a_1291852927_Idx]).length - 1)], val_1291852952, opt_1291852929);
            i_536871202 = addInt(i_536871202, 1);
            if (!(((colontmp__536871201).length == L_536871203))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852728(a_1291852730, b_1291852731, opt_1291852732) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852731, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852731}));
    }
    
    if (!((b_1291852731.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852731.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852774 = 0;
    var numMatchedHEX60gensym16_1291852775 = 0;
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1811939890(a_1291852730, "theme", HEX5BHEX5D_1627393037(b_1291852731, [116,104,101,109,101]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_2650811129(a_1291852730, "fontSize", HEX5BHEX5D_1627393037(b_1291852731, [102,111,110,116,83,105,122,101]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1811939890(a_1291852730, "fontRegular", HEX5BHEX5D_1627393037(b_1291852731, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1811939890(a_1291852730, "fontBold", HEX5BHEX5D_1627393037(b_1291852731, [102,111,110,116,66,111,108,100]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1811939890(a_1291852730, "fontItalic", HEX5BHEX5D_1627393037(b_1291852731, [102,111,110,116,73,116,97,108,105,99]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1811939890(a_1291852730, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852731, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852774 = addInt(numHEX60gensym16_1291852774, 1);
    if (hasKey_1627393154(b_1291852731, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852775 = addInt(numMatchedHEX60gensym16_1291852775, 1);
    fromJson_1291852925(a_1291852730, "openEditors", HEX5BHEX5D_1627393037(b_1291852731, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852732);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
      }
      
    }
    }
    if ((opt_1291852732.allowExtraKeys && opt_1291852732.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852732.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852774 == numMatchedHEX60gensym16_1291852775))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852774 == numMatchedHEX60gensym16_1291852775);
    }
    else {
    if (opt_1291852732.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852731) == numMatchedHEX60gensym16_1291852775);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852731) == numHEX60gensym16_1291852774) && (numHEX60gensym16_1291852774 == numMatchedHEX60gensym16_1291852775));
    }
    }}
    var okHEX60gensym16_1291853080 = Temporary1;
    if (!(okHEX60gensym16_1291853080)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852731)), HEX24_369098760(numHEX60gensym16_1291852774), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852731, 2)]));
    }
    

  
}

function jsonTo_1291852722(b_1291852724, opt_1291852726) {
  var result_1291852727 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []})];

    fromJson_1291852728(result_1291852727[0], b_1291852724, opt_1291852726);

  return result_1291852727[0];

}

function new_1291853112() {
  var result_1291853115 = null;

  BeforeRet: {
    var r_1291853117 = null;
    r_1291853117 = ({m_type: NTI2634022916});
    result_1291853115 = r_1291853117;
    break BeforeRet;
  };

  return result_1291853115;

}

function newEditor_1291851015(backend_1291851016, platform_1291851017) {
    
function HEX3Aanonymous_1291851031(event_1291851049) {
        handleKeyPress_1291850982(self_1291851019, event_1291851049.Field0, event_1291851049.Field1);

      
    }
    
function HEX3Aanonymous_1291851103(event_1291851121) {
        handleKeyRelease_1291850986(self_1291851019, event_1291851121.Field0, event_1291851121.Field1);

      
    }
    
function HEX3Aanonymous_1291851152(event_1291851170) {
        handleRune_1291850990(self_1291851019, event_1291851170.Field0, event_1291851170.Field1);

      
    }
    
function HEX3Aanonymous_1291851201(event_1291851219) {
        handleMousePress_1291850994(self_1291851019, event_1291851219.Field0, event_1291851219.Field1, event_1291851219.Field2);

      
    }
    
function HEX3Aanonymous_1291851273(event_1291851291) {
        handleMouseRelease_1291850999(self_1291851019, event_1291851291.Field0, event_1291851291.Field1, event_1291851291.Field2);

      
    }
    
function HEX3Aanonymous_1291851322(event_1291851340) {
        handleMouseMove_1291851004(self_1291851019, event_1291851340.Field0, event_1291851340.Field1, event_1291851340.Field2, event_1291851340.Field3);

      
    }
    
function HEX3Aanonymous_1291851394(event_1291851412) {
        handleScroll_1291851010(self_1291851019, event_1291851412.Field1, event_1291851412.Field0, event_1291851412.Field2);

      
    }
    
function HEX3Aanonymous_1291851466() {
        self_1291851019.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852671(actionHEX60gensym72HEX60gensym73_1291852672, argHEX60gensym72HEX60gensym73_1291852673) {
          var Temporary1;

        var result_1291852674 = 0;

        BeforeRet: {
          if (handlerHEX60gensym72_1291852659.config.handleActions) {
          var action_1291852675 = nimCopy(null, actionHEX60gensym72HEX60gensym73_1291852672, NTI33554449);
          var arg_1291852676 = nimCopy(null, argHEX60gensym72HEX60gensym73_1291852673, NTI33554449);
          if (handleAction_1291848858(self_1291851019, action_1291852675, arg_1291852676)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym72HEX60gensym73_1291852677 = Temporary1;
          if (handlerHEX60gensym72_1291852659.config.consumeAllActions) {
          result_1291852674 = 3;
          break BeforeRet;
          }
          
          result_1291852674 = responseHEX60gensym72HEX60gensym73_1291852677;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym72_1291852659.config.consumeAllActions) {
          result_1291852674 = 3;
          break BeforeRet;
          }
          else {
            result_1291852674 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852674;

      }
      
function HEX3Aanonymous_1291852679(inputHEX60gensym72HEX60gensym74_1291852680) {
        var result_1291852681 = 0;

        BeforeRet: {
          if (handlerHEX60gensym72_1291852659.config.handleInputs) {
          var input_1291852682 = nimCopy(null, inputHEX60gensym72HEX60gensym74_1291852680, NTI33554449);
          result_1291852681 = 1;
          break BeforeRet;
          }
          else {
            result_1291852681 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852681;

      }
      
function HEX3Aanonymous_1291852702(actionHEX60gensym75HEX60gensym76_1291852703, argHEX60gensym75HEX60gensym76_1291852704) {
          var Temporary1;

        var result_1291852705 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852690.config.handleActions) {
          var action_1291852706 = nimCopy(null, actionHEX60gensym75HEX60gensym76_1291852703, NTI33554449);
          var arg_1291852707 = nimCopy(null, argHEX60gensym75HEX60gensym76_1291852704, NTI33554449);
          if (handleAction_1291848858(self_1291851019, action_1291852706, arg_1291852707)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym75HEX60gensym76_1291852708 = Temporary1;
          if (handlerHEX60gensym75_1291852690.config.consumeAllActions) {
          result_1291852705 = 3;
          break BeforeRet;
          }
          
          result_1291852705 = responseHEX60gensym75HEX60gensym76_1291852708;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym75_1291852690.config.consumeAllActions) {
          result_1291852705 = 3;
          break BeforeRet;
          }
          else {
            result_1291852705 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852705;

      }
      
function HEX3Aanonymous_1291852710(inputHEX60gensym75HEX60gensym77_1291852711) {
        var result_1291852712 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852690.config.handleInputs) {
          var input_1291852713 = nimCopy(null, inputHEX60gensym75HEX60gensym77_1291852711, NTI33554449);
          result_1291852712 = 1;
          break BeforeRet;
          }
          else {
            result_1291852712 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852712;

      }
        var Temporary7;
              var Temporary14;
                var Temporary15;

  var result_1291851018 = null;

  BeforeRet: {
    var self_1291851019 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851019 = createWithPrototype(editor_prototype, self_1291851019);
    gEditor = self_1291851019;
    self_1291851019.platform = platform_1291851017;
    self_1291851019.backend = backend_1291851016;
    self_1291851019.statusBarOnTop = false;
    var _ = subscribe_1291851064(platform_1291851017.onKeyPress, HEX3Aanonymous_1291851031);
    var _ = subscribe_1291851064(platform_1291851017.onKeyRelease, HEX3Aanonymous_1291851103);
    var _ = subscribe_1291851064(platform_1291851017.onRune, HEX3Aanonymous_1291851152);
    var _ = subscribe_1291851234(platform_1291851017.onMousePress, HEX3Aanonymous_1291851201);
    var _ = subscribe_1291851234(platform_1291851017.onMouseRelease, HEX3Aanonymous_1291851273);
    var _ = subscribe_1291851355(platform_1291851017.onMouseMove, HEX3Aanonymous_1291851322);
    var _ = subscribe_1291851427(platform_1291851017.onScroll, HEX3Aanonymous_1291851394);
    var _ = subscribe_1291851499(platform_1291851017.onCloseRequested, HEX3Aanonymous_1291851466);
    self_1291851019.timer = nimCopy(self_1291851019.timer, startTimer_2281701428(), NTI2281701407);
    self_1291851019.frameTimer = nimCopy(self_1291851019.frameTimer, startTimer_2281701428(), NTI2281701407);
    self_1291851019.layout = {m_type: NTI1291845643};
    self_1291851019.layout_props = {props: toTable_1291851509([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2315255929(self_1291851019.platform, 20.0);
    self_1291851019.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851019.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851019.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851019.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851019.editor_defaults = nimCopy(null, [{m_type: NTI2650800335, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2818573803, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849357);
    self_1291851019.theme = defaultTheme_2483031631();
    setTheme_1291850922(self_1291851019, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851019.currentView = 0;
    addCommand_2046820734(getEventHandlerConfig_1291849111(self_1291851019, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2046820734(getEventHandlerConfig_1291849111(self_1291851019, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851019.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym72_1291852659 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym72_1291852659.config = getEventHandlerConfig_1291849111(self_1291851019, [101,100,105,116,111,114]);
      handlerHEX60gensym72_1291852659.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(self_1291851019, [101,100,105,116,111,114]));
      handlerHEX60gensym72_1291852659.handleAction = HEX3Aanonymous_1291852671;
      handlerHEX60gensym72_1291852659.handleInput = HEX3Aanonymous_1291852679;
    };
    self_1291851019.eventHandler = handlerHEX60gensym72_1291852659;
    Label2: {
      var handlerHEX60gensym75_1291852690 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym75_1291852690.config = getEventHandlerConfig_1291849111(self_1291851019, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym75_1291852690.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(self_1291851019, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym75_1291852690.handleAction = HEX3Aanonymous_1291852702;
      handlerHEX60gensym75_1291852690.handleInput = HEX3Aanonymous_1291852710;
    };
    self_1291851019.commandLineEventHandler = handlerHEX60gensym75_1291852690;
    self_1291851019.commandLineMode = false;
    self_1291851019.commandLineTextEditor = newTextEditor_2650816370(newTextDocument_3036676679([], []), self_1291851019);
    self_1291851019.commandLineTextEditor.renderHeader = false;
    self_1291851019.commandLineTextEditor.lineNumbers = nimCopy(self_1291851019.commandLineTextEditor.lineNumbers, some_3036676720(0), NTI2650800379);
    getCommandLineTextEditor_1291850979(self_1291851019).hideCursorWhenInactive = true;
    var state_1291852721 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
++excHandler;
    try {
    state_1291852721 = nimCopy(state_1291852721, jsonTo_1291852722(parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [99,111,110,102,105,103,46,106,115,111,110])), {allowExtraKeys: false, allowMissingKeys: false}), NTI1291845663);
    setTheme_1291850922(self_1291851019, state_1291852721.theme);
    self_1291851019.loadedFontSize = state_1291852721.fontSize;
    fontSizeHEX3D_2315255929(self_1291851019.platform, state_1291852721.fontSize);
    if ((0 < (state_1291852721.fontRegular).length)) {
    self_1291851019.fontRegular = nimCopy(null, state_1291852721.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852721.fontBold).length)) {
    self_1291851019.fontBold = nimCopy(null, state_1291852721.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852721.fontItalic).length)) {
    self_1291851019.fontItalic = nimCopy(null, state_1291852721.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852721.fontBoldItalic).length)) {
    self_1291851019.fontBoldItalic = nimCopy(null, state_1291852721.fontBoldItalic, NTI33554449);
    }
    
    self_1291851019.options = parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853088 = [mnewString(0)];
    fmtRes_1291853088[0].push.apply(fmtRes_1291853088[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853088, 0, pretty_1627394477(self_1291851019.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853088[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853093 = [mnewString(0)];
    fmtRes_1291853093[0].push.apply(fmtRes_1291853093[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853093, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853093[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
++excHandler;
    try {
    var searchPaths_1291853098 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853103 = HEX7BHEX7D_1627393316(self_1291851019.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853103 == null))) {
    Label5: {
      var sp_1291853107 = null;
      if (!((searchPathsJson_1291853103.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853103.kind, NTI1627389955) || []));
      }
      
      Label6: {
        var i_536870983 = null;
        var colontmp__536870984 = [];
        var Temporary7 = searchPathsJson_1291853103;
        if (ConstSet301[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        colontmp__536870984 = Temporary7.elems;
        var i_536870985 = 0;
        var L_536870986 = (colontmp__536870984).length;
        Label8: {
            Label9: while (true) {
            if (!(i_536870985 < L_536870986)) break Label9;
              i_536870983 = colontmp__536870984[chckIndx(i_536870985, 0, (colontmp__536870984).length - 1)];
              sp_1291853107 = i_536870983;
              searchPaths_1291853098.push(getStr_1627390106(sp_1291853107, []));;
              i_536870985 = addInt(i_536870985, 1);
              if (!(((colontmp__536870984).length == L_536870986))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851019.scriptContext = new_1291853112();
    init_2617245708(self_1291851019.scriptContext, []);
    var _ = false;
    self_1291851019.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853148 = mnewString(0);
    fmtRes_1291853148.push.apply(fmtRes_1291853148, [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853148, NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848862(self_1291851019, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label10: {
      var editorState_1291853171 = ({filename: [], ast: false, languageID: []});
      var i_536870991 = 0;
      var L_536870992 = (state_1291852721.openEditors).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536870991 < L_536870992)) break Label12;
            editorState_1291853171 = state_1291852721.openEditors[chckIndx(i_536870991, 0, (state_1291852721.openEditors).length - 1)];
            Label13: {
              if (editorState_1291853171.ast) {
              Temporary14 = newAstDocument_2818577249(editorState_1291853171.filename);
              }
              else {
++excHandler;
                try {
                var fileContent_1291853172 = loadFile_2499805191(fs_2499805237, editorState_1291853171.filename);
                Temporary15 = newTextDocument_3036676679(editorState_1291853171.filename, fileContent_1291853172);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853181 = [mnewString(0)];
                fmtRes_1291853181[0].push.apply(fmtRes_1291853181[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853181, 0, editorState_1291853171.filename, []);
                fmtRes_1291853181[0].push.apply(fmtRes_1291853181[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853181, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853181[0], NTI33554449)]);
                break Label13;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary14 = Temporary15;
              }
              
              var document_1291853182 = Temporary14;
              createView_1291848946(self_1291851019, document_1291853182);
            };
            i_536870991 = addInt(i_536870991, 1);
            if (!(((state_1291852721.openEditors).length == L_536870992))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851018 = self_1291851019;
    break BeforeRet;
  };

  return result_1291851018;

}

function fromJsonHook_2483028776(color_2483028777, jsonNode_2483028778) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2483028778.kind == 0)) {
    color_2483028777 = nimCopy(color_2483028777, parseHex_2348810482([48,48,48,48,48,48]), NTI2365587459);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2483028778;
    if (ConstSet303[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2483028777 = nimCopy(color_2483028777, parseHexVar_2483028016(Temporary1.str), NTI2365587459);
  };

  
}

function fromJson_2483028808(a_2483028810, b_2483028811, opt_2483028812) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028811, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2483028811}));
    }
    
    fromJsonHook_2483028776(a_2483028810, b_2483028811);

  
}

function jsonTo_2483028802(b_2483028804, opt_2483028806) {
  var result_2483028807 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2483028808(result_2483028807[0], b_2483028804, opt_2483028806);

  return result_2483028807[0];

}

function hasKey_2483028226(t_2483028229, key_2483028230) {
  var result_2483028231 = false;

    var hc_2483028232 = [0];
    result_2483028231 = (0 <= rawGet_2483028233(t_2483028229, key_2483028230, hc_2483028232, 0));

  return result_2483028231;

}

function contains_2483028220(t_2483028223, key_2483028224) {
  var result_2483028225 = false;

  BeforeRet: {
    result_2483028225 = hasKey_2483028226(t_2483028223, key_2483028224);
    break BeforeRet;
  };

  return result_2483028225;

}

function none_2483028832() {
  var result_2483028839 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2483028839;

}

function HEX5BHEX5D_2483028525(t_2483028528, key_2483028529) {
  var result_2483028530 = null;

    var hcHEX60gensym22_2483028531 = [0];
    var indexHEX60gensym22_2483028538 = rawGet_2483028233(t_2483028528, key_2483028529, hcHEX60gensym22_2483028531, 0);
    if ((0 <= indexHEX60gensym22_2483028538)) {
    result_2483028530 = t_2483028528.data[chckIndx(indexHEX60gensym22_2483028538, 0, (t_2483028528.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2483028529);
    }
    

  return result_2483028530;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2483028783(style_2483028784, jsonNode_2483028785) {
    var Temporary1;

    style_2483028784 = nimCopy(style_2483028784, ConstSet308, NTI2483028483);
    var Temporary1 = jsonNode_2483028785;
    if (ConstSet309[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2483028786 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2483028786, [105,116,97,108,105,99])) {
    style_2483028784[0] = true;
    }
    
    if (contains_855639877(text_2483028786, [98,111,108,100])) {
    style_2483028784[2] = true;
    }
    
    if (contains_855639877(text_2483028786, [117,110,100,101,114,108,105,110,101])) {
    style_2483028784[1] = true;
    }
    

  
}

function fromJson_2483028846(a_2483028848, b_2483028849, opt_2483028850) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028849, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2483028849}));
    }
    
    fromJsonHook_2483028783(a_2483028848, b_2483028849);

  
}

function jsonTo_2483028840(b_2483028842, opt_2483028844) {
  var result_2483028845 = [{}];

    fromJson_2483028846(result_2483028845[0], b_2483028842, opt_2483028844);

  return result_2483028845[0];

}

function jsonToTheme_2483028866(json_2483028867, opt_2483028868) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2483028869 = null;

    result_2483028869 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2483028869.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2483028867, [116,121,112,101])) {
    result_2483028869.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2483028869.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,115])) {
    Label1: {
      var key_2483028889 = [];
      var value_2483028890 = null;
      var colontmp__536871206 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,115]);
      if (ConstSet302[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871206 = nimCopy(colontmp__536871206, Temporary2.fields, NTI1627389966);
      var L_536871207 = len_1627392114(colontmp__536871206);
      if ((0 < colontmp__536871206.counter)) {
      var h_536871208 = colontmp__536871206.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871208)) break Label4;
            var nxt_536871210 = colontmp__536871206.data[chckIndx(h_536871208, 0, (colontmp__536871206.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871206.data[chckIndx(h_536871208, 0, (colontmp__536871206.data).length - 1)].Field0)) {
            var colontmp__536871212 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871206.data[chckIndx(h_536871208, 0, (colontmp__536871206.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871206.data[chckIndx(h_536871208, 0, (colontmp__536871206.data).length - 1)].Field3}, NTI1627391161);
            key_2483028889 = colontmp__536871212["Field0"];
            value_2483028890 = colontmp__536871212["Field1"];
            HEX5BHEX5DHEX3D_2483028936(result_2483028869.colors, key_2483028889, jsonTo_2483028802(value_2483028890, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871206) == L_536871207))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871208 = nxt_536871210;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2483030201 = null;
      var colontmp__536871223 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet304[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871223 = Temporary6.elems;
      var i_536871224 = 0;
      var L_536871225 = (colontmp__536871223).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871224 < L_536871225)) break Label8;
            item_2483030201 = colontmp__536871223[chckIndx(i_536871224, 0, (colontmp__536871223).length - 1)];
            var scopes_2483030206 = [];
            if (hasKey_1627393154(item_2483030201, [115,99,111,112,101])) {
            var scope_2483030207 = HEX5BHEX5D_1627393037(item_2483030201, [115,99,111,112,101]);
            if ((scope_2483030207.kind == 4)) {
            var Temporary9 = scope_2483030207;
            if (ConstSet305[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2483030206.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2483030219 = null;
                var colontmp__536871215 = [];
                var Temporary12 = scope_2483030207;
                if (ConstSet306[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871215 = Temporary12.elems;
                var i_536871216 = 0;
                var L_536871217 = (colontmp__536871215).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871216 < L_536871217)) break Label14;
                      scopeName_2483030219 = colontmp__536871215[chckIndx(i_536871216, 0, (colontmp__536871215).length - 1)];
                      var Temporary15 = scopeName_2483030219;
                      if (ConstSet307[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2483030206.push(Temporary16);;
                      i_536871216 = addInt(i_536871216, 1);
                      if (!(((colontmp__536871215).length == L_536871217))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2483030206.push([46]);;
            }
            
            var settings_2483030228 = HEX5BHEX5D_1627393037(item_2483030201, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2483030232 = [];
              var i_536871220 = 0;
              var L_536871221 = (scopes_2483030206).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871220 < L_536871221)) break Label19;
                    scope_2483030232 = scopes_2483030206[chckIndx(i_536871220, 0, (scopes_2483030206).length - 1)];
                    if (!(contains_2483028220(result_2483028869.tokenColors, scope_2483030232))) {
                    HEX5BHEX5DHEX3D_2483030334(result_2483028869.tokenColors, scope_2483030232, {foreground: none_2483028832(), background: none_2483028832(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle, jsonTo_2483028840(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2483027991);
                    }
                    
                    i_536871220 = addInt(i_536871220, 1);
                    if (!(((scopes_2483030206).length == L_536871221))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871224 = addInt(i_536871224, 1);
            if (!(((colontmp__536871223).length == L_536871225))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2483028869;

}

function some_2483031586(val_2483031588) {
  var result_2483031589 = ({val: null});

    if (!(!((val_2483031588 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2483031589.val = val_2483031588;

  return result_2483031589;

}

function none_2483031611() {
  var result_2483031617 = ({val: null});

  return result_2483031617;

}

function loadFromString_2483031576(input_2483031577, path_2483031578) {
  var result_2483031583 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2483031584 = parseJson_1627395313(input_2483031577);
    var newTheme_2483031585 = jsonToTheme_2483028866(json_2483031584, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2483031585.path = nimCopy(null, path_2483031578, NTI33554449);
    result_2483031583 = nimCopy(result_2483031583, some_2483031586(newTheme_2483031585), NTI2483029956);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2483031604 = [mnewString(0)];
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, path_2483031578, []);
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [58,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031604[0], NTI33554449)]);
    var fmtRes_2483031610 = [mnewString(0)];
    formatValue_721420459(fmtRes_2483031610, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031610[0], NTI33554449)]);
    result_2483031583 = nimCopy(result_2483031583, none_2483031611(), NTI2483029956);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2483031583;

}
  var Temporary276;
var rend_536870946 = [new_536870928()];
init_2315255917(rend_536870946[0]);
var initializedEditor_536870947 = [false];
var ed_536870948 = [newEditor_1291851015(2, rend_536870946[0])];
  var oHEX60gensym0_536870952 = loadFromString_2483031576(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291850932(oHEX60gensym0_536870952)) Temporary276 = false; else {    var theme_536870975 = get_1291850952(oHEX60gensym0_536870952);
    Temporary276 = true;  }if (Temporary276) {
ed_536870948[0].theme = theme_536870975;
}

setLayout_1291855474(ed_536870948[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870976 = [0.0];
var frameIndex_536870977 = [0];
var hasRequestedRerender_536870978 = [false];

function color_2365587528(r_2365587529, g_2365587530, b_2365587531, a_2365587532) {
  var result_2365587533 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2365587533 = nimCopy(result_2365587533, {r: r_2365587529, g: g_2365587530, b: b_2365587531, a: a_2365587532}, NTI2365587459);

  return result_2365587533;

}

function rawGet_3103785126(t_3103785129, key_3103785130, hc_3103785131, hc_3103785131_Idx) {
  var result_3103785132 = 0;

  BeforeRet: {
    hc_3103785131[hc_3103785131_Idx] = hash_1325400236(key_3103785130);
    if ((hc_3103785131[hc_3103785131_Idx] == 0)) {
    hc_3103785131[hc_3103785131_Idx] = 314159265;
    }
    
    if (((t_3103785129.data).length == 0)) {
    result_3103785132 = -1;
    break BeforeRet;
    }
    
    var h_3103785187 = (hc_3103785131[hc_3103785131_Idx] & (t_3103785129.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103785129.data[chckIndx(h_3103785187, 0, (t_3103785129.data).length - 1)].Field0)) break Label2;
          if (((t_3103785129.data[chckIndx(h_3103785187, 0, (t_3103785129.data).length - 1)].Field0 == hc_3103785131[hc_3103785131_Idx]) && (t_3103785129.data[chckIndx(h_3103785187, 0, (t_3103785129.data).length - 1)].Field1 == key_3103785130))) {
          result_3103785132 = h_3103785187;
          break BeforeRet;
          }
          
          h_3103785187 = nextTry_1308622883(h_3103785187, (t_3103785129.data).length - 1);
        }
    };
    result_3103785132 = subInt(-1, h_3103785187);
  };

  return result_3103785132;

}

function hasKey_3103785119(t_3103785122, key_3103785123) {
  var result_3103785124 = false;

    var hc_3103785125 = [0];
    result_3103785124 = (0 <= rawGet_3103785126(t_3103785122, key_3103785123, hc_3103785125, 0));

  return result_3103785124;

}

function contains_3103785113(t_3103785116, key_3103785117) {
  var result_3103785118 = false;

  BeforeRet: {
    result_3103785118 = hasKey_3103785119(t_3103785116, key_3103785117);
    break BeforeRet;
  };

  return result_3103785118;

}

function HEX5BHEX5D_3103785412(t_3103785415, key_3103785416) {
  var result_3103785417 = null;
  var result_3103785417_Idx = 0;

    var hcHEX60gensym22_3103785418 = [0];
    var indexHEX60gensym22_3103785425 = rawGet_3103785126(t_3103785415, key_3103785416, hcHEX60gensym22_3103785418, 0);
    if ((0 <= indexHEX60gensym22_3103785425)) {
    result_3103785417 = t_3103785415.data[chckIndx(indexHEX60gensym22_3103785425, 0, (t_3103785415.data).length - 1)]; result_3103785417_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850799(key_3103785416);
    }
    

  return [result_3103785417, result_3103785417_Idx];

}

function mustRehash_3103785704(t_3103785706) {
  var result_3103785707 = false;

    if (!((t_3103785706.counter < (t_3103785706.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3103785707 = ((mulInt((t_3103785706.data).length, 2) < mulInt(t_3103785706.counter, 3)) || (subInt((t_3103785706.data).length, t_3103785706.counter) < 4));

  return result_3103785707;

}

function rawInsert_3103786153(t_3103786157, data_3103786158, data_3103786158_Idx, key_3103786159, val_3103786160, hc_3103786161, h_3103786162) {
    data_3103786158[data_3103786158_Idx][chckIndx(h_3103786162, 0, (data_3103786158[data_3103786158_Idx]).length - 1)].Field1 = key_3103786159;
    data_3103786158[data_3103786158_Idx][chckIndx(h_3103786162, 0, (data_3103786158[data_3103786158_Idx]).length - 1)].Field2 = val_3103786160;
    data_3103786158[data_3103786158_Idx][chckIndx(h_3103786162, 0, (data_3103786158[data_3103786158_Idx]).length - 1)].Field0 = hc_3103786161;

  
}

function enlarge_3103785859(t_3103785862) {
    var n_3103785865 = [];
    n_3103785865 = new Array(chckRange(mulInt((t_3103785862.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3103785862.data).length, 2), 0, 2147483647) ; ++i) { n_3103785865[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3103785862.data; t_3103785862.data = n_3103785865; n_3103785865 = Temporary1;    Label2: {
      var i_3103785929 = 0;
      var colontmp__536871824 = 0;
      colontmp__536871824 = (n_3103785865).length - 1;
      var res_536871825 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871825 <= colontmp__536871824)) break Label4;
            i_3103785929 = res_536871825;
            var eh_3103785983 = n_3103785865[chckIndx(i_3103785929, 0, (n_3103785865).length - 1)].Field0;
            if (isFilled_1308622880(eh_3103785983)) {
            var j_3103785987 = (eh_3103785983 & (t_3103785862.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3103785862.data[chckIndx(j_3103785987, 0, (t_3103785862.data).length - 1)].Field0)) break Label6;
                  j_3103785987 = nextTry_1308622883(j_3103785987, (t_3103785862.data).length - 1);
                }
            };
            rawInsert_3103786153(t_3103785862, t_3103785862, "data", n_3103785865[chckIndx(i_3103785929, 0, (n_3103785865).length - 1)].Field1, n_3103785865[chckIndx(i_3103785929, 0, (n_3103785865).length - 1)].Field2, eh_3103785983, j_3103785987);
            }
            
            res_536871825 = addInt(res_536871825, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3103786322(t_3103786325, key_3103786326, hc_3103786327) {
  var result_3103786328 = 0;

  BeforeRet: {
    if (((t_3103786325.data).length == 0)) {
    result_3103786328 = -1;
    break BeforeRet;
    }
    
    var h_3103786379 = (hc_3103786327 & (t_3103786325.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103786325.data[chckIndx(h_3103786379, 0, (t_3103786325.data).length - 1)].Field0)) break Label2;
          if (((t_3103786325.data[chckIndx(h_3103786379, 0, (t_3103786325.data).length - 1)].Field0 == hc_3103786327) && (t_3103786325.data[chckIndx(h_3103786379, 0, (t_3103786325.data).length - 1)].Field1 == key_3103786326))) {
          result_3103786328 = h_3103786379;
          break BeforeRet;
          }
          
          h_3103786379 = nextTry_1308622883(h_3103786379, (t_3103786325.data).length - 1);
        }
    };
    result_3103786328 = subInt(-1, h_3103786379);
  };

  return result_3103786328;

}

function HEX5BHEX5DHEX3D_3103785531(t_3103785534, key_3103785535, val_3103785536) {
    if (((t_3103785534.data).length == 0)) {
    var correctSizeHEX60gensym5_3103785585 = slotsNeeded_1308622891(32);
    t_3103785534.counter = 0;
    t_3103785534.data = new Array(chckRange(correctSizeHEX60gensym5_3103785585, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3103785585, 0, 2147483647) ; ++i) { t_3103785534.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3103785590 = [0];
    var index_3103785597 = rawGet_3103785126(t_3103785534, key_3103785535, hc_3103785590, 0);
    if ((0 <= index_3103785597)) {
    t_3103785534.data[chckIndx(index_3103785597, 0, (t_3103785534.data).length - 1)].Field2 = val_3103785536;
    }
    else {
      if (((t_3103785534.data).length == 0)) {
      var correctSizeHEX60gensym8_3103785699 = slotsNeeded_1308622891(32);
      t_3103785534.counter = 0;
      t_3103785534.data = new Array(chckRange(correctSizeHEX60gensym8_3103785699, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3103785699, 0, 2147483647) ; ++i) { t_3103785534.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3103785704(t_3103785534)) {
      enlarge_3103785859(t_3103785534);
      index_3103785597 = rawGetKnownHC_3103786322(t_3103785534, key_3103785535, hc_3103785590[0]);
      }
      
      index_3103785597 = subInt(-1, index_3103785597);
      rawInsert_3103786153(t_3103785534, t_3103785534, "data", key_3103785535, val_3103785536, hc_3103785590[0], index_3103785597);
      t_3103785534.counter = addInt(t_3103785534.counter, 1);
    }
    

  
}

function activeHEX3D_2147483758(self_2147483759, newActive_2147483760) {
    if (!((newActive_2147483760 == self_2147483759.active))) {
    markDirty_2147483686(self_2147483759);
    }
    
    self_2147483759.active = newActive_2147483760;

  
}

function HEX5BHEX5D_3103786576(s_3103786580, x_3103786581) {
  var result_3103786582 = [];

    var a_3103786584 = x_3103786581.a;
    var L_3103786590 = addInt(subInt(subInt((s_3103786580).length, x_3103786581.b), a_3103786584), 1);
    result_3103786582 = new Array(chckRange(L_3103786590, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3103786590, 0, 2147483647) ; ++i) { result_3103786582[i] = null; }    Label1: {
      var i_3103786599 = 0;
      var i_536871829 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871829 < L_3103786590)) break Label3;
            i_3103786599 = i_536871829;
            result_3103786582[chckIndx(i_3103786599, 0, (result_3103786582).length - 1)] = s_3103786580[chckIndx(addInt(i_3103786599, a_3103786584), 0, (s_3103786580).length - 1)];
            i_536871829 = addInt(i_536871829, 1);
          }
      };
    };

  return result_3103786582;

}

function find_3103786804(a_3103786807, item_3103786808) {
  var result_3103786809 = 0;

  BeforeRet: {
    result_3103786809 = 0;
    Label1: {
      var i_3103786822 = null;
      var i_536871833 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871833 < (a_3103786807).length)) break Label3;
            i_3103786822 = a_3103786807[chckIndx(i_536871833, 0, (a_3103786807).length - 1)];
            if ((i_3103786822 == item_3103786808)) {
            break BeforeRet;
            }
            
            result_3103786809 = addInt(result_3103786809, 1);
            i_536871833 = addInt(i_536871833, 1);
          }
      };
    };
    result_3103786809 = -1;
  };

  return result_3103786809;

}

function contains_3103786799(a_3103786801, item_3103786802) {
  var result_3103786803 = false;

  BeforeRet: {
    result_3103786803 = (0 <= find_3103786804(a_3103786801, item_3103786802));
    break BeforeRet;
  };

  return result_3103786803;

}

function contains_2063597766(a_2063597767, b_2063597768) {
  var result_2063597769 = false;

  BeforeRet: {
    result_2063597769 = ((((a_2063597767.x <= b_2063597768.x) && ((b_2063597768.x + b_2063597768.w) <= (a_2063597767.x + a_2063597767.w))) && (a_2063597767.y <= b_2063597768.y)) && ((b_2063597768.y + b_2063597768.h) <= (a_2063597767.y + a_2063597767.h)));
    break BeforeRet;
  };

  return result_2063597769;

}

function invalidate_2332033255(self_2332033256, currentIndex_2332033257, rect_2332033258) {
  BeforeRet: {
    if ((!(intersects_2063597753(self_2332033256.lastBounds, rect_2332033258)) || ((currentIndex_2332033257 <= self_2332033256.lastInvalidation) && contains_2063597766(self_2332033256.lastInvalidationRect, rect_2332033258)))) {
    break BeforeRet;
    }
    
    self_2332033256.lastInvalidationRect = nimCopy(self_2332033256.lastInvalidationRect, and_2080374876(rect_2332033258, self_2332033256.lastBounds), NTI2080374789);
    self_2332033256.lastInvalidation = currentIndex_2332033257;
    if (isObj(self_2332033256.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033268 = null;
      var colontmp__536871836 = [];
      colontmp__536871836 = self_2332033256.children;
      var i_536871837 = 0;
      var L_536871838 = (colontmp__536871836).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871837 < L_536871838)) break Label3;
            c_2332033268 = colontmp__536871836[chckIndx(i_536871837, 0, (colontmp__536871836).length - 1)];
            invalidate_2332033255(c_2332033268, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871837 = addInt(i_536871837, 1);
            if (!(((colontmp__536871836).length == L_536871838))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033278 = null;
      var colontmp__536871841 = [];
      colontmp__536871841 = self_2332033256.children;
      var i_536871842 = 0;
      var L_536871843 = (colontmp__536871841).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871842 < L_536871843)) break Label6;
            c_2332033278 = colontmp__536871841[chckIndx(i_536871842, 0, (colontmp__536871841).length - 1)];
            invalidate_2332033255(c_2332033278, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871842 = addInt(i_536871842, 1);
            if (!(((colontmp__536871841).length == L_536871843))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033288 = null;
      var colontmp__536871846 = [];
      colontmp__536871846 = self_2332033256.children;
      var i_536871847 = 0;
      var L_536871848 = (colontmp__536871846).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871847 < L_536871848)) break Label9;
            c_2332033288 = colontmp__536871846[chckIndx(i_536871847, 0, (colontmp__536871846).length - 1)];
            invalidate_2332033255(c_2332033288, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871847 = addInt(i_536871847, 1);
            if (!(((colontmp__536871846).length == L_536871848))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033298 = null;
      var colontmp__536871851 = [];
      colontmp__536871851 = self_2332033256.children;
      var i_536871852 = 0;
      var L_536871853 = (colontmp__536871851).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871852 < L_536871853)) break Label12;
            c_2332033298 = colontmp__536871851[chckIndx(i_536871852, 0, (colontmp__536871851).length - 1)];
            invalidate_2332033255(c_2332033298, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871852 = addInt(i_536871852, 1);
            if (!(((colontmp__536871851).length == L_536871853))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3053453897(t_3053453900, key_3053453901) {
  var result_3053453902 = false;

    var hc_3053453903 = [0];
    result_3053453902 = (0 <= rawGet_2483028997(t_3053453900, key_3053453901, hc_3053453903, 0));

  return result_3053453902;

}

function contains_3053453891(t_3053453894, key_3053453895) {
  var result_3053453896 = false;

  BeforeRet: {
    result_3053453896 = hasKey_3053453897(t_3053453894, key_3053453895);
    break BeforeRet;
  };

  return result_3053453896;

}

function HEX5BHEX5D_3053453981(t_3053453984, key_3053453985) {
  var result_3053453986 = null;

    var hcHEX60gensym22_3053453987 = [0];
    var indexHEX60gensym22_3053453994 = rawGet_2483028997(t_3053453984, key_3053453985, hcHEX60gensym22_3053453987, 0);
    if ((0 <= indexHEX60gensym22_3053453994)) {
    result_3053453986 = t_3053453984.data[chckIndx(indexHEX60gensym22_3053453994, 0, (t_3053453984.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3053453985);
    }
    

  return result_3053453986;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871860 = 0;
      var colontmp__536871861 = 0;
      colontmp__536871860 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871861 = start_855639774;
      var res_536871862 = colontmp__536871860;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871861 <= res_536871862)) break Label5;
            i_855639789 = res_536871862;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871857 = 0;
              colontmp__536871857 = subInt((sub_855639773).length, 1);
              var res_536871858 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871858 <= colontmp__536871857)) break Label8;
                    j_855639794 = res_536871858;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871858 = addInt(res_536871858, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871862 = subInt(res_536871862, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3137339493(table_3137339495, key_3137339496, default_3137339497) {
  var result_3137339498 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3053453891(table_3137339495, key_3137339496)) {
    result_3137339498 = nimCopy(result_3137339498, HEX5BHEX5D_3053453981(table_3137339495, key_3137339496), NTI2365587459);
    break BeforeRet;
    }
    
    var index_3137339604 = nsuRFindStr(key_3137339496, [46], 0, -1);
    if (!((index_3137339604 == -1))) {
    result_3137339498 = nimCopy(result_3137339498, getCascading_3137339493(table_3137339495, HEX5BHEX5D_855639291(key_3137339496, HEX2EHEX2E_805306418(0, subInt(index_3137339604, 1))), default_3137339497), NTI2365587459);
    break BeforeRet;
    }
    
    result_3137339498 = nimCopy(result_3137339498, default_3137339497, NTI2365587459);
    break BeforeRet;
  };

  return result_3137339498;

}

function color_3137339482(theme_3137339484, name_3137339485, default_3137339486) {
  var result_3137339487 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3137339487 = nimCopy(result_3137339487, getCascading_3137339493(theme_3137339484.colors, name_3137339485, color_2449473569(default_3137339486)), NTI2365587459);
    break BeforeRet;
  };

  return result_3137339487;

}

function HEX3DHEX3D_2332033092(x_2332033094, y_2332033095) {
  var result_2332033096 = false;

  BeforeRet: {
    if (!((x_2332033094.r == y_2332033095.r))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.g == y_2332033095.g))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.b == y_2332033095.b))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.a == y_2332033095.a))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    result_2332033096 = true;
    break BeforeRet;
  };

  return result_2332033096;

}

function updateForegroundColor_2332033088(self_2332033089, color_2332033090, frameIndex_2332033091) {
    if (!(HEX3DHEX3D_2332033092(self_2332033089.foregroundColor, color_2332033090))) {
    self_2332033089.lastHierarchyChange = nimMax(self_2332033089.lastHierarchyChange, frameIndex_2332033091);
    }
    
    self_2332033089.foregroundColor = nimCopy(self_2332033089.foregroundColor, color_2332033090, NTI2365587459);

  
}

function updateLastHierarchyChangeFromChildren_2332033110(self_2332033111, currentIndex_2332033112) {
    if (isObj(self_2332033111.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033142 = null;
      var colontmp__536871865 = [];
      colontmp__536871865 = self_2332033111.children;
      var i_536871866 = 0;
      var L_536871867 = (colontmp__536871865).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871866 < L_536871867)) break Label3;
            c_2332033142 = colontmp__536871865[chckIndx(i_536871866, 0, (colontmp__536871865).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033142, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033142.lastHierarchyChange), c_2332033142.lastBoundsChange);
            i_536871866 = addInt(i_536871866, 1);
            if (!(((colontmp__536871865).length == L_536871867))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033153 = null;
      var colontmp__536871870 = [];
      colontmp__536871870 = self_2332033111.children;
      var i_536871871 = 0;
      var L_536871872 = (colontmp__536871870).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871871 < L_536871872)) break Label6;
            c_2332033153 = colontmp__536871870[chckIndx(i_536871871, 0, (colontmp__536871870).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033153, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033153.lastHierarchyChange), c_2332033153.lastBoundsChange);
            i_536871871 = addInt(i_536871871, 1);
            if (!(((colontmp__536871870).length == L_536871872))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033164 = null;
      var colontmp__536871875 = [];
      colontmp__536871875 = self_2332033111.children;
      var i_536871876 = 0;
      var L_536871877 = (colontmp__536871875).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871876 < L_536871877)) break Label9;
            c_2332033164 = colontmp__536871875[chckIndx(i_536871876, 0, (colontmp__536871875).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033164, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033164.lastHierarchyChange), c_2332033164.lastBoundsChange);
            i_536871876 = addInt(i_536871876, 1);
            if (!(((colontmp__536871875).length == L_536871877))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033175 = null;
      var colontmp__536871880 = [];
      colontmp__536871880 = self_2332033111.children;
      var i_536871881 = 0;
      var L_536871882 = (colontmp__536871880).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871881 < L_536871882)) break Label12;
            c_2332033175 = colontmp__536871880[chckIndx(i_536871881, 0, (colontmp__536871880).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033175, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033175.lastHierarchyChange), c_2332033175.lastBoundsChange);
            i_536871881 = addInt(i_536871881, 1);
            if (!(((colontmp__536871880).length == L_536871882))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033044)) {
    if (!(eqStrings(self_2332033111.text, self_2332033111.lastRenderedText))) {
    self_2332033111.lastHierarchyChange = nimMax(self_2332033111.lastHierarchyChange, currentIndex_2332033112);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3103784975(self_3103784976, frameIndex_3103784977, statusBarWidget_3103784978) {
    var Temporary1;

    var statusWidget_3103784979 = null;
    var commandLineWidget_3103784980 = null;
    if (((statusBarWidget_3103784978.children).length == 0)) {
    statusWidget_3103784979 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.5)}, NTI2332033035), lastHierarchyChange: frameIndex_3103784977, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3103784978.children.push(statusWidget_3103784979);;
    commandLineWidget_3103784980 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.5), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3103784977, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3103784978.children.push(commandLineWidget_3103784980);;
    layoutWidget_2332033348(statusWidget_3103784979, statusBarWidget_3103784978.lastBounds, frameIndex_3103784977, self_3103784976.platform.layoutOptions);
    layoutWidget_2332033348(commandLineWidget_3103784980, statusBarWidget_3103784978.lastBounds, frameIndex_3103784977, self_3103784976.platform.layoutOptions);
    }
    else {
      statusWidget_3103784979 = statusBarWidget_3103784978.children[chckIndx(0, 0, (statusBarWidget_3103784978.children).length - 1)];
      commandLineWidget_3103784980 = statusBarWidget_3103784978.children[chckIndx(1, 0, (statusBarWidget_3103784978.children).length - 1)];
    }
    
    var textColor_3103784997 = color_3137339482(self_3103784976.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((self_3103784976.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3103784976.currentMode;
    }
    
    statusWidget_3103784979.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2332033088(statusWidget_3103784979, textColor_3103784997, frameIndex_3103784977);
    updateLastHierarchyChangeFromChildren_2332033110(statusWidget_3103784979, frameIndex_3103784977);
    statusBarWidget_3103784978.lastHierarchyChange = nimMax(statusBarWidget_3103784978.lastHierarchyChange, statusWidget_3103784979.lastHierarchyChange);
    activeHEX3D_2147483758(getCommandLineTextEditor_1291850979(self_3103784976), self_3103784976.commandLineMode);
    updateWidget_3120562185(getCommandLineTextEditor_1291850979(self_3103784976), self_3103784976, commandLineWidget_3103784980, frameIndex_3103784977);
    statusBarWidget_3103784978.lastHierarchyChange = nimMax(statusBarWidget_3103784978.lastHierarchyChange, commandLineWidget_3103784980.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2332033299(self_2332033300, currentIndex_2332033301, recurse_2332033302) {
    if (isObj(self_2332033300.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033312 = null;
      var colontmp__536871885 = [];
      colontmp__536871885 = self_2332033300.children;
      var i_536871886 = 0;
      var L_536871887 = (colontmp__536871885).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871886 < L_536871887)) break Label3;
            c_2332033312 = colontmp__536871885[chckIndx(i_536871886, 0, (colontmp__536871885).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033312, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033312.lastInvalidation), currentIndex_2332033301);
            i_536871886 = addInt(i_536871886, 1);
            if (!(((colontmp__536871885).length == L_536871887))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033322 = null;
      var colontmp__536871890 = [];
      colontmp__536871890 = self_2332033300.children;
      var i_536871891 = 0;
      var L_536871892 = (colontmp__536871890).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871891 < L_536871892)) break Label6;
            c_2332033322 = colontmp__536871890[chckIndx(i_536871891, 0, (colontmp__536871890).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033322, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033322.lastInvalidation), currentIndex_2332033301);
            i_536871891 = addInt(i_536871891, 1);
            if (!(((colontmp__536871890).length == L_536871892))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033332 = null;
      var colontmp__536871895 = [];
      colontmp__536871895 = self_2332033300.children;
      var i_536871896 = 0;
      var L_536871897 = (colontmp__536871895).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871896 < L_536871897)) break Label9;
            c_2332033332 = colontmp__536871895[chckIndx(i_536871896, 0, (colontmp__536871895).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033332, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033332.lastInvalidation), currentIndex_2332033301);
            i_536871896 = addInt(i_536871896, 1);
            if (!(((colontmp__536871895).length == L_536871897))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033342 = null;
      var colontmp__536871900 = [];
      colontmp__536871900 = self_2332033300.children;
      var i_536871901 = 0;
      var L_536871902 = (colontmp__536871900).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871901 < L_536871902)) break Label12;
            c_2332033342 = colontmp__536871900[chckIndx(i_536871901, 0, (colontmp__536871900).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033342, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033342.lastInvalidation), currentIndex_2332033301);
            i_536871901 = addInt(i_536871901, 1);
            if (!(((colontmp__536871900).length == L_536871902))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3103785037(self_3103785038, frameIndex_3103785039) {
            var Temporary4;
            var Temporary8;

    if ((self_3103785038.widget == null)) {
    mainStack_3103784999[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), right: -1.0, logLayout: false, m_type: NTI2332033038, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3103785038.widget = mainStack_3103784999[0];
    mainPanel_3103785001[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3103784999[0].children.push(mainPanel_3103785001[0]);;
    viewPanel_3103785000[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), bottom: (-2.0 * totalLineHeight_2315255960(self_3103785038.platform)), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3103785001[0].children.push(viewPanel_3103785000[0]);;
    commandLineWidget_3103784998[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 1.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), top: (-2.0 * totalLineHeight_2315255960(self_3103785038.platform)), fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3103785001[0].children.push(commandLineWidget_3103784998[0]);;
    layoutWidget_2332033348(self_3103785038.widget, rect_2080374808(vec2_2097152992(0.0, 0.0), size_2315255913(self_3103785038.platform)), frameIndex_3103785039, self_3103785038.platform.layoutOptions);
    }
    
    if (viewPanel_3103785000[0].children.length < 0) { for (var i = viewPanel_3103785000[0].children.length ; i < 0 ; ++i) viewPanel_3103785000[0].children.push(null); }
               else { viewPanel_3103785000[0].children.length = 0; };
    var rects_3103785062 = layoutViews_1291848216(self_3103785038.layout, self_3103785038.layout_props, rect_2080374802(0.0, 0.0, 1.0, 1.0), (self_3103785038.views).length);
    Label1: {
      var i_3103785068 = 0;
      var view_3103785069 = null;
      var i_536871801 = 0;
      var L_536871802 = (self_3103785038.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871801 < L_536871802)) break Label3;
            i_3103785068 = i_536871801;
            view_3103785069 = self_3103785038.views[chckIndx(i_536871801, 0, (self_3103785038.views).length - 1)];
            var widget_3103785070 = null;
            if (contains_3103785113(widgetsPerEditor_3103785027[0], view_3103785069.editor.id)) {
            widget_3103785070 = (Temporary4 = HEX5BHEX5D_3103785412(widgetsPerEditor_3103785027[0], view_3103785069.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3103785070 = {lastHierarchyChange: frameIndex_3103785039, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3103785531(widgetsPerEditor_3103785027[0], view_3103785069.editor.id, widget_3103785070);
            }
            
            if ((i_3103785068 < (rects_3103785062).length)) {
            var colontmp__536871799 = xy_2080374820(rects_3103785062[chckIndx(i_3103785068, 0, (rects_3103785062).length - 1)]);
            var colontmp__536871800 = vec2_2097152992((rects_3103785062[chckIndx(i_3103785068, 0, (rects_3103785062).length - 1)].x + rects_3103785062[chckIndx(i_3103785068, 0, (rects_3103785062).length - 1)].w), (rects_3103785062[chckIndx(i_3103785068, 0, (rects_3103785062).length - 1)].y + rects_3103785062[chckIndx(i_3103785068, 0, (rects_3103785062).length - 1)].h));
            widget_3103785070.anchor = nimCopy(widget_3103785070.anchor, {Field0: nimCopy(null, colontmp__536871799, NTI2097152387), Field1: nimCopy(null, colontmp__536871800, NTI2097152387)}, NTI2332033035);
            layoutWidget_2332033348(widget_3103785070, viewPanel_3103785000[0].lastBounds, frameIndex_3103785039, self_3103785038.platform.layoutOptions);
            viewPanel_3103785000[0].children.push(widget_3103785070);;
            activeHEX3D_2147483758(view_3103785069.editor, (self_3103785038.currentView == i_3103785068));
            updateWidget_3120562185(view_3103785069.editor, self_3103785038, widget_3103785070, frameIndex_3103785039);
            viewPanel_3103785000[0].lastHierarchyChange = nimMax(viewPanel_3103785000[0].lastHierarchyChange, widget_3103785070.lastHierarchyChange);
            }
            
            i_536871801 = addInt(i_536871801, 1);
            if (!(((self_3103785038.views).length == L_536871802))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3103785001[0].lastHierarchyChange = nimMax(mainPanel_3103785001[0].lastHierarchyChange, viewPanel_3103785000[0].lastHierarchyChange);
    var lastPopups_3103786600 = HEX5BHEX5D_3103786576(mainStack_3103784999[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3103784999[0].children.length < 1) { for (var i = mainStack_3103784999[0].children.length ; i < 1 ; ++i) mainStack_3103784999[0].children.push(null); }
               else { mainStack_3103784999[0].children.length = 1; };
    Label5: {
      var i_3103786637 = 0;
      var popup_3103786638 = null;
      var i_536871808 = 0;
      var L_536871809 = (self_3103785038.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871808 < L_536871809)) break Label7;
            i_3103786637 = i_536871808;
            popup_3103786638 = self_3103785038.popups[chckIndx(i_536871808, 0, (self_3103785038.popups).length - 1)];
            var widget_3103786639 = null;
            if (contains_3103785113(widgetsPerEditor_3103785027[0], popup_3103786638.id)) {
            widget_3103786639 = (Temporary8 = HEX5BHEX5D_3103785412(widgetsPerEditor_3103785027[0], popup_3103786638.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3103786639 = {backgroundColor: color_2365587528(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3103785039, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3103785531(widgetsPerEditor_3103785027[0], popup_3103786638.id, widget_3103786639);
            }
            
            var colontmp__536871805 = vec2_2097152992(0.25, 0.25);
            var colontmp__536871806 = vec2_2097152992(0.75, 0.75);
            widget_3103786639.anchor = nimCopy(widget_3103786639.anchor, {Field0: nimCopy(null, colontmp__536871805, NTI2097152387), Field1: nimCopy(null, colontmp__536871806, NTI2097152387)}, NTI2332033035);
            layoutWidget_2332033348(widget_3103786639, mainStack_3103784999[0].lastBounds, frameIndex_3103785039, self_3103785038.platform.layoutOptions);
            mainStack_3103784999[0].children.push(widget_3103786639);;
            mainStack_3103784999[0].lastHierarchyChange = nimMax(mainStack_3103784999[0].lastHierarchyChange, widget_3103786639.lastHierarchyChange);
            i_536871808 = addInt(i_536871808, 1);
            if (!(((self_3103785038.popups).length == L_536871809))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3103786798 = null;
      var i_536871818 = 0;
      var L_536871819 = (lastPopups_3103786600).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871818 < L_536871819)) break Label11;
            p_3103786798 = lastPopups_3103786600[chckIndx(i_536871818, 0, (lastPopups_3103786600).length - 1)];
            Label12: {
              if (contains_3103786799(mainStack_3103784999[0].children, p_3103786798)) {
              break Label12;
              }
              
              Label13: {
                var c_3103786835 = null;
                var i_536871815 = 0;
                var L_536871816 = (mainStack_3103784999[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871815 < L_536871816)) break Label15;
                      c_3103786835 = mainStack_3103784999[0].children[chckIndx(i_536871815, 0, (mainStack_3103784999[0].children).length - 1)];
                      invalidate_2332033255(c_3103786835, frameIndex_3103785039, p_3103786798.lastBounds);
                      i_536871815 = addInt(i_536871815, 1);
                      if (!(((mainStack_3103784999[0].children).length == L_536871816))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871818 = addInt(i_536871818, 1);
            if (!(((lastPopups_3103786600).length == L_536871819))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3103784975(self_3103785038, frameIndex_3103785039, commandLineWidget_3103784998[0]);
    mainPanel_3103785001[0].lastHierarchyChange = nimMax(mainPanel_3103785001[0].lastHierarchyChange, commandLineWidget_3103784998[0].lastHierarchyChange);
    mainStack_3103784999[0].lastHierarchyChange = nimMax(mainStack_3103784999[0].lastHierarchyChange, mainPanel_3103785001[0].lastHierarchyChange);
    updateInvalidationFromChildren_2332033299(mainStack_3103784999[0], -1, false);
    self_3103785038.widget.lastHierarchyChange = nimMax(self_3103785038.widget.lastHierarchyChange, commandLineWidget_3103784998[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3103786854(self_3103786855, size_3103786856, frameIndex_3103786857) {
  BeforeRet: {
    self_3103786855.lastBounds = nimCopy(self_3103786855.lastBounds, rect_2080374808(vec2_2097152992(0.0, 0.0), size_3103786856), NTI2080374789);
    if ((self_3103786855.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2332033348(self_3103786855.widget, self_3103786855.lastBounds, frameIndex_3103786857, self_3103786855.platform.layoutOptions);
  };

  
}

function requestRender_536871227(redrawEverything_536871228) {
    
function HEX3Aanonymous_536871229(time_536871230) {
        hasRequestedRerender_536870978[0] = false;
        try {
        var layoutTime_536871236 = 0.0;
        var updateTime_536871237 = 0.0;
        var renderTime_536871238 = 0.0;
        Label2: {
          ed_536870948[0].frameTimer = nimCopy(ed_536870948[0].frameTimer, startTimer_2281701428(), NTI2281701407);
          var updateTimer_536871239 = startTimer_2281701428();
          updateWidgetTree_3103785037(ed_536870948[0], frameIndex_536870977[0]);
          updateTime_536871237 = ms_2281701425(elapsed_2281701439(updateTimer_536871239));
          var layoutTimer_536871240 = startTimer_2281701428();
          layoutWidgetTree_3103786854(ed_536870948[0], size_2315255913(rend_536870946[0]), frameIndex_536870977[0]);
          layoutTime_536871236 = ms_2281701425(elapsed_2281701439(layoutTimer_536871240));
          var renderTimer_536871241 = startTimer_2281701428();
          render_2315255904(rend_536870946[0], ed_536870948[0].widget, frameIndex_536870977[0]);
          renderTime_536871238 = ms_2281701425(elapsed_2281701439(renderTimer_536871241));
          frameTime_536870976[0] = ms_2281701425(elapsed_2281701439(ed_536870948[0].frameTimer));
        };
        if ((10.0 < frameTime_536870976[0])) {
        var fmtRes_536871246 = [mnewString(0)];
        fmtRes_536871246[0].push.apply(fmtRes_536871246[0], [70,114,97,109,101,58,32]);;
        formatValue_2332033664(fmtRes_536871246, 0, frameTime_536870976[0], [62,53,46,50]);
        fmtRes_536871246[0].push.apply(fmtRes_536871246[0], [109,115,32,40,117,58,32]);;
        formatValue_2332033664(fmtRes_536871246, 0, updateTime_536871237, [62,53,46,50]);
        fmtRes_536871246[0].push.apply(fmtRes_536871246[0], [109,115,44,32,108,58,32]);;
        formatValue_2332033664(fmtRes_536871246, 0, layoutTime_536871236, [62,53,46,50]);
        fmtRes_536871246[0].push.apply(fmtRes_536871246[0], [109,115,44,32,114,58,32]);;
        formatValue_2332033664(fmtRes_536871246, 0, renderTime_536871238, [62,53,46,50]);
        fmtRes_536871246[0].push.apply(fmtRes_536871246[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871246[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870977[0] = addInt(frameIndex_536870977[0], 1);
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870947[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870978[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871229);
  };

  
}

function subscribe_536871714(event_536871716, callback_536871718) {
  var result_536871719 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871719 = nimCopy(result_536871719, newId_2181038297(), NTI2181038083);
    event_536871716.handlers.push({Field0: nimCopy(null, result_536871719, NTI2181038083), Field1: callback_536871718});;

  return result_536871719;

}

function HEX3Aanonymous_536871296(event_536871314) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871345(event_536871363) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871394(event_536871412) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871443(event_536871461) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871492(event_536871510) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871541(event_536871559) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871590(event_536871608) {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871639() {
    requestRender_536871227(false);

  
}

function HEX3Aanonymous_536871688(redrawEverything_536871689) {
    requestRender_536871227(redrawEverything_536871689);

  
}
var _ = subscribe_1291851064(rend_536870946[0].onKeyPress, HEX3Aanonymous_536871296);
var _ = subscribe_1291851064(rend_536870946[0].onKeyRelease, HEX3Aanonymous_536871345);
var _ = subscribe_1291851064(rend_536870946[0].onRune, HEX3Aanonymous_536871394);
var _ = subscribe_1291851234(rend_536870946[0].onMousePress, HEX3Aanonymous_536871443);
var _ = subscribe_1291851234(rend_536870946[0].onMouseRelease, HEX3Aanonymous_536871492);
var _ = subscribe_1291851355(rend_536870946[0].onMouseMove, HEX3Aanonymous_536871541);
var _ = subscribe_1291851427(rend_536870946[0].onScroll, HEX3Aanonymous_536871590);
var _ = subscribe_1291851499(rend_536870946[0].onCloseRequested, HEX3Aanonymous_536871639);
var _ = subscribe_536871714(rend_536870946[0].onResized, HEX3Aanonymous_536871688);
Label310: {
  setHandleInputs_1291853982(ed_536870948[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291859327([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291859245([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291857665(ed_536870948[0], [101,100,105,116,111,114], [60,65,45,104,62], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291857665(ed_536870948[0], [101,100,105,116,111,114], [60,65,45,103,62], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870947[0] = true;
requestRender_536871227(false);

function formatValue_1291848853(result_1291848855, result_1291848855_Idx, value_1291848856, specifier_1291848857) {
    formatValue_721420459(result_1291848855, result_1291848855_Idx, HEX24_1627394481(value_1291848856), specifier_1291848857);

  
}

function handleUnknownDocumentEditorAction_1291848837(self_1291848838, editor_1291848839, action_1291848840, args_1291848841) {
  var result_1291848842 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848842 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848852 = [mnewString(0)];
    fmtRes_1291848852[0].push.apply(fmtRes_1291848852[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848852, 0, action_1291848840, []);
    fmtRes_1291848852[0].push.apply(fmtRes_1291848852[0], [32]);;
    formatValue_1291848853(fmtRes_1291848852, 0, args_1291848841, []);
    fmtRes_1291848852[0].push.apply(fmtRes_1291848852[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848852, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848852[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848842 = 0;
    break BeforeRet;
  };

  return result_1291848842;

}

function insert_2650816211(x_2650816213, x_2650816213_Idx, item_2650816214, i_2650816215) {
    var it_2650816235 = null;
    x_2650816213[x_2650816213_Idx] = x_2650816213[x_2650816213_Idx] || []; x_2650816213[x_2650816213_Idx].splice(i_2650816215, 0, it_2650816235);
    x_2650816213[x_2650816213_Idx][chckIndx(i_2650816215, 0, (x_2650816213[x_2650816213_Idx]).length - 1)] = item_2650816214;

  
}

function toJson_2650808733(self_2650808734, opt_2650808735) {
  var result_2650808736 = null;

    result_2650808736 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2650808736, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2650808736, [105,100], newJInt_1627390040(self_2650808734.id));

  return result_2650808736;

}

function none_2650808639() {
  var result_2650808645 = ({val: null});

  return result_2650808645;

}

function some_2650808698(val_2650808700) {
  var result_2650808701 = ({val: null});

    if (!(!((val_2650808700 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2650808701.val = val_2650808700;

  return result_2650808701;

}

function getTextDocumentEditor_2650808629(wrapper_2650808630) {
      var Temporary1;

  var result_2650808635 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2650808635 = nimCopy(result_2650808635, none_2650808639(), NTI2650804896);
    break BeforeRet;
    }
    
      var oHEX60gensym146_2650808648 = getEditorForId_1291850610(gEditor, wrapper_2650808630.id);
      if (!isSome_2650808653(oHEX60gensym146_2650808648)) Temporary1 = false; else {        var editor_2650808690 = get_2650808673(oHEX60gensym146_2650808648);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2650808690.m_type, NTI2650800335)) {
    result_2650808635 = nimCopy(result_2650808635, some_2650808698(editor_2650808690), NTI2650804896);
    break BeforeRet;
    }
    
    }
    
    result_2650808635 = nimCopy(result_2650808635, none_2650808639(), NTI2650804896);
    break BeforeRet;
  };

  return result_2650808635;

}

function isNone_2650808990(self_2650808992) {
  var result_2650808993 = false;

    result_2650808993 = (self_2650808992.val == null);

  return result_2650808993;

}

function get_2650809010(self_2650809012) {
  var result_2650809013 = null;

    if (isNone_2650808990(self_2650809012)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650809013 = self_2650809012["val"];

  return result_2650809013;

}

function setModeScript_2650808875_2650808982(self_2650808983, mode_2650808984) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym157_2650808985 = getTextDocumentEditor_2650808629(self_2650808983);
      if (isNone_2650808990(rHEX60gensym157_2650808985)) {
      break BeforeRet;
      }
      
    };
    setMode_2650808915(get_2650809010(rHEX60gensym157_2650808985), mode_2650808984);
  };

  
}

function fromJsonHook_2650808737(t_2650808738, jsonNode_2650808739) {
    t_2650808738.id = jsonTo_2650808740(HEX5BHEX5D_1627393037(jsonNode_2650808739, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2650809050(a_2650809052, b_2650809053, opt_2650809054) {
    if (!(!(HEX3DHEX3D_1627392026(b_2650809053, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2650809053}));
    }
    
    fromJsonHook_2650808737(a_2650809052, b_2650809053);

  
}

function jsonTo_2650809044(b_2650809046, opt_2650809048) {
  var result_2650809049 = [({id: 0})];

    fromJson_2650809050(result_2650809049[0], b_2650809046, opt_2650809048);

  return result_2650809049[0];

}

function setModeApi_2650809042(HEX3Atmp_2650808878) {
  var result_2650809043 = null;

    result_2650809043 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2650808875_2650808982(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650808878, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650808878, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym162_2650809066 = [115,101,116,77,111,100,101];
    var fmtRes_2650809071 = [mnewString(0)];
    fmtRes_2650809071[0].push.apply(fmtRes_2650809071[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809071, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym162_2650809066 || [],fmtRes_2650809071[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650809043;

}

function modeScript_2650809166_2650809174(self_2650809175) {
  var result_2650809176 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym171_2650809177 = getTextDocumentEditor_2650808629(self_2650809175);
      if (isNone_2650808990(rHEX60gensym171_2650809177)) {
      break BeforeRet;
      }
      
    };
    result_2650809176 = nimCopy(null, mode_2650809171(get_2650809010(rHEX60gensym171_2650809177)), NTI33554449);
  };

  return result_2650809176;

}

function modeApi_2650809204(HEX3Atmp_2650809168) {
  var result_2650809205 = null;

  BeforeRet: {
    result_2650809205 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2650809205 = toJson_1811939932(modeScript_2650809166_2650809174(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809168, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym177_2650809215 = [109,111,100,101];
    var fmtRes_2650809220 = [mnewString(0)];
    fmtRes_2650809220[0].push.apply(fmtRes_2650809220[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809220, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym177_2650809215 || [],fmtRes_2650809220[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650809205;

}

function getContextWithModeScript_2650809223_2650809232(self_2650809233, context_2650809234) {
  var result_2650809235 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym181_2650809236 = getTextDocumentEditor_2650808629(self_2650809233);
      if (isNone_2650808990(rHEX60gensym181_2650809236)) {
      break BeforeRet;
      }
      
    };
    result_2650809235 = nimCopy(null, getContextWithMode_2650808280(get_2650809010(rHEX60gensym181_2650809236), context_2650809234), NTI33554449);
  };

  return result_2650809235;

}

function getContextWithModeApi_2650809264(HEX3Atmp_2650809225) {
  var result_2650809265 = null;

  BeforeRet: {
    result_2650809265 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2650809265 = toJson_1811939932(getContextWithModeScript_2650809223_2650809232(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809225, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650809225, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_2650809280 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2650809285 = [mnewString(0)];
    fmtRes_2650809285[0].push.apply(fmtRes_2650809285[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809285, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_2650809280 || [],fmtRes_2650809285[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650809265;

}

function updateTargetColumnScript_2650809288_2650809296(self_2650809297, cursor_2650809298) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym191_2650809299 = getTextDocumentEditor_2650808629(self_2650809297);
      if (isNone_2650808990(rHEX60gensym191_2650809299)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2650809293(get_2650809010(rHEX60gensym191_2650809299), cursor_2650809298);
  };

  
}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet311[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_2650809351(s_2650809353) {
    var Temporary1;

  var result_2650809354 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2650809353))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2650809353 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2650809354 = Temporary1;

  return result_2650809354;

}

function fromJson_2650809339(a_2650809341, a_2650809341_Idx, b_2650809342, opt_2650809343) {
    if (!(!(HEX3DHEX3D_1627392026(b_2650809342, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2650809342}));
    }
    
    switch (b_2650809342.kind) {
    case 2:
      a_2650809341[a_2650809341_Idx] = chckRange(getBiggestInt_1627390129(b_2650809342, 0), 0, 4);
      break;
    case 4:
      a_2650809341[a_2650809341_Idx] = parseEnum_2650809351(getStr_1627390106(b_2650809342, []));
      break;
    default: 
      if (true) {
      var fmtRes_2650809379 = [mnewString(0)];
      fmtRes_2650809379[0].push.apply(fmtRes_2650809379[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2650809379, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2650809379[0].push.apply(fmtRes_2650809379[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2650809379, 0, pretty_1627394477(b_2650809342, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2650809379[0]);
      }
      
      break;
    }

  
}

function jsonTo_2650809333(b_2650809335, opt_2650809337) {
  var result_2650809338 = [0];

    fromJson_2650809339(result_2650809338, 0, b_2650809335, opt_2650809337);

  return result_2650809338[0];

}

function updateTargetColumnApi_2650809326(HEX3Atmp_2650809290) {
  var result_2650809327 = null;

    result_2650809327 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2650809288_2650809296(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809290, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650809290, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym196_2650809383 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2650809388 = [mnewString(0)];
    fmtRes_2650809388[0].push.apply(fmtRes_2650809388[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809388, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym196_2650809383 || [],fmtRes_2650809388[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650809327;

}

function invertSelectionScript_2650809405_2650809412(self_2650809413) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym205_2650809414 = getTextDocumentEditor_2650808629(self_2650809413);
      if (isNone_2650808990(rHEX60gensym205_2650809414)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2650809410(get_2650809010(rHEX60gensym205_2650809414));
  };

  
}

function invertSelectionApi_2650809440(HEX3Atmp_2650809407) {
  var result_2650809441 = null;

    result_2650809441 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2650809405_2650809412(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809407, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym210_2650809447 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2650809452 = [mnewString(0)];
    fmtRes_2650809452[0].push.apply(fmtRes_2650809452[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809452, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym210_2650809447 || [],fmtRes_2650809452[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650809441;

}

function insertScript_2650809468_2650809481(self_2650809482, selections_2650809483, text_2650809484, notify_2650809485, record_2650809486, autoIndent_2650809487) {
  var result_2650809488 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym218_2650809489 = getTextDocumentEditor_2650808629(self_2650809482);
      if (isNone_2650808990(rHEX60gensym218_2650809489)) {
      break BeforeRet;
      }
      
    };
    result_2650809488 = nimCopy(null, insert_2650809473(get_2650809010(rHEX60gensym218_2650809489), selections_2650809483, text_2650809484, notify_2650809485, record_2650809486, autoIndent_2650809487), NTI2650805579);
  };

  return result_2650809488;

}

function insertApi_2650809521(HEX3Atmp_2650809470) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2650809522 = null;

  BeforeRet: {
    result_2650809522 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2650809470))) {
      Temporary6 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2650809470))) {
      Temporary8 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2650809470))) {
      Temporary10 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2650809522 = toJson_2650809820(insertScript_2650809468_2650809481(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809528(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650809470, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym224_2650809876 = [105,110,115,101,114,116];
    var fmtRes_2650809881 = [mnewString(0)];
    fmtRes_2650809881[0].push.apply(fmtRes_2650809881[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650809881, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym224_2650809876 || [],fmtRes_2650809881[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650809522;

}

function deleteScript_2650809965_2650809976(self_2650809977, selections_2650809978, notify_2650809979, record_2650809980) {
  var result_2650809981 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym251_2650809982 = getTextDocumentEditor_2650808629(self_2650809977);
      if (isNone_2650808990(rHEX60gensym251_2650809982)) {
      break BeforeRet;
      }
      
    };
    result_2650809981 = nimCopy(null, delete_2650809970(get_2650809010(rHEX60gensym251_2650809982), selections_2650809978, notify_2650809979, record_2650809980), NTI2650806095);
  };

  return result_2650809981;

}

function deleteApi_2650810012(HEX3Atmp_2650809967) {
      var Temporary5;
      var Temporary7;

  var result_2650810013 = null;

  BeforeRet: {
    result_2650810013 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650809967))) {
      Temporary5 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650809967, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650809967))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650809967, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2650810013 = toJson_2650809820(deleteScript_2650809965_2650809976(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650809967, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809528(HEX5BHEX5D_1627393116(HEX3Atmp_2650809967, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym257_2650810038 = [100,101,108,101,116,101];
    var fmtRes_2650810043 = [mnewString(0)];
    fmtRes_2650810043[0].push.apply(fmtRes_2650810043[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810043, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym257_2650810038 || [],fmtRes_2650810043[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650810013;

}

function selectPrevScript_2650810081_2650810233(self_2650810234) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym262_2650810235 = getTextDocumentEditor_2650808629(self_2650810234);
      if (isNone_2650808990(rHEX60gensym262_2650810235)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2650810086(get_2650809010(rHEX60gensym262_2650810235));
  };

  
}

function selectPrevApi_2650810261(HEX3Atmp_2650810083) {
  var result_2650810262 = null;

    result_2650810262 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2650810081_2650810233(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810083, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym267_2650810268 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2650810273 = [mnewString(0)];
    fmtRes_2650810273[0].push.apply(fmtRes_2650810273[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810273, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym267_2650810268 || [],fmtRes_2650810273[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810262;

}

function selectNextScript_2650810277_2650810406(self_2650810407) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym273_2650810408 = getTextDocumentEditor_2650808629(self_2650810407);
      if (isNone_2650808990(rHEX60gensym273_2650810408)) {
      break BeforeRet;
      }
      
    };
    selectNext_2650810282(get_2650809010(rHEX60gensym273_2650810408));
  };

  
}

function selectNextApi_2650810434(HEX3Atmp_2650810279) {
  var result_2650810435 = null;

    result_2650810435 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2650810277_2650810406(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810279, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym278_2650810441 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2650810446 = [mnewString(0)];
    fmtRes_2650810446[0].push.apply(fmtRes_2650810446[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810446, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym278_2650810441 || [],fmtRes_2650810446[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810435;

}

function selectInsideScript_2650810449_2650810468(self_2650810469, cursor_2650810470) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym283_2650810471 = getTextDocumentEditor_2650808629(self_2650810469);
      if (isNone_2650808990(rHEX60gensym283_2650810471)) {
      break BeforeRet;
      }
      
    };
    selectInside_2650810454(get_2650809010(rHEX60gensym283_2650810471), cursor_2650810470);
  };

  
}

function jsonTo_2650810505(b_2650810507, opt_2650810509) {
  var result_2650810510 = [{Field0: 0, Field1: 0}];

    fromJson_2650809643(result_2650810510[0], b_2650810507, opt_2650810509);

  return result_2650810510[0];

}

function selectInsideApi_2650810498(HEX3Atmp_2650810451) {
  var result_2650810499 = null;

    result_2650810499 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2650810449_2650810468(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810451, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810505(HEX5BHEX5D_1627393116(HEX3Atmp_2650810451, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym288_2650810516 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2650810521 = [mnewString(0)];
    fmtRes_2650810521[0].push.apply(fmtRes_2650810521[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810521, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym288_2650810516 || [],fmtRes_2650810521[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810499;

}

function selectInsideCurrentScript_2650810526_2650810533(self_2650810534) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym292_2650810535 = getTextDocumentEditor_2650808629(self_2650810534);
      if (isNone_2650808990(rHEX60gensym292_2650810535)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2650810531(get_2650809010(rHEX60gensym292_2650810535));
  };

  
}

function selectInsideCurrentApi_2650810561(HEX3Atmp_2650810528) {
  var result_2650810562 = null;

    result_2650810562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2650810526_2650810533(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810528, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym297_2650810568 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2650810573 = [mnewString(0)];
    fmtRes_2650810573[0].push.apply(fmtRes_2650810573[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810573, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym297_2650810568 || [],fmtRes_2650810573[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810562;

}

function selectLineScript_2650810576_2650810584(self_2650810585, line_2650810586) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym301_2650810587 = getTextDocumentEditor_2650808629(self_2650810585);
      if (isNone_2650808990(rHEX60gensym301_2650810587)) {
      break BeforeRet;
      }
      
    };
    selectLine_2650810581(get_2650809010(rHEX60gensym301_2650810587), line_2650810586);
  };

  
}

function selectLineApi_2650810614(HEX3Atmp_2650810578) {
  var result_2650810615 = null;

    result_2650810615 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2650810576_2650810584(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810578, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650810578, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym306_2650810626 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2650810631 = [mnewString(0)];
    fmtRes_2650810631[0].push.apply(fmtRes_2650810631[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810631, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym306_2650810626 || [],fmtRes_2650810631[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810615;

}

function selectLineCurrentScript_2650810634_2650810641(self_2650810642) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym309_2650810643 = getTextDocumentEditor_2650808629(self_2650810642);
      if (isNone_2650808990(rHEX60gensym309_2650810643)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2650810639(get_2650809010(rHEX60gensym309_2650810643));
  };

  
}

function selectLineCurrentApi_2650810669(HEX3Atmp_2650810636) {
  var result_2650810670 = null;

    result_2650810670 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2650810634_2650810641(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810636, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym314_2650810676 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2650810681 = [mnewString(0)];
    fmtRes_2650810681[0].push.apply(fmtRes_2650810681[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810681, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym314_2650810676 || [],fmtRes_2650810681[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810670;

}

function selectParentTsScript_2650810684_2650810704(self_2650810705, selection_2650810706) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym318_2650810707 = getTextDocumentEditor_2650808629(self_2650810705);
      if (isNone_2650808990(rHEX60gensym318_2650810707)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2650810689(get_2650809010(rHEX60gensym318_2650810707), selection_2650810706);
  };

  
}

function selectParentTsApi_2650810734(HEX3Atmp_2650810686) {
  var result_2650810735 = null;

    result_2650810735 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2650810684_2650810704(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810686, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810741(HEX5BHEX5D_1627393116(HEX3Atmp_2650810686, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym323_2650810752 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2650810757 = [mnewString(0)];
    fmtRes_2650810757[0].push.apply(fmtRes_2650810757[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810757, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym323_2650810752 || [],fmtRes_2650810757[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810735;

}

function selectParentCurrentTsScript_2650810767_2650810774(self_2650810775) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym327_2650810776 = getTextDocumentEditor_2650808629(self_2650810775);
      if (isNone_2650808990(rHEX60gensym327_2650810776)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2650810772(get_2650809010(rHEX60gensym327_2650810776));
  };

  
}

function selectParentCurrentTsApi_2650810802(HEX3Atmp_2650810769) {
  var result_2650810803 = null;

    result_2650810803 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2650810767_2650810774(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810769, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym332_2650810809 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2650810814 = [mnewString(0)];
    fmtRes_2650810814[0].push.apply(fmtRes_2650810814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym332_2650810809 || [],fmtRes_2650810814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810803;

}

function insertTextScript_2650810820_2650810829(self_2650810830, text_2650810831) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym337_2650810832 = getTextDocumentEditor_2650808629(self_2650810830);
      if (isNone_2650808990(rHEX60gensym337_2650810832)) {
      break BeforeRet;
      }
      
    };
    insertText_2650810825(get_2650809010(rHEX60gensym337_2650810832), text_2650810831);
  };

  
}

function insertTextApi_2650810859(HEX3Atmp_2650810822) {
  var result_2650810860 = null;

    result_2650810860 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2650810820_2650810829(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810822, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650810822, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym342_2650810871 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2650810876 = [mnewString(0)];
    fmtRes_2650810876[0].push.apply(fmtRes_2650810876[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810876, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym342_2650810871 || [],fmtRes_2650810876[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810860;

}

function undoScript_2650810892_2650810947(self_2650810948) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym347_2650810949 = getTextDocumentEditor_2650808629(self_2650810948);
      if (isNone_2650808990(rHEX60gensym347_2650810949)) {
      break BeforeRet;
      }
      
    };
    undo_2650810897(get_2650809010(rHEX60gensym347_2650810949));
  };

  
}

function undoApi_2650810975(HEX3Atmp_2650810894) {
  var result_2650810976 = null;

    result_2650810976 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2650810892_2650810947(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810894, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym352_2650810982 = [117,110,100,111];
    var fmtRes_2650810987 = [mnewString(0)];
    fmtRes_2650810987[0].push.apply(fmtRes_2650810987[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650810987, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym352_2650810982 || [],fmtRes_2650810987[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650810976;

}

function redoScript_2650810994_2650811027(self_2650811028) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym357_2650811029 = getTextDocumentEditor_2650808629(self_2650811028);
      if (isNone_2650808990(rHEX60gensym357_2650811029)) {
      break BeforeRet;
      }
      
    };
    redo_2650810999(get_2650809010(rHEX60gensym357_2650811029));
  };

  
}

function redoApi_2650811055(HEX3Atmp_2650810996) {
  var result_2650811056 = null;

    result_2650811056 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2650810994_2650811027(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650810996, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym362_2650811062 = [114,101,100,111];
    var fmtRes_2650811067 = [mnewString(0)];
    fmtRes_2650811067[0].push.apply(fmtRes_2650811067[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811067, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym362_2650811062 || [],fmtRes_2650811067[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650811056;

}

function scrollTextScript_2650811074_2650811086(self_2650811087, amount_2650811088) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym367_2650811089 = getTextDocumentEditor_2650808629(self_2650811087);
      if (isNone_2650808990(rHEX60gensym367_2650811089)) {
      break BeforeRet;
      }
      
    };
    scrollText_2650811079(get_2650809010(rHEX60gensym367_2650811089), amount_2650811088);
  };

  
}

function scrollTextApi_2650811116(HEX3Atmp_2650811076) {
  var result_2650811117 = null;

    result_2650811117 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2650811074_2650811086(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811076, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650811123(HEX5BHEX5D_1627393116(HEX3Atmp_2650811076, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym372_2650811186 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2650811191 = [mnewString(0)];
    fmtRes_2650811191[0].push.apply(fmtRes_2650811191[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811191, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym372_2650811186 || [],fmtRes_2650811191[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650811117;

}

function duplicateLastSelectionScript_2650811194_2650811243(self_2650811244) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym381_2650811245 = getTextDocumentEditor_2650808629(self_2650811244);
      if (isNone_2650808990(rHEX60gensym381_2650811245)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2650811199(get_2650809010(rHEX60gensym381_2650811245));
  };

  
}

function duplicateLastSelectionApi_2650811271(HEX3Atmp_2650811196) {
  var result_2650811272 = null;

    result_2650811272 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2650811194_2650811243(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811196, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym386_2650811278 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2650811283 = [mnewString(0)];
    fmtRes_2650811283[0].push.apply(fmtRes_2650811283[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811283, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym386_2650811278 || [],fmtRes_2650811283[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650811272;

}

function addCursorBelowScript_2650811294_2650811313(self_2650811314) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym389_2650811315 = getTextDocumentEditor_2650808629(self_2650811314);
      if (isNone_2650808990(rHEX60gensym389_2650811315)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2650811299(get_2650809010(rHEX60gensym389_2650811315));
  };

  
}

function addCursorBelowApi_2650811341(HEX3Atmp_2650811296) {
  var result_2650811342 = null;

    result_2650811342 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2650811294_2650811313(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811296, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym394_2650811348 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2650811353 = [mnewString(0)];
    fmtRes_2650811353[0].push.apply(fmtRes_2650811353[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811353, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym394_2650811348 || [],fmtRes_2650811353[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650811342;

}

function addCursorAboveScript_2650811360_2650811379(self_2650811380) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym397_2650811381 = getTextDocumentEditor_2650808629(self_2650811380);
      if (isNone_2650808990(rHEX60gensym397_2650811381)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2650811365(get_2650809010(rHEX60gensym397_2650811381));
  };

  
}

function addCursorAboveApi_2650811407(HEX3Atmp_2650811362) {
  var result_2650811408 = null;

    result_2650811408 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2650811360_2650811379(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811362, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym402_2650811414 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2650811419 = [mnewString(0)];
    fmtRes_2650811419[0].push.apply(fmtRes_2650811419[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811419, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym402_2650811414 || [],fmtRes_2650811419[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650811408;

}

function getPrevFindResultScript_2650811422_2650811683(self_2650811684, cursor_2650811685, offset_2650811686) {
  var result_2650811687 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym407_2650811688 = getTextDocumentEditor_2650808629(self_2650811684);
      if (isNone_2650808990(rHEX60gensym407_2650811688)) {
      break BeforeRet;
      }
      
    };
    result_2650811687 = nimCopy(result_2650811687, getPrevFindResult_2650808209(get_2650809010(rHEX60gensym407_2650811688), cursor_2650811685, offset_2650811686), NTI2231369739);
  };

  return result_2650811687;

}

function getPrevFindResultApi_2650811717(HEX3Atmp_2650811424) {
      var Temporary5;

  var result_2650811718 = null;

  BeforeRet: {
    result_2650811718 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650811424))) {
      Temporary5 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650811424, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2650811718 = toJson_2650809832(getPrevFindResultScript_2650811422_2650811683(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811424, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810505(HEX5BHEX5D_1627393116(HEX3Atmp_2650811424, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym413_2650811738 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2650811743 = [mnewString(0)];
    fmtRes_2650811743[0].push.apply(fmtRes_2650811743[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811743, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym413_2650811738 || [],fmtRes_2650811743[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650811718;

}

function getNextFindResultScript_2650811754_2650811912(self_2650811913, cursor_2650811914, offset_2650811915) {
  var result_2650811916 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym419_2650811917 = getTextDocumentEditor_2650808629(self_2650811913);
      if (isNone_2650808990(rHEX60gensym419_2650811917)) {
      break BeforeRet;
      }
      
    };
    result_2650811916 = nimCopy(result_2650811916, getNextFindResult_2650808213(get_2650809010(rHEX60gensym419_2650811917), cursor_2650811914, offset_2650811915), NTI2231369739);
  };

  return result_2650811916;

}

function getNextFindResultApi_2650811946(HEX3Atmp_2650811756) {
      var Temporary5;

  var result_2650811947 = null;

  BeforeRet: {
    result_2650811947 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650811756))) {
      Temporary5 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650811756, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2650811947 = toJson_2650809832(getNextFindResultScript_2650811754_2650811912(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811756, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810505(HEX5BHEX5D_1627393116(HEX3Atmp_2650811756, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym425_2650811967 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2650811972 = [mnewString(0)];
    fmtRes_2650811972[0].push.apply(fmtRes_2650811972[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650811972, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym425_2650811967 || [],fmtRes_2650811972[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650811947;

}

function addNextFindResultToSelectionScript_2650811985_2650812000(self_2650812001) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym429_2650812002 = getTextDocumentEditor_2650808629(self_2650812001);
      if (isNone_2650808990(rHEX60gensym429_2650812002)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2650811990(get_2650809010(rHEX60gensym429_2650812002));
  };

  
}

function addNextFindResultToSelectionApi_2650812028(HEX3Atmp_2650811987) {
  var result_2650812029 = null;

    result_2650812029 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2650811985_2650812000(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650811987, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym434_2650812035 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2650812040 = [mnewString(0)];
    fmtRes_2650812040[0].push.apply(fmtRes_2650812040[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812040, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym434_2650812035 || [],fmtRes_2650812040[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812029;

}

function addPrevFindResultToSelectionScript_2650812043_2650812058(self_2650812059) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym437_2650812060 = getTextDocumentEditor_2650808629(self_2650812059);
      if (isNone_2650808990(rHEX60gensym437_2650812060)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2650812048(get_2650809010(rHEX60gensym437_2650812060));
  };

  
}

function addPrevFindResultToSelectionApi_2650812086(HEX3Atmp_2650812045) {
  var result_2650812087 = null;

    result_2650812087 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2650812043_2650812058(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812045, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym442_2650812093 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2650812098 = [mnewString(0)];
    fmtRes_2650812098[0].push.apply(fmtRes_2650812098[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812098, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym442_2650812093 || [],fmtRes_2650812098[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812087;

}

function setAllFindResultToSelectionScript_2650812101_2650812402(self_2650812403) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym445_2650812404 = getTextDocumentEditor_2650808629(self_2650812403);
      if (isNone_2650808990(rHEX60gensym445_2650812404)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2650812106(get_2650809010(rHEX60gensym445_2650812404));
  };

  
}

function setAllFindResultToSelectionApi_2650812430(HEX3Atmp_2650812103) {
  var result_2650812431 = null;

    result_2650812431 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2650812101_2650812402(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812103, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2650812437 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2650812442 = [mnewString(0)];
    fmtRes_2650812442[0].push.apply(fmtRes_2650812442[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812442, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2650812437 || [],fmtRes_2650812442[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812431;

}

function moveCursorColumnScript_2650812460_2650812488(self_2650812489, distance_2650812490, cursor_2650812491, all_2650812492) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym458_2650812493 = getTextDocumentEditor_2650808629(self_2650812489);
      if (isNone_2650808990(rHEX60gensym458_2650812493)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2650812465(get_2650809010(rHEX60gensym458_2650812493), distance_2650812490, cursor_2650812491, all_2650812492);
  };

  
}

function moveCursorColumnApi_2650812522(HEX3Atmp_2650812462) {
      var Temporary5;
      var Temporary7;

  var result_2650812523 = null;

    result_2650812523 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650812462))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812462, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650812462))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812462, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2650812460_2650812488(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812462, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650812462, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym463_2650812544 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2650812549 = [mnewString(0)];
    fmtRes_2650812549[0].push.apply(fmtRes_2650812549[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812549, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym463_2650812544 || [],fmtRes_2650812549[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812523;

}

function moveCursorLineScript_2650812568_2650812578(self_2650812579, distance_2650812580, cursor_2650812581, all_2650812582) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym471_2650812583 = getTextDocumentEditor_2650808629(self_2650812579);
      if (isNone_2650808990(rHEX60gensym471_2650812583)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2650812573(get_2650809010(rHEX60gensym471_2650812583), distance_2650812580, cursor_2650812581, all_2650812582);
  };

  
}

function moveCursorLineApi_2650812612(HEX3Atmp_2650812570) {
      var Temporary5;
      var Temporary7;

  var result_2650812613 = null;

    result_2650812613 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650812570))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812570, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650812570))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812570, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2650812568_2650812578(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812570, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650812570, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym476_2650812634 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2650812639 = [mnewString(0)];
    fmtRes_2650812639[0].push.apply(fmtRes_2650812639[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812639, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym476_2650812634 || [],fmtRes_2650812639[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812613;

}

function moveCursorHomeScript_2650812642_2650812651(self_2650812652, cursor_2650812653, all_2650812654) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_2650812655 = getTextDocumentEditor_2650808629(self_2650812652);
      if (isNone_2650808990(rHEX60gensym483_2650812655)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2650812647(get_2650809010(rHEX60gensym483_2650812655), cursor_2650812653, all_2650812654);
  };

  
}

function moveCursorHomeApi_2650812683(HEX3Atmp_2650812644) {
      var Temporary4;
      var Temporary6;

  var result_2650812684 = null;

    result_2650812684 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2650812644))) {
      Temporary4 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812644, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2650812644))) {
      Temporary6 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812644, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2650812642_2650812651(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812644, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_2650812700 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2650812705 = [mnewString(0)];
    fmtRes_2650812705[0].push.apply(fmtRes_2650812705[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812705, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_2650812700 || [],fmtRes_2650812705[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812684;

}

function moveCursorEndScript_2650812710_2650812719(self_2650812720, cursor_2650812721, all_2650812722) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_2650812723 = getTextDocumentEditor_2650808629(self_2650812720);
      if (isNone_2650808990(rHEX60gensym495_2650812723)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2650812715(get_2650809010(rHEX60gensym495_2650812723), cursor_2650812721, all_2650812722);
  };

  
}

function moveCursorEndApi_2650812751(HEX3Atmp_2650812712) {
      var Temporary4;
      var Temporary6;

  var result_2650812752 = null;

    result_2650812752 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2650812712))) {
      Temporary4 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812712, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2650812712))) {
      Temporary6 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812712, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2650812710_2650812719(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812712, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_2650812768 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2650812773 = [mnewString(0)];
    fmtRes_2650812773[0].push.apply(fmtRes_2650812773[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812773, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_2650812768 || [],fmtRes_2650812773[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812752;

}

function moveCursorToScript_2650812778_2650812795(self_2650812796, str_2650812797, cursor_2650812798, all_2650812799) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym508_2650812800 = getTextDocumentEditor_2650808629(self_2650812796);
      if (isNone_2650808990(rHEX60gensym508_2650812800)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2650812783(get_2650809010(rHEX60gensym508_2650812800), str_2650812797, cursor_2650812798, all_2650812799);
  };

  
}

function moveCursorToApi_2650812829(HEX3Atmp_2650812780) {
      var Temporary5;
      var Temporary7;

  var result_2650812830 = null;

    result_2650812830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650812780))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812780, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650812780))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812780, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2650812778_2650812795(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812780, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650812780, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym513_2650812851 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2650812856 = [mnewString(0)];
    fmtRes_2650812856[0].push.apply(fmtRes_2650812856[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812856, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym513_2650812851 || [],fmtRes_2650812856[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812830;

}

function moveCursorBeforeScript_2650812861_2650812878(self_2650812879, str_2650812880, cursor_2650812881, all_2650812882) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym522_2650812883 = getTextDocumentEditor_2650808629(self_2650812879);
      if (isNone_2650808990(rHEX60gensym522_2650812883)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2650812866(get_2650809010(rHEX60gensym522_2650812883), str_2650812880, cursor_2650812881, all_2650812882);
  };

  
}

function moveCursorBeforeApi_2650812912(HEX3Atmp_2650812863) {
      var Temporary5;
      var Temporary7;

  var result_2650812913 = null;

    result_2650812913 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650812863))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812863, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650812863))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812863, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2650812861_2650812878(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812863, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650812863, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym527_2650812934 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2650812939 = [mnewString(0)];
    fmtRes_2650812939[0].push.apply(fmtRes_2650812939[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650812939, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym527_2650812934 || [],fmtRes_2650812939[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812913;

}

function moveCursorNextFindResultScript_2650812944_2650812953(self_2650812954, cursor_2650812955, all_2650812956) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym535_2650812957 = getTextDocumentEditor_2650808629(self_2650812954);
      if (isNone_2650808990(rHEX60gensym535_2650812957)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2650812949(get_2650809010(rHEX60gensym535_2650812957), cursor_2650812955, all_2650812956);
  };

  
}

function moveCursorNextFindResultApi_2650812985(HEX3Atmp_2650812946) {
      var Temporary4;
      var Temporary6;

  var result_2650812986 = null;

    result_2650812986 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2650812946))) {
      Temporary4 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650812946, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2650812946))) {
      Temporary6 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650812946, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2650812944_2650812953(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650812946, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym540_2650813002 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2650813007 = [mnewString(0)];
    fmtRes_2650813007[0].push.apply(fmtRes_2650813007[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813007, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym540_2650813002 || [],fmtRes_2650813007[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650812986;

}

function moveCursorPrevFindResultScript_2650813010_2650813019(self_2650813020, cursor_2650813021, all_2650813022) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym547_2650813023 = getTextDocumentEditor_2650808629(self_2650813020);
      if (isNone_2650808990(rHEX60gensym547_2650813023)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2650813015(get_2650809010(rHEX60gensym547_2650813023), cursor_2650813021, all_2650813022);
  };

  
}

function moveCursorPrevFindResultApi_2650813051(HEX3Atmp_2650813012) {
      var Temporary4;
      var Temporary6;

  var result_2650813052 = null;

    result_2650813052 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2650813012))) {
      Temporary4 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650813012, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2650813012))) {
      Temporary6 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650813012, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2650813010_2650813019(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813012, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym552_2650813068 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2650813073 = [mnewString(0)];
    fmtRes_2650813073[0].push.apply(fmtRes_2650813073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym552_2650813068 || [],fmtRes_2650813073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813052;

}

function scrollToCursorScript_2650813076_2650813084(self_2650813085, cursor_2650813086) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym558_2650813087 = getTextDocumentEditor_2650808629(self_2650813085);
      if (isNone_2650808990(rHEX60gensym558_2650813087)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2650808730(get_2650809010(rHEX60gensym558_2650813087), cursor_2650813086);
  };

  
}

function scrollToCursorApi_2650813114(HEX3Atmp_2650813078) {
      var Temporary4;

  var result_2650813115 = null;

    result_2650813115 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2650813078))) {
      Temporary4 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650813078, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2650813076_2650813084(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813078, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym563_2650813126 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2650813131 = [mnewString(0)];
    fmtRes_2650813131[0].push.apply(fmtRes_2650813131[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813131, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym563_2650813126 || [],fmtRes_2650813131[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813115;

}

function reloadTreesitterScript_2650813134_2650813141(self_2650813142) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym567_2650813143 = getTextDocumentEditor_2650808629(self_2650813142);
      if (isNone_2650808990(rHEX60gensym567_2650813143)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2650813139(get_2650809010(rHEX60gensym567_2650813143));
  };

  
}

function reloadTreesitterApi_2650813169(HEX3Atmp_2650813136) {
  var result_2650813170 = null;

    result_2650813170 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2650813134_2650813141(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813136, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_2650813176 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2650813181 = [mnewString(0)];
    fmtRes_2650813181[0].push.apply(fmtRes_2650813181[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813181, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_2650813176 || [],fmtRes_2650813181[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813170;

}

function deleteLeftScript_2650813190_2650813205(self_2650813206) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym576_2650813207 = getTextDocumentEditor_2650808629(self_2650813206);
      if (isNone_2650808990(rHEX60gensym576_2650813207)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2650813195(get_2650809010(rHEX60gensym576_2650813207));
  };

  
}

function deleteLeftApi_2650813233(HEX3Atmp_2650813192) {
  var result_2650813234 = null;

    result_2650813234 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2650813190_2650813205(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813192, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym581_2650813240 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2650813245 = [mnewString(0)];
    fmtRes_2650813245[0].push.apply(fmtRes_2650813245[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813245, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym581_2650813240 || [],fmtRes_2650813245[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813234;

}

function deleteRightScript_2650813254_2650813269(self_2650813270) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym584_2650813271 = getTextDocumentEditor_2650808629(self_2650813270);
      if (isNone_2650808990(rHEX60gensym584_2650813271)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2650813259(get_2650809010(rHEX60gensym584_2650813271));
  };

  
}

function deleteRightApi_2650813297(HEX3Atmp_2650813256) {
  var result_2650813298 = null;

    result_2650813298 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2650813254_2650813269(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813256, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym589_2650813304 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2650813309 = [mnewString(0)];
    fmtRes_2650813309[0].push.apply(fmtRes_2650813309[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813309, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym589_2650813304 || [],fmtRes_2650813309[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813298;

}

function getCommandCountScript_2650813318_2650813326(self_2650813327) {
  var result_2650813328 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2650813329 = getTextDocumentEditor_2650808629(self_2650813327);
      if (isNone_2650808990(rHEX60gensym592_2650813329)) {
      break BeforeRet;
      }
      
    };
    result_2650813328 = getCommandCount_2650813323(get_2650809010(rHEX60gensym592_2650813329));
  };

  return result_2650813328;

}

function getCommandCountApi_2650813356(HEX3Atmp_2650813320) {
  var result_2650813357 = null;

  BeforeRet: {
    result_2650813357 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2650813357 = toJson_2650809858(getCommandCountScript_2650813318_2650813326(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813320, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym598_2650813367 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2650813372 = [mnewString(0)];
    fmtRes_2650813372[0].push.apply(fmtRes_2650813372[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813372, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym598_2650813367 || [],fmtRes_2650813372[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650813357;

}

function setCommandCountScript_2650813375_2650813383(self_2650813384, count_2650813385) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym602_2650813386 = getTextDocumentEditor_2650808629(self_2650813384);
      if (isNone_2650808990(rHEX60gensym602_2650813386)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2650813380(get_2650809010(rHEX60gensym602_2650813386), count_2650813385);
  };

  
}

function setCommandCountApi_2650813413(HEX3Atmp_2650813377) {
  var result_2650813414 = null;

    result_2650813414 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2650813375_2650813383(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813377, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650813377, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym607_2650813425 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2650813430 = [mnewString(0)];
    fmtRes_2650813430[0].push.apply(fmtRes_2650813430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym607_2650813425 || [],fmtRes_2650813430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813414;

}

function setCommandCountRestoreScript_2650813433_2650813441(self_2650813442, count_2650813443) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym611_2650813444 = getTextDocumentEditor_2650808629(self_2650813442);
      if (isNone_2650808990(rHEX60gensym611_2650813444)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2650813438(get_2650809010(rHEX60gensym611_2650813444), count_2650813443);
  };

  
}

function setCommandCountRestoreApi_2650813471(HEX3Atmp_2650813435) {
  var result_2650813472 = null;

    result_2650813472 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2650813433_2650813441(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813435, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650813435, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym616_2650813483 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2650813488 = [mnewString(0)];
    fmtRes_2650813488[0].push.apply(fmtRes_2650813488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym616_2650813483 || [],fmtRes_2650813488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813472;

}

function updateCommandCountScript_2650813491_2650813499(self_2650813500, digit_2650813501) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym620_2650813502 = getTextDocumentEditor_2650808629(self_2650813500);
      if (isNone_2650808990(rHEX60gensym620_2650813502)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2650813496(get_2650809010(rHEX60gensym620_2650813502), digit_2650813501);
  };

  
}

function updateCommandCountApi_2650813529(HEX3Atmp_2650813493) {
  var result_2650813530 = null;

    result_2650813530 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2650813491_2650813499(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813493, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650813493, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym625_2650813541 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2650813546 = [mnewString(0)];
    fmtRes_2650813546[0].push.apply(fmtRes_2650813546[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813546, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym625_2650813541 || [],fmtRes_2650813546[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813530;

}

function setFlagScript_2650813549_2650813558(self_2650813559, name_2650813560, value_2650813561) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym630_2650813562 = getTextDocumentEditor_2650808629(self_2650813559);
      if (isNone_2650808990(rHEX60gensym630_2650813562)) {
      break BeforeRet;
      }
      
    };
    setFlag_2650813554(get_2650809010(rHEX60gensym630_2650813562), name_2650813560, value_2650813561);
  };

  
}

function setFlagApi_2650813590(HEX3Atmp_2650813551) {
  var result_2650813591 = null;

    result_2650813591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2650813549_2650813558(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813551, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650813551, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650813551, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym635_2650813607 = [115,101,116,70,108,97,103];
    var fmtRes_2650813612 = [mnewString(0)];
    fmtRes_2650813612[0].push.apply(fmtRes_2650813612[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813612, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym635_2650813607 || [],fmtRes_2650813612[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650813591;

}

function getFlagScript_2650813615_2650813624(self_2650813625, name_2650813626) {
  var result_2650813627 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym639_2650813628 = getTextDocumentEditor_2650808629(self_2650813625);
      if (isNone_2650808990(rHEX60gensym639_2650813628)) {
      break BeforeRet;
      }
      
    };
    result_2650813627 = getFlag_2650813620(get_2650809010(rHEX60gensym639_2650813628), name_2650813626);
  };

  return result_2650813627;

}

function getFlagApi_2650813656(HEX3Atmp_2650813617) {
  var result_2650813657 = null;

  BeforeRet: {
    result_2650813657 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2650813657 = toJson_2650813668(getFlagScript_2650813615_2650813624(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813617, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650813617, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym645_2650813677 = [103,101,116,70,108,97,103];
    var fmtRes_2650813682 = [mnewString(0)];
    fmtRes_2650813682[0].push.apply(fmtRes_2650813682[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813682, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym645_2650813677 || [],fmtRes_2650813682[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650813657;

}

function runActionScript_2650813685_2650813700(self_2650813701, action_2650813702, args_2650813703) {
  var result_2650813704 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym650_2650813705 = getTextDocumentEditor_2650808629(self_2650813701);
      if (isNone_2650808990(rHEX60gensym650_2650813705)) {
      break BeforeRet;
      }
      
    };
    result_2650813704 = runAction_2650813690(get_2650809010(rHEX60gensym650_2650813705), action_2650813702, args_2650813703);
  };

  return result_2650813704;

}

function runActionApi_2650813734(HEX3Atmp_2650813687) {
  var result_2650813735 = null;

  BeforeRet: {
    result_2650813735 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2650813735 = toJson_2650813668(runActionScript_2650813685_2650813700(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813687, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650813687, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2650813687, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym656_2650813750 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2650813755 = [mnewString(0)];
    fmtRes_2650813755[0].push.apply(fmtRes_2650813755[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813755, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym656_2650813750 || [],fmtRes_2650813755[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650813735;

}

function findWordBoundaryScript_2650813761_2650813797(self_2650813798, cursor_2650813799) {
  var result_2650813800 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym660_2650813801 = getTextDocumentEditor_2650808629(self_2650813798);
      if (isNone_2650808990(rHEX60gensym660_2650813801)) {
      break BeforeRet;
      }
      
    };
    result_2650813800 = nimCopy(result_2650813800, findWordBoundary_2650813766(get_2650809010(rHEX60gensym660_2650813801), cursor_2650813799), NTI2231369739);
  };

  return result_2650813800;

}

function findWordBoundaryApi_2650813829(HEX3Atmp_2650813763) {
  var result_2650813830 = null;

  BeforeRet: {
    result_2650813830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2650813830 = toJson_2650809832(findWordBoundaryScript_2650813761_2650813797(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813763, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810505(HEX5BHEX5D_1627393116(HEX3Atmp_2650813763, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym666_2650813845 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2650813850 = [mnewString(0)];
    fmtRes_2650813850[0].push.apply(fmtRes_2650813850[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650813850, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym666_2650813845 || [],fmtRes_2650813850[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650813830;

}

function getSelectionForMoveScript_2650813855_2650813958(self_2650813959, cursor_2650813960, move_2650813961, count_2650813962) {
  var result_2650813963 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym676_2650813964 = getTextDocumentEditor_2650808629(self_2650813959);
      if (isNone_2650808990(rHEX60gensym676_2650813964)) {
      break BeforeRet;
      }
      
    };
    result_2650813963 = nimCopy(result_2650813963, getSelectionForMove_2650813860(get_2650809010(rHEX60gensym676_2650813964), cursor_2650813960, move_2650813961, count_2650813962), NTI2231369739);
  };

  return result_2650813963;

}

function getSelectionForMoveApi_2650813994(HEX3Atmp_2650813857) {
      var Temporary6;

  var result_2650813995 = null;

  BeforeRet: {
    result_2650813995 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2650813857))) {
      Temporary6 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650813857, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2650813995 = toJson_2650809832(getSelectionForMoveScript_2650813855_2650813958(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650813857, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650810505(HEX5BHEX5D_1627393116(HEX3Atmp_2650813857, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650813857, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym682_2650814020 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2650814025 = [mnewString(0)];
    fmtRes_2650814025[0].push.apply(fmtRes_2650814025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym682_2650814020 || [],fmtRes_2650814025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650813995;

}

function setMoveScript_2650814100_2650814296(self_2650814297, args_2650814298) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym698_2650814299 = getTextDocumentEditor_2650808629(self_2650814297);
      if (isNone_2650808990(rHEX60gensym698_2650814299)) {
      break BeforeRet;
      }
      
    };
    setMove_2650814105(get_2650809010(rHEX60gensym698_2650814299), args_2650814298);
  };

  
}

function HEX5BHEX5D_2650814340(a_2650814343, x_2650814344) {
  var result_2650814345 = null;

    if (!((a_2650814343.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2650814345 = newJArray_1627390082();
    var xa_2650814356 = x_2650814344.a;
    var L_2650814358 = addInt(subInt(subInt(len_1627392983(a_2650814343), x_2650814344.b), xa_2650814356), 1);
    Label1: {
      var i_2650814363 = 0;
      var i_536872064 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872064 < L_2650814358)) break Label3;
            i_2650814363 = i_536872064;
            add_1627390190(result_2650814345, HEX5BHEX5D_1627393116(a_2650814343, addInt(i_2650814363, xa_2650814356)));
            i_536872064 = addInt(i_536872064, 1);
          }
      };
    };

  return result_2650814345;

}

function setMoveApi_2650814326(HEX3Atmp_2650814102) {
  var result_2650814327 = null;

    result_2650814327 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2650814100_2650814296(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814102, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2650814340(HEX3Atmp_2650814102, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym703_2650814364 = [115,101,116,77,111,118,101];
    var fmtRes_2650814369 = [mnewString(0)];
    fmtRes_2650814369[0].push.apply(fmtRes_2650814369[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814369, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym703_2650814364 || [],fmtRes_2650814369[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814327;

}

function deleteMoveScript_2650814392_2650814432(self_2650814433, move_2650814434, which_2650814435, all_2650814436) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym725_2650814437 = getTextDocumentEditor_2650808629(self_2650814433);
      if (isNone_2650808990(rHEX60gensym725_2650814437)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2650814397(get_2650809010(rHEX60gensym725_2650814437), move_2650814434, which_2650814435, all_2650814436);
  };

  
}

function deleteMoveApi_2650814466(HEX3Atmp_2650814394) {
      var Temporary5;
      var Temporary7;

  var result_2650814467 = null;

    result_2650814467 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650814394))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650814394, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650814394))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650814394, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2650814392_2650814432(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814394, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814394, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2650814488 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2650814493 = [mnewString(0)];
    fmtRes_2650814493[0].push.apply(fmtRes_2650814493[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814493, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2650814488 || [],fmtRes_2650814493[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814467;

}

function selectMoveScript_2650814496_2650814561(self_2650814562, move_2650814563, which_2650814564, all_2650814565) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym738_2650814566 = getTextDocumentEditor_2650808629(self_2650814562);
      if (isNone_2650808990(rHEX60gensym738_2650814566)) {
      break BeforeRet;
      }
      
    };
    selectMove_2650814501(get_2650809010(rHEX60gensym738_2650814566), move_2650814563, which_2650814564, all_2650814565);
  };

  
}

function selectMoveApi_2650814595(HEX3Atmp_2650814498) {
      var Temporary5;
      var Temporary7;

  var result_2650814596 = null;

    result_2650814596 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650814498))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650814498, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650814498))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650814498, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2650814496_2650814561(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814498, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814498, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym743_2650814617 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2650814622 = [mnewString(0)];
    fmtRes_2650814622[0].push.apply(fmtRes_2650814622[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814622, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym743_2650814617 || [],fmtRes_2650814622[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814596;

}

function changeMoveScript_2650814625_2650814665(self_2650814666, move_2650814667, which_2650814668, all_2650814669) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2650814670 = getTextDocumentEditor_2650808629(self_2650814666);
      if (isNone_2650808990(rHEX60gensym752_2650814670)) {
      break BeforeRet;
      }
      
    };
    changeMove_2650814630(get_2650809010(rHEX60gensym752_2650814670), move_2650814667, which_2650814668, all_2650814669);
  };

  
}

function changeMoveApi_2650814699(HEX3Atmp_2650814627) {
      var Temporary5;
      var Temporary7;

  var result_2650814700 = null;

    result_2650814700 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650814627))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650814627, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650814627))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650814627, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2650814625_2650814665(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814627, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814627, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2650814721 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2650814726 = [mnewString(0)];
    fmtRes_2650814726[0].push.apply(fmtRes_2650814726[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814726, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2650814721 || [],fmtRes_2650814726[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814700;

}

function moveLastScript_2650814729_2650814777(self_2650814778, move_2650814779, which_2650814780, all_2650814781, count_2650814782) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym766_2650814783 = getTextDocumentEditor_2650808629(self_2650814778);
      if (isNone_2650808990(rHEX60gensym766_2650814783)) {
      break BeforeRet;
      }
      
    };
    moveLast_2650814734(get_2650809010(rHEX60gensym766_2650814783), move_2650814779, which_2650814780, all_2650814781, count_2650814782);
  };

  
}

function moveLastApi_2650814813(HEX3Atmp_2650814731) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2650814814 = null;

    result_2650814814 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650814731))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650814731, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650814731))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650814731, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2650814731))) {
      Temporary9 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650814731, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2650814729_2650814777(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814731, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814731, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym771_2650814840 = [109,111,118,101,76,97,115,116];
    var fmtRes_2650814845 = [mnewString(0)];
    fmtRes_2650814845[0].push.apply(fmtRes_2650814845[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814845, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym771_2650814840 || [],fmtRes_2650814845[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814814;

}

function moveFirstScript_2650814856_2650814904(self_2650814905, move_2650814906, which_2650814907, all_2650814908, count_2650814909) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym781_2650814910 = getTextDocumentEditor_2650808629(self_2650814905);
      if (isNone_2650808990(rHEX60gensym781_2650814910)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2650814861(get_2650809010(rHEX60gensym781_2650814910), move_2650814906, which_2650814907, all_2650814908, count_2650814909);
  };

  
}

function moveFirstApi_2650814940(HEX3Atmp_2650814858) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2650814941 = null;

    result_2650814941 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650814858))) {
      Temporary5 = jsonTo_2650809333(HEX5BHEX5D_1627393116(HEX3Atmp_2650814858, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2650814858))) {
      Temporary7 = jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2650814858, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2650814858))) {
      Temporary9 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650814858, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2650814856_2650814904(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814858, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814858, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym786_2650814967 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2650814972 = [mnewString(0)];
    fmtRes_2650814972[0].push.apply(fmtRes_2650814972[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650814972, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym786_2650814967 || [],fmtRes_2650814972[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650814941;

}

function setSearchQueryScript_2650814975_2650814997(self_2650814998, query_2650814999) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym793_2650815000 = getTextDocumentEditor_2650808629(self_2650814998);
      if (isNone_2650808990(rHEX60gensym793_2650815000)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2650814980(get_2650809010(rHEX60gensym793_2650815000), query_2650814999);
  };

  
}

function setSearchQueryApi_2650815027(HEX3Atmp_2650814977) {
  var result_2650815028 = null;

    result_2650815028 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2650814975_2650814997(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650814977, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650814977, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym798_2650815039 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2650815044 = [mnewString(0)];
    fmtRes_2650815044[0].push.apply(fmtRes_2650815044[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815044, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym798_2650815039 || [],fmtRes_2650815044[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815028;

}

function setSearchQueryFromMoveScript_2650815067_2650815077(self_2650815078, move_2650815079, count_2650815080) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym803_2650815081 = getTextDocumentEditor_2650808629(self_2650815078);
      if (isNone_2650808990(rHEX60gensym803_2650815081)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2650815072(get_2650809010(rHEX60gensym803_2650815081), move_2650815079, count_2650815080);
  };

  
}

function setSearchQueryFromMoveApi_2650815109(HEX3Atmp_2650815069) {
      var Temporary5;

  var result_2650815110 = null;

    result_2650815110 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2650815069))) {
      Temporary5 = jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2650815069, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2650815067_2650815077(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815069, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2650815069, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym808_2650815126 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2650815131 = [mnewString(0)];
    fmtRes_2650815131[0].push.apply(fmtRes_2650815131[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815131, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym808_2650815126 || [],fmtRes_2650815131[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815110;

}

function gotoDefinitionScript_2650815462_2650815469(self_2650815470) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym830_2650815471 = getTextDocumentEditor_2650808629(self_2650815470);
      if (isNone_2650808990(rHEX60gensym830_2650815471)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2650815467(get_2650809010(rHEX60gensym830_2650815471));
  };

  
}

function gotoDefinitionApi_2650815497(HEX3Atmp_2650815464) {
  var result_2650815498 = null;

    result_2650815498 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2650815462_2650815469(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815464, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym835_2650815504 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2650815509 = [mnewString(0)];
    fmtRes_2650815509[0].push.apply(fmtRes_2650815509[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815509, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym835_2650815504 || [],fmtRes_2650815509[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815498;

}

function getCompletionsScript_2650815526_2650815533(self_2650815534) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym839_2650815535 = getTextDocumentEditor_2650808629(self_2650815534);
      if (isNone_2650808990(rHEX60gensym839_2650815535)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2650815531(get_2650809010(rHEX60gensym839_2650815535));
  };

  
}

function getCompletionsApi_2650815561(HEX3Atmp_2650815528) {
  var result_2650815562 = null;

    result_2650815562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2650815526_2650815533(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815528, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym844_2650815568 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2650815573 = [mnewString(0)];
    fmtRes_2650815573[0].push.apply(fmtRes_2650815573[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815573, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym844_2650815568 || [],fmtRes_2650815573[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815562;

}

function hideCompletionsScript_2650815576_2650815583(self_2650815584) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2650815585 = getTextDocumentEditor_2650808629(self_2650815584);
      if (isNone_2650808990(rHEX60gensym848_2650815585)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2650815581(get_2650809010(rHEX60gensym848_2650815585));
  };

  
}

function hideCompletionsApi_2650815611(HEX3Atmp_2650815578) {
  var result_2650815612 = null;

    result_2650815612 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2650815576_2650815583(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815578, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym853_2650815618 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2650815623 = [mnewString(0)];
    fmtRes_2650815623[0].push.apply(fmtRes_2650815623[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815623, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym853_2650815618 || [],fmtRes_2650815623[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815612;

}

function selectPrevCompletionScript_2650815626_2650815647(self_2650815648) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym856_2650815649 = getTextDocumentEditor_2650808629(self_2650815648);
      if (isNone_2650808990(rHEX60gensym856_2650815649)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2650815631(get_2650809010(rHEX60gensym856_2650815649));
  };

  
}

function selectPrevCompletionApi_2650815675(HEX3Atmp_2650815628) {
  var result_2650815676 = null;

    result_2650815676 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2650815626_2650815647(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815628, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym861_2650815682 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2650815687 = [mnewString(0)];
    fmtRes_2650815687[0].push.apply(fmtRes_2650815687[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815687, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym861_2650815682 || [],fmtRes_2650815687[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815676;

}

function selectNextCompletionScript_2650815690_2650815711(self_2650815712) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym865_2650815713 = getTextDocumentEditor_2650808629(self_2650815712);
      if (isNone_2650808990(rHEX60gensym865_2650815713)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2650815695(get_2650809010(rHEX60gensym865_2650815713));
  };

  
}

function selectNextCompletionApi_2650815739(HEX3Atmp_2650815692) {
  var result_2650815740 = null;

    result_2650815740 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2650815690_2650815711(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815692, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_2650815746 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2650815751 = [mnewString(0)];
    fmtRes_2650815751[0].push.apply(fmtRes_2650815751[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815751, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_2650815746 || [],fmtRes_2650815751[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815740;

}

function applySelectedCompletionScript_2650815754_2650815903(self_2650815904) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym874_2650815905 = getTextDocumentEditor_2650808629(self_2650815904);
      if (isNone_2650808990(rHEX60gensym874_2650815905)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2650815759(get_2650809010(rHEX60gensym874_2650815905));
  };

  
}

function applySelectedCompletionApi_2650815931(HEX3Atmp_2650815756) {
  var result_2650815932 = null;

    result_2650815932 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2650815754_2650815903(jsonTo_2650809044(HEX5BHEX5D_1627393116(HEX3Atmp_2650815756, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_2650815938 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2650815943 = [mnewString(0)];
    fmtRes_2650815943[0].push.apply(fmtRes_2650815943[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2650815943, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_2650815938 || [],fmtRes_2650815943[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2650815932;

}

function dispatch_2650815970(command_2650815969, arg_2650815968) {
    var Temporary1;

  var result_2650815975 = ({val: null});

    switch (toJSStr(command_2650815969)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2650815976(setModeApi_2650809042(arg_2650815968));
      break;
    case "mode":
      Temporary1 = some_2650815976(modeApi_2650809204(arg_2650815968));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2650815976(getContextWithModeApi_2650809264(arg_2650815968));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2650815976(updateTargetColumnApi_2650809326(arg_2650815968));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2650815976(invertSelectionApi_2650809440(arg_2650815968));
      break;
    case "insert":
      Temporary1 = some_2650815976(insertApi_2650809521(arg_2650815968));
      break;
    case "delete":
      Temporary1 = some_2650815976(deleteApi_2650810012(arg_2650815968));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2650815976(selectPrevApi_2650810261(arg_2650815968));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2650815976(selectNextApi_2650810434(arg_2650815968));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2650815976(selectInsideApi_2650810498(arg_2650815968));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2650815976(selectInsideCurrentApi_2650810561(arg_2650815968));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2650815976(selectLineApi_2650810614(arg_2650815968));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2650815976(selectLineCurrentApi_2650810669(arg_2650815968));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2650815976(selectParentTsApi_2650810734(arg_2650815968));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2650815976(selectParentCurrentTsApi_2650810802(arg_2650815968));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2650815976(insertTextApi_2650810859(arg_2650815968));
      break;
    case "undo":
      Temporary1 = some_2650815976(undoApi_2650810975(arg_2650815968));
      break;
    case "redo":
      Temporary1 = some_2650815976(redoApi_2650811055(arg_2650815968));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2650815976(scrollTextApi_2650811116(arg_2650815968));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2650815976(duplicateLastSelectionApi_2650811271(arg_2650815968));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2650815976(addCursorBelowApi_2650811341(arg_2650815968));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2650815976(addCursorAboveApi_2650811407(arg_2650815968));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2650815976(getPrevFindResultApi_2650811717(arg_2650815968));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2650815976(getNextFindResultApi_2650811946(arg_2650815968));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2650815976(addNextFindResultToSelectionApi_2650812028(arg_2650815968));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2650815976(addPrevFindResultToSelectionApi_2650812086(arg_2650815968));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2650815976(setAllFindResultToSelectionApi_2650812430(arg_2650815968));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2650815976(moveCursorColumnApi_2650812522(arg_2650815968));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2650815976(moveCursorLineApi_2650812612(arg_2650815968));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2650815976(moveCursorHomeApi_2650812683(arg_2650815968));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2650815976(moveCursorEndApi_2650812751(arg_2650815968));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2650815976(moveCursorToApi_2650812829(arg_2650815968));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2650815976(moveCursorBeforeApi_2650812912(arg_2650815968));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2650815976(moveCursorNextFindResultApi_2650812985(arg_2650815968));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2650815976(moveCursorPrevFindResultApi_2650813051(arg_2650815968));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2650815976(scrollToCursorApi_2650813114(arg_2650815968));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2650815976(reloadTreesitterApi_2650813169(arg_2650815968));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2650815976(deleteLeftApi_2650813233(arg_2650815968));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2650815976(deleteRightApi_2650813297(arg_2650815968));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2650815976(getCommandCountApi_2650813356(arg_2650815968));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2650815976(setCommandCountApi_2650813413(arg_2650815968));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2650815976(setCommandCountRestoreApi_2650813471(arg_2650815968));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2650815976(updateCommandCountApi_2650813529(arg_2650815968));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2650815976(setFlagApi_2650813590(arg_2650815968));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2650815976(getFlagApi_2650813656(arg_2650815968));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2650815976(runActionApi_2650813734(arg_2650815968));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2650815976(findWordBoundaryApi_2650813829(arg_2650815968));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2650815976(getSelectionForMoveApi_2650813994(arg_2650815968));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2650815976(setMoveApi_2650814326(arg_2650815968));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2650815976(deleteMoveApi_2650814466(arg_2650815968));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2650815976(selectMoveApi_2650814595(arg_2650815968));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2650815976(changeMoveApi_2650814699(arg_2650815968));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2650815976(moveLastApi_2650814813(arg_2650815968));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2650815976(moveFirstApi_2650814940(arg_2650815968));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2650815976(setSearchQueryApi_2650815027(arg_2650815968));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2650815976(setSearchQueryFromMoveApi_2650815109(arg_2650815968));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2650815976(gotoDefinitionApi_2650815497(arg_2650815968));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2650815976(getCompletionsApi_2650815561(arg_2650815968));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2650815976(hideCompletionsApi_2650815611(arg_2650815968));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2650815976(selectPrevCompletionApi_2650815675(arg_2650815968));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2650815976(selectNextCompletionApi_2650815739(arg_2650815968));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2650815976(applySelectedCompletionApi_2650815931(arg_2650815968));
      break;
    default: 
      Temporary1 = none_2650816172();
      break;
    }
    result_2650815975 = nimCopy(result_2650815975, Temporary1, NTI2650810879);

  return result_2650815975;

}

function isNone_2650816257(self_2650816259) {
  var result_2650816260 = false;

    result_2650816260 = (self_2650816259.val == null);

  return result_2650816260;

}

function handleActionInternal_2650800478(self_2650800479, action_2650800480, args_2650800481) {
    var Temporary3;

  var result_2650816192 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848837(self_2650800479.editor, self_2650800479, action_2650800480, args_2650800481) == 3)) {
    self_2650800479.commandCount = subInt(self_2650800479.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2650800479.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848837(self_2650800479.editor, self_2650800479, action_2650800480, args_2650800481) == 3))) {
          break Label1;
          }
          
          self_2650800479.commandCount = subInt(self_2650800479.commandCount, 1);
        }
    };
    self_2650800479.commandCount = self_2650800479.commandCountRestore;
    self_2650800479.commandCountRestore = 0;
    result_2650816192 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2650800481;
    if (ConstSet310[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2650816211(Temporary3, "elems", toJson_2650808733({id: self_2650800479.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2650816240(dispatch_2650815970(action_2650800480, args_2650800481))) {
    self_2650800479.commandCount = subInt(self_2650800479.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2650800479.commandCount)) break Label5;
          if (isNone_2650816257(dispatch_2650815970(action_2650800480, args_2650800481))) {
          break Label4;
          }
          
          self_2650800479.commandCount = subInt(self_2650800479.commandCount, 1);
        }
    };
    self_2650800479.commandCount = self_2650800479.commandCountRestore;
    self_2650800479.commandCountRestore = 0;
    result_2650816192 = 3;
    break BeforeRet;
    }
    
    result_2650816192 = 1;
    break BeforeRet;
  };

  return result_2650816192;

}

function handleAction_2650800474(self_2650800475, action_2650800476, arg_2650800477) {
  var result_2650816274 = 0;

  BeforeRet: {
    var args_2650816275 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2650816276 = null;
      var colontmp__536871905 = null;
      colontmp__536871905 = newStringStream_1660945417(arg_2650800477);
      var p_536871906 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871906[0], colontmp__536871905, [], false);
      try {
      var _ = getTok_1694499270(p_536871906[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871906[0].tok == 1))) break Label5;
            a_2650816276 = parseJson_1627395211(p_536871906[0], false, false, 0);
            add_1627390190(args_2650816275, a_2650816276);
          }
      };
      } finally {
      close_1694498967(p_536871906[0]);
      }
    };
    result_2650816274 = handleActionInternal_2650800478(self_2650800475, action_2650800476, args_2650816275);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2650816281 = [mnewString(0)];
    fmtRes_2650816281[0].push.apply(fmtRes_2650816281[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2650816281, 0, action_2650800476, []);
    fmtRes_2650816281[0].push.apply(fmtRes_2650816281[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2650816281, 0, arg_2650800477, []);
    fmtRes_2650816281[0].push.apply(fmtRes_2650816281[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2650816281[0], NTI33554449)]);
    result_2650816274 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2650816274;

}

function hasKey_1291847795(t_1291847798, key_1291847799) {
  var result_1291847800 = false;

    var hc_1291847801 = [0];
    result_1291847800 = (0 <= rawGet_1291847802(t_1291847798, key_1291847799, hc_1291847801, 0));

  return result_1291847800;

}

function contains_1291847789(t_1291847792, key_1291847793) {
  var result_1291847794 = false;

  BeforeRet: {
    result_1291847794 = hasKey_1291847795(t_1291847792, key_1291847793);
    break BeforeRet;
  };

  return result_1291847794;

}

function HEX5BHEX5D_1291848094(t_1291848097, key_1291848098) {
  var result_1291848099 = null;
  var result_1291848099_Idx = 0;

    var hcHEX60gensym22_1291848100 = [0];
    var indexHEX60gensym22_1291848107 = rawGet_1291847802(t_1291848097, key_1291848098, hcHEX60gensym22_1291848100, 0);
    if ((0 <= indexHEX60gensym22_1291848107)) {
    result_1291848099 = t_1291848097.data[chckIndx(indexHEX60gensym22_1291848107, 0, (t_1291848097.data).length - 1)]; result_1291848099_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848098);
    }
    

  return [result_1291848099, result_1291848099_Idx];

}

function invokeCallback_1291847742(self_1291847743, context_1291847744, args_1291847745) {
    var Temporary1;

  var result_1291847746 = false;

  BeforeRet: {
    if (!(contains_1291847789(self_1291847743.callbacks, context_1291847744))) {
    result_1291847746 = false;
    break BeforeRet;
    }
    
    var id_1291848164 = (Temporary1 = HEX5BHEX5D_1291848094(self_1291847743.callbacks, context_1291847744), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847746 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848175 = [mnewString(0)];
    fmtRes_1291848175[0].push.apply(fmtRes_1291848175[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2332033544(fmtRes_1291848175, 0, id_1291848164, []);
    fmtRes_1291848175[0].push.apply(fmtRes_1291848175[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848175, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848175[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847746 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847746;

}

function handleInput_2650800482(self_2650800483, input_2650800484) {
  var result_2650816285 = 0;

  BeforeRet: {
    if (invokeCallback_1291847742(self_2650800483.editor, getContextWithMode_2650808280(self_2650800483, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2650800484))) {
    result_2650816285 = 3;
    break BeforeRet;
    }
    
    insertText_2650810825(self_2650800483, input_2650800484);
    result_2650816285 = 3;
    break BeforeRet;
  };

  return result_2650816285;

}

function toJson_2818584227(self_2818584228, opt_2818584229) {
  var result_2818584230 = null;

    result_2818584230 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584230, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818584230, [105,100], newJInt_1627390040(self_2818584228.id));

  return result_2818584230;

}

function none_2818584150() {
  var result_2818584156 = ({val: null});

  return result_2818584156;

}

function some_2818584190(val_2818584192) {
  var result_2818584193 = ({val: null});

    if (!(!((val_2818584192 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818584193.val = val_2818584192;

  return result_2818584193;

}

function getAstDocumentEditor_2818584140(wrapper_2818584141) {
      var Temporary1;

  var result_2818584146 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818584146 = nimCopy(result_2818584146, none_2818584150(), NTI2818579617);
    break BeforeRet;
    }
    
      var oHEX60gensym532_2818584159 = getEditorForId_1291850610(gEditor, wrapper_2818584141.id);
      if (!isSome_2650808653(oHEX60gensym532_2818584159)) Temporary1 = false; else {        var editor_2818584182 = get_2650808673(oHEX60gensym532_2818584159);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818584182.m_type, NTI2818573803)) {
    result_2818584146 = nimCopy(result_2818584146, some_2818584190(editor_2818584182), NTI2818579617);
    break BeforeRet;
    }
    
    }
    
    result_2818584146 = nimCopy(result_2818584146, none_2818584150(), NTI2818579617);
    break BeforeRet;
  };

  return result_2818584146;

}

function isNone_2818584258(self_2818584260) {
  var result_2818584261 = false;

    result_2818584261 = (self_2818584260.val == null);

  return result_2818584261;

}

function get_2818584278(self_2818584280) {
  var result_2818584281 = null;

    if (isNone_2818584258(self_2818584280)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818584281 = self_2818584280["val"];

  return result_2818584281;

}

function moveCursorScript_2818584240_2818584250(self_2818584251, direction_2818584252) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym537_2818584253 = getAstDocumentEditor_2818584140(self_2818584251);
      if (isNone_2818584258(rHEX60gensym537_2818584253)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2818584245(get_2818584278(rHEX60gensym537_2818584253), direction_2818584252);
  };

  
}

function fromJsonHook_2818584231(t_2818584232, jsonNode_2818584233) {
    t_2818584232.id = jsonTo_2650808740(HEX5BHEX5D_1627393037(jsonNode_2818584233, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818584311(a_2818584313, b_2818584314, opt_2818584315) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584314, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818584314}));
    }
    
    fromJsonHook_2818584231(a_2818584313, b_2818584314);

  
}

function jsonTo_2818584305(b_2818584307, opt_2818584309) {
  var result_2818584310 = [({id: 0})];

    fromJson_2818584311(result_2818584310[0], b_2818584307, opt_2818584309);

  return result_2818584310[0];

}

function moveCursorApi_2818584303(HEX3Atmp_2818584242) {
  var result_2818584304 = null;

    result_2818584304 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2818584240_2818584250(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584242, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650808740(HEX5BHEX5D_1627393116(HEX3Atmp_2818584242, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym542_2818584327 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2818584332 = [mnewString(0)];
    fmtRes_2818584332[0].push.apply(fmtRes_2818584332[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584332, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym542_2818584327 || [],fmtRes_2818584332[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584304;

}

function moveCursorUpScript_2818584398_2818584417(self_2818584418) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym549_2818584419 = getAstDocumentEditor_2818584140(self_2818584418);
      if (isNone_2818584258(rHEX60gensym549_2818584419)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2818584403(get_2818584278(rHEX60gensym549_2818584419));
  };

  
}

function moveCursorUpApi_2818584445(HEX3Atmp_2818584400) {
  var result_2818584446 = null;

    result_2818584446 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2818584398_2818584417(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584400, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym554_2818584452 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2818584457 = [mnewString(0)];
    fmtRes_2818584457[0].push.apply(fmtRes_2818584457[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584457, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym554_2818584452 || [],fmtRes_2818584457[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584446;

}

function moveCursorDownScript_2818584460_2818584467(self_2818584468) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym560_2818584469 = getAstDocumentEditor_2818584140(self_2818584468);
      if (isNone_2818584258(rHEX60gensym560_2818584469)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2818584465(get_2818584278(rHEX60gensym560_2818584469));
  };

  
}

function moveCursorDownApi_2818584495(HEX3Atmp_2818584462) {
  var result_2818584496 = null;

    result_2818584496 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2818584460_2818584467(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584462, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_2818584502 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2818584507 = [mnewString(0)];
    fmtRes_2818584507[0].push.apply(fmtRes_2818584507[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584507, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_2818584502 || [],fmtRes_2818584507[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584496;

}

function moveCursorNextScript_2818584510_2818584524(self_2818584525) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2818584526 = getAstDocumentEditor_2818584140(self_2818584525);
      if (isNone_2818584258(rHEX60gensym569_2818584526)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2818584515(get_2818584278(rHEX60gensym569_2818584526));
  };

  
}

function moveCursorNextApi_2818584552(HEX3Atmp_2818584512) {
  var result_2818584553 = null;

    result_2818584553 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2818584510_2818584524(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584512, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym574_2818584559 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2818584564 = [mnewString(0)];
    fmtRes_2818584564[0].push.apply(fmtRes_2818584564[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584564, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym574_2818584559 || [],fmtRes_2818584564[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584553;

}

function moveCursorPrevScript_2818584578_2818584591(self_2818584592) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym578_2818584593 = getAstDocumentEditor_2818584140(self_2818584592);
      if (isNone_2818584258(rHEX60gensym578_2818584593)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2818584583(get_2818584278(rHEX60gensym578_2818584593));
  };

  
}

function moveCursorPrevApi_2818584619(HEX3Atmp_2818584580) {
  var result_2818584620 = null;

    result_2818584620 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2818584578_2818584591(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584580, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_2818584626 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2818584631 = [mnewString(0)];
    fmtRes_2818584631[0].push.apply(fmtRes_2818584631[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584631, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_2818584626 || [],fmtRes_2818584631[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584620;

}

function moveCursorNextLineScript_2818584644_2818584677(self_2818584678) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym587_2818584679 = getAstDocumentEditor_2818584140(self_2818584678);
      if (isNone_2818584258(rHEX60gensym587_2818584679)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2818584649(get_2818584278(rHEX60gensym587_2818584679));
  };

  
}

function moveCursorNextLineApi_2818584705(HEX3Atmp_2818584646) {
  var result_2818584706 = null;

    result_2818584706 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2818584644_2818584677(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584646, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_2818584712 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2818584717 = [mnewString(0)];
    fmtRes_2818584717[0].push.apply(fmtRes_2818584717[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584717, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_2818584712 || [],fmtRes_2818584717[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584706;

}

function moveCursorPrevLineScript_2818584729_2818584762(self_2818584763) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym596_2818584764 = getAstDocumentEditor_2818584140(self_2818584763);
      if (isNone_2818584258(rHEX60gensym596_2818584764)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2818584734(get_2818584278(rHEX60gensym596_2818584764));
  };

  
}

function moveCursorPrevLineApi_2818584790(HEX3Atmp_2818584731) {
  var result_2818584791 = null;

    result_2818584791 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2818584729_2818584762(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584731, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym601_2818584797 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2818584802 = [mnewString(0)];
    fmtRes_2818584802[0].push.apply(fmtRes_2818584802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym601_2818584797 || [],fmtRes_2818584802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584791;

}

function selectContainingScript_2818584815_2818584979(self_2818584980, container_2818584981) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym606_2818584982 = getAstDocumentEditor_2818584140(self_2818584980);
      if (isNone_2818584258(rHEX60gensym606_2818584982)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2818584820(get_2818584278(rHEX60gensym606_2818584982), container_2818584981);
  };

  
}

function selectContainingApi_2818585009(HEX3Atmp_2818584817) {
  var result_2818585010 = null;

    result_2818585010 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2818584815_2818584979(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818584817, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584817, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym611_2818585021 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2818585026 = [mnewString(0)];
    fmtRes_2818585026[0].push.apply(fmtRes_2818585026[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585026, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym611_2818585021 || [],fmtRes_2818585026[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585010;

}

function deleteSelectedScript_2818585029_2818585039(self_2818585040) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym620_2818585041 = getAstDocumentEditor_2818584140(self_2818585040);
      if (isNone_2818584258(rHEX60gensym620_2818585041)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2818585034(get_2818584278(rHEX60gensym620_2818585041));
  };

  
}

function deleteSelectedApi_2818585067(HEX3Atmp_2818585031) {
  var result_2818585068 = null;

    result_2818585068 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2818585029_2818585039(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585031, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym625_2818585074 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2818585079 = [mnewString(0)];
    fmtRes_2818585079[0].push.apply(fmtRes_2818585079[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585079, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym625_2818585074 || [],fmtRes_2818585079[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585068;

}

function copySelectedScript_2818585145_2818585155(self_2818585156) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym628_2818585157 = getAstDocumentEditor_2818584140(self_2818585156);
      if (isNone_2818584258(rHEX60gensym628_2818585157)) {
      break BeforeRet;
      }
      
    };
    copySelected_2818585150(get_2818584278(rHEX60gensym628_2818585157));
  };

  
}

function copySelectedApi_2818585183(HEX3Atmp_2818585147) {
  var result_2818585184 = null;

    result_2818585184 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2818585145_2818585155(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585147, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym633_2818585190 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2818585195 = [mnewString(0)];
    fmtRes_2818585195[0].push.apply(fmtRes_2818585195[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585195, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym633_2818585190 || [],fmtRes_2818585195[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585184;

}

function finishEditScript_2818585213_2818585263(self_2818585264, apply_2818585265) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym637_2818585266 = getAstDocumentEditor_2818584140(self_2818585264);
      if (isNone_2818584258(rHEX60gensym637_2818585266)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2818580912(get_2818584278(rHEX60gensym637_2818585266), apply_2818585265);
  };

  
}

function finishEditApi_2818585293(HEX3Atmp_2818585215) {
  var result_2818585294 = null;

    result_2818585294 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2818585213_2818585263(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585215, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650809782(HEX5BHEX5D_1627393116(HEX3Atmp_2818585215, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym642_2818585305 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2818585310 = [mnewString(0)];
    fmtRes_2818585310[0].push.apply(fmtRes_2818585310[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585310, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym642_2818585305 || [],fmtRes_2818585310[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585294;

}

function undoScript2_2818585353_2818585386(self_2818585387) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym648_2818585388 = getAstDocumentEditor_2818584140(self_2818585387);
      if (isNone_2818584258(rHEX60gensym648_2818585388)) {
      break BeforeRet;
      }
      
    };
    undo_2818585358(get_2818584278(rHEX60gensym648_2818585388));
  };

  
}

function undoApi2_2818585414(HEX3Atmp_2818585355) {
  var result_2818585415 = null;

    result_2818585415 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2818585353_2818585386(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585355, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym653_2818585421 = [117,110,100,111];
    var fmtRes_2818585426 = [mnewString(0)];
    fmtRes_2818585426[0].push.apply(fmtRes_2818585426[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585426, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym653_2818585421 || [],fmtRes_2818585426[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585415;

}

function redoScript2_2818585430_2818585463(self_2818585464) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym657_2818585465 = getAstDocumentEditor_2818584140(self_2818585464);
      if (isNone_2818584258(rHEX60gensym657_2818585465)) {
      break BeforeRet;
      }
      
    };
    redo_2818585435(get_2818584278(rHEX60gensym657_2818585465));
  };

  
}

function redoApi2_2818585491(HEX3Atmp_2818585432) {
  var result_2818585492 = null;

    result_2818585492 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2818585430_2818585463(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585432, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym662_2818585498 = [114,101,100,111];
    var fmtRes_2818585503 = [mnewString(0)];
    fmtRes_2818585503[0].push.apply(fmtRes_2818585503[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585503, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym662_2818585498 || [],fmtRes_2818585503[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585492;

}

function insertAfterSmartScript_2818585506_2818585631(self_2818585632, nodeTemplate_2818585633) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym667_2818585634 = getAstDocumentEditor_2818584140(self_2818585632);
      if (isNone_2818584258(rHEX60gensym667_2818585634)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2818585511(get_2818584278(rHEX60gensym667_2818585634), nodeTemplate_2818585633);
  };

  
}

function insertAfterSmartApi_2818585661(HEX3Atmp_2818585508) {
  var result_2818585662 = null;

    result_2818585662 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2818585506_2818585631(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585508, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818585508, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym672_2818585673 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2818585678 = [mnewString(0)];
    fmtRes_2818585678[0].push.apply(fmtRes_2818585678[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585678, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym672_2818585673 || [],fmtRes_2818585678[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585662;

}

function insertAfterScript_2818585861_2818585954(self_2818585955, nodeTemplate_2818585956) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym680_2818585957 = getAstDocumentEditor_2818584140(self_2818585955);
      if (isNone_2818584258(rHEX60gensym680_2818585957)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2818585866(get_2818584278(rHEX60gensym680_2818585957), nodeTemplate_2818585956);
  };

  
}

function insertAfterApi_2818585984(HEX3Atmp_2818585863) {
  var result_2818585985 = null;

    result_2818585985 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2818585861_2818585954(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818585863, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818585863, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym685_2818585996 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2818586001 = [mnewString(0)];
    fmtRes_2818586001[0].push.apply(fmtRes_2818586001[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586001, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym685_2818585996 || [],fmtRes_2818586001[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585985;

}

function insertBeforeScript_2818586016_2818586108(self_2818586109, nodeTemplate_2818586110) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym692_2818586111 = getAstDocumentEditor_2818584140(self_2818586109);
      if (isNone_2818584258(rHEX60gensym692_2818586111)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2818586021(get_2818584278(rHEX60gensym692_2818586111), nodeTemplate_2818586110);
  };

  
}

function insertBeforeApi_2818586138(HEX3Atmp_2818586018) {
  var result_2818586139 = null;

    result_2818586139 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2818586016_2818586108(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586018, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586018, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym697_2818586150 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2818586155 = [mnewString(0)];
    fmtRes_2818586155[0].push.apply(fmtRes_2818586155[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586155, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym697_2818586150 || [],fmtRes_2818586155[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586139;

}

function insertChildScript_2818586170_2818586261(self_2818586262, nodeTemplate_2818586263) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym704_2818586264 = getAstDocumentEditor_2818584140(self_2818586262);
      if (isNone_2818584258(rHEX60gensym704_2818586264)) {
      break BeforeRet;
      }
      
    };
    insertChild_2818586175(get_2818584278(rHEX60gensym704_2818586264), nodeTemplate_2818586263);
  };

  
}

function insertChildApi_2818586291(HEX3Atmp_2818586172) {
  var result_2818586292 = null;

    result_2818586292 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2818586170_2818586261(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586172, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586172, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym709_2818586303 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2818586308 = [mnewString(0)];
    fmtRes_2818586308[0].push.apply(fmtRes_2818586308[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586308, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym709_2818586303 || [],fmtRes_2818586308[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586292;

}

function replaceScript_2818586323_2818586368(self_2818586369, nodeTemplate_2818586370) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym716_2818586371 = getAstDocumentEditor_2818584140(self_2818586369);
      if (isNone_2818584258(rHEX60gensym716_2818586371)) {
      break BeforeRet;
      }
      
    };
    replace_2818586328(get_2818584278(rHEX60gensym716_2818586371), nodeTemplate_2818586370);
  };

  
}

function replaceApi_2818586398(HEX3Atmp_2818586325) {
  var result_2818586399 = null;

    result_2818586399 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2818586323_2818586368(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586325, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586325, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym721_2818586410 = [114,101,112,108,97,99,101];
    var fmtRes_2818586415 = [mnewString(0)];
    fmtRes_2818586415[0].push.apply(fmtRes_2818586415[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586415, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym721_2818586410 || [],fmtRes_2818586415[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586399;

}

function replaceEmptyScript_2818586430_2818586479(self_2818586480, nodeTemplate_2818586481) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym726_2818586482 = getAstDocumentEditor_2818584140(self_2818586480);
      if (isNone_2818584258(rHEX60gensym726_2818586482)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2818586435(get_2818584278(rHEX60gensym726_2818586482), nodeTemplate_2818586481);
  };

  
}

function replaceEmptyApi_2818586509(HEX3Atmp_2818586432) {
  var result_2818586510 = null;

    result_2818586510 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2818586430_2818586479(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym731_2818586521 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2818586526 = [mnewString(0)];
    fmtRes_2818586526[0].push.apply(fmtRes_2818586526[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586526, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym731_2818586521 || [],fmtRes_2818586526[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586510;

}

function replaceParentScript_2818586541_2818586558(self_2818586559) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym735_2818586560 = getAstDocumentEditor_2818584140(self_2818586559);
      if (isNone_2818584258(rHEX60gensym735_2818586560)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2818586546(get_2818584278(rHEX60gensym735_2818586560));
  };

  
}

function replaceParentApi_2818586586(HEX3Atmp_2818586543) {
  var result_2818586587 = null;

    result_2818586587 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2818586541_2818586558(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586543, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym740_2818586593 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2818586598 = [mnewString(0)];
    fmtRes_2818586598[0].push.apply(fmtRes_2818586598[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586598, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym740_2818586593 || [],fmtRes_2818586598[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586587;

}

function wrapScript_2818586601_2818586670(self_2818586671, nodeTemplate_2818586672) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym744_2818586673 = getAstDocumentEditor_2818584140(self_2818586671);
      if (isNone_2818584258(rHEX60gensym744_2818586673)) {
      break BeforeRet;
      }
      
    };
    wrap_2818586606(get_2818584278(rHEX60gensym744_2818586673), nodeTemplate_2818586672);
  };

  
}

function wrapApi_2818586700(HEX3Atmp_2818586603) {
  var result_2818586701 = null;

    result_2818586701 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2818586601_2818586670(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586603, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586603, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym749_2818586712 = [119,114,97,112];
    var fmtRes_2818586717 = [mnewString(0)];
    fmtRes_2818586717[0].push.apply(fmtRes_2818586717[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586717, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym749_2818586712 || [],fmtRes_2818586717[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586701;

}

function editPrevEmptyScript_2818586744_2818586757(self_2818586758) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym753_2818586759 = getAstDocumentEditor_2818584140(self_2818586758);
      if (isNone_2818584258(rHEX60gensym753_2818586759)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2818586749(get_2818584278(rHEX60gensym753_2818586759));
  };

  
}

function editPrevEmptyApi_2818586785(HEX3Atmp_2818586746) {
  var result_2818586786 = null;

    result_2818586786 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2818586744_2818586757(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586746, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym758_2818586792 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2818586797 = [mnewString(0)];
    fmtRes_2818586797[0].push.apply(fmtRes_2818586797[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586797, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym758_2818586792 || [],fmtRes_2818586797[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586786;

}

function editNextEmptyScript_2818586807_2818586828(self_2818586829) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym762_2818586830 = getAstDocumentEditor_2818584140(self_2818586829);
      if (isNone_2818584258(rHEX60gensym762_2818586830)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2818586812(get_2818584278(rHEX60gensym762_2818586830));
  };

  
}

function editNextEmptyApi_2818586856(HEX3Atmp_2818586809) {
  var result_2818586857 = null;

    result_2818586857 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2818586807_2818586828(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586809, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym767_2818586863 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2818586868 = [mnewString(0)];
    fmtRes_2818586868[0].push.apply(fmtRes_2818586868[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586868, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym767_2818586863 || [],fmtRes_2818586868[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586857;

}

function renameScript_2818586884_2818586891(self_2818586892) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym771_2818586893 = getAstDocumentEditor_2818584140(self_2818586892);
      if (isNone_2818584258(rHEX60gensym771_2818586893)) {
      break BeforeRet;
      }
      
    };
    rename_2818586889(get_2818584278(rHEX60gensym771_2818586893));
  };

  
}

function renameApi_2818586919(HEX3Atmp_2818586886) {
  var result_2818586920 = null;

    result_2818586920 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2818586884_2818586891(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586886, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym776_2818586926 = [114,101,110,97,109,101];
    var fmtRes_2818586931 = [mnewString(0)];
    fmtRes_2818586931[0].push.apply(fmtRes_2818586931[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586931, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym776_2818586926 || [],fmtRes_2818586931[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586920;

}

function selectPrevCompletionScript2_2818586934_2818586952(self_2818586953) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym779_2818586954 = getAstDocumentEditor_2818584140(self_2818586953);
      if (isNone_2818584258(rHEX60gensym779_2818586954)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818586939(get_2818584278(rHEX60gensym779_2818586954));
  };

  
}

function selectPrevCompletionApi2_2818586980(HEX3Atmp_2818586936) {
  var result_2818586981 = null;

    result_2818586981 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2818586934_2818586952(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586936, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym784_2818586987 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818586992 = [mnewString(0)];
    fmtRes_2818586992[0].push.apply(fmtRes_2818586992[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586992, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym784_2818586987 || [],fmtRes_2818586992[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586981;

}

function selectNextCompletionScript2_2818586995_2818587013(editor_2818587014) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym788_2818587015 = getAstDocumentEditor_2818584140(editor_2818587014);
      if (isNone_2818584258(rHEX60gensym788_2818587015)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818587000(get_2818584278(rHEX60gensym788_2818587015));
  };

  
}

function selectNextCompletionApi2_2818587041(HEX3Atmp_2818586997) {
  var result_2818587042 = null;

    result_2818587042 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2818586995_2818587013(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818586997, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym793_2818587048 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818587053 = [mnewString(0)];
    fmtRes_2818587053[0].push.apply(fmtRes_2818587053[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587053, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym793_2818587048 || [],fmtRes_2818587053[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587042;

}

function applySelectedCompletionScript2_2818587056_2818587176(editor_2818587177) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym797_2818587178 = getAstDocumentEditor_2818584140(editor_2818587177);
      if (isNone_2818584258(rHEX60gensym797_2818587178)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818587061(get_2818584278(rHEX60gensym797_2818587178));
  };

  
}

function applySelectedCompletionApi2_2818587204(HEX3Atmp_2818587058) {
  var result_2818587205 = null;

    result_2818587205 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2818587056_2818587176(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587058, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym802_2818587211 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818587216 = [mnewString(0)];
    fmtRes_2818587216[0].push.apply(fmtRes_2818587216[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587216, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym802_2818587211 || [],fmtRes_2818587216[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587205;

}

function cancelAndNextCompletionScript_2818587267_2818587274(self_2818587275) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym812_2818587276 = getAstDocumentEditor_2818584140(self_2818587275);
      if (isNone_2818584258(rHEX60gensym812_2818587276)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2818587272(get_2818584278(rHEX60gensym812_2818587276));
  };

  
}

function cancelAndNextCompletionApi_2818587302(HEX3Atmp_2818587269) {
  var result_2818587303 = null;

    result_2818587303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2818587267_2818587274(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587269, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym817_2818587309 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818587314 = [mnewString(0)];
    fmtRes_2818587314[0].push.apply(fmtRes_2818587314[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587314, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym817_2818587309 || [],fmtRes_2818587314[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587303;

}

function cancelAndPrevCompletionScript_2818587317_2818587324(self_2818587325) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym820_2818587326 = getAstDocumentEditor_2818584140(self_2818587325);
      if (isNone_2818584258(rHEX60gensym820_2818587326)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2818587322(get_2818584278(rHEX60gensym820_2818587326));
  };

  
}

function cancelAndPrevCompletionApi_2818587352(HEX3Atmp_2818587319) {
  var result_2818587353 = null;

    result_2818587353 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2818587317_2818587324(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587319, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym825_2818587359 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818587364 = [mnewString(0)];
    fmtRes_2818587364[0].push.apply(fmtRes_2818587364[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587364, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym825_2818587359 || [],fmtRes_2818587364[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587353;

}

function cancelAndDeleteScript_2818587367_2818587377(self_2818587378) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym828_2818587379 = getAstDocumentEditor_2818584140(self_2818587378);
      if (isNone_2818584258(rHEX60gensym828_2818587379)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2818587372(get_2818584278(rHEX60gensym828_2818587379));
  };

  
}

function cancelAndDeleteApi_2818587405(HEX3Atmp_2818587369) {
  var result_2818587406 = null;

    result_2818587406 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2818587367_2818587377(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587369, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym833_2818587412 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2818587417 = [mnewString(0)];
    fmtRes_2818587417[0].push.apply(fmtRes_2818587417[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587417, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym833_2818587412 || [],fmtRes_2818587417[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587406;

}

function moveNodeToPrevSpaceScript_2818587420_2818587531(self_2818587532) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym836_2818587533 = getAstDocumentEditor_2818584140(self_2818587532);
      if (isNone_2818584258(rHEX60gensym836_2818587533)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2818587425(get_2818584278(rHEX60gensym836_2818587533));
  };

  
}

function moveNodeToPrevSpaceApi_2818587559(HEX3Atmp_2818587422) {
  var result_2818587560 = null;

    result_2818587560 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2818587420_2818587531(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587422, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym841_2818587566 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2818587571 = [mnewString(0)];
    fmtRes_2818587571[0].push.apply(fmtRes_2818587571[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587571, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym841_2818587566 || [],fmtRes_2818587571[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587560;

}

function moveNodeToNextSpaceScript_2818587582_2818587694(self_2818587695) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym849_2818587696 = getAstDocumentEditor_2818584140(self_2818587695);
      if (isNone_2818584258(rHEX60gensym849_2818587696)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2818587587(get_2818584278(rHEX60gensym849_2818587696));
  };

  
}

function moveNodeToNextSpaceApi_2818587722(HEX3Atmp_2818587584) {
  var result_2818587723 = null;

    result_2818587723 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2818587582_2818587694(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587584, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym854_2818587729 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2818587734 = [mnewString(0)];
    fmtRes_2818587734[0].push.apply(fmtRes_2818587734[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587734, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym854_2818587729 || [],fmtRes_2818587734[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587723;

}

function selectPrevScript2_2818587748_2818587755(self_2818587756) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym861_2818587757 = getAstDocumentEditor_2818584140(self_2818587756);
      if (isNone_2818584258(rHEX60gensym861_2818587757)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818587753(get_2818584278(rHEX60gensym861_2818587757));
  };

  
}

function selectPrevApi2_2818587783(HEX3Atmp_2818587750) {
  var result_2818587784 = null;

    result_2818587784 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2818587748_2818587755(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587750, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym866_2818587790 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818587795 = [mnewString(0)];
    fmtRes_2818587795[0].push.apply(fmtRes_2818587795[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587795, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym866_2818587790 || [],fmtRes_2818587795[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587784;

}

function selectNextScript2_2818587799_2818587806(self_2818587807) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym869_2818587808 = getAstDocumentEditor_2818584140(self_2818587807);
      if (isNone_2818584258(rHEX60gensym869_2818587808)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818587804(get_2818584278(rHEX60gensym869_2818587808));
  };

  
}

function selectNextApi2_2818587834(HEX3Atmp_2818587801) {
  var result_2818587835 = null;

    result_2818587835 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2818587799_2818587806(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587801, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym874_2818587841 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818587846 = [mnewString(0)];
    fmtRes_2818587846[0].push.apply(fmtRes_2818587846[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587846, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym874_2818587841 || [],fmtRes_2818587846[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587835;

}

function gotoScript_2818587850_2818588637(self_2818588638, where_2818588639) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym878_2818588640 = getAstDocumentEditor_2818584140(self_2818588638);
      if (isNone_2818584258(rHEX60gensym878_2818588640)) {
      break BeforeRet;
      }
      
    };
    goto_2818587855(get_2818584278(rHEX60gensym878_2818588640), where_2818588639);
  };

  
}

function gotoApi_2818588667(HEX3Atmp_2818587852) {
  var result_2818588668 = null;

    result_2818588668 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2818587850_2818588637(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818587852, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587852, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym883_2818588679 = [103,111,116,111];
    var fmtRes_2818588684 = [mnewString(0)];
    fmtRes_2818588684[0].push.apply(fmtRes_2818588684[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588684, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym883_2818588679 || [],fmtRes_2818588684[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588668;

}

function runSelectedFunctionScript_2818588792_2818589018(self_2818589019) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym904_2818589020 = getAstDocumentEditor_2818584140(self_2818589019);
      if (isNone_2818584258(rHEX60gensym904_2818589020)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2818588797(get_2818584278(rHEX60gensym904_2818589020));
  };

  
}

function runSelectedFunctionApi_2818589046(HEX3Atmp_2818588794) {
  var result_2818589047 = null;

    result_2818589047 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2818588792_2818589018(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818588794, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym909_2818589053 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2818589058 = [mnewString(0)];
    fmtRes_2818589058[0].push.apply(fmtRes_2818589058[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589058, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym909_2818589053 || [],fmtRes_2818589058[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589047;

}

function toggleOptionScript_2818589070_2818589078(self_2818589079, name_2818589080) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym927_2818589081 = getAstDocumentEditor_2818584140(self_2818589079);
      if (isNone_2818584258(rHEX60gensym927_2818589081)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2818589075(get_2818584278(rHEX60gensym927_2818589081), name_2818589080);
  };

  
}

function toggleOptionApi_2818589108(HEX3Atmp_2818589072) {
  var result_2818589109 = null;

    result_2818589109 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2818589070_2818589078(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym932_2818589120 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2818589125 = [mnewString(0)];
    fmtRes_2818589125[0].push.apply(fmtRes_2818589125[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589125, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym932_2818589120 || [],fmtRes_2818589125[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589109;

}

function runLastCommandScript_2818589132_2818589140(self_2818589141, which_2818589142) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym936_2818589143 = getAstDocumentEditor_2818584140(self_2818589141);
      if (isNone_2818584258(rHEX60gensym936_2818589143)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2818589137(get_2818584278(rHEX60gensym936_2818589143), which_2818589142);
  };

  
}

function runLastCommandApi_2818589170(HEX3Atmp_2818589134) {
  var result_2818589171 = null;

    result_2818589171 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2818589132_2818589140(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589134, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589134, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym941_2818589182 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2818589187 = [mnewString(0)];
    fmtRes_2818589187[0].push.apply(fmtRes_2818589187[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589187, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym941_2818589182 || [],fmtRes_2818589187[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589171;

}

function selectCenterNodeScript_2818589190_2818589604(self_2818589605) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym944_2818589606 = getAstDocumentEditor_2818584140(self_2818589605);
      if (isNone_2818584258(rHEX60gensym944_2818589606)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2818589195(get_2818584278(rHEX60gensym944_2818589606));
  };

  
}

function selectCenterNodeApi_2818589632(HEX3Atmp_2818589192) {
  var result_2818589633 = null;

    result_2818589633 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2818589190_2818589604(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589192, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym949_2818589639 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2818589644 = [mnewString(0)];
    fmtRes_2818589644[0].push.apply(fmtRes_2818589644[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589644, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym949_2818589639 || [],fmtRes_2818589644[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589633;

}

function scrollScript_2818589676_2818589688(self_2818589689, amount_2818589690) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym963_2818589691 = getAstDocumentEditor_2818584140(self_2818589689);
      if (isNone_2818584258(rHEX60gensym963_2818589691)) {
      break BeforeRet;
      }
      
    };
    scroll_2818589681(get_2818584278(rHEX60gensym963_2818589691), amount_2818589690);
  };

  
}

function scrollApi_2818589718(HEX3Atmp_2818589678) {
  var result_2818589719 = null;

    result_2818589719 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2818589676_2818589688(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589678, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2650811123(HEX5BHEX5D_1627393116(HEX3Atmp_2818589678, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym968_2818589730 = [115,99,114,111,108,108];
    var fmtRes_2818589735 = [mnewString(0)];
    fmtRes_2818589735[0].push.apply(fmtRes_2818589735[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589735, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym968_2818589730 || [],fmtRes_2818589735[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589719;

}

function scrollOutputScript_2818589738_2818589757(self_2818589758, arg_2818589759) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym972_2818589760 = getAstDocumentEditor_2818584140(self_2818589758);
      if (isNone_2818584258(rHEX60gensym972_2818589760)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2818589743(get_2818584278(rHEX60gensym972_2818589760), arg_2818589759);
  };

  
}

function scrollOutputApi_2818589787(HEX3Atmp_2818589740) {
  var result_2818589788 = null;

    result_2818589788 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2818589738_2818589757(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589740, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589740, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym977_2818589799 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2818589804 = [mnewString(0)];
    fmtRes_2818589804[0].push.apply(fmtRes_2818589804[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589804, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym977_2818589799 || [],fmtRes_2818589804[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589788;

}

function dumpContextScript_2818589807_2818589814(self_2818589815) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym980_2818589816 = getAstDocumentEditor_2818584140(self_2818589815);
      if (isNone_2818584258(rHEX60gensym980_2818589816)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2818589812(get_2818584278(rHEX60gensym980_2818589816));
  };

  
}

function dumpContextApi_2818589842(HEX3Atmp_2818589809) {
  var result_2818589843 = null;

    result_2818589843 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2818589807_2818589814(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818589809, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym985_2818589849 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2818589854 = [mnewString(0)];
    fmtRes_2818589854[0].push.apply(fmtRes_2818589854[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589854, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym985_2818589849 || [],fmtRes_2818589854[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589843;

}

function setModeScript2_2818590001_2818590041(self_2818590042, mode_2818590043) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym989_2818590044 = getAstDocumentEditor_2818584140(self_2818590042);
      if (isNone_2818584258(rHEX60gensym989_2818590044)) {
      break BeforeRet;
      }
      
    };
    setMode_2818590006(get_2818584278(rHEX60gensym989_2818590044), mode_2818590043);
  };

  
}

function setModeApi2_2818590071(HEX3Atmp_2818590003) {
  var result_2818590072 = null;

    result_2818590072 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2818590001_2818590041(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818590003, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590003, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym994_2818590083 = [115,101,116,77,111,100,101];
    var fmtRes_2818590088 = [mnewString(0)];
    fmtRes_2818590088[0].push.apply(fmtRes_2818590088[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590088, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym994_2818590083 || [],fmtRes_2818590088[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590072;

}

function modeScript2_2818590092_2818590100(self_2818590101) {
  var result_2818590102 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1000_2818590103 = getAstDocumentEditor_2818584140(self_2818590101);
      if (isNone_2818584258(rHEX60gensym1000_2818590103)) {
      break BeforeRet;
      }
      
    };
    result_2818590102 = nimCopy(null, mode_2818590097(get_2818584278(rHEX60gensym1000_2818590103)), NTI33554449);
  };

  return result_2818590102;

}

function modeApi2_2818590130(HEX3Atmp_2818590094) {
  var result_2818590131 = null;

  BeforeRet: {
    result_2818590131 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818590131 = toJson_1811939932(modeScript2_2818590092_2818590100(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818590094, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1006_2818590141 = [109,111,100,101];
    var fmtRes_2818590146 = [mnewString(0)];
    fmtRes_2818590146[0].push.apply(fmtRes_2818590146[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590146, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1006_2818590141 || [],fmtRes_2818590146[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818590131;

}

function getContextWithModeScript2_2818590149_2818590158(self_2818590159, context_2818590160) {
  var result_2818590161 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1010_2818590162 = getAstDocumentEditor_2818584140(self_2818590159);
      if (isNone_2818584258(rHEX60gensym1010_2818590162)) {
      break BeforeRet;
      }
      
    };
    result_2818590161 = nimCopy(null, getContextWithMode_2818590154(get_2818584278(rHEX60gensym1010_2818590162), context_2818590160), NTI33554449);
  };

  return result_2818590161;

}

function getContextWithModeApi2_2818590190(HEX3Atmp_2818590151) {
  var result_2818590191 = null;

  BeforeRet: {
    result_2818590191 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818590191 = toJson_1811939932(getContextWithModeScript2_2818590149_2818590158(jsonTo_2818584305(HEX5BHEX5D_1627393116(HEX3Atmp_2818590151, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590151, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1016_2818590206 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818590211 = [mnewString(0)];
    fmtRes_2818590211[0].push.apply(fmtRes_2818590211[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590211, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1016_2818590206 || [],fmtRes_2818590211[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818590191;

}

function dispatch_2818590216(command_2818590215, arg_2818590214) {
    var Temporary1;

  var result_2818590218 = ({val: null});

    switch (toJSStr(command_2818590215)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2650815976(moveCursorApi_2818584303(arg_2818590214));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2650815976(moveCursorUpApi_2818584445(arg_2818590214));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2650815976(moveCursorDownApi_2818584495(arg_2818590214));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2650815976(moveCursorNextApi_2818584552(arg_2818590214));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2650815976(moveCursorPrevApi_2818584619(arg_2818590214));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2650815976(moveCursorNextLineApi_2818584705(arg_2818590214));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2650815976(moveCursorPrevLineApi_2818584790(arg_2818590214));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2650815976(selectContainingApi_2818585009(arg_2818590214));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2650815976(deleteSelectedApi_2818585067(arg_2818590214));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2650815976(copySelectedApi_2818585183(arg_2818590214));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2650815976(finishEditApi_2818585293(arg_2818590214));
      break;
    case "undo":
      Temporary1 = some_2650815976(undoApi2_2818585414(arg_2818590214));
      break;
    case "redo":
      Temporary1 = some_2650815976(redoApi2_2818585491(arg_2818590214));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2650815976(insertAfterSmartApi_2818585661(arg_2818590214));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2650815976(insertAfterApi_2818585984(arg_2818590214));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2650815976(insertBeforeApi_2818586138(arg_2818590214));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2650815976(insertChildApi_2818586291(arg_2818590214));
      break;
    case "replace":
      Temporary1 = some_2650815976(replaceApi_2818586398(arg_2818590214));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2650815976(replaceEmptyApi_2818586509(arg_2818590214));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2650815976(replaceParentApi_2818586586(arg_2818590214));
      break;
    case "wrap":
      Temporary1 = some_2650815976(wrapApi_2818586700(arg_2818590214));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2650815976(editPrevEmptyApi_2818586785(arg_2818590214));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2650815976(editNextEmptyApi_2818586856(arg_2818590214));
      break;
    case "rename":
      Temporary1 = some_2650815976(renameApi_2818586919(arg_2818590214));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2650815976(selectPrevCompletionApi2_2818586980(arg_2818590214));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2650815976(selectNextCompletionApi2_2818587041(arg_2818590214));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2650815976(applySelectedCompletionApi2_2818587204(arg_2818590214));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2650815976(cancelAndNextCompletionApi_2818587302(arg_2818590214));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2650815976(cancelAndPrevCompletionApi_2818587352(arg_2818590214));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2650815976(cancelAndDeleteApi_2818587405(arg_2818590214));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2650815976(moveNodeToPrevSpaceApi_2818587559(arg_2818590214));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2650815976(moveNodeToNextSpaceApi_2818587722(arg_2818590214));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2650815976(selectPrevApi2_2818587783(arg_2818590214));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2650815976(selectNextApi2_2818587834(arg_2818590214));
      break;
    case "goto":
      Temporary1 = some_2650815976(gotoApi_2818588667(arg_2818590214));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2650815976(runSelectedFunctionApi_2818589046(arg_2818590214));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2650815976(toggleOptionApi_2818589108(arg_2818590214));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2650815976(runLastCommandApi_2818589170(arg_2818590214));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2650815976(selectCenterNodeApi_2818589632(arg_2818590214));
      break;
    case "scroll":
      Temporary1 = some_2650815976(scrollApi_2818589718(arg_2818590214));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2650815976(scrollOutputApi_2818589787(arg_2818590214));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2650815976(dumpContextApi_2818589842(arg_2818590214));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2650815976(setModeApi2_2818590071(arg_2818590214));
      break;
    case "mode":
      Temporary1 = some_2650815976(modeApi2_2818590130(arg_2818590214));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2650815976(getContextWithModeApi2_2818590190(arg_2818590214));
      break;
    default: 
      Temporary1 = none_2650816172();
      break;
    }
    result_2818590218 = nimCopy(result_2818590218, Temporary1, NTI2650810879);

  return result_2818590218;

}

function handleAction_2818589127(self_2818589128, action_2818589129, arg_2818589130) {
  var result_2818590364 = 0;

  BeforeRet: {
    var args_2818590365 = newJArray_1627390082();
    add_1627390190(args_2818590365, toJson_2818584227({id: self_2818589128.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2818590366 = null;
      var colontmp__536872113 = null;
      colontmp__536872113 = newStringStream_1660945417(arg_2818589130);
      var p_536872114 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872114[0], colontmp__536872113, [], false);
      try {
      var _ = getTok_1694499270(p_536872114[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872114[0].tok == 1))) break Label4;
            a_2818590366 = parseJson_1627395211(p_536872114[0], false, false, 0);
            add_1627390190(args_2818590365, a_2818590366);
          }
      };
      } finally {
      close_1694498967(p_536872114[0]);
      }
    };
    var newLastCommand_2818590367 = {Field0: nimCopy(null, action_2818589129, NTI33554449), Field1: nimCopy(null, arg_2818589130, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848837(self_2818589128.editor, self_2818589128, action_2818589129, args_2818590365) == 3)) {
    result_2818590364 = 3;
    break BeforeRet;
    }
    
    if (isSome_2650816240(dispatch_2818590216(action_2818589129, args_2818590365))) {
    result_2818590364 = 3;
    break BeforeRet;
    }
    
    result_2818590364 = 1;
    break BeforeRet;
    } finally {
    self_2818589128.lastCommand = nimCopy(self_2818589128.lastCommand, newLastCommand_2818590367, NTI2818573826);
    }
  };

  return result_2818590364;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet313[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872232 = 0;
      colontmp__536872232 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872233 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872233 <= colontmp__536872232)) break Label3;
            i_855638867 = res_536872233;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872233 = addInt(res_536872233, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872236 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872237 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872238 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872236, NTI1191182360), Field1: colontmp__536872237, Field2: colontmp__536872238}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872239 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872239["Field0"];
    var m_1191182547 = colontmp__536872239["Field1"];
    var d_1191182548 = colontmp__536872239["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872235 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872235["Field0"];
    var m_1191183687 = colontmp__536872235["Field1"];
    var y_1191183688 = colontmp__536872235["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872224 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872224 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872224, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872224 = addInt(i_536872224, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet312[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872229 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872229 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872229, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872229 = addInt(i_536872229, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function HEX24_2818577246(document_2818577247) {
  var result_2818577248 = [];

  BeforeRet: {
    result_2818577248 = nimCopy(null, document_2818577247.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818577248;

}

function HEX24_2650804174(document_2650804175) {
  var result_2650804176 = [];

  BeforeRet: {
    result_2650804176 = nimCopy(null, document_2650804175.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2650804176;

}

function HEX24_2130706435(document_2130706436) {
  var result_2130706437 = [];

  BeforeRet: {
    result_2130706437 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2130706437;

}

function HEX24_2130706438(document_2130706436) {
  var result_2130706439 = [];

  BeforeRet: {
    chckNilDisp(document_2130706436);
    if (isObj(document_2130706436.m_type, NTI2818573774)) {
    result_2130706439 = HEX24_2818577246(document_2130706436);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706436.m_type, NTI2650800263)) {
    result_2130706439 = HEX24_2650804174(document_2130706436);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706436.m_type, NTI2130706436)) {
    result_2130706439 = HEX24_2130706435(document_2130706436);
    break BeforeRet;
    }
    }}
  };

  return result_2130706439;

}

function toJson_2852128955(kind_2852128956, opt_2852128957) {
  var result_2852128958 = null;

  BeforeRet: {
    result_2852128958 = newJString_1627389994(reprEnum(kind_2852128956, NTI2852126723));
    break BeforeRet;
  };

  return result_2852128958;

}

function toJson_2181038348(id_2181038349, opt_2181038350) {
  var result_2181038351 = null;

  BeforeRet: {
    result_2181038351 = newJString_1627389994(HEX24_2181038317(id_2181038349));
    break BeforeRet;
  };

  return result_2181038351;

}

function join_2852128997(a_2852128999, sep_2852129000) {
  var result_2852129001 = [];

    result_2852129001 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2852129016 = 0;
      var x_2852129017 = 0;
      var i_536872246 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872246 < (a_2852128999).length)) break Label3;
            i_2852129016 = i_536872246;
            x_2852129017 = a_2852128999[chckIndx(i_536872246, 0, (a_2852128999).length - 1)];
            if ((0 < i_2852129016)) {
            result_2852129001.push.apply(result_2852129001, sep_2852129000);;
            }
            
            result_2852129001.push.apply(result_2852129001, HEX24_369098760(x_2852129017));;
            i_536872246 = addInt(i_536872246, 1);
          }
      };
    };

  return result_2852129001;

}

function toJson_2852128989(node_2852128990, opt_2852128991) {
  var result_2852128992 = null;

    result_2852128992 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [107,105,110,100], toJson_2852128955(node_2852128990.kind, opt_2852128991));
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [105,100], toJson_2181038348(node_2852128990.id, opt_2852128991));
    if (!(HEX3DHEX3D_2181038320(node_2852128990.reff, null_2181038340))) {
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [114,101,102,102], toJson_2181038348(node_2852128990.reff, opt_2852128991));
    }
    
    if ((0 < (node_2852128990.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [116,101,120,116], toJson_1811939932(node_2852128990.text, opt_2852128991));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [112,97,116,104], newJString_1627389994(join_2852128997(path_2852128675(node_2852128990), [44,32])));
    if ((0 < len_2852126808(node_2852128990))) {
    var children_2852129018 = newJArray_1627390082();
    Label1: {
      var child_2852129022 = null;
      var i_536872241 = 0;
      var L_536872242 = (node_2852128990.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872241 < L_536872242)) break Label3;
            child_2852129022 = node_2852128990.children[chckIndx(i_536872241, 0, (node_2852128990.children).length - 1)];
            add_1627390190(children_2852129018, toJson_2852128989(child_2852129022, opt_2852128991));
            i_536872241 = addInt(i_536872241, 1);
            if (!(((node_2852128990.children).length == L_536872242))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_2852128992, [99,104,105,108,100,114,101,110], children_2852129018);
    }
    

  return result_2852128992;

}

function saveFile_2516582410(self_2516582411, path_2516582412, content_2516582413) {
  
}

function saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196) {
  
}

function saveFile_2499805197(self_2499805194, path_2499805195, content_2499805196) {
    chckNilDisp(self_2499805194);
    if (isObj(self_2499805194.m_type, NTI2516582404)) {
    saveFile_2516582410(self_2499805194, path_2499805195, content_2499805196);
    }
    else {
    if (isObj(self_2499805194.m_type, NTI2499805188)) {
    saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196);
    }
    }

  
}

function serializeHtml_3053454428(self_3053454429, theme_3053454430) {
  var result_3053454431 = [];

  BeforeRet: {
    var title_3053454432 = nimCopy(null, nossplitFile(self_3053454429.filename).Field1, NTI33554449);
    var body_3053454433 = [];
    var diagnosticsCss_3053454434 = [];
    var fmtRes_3053454439 = [mnewString(0)];
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3053454439, 0, title_3053454432, []);
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3053454439, 0, diagnosticsCss_3053454434, []);
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3053454439, 0, title_3053454432, []);
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3053454439, 0, title_3053454432, []);
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3053454439, 0, body_3053454433, []);
    fmtRes_3053454439[0].push.apply(fmtRes_3053454439[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3053454431 = nimCopy(null, fmtRes_3053454439[0], NTI33554449);
    break BeforeRet;
  };

  return result_3053454431;

}

function saveHtml_2818577281(self_2818577282) {
    var pathParts_2818577283 = nossplitFile(self_2818577282.filename);
    var htmlPath_2818577284 = HEX2F_1426063446(pathParts_2818577283.Field0, (pathParts_2818577283.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2818577285 = serializeHtml_3053454428(self_2818577282, gEditor.theme);
    saveFile_2499805197(fs_2499805237, htmlPath_2818577284, html_2818577285);

  
}

function save_2818577286(self_2818577287, filename_2818577288) {
    var Temporary1;

    if ((0 < (filename_2818577288).length)) {
    Temporary1 = filename_2818577288;
    }
    else {
    Temporary1 = self_2818577287.filename;
    }
    
    self_2818577287.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818577287.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2818577294 = [mnewString(0)];
    fmtRes_2818577294[0].push.apply(fmtRes_2818577294[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2818577294, 0, self_2818577287.filename, []);
    fmtRes_2818577294[0].push.apply(fmtRes_2818577294[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818577294[0], NTI33554449)]);
    var serialized_2818577295 = toJson_2852128989(self_2818577287.rootNode, initToJsonOptions_1811939362());
    saveFile_2499805197(fs_2499805237, self_2818577287.filename, pretty_1627394477(serialized_2818577295, 2));
    saveHtml_2818577281(self_2818577287);

  
}

function save_2650804177(self_2650804178, filename_2650804179) {
    var Temporary1;

    if ((0 < (filename_2650804179).length)) {
    Temporary1 = filename_2650804179;
    }
    else {
    Temporary1 = self_2650804178.filename;
    }
    
    self_2650804178.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2650804178.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    saveFile_2499805197(fs_2499805237, self_2650804178.filename, nsuJoinSep(self_2650804178.lines, [10]));

  
}

function save_2130706440(self_2130706441, filename_2130706442) {
  
}

function save_2130706443(self_2130706441, filename_2130706442) {
    chckNilDisp(self_2130706441);
    if (isObj(self_2130706441.m_type, NTI2818573774)) {
    save_2818577286(self_2130706441, filename_2130706442);
    }
    else {
    if (isObj(self_2130706441.m_type, NTI2650800263)) {
    save_2650804177(self_2130706441, filename_2130706442);
    }
    else {
    if (isObj(self_2130706441.m_type, NTI2130706436)) {
    save_2130706440(self_2130706441, filename_2130706442);
    }
    }}

  
}

function loadFile_2516582406(self_2516582407, path_2516582408) {
  var result_2516582409 = [];

  BeforeRet: {
    result_2516582409 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2516582408))), NTI33554449);
    break BeforeRet;
  };

  return result_2516582409;

}

function loadFile_2499805187(self_2499805188, path_2499805189) {
  var result_2499805190 = [];

  return result_2499805190;

}

function loadFile_2499805191(self_2499805188, path_2499805189) {
  var result_2499805192 = [];

  BeforeRet: {
    chckNilDisp(self_2499805188);
    if (isObj(self_2499805188.m_type, NTI2516582404)) {
    result_2499805192 = loadFile_2516582406(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805188.m_type, NTI2499805188)) {
    result_2499805192 = loadFile_2499805187(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    }
  };

  return result_2499805192;

}

function clear_2869016876(t_2869016879) {
    Label1: {
      var i_2869016965 = 0;
      var colontmp__536872249 = 0;
      colontmp__536872249 = (t_2869016879.data).length;
      var i_536872250 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872250 < colontmp__536872249)) break Label3;
            i_2869016965 = i_536872250;
            t_2869016879.data[chckIndx(i_2869016965, 0, (t_2869016879.data).length - 1)].Field0 = 0;
            t_2869016879.data[chckIndx(i_2869016965, 0, (t_2869016879.data).length - 1)].Field1 = nimCopy(t_2869016879.data[chckIndx(i_2869016965, 0, (t_2869016879.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2869016879.data[chckIndx(i_2869016965, 0, (t_2869016879.data).length - 1)].Field2 = null;
            i_536872250 = addInt(i_536872250, 1);
          }
      };
    };
    t_2869016879.counter = 0;

  
}

function clear_2869016794(cache_2869016797) {
    cache_2869016797.list = nimCopy(cache_2869016797.list, initDoublyLinkedList_2885683426(), NTI2885681222);
    clear_2869016876(cache_2869016797.table);

  
}

function clear_2869017688(t_2869017691) {
    Label1: {
      var i_2869017777 = 0;
      var colontmp__536872253 = 0;
      colontmp__536872253 = (t_2869017691.data).length;
      var i_536872254 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872254 < colontmp__536872253)) break Label3;
            i_2869017777 = i_536872254;
            t_2869017691.data[chckIndx(i_2869017777, 0, (t_2869017691.data).length - 1)].Field0 = 0;
            t_2869017691.data[chckIndx(i_2869017777, 0, (t_2869017691.data).length - 1)].Field1 = nimCopy(t_2869017691.data[chckIndx(i_2869017777, 0, (t_2869017691.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2869017691.data[chckIndx(i_2869017777, 0, (t_2869017691.data).length - 1)].Field2 = null;
            i_536872254 = addInt(i_536872254, 1);
          }
      };
    };
    t_2869017691.counter = 0;

  
}

function clear_2869017606(cache_2869017609) {
    cache_2869017609.list = nimCopy(cache_2869017609.list, initDoublyLinkedList_2885683498(), NTI2885681301);
    clear_2869017688(cache_2869017609.table);

  
}

function clear_2869018422(t_2869018425) {
    Label1: {
      var i_2869018511 = 0;
      var colontmp__536872257 = 0;
      colontmp__536872257 = (t_2869018425.data).length;
      var i_536872258 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872258 < colontmp__536872257)) break Label3;
            i_2869018511 = i_536872258;
            t_2869018425.data[chckIndx(i_2869018511, 0, (t_2869018425.data).length - 1)].Field0 = 0;
            t_2869018425.data[chckIndx(i_2869018511, 0, (t_2869018425.data).length - 1)].Field1 = nimCopy(t_2869018425.data[chckIndx(i_2869018511, 0, (t_2869018425.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI2885681180);
            t_2869018425.data[chckIndx(i_2869018511, 0, (t_2869018425.data).length - 1)].Field2 = null;
            i_536872258 = addInt(i_536872258, 1);
          }
      };
    };
    t_2869018425.counter = 0;

  
}

function clear_2869018340(cache_2869018343) {
    cache_2869018343.list = nimCopy(cache_2869018343.list, initDoublyLinkedList_2885683566(), NTI2885681368);
    clear_2869018422(cache_2869018343.table);

  
}

function clear_2869019156(t_2869019159) {
    Label1: {
      var i_2869019245 = 0;
      var colontmp__536872261 = 0;
      colontmp__536872261 = (t_2869019159.data).length;
      var i_536872262 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872262 < colontmp__536872261)) break Label3;
            i_2869019245 = i_536872262;
            t_2869019159.data[chckIndx(i_2869019245, 0, (t_2869019159.data).length - 1)].Field0 = 0;
            t_2869019159.data[chckIndx(i_2869019245, 0, (t_2869019159.data).length - 1)].Field1 = nimCopy(t_2869019159.data[chckIndx(i_2869019245, 0, (t_2869019159.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2869019159.data[chckIndx(i_2869019245, 0, (t_2869019159.data).length - 1)].Field2 = null;
            i_536872262 = addInt(i_536872262, 1);
          }
      };
    };
    t_2869019159.counter = 0;

  
}

function clear_2869019074(cache_2869019077) {
    cache_2869019077.list = nimCopy(cache_2869019077.list, initDoublyLinkedList_2868955678(), NTI2868904016);
    clear_2869019156(cache_2869019077.table);

  
}

function clear_2869019890(t_2869019893) {
    Label1: {
      var i_2869019979 = 0;
      var colontmp__536872265 = 0;
      colontmp__536872265 = (t_2869019893.data).length;
      var i_536872266 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872266 < colontmp__536872265)) break Label3;
            i_2869019979 = i_536872266;
            t_2869019893.data[chckIndx(i_2869019979, 0, (t_2869019893.data).length - 1)].Field0 = 0;
            t_2869019893.data[chckIndx(i_2869019979, 0, (t_2869019893.data).length - 1)].Field1 = nimCopy(t_2869019893.data[chckIndx(i_2869019979, 0, (t_2869019893.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2869019893.data[chckIndx(i_2869019979, 0, (t_2869019893.data).length - 1)].Field2 = null;
            i_536872266 = addInt(i_536872266, 1);
          }
      };
    };
    t_2869019893.counter = 0;

  
}

function clear_2869019808(cache_2869019811) {
    cache_2869019811.list = nimCopy(cache_2869019811.list, initDoublyLinkedList_2868955874(), NTI2868904153);
    clear_2869019890(cache_2869019811.table);

  
}

function clear_2869020624(t_2869020627) {
    Label1: {
      var i_2869020713 = 0;
      var colontmp__536872269 = 0;
      colontmp__536872269 = (t_2869020627.data).length;
      var i_536872270 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872270 < colontmp__536872269)) break Label3;
            i_2869020713 = i_536872270;
            t_2869020627.data[chckIndx(i_2869020713, 0, (t_2869020627.data).length - 1)].Field0 = 0;
            t_2869020627.data[chckIndx(i_2869020713, 0, (t_2869020627.data).length - 1)].Field1 = nimCopy(t_2869020627.data[chckIndx(i_2869020713, 0, (t_2869020627.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2869020627.data[chckIndx(i_2869020713, 0, (t_2869020627.data).length - 1)].Field2 = null;
            i_536872270 = addInt(i_536872270, 1);
          }
      };
    };
    t_2869020627.counter = 0;

  
}

function clear_2869020542(cache_2869020545) {
    cache_2869020545.list = nimCopy(cache_2869020545.list, initDoublyLinkedList_2868955776(), NTI2868904089);
    clear_2869020624(cache_2869020545.table);

  
}

function clear_2869021358(t_2869021361) {
    Label1: {
      var i_2869021447 = 0;
      var colontmp__536872273 = 0;
      colontmp__536872273 = (t_2869021361.data).length;
      var i_536872274 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872274 < colontmp__536872273)) break Label3;
            i_2869021447 = i_536872274;
            t_2869021361.data[chckIndx(i_2869021447, 0, (t_2869021361.data).length - 1)].Field0 = 0;
            t_2869021361.data[chckIndx(i_2869021447, 0, (t_2869021361.data).length - 1)].Field1 = nimCopy(t_2869021361.data[chckIndx(i_2869021447, 0, (t_2869021361.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI2885681177);
            t_2869021361.data[chckIndx(i_2869021447, 0, (t_2869021361.data).length - 1)].Field2 = null;
            i_536872274 = addInt(i_536872274, 1);
          }
      };
    };
    t_2869021361.counter = 0;

  
}

function clear_2869021276(cache_2869021279) {
    cache_2869021279.list = nimCopy(cache_2869021279.list, initDoublyLinkedList_2868955972(), NTI2868904217);
    clear_2869021358(cache_2869021279.table);

  
}

function clear_2869022092(t_2869022095) {
    Label1: {
      var i_2869022181 = 0;
      var colontmp__536872277 = 0;
      colontmp__536872277 = (t_2869022095.data).length;
      var i_536872278 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872278 < colontmp__536872277)) break Label3;
            i_2869022181 = i_536872278;
            t_2869022095.data[chckIndx(i_2869022181, 0, (t_2869022095.data).length - 1)].Field0 = 0;
            t_2869022095.data[chckIndx(i_2869022181, 0, (t_2869022095.data).length - 1)].Field1 = null;
            t_2869022095.data[chckIndx(i_2869022181, 0, (t_2869022095.data).length - 1)].Field2 = null;
            i_536872278 = addInt(i_536872278, 1);
          }
      };
    };
    t_2869022095.counter = 0;

  
}

function clear_2869022010(cache_2869022013) {
    cache_2869022013.list = nimCopy(cache_2869022013.list, initDoublyLinkedList_2868912642(), NTI2868904319);
    clear_2869022092(cache_2869022013.table);

  
}

function clear_2869022826(t_2869022829) {
    Label1: {
      var i_2869022915 = 0;
      var colontmp__536872281 = 0;
      colontmp__536872281 = (t_2869022829.data).length;
      var i_536872282 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872282 < colontmp__536872281)) break Label3;
            i_2869022915 = i_536872282;
            t_2869022829.data[chckIndx(i_2869022915, 0, (t_2869022829.data).length - 1)].Field0 = 0;
            t_2869022829.data[chckIndx(i_2869022915, 0, (t_2869022829.data).length - 1)].Field1 = null;
            t_2869022829.data[chckIndx(i_2869022915, 0, (t_2869022829.data).length - 1)].Field2 = null;
            i_536872282 = addInt(i_536872282, 1);
          }
      };
    };
    t_2869022829.counter = 0;

  
}

function clear_2869022744(cache_2869022747) {
    cache_2869022747.list = nimCopy(cache_2869022747.list, initDoublyLinkedList_2868916911(), NTI2868904394);
    clear_2869022826(cache_2869022747.table);

  
}

function clear_2869023560(t_2869023563) {
    Label1: {
      var i_2869023649 = 0;
      var colontmp__536872285 = 0;
      colontmp__536872285 = (t_2869023563.data).length;
      var i_536872286 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872286 < colontmp__536872285)) break Label3;
            i_2869023649 = i_536872286;
            t_2869023563.data[chckIndx(i_2869023649, 0, (t_2869023563.data).length - 1)].Field0 = 0;
            t_2869023563.data[chckIndx(i_2869023649, 0, (t_2869023563.data).length - 1)].Field1 = null;
            t_2869023563.data[chckIndx(i_2869023649, 0, (t_2869023563.data).length - 1)].Field2 = null;
            i_536872286 = addInt(i_536872286, 1);
          }
      };
    };
    t_2869023563.counter = 0;

  
}

function clear_2869023478(cache_2869023481) {
    cache_2869023481.list = nimCopy(cache_2869023481.list, initDoublyLinkedList_2868933307(), NTI2868904604);
    clear_2869023560(cache_2869023481.table);

  
}

function clear_2869024294(t_2869024297) {
    Label1: {
      var i_2869024383 = 0;
      var colontmp__536872289 = 0;
      colontmp__536872289 = (t_2869024297.data).length;
      var i_536872290 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872290 < colontmp__536872289)) break Label3;
            i_2869024383 = i_536872290;
            t_2869024297.data[chckIndx(i_2869024383, 0, (t_2869024297.data).length - 1)].Field0 = 0;
            t_2869024297.data[chckIndx(i_2869024383, 0, (t_2869024297.data).length - 1)].Field1 = null;
            t_2869024297.data[chckIndx(i_2869024383, 0, (t_2869024297.data).length - 1)].Field2 = null;
            i_536872290 = addInt(i_536872290, 1);
          }
      };
    };
    t_2869024297.counter = 0;

  
}

function clear_2869024212(cache_2869024215) {
    cache_2869024215.list = nimCopy(cache_2869024215.list, initDoublyLinkedList_2868937568(), NTI2868904679);
    clear_2869024294(cache_2869024215.table);

  
}

function clear_2869025028(t_2869025031) {
    Label1: {
      var i_2869025117 = 0;
      var colontmp__536872293 = 0;
      colontmp__536872293 = (t_2869025031.data).length;
      var i_536872294 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872294 < colontmp__536872293)) break Label3;
            i_2869025117 = i_536872294;
            t_2869025031.data[chckIndx(i_2869025117, 0, (t_2869025031.data).length - 1)].Field0 = 0;
            t_2869025031.data[chckIndx(i_2869025117, 0, (t_2869025031.data).length - 1)].Field1 = null;
            t_2869025031.data[chckIndx(i_2869025117, 0, (t_2869025031.data).length - 1)].Field2 = null;
            i_536872294 = addInt(i_536872294, 1);
          }
      };
    };
    t_2869025031.counter = 0;

  
}

function clear_2869024946(cache_2869024949) {
    cache_2869024949.list = nimCopy(cache_2869024949.list, initDoublyLinkedList_2868921172(), NTI2868904465);
    clear_2869025028(cache_2869024949.table);

  
}

function clear_2869025762(t_2869025765) {
    Label1: {
      var i_2869025851 = 0;
      var colontmp__536872297 = 0;
      colontmp__536872297 = (t_2869025765.data).length;
      var i_536872298 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872298 < colontmp__536872297)) break Label3;
            i_2869025851 = i_536872298;
            t_2869025765.data[chckIndx(i_2869025851, 0, (t_2869025765.data).length - 1)].Field0 = 0;
            t_2869025765.data[chckIndx(i_2869025851, 0, (t_2869025765.data).length - 1)].Field1 = null;
            t_2869025765.data[chckIndx(i_2869025851, 0, (t_2869025765.data).length - 1)].Field2 = null;
            i_536872298 = addInt(i_536872298, 1);
          }
      };
    };
    t_2869025765.counter = 0;

  
}

function clear_2869025680(cache_2869025683) {
    cache_2869025683.list = nimCopy(cache_2869025683.list, initDoublyLinkedList_2868925434(), NTI2868904538);
    clear_2869025762(cache_2869025683.table);

  
}

function clear_2869026496(t_2869026499) {
    Label1: {
      var i_2869026585 = 0;
      var colontmp__536872301 = 0;
      colontmp__536872301 = (t_2869026499.data).length;
      var i_536872302 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872302 < colontmp__536872301)) break Label3;
            i_2869026585 = i_536872302;
            t_2869026499.data[chckIndx(i_2869026585, 0, (t_2869026499.data).length - 1)].Field0 = 0;
            t_2869026499.data[chckIndx(i_2869026585, 0, (t_2869026499.data).length - 1)].Field1 = null;
            t_2869026499.data[chckIndx(i_2869026585, 0, (t_2869026499.data).length - 1)].Field2 = null;
            i_536872302 = addInt(i_536872302, 1);
          }
      };
    };
    t_2869026499.counter = 0;

  
}

function clear_2869026414(cache_2869026417) {
    cache_2869026417.list = nimCopy(cache_2869026417.list, initDoublyLinkedList_2868945463(), NTI2868904745);
    clear_2869026496(cache_2869026417.table);

  
}

function clear_2869027230(t_2869027233) {
    Label1: {
      var i_2869027319 = 0;
      var colontmp__536872305 = 0;
      colontmp__536872305 = (t_2869027233.data).length;
      var i_536872306 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872306 < colontmp__536872305)) break Label3;
            i_2869027319 = i_536872306;
            t_2869027233.data[chckIndx(i_2869027319, 0, (t_2869027233.data).length - 1)].Field0 = 0;
            t_2869027233.data[chckIndx(i_2869027319, 0, (t_2869027233.data).length - 1)].Field1 = null;
            t_2869027233.data[chckIndx(i_2869027319, 0, (t_2869027233.data).length - 1)].Field2 = null;
            i_536872306 = addInt(i_536872306, 1);
          }
      };
    };
    t_2869027233.counter = 0;

  
}

function clear_2869027148(cache_2869027151) {
    cache_2869027151.list = nimCopy(cache_2869027151.list, initDoublyLinkedList_2868953358(), NTI2868904820);
    clear_2869027230(cache_2869027151.table);

  
}

function deleteAllNodesAndSymbols_2869016714(ctx_2869016715) {
    ctx_2869016715.depGraph.revision = addInt(ctx_2869016715.depGraph.revision, 1);
    clear_2869016794(ctx_2869016715.depGraph.changed);
    clear_2869016794(ctx_2869016715.depGraph.verified);
    clear_2869017606(ctx_2869016715.depGraph.fingerprints);
    clear_2869018340(ctx_2869016715.depGraph.dependencies);
    clear_2869019074(ctx_2869016715.itemsAstNode);
    clear_2869019808(ctx_2869016715.itemsSymbol);
    clear_2869020542(ctx_2869016715.itemsNodeLayoutInput);
    clear_2869021276(ctx_2869016715.itemsFunctionExecutionContext);
    clear_2869022010(ctx_2869016715.queryCacheType);
    clear_2869022744(ctx_2869016715.queryCacheValue);
    clear_2869023478(ctx_2869016715.queryCacheSymbolType);
    clear_2869024212(ctx_2869016715.queryCacheSymbolValue);
    clear_2869024946(ctx_2869016715.queryCacheSymbol);
    clear_2869025680(ctx_2869016715.queryCacheSymbols);
    clear_2869026414(ctx_2869016715.queryCacheFunctionExecution);
    clear_2869027148(ctx_2869016715.queryCacheNodeLayout);

  
}

function load_2818577296(self_2818577297, filename_2818577298) {
    var Temporary1;

    if ((0 < (filename_2818577298).length)) {
    Temporary1 = filename_2818577298;
    }
    else {
    Temporary1 = self_2818577297.filename;
    }
    
    var filename_2818577299 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818577299).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818577297.filename = nimCopy(null, filename_2818577299, NTI33554449);
    var fmtRes_2818577305 = [mnewString(0)];
    fmtRes_2818577305[0].push.apply(fmtRes_2818577305[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2818577305, 0, self_2818577297.filename, []);
    fmtRes_2818577305[0].push.apply(fmtRes_2818577305[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818577305[0], NTI33554449)]);
    var jsonText_2818577306 = loadFile_2499805191(fs_2499805237, self_2818577297.filename);
    var json_2818577307 = parseJson_1627395313(jsonText_2818577306);
    var newAst_2818577308 = jsonToAstNode_2852129023(json_2818577307, {allowExtraKeys: false, allowMissingKeys: false});
    deleteAllNodesAndSymbols_2869016714(ctx_2818572341);
    self_2818577297.rootNode = newAst_2818577308;
    insertNode_2869015566(ctx_2818572341, self_2818577297.rootNode);
    if (self_2818577297.undoOps.length < 0) { for (var i = self_2818577297.undoOps.length ; i < 0 ; ++i) self_2818577297.undoOps.push(null); }
               else { self_2818577297.undoOps.length = 0; };
    if (self_2818577297.redoOps.length < 0) { for (var i = self_2818577297.redoOps.length ; i < 0 ; ++i) self_2818577297.redoOps.push(null); }
               else { self_2818577297.redoOps.length = 0; };
    saveHtml_2818577281(self_2818577297);

  
}

function load_2650804181(self_2650804182, filename_2650804183) {
    var Temporary1;

    if ((0 < (filename_2650804183).length)) {
    Temporary1 = filename_2650804183;
    }
    else {
    Temporary1 = self_2650804182.filename;
    }
    
    var filename_2650804184 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2650804184).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2650804182.filename = nimCopy(null, filename_2650804184, NTI33554449);
    var file_2650804186 = loadFile_2499805191(fs_2499805237, self_2650804182.filename);
    contentHEX3D_2650801043(self_2650804182, file_2650804186);

  
}

function load_2130706444(self_2130706445, filename_2130706446) {
  
}

function load_2130706447(self_2130706445, filename_2130706446) {
    chckNilDisp(self_2130706445);
    if (isObj(self_2130706445.m_type, NTI2818573774)) {
    load_2818577296(self_2130706445, filename_2130706446);
    }
    else {
    if (isObj(self_2130706445.m_type, NTI2650800263)) {
    load_2650804181(self_2130706445, filename_2130706446);
    }
    else {
    if (isObj(self_2130706445.m_type, NTI2130706436)) {
    load_2130706444(self_2130706445, filename_2130706446);
    }
    }}

  
}

function hasKey_2785021149(t_2785021152, key_2785021153) {
  var result_2785021154 = false;

    var hc_2785021155 = [0];
    result_2785021154 = (0 <= rawGet_2785018457(t_2785021152, key_2785021153, hc_2785021155, 0));

  return result_2785021154;

}

function contains_2785021143(t_2785021146, key_2785021147) {
  var result_2785021148 = false;

  BeforeRet: {
    result_2785021148 = hasKey_2785021149(t_2785021146, key_2785021147);
    break BeforeRet;
  };

  return result_2785021148;

}

function del_2785021202(t_2785021205, key_2785021206) {
    var hc_2785021207 = [0];
    var i_2785021214 = rawGet_2785018457(t_2785021205, key_2785021206, hc_2785021207, 0);
    var mskHEX60gensym36_2785021218 = (t_2785021205.data).length - 1;
    if ((0 <= i_2785021214)) {
    t_2785021205.counter = subInt(t_2785021205.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785021225 = i_2785021214;
            var rHEX60gensym36_2785021226 = jHEX60gensym36_2785021225;
            t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)].Field0 = 0;
            t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)].Field1 = 0;
            t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785021214 = (addInt(i_2785021214, 1) & mskHEX60gensym36_2785021218);
                  if (isEmpty_1308622877(t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785021226 = (t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)].Field0 & mskHEX60gensym36_2785021218);
                  if (!(((((rHEX60gensym36_2785021226 <= i_2785021214) && (jHEX60gensym36_2785021225 < rHEX60gensym36_2785021226)) || ((jHEX60gensym36_2785021225 < rHEX60gensym36_2785021226) && (i_2785021214 < jHEX60gensym36_2785021225))) || ((i_2785021214 < jHEX60gensym36_2785021225) && (rHEX60gensym36_2785021226 <= i_2785021214))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785021205.data[chckIndx(jHEX60gensym36_2785021225, 0, (t_2785021205.data).length - 1)] = nimCopy(t_2785021205.data[chckIndx(jHEX60gensym36_2785021225, 0, (t_2785021205.data).length - 1)], t_2785021205.data[chckIndx(i_2785021214, 0, (t_2785021205.data).length - 1)], NTI2785017880);
          }
      };
    };
    }
    

  
}

function len_2785021758(t_2785021761) {
  var result_2785021762 = 0;

    result_2785021762 = t_2785021761.counter;

  return result_2785021762;

}

function find_2785021995(a_2785021998, item_2785021999) {
  var result_2785022000 = 0;

  BeforeRet: {
    result_2785022000 = 0;
    Label1: {
      var i_2785022004 = 0;
      var i_536872325 = 0;
      var L_536872326 = (a_2785021998).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872325 < L_536872326)) break Label3;
            i_2785022004 = a_2785021998[chckIndx(i_536872325, 0, (a_2785021998).length - 1)];
            if ((i_2785022004 == item_2785021999)) {
            break BeforeRet;
            }
            
            result_2785022000 = addInt(result_2785022000, 1);
            i_536872325 = addInt(i_536872325, 1);
            if (!(((a_2785021998).length == L_536872326))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2785022000 = -1;
  };

  return result_2785022000;

}

function del_2785022011(x_2785022013, x_2785022013_Idx, i_2785022014) {
    var xl_2785022018 = subInt((x_2785022013[x_2785022013_Idx]).length, 1);
    x_2785022013[x_2785022013_Idx][chckIndx(i_2785022014, 0, (x_2785022013[x_2785022013_Idx]).length - 1)] = x_2785022013[x_2785022013_Idx][chckIndx(xl_2785022018, 0, (x_2785022013[x_2785022013_Idx]).length - 1)];
    if (x_2785022013[x_2785022013_Idx].length < chckRange(xl_2785022018, 0, 2147483647)) { for (var i = x_2785022013[x_2785022013_Idx].length ; i < chckRange(xl_2785022018, 0, 2147483647) ; ++i) x_2785022013[x_2785022013_Idx].push(0); }
               else { x_2785022013[x_2785022013_Idx].length = chckRange(xl_2785022018, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2785021098(self_2785021099, handle_2785021100) {
    if (contains_2785021143(self_2785021099.onRequestSave, handle_2785021100)) {
    del_2785021202(self_2785021099.onRequestSave, handle_2785021100);
    Label1: {
      var __2785021993 = [];
      var list_2785021994 = null;
      var list_2785021994_Idx = 0;
      var L_536872313 = len_2785021758(self_2785021099.onRequestSaveIndex);
      Label2: {
        var h_536872315 = 0;
        var colontmp__536872316 = 0;
        colontmp__536872316 = (self_2785021099.onRequestSaveIndex.data).length - 1;
        var res_536872317 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872317 <= colontmp__536872316)) break Label4;
              h_536872315 = res_536872317;
              if (isFilled_1308622880(self_2785021099.onRequestSaveIndex.data[chckIndx(h_536872315, 0, (self_2785021099.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872320 = nimCopy(null, {Field0: nimCopy(null, self_2785021099.onRequestSaveIndex.data[chckIndx(h_536872315, 0, (self_2785021099.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2785021099.onRequestSaveIndex.data[chckIndx(h_536872315, 0, (self_2785021099.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2785019826);
              __2785021993 = colontmp__536872320["Field0"];
              list_2785021994 = colontmp__536872320["Field1"][0]; list_2785021994_Idx = colontmp__536872320["Field1"][1];
              var index_2785022010 = find_2785021995(list_2785021994[list_2785021994_Idx], handle_2785021100);
              if ((0 <= index_2785022010)) {
              del_2785022011(list_2785021994, list_2785021994_Idx, chckRange(index_2785022010, 0, 2147483647));
              }
              
              if (!((len_2785021758(self_2785021099.onRequestSaveIndex) == L_536872313))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872317 = addInt(res_536872317, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2785017908(self_2785017909) {
  
}

function stop_2785017910(self_2785017909) {
    stop_2785017908(self_2785017909);

  
}

function destroy_2650804096(self_2650804097) {
    var Temporary1;
    var Temporary2;

    if (!((self_2650804097.tsParser == null))) {
    deinit_2751463882(self_2650804097.tsParser);
    self_2650804097.tsParser = null;
    }
    
    if (isSome_2650804105(self_2650804097.languageServer)) {
    removeOnRequestSaveHandler_2785021098((Temporary1 = get_2650804125(self_2650804097.languageServer), Temporary1)[0][Temporary1[1]], self_2650804097.onRequestSaveHandle);
    stop_2785017910((Temporary2 = get_2650804125(self_2650804097.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2650804097.languageServer = nimCopy(self_2650804097.languageServer, none_2801795096(), NTI2650800322);
    }
    

  
}

function shutdown_2650804172(self_2650804173) {
    destroy_2650804096(self_2650804173.document);

  
}

function shutdown_2147483764(self_2147483765) {
  
}

function shutdown_2147483766(self_2147483765) {
    chckNilDisp(self_2147483765);
    if (isObj(self_2147483765.m_type, NTI2650800335)) {
    shutdown_2650804172(self_2147483765);
    }
    else {
    if (isObj(self_2147483765.m_type, NTI2147483652)) {
    shutdown_2147483764(self_2147483765);
    }
    }

  
}

function canEdit_2818580920(self_2818580921, document_2818580922) {
  var result_2818580923 = false;

  BeforeRet: {
    if (isObj(document_2818580922.m_type, NTI2818573774)) {
    result_2818580923 = true;
    break BeforeRet;
    }
    else {
      result_2818580923 = false;
      break BeforeRet;
    }
    
  };

  return result_2818580923;

}

function canEdit_2650805146(self_2650805147, document_2650805148) {
  var result_2650805149 = false;

  BeforeRet: {
    if (isObj(document_2650805148.m_type, NTI2650800263)) {
    result_2650805149 = true;
    break BeforeRet;
    }
    else {
      result_2650805149 = false;
      break BeforeRet;
    }
    
  };

  return result_2650805149;

}

function canEdit_2147483767(self_2147483768, document_2147483769) {
  var result_2147483770 = false;

  BeforeRet: {
    result_2147483770 = false;
    break BeforeRet;
  };

  return result_2147483770;

}

function canEdit_2147483771(self_2147483768, document_2147483769) {
  var result_2147483772 = false;

  BeforeRet: {
    chckNilDisp(self_2147483768);
    if (isObj(self_2147483768.m_type, NTI2818573803)) {
    result_2147483772 = canEdit_2818580920(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2650800335)) {
    result_2147483772 = canEdit_2650805146(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2147483652)) {
    result_2147483772 = canEdit_2147483767(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    }}
  };

  return result_2147483772;

}

function addQuoted_2818580438(s_2818580440, s_2818580440_Idx, x_2818580441) {
    s_2818580440[s_2818580440_Idx].push.apply(s_2818580440[s_2818580440_Idx], HEX24_2852128727(x_2818580441));;

  
}

function HEX24_2818580427(self_2818580429) {
  var result_2818580430 = [[]];

    if (isSome_2852128602(self_2818580429)) {
    result_2818580430[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2818580438(result_2818580430, 0, self_2818580429.val);
    result_2818580430[0].push.apply(result_2818580430[0], [41]);;
    }
    else {
      result_2818580430[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2818580430[0];

}

function formatValue_2818580360(result_2818580362, result_2818580362_Idx, value_2818580363, specifier_2818580364) {
    formatValue_721420459(result_2818580362, result_2818580362_Idx, HEX24_2818580427(value_2818580363), specifier_2818580364);

  
}

function handleNodeInserted_2818580346(self_2818580347, doc_2818580348, node_2818580349) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2818580354 = [mnewString(0)];
    fmtRes_2818580354[0].push.apply(fmtRes_2818580354[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_2952790851(fmtRes_2818580354, 0, node_2818580349, []);
    fmtRes_2818580354[0].push.apply(fmtRes_2818580354[0], [44,32]);;
    formatValue_2818580360(fmtRes_2818580354, 0, self_2818580347.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580354[0], NTI33554449)]);
      var oHEX60gensym113_2818580450 = nimCopy(null, self_2818580347.deletedNode, NTI2852126839);
      if (!isSome_2852128602(oHEX60gensym113_2818580450)) Temporary2 = false; else {        var deletedNode_2818580473 = get_2852128622(oHEX60gensym113_2818580450);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2818580473 == node_2818580349);      }    if (Temporary1) {
    self_2818580347.deletedNode = nimCopy(self_2818580347.deletedNode, some_2852126946(cloneAndMapIds_2852128553(node_2818580349)), NTI2852126839);
    var fmtRes_2818580485 = mnewString(0);
    fmtRes_2818580485.push.apply(fmtRes_2818580485, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580485, NTI33554449)]);
    }
    

  
}

function createWithDocument_2818590736(self_2818590737, document_2818590738) {
    
function HEX3Aanonymous_2818590741(doc_2818590742, node_2818590743) {
        handleNodeInserted_2818580346(editor_2818590740, doc_2818590742, node_2818590743);

      
    }

  var result_2818590739 = null;

  BeforeRet: {
    var editor_2818590740 = {eventHandler: null, document: document_2818590738, textDocument: null, textEditor: null, m_type: NTI2818573803, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818590740 = createWithPrototype(editor_ast_prototype, editor_2818590740);
    init_2147483681(editor_2818590740);
    editor_2818590740.document.onNodeInserted.push(HEX3Aanonymous_2818590741);;
    editor_2818590740.selectedCompletion = 0;
    editor_2818590740.completions = nimCopy(null, [], NTI3036676114);
    if ((len_2852126808(editor_2818590740.document.rootNode) == 0)) {
    var paramA_2818590753 = newId_2181038297();
    var paramB_2818590754 = newId_2181038297();
    var resultId_2818590755 = newId_2181038297();
    Label1: {
      var tmpHEX60gensym1072_2818590760 = null;
      Label2: {
        var res_2818590766 = null;
        res_2818590766 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2818590766.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2818590766.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2818590769 = null;
            res_2818590769 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818590769.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2818590771 = null;
                res_2818590771 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590771.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2818590773 = null;
                    res_2818590773 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2818590773.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2818590773.id = nimCopy(res_2818590773.id, paramA_2818590753, NTI2181038083);
                    res_2818590773.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2818590777 = null;
                        res_2818590777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590777.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2818590777.reff = nimCopy(res_2818590777.reff, IdInt_2835349516, NTI2181038083);
                      };
                      add_2852126758(res_2818590773, res_2818590777);
                      Label16: {
                        var res_2818590780 = null;
                        res_2818590780 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590780.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2852126758(res_2818590773, res_2818590780);
                    };
                  };
                  add_2852126758(res_2818590771, res_2818590773);
                  Label18: {
                    var res_2818590782 = null;
                    res_2818590782 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2818590782.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2818590782.id = nimCopy(res_2818590782.id, paramB_2818590754, NTI2181038083);
                    res_2818590782.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2818590786 = null;
                        res_2818590786 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590786.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2818590786.reff = nimCopy(res_2818590786.reff, IdInt_2835349516, NTI2181038083);
                      };
                      add_2852126758(res_2818590782, res_2818590786);
                      Label23: {
                        var res_2818590789 = null;
                        res_2818590789 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590789.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2852126758(res_2818590782, res_2818590789);
                    };
                  };
                  add_2852126758(res_2818590771, res_2818590782);
                };
              };
              add_2852126758(res_2818590769, res_2818590771);
              Label25: {
                var res_2818590791 = null;
                res_2818590791 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590791.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2818590791.reff = nimCopy(res_2818590791.reff, IdInt_2835349516, NTI2181038083);
              };
              add_2852126758(res_2818590769, res_2818590791);
              Label27: {
                var res_2818590794 = null;
                res_2818590794 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590794.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2818590796 = null;
                    res_2818590796 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2818590796.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2818590796.id = nimCopy(res_2818590796.id, resultId_2818590755, NTI2181038083);
                    res_2818590796.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2818590800 = null;
                        res_2818590800 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590800.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2852126758(res_2818590796, res_2818590800);
                      Label35: {
                        var res_2818590802 = null;
                        res_2818590802 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818590802.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2818590804 = null;
                            res_2818590804 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2818590804.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2818590804.reff = nimCopy(res_2818590804.reff, IdAdd_2835349507, NTI2181038083);
                          };
                          add_2852126758(res_2818590802, res_2818590804);
                          Label40: {
                            var res_2818590807 = null;
                            res_2818590807 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2818590807.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2818590807.reff = nimCopy(res_2818590807.reff, paramA_2818590753, NTI2181038083);
                          };
                          add_2852126758(res_2818590802, res_2818590807);
                          Label42: {
                            var res_2818590810 = null;
                            res_2818590810 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2818590810.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2818590810.reff = nimCopy(res_2818590810.reff, paramB_2818590754, NTI2181038083);
                          };
                          add_2852126758(res_2818590802, res_2818590810);
                        };
                      };
                      add_2852126758(res_2818590796, res_2818590802);
                    };
                  };
                  add_2852126758(res_2818590794, res_2818590796);
                  Label44: {
                    var res_2818590813 = null;
                    res_2818590813 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2818590813.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2818590813.reff = nimCopy(res_2818590813.reff, resultId_2818590755, NTI2181038083);
                  };
                  add_2852126758(res_2818590794, res_2818590813);
                };
              };
              add_2852126758(res_2818590769, res_2818590794);
            };
          };
        };
        add_2852126758(res_2818590766, res_2818590769);
      };
    };
    add_2852126758(editor_2818590740.document.rootNode, res_2818590766);
    var addId_2818590977 = nimCopy(null, last_2852126978(editor_2818590740.document.rootNode).id, NTI2181038083);
    Label46: {
      var tmpHEX60gensym1127_2818590982 = null;
      Label47: {
        var res_2818590988 = null;
        res_2818590988 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2818590988.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2818590988.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2818590991 = null;
            res_2818590991 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2818590991.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2818590993 = null;
                res_2818590993 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590993.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2852126758(res_2818590991, res_2818590993);
              Label55: {
                var res_2818590995 = null;
                res_2818590995 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590995.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2818590995.reff = nimCopy(res_2818590995.reff, IdVoid_2835349518, NTI2181038083);
              };
              add_2852126758(res_2818590991, res_2818590995);
              Label57: {
                var res_2818590998 = null;
                res_2818590998 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2818590998.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2818591000 = null;
                    res_2818591000 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2818591000.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2818591002 = null;
                        res_2818591002 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818591002.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2818591002.reff = nimCopy(res_2818591002.reff, addId_2818590977, NTI2181038083);
                      };
                      add_2852126758(res_2818591000, res_2818591002);
                      Label65: {
                        var res_2818591005 = null;
                        res_2818591005 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818591005.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2818591005.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2852126758(res_2818591000, res_2818591005);
                      Label67: {
                        var res_2818591008 = null;
                        res_2818591008 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2818591008.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2818591008.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2852126758(res_2818591000, res_2818591008);
                    };
                  };
                };
                add_2852126758(res_2818590998, res_2818591000);
              };
              add_2852126758(res_2818590991, res_2818590998);
            };
          };
        };
        add_2852126758(res_2818590988, res_2818590991);
      };
    };
    add_2852126758(editor_2818590740.document.rootNode, res_2818590988);
    }
    
    Label69: {
      var c_2818591094 = null;
      var i_536872370 = 0;
      var L_536872371 = (editor_2818590740.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872370 < L_536872371)) break Label71;
            c_2818591094 = editor_2818590740.document.rootNode.children[chckIndx(i_536872370, 0, (editor_2818590740.document.rootNode.children).length - 1)];
            handleNodeInserted_2818577639(editor_2818590740.document, c_2818591094);
            i_536872370 = addInt(i_536872370, 1);
            if (!(((editor_2818590740.document.rootNode.children).length == L_536872371))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_2869015566(ctx_2818572341, editor_2818590740.document.rootNode);
    nodeHEX3D_2818576846(editor_2818590740, HEX5BHEX5D_2852126804(editor_2818590740.document.rootNode, 0));
    result_2818590739 = editor_2818590740;
    break BeforeRet;
  };

  return result_2818590739;

}

function createWithDocument_2650816446(self_2650816447, document_2650816448) {
    
function HEX3Aanonymous_2650816469(__2650816470) {
        handleTextDocumentTextChanged_2650816352(editor_2650816450);

      
    }

  var result_2650816449 = null;

  BeforeRet: {
    var editor_2650816450 = createTextEditorInstance_2650816354();
    editor_2650816450.document = document_2650816448;
    init_2147483681(editor_2650816450);
    if (((editor_2650816450.document.lines).length == 0)) {
    editor_2650816450.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2650816418(editor_2650816450.document.textChanged, HEX3Aanonymous_2650816469);
    result_2650816449 = editor_2650816450;
    break BeforeRet;
  };

  return result_2650816449;

}

function createWithDocument_2147483773(self_2147483774, document_2147483775) {
  var result_2147483776 = null;

  BeforeRet: {
    result_2147483776 = null;
    break BeforeRet;
  };

  return result_2147483776;

}

function createWithDocument_2147483786(self_2147483774, document_2147483775) {
  var result_2147483787 = null;

  BeforeRet: {
    chckNilDisp(self_2147483774);
    if (isObj(self_2147483774.m_type, NTI2818573803)) {
    result_2147483787 = createWithDocument_2818590736(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2650800335)) {
    result_2147483787 = createWithDocument_2650816446(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2147483652)) {
    result_2147483787 = createWithDocument_2147483773(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    }}
  };

  return result_2147483787;

}

function getEventHandlers_2818580931(self_2818580932) {
  var result_2818580933 = [[]];

    result_2818580933[0].push(self_2818580932.eventHandler);;
    if (!((self_2818580932.modeEventHandler == null))) {
    result_2818580933[0].push(self_2818580932.modeEventHandler);;
    }
    
    if (!((self_2818580932.textEditor == null))) {
    add_2818580949(result_2818580933, 0, getEventHandlers_2147483804(self_2818580932.textEditor));
    result_2818580933[0].push(self_2818580932.textEditEventHandler);;
    }
    

  return result_2818580933[0];

}

function getEventHandlers_2650805157(self_2650805158) {
  var result_2650805159 = [];

    result_2650805159 = nimCopy(null, [self_2650805158.eventHandler], NTI2248146958);
    if (!((self_2650805158.modeEventHandler == null))) {
    result_2650805159.push(self_2650805158.modeEventHandler);;
    }
    
    if (self_2650805158.showCompletions) {
    result_2650805159.push(self_2650805158.completionEventHandler);;
    }
    

  return result_2650805159;

}

function getEventHandlers_2248146949(self_2248146950) {
  var result_2248146951 = [];

  BeforeRet: {
    result_2248146951 = nimCopy(null, [self_2248146950.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2248146951;

}

function getEventHandlers_2147483788(self_2147483789) {
  var result_2147483790 = [];

  BeforeRet: {
    result_2147483790 = nimCopy(null, [], NTI2147483731);
    break BeforeRet;
  };

  return result_2147483790;

}

function getEventHandlers_2147483804(self_2147483789) {
  var result_2147483805 = [];

  BeforeRet: {
    chckNilDisp(self_2147483789);
    if (isObj(self_2147483789.m_type, NTI2818573803)) {
    result_2147483805 = getEventHandlers_2818580931(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2650800335)) {
    result_2147483805 = getEventHandlers_2650805157(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2248146948)) {
    result_2147483805 = getEventHandlers_2248146949(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2147483652)) {
    result_2147483805 = getEventHandlers_2147483788(self_2147483789);
    break BeforeRet;
    }
    }}}
  };

  return result_2147483805;

}

function reset_2818581046(obj_2818581048, obj_2818581048_Idx) {
    obj_2818581048[obj_2818581048_Idx] = null;

  
}

function clear_2818581039(deq_2818581041) {
    Label1: {
      var el_2818581045 = null;
      var el_2818581045_Idx = 0;
      var i_536872381 = deq_2818581041.head;
      Label2: {
        var c_536872383 = 0;
        var i_536872384 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872384 < deq_2818581041.count)) break Label4;
              c_536872383 = i_536872384;
              el_2818581045 = deq_2818581041.data; el_2818581045_Idx = chckIndx(i_536872381, 0, (deq_2818581041.data).length - 1);
              reset_2818581046(el_2818581045, el_2818581045_Idx);
              i_536872381 = (addInt(i_536872381, 1) & deq_2818581041.mask);
              i_536872384 = addInt(i_536872384, 1);
            }
        };
      };
    };
    deq_2818581041.count = 0;
    deq_2818581041.tail = deq_2818581041.head;

  
}

function handleDocumentChanged_2818580976(self_2818580977) {
    var fmtRes_2818580982 = mnewString(0);
    fmtRes_2818580982.push.apply(fmtRes_2818580982, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818580982, NTI33554449)]);
    clear_2818581039(self_2818580977.selectionHistory);
    clear_2818581039(self_2818580977.selectionFuture);
    finishEdit_2818580912(self_2818580977, false);
    Label1: {
      var symbol_2818581116 = null;
      var L_536872374 = len_2869015068(ctx_2818572341.globalScope);
      Label2: {
        var h_536872376 = 0;
        var colontmp__536872377 = 0;
        colontmp__536872377 = (ctx_2818572341.globalScope.data).length - 1;
        var res_536872378 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872378 <= colontmp__536872377)) break Label4;
              h_536872376 = res_536872378;
              if (isFilled_1308622880(ctx_2818572341.globalScope.data[chckIndx(h_536872376, 0, (ctx_2818572341.globalScope.data).length - 1)].Field0)) {
              symbol_2818581116 = ctx_2818572341.globalScope.data[chckIndx(h_536872376, 0, (ctx_2818572341.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_2868973519(ctx_2818572341, symbol_2818581116);
              if (!((len_2869015068(ctx_2818572341.globalScope) == L_536872374))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872378 = addInt(res_536872378, 1);
            }
        };
      };
    };
    nodeHEX3D_2818576846(self_2818580977, HEX5BHEX5D_2852126804(self_2818580977.document.rootNode, 0));

  
}

function handleDocumentChanged_2650808174(self_2650808175) {
    selectionHEX3D_2650800630(self_2650808175, {Field0: clampCursor_2650800527(self_2650808175, selection_2650800624(self_2650808175).Field0), Field1: clampCursor_2650800527(self_2650808175, selection_2650800624(self_2650808175).Field1)});
    updateSearchResults_2650805175(self_2650808175);

  
}

function handleDocumentChanged_2147483806(self_2147483807) {
  
}

function handleDocumentChanged_2147483808(self_2147483807) {
    chckNilDisp(self_2147483807);
    if (isObj(self_2147483807.m_type, NTI2818573803)) {
    handleDocumentChanged_2818580976(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2650800335)) {
    handleDocumentChanged_2650808174(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2147483652)) {
    handleDocumentChanged_2147483806(self_2147483807);
    }
    }}

  
}

function del_1291847204(t_1291847207, key_1291847208) {
    var hc_1291847209 = [0];
    var i_1291847216 = rawGet_1291845888(t_1291847207, key_1291847208, hc_1291847209, 0);
    var mskHEX60gensym36_1291847220 = (t_1291847207.data).length - 1;
    if ((0 <= i_1291847216)) {
    t_1291847207.counter = subInt(t_1291847207.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847227 = i_1291847216;
            var rHEX60gensym36_1291847228 = jHEX60gensym36_1291847227;
            t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)].Field0 = 0;
            t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)].Field1 = 0;
            t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847216 = (addInt(i_1291847216, 1) & mskHEX60gensym36_1291847220);
                  if (isEmpty_1308622877(t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847228 = (t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)].Field0 & mskHEX60gensym36_1291847220);
                  if (!(((((rHEX60gensym36_1291847228 <= i_1291847216) && (jHEX60gensym36_1291847227 < rHEX60gensym36_1291847228)) || ((jHEX60gensym36_1291847227 < rHEX60gensym36_1291847228) && (i_1291847216 < jHEX60gensym36_1291847227))) || ((i_1291847216 < jHEX60gensym36_1291847227) && (rHEX60gensym36_1291847228 <= i_1291847216))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847207.data[chckIndx(jHEX60gensym36_1291847227, 0, (t_1291847207.data).length - 1)] = nimCopy(t_1291847207.data[chckIndx(jHEX60gensym36_1291847227, 0, (t_1291847207.data).length - 1)], t_1291847207.data[chckIndx(i_1291847216, 0, (t_1291847207.data).length - 1)], NTI1291845712);
          }
      };
    };
    }
    

  
}

function invoke_1291847114(event_1291847116, arg_1291847117) {
    Label1: {
      var h_1291847140 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872390 = 0;
      var L_536872391 = (event_1291847116.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872390 < L_536872391)) break Label3;
            h_1291847140 = event_1291847116.handlers[chckIndx(i_536872390, 0, (event_1291847116.handlers).length - 1)];
            h_1291847140.Field1(arg_1291847117);
            i_536872390 = addInt(i_536872390, 1);
            if (!(((event_1291847116.handlers).length == L_536872391))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847161(self_1291847162, editor_1291847163) {
    del_1291847204(self_1291847162.editors, editor_1291847163.id);
    invoke_1291847114(self_1291847162.onEditorDeregistered, editor_1291847163);

  
}

function unregister_2818591178(self_2818591179) {
    finishEdit_2818580912(self_2818591179, false);
    unregisterEditor_1291847161(self_2818591179.editor, self_2818591179);

  
}

function unregister_2650817106(self_2650817107) {
    unregisterEditor_1291847161(self_2650817107.editor, self_2650817107);

  
}

function unregister_2147483809(self_2147483810) {
  
}

function unregister_2147483811(self_2147483810) {
    chckNilDisp(self_2147483810);
    if (isObj(self_2147483810.m_type, NTI2818573803)) {
    unregister_2818591178(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2650800335)) {
    unregister_2650817106(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2147483652)) {
    unregister_2147483809(self_2147483810);
    }
    }}

  
}

function getItemAtPixelPosition_2818590383(self_2818590384, posWindow_2818590385) {
  var result_2818590387 = ({val: 0, has: false});

  BeforeRet: {
    result_2818590387 = nimCopy(result_2818590387, none_2852126898(), NTI1191183280);
    Label1: {
      var index_2818590398 = 0;
      var rect_2818590399 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872395 = 0;
      var L_536872396 = (self_2818590384.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872395 < L_536872396)) break Label3;
            index_2818590398 = self_2818590384.lastItems[chckIndx(i_536872395, 0, (self_2818590384.lastItems).length - 1)]["Field0"];
            rect_2818590399 = self_2818590384.lastItems[chckIndx(i_536872395, 0, (self_2818590384.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_2818590399, posWindow_2818590385) && (0 <= index_2818590398)) && (index_2818590398 <= (self_2818590384.completions).length - 1))) {
            result_2818590387 = nimCopy(result_2818590387, some_1191184367(index_2818590398), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872395 = addInt(i_536872395, 1);
            if (!(((self_2818590384.lastItems).length == L_536872396))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2818590387;

}

function getOption_2650808598(editor_2650808600, path_2650808601, default_2650808602) {
  var result_2650808608 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2650808600 == null)) {
      result_2650808608 = default_2650808602;
      break BeforeRet;
      }
      
      var nodeHEX60gensym145_2650808621 = HEX7BHEX7D_1627393316(editor_2650808600.options, nsuSplitString(path_2650808601, [46], -1));
      if ((nodeHEX60gensym145_2650808621 == null)) {
      result_2650808608 = default_2650808602;
      break BeforeRet;
      }
      
    };
    result_2650808608 = getFloat_1627390140(nodeHEX60gensym145_2650808621, default_2650808602);
    break BeforeRet;
  };

  return result_2650808608;

}

function handleScroll_2818590406(self_2818590407, scroll_2818590408, mousePosWindow_2818590409) {
    if (isSome_1191185117(getItemAtPixelPosition_2818590383(self_2818590407, mousePosWindow_2818590409))) {
    self_2818590407.selectedCompletion = clamp_1660945119(subInt(self_2818590407.selectedCompletion, ((scroll_2818590408.arr[chckIndx(1, 0, (scroll_2818590408.arr).length - 1)]) | 0)), 0, (self_2818590407.completions).length - 1);
    }
    else {
    HEX2BHEX3D_855640304(self_2818590407, "scrollOffset", (scroll_2818590408.arr[chckIndx(1, 0, (scroll_2818590408.arr).length - 1)] * getOption_2650808598(self_2818590407.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2650808520(self_2650808521, scroll_2650808522, mousePosWindow_2650808523) {
    HEX2BHEX3D_855640304(self_2650808521, "scrollOffset", (scroll_2650808522.arr[chckIndx(1, 0, (scroll_2650808522.arr).length - 1)] * getOption_2650808598(self_2650808521.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    markDirty_2147483686(self_2650808521);

  
}

function handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
  
}

function handleScroll_2147483816(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
    chckNilDisp(self_2147483813);
    if (isObj(self_2147483813.m_type, NTI2818573803)) {
    handleScroll_2818590406(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2650800335)) {
    handleScroll_2650808520(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2147483652)) {
    handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    }}

  
}

function HEX2D_2080375094(aHEX60gensym154_2080375096, bHEX60gensym154_2080375097) {
  var result_2080375098 = ({arr: new Float32Array(2)});

    result_2080375098 = nimCopy(result_2080375098, {arr: new Float32Array([(aHEX60gensym154_2080375096.arr[0] - bHEX60gensym154_2080375097.arr[0]), (aHEX60gensym154_2080375096.arr[1] - bHEX60gensym154_2080375097.arr[1])])}, NTI2097152387);

  return result_2080375098;

}

function getNodeAtPixelPosition_2818583780(self_2818583781, posContent_2818583782) {
                      var Temporary8;

  var result_2818583784 = ({val: null});

  BeforeRet: {
    result_2818583784 = nimCopy(result_2818583784, none_2852126927(), NTI2852126839);
    Label1: {
      var layout_2818583812 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2818583813 = ({arr: new Float32Array(2)});
      var i_536872409 = 0;
      var L_536872410 = (self_2818583781.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872409 < L_536872410)) break Label3;
            layout_2818583812 = self_2818583781.lastLayouts[chckIndx(i_536872409, 0, (self_2818583781.lastLayouts).length - 1)]["Field0"];
            offset_2818583813 = self_2818583781.lastLayouts[chckIndx(i_536872409, 0, (self_2818583781.lastLayouts).length - 1)]["Field1"];
            var bounds_2818583817 = HEX2B_2063597727(bounds_2952792153(layout_2818583812), offset_2818583813);
            var smallestRange_2818583818 = ({parent: null, first: 0, last: 0});
            if (contains_2063597758(bounds_2818583817, posContent_2818583782)) {
            Label4: {
              var __2818583819 = 0;
              var child_2818583820 = null;
              var n_536872401 = layout_2818583812.node;
              var idx_536872402 = -1;
              var i_536872403 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872402 == -1)) {
                    var colontmp__536872406 = nimCopy(null, {Field0: i_536872403, Field1: n_536872401}, NTI2852128057);
                    __2818583819 = colontmp__536872406["Field0"];
                    child_2818583820 = colontmp__536872406["Field1"];
                    if (contains_2818575044(layout_2818583812.nodeToVisualNode, child_2818583820.id)) {
                    var visualNode_2818583966 = HEX5BHEX5D_2818576705(layout_2818583812.nodeToVisualNode, child_2818583820.id);
                    var bounds_2818584048 = HEX2B_2063597727(absoluteBounds_2952791796(visualNode_2818583966), vec2_2097152992(0.0, offset_2818583813.arr[chckIndx(1, 0, (offset_2818583813.arr).length - 1)]));
                    if (contains_2063597758(bounds_2818584048, posContent_2818583782)) {
                    if (((((smallestRange_2818583818.parent == null) || (smallestRange_2818583818.parent.depth < visualNode_2818583966.parent.depth)) || ((visualNode_2818583966.parent.depth == smallestRange_2818583818.parent.depth) && (smallestRange_2818583818.parent.indent < visualNode_2818583966.parent.indent))) || ((visualNode_2818583966.parent.depth == smallestRange_2818583818.parent.depth) && (subInt(visualNode_2818583966.last, visualNode_2818583966.first) < subInt(smallestRange_2818583818.last, smallestRange_2818583818.first))))) {
                    smallestRange_2818583818 = nimCopy(smallestRange_2818583818, visualNode_2818583966, NTI2952790046);
                    result_2818583784 = nimCopy(result_2818583784, some_2852126946(child_2818583820), NTI2852126839);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872402, 1) < len_2852126808(n_536872401))) {
                    n_536872401 = HEX5BHEX5D_2852126804(n_536872401, addInt(idx_536872402, 1));
                    idx_536872402 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872407 = next_2852126913(n_536872401);
                      if (!isSome_2852128602(oHEX60gensym74_536872407)) Temporary8 = false; else {                        var ne_536872408 = get_2852128622(oHEX60gensym74_536872407);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872401 = ne_536872408;
                    idx_536872402 = -1;
                    }
                    else {
                    if ((!((n_536872401.parent == null)) && !((n_536872401.parent == layout_2818583812.node)))) {
                    idx_536872402 = index_2852126828(n_536872401);
                    n_536872401 = n_536872401.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872403 = addInt(i_536872403, 1);
                    }
                  }
              };
            };
            if (isNone_2852128630(result_2818583784)) {
            result_2818583784 = nimCopy(result_2818583784, some_2852126946(layout_2818583812.node), NTI2852126839);
            }
            
            break BeforeRet;
            }
            
            i_536872409 = addInt(i_536872409, 1);
            if (!(((self_2818583781.lastLayouts).length == L_536872410))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2818583784;

}

function handleMousePress_2818590594(self_2818590595, button_2818590596, mousePosWindow_2818590597) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2818590618 = HEX2D_2080375094(mousePosWindow_2818590597, xy_2080374820(self_2818590595.lastBounds));
    if ((button_2818590596 == 0)) {
      var oHEX60gensym1068_2818590625 = getItemAtPixelPosition_2818590383(self_2818590595, mousePosWindow_2818590597);
      if (!isSome_1191185117(oHEX60gensym1068_2818590625)) Temporary1 = false; else {        var index_2818590648 = get_1191185211(oHEX60gensym1068_2818590625);
        Temporary1 = true;      }    if (Temporary1) {
    self_2818590595.selectedCompletion = index_2818590648;
    applySelectedCompletion_2818587061(self_2818590595);
    }
    else {
      if (!!(isEditing_2818580488(self_2818590595))) Temporary2 = false; else {        var oHEX60gensym1069_2818590651 = getNodeAtPixelPosition_2818583780(self_2818590595, mousePosContent_2818590618);
        if (!isSome_2852128602(oHEX60gensym1069_2818590651)) Temporary3 = false; else {          var n_2818590674 = get_2852128622(oHEX60gensym1069_2818590651);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2818576846(self_2818590595, n_2818590674);
    }
    }
    }
    

  
}

function updateFontSettings_3154116683(self_3154116684) {
    var newFontSize_3154117768 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3154116684.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3154117768 == self_3154116684.mFontSize))) {
    self_3154116684.mFontSize = newFontSize_3154117768;
    var d_3154117769 = document.createElement("div");
    d_3154117769.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3154117769.innerHTML = "#";
    self_3154116684.content.appendChild(d_3154117769);
    var fmtRes_3154117775 = [mnewString(0)];
    fmtRes_3154117775[0].push.apply(fmtRes_3154117775[0], [99,104,97,114,87,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154117775, 0, d_3154117769.clientWidth, []);
    fmtRes_3154117775[0].push.apply(fmtRes_3154117775[0], [44,32,108,105,110,101,72,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154117775, 0, d_3154117769.clientHeight, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3154117775[0], NTI33554449)]);
    self_3154116684.mLineHeight = d_3154117769.clientHeight;
    self_3154116684.mCharWidth = d_3154117769.clientWidth;
    self_3154116684.content.removeChild(d_3154117769);
    }
    

  
}

function charWidth_3154117813(self_3154117814) {
  var result_3154117815 = 0.0;

    updateFontSettings_3154116683(self_3154117814);
    result_3154117815 = self_3154117814.mCharWidth;

  return result_3154117815;

}

function charWidth_2315255949(self_2315255950) {
  var result_2315255951 = 0.0;

  return result_2315255951;

}

function charWidth_2315255952(self_2315255950) {
  var result_2315255953 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255950);
    if (isObj(self_2315255950.m_type, NTI3154116614)) {
    result_2315255953 = charWidth_3154117813(self_2315255950);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255950.m_type, NTI2315255812)) {
    result_2315255953 = charWidth_2315255949(self_2315255950);
    break BeforeRet;
    }
    }
  };

  return result_2315255953;

}

function isThickCursor_2650808283(self_2650808284) {
  var result_2650808285 = false;

  BeforeRet: {
    result_2650808285 = getOption_2650808286(self_2650808284.editor, getContextWithMode_2650808280(self_2650808284, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2650808285;

}

function HEX2DHEX3D_2650816895(x_2650816897, x_2650816897_Idx, y_2650816898) {
    x_2650816897[x_2650816897_Idx] = (x_2650816897[x_2650816897_Idx] - y_2650816898);

  
}

function some_2650816909(val_2650816911) {
  var result_2650816916 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2650816916.has = true;
    result_2650816916.val = nimCopy(result_2650816916.val, val_2650816911, NTI2650811524);

  return result_2650816916;

}

function none_2650816922() {
  var result_2650816929 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2650816929;

}

function getCursorAtPixelPos_2650816499(self_2650816500, mousePosWindow_2650816501) {
  var result_2650816507 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2650816524 = HEX2D_2080375094(mousePosWindow_2650816501, xy_2080374820(self_2650816500.lastContentBounds));
    Label1: {
      var li_2650816558 = 0;
      var line_2650816559 = null;
      var i_536872419 = 0;
      var L_536872420 = (self_2650816500.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872419 < L_536872420)) break Label3;
            li_2650816558 = i_536872419;
            line_2650816559 = self_2650816500.lastRenderedLines[chckIndx(i_536872419, 0, (self_2650816500.lastRenderedLines).length - 1)];
            var startOffset_2650816560 = 0;
            Label4: {
              var i_2650816593 = 0;
              var part_2650816594 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872415 = 0;
              var L_536872416 = (line_2650816559.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872415 < L_536872416)) break Label6;
                    i_2650816593 = i_536872415;
                    part_2650816594 = nimCopy(part_2650816594, line_2650816559.parts[chckIndx(i_536872415, 0, (line_2650816559.parts).length - 1)], NTI2650800330);
                    if ((contains_2063597758(part_2650816594.bounds, mousePosContent_2650816524) || ((((i_2650816593 == (line_2650816559.parts).length - 1) && (part_2650816594.bounds.y <= mousePosContent_2650816524.arr[chckIndx(1, 0, (mousePosContent_2650816524.arr).length - 1)])) && (mousePosContent_2650816524.arr[chckIndx(1, 0, (mousePosContent_2650816524.arr).length - 1)] <= (part_2650816594.bounds.y + part_2650816594.bounds.h))) && (part_2650816594.bounds.x <= mousePosContent_2650816524.arr[chckIndx(0, 0, (mousePosContent_2650816524.arr).length - 1)])))) {
                    var offsetFromLeft_2650816894 = [((mousePosContent_2650816524.arr[chckIndx(0, 0, (mousePosContent_2650816524.arr).length - 1)] - part_2650816594.bounds.x) / charWidth_2315255952(self_2650816500.editor.platform))];
                    if (isThickCursor_2650808283(self_2650816500)) {
                    HEX2DHEX3D_2650816895(offsetFromLeft_2650816894, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2650816894, 0, 0.5);
                    }
                    
                    var index_2650816908 = clamp_1660945119(((offsetFromLeft_2650816894[0]) | 0), 0, (part_2650816594.text).length);
                    result_2650816507 = nimCopy(result_2650816507, some_2650816909({Field0: line_2650816559.index, Field1: addInt(startOffset_2650816560, index_2650816908)}), NTI2650811325);
                    break BeforeRet;
                    }
                    
                    startOffset_2650816560 = addInt(startOffset_2650816560, (part_2650816594.text).length);
                    i_536872415 = addInt(i_536872415, 1);
                    if (!(((line_2650816559.parts).length == L_536872416))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872419 = addInt(i_536872419, 1);
            if (!(((self_2650816500.lastRenderedLines).length == L_536872420))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2650816507 = nimCopy(result_2650816507, none_2650816922(), NTI2650811325);
    break BeforeRet;
  };

  return result_2650816507;

}

function isSome_2650816964(self_2650816966) {
  var result_2650816967 = false;

    result_2650816967 = self_2650816966.has;

  return result_2650816967;

}

function isNone_2650816989(self_2650816991) {
  var result_2650816992 = false;

    result_2650816992 = !(self_2650816991.has);

  return result_2650816992;

}

function get_2650816981(self_2650816983) {
  var result_2650816984 = {Field0: 0, Field1: 0};

    if (isNone_2650816989(self_2650816983)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2650816984 = self_2650816983.val;

  return result_2650816984;

}

function handleMousePress_2650816948(self_2650816949, button_2650816950, mousePosWindow_2650816951) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2650816950 == 0)) Temporary1 = false; else {        var oHEX60gensym995_2650816959 = getCursorAtPixelPos_2650816499(self_2650816949, mousePosWindow_2650816951);
        if (!isSome_2650816964(oHEX60gensym995_2650816959)) Temporary2 = false; else {          var cursor_2650817004 = nimCopy(null, get_2650816981(oHEX60gensym995_2650816959), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2650800630(self_2650816949, toSelection_2231370221(cursor_2650817004));
    }
    
      if (!(button_2650816950 == 3)) Temporary3 = false; else {        var oHEX60gensym997_2650817011 = getCursorAtPixelPos_2650816499(self_2650816949, mousePosWindow_2650816951);
        if (!isSome_2650816964(oHEX60gensym997_2650817011)) Temporary4 = false; else {          var cursor_2650817034 = nimCopy(null, get_2650816981(oHEX60gensym997_2650817011), NTI2231369737);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2650810454(self_2650816949, cursor_2650817034);
    }
    
      if (!(button_2650816950 == 4)) Temporary5 = false; else {        var oHEX60gensym998_2650817041 = getCursorAtPixelPos_2650816499(self_2650816949, mousePosWindow_2650816951);
        if (!isSome_2650816964(oHEX60gensym998_2650817041)) Temporary6 = false; else {          var cursor_2650817064 = nimCopy(null, get_2650816981(oHEX60gensym998_2650817041), NTI2231369737);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2650810581(self_2650816949, cursor_2650817064.Field0);
    }
    

  
}

function handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
  
}

function handleMousePress_2147483821(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
    chckNilDisp(self_2147483818);
    if (isObj(self_2147483818.m_type, NTI2818573803)) {
    handleMousePress_2818590594(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2650800335)) {
    handleMousePress_2650816948(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2147483652)) {
    handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    }}

  
}

function handleMouseRelease_2818590675(self_2818590676, button_2818590677, mousePosWindow_2818590678) {
  
}

function handleMouseRelease_2650817065(self_2650817066, button_2650817067, mousePosWindow_2650817068) {
  
}

function handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
  
}

function handleMouseRelease_2147483826(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
    chckNilDisp(self_2147483823);
    if (isObj(self_2147483823.m_type, NTI2818573803)) {
    handleMouseRelease_2818590675(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2650800335)) {
    handleMouseRelease_2650817065(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2147483652)) {
    handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    }}

  
}

function handleMouseMove_2818590679(self_2818590680, mousePosWindow_2818590681, mousePosDelta_2818590682, modifiers_2818590683, buttons_2818590684) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2818590684[0] != undefined)) {
    var mousePosContent_2818590709 = HEX2D_2080375094(mousePosWindow_2818590681, xy_2080374820(self_2818590680.lastBounds));
      if (!!(isEditing_2818580488(self_2818590680))) Temporary1 = false; else {        var oHEX60gensym1071_2818590712 = getNodeAtPixelPosition_2818583780(self_2818590680, mousePosContent_2818590709);
        if (!isSome_2852128602(oHEX60gensym1071_2818590712)) Temporary2 = false; else {          var n_2818590735 = get_2852128622(oHEX60gensym1071_2818590712);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2818576846(self_2818590680, n_2818590735);
    }
    
    }
    

  
}

function handleMouseMove_2650817069(self_2650817070, mousePosWindow_2650817071, mousePosDelta_2650817072, modifiers_2650817073, buttons_2650817074) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2650817074[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1000_2650817082 = getCursorAtPixelPos_2650816499(self_2650817070, mousePosWindow_2650817071);
        if (!isSome_2650816964(oHEX60gensym1000_2650817082)) Temporary2 = false; else {          var cursor_2650817105 = nimCopy(null, get_2650816981(oHEX60gensym1000_2650817082), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2650800630(self_2650817070, toSelection_2231370224(cursor_2650817105, selection_2650800624(self_2650817070), 3));
    }
    

  
}

function handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
  
}

function handleMouseMove_2147483833(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
    chckNilDisp(self_2147483828);
    if (isObj(self_2147483828.m_type, NTI2818573803)) {
    handleMouseMove_2818590679(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2650800335)) {
    handleMouseMove_2650817069(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2147483652)) {
    handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    }}

  
}

function HEX26_3036676470(x_3036676472, y_3036676473) {
  var result_3036676474 = [];

    result_3036676474 = new Array(chckRange(addInt((x_3036676472).length, (y_3036676473).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3036676472).length, (y_3036676473).length), 0, 2147483647) ; ++i) { result_3036676474[i] = null; }    Label1: {
      var i_3036676492 = 0;
      var colontmp__536872423 = 0;
      colontmp__536872423 = subInt((x_3036676472).length, 1);
      var res_536872424 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872424 <= colontmp__536872423)) break Label3;
            i_3036676492 = res_536872424;
            result_3036676474[chckIndx(i_3036676492, 0, (result_3036676474).length - 1)] = x_3036676472[chckIndx(i_3036676492, 0, (x_3036676472).length - 1)];
            res_536872424 = addInt(res_536872424, 1);
          }
      };
    };
    Label4: {
      var i_3036676500 = 0;
      var colontmp__536872427 = 0;
      colontmp__536872427 = subInt((y_3036676473).length, 1);
      var res_536872428 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872428 <= colontmp__536872427)) break Label6;
            i_3036676500 = res_536872428;
            result_3036676474[chckIndx(addInt(i_3036676500, (x_3036676472).length), 0, (result_3036676474).length - 1)] = y_3036676473[chckIndx(i_3036676500, 0, (y_3036676473).length - 1)];
            res_536872428 = addInt(res_536872428, 1);
          }
      };
    };

  return result_3036676474;

}

function getEventHandlers_3087007877(self_3087007878) {
  var result_3087007879 = [];

  BeforeRet: {
    result_3087007879 = nimCopy(null, HEX26_3036676470(getEventHandlers_2147483804(self_3087007878.textEditor), [self_3087007878.eventHandler]), NTI3036676329);
    break BeforeRet;
  };

  return result_3087007879;

}

function getEventHandlers_3036676463(self_3036676464) {
  var result_3036676465 = [];

  BeforeRet: {
    result_3036676465 = nimCopy(null, HEX26_3036676470(getEventHandlers_2147483804(self_3036676464.textEditor), [self_3036676464.eventHandler]), NTI3036676329);
    break BeforeRet;
  };

  return result_3036676465;

}

function getEventHandlers_2264924176(self_2264924177) {
  var result_2264924178 = [];

  BeforeRet: {
    result_2264924178 = nimCopy(null, [self_2264924177.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2264924178;

}

function getEventHandlers_2264924183(self_2264924177) {
  var result_2264924184 = [];

  BeforeRet: {
    chckNilDisp(self_2264924177);
    if (isObj(self_2264924177.m_type, NTI3087007750)) {
    result_2264924184 = getEventHandlers_3087007877(self_2264924177);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924177.m_type, NTI3036676100)) {
    result_2264924184 = getEventHandlers_3036676463(self_2264924177);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924177.m_type, NTI2264924164)) {
    result_2264924184 = getEventHandlers_2264924176(self_2264924177);
    break BeforeRet;
    }
    }}
  };

  return result_2264924184;

}

function handleScroll_3087008338(self_3087008339, scroll_3087008340, mousePosWindow_3087008341) {
    self_3087008339.selected = clamp_1660945119(subInt(self_3087008339.selected, ((scroll_3087008340.arr[chckIndx(1, 0, (scroll_3087008340.arr).length - 1)]) | 0)), 0, subInt((self_3087008339.completions).length, 1));

  
}

function handleScroll_3036676540(self_3036676541, scroll_3036676542, mousePosWindow_3036676543) {
    self_3036676541.selected = clamp_1660945119(subInt(self_3036676541.selected, ((scroll_3036676542.arr[chckIndx(1, 0, (scroll_3036676542.arr).length - 1)]) | 0)), 0, subInt((self_3036676541.completions).length, 1));

  
}

function handleScroll_2264924185(self_2264924186, scroll_2264924187, mousePosWindow_2264924188) {
  
}

function handleScroll_2264924189(self_2264924186, scroll_2264924187, mousePosWindow_2264924188) {
    chckNilDisp(self_2264924186);
    if (isObj(self_2264924186.m_type, NTI3087007750)) {
    handleScroll_3087008338(self_2264924186, scroll_2264924187, mousePosWindow_2264924188);
    }
    else {
    if (isObj(self_2264924186.m_type, NTI3036676100)) {
    handleScroll_3036676540(self_2264924186, scroll_2264924187, mousePosWindow_2264924188);
    }
    else {
    if (isObj(self_2264924186.m_type, NTI2264924164)) {
    handleScroll_2264924185(self_2264924186, scroll_2264924187, mousePosWindow_2264924188);
    }
    }}

  
}

function none_3087007822() {
  var result_3087007828 = ({val: null});

  return result_3087007828;

}

function some_3087007837(val_3087007839) {
  var result_3087007840 = ({val: null});

    if (!(!((val_3087007839 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087007840.val = val_3087007839;

  return result_3087007840;

}

function getItemAtPixelPosition_3087007814(self_3087007815, posWindow_3087007816) {
  var result_3087007821 = ({val: null});

  BeforeRet: {
    result_3087007821 = nimCopy(result_3087007821, none_3087007822(), NTI3087007779);
    Label1: {
      var index_3087007832 = 0;
      var rect_3087007833 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872431 = 0;
      var L_536872432 = (self_3087007815.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872431 < L_536872432)) break Label3;
            index_3087007832 = self_3087007815.lastItems[chckIndx(i_536872431, 0, (self_3087007815.lastItems).length - 1)]["Field0"];
            rect_3087007833 = self_3087007815.lastItems[chckIndx(i_536872431, 0, (self_3087007815.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_3087007833, posWindow_3087007816) && (0 <= index_3087007832)) && (index_3087007832 <= (self_3087007815.completions).length - 1))) {
            result_3087007821 = nimCopy(result_3087007821, some_3087007837(self_3087007815.completions[chckIndx(index_3087007832, 0, (self_3087007815.completions).length - 1)]), NTI3087007779);
            break BeforeRet;
            }
            
            i_536872431 = addInt(i_536872431, 1);
            if (!(((self_3087007815.lastItems).length == L_536872432))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007821;

}

function isSome_3087008366(self_3087008368) {
  var result_3087008369 = false;

    result_3087008369 = !((self_3087008368.val == null));

  return result_3087008369;

}

function isNone_3087008394(self_3087008396) {
  var result_3087008397 = false;

    result_3087008397 = (self_3087008396.val == null);

  return result_3087008397;

}

function get_3087008386(self_3087008388) {
  var result_3087008389 = null;

    if (isNone_3087008394(self_3087008388)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008389 = self_3087008388["val"];

  return result_3087008389;

}

function handleMousePress_3087008351(self_3087008352, button_3087008353, mousePosWindow_3087008354) {
      var Temporary1;

    if ((button_3087008353 == 0)) {
      var oHEX60gensym54_3087008361 = getItemAtPixelPosition_3087007814(self_3087008352, mousePosWindow_3087008354);
      if (!isSome_3087008366(oHEX60gensym54_3087008361)) Temporary1 = false; else {        var item_3087008412 = get_3087008386(oHEX60gensym54_3087008361);
        Temporary1 = true;      }    if (Temporary1) {
    self_3087008352.handleItemConfirmed(item_3087008412);
    popPopup_1291849064(self_3087008352.editor, self_3087008352);
    }
    
    }
    

  
}

function none_3036676368() {
  var result_3036676375 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3036676375;

}

function some_3036676403(val_3036676405) {
  var result_3036676406 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3036676406.has = true;
    result_3036676406.val = nimCopy(result_3036676406.val, val_3036676405, NTI2818573800);

  return result_3036676406;

}

function getItemAtPixelPosition_3036676359(self_3036676360, posWindow_3036676361) {
  var result_3036676367 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3036676367 = nimCopy(result_3036676367, none_3036676368(), NTI3036676240);
    Label1: {
      var index_3036676398 = 0;
      var rect_3036676399 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872435 = 0;
      var L_536872436 = (self_3036676360.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872435 < L_536872436)) break Label3;
            index_3036676398 = self_3036676360.lastItems[chckIndx(i_536872435, 0, (self_3036676360.lastItems).length - 1)]["Field0"];
            rect_3036676399 = self_3036676360.lastItems[chckIndx(i_536872435, 0, (self_3036676360.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_3036676399, posWindow_3036676361) && (0 <= index_3036676398)) && (index_3036676398 <= (self_3036676360.completions).length - 1))) {
            result_3036676367 = nimCopy(result_3036676367, some_3036676403(self_3036676360.completions[chckIndx(index_3036676398, 0, (self_3036676360.completions).length - 1)]), NTI3036676240);
            break BeforeRet;
            }
            
            i_536872435 = addInt(i_536872435, 1);
            if (!(((self_3036676360.lastItems).length == L_536872436))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3036676367;

}

function isSome_3036676621(self_3036676623) {
  var result_3036676624 = false;

    result_3036676624 = self_3036676623.has;

  return result_3036676624;

}

function isNone_3036676646(self_3036676648) {
  var result_3036676649 = false;

    result_3036676649 = !(self_3036676648.has);

  return result_3036676649;

}

function get_3036676638(self_3036676640) {
  var result_3036676641 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3036676646(self_3036676640)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3036676641 = self_3036676640.val;

  return result_3036676641;

}

function handleMousePress_3036676606(self_3036676607, button_3036676608, mousePosWindow_3036676609) {
      var Temporary1;
    var Temporary2;

    if ((button_3036676608 == 0)) {
      var oHEX60gensym8_3036676616 = getItemAtPixelPosition_3036676359(self_3036676607, mousePosWindow_3036676609);
      if (!isSome_3036676621(oHEX60gensym8_3036676616)) Temporary1 = false; else {        var item_3036676661 = nimCopy(null, get_3036676638(oHEX60gensym8_3036676616), NTI2818573800);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3036676661;
    if (ConstSet314[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818573799)); }
    self_3036676607.handleSymbolSelected(Temporary2.id);
    popPopup_1291849064(self_3036676607.editor, self_3036676607);
    }
    
    }
    

  
}

function handleMousePress_2264924190(self_2264924191, button_2264924192, mousePosWindow_2264924193) {
  
}

function handleMousePress_2264924194(self_2264924191, button_2264924192, mousePosWindow_2264924193) {
    chckNilDisp(self_2264924191);
    if (isObj(self_2264924191.m_type, NTI3087007750)) {
    handleMousePress_3087008351(self_2264924191, button_2264924192, mousePosWindow_2264924193);
    }
    else {
    if (isObj(self_2264924191.m_type, NTI3036676100)) {
    handleMousePress_3036676606(self_2264924191, button_2264924192, mousePosWindow_2264924193);
    }
    else {
    if (isObj(self_2264924191.m_type, NTI2264924164)) {
    handleMousePress_2264924190(self_2264924191, button_2264924192, mousePosWindow_2264924193);
    }
    }}

  
}

function handleMouseRelease_3087008415(self_3087008416, button_3087008417, mousePosWindow_3087008418) {
  
}

function handleMouseRelease_3036676664(self_3036676665, button_3036676666, mousePosWindow_3036676667) {
  
}

function handleMouseRelease_2264924195(self_2264924196, button_2264924197, mousePosWindow_2264924198) {
  
}

function handleMouseRelease_2264924199(self_2264924196, button_2264924197, mousePosWindow_2264924198) {
    chckNilDisp(self_2264924196);
    if (isObj(self_2264924196.m_type, NTI3087007750)) {
    handleMouseRelease_3087008415(self_2264924196, button_2264924197, mousePosWindow_2264924198);
    }
    else {
    if (isObj(self_2264924196.m_type, NTI3036676100)) {
    handleMouseRelease_3036676664(self_2264924196, button_2264924197, mousePosWindow_2264924198);
    }
    else {
    if (isObj(self_2264924196.m_type, NTI2264924164)) {
    handleMouseRelease_2264924195(self_2264924196, button_2264924197, mousePosWindow_2264924198);
    }
    }}

  
}

function handleMouseMove_3087008419(self_3087008420, mousePosWindow_3087008421, mousePosDelta_3087008422, modifiers_3087008423, buttons_3087008424) {
  
}

function handleMouseMove_3036676668(self_3036676669, mousePosWindow_3036676670, mousePosDelta_3036676671, modifiers_3036676672, buttons_3036676673) {
  
}

function handleMouseMove_2264924200(self_2264924201, mousePosWindow_2264924202, mousePosDelta_2264924203, modifiers_2264924204, buttons_2264924205) {
  
}

function handleMouseMove_2264924206(self_2264924201, mousePosWindow_2264924202, mousePosDelta_2264924203, modifiers_2264924204, buttons_2264924205) {
    chckNilDisp(self_2264924201);
    if (isObj(self_2264924201.m_type, NTI3087007750)) {
    handleMouseMove_3087008419(self_2264924201, mousePosWindow_2264924202, mousePosDelta_2264924203, modifiers_2264924204, buttons_2264924205);
    }
    else {
    if (isObj(self_2264924201.m_type, NTI3036676100)) {
    handleMouseMove_3036676668(self_2264924201, mousePosWindow_2264924202, mousePosDelta_2264924203, modifiers_2264924204, buttons_2264924205);
    }
    else {
    if (isObj(self_2264924201.m_type, NTI2264924164)) {
    handleMouseMove_2264924200(self_2264924201, mousePosWindow_2264924202, mousePosDelta_2264924203, modifiers_2264924204, buttons_2264924205);
    }
    }}

  
}

function loadApplicationFile_2516582414(self_2516582415, name_2516582416) {
  var result_2516582417 = [];

  BeforeRet: {
    result_2516582417 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(name_2516582416))), NTI33554449);
    break BeforeRet;
  };

  return result_2516582417;

}

function loadApplicationFile_2499805198(self_2499805199, name_2499805200) {
  var result_2499805201 = [];

  return result_2499805201;

}

function loadApplicationFile_2499805202(self_2499805199, name_2499805200) {
  var result_2499805203 = [];

  BeforeRet: {
    chckNilDisp(self_2499805199);
    if (isObj(self_2499805199.m_type, NTI2516582404)) {
    result_2499805203 = loadApplicationFile_2516582414(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805199.m_type, NTI2499805188)) {
    result_2499805203 = loadApplicationFile_2499805198(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    }
  };

  return result_2499805203;

}

function saveApplicationFile_2516582418(self_2516582419, name_2516582420, content_2516582421) {
  
}

function saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207) {
  
}

function saveApplicationFile_2499805208(self_2499805205, name_2499805206, content_2499805207) {
    chckNilDisp(self_2499805205);
    if (isObj(self_2499805205.m_type, NTI2516582404)) {
    saveApplicationFile_2516582418(self_2499805205, name_2499805206, content_2499805207);
    }
    else {
    if (isObj(self_2499805205.m_type, NTI2499805188)) {
    saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207);
    }
    }

  
}

function HEX2A_2332033374(aHEX60gensym155_2332033376, bHEX60gensym155_2332033377) {
  var result_2332033378 = ({arr: new Float32Array(2)});

    result_2332033378 = nimCopy(result_2332033378, {arr: new Float32Array([(aHEX60gensym155_2332033376.arr[0] * bHEX60gensym155_2332033377.arr[0]), (aHEX60gensym155_2332033376.arr[1] * bHEX60gensym155_2332033377.arr[1])])}, NTI2097152387);

  return result_2332033378;

}

function calculateBounds_2332033353(self_2332033354, container_2332033355) {
  var result_2332033356 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var topLeft_2332033410 = HEX2B_2080375257(HEX2B_2080375257(xy_2080374820(container_2332033355), HEX2A_2332033374(self_2332033354.anchor.Field0, wh_2080374828(container_2332033355))), vec2_2097152992(self_2332033354.left, self_2332033354.top));
    var bottomRight_2332033457 = HEX2B_2080375257(HEX2B_2080375257(xy_2080374820(container_2332033355), HEX2A_2332033374(self_2332033354.anchor.Field1, wh_2080374828(container_2332033355))), vec2_2097152992(self_2332033354.right, self_2332033354.bottom));
    var pivotOffset_2332033494 = HEX2A_2332033374(self_2332033354.pivot, HEX2D_2080375094(bottomRight_2332033457, topLeft_2332033410));
    result_2332033356 = nimCopy(result_2332033356, rect_2080374808(HEX2D_2080375094(topLeft_2332033410, pivotOffset_2332033494), HEX2D_2080375094(bottomRight_2332033457, topLeft_2332033410)), NTI2080374789);

  return result_2332033356;

}

function formatValue_2332033539(result_2332033541, result_2332033541_Idx, value_2332033542, specifier_2332033543) {
    formatValue_721420459(result_2332033541, result_2332033541_Idx, HEX24_2080374857(value_2332033542), specifier_2332033543);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872443 = 0;
      colontmp__536872443 = subInt((s_855638110).length, 1);
      var res_536872444 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872444 <= colontmp__536872443)) break Label3;
            iHEX60gensym7_855638117 = res_536872444;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872444 = addInt(res_536872444, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2097153055(aHEX60gensym72_2097153056) {
  var result_2097153057 = [];

    result_2097153057 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2097153062(aHEX60gensym72_2097153056.arr[0]) || [],[44,32] || [],HEX24_2097153062(aHEX60gensym72_2097153056.arr[1]) || [],[41] || []), NTI33554449);

  return result_2097153057;

}

function addQuoted_2332033623(s_2332033625, s_2332033625_Idx, x_2332033626) {
    s_2332033625[s_2332033625_Idx].push.apply(s_2332033625[s_2332033625_Idx], HEX24_2097153055(x_2332033626));;

  
}

function HEX24_2332033591(x_2332033593) {
  var result_2332033594 = [[]];

    result_2332033594[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym19_2332033605 = 0;
    if ((0 < countHEX60gensym19_2332033605)) {
    result_2332033594[0].push.apply(result_2332033594[0], [44,32]);;
    }
    
    result_2332033594[0].push.apply(result_2332033594[0], [109,105,110]);;
    result_2332033594[0].push.apply(result_2332033594[0], [58,32]);;
    countHEX60gensym19_2332033605 += 1;
    addQuoted_2332033623(result_2332033594, 0, x_2332033593["Field0"]);
    if ((0 < countHEX60gensym19_2332033605)) {
    result_2332033594[0].push.apply(result_2332033594[0], [44,32]);;
    }
    
    result_2332033594[0].push.apply(result_2332033594[0], [109,97,120]);;
    result_2332033594[0].push.apply(result_2332033594[0], [58,32]);;
    countHEX60gensym19_2332033605 += 1;
    addQuoted_2332033623(result_2332033594, 0, x_2332033593["Field1"]);
    result_2332033594[0].push.apply(result_2332033594[0], [41]);;

  return result_2332033594[0];

}

function formatValue_2332033586(result_2332033588, result_2332033588_Idx, value_2332033589, specifier_2332033590) {
    formatValue_721420459(result_2332033588, result_2332033588_Idx, HEX24_2332033591(value_2332033589), specifier_2332033590);

  
}

function formatValue_2332033653(result_2332033655, result_2332033655_Idx, value_2332033656, specifier_2332033657) {
    formatValue_721420459(result_2332033655, result_2332033655_Idx, HEX24_2097153055(value_2332033656), specifier_2332033657);

  
}

function layoutWidget_2332033527(self_2332033528, container_2332033529, frameIndex_2332033530, options_2332033531) {
    var newBounds_2332033532 = calculateBounds_2332033353(self_2332033528, container_2332033529);
    if (self_2332033528.logLayout) {
    var fmtRes_2332033538 = [mnewString(0)];
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2332033539(fmtRes_2332033538, 0, container_2332033529, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332033538, 0, frameIndex_2332033530, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332033538, 0, self_2332033528.anchor, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332033538, 0, self_2332033528.pivot, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.left, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.top, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.right, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.bottom, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033538, 0, newBounds_2332033532, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033538[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033532, self_2332033528.lastBounds))) {
    var fmtRes_2332033750 = [mnewString(0)];
    fmtRes_2332033750[0].push.apply(fmtRes_2332033750[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332033750, 0, self_2332033528.lastBounds, []);
    fmtRes_2332033750[0].push.apply(fmtRes_2332033750[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033750, 0, newBounds_2332033532, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033750[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033532, self_2332033528.lastBounds))) {
    self_2332033528.lastBounds = nimCopy(self_2332033528.lastBounds, newBounds_2332033532, NTI2080374789);
    self_2332033528.lastBoundsChange = frameIndex_2332033530;
    }
    
    if (((frameIndex_2332033530 <= self_2332033528.lastHierarchyChange) || (frameIndex_2332033530 <= self_2332033528.lastBoundsChange))) {
    Label1: {
      var c_2332033768 = null;
      var i_536872439 = 0;
      var L_536872440 = (self_2332033528.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872439 < L_536872440)) break Label3;
            c_2332033768 = self_2332033528.children[chckIndx(i_536872439, 0, (self_2332033528.children).length - 1)];
            layoutWidget_2332033348(c_2332033768, newBounds_2332033532, frameIndex_2332033530, options_2332033531);
            i_536872439 = addInt(i_536872439, 1);
            if (!(((self_2332033528.children).length == L_536872440))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2332033079(self_2332033080) {
  var result_2332033081 = 0.0;

    result_2332033081 = (self_2332033080.bottom - self_2332033080.top);

  return result_2332033081;

}

function layoutWidget_2332034001(self_2332034002, container_2332034003, frameIndex_2332034004, options_2332034005) {
    var newBounds_2332034006 = calculateBounds_2332033353(self_2332034002, container_2332034003);
    if (self_2332034002.logLayout) {
    var fmtRes_2332034012 = [mnewString(0)];
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2332033539(fmtRes_2332034012, 0, container_2332034003, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034012, 0, frameIndex_2332034004, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034012, 0, self_2332034002.anchor, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034012, 0, self_2332034002.pivot, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.left, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.top, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.right, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.bottom, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034012, 0, newBounds_2332034006, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034012[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034006, self_2332034002.lastBounds))) {
    var fmtRes_2332034067 = [mnewString(0)];
    fmtRes_2332034067[0].push.apply(fmtRes_2332034067[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034067, 0, self_2332034002.lastBounds, []);
    fmtRes_2332034067[0].push.apply(fmtRes_2332034067[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034067, 0, newBounds_2332034006, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034067[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034006, self_2332034002.lastBounds))) {
    self_2332034002.lastBounds = nimCopy(self_2332034002.lastBounds, newBounds_2332034006, NTI2080374789);
    self_2332034002.lastBoundsChange = frameIndex_2332034004;
    }
    
    if (((frameIndex_2332034004 <= self_2332034002.lastHierarchyChange) || (frameIndex_2332034004 <= self_2332034002.lastBoundsChange))) {
    var lastY_2332034082 = 0.0;
    Label1: {
      var c_2332034086 = null;
      var i_536872447 = 0;
      var L_536872448 = (self_2332034002.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872447 < L_536872448)) break Label3;
            c_2332034086 = self_2332034002.children[chckIndx(i_536872447, 0, (self_2332034002.children).length - 1)];
            var height_2332034087 = height_2332033079(c_2332034086);
            c_2332034086.top = lastY_2332034082;
            c_2332034086.bottom = (lastY_2332034082 + height_2332034087);
            layoutWidget_2332033348(c_2332034086, newBounds_2332034006, frameIndex_2332034004, options_2332034005);
            lastY_2332034082 = ((c_2332034086.lastBounds.y + c_2332034086.lastBounds.h) - newBounds_2332034006.y);
            i_536872447 = addInt(i_536872447, 1);
            if (!(((self_2332034002.children).length == L_536872448))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2332033902() {
  var result_2332033909 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2332033909;

}

function isSome_2332033922(self_2332033924) {
  var result_2332033925 = false;

    result_2332033925 = self_2332033924.has;

  return result_2332033925;

}

function isNone_2332033947(self_2332033949) {
  var result_2332033950 = false;

    result_2332033950 = !(self_2332033949.has);

  return result_2332033950;

}

function get_2332033939(self_2332033941) {
  var result_2332033942 = null;

  BeforeRet: {
    if (isNone_2332033947(self_2332033941)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2332033942 = self_2332033941.val;
    break BeforeRet;
  };

  return result_2332033942;

}

function some_2332033984(val_2332033986) {
  var result_2332033987 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2332033987.has = true;
    result_2332033987.val = nimCopy(result_2332033987.val, val_2332033986, NTI2080374789);

  return result_2332033987;

}

function layoutWidget_2332033769(self_2332033770, container_2332033771, frameIndex_2332033772, options_2332033773) {
            var Temporary10;

    var newBounds_2332033774 = calculateBounds_2332033353(self_2332033770, container_2332033771);
    if (self_2332033770.logLayout) {
    var fmtRes_2332033780 = [mnewString(0)];
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2332033539(fmtRes_2332033780, 0, container_2332033771, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332033780, 0, frameIndex_2332033772, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332033780, 0, self_2332033770.anchor, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332033780, 0, self_2332033770.pivot, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.left, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.top, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.right, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.bottom, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033780, 0, newBounds_2332033774, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033780[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033774, self_2332033770.lastBounds))) {
    var fmtRes_2332033835 = [mnewString(0)];
    fmtRes_2332033835[0].push.apply(fmtRes_2332033835[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332033835, 0, self_2332033770.lastBounds, []);
    fmtRes_2332033835[0].push.apply(fmtRes_2332033835[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033835, 0, newBounds_2332033774, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033835[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033774, self_2332033770.lastBounds))) {
    self_2332033770.lastBounds = nimCopy(self_2332033770.lastBounds, newBounds_2332033774, NTI2080374789);
    self_2332033770.lastBoundsChange = frameIndex_2332033772;
    }
    
    if (((frameIndex_2332033772 <= self_2332033770.lastHierarchyChange) || (frameIndex_2332033772 <= self_2332033770.lastBoundsChange))) {
    Label1: {
      var i_2332033882 = 0;
      var c_2332033883 = null;
      var i_536872456 = 0;
      var L_536872457 = (self_2332033770.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872456 < L_536872457)) break Label3;
            i_2332033882 = i_536872456;
            c_2332033883 = self_2332033770.children[chckIndx(i_536872456, 0, (self_2332033770.children).length - 1)];
            var oldBounds_2332033884 = nimCopy(null, c_2332033883.lastBounds, NTI2080374789);
            layoutWidget_2332033348(c_2332033883, newBounds_2332033774, frameIndex_2332033772, options_2332033773);
            var newBounds_2332033885 = nimCopy(null, c_2332033883.lastBounds, NTI2080374789);
            if ((!(HEX3DHEX3D_2332033735(oldBounds_2332033884, newBounds_2332033885)) && !(contains_2063597766(newBounds_2332033885, oldBounds_2332033884)))) {
            var invalidationRect_2332033890 = nimCopy(null, oldBounds_2332033884, NTI2080374789);
            Label4: {
              var k_2332033896 = 0;
              var colontmp__536872452 = 0;
              colontmp__536872452 = subInt(i_2332033882, 1);
              var res_536872453 = colontmp__536872452;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872453)) break Label6;
                    k_2332033896 = res_536872453;
                    invalidate_2332033255(self_2332033770.children[chckIndx(k_2332033896, 0, (self_2332033770.children).length - 1)], frameIndex_2332033772, invalidationRect_2332033890);
                    if (contains_2063597766(self_2332033770.children[chckIndx(k_2332033896, 0, (self_2332033770.children).length - 1)].lastBounds, invalidationRect_2332033890)) {
                    break Label4;
                    }
                    
                    res_536872453 = subInt(res_536872453, 1);
                  }
              };
            };
            }
            
            i_536872456 = addInt(i_536872456, 1);
            if (!(((self_2332033770.children).length == L_536872457))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2332033910 = [none_2332033902()];
    Label7: {
      var i_2332033916 = 0;
      var c_2332033917 = null;
      var i_536872460 = 0;
      var L_536872461 = (self_2332033770.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872460 < L_536872461)) break Label9;
            i_2332033916 = i_536872460;
            c_2332033917 = self_2332033770.children[chckIndx(i_536872460, 0, (self_2332033770.children).length - 1)];
            if (isSome_2332033922(invalidationRect_2332033910[0])) {
            invalidate_2332033255(c_2332033917, frameIndex_2332033772, get_2332033939(invalidationRect_2332033910[0]));
            }
            
            if (isSome_2332033922(invalidationRect_2332033910[0])) {
            Temporary10 = some_2332033984(or_2080374872(get_2332033939(invalidationRect_2332033910[0]), c_2332033917.lastBounds));
            }
            else {
            Temporary10 = some_2332033984(c_2332033917.lastBounds);
            }
            
            invalidationRect_2332033910[0] = nimCopy(invalidationRect_2332033910[0], Temporary10, NTI2332033636);
            i_536872460 = addInt(i_536872460, 1);
            if (!(((self_2332033770.children).length == L_536872461))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2449473546(x_2449473548, x_2449473548_Idx, y_2449473549) {
    x_2449473548[x_2449473548_Idx] = (x_2449473548[x_2449473548_Idx] - y_2449473549);

  
}

function layoutWidget_2332034175(self_2332034176, container_2332034177, frameIndex_2332034178, options_2332034179) {
    var newBounds_2332034180 = calculateBounds_2332033353(self_2332034176, container_2332034177);
    if (self_2332034176.sizeToContent) {
    var size_2332034181 = options_2332034179.getTextBounds(self_2332034176.text);
    var incX_2332034183 = max_33555642((size_2332034181.arr[chckIndx(0, 0, (size_2332034181.arr).length - 1)] - newBounds_2332034180.w), 0.0);
    var incY_2332034185 = max_33555642((size_2332034181.arr[chckIndx(1, 0, (size_2332034181.arr).length - 1)] - newBounds_2332034180.h), 0.0);
    newBounds_2332034180.w = size_2332034181.arr[chckIndx(0, 0, (size_2332034181.arr).length - 1)];
    newBounds_2332034180.h = size_2332034181.arr[chckIndx(1, 0, (size_2332034181.arr).length - 1)];
    HEX2DHEX3D_2449473546(newBounds_2332034180, "x", (incX_2332034183 * self_2332034176.pivot.arr[chckIndx(0, 0, (self_2332034176.pivot.arr).length - 1)]));
    HEX2DHEX3D_2449473546(newBounds_2332034180, "y", (incY_2332034185 * self_2332034176.pivot.arr[chckIndx(1, 0, (self_2332034176.pivot.arr).length - 1)]));
    }
    
    if (self_2332034176.logLayout) {
    var fmtRes_2332034203 = [mnewString(0)];
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2332034203, 0, self_2332034176.text, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [39,44,32]);;
    formatValue_2332033539(fmtRes_2332034203, 0, container_2332034177, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034203, 0, frameIndex_2332034178, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034203, 0, self_2332034176.anchor, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034203, 0, self_2332034176.pivot, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.left, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.top, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.right, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.bottom, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034203, 0, newBounds_2332034180, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034203[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034180, self_2332034176.lastBounds))) {
    var fmtRes_2332034258 = [mnewString(0)];
    fmtRes_2332034258[0].push.apply(fmtRes_2332034258[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034258, 0, self_2332034176.lastBounds, []);
    fmtRes_2332034258[0].push.apply(fmtRes_2332034258[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034258, 0, newBounds_2332034180, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034258[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034180, self_2332034176.lastBounds))) {
    self_2332034176.lastBounds = nimCopy(self_2332034176.lastBounds, newBounds_2332034180, NTI2080374789);
    self_2332034176.lastBoundsChange = frameIndex_2332034178;
    }
    

  
}

function width_2332033076(self_2332033077) {
  var result_2332033078 = 0.0;

    result_2332033078 = (self_2332033077.right - self_2332033077.left);

  return result_2332033078;

}

function layoutWidget_2332034088(self_2332034089, container_2332034090, frameIndex_2332034091, options_2332034092) {
    var newBounds_2332034093 = calculateBounds_2332033353(self_2332034089, container_2332034090);
    if (self_2332034089.logLayout) {
    var fmtRes_2332034099 = [mnewString(0)];
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2332033539(fmtRes_2332034099, 0, container_2332034090, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034099, 0, frameIndex_2332034091, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034099, 0, self_2332034089.anchor, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034099, 0, self_2332034089.pivot, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.left, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.top, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.right, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.bottom, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034099, 0, newBounds_2332034093, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034099[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034093, self_2332034089.lastBounds))) {
    var fmtRes_2332034154 = [mnewString(0)];
    fmtRes_2332034154[0].push.apply(fmtRes_2332034154[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034154, 0, self_2332034089.lastBounds, []);
    fmtRes_2332034154[0].push.apply(fmtRes_2332034154[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034154, 0, newBounds_2332034093, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034154[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034093, self_2332034089.lastBounds))) {
    self_2332034089.lastBounds = nimCopy(self_2332034089.lastBounds, newBounds_2332034093, NTI2080374789);
    self_2332034089.lastBoundsChange = frameIndex_2332034091;
    }
    
    if (((frameIndex_2332034091 <= self_2332034089.lastHierarchyChange) || (frameIndex_2332034091 <= self_2332034089.lastBoundsChange))) {
    var lastX_2332034169 = 0.0;
    Label1: {
      var c_2332034173 = null;
      var i_536872464 = 0;
      var L_536872465 = (self_2332034089.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872464 < L_536872465)) break Label3;
            c_2332034173 = self_2332034089.children[chckIndx(i_536872464, 0, (self_2332034089.children).length - 1)];
            var width_2332034174 = width_2332033076(c_2332034173);
            c_2332034173.left = lastX_2332034169;
            c_2332034173.right = (lastX_2332034169 + width_2332034174);
            layoutWidget_2332033348(c_2332034173, newBounds_2332034093, frameIndex_2332034091, options_2332034092);
            lastX_2332034169 = ((c_2332034173.lastBounds.x + c_2332034173.lastBounds.w) - newBounds_2332034093.x);
            i_536872464 = addInt(i_536872464, 1);
            if (!(((self_2332034089.children).length == L_536872465))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
  
}

function layoutWidget_2332033348(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
    chckNilDisp(self_2332033344);
    if (isObj(self_2332033344.m_type, NTI2332033036)) {
    layoutWidget_2332033527(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033040)) {
    layoutWidget_2332034001(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033038)) {
    layoutWidget_2332033769(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033044)) {
    layoutWidget_2332034175(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033042)) {
    layoutWidget_2332034088(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033034)) {
    layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    }}}}}

  
}

function invoke_3154116972(event_3154116974, arg_3154116975) {
    Label1: {
      var h_3154116998 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872469 = 0;
      var L_536872470 = (event_3154116974.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872469 < L_536872470)) break Label3;
            h_3154116998 = event_3154116974.handlers[chckIndx(i_536872469, 0, (event_3154116974.handlers).length - 1)];
            h_3154116998.Field1(arg_3154116975);
            i_536872469 = addInt(i_536872469, 1);
            if (!(((event_3154116974.handlers).length == L_536872470))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3154117714(self_3154117715, redrawEverything_3154117716) {
    invoke_3154116972(self_3154117715.onResized, redrawEverything_3154117716);

  
}

function requestRender_2315255896(self_2315255897, redrawEverything_2315255898) {
  
}

function requestRender_2315255899(self_2315255897, redrawEverything_2315255898) {
    chckNilDisp(self_2315255897);
    if (isObj(self_2315255897.m_type, NTI3154116614)) {
    requestRender_3154117714(self_2315255897, redrawEverything_2315255898);
    }
    else {
    if (isObj(self_2315255897.m_type, NTI2315255812)) {
    requestRender_2315255896(self_2315255897, redrawEverything_2315255898);
    }
    }

  
}

function size_3154117745(self_3154117746) {
  var result_3154117747 = ({arr: new Float32Array(2)});

    result_3154117747 = nimCopy(result_3154117747, vec2_2097152992(self_3154117746.content.clientWidth, self_3154117746.content.clientHeight), NTI2097152387);

  return result_3154117747;

}

function size_2315255910(self_2315255911) {
  var result_2315255912 = ({arr: new Float32Array(2)});

  return result_2315255912;

}

function size_2315255913(self_2315255911) {
  var result_2315255914 = ({arr: new Float32Array(2)});

  BeforeRet: {
    chckNilDisp(self_2315255911);
    if (isObj(self_2315255911.m_type, NTI3154116614)) {
    result_2315255914 = nimCopy(result_2315255914, size_3154117745(self_2315255911), NTI2097152387);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255911.m_type, NTI2315255812)) {
    result_2315255914 = nimCopy(result_2315255914, size_2315255910(self_2315255911), NTI2097152387);
    break BeforeRet;
    }
    }
  };

  return result_2315255914;

}

function HEX2D_2063597733(a_2063597734, b_2063597735) {
  var result_2063597736 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597736.x = (a_2063597734.x - b_2063597735.arr[chckIndx(0, 0, (b_2063597735.arr).length - 1)]);
    result_2063597736.y = (a_2063597734.y - b_2063597735.arr[chckIndx(1, 0, (b_2063597735.arr).length - 1)]);
    result_2063597736.w = a_2063597734.w;
    result_2063597736.h = a_2063597734.h;

  return result_2063597736;

}

function toHex_2348810254(x_2348810256) {
  var result_2348810257 = [];

    result_2348810257 = nimCopy(null, toHexImpl_855638788((x_2348810256 >>> 0), 8, (x_2348810256 < 0)), NTI33554449);

  return result_2348810257;

}

function toHex_2348810251(a_2348810252) {
  var result_2348810253 = [];

    result_2348810253 = nimCopy(null, toHex_2348810254(((a_2348810252) | 0)), NTI33554449);

  return result_2348810253;

}

function toHex_2348810490(c_2348810491) {
  var result_2348810492 = [];

    result_2348810492 = nimCopy(null, (HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.r * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || []).concat(HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.g * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || [],HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.b * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || []), NTI33554449);

  return result_2348810492;

}

function toHtmlHex_2348810680(c_2348810681) {
  var result_2348810682 = [];

    result_2348810682 = nimCopy(null, [35].concat(toHex_2348810490(c_2348810681) || []), NTI33554449);

  return result_2348810682;

}

function pop_3154117839(s_3154117841, s_3154117841_Idx) {
  var result_3154117842 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3154117846 = subInt((s_3154117841[s_3154117841_Idx]).length, 1);
    result_3154117842 = nimCopy(result_3154117842, s_3154117841[s_3154117841_Idx][chckIndx(L_3154117846, 0, (s_3154117841[s_3154117841_Idx]).length - 1)], NTI2080374789);
    if (s_3154117841[s_3154117841_Idx].length < chckRange(L_3154117846, 0, 2147483647)) { for (var i = s_3154117841[s_3154117841_Idx].length ; i < chckRange(L_3154117846, 0, 2147483647) ; ++i) s_3154117841[s_3154117841_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3154117841[s_3154117841_Idx].length = chckRange(L_3154117846, 0, 2147483647); };

  return result_3154117842;

}

function renderWidget_3154117852(self_3154117853, renderer_3154117854, forceRedraw_3154117855, frameIndex_3154117856, buffer_3154117857, buffer_3154117857_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3154117853.lastHierarchyChange < frameIndex_3154117856) && (self_3154117853.lastBoundsChange < frameIndex_3154117856)) && (self_3154117853.lastInvalidation < frameIndex_3154117856)) && !(forceRedraw_3154117855))) {
    break BeforeRet;
    }
    
    var relBounds_3154117864 = HEX2D_2063597733(self_3154117853.lastBounds, xy_2080374820(renderer_3154117854.boundsStack[chckIndx((renderer_3154117854.boundsStack).length - 1, 0, (renderer_3154117854.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3154117853.lastBounds, NTI2080374789);
    renderer_3154117854.boundsStack.push(Temporary1);;
    try {
    if (self_3154117853.fillBackground) {
    var fmtRes_3154117876 = [mnewString(0)];
    fmtRes_3154117876[0].push.apply(fmtRes_3154117876[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3154117876, 0, toHtmlHex_2348810680(self_3154117853.backgroundColor), []);
    fmtRes_3154117876[0].push.apply(fmtRes_3154117876[0], [59]);;
    Temporary3 = fmtRes_3154117876[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3154117877 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3154117857[buffer_3154117857_Idx].push.apply(buffer_3154117857[buffer_3154117857_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3154117882 = [mnewString(0)];
    fmtRes_3154117882[0].push.apply(fmtRes_3154117882[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3154117882, 0, ((relBounds_3154117864.x) | 0), []);
    fmtRes_3154117882[0].push.apply(fmtRes_3154117882[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3154117882, 0, ((relBounds_3154117864.y) | 0), []);
    fmtRes_3154117882[0].push.apply(fmtRes_3154117882[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154117882, 0, ((relBounds_3154117864.w) | 0), []);
    fmtRes_3154117882[0].push.apply(fmtRes_3154117882[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154117882, 0, ((relBounds_3154117864.h) | 0), []);
    fmtRes_3154117882[0].push.apply(fmtRes_3154117882[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3154117882, 0, backgroundColor_3154117877, []);
    buffer_3154117857[buffer_3154117857_Idx].push.apply(buffer_3154117857[buffer_3154117857_Idx], fmtRes_3154117882[0]);;
    buffer_3154117857[buffer_3154117857_Idx].push.apply(buffer_3154117857[buffer_3154117857_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3154117906 = null;
      var i_536872473 = 0;
      var L_536872474 = (self_3154117853.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872473 < L_536872474)) break Label6;
            c_3154117906 = self_3154117853.children[chckIndx(i_536872473, 0, (self_3154117853.children).length - 1)];
            renderWidget_3154117830(c_3154117906, renderer_3154117854, (forceRedraw_3154117855 || self_3154117853.fillBackground), frameIndex_3154117856, buffer_3154117857, buffer_3154117857_Idx);
            i_536872473 = addInt(i_536872473, 1);
            if (!(((self_3154117853.children).length == L_536872474))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3154117857[buffer_3154117857_Idx].push.apply(buffer_3154117857[buffer_3154117857_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3154117839(renderer_3154117854, "boundsStack");
    }
  };

  
}

function renderWidget_3154117971(self_3154117972, renderer_3154117973, forceRedraw_3154117974, frameIndex_3154117975, buffer_3154117976, buffer_3154117976_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3154117972.lastHierarchyChange < frameIndex_3154117975) && (self_3154117972.lastBoundsChange < frameIndex_3154117975)) && (self_3154117972.lastInvalidation < frameIndex_3154117975)) && !(forceRedraw_3154117974))) {
    break BeforeRet;
    }
    
    var relBounds_3154117983 = HEX2D_2063597733(self_3154117972.lastBounds, xy_2080374820(renderer_3154117973.boundsStack[chckIndx((renderer_3154117973.boundsStack).length - 1, 0, (renderer_3154117973.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3154117972.lastBounds, NTI2080374789);
    renderer_3154117973.boundsStack.push(Temporary1);;
    try {
    if (self_3154117972.fillBackground) {
    var fmtRes_3154117995 = [mnewString(0)];
    fmtRes_3154117995[0].push.apply(fmtRes_3154117995[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3154117995, 0, toHtmlHex_2348810680(self_3154117972.backgroundColor), []);
    fmtRes_3154117995[0].push.apply(fmtRes_3154117995[0], [59]);;
    Temporary3 = fmtRes_3154117995[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3154117996 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3154117976[buffer_3154117976_Idx].push.apply(buffer_3154117976[buffer_3154117976_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3154118001 = [mnewString(0)];
    fmtRes_3154118001[0].push.apply(fmtRes_3154118001[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3154118001, 0, ((relBounds_3154117983.x) | 0), []);
    fmtRes_3154118001[0].push.apply(fmtRes_3154118001[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3154118001, 0, ((relBounds_3154117983.y) | 0), []);
    fmtRes_3154118001[0].push.apply(fmtRes_3154118001[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154118001, 0, ((relBounds_3154117983.w) | 0), []);
    fmtRes_3154118001[0].push.apply(fmtRes_3154118001[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154118001, 0, ((relBounds_3154117983.h) | 0), []);
    fmtRes_3154118001[0].push.apply(fmtRes_3154118001[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3154118001, 0, backgroundColor_3154117996, []);
    buffer_3154117976[buffer_3154117976_Idx].push.apply(buffer_3154117976[buffer_3154117976_Idx], fmtRes_3154118001[0]);;
    buffer_3154117976[buffer_3154117976_Idx].push.apply(buffer_3154117976[buffer_3154117976_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3154118025 = null;
      var i_536872477 = 0;
      var L_536872478 = (self_3154117972.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872477 < L_536872478)) break Label6;
            c_3154118025 = self_3154117972.children[chckIndx(i_536872477, 0, (self_3154117972.children).length - 1)];
            renderWidget_3154117830(c_3154118025, renderer_3154117973, (forceRedraw_3154117974 || self_3154117972.fillBackground), frameIndex_3154117975, buffer_3154117976, buffer_3154117976_Idx);
            i_536872477 = addInt(i_536872477, 1);
            if (!(((self_3154117972.children).length == L_536872478))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3154117976[buffer_3154117976_Idx].push.apply(buffer_3154117976[buffer_3154117976_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3154117839(renderer_3154117973, "boundsStack");
    }
  };

  
}

function renderWidget_3154117916(self_3154117917, renderer_3154117918, forceRedraw_3154117919, frameIndex_3154117920, buffer_3154117921, buffer_3154117921_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3154117917.lastHierarchyChange < frameIndex_3154117920) && (self_3154117917.lastBoundsChange < frameIndex_3154117920)) && (self_3154117917.lastInvalidation < frameIndex_3154117920)) && !(forceRedraw_3154117919))) {
    break BeforeRet;
    }
    
    var relBounds_3154117928 = HEX2D_2063597733(self_3154117917.lastBounds, xy_2080374820(renderer_3154117918.boundsStack[chckIndx((renderer_3154117918.boundsStack).length - 1, 0, (renderer_3154117918.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3154117917.lastBounds, NTI2080374789);
    renderer_3154117918.boundsStack.push(Temporary1);;
    try {
    if (self_3154117917.fillBackground) {
    var fmtRes_3154117940 = [mnewString(0)];
    fmtRes_3154117940[0].push.apply(fmtRes_3154117940[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3154117940, 0, toHtmlHex_2348810680(self_3154117917.backgroundColor), []);
    fmtRes_3154117940[0].push.apply(fmtRes_3154117940[0], [59]);;
    Temporary3 = fmtRes_3154117940[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3154117941 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3154117921[buffer_3154117921_Idx].push.apply(buffer_3154117921[buffer_3154117921_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3154117946 = [mnewString(0)];
    fmtRes_3154117946[0].push.apply(fmtRes_3154117946[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3154117946, 0, ((relBounds_3154117928.x) | 0), []);
    fmtRes_3154117946[0].push.apply(fmtRes_3154117946[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3154117946, 0, ((relBounds_3154117928.y) | 0), []);
    fmtRes_3154117946[0].push.apply(fmtRes_3154117946[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154117946, 0, ((relBounds_3154117928.w) | 0), []);
    fmtRes_3154117946[0].push.apply(fmtRes_3154117946[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154117946, 0, ((relBounds_3154117928.h) | 0), []);
    fmtRes_3154117946[0].push.apply(fmtRes_3154117946[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3154117946, 0, backgroundColor_3154117941, []);
    buffer_3154117921[buffer_3154117921_Idx].push.apply(buffer_3154117921[buffer_3154117921_Idx], fmtRes_3154117946[0]);;
    buffer_3154117921[buffer_3154117921_Idx].push.apply(buffer_3154117921[buffer_3154117921_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3154117970 = null;
      var i_536872481 = 0;
      var L_536872482 = (self_3154117917.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872481 < L_536872482)) break Label6;
            c_3154117970 = self_3154117917.children[chckIndx(i_536872481, 0, (self_3154117917.children).length - 1)];
            renderWidget_3154117830(c_3154117970, renderer_3154117918, (forceRedraw_3154117919 || self_3154117917.fillBackground), frameIndex_3154117920, buffer_3154117921, buffer_3154117921_Idx);
            i_536872481 = addInt(i_536872481, 1);
            if (!(((self_3154117917.children).length == L_536872482))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3154117921[buffer_3154117921_Idx].push.apply(buffer_3154117921[buffer_3154117921_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3154117839(renderer_3154117918, "boundsStack");
    }
  };

  
}

function rawGet_3154118273(t_3154118276, key_3154118277, hc_3154118278, hc_3154118278_Idx) {
  var result_3154118279 = 0;

  BeforeRet: {
    hc_3154118278[hc_3154118278_Idx] = hash_1325400491(key_3154118277);
    if ((hc_3154118278[hc_3154118278_Idx] == 0)) {
    hc_3154118278[hc_3154118278_Idx] = 314159265;
    }
    
    if (((t_3154118276.data).length == 0)) {
    result_3154118279 = -1;
    break BeforeRet;
    }
    
    var h_3154118354 = (hc_3154118278[hc_3154118278_Idx] & (t_3154118276.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154118276.data[chckIndx(h_3154118354, 0, (t_3154118276.data).length - 1)].Field0)) break Label2;
          if (((t_3154118276.data[chckIndx(h_3154118354, 0, (t_3154118276.data).length - 1)].Field0 == hc_3154118278[hc_3154118278_Idx]) && eqStrings(t_3154118276.data[chckIndx(h_3154118354, 0, (t_3154118276.data).length - 1)].Field1, key_3154118277))) {
          result_3154118279 = h_3154118354;
          break BeforeRet;
          }
          
          h_3154118354 = nextTry_1308622883(h_3154118354, (t_3154118276.data).length - 1);
        }
    };
    result_3154118279 = subInt(-1, h_3154118354);
  };

  return result_3154118279;

}

function hasKey_3154118266(t_3154118269, key_3154118270) {
  var result_3154118271 = false;

    var hc_3154118272 = [0];
    result_3154118271 = (0 <= rawGet_3154118273(t_3154118269, key_3154118270, hc_3154118272, 0));

  return result_3154118271;

}

function contains_3154118260(t_3154118263, key_3154118264) {
  var result_3154118265 = false;

  BeforeRet: {
    result_3154118265 = hasKey_3154118266(t_3154118263, key_3154118264);
    break BeforeRet;
  };

  return result_3154118265;

}

function contains_3154118166(cache_3154118169, key_3154118170) {
  var result_3154118171 = false;

    result_3154118171 = contains_3154118260(cache_3154118169.table, key_3154118170);

  return result_3154118171;

}

function HEX5BHEX5D_3154118757(t_3154118760, key_3154118761) {
  var result_3154118762 = null;
  var result_3154118762_Idx = 0;

    var hcHEX60gensym22_3154118763 = [0];
    var indexHEX60gensym22_3154118770 = rawGet_3154118273(t_3154118760, key_3154118761, hcHEX60gensym22_3154118763, 0);
    if ((0 <= indexHEX60gensym22_3154118770)) {
    result_3154118762 = t_3154118760.data[chckIndx(indexHEX60gensym22_3154118770, 0, (t_3154118760.data).length - 1)]; result_3154118762_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_3154118761);
    }
    

  return [result_3154118762, result_3154118762_Idx];

}

function remove_3154118873(L_3154118875, n_3154118876) {
    if ((n_3154118876 == L_3154118875.tail)) {
    L_3154118875.tail = n_3154118876.prev;
    }
    
    if ((n_3154118876 == L_3154118875.head)) {
    L_3154118875.head = n_3154118876.next;
    }
    
    if (!((n_3154118876.next == null))) {
    n_3154118876.next.prev = n_3154118876.prev;
    }
    
    if (!((n_3154118876.prev == null))) {
    n_3154118876.prev.next = n_3154118876.next;
    }
    

  
}

function prepend_3154119117(L_3154119119, n_3154119120) {
    n_3154119120.prev = null;
    n_3154119120.next = L_3154119119.head;
    if (!((L_3154119119.head == null))) {
    if (!((L_3154119119.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3154119119.head.prev = n_3154119120;
    }
    
    L_3154119119.head = n_3154119120;
    if ((L_3154119119.tail == null)) {
    L_3154119119.tail = n_3154119120;
    }
    

  
}

function HEX5BHEX5D_3154118671(cache_3154118674, key_3154118675) {
    var Temporary1;

  var result_3154118676 = [];

    var node_3154118859 = (Temporary1 = HEX5BHEX5D_3154118757(cache_3154118674.table, key_3154118675), Temporary1)[0][Temporary1[1]];
    result_3154118676 = nimCopy(null, node_3154118859.value.val, NTI33554449);
    remove_3154118873(cache_3154118674.list, node_3154118859);
    prepend_3154119117(cache_3154118674.list, node_3154118859);

  return result_3154118676;

}

function nsuContinuesWith(s_855639504, substr_855639505, start_855639506) {
  var result_855639507 = false;

  BeforeRet: {
    var i_855639508 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_855639505).length <= i_855639508)) {
          result_855639507 = true;
          break BeforeRet;
          }
          
          if ((((s_855639504).length <= addInt(i_855639508, start_855639506)) || !((s_855639504[chckIndx(addInt(i_855639508, start_855639506), 0, (s_855639504).length - 1)] == substr_855639505[chckIndx(i_855639508, 0, (substr_855639505).length - 1)])))) {
          result_855639507 = false;
          break BeforeRet;
          }
          
          i_855639508 = addInt(i_855639508, 1);
        }
    };
  };

  return result_855639507;

}

function multiReplace_855639929(s_855639930, replacements_855639931) {
                      var Temporary10;

  var result_855639932 = [];

    result_855639932 = nimCopy(null, mnewString(0), NTI33554449);
    var i_855639933 = 0;
    var fastChk_855639934 = nimCopy(null, ConstSet315, NTI855639351);
    Label1: {
      var sub_855639948 = [];
      var by_855639949 = [];
      var i_536872486 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872486 < (replacements_855639931).length)) break Label3;
            sub_855639948 = replacements_855639931[chckIndx(i_536872486, 0, (replacements_855639931).length - 1)]["Field0"];
            by_855639949 = replacements_855639931[chckIndx(i_536872486, 0, (replacements_855639931).length - 1)]["Field1"];
            if ((0 < (sub_855639948).length)) {
            fastChk_855639934[sub_855639948[chckIndx(0, 0, (sub_855639948).length - 1)]] = true;
            }
            
            i_536872486 = addInt(i_536872486, 1);
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_855639933 < (s_855639930).length)) break Label5;
          Label6: {
            if ((fastChk_855639934[s_855639930[chckIndx(i_855639933, 0, (s_855639930).length - 1)]] != undefined)) {
            Label7: {
              var sub_855639962 = [];
              var by_855639963 = [];
              var i_536872490 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_536872490 < (replacements_855639931).length)) break Label9;
                    sub_855639962 = replacements_855639931[chckIndx(i_536872490, 0, (replacements_855639931).length - 1)]["Field0"];
                    by_855639963 = replacements_855639931[chckIndx(i_536872490, 0, (replacements_855639931).length - 1)]["Field1"];
                      if (!(0 < (sub_855639962).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_855639930, sub_855639962, chckRange(i_855639933, 0, 2147483647));                      }                    if (Temporary10) {
                    result_855639932.push.apply(result_855639932, by_855639963);;
                    i_855639933 = addInt(i_855639933, (sub_855639962).length);
                    break Label6;
                    }
                    
                    i_536872490 = addInt(i_536872490, 1);
                  }
              };
            };
            }
            
            addChar(result_855639932, s_855639930[chckIndx(i_855639933, 0, (s_855639930).length - 1)]);;
            i_855639933 = addInt(i_855639933, 1);
          };
        }
    };

  return result_855639932;

}

function getOrDefault_3154119426(t_3154119429, key_3154119430, default_3154119431) {
    var Temporary1;

  var result_3154119432 = null;

    var hcHEX60gensym38_3154119435 = [0];
    var indexHEX60gensym38_3154119442 = rawGet_3154118273(t_3154119429, key_3154119430, hcHEX60gensym38_3154119435, 0);
    if ((0 <= indexHEX60gensym38_3154119442)) {
    Temporary1 = t_3154119429.data[chckIndx(indexHEX60gensym38_3154119442, 0, (t_3154119429.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3154119431;
    }
    
    result_3154119432 = Temporary1;

  return result_3154119432;

}

function newDoublyLinkedNode_3154119554(value_3154119556) {
  var result_3154119557 = null;

    result_3154119557 = ({next: null, prev: null, value: ({key: [], val: []})});
    result_3154119557.value = nimCopy(result_3154119557.value, value_3154119556, NTI3154116645);

  return result_3154119557;

}

function mustRehash_3154119878(t_3154119880) {
  var result_3154119881 = false;

    if (!((t_3154119880.counter < (t_3154119880.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3154119881 = ((mulInt((t_3154119880.data).length, 2) < mulInt(t_3154119880.counter, 3)) || (subInt((t_3154119880.data).length, t_3154119880.counter) < 4));

  return result_3154119881;

}

function rawInsert_3154120511(t_3154120515, data_3154120516, data_3154120516_Idx, key_3154120517, val_3154120518, hc_3154120519, h_3154120520) {
    data_3154120516[data_3154120516_Idx][chckIndx(h_3154120520, 0, (data_3154120516[data_3154120516_Idx]).length - 1)].Field1 = nimCopy(null, key_3154120517, NTI33554449);
    data_3154120516[data_3154120516_Idx][chckIndx(h_3154120520, 0, (data_3154120516[data_3154120516_Idx]).length - 1)].Field2 = val_3154120518;
    data_3154120516[data_3154120516_Idx][chckIndx(h_3154120520, 0, (data_3154120516[data_3154120516_Idx]).length - 1)].Field0 = hc_3154120519;

  
}

function enlarge_3154120102(t_3154120105) {
    var n_3154120108 = [];
    n_3154120108 = new Array(chckRange(mulInt((t_3154120105.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3154120105.data).length, 2), 0, 2147483647) ; ++i) { n_3154120108[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_3154120105.data; t_3154120105.data = n_3154120108; n_3154120108 = Temporary1;    Label2: {
      var i_3154120195 = 0;
      var colontmp__536872495 = 0;
      colontmp__536872495 = (n_3154120108).length - 1;
      var res_536872496 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872496 <= colontmp__536872495)) break Label4;
            i_3154120195 = res_536872496;
            var eh_3154120272 = n_3154120108[chckIndx(i_3154120195, 0, (n_3154120108).length - 1)].Field0;
            if (isFilled_1308622880(eh_3154120272)) {
            var j_3154120276 = (eh_3154120272 & (t_3154120105.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3154120105.data[chckIndx(j_3154120276, 0, (t_3154120105.data).length - 1)].Field0)) break Label6;
                  j_3154120276 = nextTry_1308622883(j_3154120276, (t_3154120105.data).length - 1);
                }
            };
            rawInsert_3154120511(t_3154120105, t_3154120105, "data", n_3154120108[chckIndx(i_3154120195, 0, (n_3154120108).length - 1)].Field1, n_3154120108[chckIndx(i_3154120195, 0, (n_3154120108).length - 1)].Field2, eh_3154120272, j_3154120276);
            }
            
            res_536872496 = addInt(res_536872496, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3154120749(t_3154120752, key_3154120753, hc_3154120754) {
  var result_3154120755 = 0;

  BeforeRet: {
    if (((t_3154120752.data).length == 0)) {
    result_3154120755 = -1;
    break BeforeRet;
    }
    
    var h_3154120829 = (hc_3154120754 & (t_3154120752.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154120752.data[chckIndx(h_3154120829, 0, (t_3154120752.data).length - 1)].Field0)) break Label2;
          if (((t_3154120752.data[chckIndx(h_3154120829, 0, (t_3154120752.data).length - 1)].Field0 == hc_3154120754) && eqStrings(t_3154120752.data[chckIndx(h_3154120829, 0, (t_3154120752.data).length - 1)].Field1, key_3154120753))) {
          result_3154120755 = h_3154120829;
          break BeforeRet;
          }
          
          h_3154120829 = nextTry_1308622883(h_3154120829, (t_3154120752.data).length - 1);
        }
    };
    result_3154120755 = subInt(-1, h_3154120829);
  };

  return result_3154120755;

}

function HEX5BHEX5DHEX3D_3154119636(t_3154119639, key_3154119640, val_3154119641) {
    if (((t_3154119639.data).length == 0)) {
    var correctSizeHEX60gensym41_3154119713 = slotsNeeded_1308622891(32);
    t_3154119639.counter = 0;
    t_3154119639.data = new Array(chckRange(correctSizeHEX60gensym41_3154119713, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_3154119713, 0, 2147483647) ; ++i) { t_3154119639.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_3154119718 = [0];
    var index_3154119725 = rawGet_3154118273(t_3154119639, key_3154119640, hc_3154119718, 0);
    if ((0 <= index_3154119725)) {
    t_3154119639.data[chckIndx(index_3154119725, 0, (t_3154119639.data).length - 1)].Field2 = val_3154119641;
    }
    else {
      if (((t_3154119639.data).length == 0)) {
      var correctSizeHEX60gensym44_3154119873 = slotsNeeded_1308622891(32);
      t_3154119639.counter = 0;
      t_3154119639.data = new Array(chckRange(correctSizeHEX60gensym44_3154119873, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym44_3154119873, 0, 2147483647) ; ++i) { t_3154119639.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_3154119878(t_3154119639)) {
      enlarge_3154120102(t_3154119639);
      index_3154119725 = rawGetKnownHC_3154120749(t_3154119639, key_3154119640, hc_3154119718[0]);
      }
      
      index_3154119725 = subInt(-1, index_3154119725);
      rawInsert_3154120511(t_3154119639, t_3154119639, "data", key_3154119640, val_3154119641, hc_3154119718[0], index_3154119725);
      t_3154119639.counter = addInt(t_3154119639.counter, 1);
    }
    

  
}

function rawGet_3154121162(t_3154121165, key_3154121166, hc_3154121167, hc_3154121167_Idx) {
  var result_3154121168 = 0;

  BeforeRet: {
    hc_3154121167[hc_3154121167_Idx] = hash_1325400491(key_3154121166);
    if ((hc_3154121167[hc_3154121167_Idx] == 0)) {
    hc_3154121167[hc_3154121167_Idx] = 314159265;
    }
    
    if (((t_3154121165.data).length == 0)) {
    result_3154121168 = -1;
    break BeforeRet;
    }
    
    var h_3154121243 = (hc_3154121167[hc_3154121167_Idx] & (t_3154121165.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3154121165.data[chckIndx(h_3154121243, 0, (t_3154121165.data).length - 1)].Field0)) break Label2;
          if (((t_3154121165.data[chckIndx(h_3154121243, 0, (t_3154121165.data).length - 1)].Field0 == hc_3154121167[hc_3154121167_Idx]) && eqStrings(t_3154121165.data[chckIndx(h_3154121243, 0, (t_3154121165.data).length - 1)].Field1, key_3154121166))) {
          result_3154121168 = h_3154121243;
          break BeforeRet;
          }
          
          h_3154121243 = nextTry_1828716586(h_3154121243, (t_3154121165.data).length - 1);
        }
    };
    result_3154121168 = subInt(-1, h_3154121243);
  };

  return result_3154121168;

}

function exclImpl_3154121156(s_3154121158, key_3154121159) {
          var Temporary5;

  var result_3154121160 = false;

  BeforeRet: {
    var hc_3154121161 = [0];
    var i_3154121493 = rawGet_3154121162(s_3154121158, key_3154121159, hc_3154121161, 0);
    var msk_3154121497 = (s_3154121158.data).length - 1;
    result_3154121160 = true;
    if ((0 <= i_3154121493)) {
    result_3154121160 = false;
    s_3154121158.counter = subInt(s_3154121158.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3154121503 = i_3154121493;
          var r_3154121504 = j_3154121503;
          s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)].Field0 = 0;
          s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3154121493 = (addInt(i_3154121493, 1) & msk_3154121497);
                if (isEmpty_1828716580(s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3154121504 = (s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)].Field0 & msk_3154121497);
                if (!(((((r_3154121504 <= i_3154121493) && (j_3154121503 < r_3154121504)) || ((j_3154121503 < r_3154121504) && (i_3154121493 < j_3154121503))) || ((i_3154121493 < j_3154121503) && (r_3154121504 <= i_3154121493))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)];
          s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)] = genericReset(s_3154121158.data[chckIndx(i_3154121493, 0, (s_3154121158.data).length - 1)], NTI3154116701);
          s_3154121158.data[chckIndx(j_3154121503, 0, (s_3154121158.data).length - 1)] = nimCopy(s_3154121158.data[chckIndx(j_3154121503, 0, (s_3154121158.data).length - 1)], Temporary5, NTI3154116701);
        }
    };
    }
    
  };

  return result_3154121160;

}

function excl_3154121141(s_3154121143, key_3154121144) {
    var _ = exclImpl_3154121156(s_3154121143, key_3154121144);

  
}

function len_3154122223(t_3154122226) {
  var result_3154122227 = 0;

    result_3154122227 = t_3154122226.counter;

  return result_3154122227;

}

function len_3154122140(cache_3154122143) {
  var result_3154122144 = 0;

    result_3154122144 = len_3154122223(cache_3154122143.table);

  return result_3154122144;

}

function mustRehash_3154122357(t_3154122359) {
  var result_3154122360 = false;

    if (!((t_3154122359.counter < (t_3154122359.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3154122360 = ((mulInt((t_3154122359.data).length, 2) < mulInt(t_3154122359.counter, 3)) || (subInt((t_3154122359.data).length, t_3154122359.counter) < 4));

  return result_3154122360;

}

function rawGetKnownHC_3154122907(t_3154122910, key_3154122911, hc_3154122912) {
  var result_3154122913 = 0;

  BeforeRet: {
    if (((t_3154122910.data).length == 0)) {
    result_3154122913 = -1;
    break BeforeRet;
    }
    
    var h_3154122987 = (hc_3154122912 & (t_3154122910.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3154122910.data[chckIndx(h_3154122987, 0, (t_3154122910.data).length - 1)].Field0)) break Label2;
          if (((t_3154122910.data[chckIndx(h_3154122987, 0, (t_3154122910.data).length - 1)].Field0 == hc_3154122912) && eqStrings(t_3154122910.data[chckIndx(h_3154122987, 0, (t_3154122910.data).length - 1)].Field1, key_3154122911))) {
          result_3154122913 = h_3154122987;
          break BeforeRet;
          }
          
          h_3154122987 = nextTry_1828716586(h_3154122987, (t_3154122910.data).length - 1);
        }
    };
    result_3154122913 = subInt(-1, h_3154122987);
  };

  return result_3154122913;

}

function rawInsert_3154123376(s_3154123378, data_3154123379, data_3154123379_Idx, key_3154123380, hc_3154123381, h_3154123382) {
    if (((data_3154123379[data_3154123379_Idx]).length == 0)) {
    var correctSizeHEX60gensym61_3154123454 = slotsNeeded_1828716594(64);
    s_3154123378.counter = 0;
    s_3154123378.data = new Array(chckRange(correctSizeHEX60gensym61_3154123454, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_3154123454, 0, 2147483647) ; ++i) { s_3154123378.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_3154123379[data_3154123379_Idx][chckIndx(h_3154123382, 0, (data_3154123379[data_3154123379_Idx]).length - 1)].Field1 = nimCopy(null, key_3154123380, NTI33554449);
    data_3154123379[data_3154123379_Idx][chckIndx(h_3154123382, 0, (data_3154123379[data_3154123379_Idx]).length - 1)].Field0 = hc_3154123381;

  
}

function enlarge_3154122587(s_3154122589) {
    var n_3154122591 = [];
    n_3154122591 = new Array(chckRange(mulInt((s_3154122589.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3154122589.data).length, 2), 0, 2147483647) ; ++i) { n_3154122591[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_3154122589.data; s_3154122589.data = n_3154122591; n_3154122591 = Temporary1;    Label2: {
      var i_3154122678 = 0;
      var colontmp__536872504 = 0;
      colontmp__536872504 = (n_3154122591).length - 1;
      var res_536872505 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872505 <= colontmp__536872504)) break Label4;
            i_3154122678 = res_536872505;
            if (isFilled_1828716583(n_3154122591[chckIndx(i_3154122678, 0, (n_3154122591).length - 1)].Field0)) {
            var j_3154123219 = subInt(-1, rawGetKnownHC_3154122907(s_3154122589, n_3154122591[chckIndx(i_3154122678, 0, (n_3154122591).length - 1)].Field1, n_3154122591[chckIndx(i_3154122678, 0, (n_3154122591).length - 1)].Field0));
            rawInsert_3154123376(s_3154122589, s_3154122589, "data", n_3154122591[chckIndx(i_3154122678, 0, (n_3154122591).length - 1)].Field1, n_3154122591[chckIndx(i_3154122678, 0, (n_3154122591).length - 1)].Field0, j_3154123219);
            }
            
            res_536872505 = addInt(res_536872505, 1);
          }
      };
    };

  
}

function incl_3154122248(s_3154122250, key_3154122251) {
    if (((s_3154122250.data).length == 0)) {
    var correctSizeHEX60gensym54_3154122327 = slotsNeeded_1828716594(64);
    s_3154122250.counter = 0;
    s_3154122250.data = new Array(chckRange(correctSizeHEX60gensym54_3154122327, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_3154122327, 0, 2147483647) ; ++i) { s_3154122250.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_3154122342 = [0];
    var index_3154122356 = rawGet_3154121162(s_3154122250, key_3154122251, hc_3154122342, 0);
    if ((index_3154122356 < 0)) {
    if (mustRehash_3154122357(s_3154122250)) {
    enlarge_3154122587(s_3154122250);
    index_3154122356 = rawGetKnownHC_3154122907(s_3154122250, key_3154122251, hc_3154122342[0]);
    }
    
    rawInsert_3154123376(s_3154122250, s_3154122250, "data", key_3154122251, hc_3154122342[0], subInt(-1, index_3154122356));
    s_3154122250.counter = addInt(s_3154122250.counter, 1);
    }
    

  
}

function del_3154123713(t_3154123716, key_3154123717) {
    var hc_3154123718 = [0];
    var i_3154123725 = rawGet_3154118273(t_3154123716, key_3154123717, hc_3154123718, 0);
    var mskHEX60gensym36_3154123729 = (t_3154123716.data).length - 1;
    if ((0 <= i_3154123725)) {
    t_3154123716.counter = subInt(t_3154123716.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3154123736 = i_3154123725;
            var rHEX60gensym36_3154123737 = jHEX60gensym36_3154123736;
            t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)].Field0 = 0;
            t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3154123725 = (addInt(i_3154123725, 1) & mskHEX60gensym36_3154123729);
                  if (isEmpty_1308622877(t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3154123737 = (t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)].Field0 & mskHEX60gensym36_3154123729);
                  if (!(((((rHEX60gensym36_3154123737 <= i_3154123725) && (jHEX60gensym36_3154123736 < rHEX60gensym36_3154123737)) || ((jHEX60gensym36_3154123736 < rHEX60gensym36_3154123737) && (i_3154123725 < jHEX60gensym36_3154123736))) || ((i_3154123725 < jHEX60gensym36_3154123736) && (rHEX60gensym36_3154123737 <= i_3154123725))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3154123716.data[chckIndx(jHEX60gensym36_3154123736, 0, (t_3154123716.data).length - 1)] = nimCopy(t_3154123716.data[chckIndx(jHEX60gensym36_3154123736, 0, (t_3154123716.data).length - 1)], t_3154123716.data[chckIndx(i_3154123725, 0, (t_3154123716.data).length - 1)], NTI3154116681);
          }
      };
    };
    }
    

  
}

function resize_3154122058(cache_3154122061) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3154122061.capacity < len_3154122140(cache_3154122061))) break Label2;
          var t_3154122228 = cache_3154122061.list.tail;
          if (cache_3154122061.recordRemovedKeys) {
          incl_3154122248(cache_3154122061.removedKeys, t_3154122228.value.key);
          }
          
          del_3154123713(cache_3154122061.table, t_3154122228.value.key);
          remove_3154118873(cache_3154122061.list, t_3154122228);
        }
    };

  
}

function addNewNode_3154119546(cache_3154119549, key_3154119550, val_3154119551) {
    var node_3154119572 = newDoublyLinkedNode_3154119554({key: nimCopy(null, key_3154119550, NTI33554449), val: nimCopy(null, val_3154119551, NTI33554449)});
    HEX5BHEX5DHEX3D_3154119636(cache_3154119549.table, key_3154119550, node_3154119572);
    prepend_3154119117(cache_3154119549.list, node_3154119572);
    if (cache_3154119549.recordRemovedKeys) {
    excl_3154121141(cache_3154119549.removedKeys, key_3154119550);
    }
    
    resize_3154122058(cache_3154119549);

  
}

function HEX5BHEX5DHEX3D_3154119331(cache_3154119334, key_3154119335, val_3154119336) {
    var node_3154119519 = getOrDefault_3154119426(cache_3154119334.table, key_3154119335, null);
    if ((node_3154119519 == null)) {
    addNewNode_3154119546(cache_3154119334, key_3154119335, val_3154119336);
    }
    else {
      node_3154119519.value.val = nimCopy(null, val_3154119336, NTI33554449);
      remove_3154118873(cache_3154119334.list, node_3154119519);
      prepend_3154119117(cache_3154119334.list, node_3154119519);
    }
    

  
}

function renderWidget_3154118081(self_3154118082, renderer_3154118083, forceRedraw_3154118084, frameIndex_3154118085, buffer_3154118086, buffer_3154118086_Idx) {
    var Temporary1;
    var Temporary2;

  BeforeRet: {
    if (((((self_3154118082.lastHierarchyChange < frameIndex_3154118085) && (self_3154118082.lastBoundsChange < frameIndex_3154118085)) && (self_3154118082.lastInvalidation < frameIndex_3154118085)) && !(forceRedraw_3154118084))) {
    break BeforeRet;
    }
    
    var relBounds_3154118093 = HEX2D_2063597733(self_3154118082.lastBounds, xy_2080374820(renderer_3154118083.boundsStack[chckIndx((renderer_3154118083.boundsStack).length - 1, 0, (renderer_3154118083.boundsStack).length - 1)]));
    if (self_3154118082.fillBackground) {
    var fmtRes_3154118098 = [mnewString(0)];
    fmtRes_3154118098[0].push.apply(fmtRes_3154118098[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3154118098, 0, toHtmlHex_2348810680(self_3154118082.backgroundColor), []);
    fmtRes_3154118098[0].push.apply(fmtRes_3154118098[0], [59]);;
    Temporary1 = fmtRes_3154118098[0];
    }
    else {
    Temporary1 = [];
    }
    
    var backgroundColor_3154118099 = nimCopy(null, Temporary1, NTI33554449);
    var color_3154118100 = toHtmlHex_2348810680(self_3154118082.foregroundColor);
    if (contains_3154118166(renderer_3154118083.escapedText, self_3154118082.text)) {
    Temporary2 = HEX5BHEX5D_3154118671(renderer_3154118083.escapedText, self_3154118082.text);
    }
    else {
      var escapedText_3154119267 = multiReplace_855639929(self_3154118082.text, [{Field0: [38], Field1: [38,97,109,112,59]}, {Field0: [60], Field1: [38,108,116,59]}, {Field0: [62], Field1: [38,103,116,59]}, {Field0: [34], Field1: [38,113,117,111,116,59]}, {Field0: [39], Field1: [38,35,48,51,57,59]}]);
      HEX5BHEX5DHEX3D_3154119331(renderer_3154118083.escapedText, self_3154118082.text, escapedText_3154119267);
    Temporary2 = escapedText_3154119267;
    }
    
    var text_3154124508 = nimCopy(null, Temporary2, NTI33554449);
    buffer_3154118086[buffer_3154118086_Idx].push.apply(buffer_3154118086[buffer_3154118086_Idx], [60,115,112,97,110,32,115,116,121,108,101,61,34]);;
    var fmtRes_3154124513 = [mnewString(0)];
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3154124513, 0, ((relBounds_3154118093.x) | 0), []);
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3154124513, 0, ((relBounds_3154118093.y) | 0), []);
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154124513, 0, ((relBounds_3154118093.w) | 0), []);
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154124513, 0, ((relBounds_3154118093.h) | 0), []);
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [112,120,59,32,111,118,101,114,102,108,111,119,58,32,118,105,115,105,98,108,101,59,32,99,111,108,111,114,58,32]);;
    formatValue_721420459(fmtRes_3154124513, 0, color_3154118100, []);
    fmtRes_3154124513[0].push.apply(fmtRes_3154124513[0], [59,32]);;
    formatValue_721420459(fmtRes_3154124513, 0, backgroundColor_3154118099, []);
    buffer_3154118086[buffer_3154118086_Idx].push.apply(buffer_3154118086[buffer_3154118086_Idx], fmtRes_3154124513[0]);;
    buffer_3154118086[buffer_3154118086_Idx].push.apply(buffer_3154118086[buffer_3154118086_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    buffer_3154118086[buffer_3154118086_Idx].push.apply(buffer_3154118086[buffer_3154118086_Idx], text_3154124508);;
    buffer_3154118086[buffer_3154118086_Idx].push.apply(buffer_3154118086[buffer_3154118086_Idx], [60,47,115,112,97,110,62]);;
    self_3154118082.lastRenderedText = nimCopy(null, self_3154118082.text, NTI33554449);
  };

  
}

function renderWidget_3154118026(self_3154118027, renderer_3154118028, forceRedraw_3154118029, frameIndex_3154118030, buffer_3154118031, buffer_3154118031_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3154118027.lastHierarchyChange < frameIndex_3154118030) && (self_3154118027.lastBoundsChange < frameIndex_3154118030)) && (self_3154118027.lastInvalidation < frameIndex_3154118030)) && !(forceRedraw_3154118029))) {
    break BeforeRet;
    }
    
    var relBounds_3154118038 = HEX2D_2063597733(self_3154118027.lastBounds, xy_2080374820(renderer_3154118028.boundsStack[chckIndx((renderer_3154118028.boundsStack).length - 1, 0, (renderer_3154118028.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3154118027.lastBounds, NTI2080374789);
    renderer_3154118028.boundsStack.push(Temporary1);;
    try {
    if (self_3154118027.fillBackground) {
    var fmtRes_3154118050 = [mnewString(0)];
    fmtRes_3154118050[0].push.apply(fmtRes_3154118050[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3154118050, 0, toHtmlHex_2348810680(self_3154118027.backgroundColor), []);
    fmtRes_3154118050[0].push.apply(fmtRes_3154118050[0], [59]);;
    Temporary3 = fmtRes_3154118050[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3154118051 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3154118031[buffer_3154118031_Idx].push.apply(buffer_3154118031[buffer_3154118031_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3154118056 = [mnewString(0)];
    fmtRes_3154118056[0].push.apply(fmtRes_3154118056[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3154118056, 0, ((relBounds_3154118038.x) | 0), []);
    fmtRes_3154118056[0].push.apply(fmtRes_3154118056[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3154118056, 0, ((relBounds_3154118038.y) | 0), []);
    fmtRes_3154118056[0].push.apply(fmtRes_3154118056[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3154118056, 0, ((relBounds_3154118038.w) | 0), []);
    fmtRes_3154118056[0].push.apply(fmtRes_3154118056[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3154118056, 0, ((relBounds_3154118038.h) | 0), []);
    fmtRes_3154118056[0].push.apply(fmtRes_3154118056[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3154118056, 0, backgroundColor_3154118051, []);
    buffer_3154118031[buffer_3154118031_Idx].push.apply(buffer_3154118031[buffer_3154118031_Idx], fmtRes_3154118056[0]);;
    buffer_3154118031[buffer_3154118031_Idx].push.apply(buffer_3154118031[buffer_3154118031_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3154118080 = null;
      var i_536872511 = 0;
      var L_536872512 = (self_3154118027.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872511 < L_536872512)) break Label6;
            c_3154118080 = self_3154118027.children[chckIndx(i_536872511, 0, (self_3154118027.children).length - 1)];
            renderWidget_3154117830(c_3154118080, renderer_3154118028, (forceRedraw_3154118029 || self_3154118027.fillBackground), frameIndex_3154118030, buffer_3154118031, buffer_3154118031_Idx);
            i_536872511 = addInt(i_536872511, 1);
            if (!(((self_3154118027.children).length == L_536872512))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3154118031[buffer_3154118031_Idx].push.apply(buffer_3154118031[buffer_3154118031_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3154117839(renderer_3154118028, "boundsStack");
    }
  };

  
}

function renderWidget_3154117824(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx) {
  
}

function renderWidget_3154117830(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx) {
    chckNilDisp(self_3154117825);
    if (isObj(self_3154117825.m_type, NTI2332033036)) {
    renderWidget_3154117852(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    else {
    if (isObj(self_3154117825.m_type, NTI2332033040)) {
    renderWidget_3154117971(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    else {
    if (isObj(self_3154117825.m_type, NTI2332033038)) {
    renderWidget_3154117916(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    else {
    if (isObj(self_3154117825.m_type, NTI2332033044)) {
    renderWidget_3154118081(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    else {
    if (isObj(self_3154117825.m_type, NTI2332033042)) {
    renderWidget_3154118026(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    else {
    if (isObj(self_3154117825.m_type, NTI2332033034)) {
    renderWidget_3154117824(self_3154117825, renderer_3154117826, forceRedraw_3154117827, frameIndex_3154117828, buffer_3154117829, buffer_3154117829_Idx);
    }
    }}}}}

  
}

function render_3154117831(self_3154117832, widget_3154117833, frameIndex_3154117834) {
    self_3154117832.boundsStack.push(rect_2080374808(vec2_2097152926(), size_2315255913(self_3154117832)));;
    try {
    self_3154117832.redrawEverything = true;
    var buffer_3154117851 = [[]];
    renderWidget_3154117830(widget_3154117833, self_3154117832, self_3154117832.redrawEverything, frameIndex_3154117834, buffer_3154117851, 0);
    self_3154117832.content.innerHTML = toJSStr(buffer_3154117851[0]);
    } finally {
    var _ = pop_3154117839(self_3154117832, "boundsStack");
    }

  
}

function render_2315255900(self_2315255901, widget_2315255902, frameIndex_2315255903) {
  
}

function render_2315255904(self_2315255901, widget_2315255902, frameIndex_2315255903) {
    chckNilDisp(self_2315255901);
    if (isObj(self_2315255901.m_type, NTI3154116614)) {
    render_3154117831(self_2315255901, widget_2315255902, frameIndex_2315255903);
    }
    else {
    if (isObj(self_2315255901.m_type, NTI2315255812)) {
    render_2315255900(self_2315255901, widget_2315255902, frameIndex_2315255903);
    }
    }

  
}

function sizeChanged_2315255905(self_2315255906) {
  var result_2315255907 = false;

  return result_2315255907;

}

function sizeChanged_2315255908(self_2315255906) {
  var result_2315255909 = false;

  BeforeRet: {
    result_2315255909 = sizeChanged_2315255905(self_2315255906);
    break BeforeRet;
  };

  return result_2315255909;

}

function initDoublyLinkedList_3154116755() {
  var result_3154116757 = ({head: null, tail: null});

  return result_3154116757;

}

function initTable_3154116761(initialSize_3154116764) {
  var result_3154116765 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3154116767 = slotsNeeded_1308622891(chckRange(initialSize_3154116764, 0, 2147483647));
    result_3154116765.counter = 0;
    result_3154116765.data = new Array(chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647) ; ++i) { result_3154116765.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3154116765;

}

function newLruCache_3154116745(capacity_3154116748, recordRemovedKeys_3154116749) {
  var result_3154116750 = null;

    result_3154116750 = {capacity: capacity_3154116748, list: initDoublyLinkedList_3154116755(), table: initTable_3154116761(correctSize_2902458389(capacity_3154116748)), recordRemovedKeys: recordRemovedKeys_3154116749, removedKeys: ({data: [], counter: 0})};

  return result_3154116750;

}

function getModifiers_3154116685(self_3154116686) {
  var result_3154116687 = {};

    if (self_3154116686.altKey) {
    result_3154116687[2] = true;
    }
    
    if (self_3154116686.shiftKey) {
    result_3154116687[1] = true;
    }
    
    if (self_3154116686.ctrlKey) {
    result_3154116687[0] = true;
    }
    

  return result_3154116687;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3154116679(key_3154116680, code_3154116681, keyCode_3154116682) {
  var result_3154117820 = 0;

    switch (key_3154116680) {
    case "Enter":
      result_3154117820 = -1;
      break;
    case "Escape":
      result_3154117820 = -2;
      break;
    case "Backspace":
      result_3154117820 = -3;
      break;
    case " ":
      result_3154117820 = -4;
      break;
    case "Delete":
      result_3154117820 = -5;
      break;
    case "Tab":
      result_3154117820 = -6;
      break;
    case "ArrowLeft":
      result_3154117820 = -7;
      break;
    case "ArrowRight":
      result_3154117820 = -8;
      break;
    case "ArrowUp":
      result_3154117820 = -9;
      break;
    case "ArrowDown":
      result_3154117820 = -10;
      break;
    case "Home":
      result_3154117820 = -11;
      break;
    case "End":
      result_3154117820 = -12;
      break;
    case "PageUp":
      result_3154117820 = -13;
      break;
    case "PageDown":
      result_3154117820 = -14;
      break;
    default: 
      if (      keyCode_3154116682 >= 112 && keyCode_3154116682 <= 123      ){        result_3154117820 = addInt(-20, subInt(keyCode_3154116682, 112));
        }
      else{
        if ((((key_3154116680) == null ? 0 : (key_3154116680).length) == 1)) {
        result_3154117820 = runeAt_788536179(cstrToNimstr(key_3154116680), 0);
        }
        
        }
      break;
    }

  return result_3154117820;

}

function invoke_3154117046(event_3154117048, arg_3154117049) {
    Label1: {
      var h_3154117072 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872516 = 0;
      var L_536872517 = (event_3154117048.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872516 < L_536872517)) break Label3;
            h_3154117072 = event_3154117048.handlers[chckIndx(i_536872516, 0, (event_3154117048.handlers).length - 1)];
            h_3154117072.Field1(arg_3154117049);
            i_536872516 = addInt(i_536872516, 1);
            if (!(((event_3154117048.handlers).length == L_536872517))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3154116700(self_3154116701) {
  var result_3154116702 = {};

    if (self_3154116701.altKey) {
    result_3154116702[2] = true;
    }
    
    if (self_3154116701.shiftKey) {
    result_3154116702[1] = true;
    }
    
    if (self_3154116701.ctrlKey) {
    result_3154116702[0] = true;
    }
    

  return result_3154116702;

}

function invoke_3154117463(event_3154117465, arg_3154117466) {
    Label1: {
      var h_3154117489 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872521 = 0;
      var L_536872522 = (event_3154117465.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872521 < L_536872522)) break Label3;
            h_3154117489 = event_3154117465.handlers[chckIndx(i_536872521, 0, (event_3154117465.handlers).length - 1)];
            h_3154117489.Field1(arg_3154117466);
            i_536872521 = addInt(i_536872521, 1);
            if (!(((event_3154117465.handlers).length == L_536872522))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3154117150(aHEX60gensym155_3154117152, bHEX60gensym155_3154117153) {
  var result_3154117154 = ({arr: new Float32Array(2)});

    result_3154117154 = nimCopy(result_3154117154, {arr: new Float32Array([(aHEX60gensym155_3154117152.arr[0] * bHEX60gensym155_3154117153), (aHEX60gensym155_3154117152.arr[1] * bHEX60gensym155_3154117153)])}, NTI2097152387);

  return result_3154117154;

}

function getMouseButton_3154116731(event_3154116732) {
    var Temporary1;

  var result_3154116733 = 0;

    if (    event_3154116732.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3154116732.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3154116732.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3154116733 = Temporary1;

  return result_3154116733;

}

function invoke_3154117558(event_3154117560, arg_3154117561) {
    Label1: {
      var h_3154117584 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872526 = 0;
      var L_536872527 = (event_3154117560.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872526 < L_536872527)) break Label3;
            h_3154117584 = event_3154117560.handlers[chckIndx(i_536872526, 0, (event_3154117560.handlers).length - 1)];
            h_3154117584.Field1(arg_3154117561);
            i_536872526 = addInt(i_536872526, 1);
            if (!(((event_3154117560.handlers).length == L_536872527))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3154117631(event_3154117633, arg_3154117634) {
    Label1: {
      var h_3154117657 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872531 = 0;
      var L_536872532 = (event_3154117633.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872531 < L_536872532)) break Label3;
            h_3154117657 = event_3154117633.handlers[chckIndx(i_536872531, 0, (event_3154117633.handlers).length - 1)];
            h_3154117657.Field1(arg_3154117634);
            i_536872531 = addInt(i_536872531, 1);
            if (!(((event_3154117633.handlers).length == L_536872532))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3154116715(event_3154116716) {
  var result_3154116717 = {};

    var buttons_3154116718 = event_3154116716.buttons;
    if (!(((buttons_3154116718 & 1) == 0))) {
    result_3154116717[0] = true;
    }
    
    if (!(((buttons_3154116718 & 2) == 0))) {
    result_3154116717[2] = true;
    }
    
    if (!(((buttons_3154116718 & 4) == 0))) {
    result_3154116717[1] = true;
    }
    

  return result_3154116717;

}

function init_3154116743(self_3154116744) {
    
function HEX3Aanonymous_3154116808(text_3154116809) {
      var result_3154116810 = ({arr: new Float32Array(2)});

        result_3154116810.arr[chckIndx(0, 0, (result_3154116810.arr).length - 1)] = ((text_3154116809).length * self_3154116744.mCharWidth);
        result_3154116810.arr[chckIndx(1, 0, (result_3154116810.arr).length - 1)] = totalLineHeight_2315255960(self_3154116744);

      return result_3154116810;

    }
    
function HEX3Aanonymous_3154116948(e_3154116949) {
        invoke_3154116972(self_3154116744.onResized, true);

      
    }
    
function HEX3Aanonymous_3154117019(e_3154117020) {
        var ke_3154117021 = e_3154117020;
        var modifiers_3154117022 = getModifiers_3154116685(ke_3154117021);
        var input_3154117023 = toInput_3154116679(ke_3154117021.key, ke_3154117021.code, ke_3154117021.keyCode);
        invoke_3154117046(self_3154116744.onKeyPress, {Field0: input_3154117023, Field1: nimCopy(null, modifiers_3154117022, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3154117111(e_3154117112) {
        var we_3154117113 = e_3154117112;
        var modifiers_3154117114 = getModifiers_3154116700(we_3154117113);
        invoke_3154117463(self_3154116744.onScroll, {Field0: vec2_2097152992(we_3154117113.clientX, we_3154117113.clientY), Field1: HEX2A_3154117150(vec2_2097152992(we_3154117113.deltaX, -(we_3154117113.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3154117114, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3154117528(e_3154117529) {
        var me_3154117530 = e_3154117529;
        var modifiers_3154117531 = getModifiers_3154116700(me_3154117530);
        var mouseButton_3154117532 = getMouseButton_3154116731(me_3154117530);
        var currentTargetRect_3154117533 = me_3154117530.currentTarget.getBoundingClientRect();
        var x_3154117534 = (me_3154117530.pageX - currentTargetRect_3154117533.x);
        var y_3154117535 = (me_3154117530.pageY - currentTargetRect_3154117533.y);
        invoke_3154117558(self_3154116744.onMousePress, {Field0: mouseButton_3154117532, Field1: nimCopy(null, modifiers_3154117531, NTI2013265950), Field2: vec2_2097152992(x_3154117534, y_3154117535)});

      
    }
    
function HEX3Aanonymous_3154117605(e_3154117606) {
        var me_3154117607 = e_3154117606;
        var modifiers_3154117608 = getModifiers_3154116700(me_3154117607);
        invoke_3154117631(self_3154116744.onMouseMove, {Field0: vec2_2097152992(me_3154117607.clientX, me_3154117607.clientY), Field1: vec2_2097152992(me_3154117607.movementX, me_3154117607.movementY), Field2: nimCopy(null, modifiers_3154117608, NTI2013265950), Field3: getMouseButtons_3154116715(me_3154117607)});

      
    }

    self_3154116744.mFontSize = 18.0;
    self_3154116744.mLineHeight = 20.0;
    self_3154116744.mLineDistance = 2.0;
    self_3154116744.mCharWidth = 18.0;
    self_3154116744.escapedText = newLruCache_3154116745(1000, false);
    self_3154116744.layoutOptions.getTextBounds = HEX3Aanonymous_3154116808;
    window.addEventListener("resize", HEX3Aanonymous_3154116948, false);
    self_3154116744.content = document.getElementById("view");
    self_3154116744.content.addEventListener("keydown", HEX3Aanonymous_3154117019, false);
    self_3154116744.content.addEventListener("wheel", HEX3Aanonymous_3154117111, {passive: true, capture: false, once: false});
    self_3154116744.content.addEventListener("mousedown", HEX3Aanonymous_3154117528, false);
    self_3154116744.content.addEventListener("mousemove", HEX3Aanonymous_3154117605, false);
    updateFontSettings_3154116683(self_3154116744);
    self_3154116744.content.focus();

  
}

function init_2315255915(self_2315255916) {
  
}

function init_2315255917(self_2315255916) {
    chckNilDisp(self_2315255916);
    if (isObj(self_2315255916.m_type, NTI3154116614)) {
    init_3154116743(self_2315255916);
    }
    else {
    if (isObj(self_2315255916.m_type, NTI2315255812)) {
    init_2315255915(self_2315255916);
    }
    }

  
}

function deinit_3154117743(self_3154117744) {
  
}

function deinit_2315255918(self_2315255919) {
  
}

function deinit_2315255920(self_2315255919) {
    chckNilDisp(self_2315255919);
    if (isObj(self_2315255919.m_type, NTI3154116614)) {
    deinit_3154117743(self_2315255919);
    }
    else {
    if (isObj(self_2315255919.m_type, NTI2315255812)) {
    deinit_2315255918(self_2315255919);
    }
    }

  
}

function processEvents_3154117821(self_3154117822) {
  var result_3154117823 = 0;

    result_3154117823 = 0;

  return result_3154117823;

}

function processEvents_2315255921(self_2315255922) {
  var result_2315255923 = 0;

  return result_2315255923;

}

function processEvents_2315255924(self_2315255922) {
  var result_2315255925 = 0;

  BeforeRet: {
    chckNilDisp(self_2315255922);
    if (isObj(self_2315255922.m_type, NTI3154116614)) {
    result_2315255925 = processEvents_3154117821(self_2315255922);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255922.m_type, NTI2315255812)) {
    result_2315255925 = processEvents_2315255921(self_2315255922);
    break BeforeRet;
    }
    }
  };

  return result_2315255925;

}

function fontSizeHEX3D_2315255926(self_2315255927, fontSize_2315255928) {
  
}

function fontSizeHEX3D_2315255929(self_2315255927, fontSize_2315255928) {
    fontSizeHEX3D_2315255926(self_2315255927, fontSize_2315255928);

  
}

function lineDistanceHEX3D_2315255930(self_2315255931, lineDistance_2315255932) {
  
}

function lineDistanceHEX3D_2315255933(self_2315255931, lineDistance_2315255932) {
    lineDistanceHEX3D_2315255930(self_2315255931, lineDistance_2315255932);

  
}

function fontSize_3154117804(self_3154117805) {
  var result_3154117806 = 0.0;

    updateFontSettings_3154116683(self_3154117805);
    result_3154117806 = self_3154117805.mFontSize;

  return result_3154117806;

}

function fontSize_2315255934(self_2315255935) {
  var result_2315255936 = 0.0;

  return result_2315255936;

}

function fontSize_2315255937(self_2315255935) {
  var result_2315255938 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255935);
    if (isObj(self_2315255935.m_type, NTI3154116614)) {
    result_2315255938 = fontSize_3154117804(self_2315255935);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255935.m_type, NTI2315255812)) {
    result_2315255938 = fontSize_2315255934(self_2315255935);
    break BeforeRet;
    }
    }
  };

  return result_2315255938;

}

function lineDistance_3154117807(self_3154117808) {
  var result_3154117809 = 0.0;

    updateFontSettings_3154116683(self_3154117808);
    result_3154117809 = self_3154117808.mLineDistance;

  return result_3154117809;

}

function lineDistance_2315255939(self_2315255940) {
  var result_2315255941 = 0.0;

  return result_2315255941;

}

function lineDistance_2315255942(self_2315255940) {
  var result_2315255943 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255940);
    if (isObj(self_2315255940.m_type, NTI3154116614)) {
    result_2315255943 = lineDistance_3154117807(self_2315255940);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255940.m_type, NTI2315255812)) {
    result_2315255943 = lineDistance_2315255939(self_2315255940);
    break BeforeRet;
    }
    }
  };

  return result_2315255943;

}

function lineHeight_3154117810(self_3154117811) {
  var result_3154117812 = 0.0;

    updateFontSettings_3154116683(self_3154117811);
    result_3154117812 = self_3154117811.mLineHeight;

  return result_3154117812;

}

function lineHeight_2315255944(self_2315255945) {
  var result_2315255946 = 0.0;

  return result_2315255946;

}

function lineHeight_2315255947(self_2315255945) {
  var result_2315255948 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255945);
    if (isObj(self_2315255945.m_type, NTI3154116614)) {
    result_2315255948 = lineHeight_3154117810(self_2315255945);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255945.m_type, NTI2315255812)) {
    result_2315255948 = lineHeight_2315255944(self_2315255945);
    break BeforeRet;
    }
    }
  };

  return result_2315255948;

}

function measureText_2315255954(self_2315255955, text_2315255956) {
  var result_2315255957 = ({arr: new Float32Array(2)});

  return result_2315255957;

}

function measureText_2315255958(self_2315255955, text_2315255956) {
  var result_2315255959 = ({arr: new Float32Array(2)});

  BeforeRet: {
    result_2315255959 = nimCopy(result_2315255959, measureText_2315255954(self_2315255955, text_2315255956), NTI2097152387);
    break BeforeRet;
  };

  return result_2315255959;

}

function init_2634022941(self_2634022942, path_2634022943) {
    loadScript("config.js");
    var fmtRes_2634022949 = [mnewString(0)];
    fmtRes_2634022949[0].push.apply(fmtRes_2634022949[0], [108,111,97,100,32,115,99,114,105,112,116,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2634022949, 0, path_2634022943, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2634022949[0], NTI33554449)]);

  
}

function init_2617245705(self_2617245706, path_2617245707) {
  
}

function init_2617245708(self_2617245706, path_2617245707) {
    chckNilDisp(self_2617245706);
    if (isObj(self_2617245706.m_type, NTI2634022916)) {
    init_2634022941(self_2617245706, path_2617245707);
    }
    else {
    if (isObj(self_2617245706.m_type, NTI2617245700)) {
    init_2617245705(self_2617245706, path_2617245707);
    }
    }

  
}

function reload_2634022950(self_2634022951) {
  
}

function reload_2617245709(self_2617245710) {
  
}

function reload_2617245711(self_2617245710) {
    chckNilDisp(self_2617245710);
    if (isObj(self_2617245710.m_type, NTI2634022916)) {
    reload_2634022950(self_2617245710);
    }
    else {
    if (isObj(self_2617245710.m_type, NTI2617245700)) {
    reload_2617245709(self_2617245710);
    }
    }

  
}

function mustRehash_1291846236(t_1291846238) {
  var result_1291846239 = false;

    if (!((t_1291846238.counter < (t_1291846238.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846239 = ((mulInt((t_1291846238.data).length, 2) < mulInt(t_1291846238.counter, 3)) || (subInt((t_1291846238.data).length, t_1291846238.counter) < 4));

  return result_1291846239;

}

function rawInsert_1291846685(t_1291846689, data_1291846690, data_1291846690_Idx, key_1291846691, val_1291846692, hc_1291846693, h_1291846694) {
    data_1291846690[data_1291846690_Idx][chckIndx(h_1291846694, 0, (data_1291846690[data_1291846690_Idx]).length - 1)].Field1 = key_1291846691;
    data_1291846690[data_1291846690_Idx][chckIndx(h_1291846694, 0, (data_1291846690[data_1291846690_Idx]).length - 1)].Field2 = val_1291846692;
    data_1291846690[data_1291846690_Idx][chckIndx(h_1291846694, 0, (data_1291846690[data_1291846690_Idx]).length - 1)].Field0 = hc_1291846693;

  
}

function enlarge_1291846391(t_1291846394) {
    var n_1291846397 = [];
    n_1291846397 = new Array(chckRange(mulInt((t_1291846394.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846394.data).length, 2), 0, 2147483647) ; ++i) { n_1291846397[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846394.data; t_1291846394.data = n_1291846397; n_1291846397 = Temporary1;    Label2: {
      var i_1291846461 = 0;
      var colontmp__536872538 = 0;
      colontmp__536872538 = (n_1291846397).length - 1;
      var res_536872539 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872539 <= colontmp__536872538)) break Label4;
            i_1291846461 = res_536872539;
            var eh_1291846515 = n_1291846397[chckIndx(i_1291846461, 0, (n_1291846397).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846515)) {
            var j_1291846519 = (eh_1291846515 & (t_1291846394.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846394.data[chckIndx(j_1291846519, 0, (t_1291846394.data).length - 1)].Field0)) break Label6;
                  j_1291846519 = nextTry_1308622883(j_1291846519, (t_1291846394.data).length - 1);
                }
            };
            rawInsert_1291846685(t_1291846394, t_1291846394, "data", n_1291846397[chckIndx(i_1291846461, 0, (n_1291846397).length - 1)].Field1, n_1291846397[chckIndx(i_1291846461, 0, (n_1291846397).length - 1)].Field2, eh_1291846515, j_1291846519);
            }
            
            res_536872539 = addInt(res_536872539, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846854(t_1291846857, key_1291846858, hc_1291846859) {
  var result_1291846860 = 0;

  BeforeRet: {
    if (((t_1291846857.data).length == 0)) {
    result_1291846860 = -1;
    break BeforeRet;
    }
    
    var h_1291846911 = (hc_1291846859 & (t_1291846857.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846857.data[chckIndx(h_1291846911, 0, (t_1291846857.data).length - 1)].Field0)) break Label2;
          if (((t_1291846857.data[chckIndx(h_1291846911, 0, (t_1291846857.data).length - 1)].Field0 == hc_1291846859) && (t_1291846857.data[chckIndx(h_1291846911, 0, (t_1291846857.data).length - 1)].Field1 == key_1291846858))) {
          result_1291846860 = h_1291846911;
          break BeforeRet;
          }
          
          h_1291846911 = nextTry_1308622883(h_1291846911, (t_1291846857.data).length - 1);
        }
    };
    result_1291846860 = subInt(-1, h_1291846911);
  };

  return result_1291846860;

}

function HEX5BHEX5DHEX3D_1291845827(t_1291845830, key_1291845831, val_1291845832) {
    if (((t_1291845830.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845882 = slotsNeeded_1308622891(32);
    t_1291845830.counter = 0;
    t_1291845830.data = new Array(chckRange(correctSizeHEX60gensym1_1291845882, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845882, 0, 2147483647) ; ++i) { t_1291845830.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845887 = [0];
    var index_1291846129 = rawGet_1291845888(t_1291845830, key_1291845831, hc_1291845887, 0);
    if ((0 <= index_1291846129)) {
    t_1291845830.data[chckIndx(index_1291846129, 0, (t_1291845830.data).length - 1)].Field2 = val_1291845832;
    }
    else {
      if (((t_1291845830.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846231 = slotsNeeded_1308622891(32);
      t_1291845830.counter = 0;
      t_1291845830.data = new Array(chckRange(correctSizeHEX60gensym6_1291846231, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846231, 0, 2147483647) ; ++i) { t_1291845830.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846236(t_1291845830)) {
      enlarge_1291846391(t_1291845830);
      index_1291846129 = rawGetKnownHC_1291846854(t_1291845830, key_1291845831, hc_1291845887[0]);
      }
      
      index_1291846129 = subInt(-1, index_1291846129);
      rawInsert_1291846685(t_1291845830, t_1291845830, "data", key_1291845831, val_1291845832, hc_1291845887[0], index_1291846129);
      t_1291845830.counter = addInt(t_1291845830.counter, 1);
    }
    

  
}

function registerEditor_1291845784(self_1291845785, editor_1291845786) {
    HEX5BHEX5DHEX3D_1291845827(self_1291845785.editors, editor_1291845786.id, editor_1291845786);
    invoke_1291847114(self_1291845785.onEditorRegistered, editor_1291845786);

  
}

function handleInput_2818590379(self_2818590380, input_2818590381) {
  var result_2818590382 = 0;

  BeforeRet: {
    result_2818590382 = 1;
    break BeforeRet;
  };

  return result_2818590382;

}

function injectDependencies_2818591113(self_2818591114, ed_2818591115) {
      
function HEX3Aanonymous_2818591135(actionHEX60gensym1155HEX60gensym1156_2818591136, argHEX60gensym1155HEX60gensym1156_2818591137) {
        var result_2818591138 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1155_2818591123.config.handleActions) {
          var action_2818591139 = nimCopy(null, actionHEX60gensym1155HEX60gensym1156_2818591136, NTI33554449);
          var arg_2818591140 = nimCopy(null, argHEX60gensym1155HEX60gensym1156_2818591137, NTI33554449);
          var responseHEX60gensym1155HEX60gensym1156_2818591141 = handleAction_2818589127(self_2818591114, action_2818591139, arg_2818591140);
          if (handlerHEX60gensym1155_2818591123.config.consumeAllActions) {
          result_2818591138 = 3;
          break BeforeRet;
          }
          
          result_2818591138 = responseHEX60gensym1155HEX60gensym1156_2818591141;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1155_2818591123.config.consumeAllActions) {
          result_2818591138 = 3;
          break BeforeRet;
          }
          else {
            result_2818591138 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818591138;

      }
      
function HEX3Aanonymous_2818591143(inputHEX60gensym1155HEX60gensym1157_2818591144) {
        var result_2818591145 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1155_2818591123.config.handleInputs) {
          var input_2818591146 = nimCopy(null, inputHEX60gensym1155HEX60gensym1157_2818591144, NTI33554449);
          result_2818591145 = handleInput_2818590379(self_2818591114, input_2818591146);
          break BeforeRet;
          }
          else {
            result_2818591145 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818591145;

      }
      
function HEX3Aanonymous_2818591166(actionHEX60gensym1158HEX60gensym1159_2818591167, argHEX60gensym1158HEX60gensym1159_2818591168) {
        var result_2818591169 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1158_2818591154.config.handleActions) {
          var action_2818591170 = nimCopy(null, actionHEX60gensym1158HEX60gensym1159_2818591167, NTI33554449);
          var arg_2818591171 = nimCopy(null, argHEX60gensym1158HEX60gensym1159_2818591168, NTI33554449);
          var responseHEX60gensym1158HEX60gensym1159_2818591172 = handleAction_2818589127(self_2818591114, action_2818591170, arg_2818591171);
          if (handlerHEX60gensym1158_2818591154.config.consumeAllActions) {
          result_2818591169 = 3;
          break BeforeRet;
          }
          
          result_2818591169 = responseHEX60gensym1158HEX60gensym1159_2818591172;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1158_2818591154.config.consumeAllActions) {
          result_2818591169 = 3;
          break BeforeRet;
          }
          else {
            result_2818591169 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818591169;

      }
      
function HEX3Aanonymous_2818591174(inputHEX60gensym1158HEX60gensym1160_2818591175) {
        var result_2818591176 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1158_2818591154.config.handleInputs) {
          var input_2818591177 = nimCopy(null, inputHEX60gensym1158HEX60gensym1160_2818591175, NTI33554449);
          result_2818591176 = 1;
          break BeforeRet;
          }
          else {
            result_2818591176 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818591176;

      }

    self_2818591114.editor = ed_2818591115;
    registerEditor_1291845784(self_2818591114.editor, self_2818591114);
    Label1: {
      var handlerHEX60gensym1155_2818591123 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1155_2818591123.config = getEventHandlerConfig_1291849111(ed_2818591115, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1155_2818591123.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(ed_2818591115, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1155_2818591123.handleAction = HEX3Aanonymous_2818591135;
      handlerHEX60gensym1155_2818591123.handleInput = HEX3Aanonymous_2818591143;
    };
    self_2818591114.eventHandler = handlerHEX60gensym1155_2818591123;
    Label2: {
      var handlerHEX60gensym1158_2818591154 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1158_2818591154.config = getEventHandlerConfig_1291849111(ed_2818591115, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1158_2818591154.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(ed_2818591115, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1158_2818591154.handleAction = HEX3Aanonymous_2818591166;
      handlerHEX60gensym1158_2818591154.handleInput = HEX3Aanonymous_2818591174;
    };
    self_2818591114.textEditEventHandler = handlerHEX60gensym1158_2818591154;

  
}

function injectDependencies_2650816286(self_2650816287, ed_2650816288) {
      
function HEX3Aanonymous_2650816309(actionHEX60gensym978HEX60gensym979_2650816310, argHEX60gensym978HEX60gensym979_2650816311) {
        var result_2650816312 = 0;

        BeforeRet: {
          if (handlerHEX60gensym978_2650816297.config.handleActions) {
          var action_2650816313 = nimCopy(null, actionHEX60gensym978HEX60gensym979_2650816310, NTI33554449);
          var arg_2650816314 = nimCopy(null, argHEX60gensym978HEX60gensym979_2650816311, NTI33554449);
          var responseHEX60gensym978HEX60gensym979_2650816315 = handleAction_2650800474(self_2650816287, action_2650816313, arg_2650816314);
          if (handlerHEX60gensym978_2650816297.config.consumeAllActions) {
          result_2650816312 = 3;
          break BeforeRet;
          }
          
          result_2650816312 = responseHEX60gensym978HEX60gensym979_2650816315;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym978_2650816297.config.consumeAllActions) {
          result_2650816312 = 3;
          break BeforeRet;
          }
          else {
            result_2650816312 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2650816312;

      }
      
function HEX3Aanonymous_2650816317(inputHEX60gensym978HEX60gensym980_2650816318) {
        var result_2650816319 = 0;

        BeforeRet: {
          if (handlerHEX60gensym978_2650816297.config.handleInputs) {
          var input_2650816320 = nimCopy(null, inputHEX60gensym978HEX60gensym980_2650816318, NTI33554449);
          result_2650816319 = handleInput_2650800482(self_2650816287, input_2650816320);
          break BeforeRet;
          }
          else {
            result_2650816319 = 1;
            break BeforeRet;
          }
          
        };

        return result_2650816319;

      }
      
function HEX3Aanonymous_2650816340(actionHEX60gensym981HEX60gensym982_2650816341, argHEX60gensym981HEX60gensym982_2650816342) {
        var result_2650816343 = 0;

        BeforeRet: {
          if (handlerHEX60gensym981_2650816328.config.handleActions) {
          var action_2650816344 = nimCopy(null, actionHEX60gensym981HEX60gensym982_2650816341, NTI33554449);
          var arg_2650816345 = nimCopy(null, argHEX60gensym981HEX60gensym982_2650816342, NTI33554449);
          var responseHEX60gensym981HEX60gensym982_2650816346 = handleAction_2650800474(self_2650816287, action_2650816344, arg_2650816345);
          if (handlerHEX60gensym981_2650816328.config.consumeAllActions) {
          result_2650816343 = 3;
          break BeforeRet;
          }
          
          result_2650816343 = responseHEX60gensym981HEX60gensym982_2650816346;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym981_2650816328.config.consumeAllActions) {
          result_2650816343 = 3;
          break BeforeRet;
          }
          else {
            result_2650816343 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2650816343;

      }
      
function HEX3Aanonymous_2650816348(inputHEX60gensym981HEX60gensym983_2650816349) {
        var result_2650816350 = 0;

        BeforeRet: {
          if (handlerHEX60gensym981_2650816328.config.handleInputs) {
          var input_2650816351 = nimCopy(null, inputHEX60gensym981HEX60gensym983_2650816349, NTI33554449);
          result_2650816350 = handleInput_2650800482(self_2650816287, input_2650816351);
          break BeforeRet;
          }
          else {
            result_2650816350 = 1;
            break BeforeRet;
          }
          
        };

        return result_2650816350;

      }

    self_2650816287.editor = ed_2650816288;
    registerEditor_1291845784(self_2650816287.editor, self_2650816287);
    var config_2650816289 = getEventHandlerConfig_1291849111(ed_2650816288, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym978_2650816297 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym978_2650816297.config = config_2650816289;
      handlerHEX60gensym978_2650816297.dfaInternal = buildDFA_2046820415(config_2650816289);
      handlerHEX60gensym978_2650816297.handleAction = HEX3Aanonymous_2650816309;
      handlerHEX60gensym978_2650816297.handleInput = HEX3Aanonymous_2650816317;
    };
    self_2650816287.eventHandler = handlerHEX60gensym978_2650816297;
    Label2: {
      var handlerHEX60gensym981_2650816328 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym981_2650816328.config = getEventHandlerConfig_1291849111(ed_2650816288, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym981_2650816328.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849111(ed_2650816288, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym981_2650816328.handleAction = HEX3Aanonymous_2650816340;
      handlerHEX60gensym981_2650816328.handleInput = HEX3Aanonymous_2650816348;
    };
    self_2650816287.completionEventHandler = handlerHEX60gensym981_2650816328;

  
}

function injectDependencies_1291847738(self_1291847739, ed_1291847740) {
  
}

function injectDependencies_1291847741(self_1291847739, ed_1291847740) {
    chckNilDisp(self_1291847739);
    if (isObj(self_1291847739.m_type, NTI2818573803)) {
    injectDependencies_2818591113(self_1291847739, ed_1291847740);
    }
    else {
    if (isObj(self_1291847739.m_type, NTI2650800335)) {
    injectDependencies_2650816286(self_1291847739, ed_1291847740);
    }
    else {
    if (isObj(self_1291847739.m_type, NTI2147483652)) {
    injectDependencies_1291847738(self_1291847739, ed_1291847740);
    }
    }}

  
}

function getOrDefault_1291848290(t_1291848293, key_1291848294, default_1291848295) {
    var Temporary1;

  var result_1291848296 = 0.0;

    var hcHEX60gensym20_1291848299 = [0];
    var indexHEX60gensym20_1291848539 = rawGet_1291848300(t_1291848293, key_1291848294, hcHEX60gensym20_1291848299, 0);
    if ((0 <= indexHEX60gensym20_1291848539)) {
    Temporary1 = t_1291848293.data[chckIndx(indexHEX60gensym20_1291848539, 0, (t_1291848293.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848295;
    }
    
    result_1291848296 = Temporary1;

  return result_1291848296;

}

function value_2063597618(m_2063597619) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2063597620 = 0.0;

  BeforeRet: {
    switch (m_2063597619.kind) {
    case 0:
      var Temporary1 = m_2063597619;
      if (ConstSet316[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2063597571)); }
      result_2063597620 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2063597619;
      if (ConstSet317[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2063597571)); }
      result_2063597620 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2063597619;
      if (ConstSet318[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2063597571)); }
      result_2063597620 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2063597620;

}

function apply_2063597643(m_2063597644, a_2063597645, b_2063597646) {
  var result_2063597647 = 0.0;

  BeforeRet: {
    switch (m_2063597644.kind) {
    case 0:
      var v_2063597658 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + v_2063597658);
      break BeforeRet;
      break;
    case 1:
      var v_2063597659 = value_2063597618(m_2063597644);
      result_2063597647 = v_2063597659;
      break BeforeRet;
      break;
    case 2:
      var v_2063597660 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + (v_2063597660 * (b_2063597646 - a_2063597645)));
      break BeforeRet;
      break;
    }
  };

  return result_2063597647;

}

function splitV_2063597673(r_2063597674, x_2063597675) {
  var result_2063597678 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597678.Field0 = nimCopy(result_2063597678.Field0, r_2063597674, NTI2080374789);
    result_2063597678.Field1 = nimCopy(result_2063597678.Field1, r_2063597674, NTI2080374789);
    result_2063597678.Field0.w = (apply_2063597643(x_2063597675, r_2063597674.x, (r_2063597674.x + r_2063597674.w)) - r_2063597674.x);
    result_2063597678.Field1.x = (result_2063597678.Field0.x + result_2063597678.Field0.w);
    result_2063597678.Field1.w = (result_2063597678.Field1.w - result_2063597678.Field0.w);

  return result_2063597678;

}

function percent_2063597615(value_2063597616) {
  var result_2063597617 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2063597617 = nimCopy(result_2063597617, {kind: 2, per: value_2063597616, rel: 0.0, abs: 0.0}, NTI2063597572);
    break BeforeRet;
  };

  return result_2063597617;

}

function splitH_2063597661(r_2063597662, y_2063597663) {
  var result_2063597666 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597666.Field0 = nimCopy(result_2063597666.Field0, r_2063597662, NTI2080374789);
    result_2063597666.Field1 = nimCopy(result_2063597666.Field1, r_2063597662, NTI2080374789);
    result_2063597666.Field0.h = (apply_2063597643(y_2063597663, r_2063597662.y, (r_2063597662.y + r_2063597662.h)) - r_2063597662.y);
    result_2063597666.Field1.y = (result_2063597666.Field0.y + result_2063597666.Field0.h);
    result_2063597666.Field1.h = (result_2063597666.Field1.h - result_2063597666.Field0.h);

  return result_2063597666;

}

function layoutViews_1291848725(layout_1291848726, props_1291848727, bounds_1291848728, views_1291848729) {
            var Temporary4;
            var Temporary5;

  var result_1291848730 = [];

    var mainSplit_1291848803 = getOrDefault_1291848290(props_1291848727.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848730 = nimCopy(null, [], NTI1291847196);
    var rect_1291848808 = nimCopy(null, bounds_1291848728, NTI2080374789);
    Label1: {
      var i_1291848813 = 0;
      var i_536872545 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872545 < views_1291848729)) break Label3;
            i_1291848813 = i_536872545;
            if (((i_1291848813 == 0) && (1 < views_1291848729))) {
            Temporary4 = mainSplit_1291848803;
            }
            else {
            if ((i_1291848813 == subInt(views_1291848729, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848814 = Temporary4;
            if ((modInt(i_1291848813, 2) == 0)) {
            Temporary5 = splitV_2063597673(rect_1291848808, percent_2063597615(ratio_1291848814));
            }
            else {
            Temporary5 = splitH_2063597661(rect_1291848808, percent_2063597615(ratio_1291848814));
            }
            
            var colontmp__536872547 = nimCopy(null, Temporary5, NTI2063597631);
            var view_rect_1291848815 = nimCopy(null, colontmp__536872547["Field0"], NTI2080374789);
            var remaining_1291848816 = nimCopy(null, colontmp__536872547["Field1"], NTI2080374789);
            rect_1291848808 = nimCopy(rect_1291848808, remaining_1291848816, NTI2080374789);
            var Temporary6 = nimCopy(null, view_rect_1291848815, NTI2080374789);
            result_1291848730.push(Temporary6);;
            i_536872545 = addInt(i_536872545, 1);
          }
      };
    };

  return result_1291848730;

}

function layoutViews_1291848629(layout_1291848630, props_1291848631, bounds_1291848632, views_1291848633) {
            var Temporary4;

  var result_1291848634 = [];

    var mainSplit_1291848707 = getOrDefault_1291848290(props_1291848631.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848634 = nimCopy(null, [], NTI1291847196);
    var rect_1291848712 = nimCopy(null, bounds_1291848632, NTI2080374789);
    Label1: {
      var i_1291848717 = 0;
      var i_536872549 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872549 < views_1291848633)) break Label3;
            i_1291848717 = i_536872549;
            if (((i_1291848717 == 0) && (1 < views_1291848633))) {
            Temporary4 = mainSplit_1291848707;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848633, i_1291848717));
            }
            
            var ratio_1291848718 = Temporary4;
            var colontmp__536872551 = splitH_2063597661(rect_1291848712, percent_2063597615(ratio_1291848718));
            var view_rect_1291848719 = nimCopy(null, colontmp__536872551["Field0"], NTI2080374789);
            var remaining_1291848720 = nimCopy(null, colontmp__536872551["Field1"], NTI2080374789);
            rect_1291848712 = nimCopy(rect_1291848712, remaining_1291848720, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848719, NTI2080374789);
            result_1291848634.push(Temporary5);;
            i_536872549 = addInt(i_536872549, 1);
          }
      };
    };

  return result_1291848634;

}

function layoutViews_1291848218(layout_1291848219, props_1291848220, bounds_1291848221, views_1291848222) {
            var Temporary4;

  var result_1291848223 = [];

    var mainSplit_1291848593 = getOrDefault_1291848290(props_1291848220.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848223 = nimCopy(null, [], NTI1291847196);
    var rect_1291848598 = nimCopy(null, bounds_1291848221, NTI2080374789);
    Label1: {
      var i_1291848603 = 0;
      var i_536872553 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872553 < views_1291848222)) break Label3;
            i_1291848603 = i_536872553;
            if (((i_1291848603 == 0) && (1 < views_1291848222))) {
            Temporary4 = mainSplit_1291848593;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848222, i_1291848603));
            }
            
            var ratio_1291848604 = Temporary4;
            var colontmp__536872555 = splitV_2063597673(rect_1291848598, percent_2063597615(ratio_1291848604));
            var view_rect_1291848605 = nimCopy(null, colontmp__536872555["Field0"], NTI2080374789);
            var remaining_1291848606 = nimCopy(null, colontmp__536872555["Field1"], NTI2080374789);
            rect_1291848598 = nimCopy(rect_1291848598, remaining_1291848606, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848605, NTI2080374789);
            result_1291848223.push(Temporary5);;
            i_536872553 = addInt(i_536872553, 1);
          }
      };
    };

  return result_1291848223;

}

function layoutViews_1291848188(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192) {
  var result_1291848193 = [];

  BeforeRet: {
    result_1291848193 = nimCopy(null, [nimCopy(null, bounds_1291848191, NTI2080374789)], NTI1291846985);
    break BeforeRet;
  };

  return result_1291848193;

}

function layoutViews_1291848216(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192) {
  var result_1291848217 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848189);
    if (isObj(layout_1291848189.m_type, NTI1291845645)) {
    result_1291848217 = layoutViews_1291848725(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848189.m_type, NTI1291845644)) {
    result_1291848217 = layoutViews_1291848629(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848189.m_type, NTI1291845643)) {
    result_1291848217 = layoutViews_1291848218(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848189.m_type, NTI1291845642)) {
    result_1291848217 = layoutViews_1291848188(layout_1291848189, props_1291848190, bounds_1291848191, views_1291848192);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848217;

}

function start_2785017905(self_2785017906) {
  
}

function start_2785017907(self_2785017906) {
    start_2785017905(self_2785017906);

  
}

function getDefinition_2785017911(self_2785017912, filename_2785017913, location_2785017914) {
  var result_2785017922 = null;

  return result_2785017922;

}

function getDefinition_2785017923(self_2785017912, filename_2785017913, location_2785017914) {
  var result_2785017924 = null;

  BeforeRet: {
    result_2785017924 = getDefinition_2785017911(self_2785017912, filename_2785017913, location_2785017914);
    break BeforeRet;
  };

  return result_2785017924;

}

function getCompletions_2785017925(self_2785017926, languageId_2785017927, filename_2785017928, location_2785017929) {
  var result_2785017932 = null;

  return result_2785017932;

}

function getCompletions_2785017933(self_2785017926, languageId_2785017927, filename_2785017928, location_2785017929) {
  var result_2785017934 = null;

  BeforeRet: {
    result_2785017934 = getCompletions_2785017925(self_2785017926, languageId_2785017927, filename_2785017928, location_2785017929);
    break BeforeRet;
  };

  return result_2785017934;

}

function active_2147483761(self_2147483762) {
  var result_2147483763 = false;

    result_2147483763 = self_2147483762.active;

  return result_2147483763;

}

function updateBackgroundColor_2332033102(self_2332033103, color_2332033104, frameIndex_2332033105) {
    if (!(HEX3DHEX3D_2332033092(self_2332033103.backgroundColor, color_2332033104))) {
    self_2332033103.lastHierarchyChange = nimMax(self_2332033103.lastHierarchyChange, frameIndex_2332033105);
    }
    
    self_2332033103.backgroundColor = nimCopy(self_2332033103.backgroundColor, color_2332033104, NTI2365587459);

  
}

function HEX24_2231370052(selection_2231370053) {
  var result_2231370054 = [];

  BeforeRet: {
    result_2231370054 = nimCopy(null, (HEX24_2231370049(selection_2231370053.Field0) || []).concat([45] || [],HEX24_2231370049(selection_2231370053.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370054;

}

function formatValue_2650800252(result_2650800254, result_2650800254_Idx, value_2650800255, specifier_2650800256) {
    formatValue_721420459(result_2650800254, result_2650800254_Idx, HEX24_2231370052(value_2650800255), specifier_2650800256);

  
}

function HEX2A_2382364675(c_2382364676, v_2382364677) {
  var result_2382364678 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2382364678.r = (c_2382364676.r * v_2382364677);
    result_2382364678.g = (c_2382364676.g * v_2382364677);
    result_2382364678.b = (c_2382364676.b * v_2382364677);
    result_2382364678.a = (c_2382364676.a * v_2382364677);

  return result_2382364678;

}

function changed_2332033349(self_2332033350, frameIndex_2332033351) {
  var result_2332033352 = false;

    result_2332033352 = (((frameIndex_2332033351 <= self_2332033350.lastBoundsChange) || (frameIndex_2332033351 <= self_2332033350.lastHierarchyChange)) || (frameIndex_2332033351 <= self_2332033350.lastInvalidation));

  return result_2332033352;

}

function dirty_2147483683(self_2147483684) {
  var result_2147483685 = false;

    result_2147483685 = self_2147483684.mDirty;

  return result_2147483685;

}

function resetDirty_2147483756(self_2147483757) {
    self_2147483757.mDirty = false;

  
}

function clamp_3137339717(val_3137339719, bounds_3137339720) {
  var result_3137339721 = 0;

    if (!((bounds_3137339720.a <= bounds_3137339720.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2231370049({Field0: bounds_3137339720.a, Field1: bounds_3137339720.b}) || []));
    }
    
    result_3137339721 = clamp_1660945119(val_3137339719, bounds_3137339720.a, bounds_3137339720.b);

  return result_3137339721;

}

function initTable_3137339751(initialSize_3137339754) {
  var result_3137339755 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3137339757 = slotsNeeded_1308622891(chckRange(initialSize_3137339754, 0, 2147483647));
    result_3137339755.counter = 0;
    result_3137339755.data = new Array(chckRange(correctSizeHEX60gensym10_3137339757, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3137339757, 0, 2147483647) ; ++i) { result_3137339755.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3137339755;

}

function mgetOrPut_3137339803(t_3137339806, key_3137339807, val_3137339808) {
  var result_3137339809 = null;
  var result_3137339809_Idx = 0;

    if (((t_3137339806.data).length == 0)) {
    var correctSizeHEX60gensym13_3137339858 = slotsNeeded_1308622891(32);
    t_3137339806.counter = 0;
    t_3137339806.data = new Array(chckRange(correctSizeHEX60gensym13_3137339858, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3137339858, 0, 2147483647) ; ++i) { t_3137339806.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3137339863 = [0];
    var index_3137339870 = rawGet_2650805930(t_3137339806, key_3137339807, hc_3137339863, 0);
    if ((index_3137339870 < 0)) {
    if (((t_3137339806.data).length == 0)) {
    var correctSizeHEX60gensym16_3137339919 = slotsNeeded_1308622891(32);
    t_3137339806.counter = 0;
    t_3137339806.data = new Array(chckRange(correctSizeHEX60gensym16_3137339919, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3137339919, 0, 2147483647) ; ++i) { t_3137339806.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2650806368(t_3137339806)) {
    enlarge_2650806538(t_3137339806);
    index_3137339870 = rawGetKnownHC_2650807146(t_3137339806, key_3137339807, hc_3137339863[0]);
    }
    
    index_3137339870 = subInt(-1, index_3137339870);
    rawInsert_2650806917(t_3137339806, t_3137339806, "data", key_3137339807, val_3137339808, hc_3137339863[0], index_3137339870);
    t_3137339806.counter = addInt(t_3137339806.counter, 1);
    }
    
    result_3137339809 = t_3137339806.data[chckIndx(index_3137339870, 0, (t_3137339806.data).length - 1)]; result_3137339809_Idx = "Field2";

  return [result_3137339809, result_3137339809_Idx];

}

function isSome_3137340090(self_3137340092) {
  var result_3137340093 = false;

    result_3137340093 = self_3137340092.has;

  return result_3137340093;

}

function get_3137340081(self_3137340083, otherwise_3137340084) {
    var Temporary1;

  var result_3137340085 = 0;

    if (isSome_3137340090(self_3137340083)) {
    Temporary1 = self_3137340083.val;
    }
    else {
    Temporary1 = otherwise_3137340084;
    }
    
    result_3137340085 = Temporary1;

  return result_3137340085;

}

function parseEnum_3137340056(s_3137340058, default_3137340059) {
    var Temporary1;

  var result_3137340060 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3137340058))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3137340059;
      break;
    }
    result_3137340060 = Temporary1;

  return result_3137340060;

}

function getOption_3137340030(editor_3137340032, path_3137340033, default_3137340034) {
  var result_3137340040 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3137340032 == null)) {
      result_3137340040 = default_3137340034;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3137340052 = HEX7BHEX7D_1627393316(editor_3137340032.options, nsuSplitString(path_3137340033, [46], -1));
      if ((nodeHEX60gensym18_3137340052 == null)) {
      result_3137340040 = default_3137340034;
      break BeforeRet;
      }
      
    };
    result_3137340040 = parseEnum_3137340056(getStr_1627390106(nodeHEX60gensym18_3137340052, []), default_3137340034);
    break BeforeRet;
  };

  return result_3137340040;

}

function initTable_2650801541(initialSize_2650801544) {
  var result_2650801550 = ({data: [], counter: 0});

    var correctSizeHEX60gensym39_2650801552 = slotsNeeded_1308622891(chckRange(initialSize_2650801544, 0, 2147483647));
    result_2650801550.counter = 0;
    result_2650801550.data = new Array(chckRange(correctSizeHEX60gensym39_2650801552, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_2650801552, 0, 2147483647) ; ++i) { result_2650801550.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2650801550;

}

function matches_2751463544(self_2751463545, node_2751463546, selection_2751463547) {
  var result_2751463548 = [];

  BeforeRet: {
    result_2751463548 = nimCopy(null, self_2751463545.matches(node_2751463546, {row: selection_2751463547.Field0.Field0, column: selection_2751463547.Field0.Field1, m_type: NTI2751463438}, {row: selection_2751463547.Field1.Field0, column: selection_2751463547.Field1.Field1, m_type: NTI2751463438}), NTI2751463521);
    break BeforeRet;
  };

  return result_2751463548;

}

function rawGet_2650801733(t_2650801736, key_2650801737, hc_2650801738, hc_2650801738_Idx) {
  var result_2650801739 = 0;

  BeforeRet: {
    hc_2650801738[hc_2650801738_Idx] = hash_1325400491(key_2650801737);
    if ((hc_2650801738[hc_2650801738_Idx] == 0)) {
    hc_2650801738[hc_2650801738_Idx] = 314159265;
    }
    
    if (((t_2650801736.data).length == 0)) {
    result_2650801739 = -1;
    break BeforeRet;
    }
    
    var h_2650801796 = (hc_2650801738[hc_2650801738_Idx] & (t_2650801736.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2650801736.data[chckIndx(h_2650801796, 0, (t_2650801736.data).length - 1)].Field0)) break Label2;
          if (((t_2650801736.data[chckIndx(h_2650801796, 0, (t_2650801736.data).length - 1)].Field0 == hc_2650801738[hc_2650801738_Idx]) && eqStrings(t_2650801736.data[chckIndx(h_2650801796, 0, (t_2650801736.data).length - 1)].Field1, key_2650801737))) {
          result_2650801739 = h_2650801796;
          break BeforeRet;
          }
          
          h_2650801796 = nextTry_1308622883(h_2650801796, (t_2650801736.data).length - 1);
        }
    };
    result_2650801739 = subInt(-1, h_2650801796);
  };

  return result_2650801739;

}

function hasKey_2650801726(t_2650801729, key_2650801730) {
  var result_2650801731 = false;

    var hc_2650801732 = [0];
    result_2650801731 = (0 <= rawGet_2650801733(t_2650801729, key_2650801730, hc_2650801732, 0));

  return result_2650801731;

}

function contains_2650801720(t_2650801723, key_2650801724) {
  var result_2650801725 = false;

  BeforeRet: {
    result_2650801725 = hasKey_2650801726(t_2650801723, key_2650801724);
    break BeforeRet;
  };

  return result_2650801725;

}

function HEX5BHEX5D_2650802101(t_2650802104, key_2650802105) {
  var result_2650802106 = null;

    var hcHEX60gensym22_2650802107 = [0];
    var indexHEX60gensym22_2650802114 = rawGet_2650801733(t_2650802104, key_2650802105, hcHEX60gensym22_2650802107, 0);
    if ((0 <= indexHEX60gensym22_2650802114)) {
    result_2650802106 = t_2650802104.data[chckIndx(indexHEX60gensym22_2650802114, 0, (t_2650802104.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2650802105);
    }
    

  return result_2650802106;

}

function mustRehash_2650802454(t_2650802456) {
  var result_2650802457 = false;

    if (!((t_2650802456.counter < (t_2650802456.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2650802457 = ((mulInt((t_2650802456.data).length, 2) < mulInt(t_2650802456.counter, 3)) || (subInt((t_2650802456.data).length, t_2650802456.counter) < 4));

  return result_2650802457;

}

function rawInsert_2650803003(t_2650803007, data_2650803008, data_2650803008_Idx, key_2650803009, val_2650803010, hc_2650803011, h_2650803012) {
    data_2650803008[data_2650803008_Idx][chckIndx(h_2650803012, 0, (data_2650803008[data_2650803008_Idx]).length - 1)].Field1 = nimCopy(null, key_2650803009, NTI33554449);
    data_2650803008[data_2650803008_Idx][chckIndx(h_2650803012, 0, (data_2650803008[data_2650803008_Idx]).length - 1)].Field2 = nimCopy(data_2650803008[data_2650803008_Idx][chckIndx(h_2650803012, 0, (data_2650803008[data_2650803008_Idx]).length - 1)].Field2, val_2650803010, NTI2684354563);
    data_2650803008[data_2650803008_Idx][chckIndx(h_2650803012, 0, (data_2650803008[data_2650803008_Idx]).length - 1)].Field0 = hc_2650803011;

  
}

function enlarge_2650802624(t_2650802627) {
    var n_2650802630 = [];
    n_2650802630 = new Array(chckRange(mulInt((t_2650802627.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2650802627.data).length, 2), 0, 2147483647) ; ++i) { n_2650802630[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2650802627.data; t_2650802627.data = n_2650802630; n_2650802630 = Temporary1;    Label2: {
      var i_2650802699 = 0;
      var colontmp__536872611 = 0;
      colontmp__536872611 = (n_2650802630).length - 1;
      var res_536872612 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872612 <= colontmp__536872611)) break Label4;
            i_2650802699 = res_536872612;
            var eh_2650802773 = n_2650802630[chckIndx(i_2650802699, 0, (n_2650802630).length - 1)].Field0;
            if (isFilled_1308622880(eh_2650802773)) {
            var j_2650802777 = (eh_2650802773 & (t_2650802627.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2650802627.data[chckIndx(j_2650802777, 0, (t_2650802627.data).length - 1)].Field0)) break Label6;
                  j_2650802777 = nextTry_1308622883(j_2650802777, (t_2650802627.data).length - 1);
                }
            };
            rawInsert_2650803003(t_2650802627, t_2650802627, "data", n_2650802630[chckIndx(i_2650802699, 0, (n_2650802630).length - 1)].Field1, n_2650802630[chckIndx(i_2650802699, 0, (n_2650802630).length - 1)].Field2, eh_2650802773, j_2650802777);
            }
            
            res_536872612 = addInt(res_536872612, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2650803232(t_2650803235, key_2650803236, hc_2650803237) {
  var result_2650803238 = 0;

  BeforeRet: {
    if (((t_2650803235.data).length == 0)) {
    result_2650803238 = -1;
    break BeforeRet;
    }
    
    var h_2650803294 = (hc_2650803237 & (t_2650803235.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2650803235.data[chckIndx(h_2650803294, 0, (t_2650803235.data).length - 1)].Field0)) break Label2;
          if (((t_2650803235.data[chckIndx(h_2650803294, 0, (t_2650803235.data).length - 1)].Field0 == hc_2650803237) && eqStrings(t_2650803235.data[chckIndx(h_2650803294, 0, (t_2650803235.data).length - 1)].Field1, key_2650803236))) {
          result_2650803238 = h_2650803294;
          break BeforeRet;
          }
          
          h_2650803294 = nextTry_1308622883(h_2650803294, (t_2650803235.data).length - 1);
        }
    };
    result_2650803238 = subInt(-1, h_2650803294);
  };

  return result_2650803238;

}

function HEX5BHEX5DHEX3D_2650802251(t_2650802254, key_2650802255, val_2650802256) {
    if (((t_2650802254.data).length == 0)) {
    var correctSizeHEX60gensym53_2650802310 = slotsNeeded_1308622891(32);
    t_2650802254.counter = 0;
    t_2650802254.data = new Array(chckRange(correctSizeHEX60gensym53_2650802310, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym53_2650802310, 0, 2147483647) ; ++i) { t_2650802254.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2650802315 = [0];
    var index_2650802322 = rawGet_2650801733(t_2650802254, key_2650802255, hc_2650802315, 0);
    if ((0 <= index_2650802322)) {
    t_2650802254.data[chckIndx(index_2650802322, 0, (t_2650802254.data).length - 1)].Field2 = nimCopy(t_2650802254.data[chckIndx(index_2650802322, 0, (t_2650802254.data).length - 1)].Field2, val_2650802256, NTI2684354563);
    }
    else {
      if (((t_2650802254.data).length == 0)) {
      var correctSizeHEX60gensym56_2650802449 = slotsNeeded_1308622891(32);
      t_2650802254.counter = 0;
      t_2650802254.data = new Array(chckRange(correctSizeHEX60gensym56_2650802449, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2650802449, 0, 2147483647) ; ++i) { t_2650802254.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2650802454(t_2650802254)) {
      enlarge_2650802624(t_2650802254);
      index_2650802322 = rawGetKnownHC_2650803232(t_2650802254, key_2650802255, hc_2650802315[0]);
      }
      
      index_2650802322 = subInt(-1, index_2650802322);
      rawInsert_2650803003(t_2650802254, t_2650802254, "data", key_2650802255, val_2650802256, hc_2650802315[0], index_2650802322);
      t_2650802254.counter = addInt(t_2650802254.counter, 1);
    }
    

  
}

function HEX24_2751463591(node_2751463592) {
  var result_2751463593 = [];

  BeforeRet: {
    result_2751463593 = nimCopy(null, cstrToNimstr(node_2751463592.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2751463593;

}

function formatValue_2650803744(result_2650803746, result_2650803746_Idx, value_2650803747, specifier_2650803748) {
    formatValue_721420459(result_2650803746, result_2650803746_Idx, HEX24_2751463591(value_2650803747), specifier_2650803748);

  
}

function insert_2650801469(x_2650801471, x_2650801471_Idx, item_2650801472, i_2650801473) {
    var it_2650801493 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2650801471[x_2650801471_Idx] = x_2650801471[x_2650801471_Idx] || []; x_2650801471[x_2650801471_Idx].splice(i_2650801473, 0, it_2650801493);
    x_2650801471[x_2650801471_Idx][chckIndx(i_2650801473, 0, (x_2650801471[x_2650801471_Idx]).length - 1)] = nimCopy(x_2650801471[x_2650801471_Idx][chckIndx(i_2650801473, 0, (x_2650801471[x_2650801471_Idx]).length - 1)], item_2650801472, NTI2650800330);

  
}

function splitAt_2650801407(line_2650801408, line_2650801408_Idx, index_2650801409) {
    var index_2650801410 = index_2650801409;
    var i_2650801411 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2650801411 < (line_2650801408[line_2650801408_Idx].parts).length) && ((line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)].text).length <= index_2650801410))) break Label2;
          index_2650801410 = subInt(index_2650801410, (line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)].text).length);
          i_2650801411 = addInt(i_2650801411, 1);
        }
    };
    if ((((i_2650801411 < (line_2650801408[line_2650801408_Idx].parts).length) && !((index_2650801410 == 0))) && !((index_2650801410 == (line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)].text).length)))) {
    var copy_2650801426 = nimCopy(null, line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)], NTI2650800330);
    line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2650801408[line_2650801408_Idx].parts[chckIndx(i_2650801411, 0, (line_2650801408[line_2650801408_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2650801410, 1))), NTI33554449);
    copy_2650801426.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2650801426.text, HEX2EHEX2E_1040187488(index_2650801410, 1)), NTI33554449);
    insert_2650801469(line_2650801408[line_2650801408_Idx], "parts", copy_2650801426, chckRange(addInt(i_2650801411, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2650801503(line_2650801504, line_2650801504_Idx, first_2650801505, last_2650801506, scope_2650801507, priority_2650801508) {
    var index_2650801509 = 0;
    Label1: {
      var i_2650801517 = 0;
      var colontmp__536872618 = 0;
      colontmp__536872618 = (line_2650801504[line_2650801504_Idx].parts).length - 1;
      var res_536872619 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872619 <= colontmp__536872618)) break Label3;
            i_2650801517 = res_536872619;
            if ((((first_2650801505 <= index_2650801509) && (addInt(index_2650801509, (line_2650801504[line_2650801504_Idx].parts[chckIndx(i_2650801517, 0, (line_2650801504[line_2650801504_Idx].parts).length - 1)].text).length) <= last_2650801506)) && (priority_2650801508 < line_2650801504[line_2650801504_Idx].parts[chckIndx(i_2650801517, 0, (line_2650801504[line_2650801504_Idx].parts).length - 1)].priority))) {
            line_2650801504[line_2650801504_Idx].parts[chckIndx(i_2650801517, 0, (line_2650801504[line_2650801504_Idx].parts).length - 1)].scope = nimCopy(null, scope_2650801507, NTI33554449);
            line_2650801504[line_2650801504_Idx].parts[chckIndx(i_2650801517, 0, (line_2650801504[line_2650801504_Idx].parts).length - 1)].priority = priority_2650801508;
            }
            
            index_2650801509 = addInt(index_2650801509, (line_2650801504[line_2650801504_Idx].parts[chckIndx(i_2650801517, 0, (line_2650801504[line_2650801504_Idx].parts).length - 1)].text).length);
            res_536872619 = addInt(res_536872619, 1);
          }
      };
    };

  
}

function getStyledText_2650801531(self_2650801532, i_2650801533) {
                                        var Temporary14;
                                        var Temporary15;
                      var Temporary16;
                      var Temporary17;

  var result_2650801534 = null;

  BeforeRet: {
    var line_2650801535 = nimCopy(null, self_2650801532.lines[chckIndx(i_2650801533, 0, (self_2650801532.lines).length - 1)], NTI33554449);
    var styledLine_2650801540 = [{index: i_2650801533, parts: [{text: nimCopy(null, line_2650801535, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]}];
    var regexes_2650801566 = [initTable_2650801541(32)];
    if ((((self_2650801532.tsParser == null) || (self_2650801532.highlightQuery == null)) || (self_2650801532.currentTree == null))) {
    result_2650801534 = styledLine_2650801540[0];
    break BeforeRet;
    }
    
    Label1: {
      var match_2650801598 = null;
      var colontmp__536872603 = [];
      colontmp__536872603 = matches_2751463544(self_2650801532.highlightQuery, self_2650801532.currentTree.rootNode, {Field0: {Field0: i_2650801533, Field1: 0}, Field1: {Field0: i_2650801533, Field1: (line_2650801535).length}});
      var i_536872605 = 0;
      var L_536872606 = (colontmp__536872603).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872605 < L_536872606)) break Label3;
            match_2650801598 = colontmp__536872603[chckIndx(i_536872605, 0, (colontmp__536872603).length - 1)];
            var predicates_2650801599 = self_2650801532.highlightQuery.predicatesForPattern(match_2650801598.pattern);
            Label4: {
              var capture_2650801622 = null;
              var colontmp__536872598 = [];
              colontmp__536872598 = match_2650801598.captures;
              var i_536872600 = 0;
              var L_536872601 = (colontmp__536872598).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872600 < L_536872601)) break Label6;
                    capture_2650801622 = colontmp__536872598[chckIndx(i_536872600, 0, (colontmp__536872598).length - 1)];
                    Label7: {
                      var scope_2650801623 = capture_2650801622.name;
                      var node_2650801624 = capture_2650801622.node;
                      var matches_2650801625 = true;
                      Label8: {
                        var predicate_2650801648 = null;
                        var i_536872595 = 0;
                        var L_536872596 = (predicates_2650801599).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_536872595 < L_536872596)) break Label10;
                              predicate_2650801648 = predicates_2650801599[chckIndx(i_536872595, 0, (predicates_2650801599).length - 1)];
                              if (!(matches_2650801625)) {
                              break Label8;
                              }
                              
                              Label11: {
                                var operand_2650801671 = null;
                                var colontmp__536872589 = [];
                                colontmp__536872589 = predicate_2650801648.operands;
                                var i_536872591 = 0;
                                var L_536872592 = (colontmp__536872589).length;
                                Label12: {
                                    Label13: while (true) {
                                    if (!(i_536872591 < L_536872592)) break Label13;
                                      operand_2650801671 = colontmp__536872589[chckIndx(i_536872591, 0, (colontmp__536872589).length - 1)];
                                      var value_2650801672 = cstrToNimstr(operand_2650801671.type);
                                      if (!((operand_2650801671.name == scope_2650801623))) {
                                      matches_2650801625 = false;
                                      break Label11;
                                      }
                                      
                                      switch (toJSStr(cstrToNimstr(predicate_2650801648.operator))) {
                                      case "match?":
                                        if (contains_2650801720(regexes_2650801566[0], value_2650801672)) {
                                        Temporary14 = HEX5BHEX5D_2650802101(regexes_2650801566[0], value_2650801672);
                                        }
                                        else {
                                          var regex_2650802200 = re_2684354619(value_2650801672);
                                          HEX5BHEX5DHEX3D_2650802251(regexes_2650801566[0], value_2650801672, regex_2650802200);
                                        Temporary14 = regex_2650802200;
                                        }
                                        
                                        var regex_2650803535 = nimCopy(null, Temporary14, NTI2684354563);
                                        var nodeText_2650803536 = contentString_2650801281(self_2650801532, getRange_2751463608(node_2650801624));
                                        if (!((matchLen_2684354596(nodeText_2650803536, regex_2650803535, 0) == (nodeText_2650803536).length))) {
                                        matches_2650801625 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "not-match?":
                                        if (contains_2650801720(regexes_2650801566[0], value_2650801672)) {
                                        Temporary15 = HEX5BHEX5D_2650802101(regexes_2650801566[0], value_2650801672);
                                        }
                                        else {
                                          var regex_2650803667 = re_2684354619(value_2650801672);
                                          HEX5BHEX5DHEX3D_2650802251(regexes_2650801566[0], value_2650801672, regex_2650803667);
                                        Temporary15 = regex_2650803667;
                                        }
                                        
                                        var regex_2650803724 = nimCopy(null, Temporary15, NTI2684354563);
                                        var nodeText_2650803725 = contentString_2650801281(self_2650801532, getRange_2751463608(node_2650801624));
                                        if ((matchLen_2684354596(nodeText_2650803725, regex_2650803724, 0) == (nodeText_2650803725).length)) {
                                        matches_2650801625 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "eq?":
                                        var nodeText_2650803726 = contentString_2650801281(self_2650801532, getRange_2751463608(node_2650801624));
                                        if (!(eqStrings(nodeText_2650803726, value_2650801672))) {
                                        matches_2650801625 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "not-eq?":
                                        var nodeText_2650803727 = contentString_2650801281(self_2650801532, getRange_2751463608(node_2650801624));
                                        if (eqStrings(nodeText_2650803727, value_2650801672)) {
                                        matches_2650801625 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      default: 
                                        var fmtRes_2650803732 = [mnewString(0)];
                                        fmtRes_2650803732[0].push.apply(fmtRes_2650803732[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                        add_33556386(fmtRes_2650803732, 0, predicate_2650801648.operator);
                                        fmtRes_2650803732[0].push.apply(fmtRes_2650803732[0], [39]);;
                                        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2650803732[0], NTI33554449)]);
                                        break;
                                      }
                                      i_536872591 = addInt(i_536872591, 1);
                                      if (!(((colontmp__536872589).length == L_536872592))) {
                                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                };
                              };
                              if (getFlag_1291848862(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                              var nodeText_2650803733 = contentString_2650801281(self_2650801532, getRange_2751463608(node_2650801624));
                              var fmtRes_2650803738 = [mnewString(0)];
                              formatValue_2332033544(fmtRes_2650803738, 0, match_2650801598.pattern, []);
                              fmtRes_2650803738[0].push.apply(fmtRes_2650803738[0], [58,32,39]);;
                              formatValue_721420459(fmtRes_2650803738, 0, nodeText_2650803733, []);
                              fmtRes_2650803738[0].push.apply(fmtRes_2650803738[0], [39,32]);;
                              formatValue_2650803744(fmtRes_2650803738, 0, node_2650801624, []);
                              fmtRes_2650803738[0].push.apply(fmtRes_2650803738[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                              formatValue_2650803749(fmtRes_2650803738, 0, matches_2650801625, []);
                              fmtRes_2650803738[0].push.apply(fmtRes_2650803738[0], [41]);;
                              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2650803738[0], NTI33554449)]);
                              }
                              
                              i_536872595 = addInt(i_536872595, 1);
                              if (!(((predicates_2650801599).length == L_536872596))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(matches_2650801625)) {
                      break Label7;
                      }
                      
                      var nodeRange_2650803754 = getRange_2751463608(node_2650801624);
                      if ((nodeRange_2650803754.Field0.Field0 == i_2650801533)) {
                      splitAt_2650801407(styledLine_2650801540, 0, nodeRange_2650803754.Field0.Field1);
                      }
                      
                      if ((nodeRange_2650803754.Field1.Field0 == i_2650801533)) {
                      splitAt_2650801407(styledLine_2650801540, 0, nodeRange_2650803754.Field1.Field1);
                      }
                      
                      if ((nodeRange_2650803754.Field0.Field0 < i_2650801533)) {
                      Temporary16 = 0;
                      }
                      else {
                      if ((nodeRange_2650803754.Field0.Field0 == i_2650801533)) {
                      Temporary16 = nodeRange_2650803754.Field0.Field1;
                      }
                      else {
                      Temporary16 = (line_2650801535).length;
                      }
                      }
                      var first_2650803755 = Temporary16;
                      if ((nodeRange_2650803754.Field1.Field0 < i_2650801533)) {
                      Temporary17 = 0;
                      }
                      else {
                      if ((nodeRange_2650803754.Field1.Field0 == i_2650801533)) {
                      Temporary17 = nodeRange_2650803754.Field1.Field1;
                      }
                      else {
                      Temporary17 = (line_2650801535).length;
                      }
                      }
                      var last_2650803756 = Temporary17;
                      overrideStyle_2650801503(styledLine_2650801540, 0, first_2650803755, last_2650803756, cstrToNimstr(scope_2650801623), match_2650801598.pattern);
                    };
                    i_536872600 = addInt(i_536872600, 1);
                    if (!(((colontmp__536872598).length == L_536872601))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872605 = addInt(i_536872605, 1);
            if (!(((colontmp__536872603).length == L_536872606))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2650801534 = styledLine_2650801540[0];
    break BeforeRet;
  };

  return result_2650801534;

}

function getOrDefault_3137340179(t_3137340182, key_3137340183, default_3137340184) {
    var Temporary1;

  var result_3137340185 = [];

    var hcHEX60gensym21_3137340188 = [0];
    var indexHEX60gensym21_3137340195 = rawGet_2650805930(t_3137340182, key_3137340183, hcHEX60gensym21_3137340188, 0);
    if ((0 <= indexHEX60gensym21_3137340195)) {
    Temporary1 = t_3137340182.data[chckIndx(indexHEX60gensym21_3137340195, 0, (t_3137340182.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3137340184;
    }
    
    result_3137340185 = nimCopy(null, Temporary1, NTI2650800360);

  return result_3137340185;

}

function map_3137340280(s_3137340283, op_3137340285) {
  var result_3137340286 = [];

    result_3137340286 = new Array(chckRange((s_3137340283).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3137340283).length, 0, 2147483647) ; ++i) { result_3137340286[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3137340301 = 0;
      var colontmp__536872622 = 0;
      colontmp__536872622 = (s_3137340283).length;
      var i_536872623 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872623 < colontmp__536872622)) break Label3;
            i_3137340301 = i_536872623;
            result_3137340286[chckIndx(i_3137340301, 0, (result_3137340286).length - 1)] = nimCopy(result_3137340286[chckIndx(i_3137340301, 0, (result_3137340286).length - 1)], op_3137340285(s_3137340283[chckIndx(i_3137340301, 0, (s_3137340283).length - 1)]), NTI3137339396);
            i_536872623 = addInt(i_536872623, 1);
          }
      };
    };

  return result_3137340286;

}

function clampToLine_3137339409(selection_3137339410, line_3137339411, lineLength_3137339412) {
    var Temporary1;
    var Temporary2;

  var result_3137339415 = {Field0: 0, Field1: 0};

    if ((selection_3137339410.Field0.Field0 < line_3137339411)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3137339410.Field0.Field0 == line_3137339411)) {
    Temporary1 = selection_3137339410.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3137339412;
    }
    }
    result_3137339415.Field0 = Temporary1;
    if ((selection_3137339410.Field1.Field0 < line_3137339411)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3137339410.Field1.Field0 == line_3137339411)) {
    Temporary2 = selection_3137339410.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3137339412;
    }
    }
    result_3137339415.Field1 = Temporary2;

  return result_3137339415;

}

function len_2650801359(line_2650801360) {
  var result_2650801361 = 0;

    result_2650801361 = 0;
    Label1: {
      var p_2650801384 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872627 = 0;
      var L_536872628 = (line_2650801360.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872627 < L_536872628)) break Label3;
            p_2650801384 = line_2650801360.parts[chckIndx(i_536872627, 0, (line_2650801360.parts).length - 1)];
            result_2650801361 = addInt(result_2650801361, (p_2650801384.text).length);
            i_536872627 = addInt(i_536872627, 1);
            if (!(((line_2650801360.parts).length == L_536872628))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2650801361;

}

function contains_2231370107(selection_2231370108, cursor_2231370109) {
  var result_2231370110 = false;

    result_2231370110 = (HEX3CHEX3D_2231370071(selection_2231370108.Field0, cursor_2231370109) && HEX3CHEX3D_2231370071(cursor_2231370109, selection_2231370108.Field1));

  return result_2231370110;

}

function renderTextHighlight_3137339416(panel_3137339417, app_3137339418, startOffset_3137339419, endOffset_3137339420, line_3137339421, startIndex_3137339422, selection_3137339423, selectionClamped_3137339426, part_3137339427, color_3137339428) {
  BeforeRet: {
    var left_3137339429 = 0.0;
    var right_3137339430 = 0.0;
    if ((((startIndex_3137339422 < selectionClamped_3137339426.Field1) && (selectionClamped_3137339426.Field0 < addInt(startIndex_3137339422, (part_3137339427.text).length))) && (0 < (part_3137339427.text).length))) {
    left_3137339429 = (startOffset_3137339419 + ((nimMax(0, subInt(selectionClamped_3137339426.Field0, startIndex_3137339422)) / ((part_3137339427.text).length - 0.0)) * (endOffset_3137339420 - startOffset_3137339419)));
    right_3137339430 = (startOffset_3137339419 + ((nimMin((part_3137339427.text).length, subInt(selectionClamped_3137339426.Field1, startIndex_3137339422)) / ((part_3137339427.text).length - 0.0)) * (endOffset_3137339420 - startOffset_3137339419)));
    }
    else {
    if (((((part_3137339427.text).length == 0) && contains_2231370107(selection_3137339423, {Field0: line_3137339421, Field1: startIndex_3137339422})) && !(isEmpty_2231370100(selection_3137339423)))) {
    left_3137339429 = 0.0;
    right_3137339430 = Math.ceil((charWidth_2315255952(app_3137339418.platform) * 0.5));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3137339417.children.push({anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: left_3137339429, right: right_3137339430, fillBackground: true, backgroundColor: nimCopy(null, color_3137339428, NTI2365587459), lastHierarchyChange: panel_3137339417.lastHierarchyChange, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3137339453(panel_3137339454, app_3137339455, startOffset_3137339456, endOffset_3137339457, line_3137339458, startIndex_3137339459, selections_3137339460, selectionClamped_3137339463, part_3137339464, color_3137339465) {
    Label1: {
      var i_3137339473 = 0;
      var colontmp__536872631 = 0;
      colontmp__536872631 = (selections_3137339460).length;
      var i_536872632 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872632 < colontmp__536872631)) break Label3;
            i_3137339473 = i_536872632;
            renderTextHighlight_3137339416(panel_3137339454, app_3137339455, startOffset_3137339456, endOffset_3137339457, line_3137339458, startIndex_3137339459, selections_3137339460[chckIndx(i_3137339473, 0, (selections_3137339460).length - 1)], selectionClamped_3137339463[chckIndx(i_3137339473, 0, (selectionClamped_3137339463).length - 1)], part_3137339464, color_3137339465);
            i_536872632 = addInt(i_536872632, 1);
          }
      };
    };

  
}

function color_3137340447(theme_3137340449, names_3137340450, default_3137340451) {
  var result_3137340452 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3137340456 = [];
      var i_536872635 = 0;
      var L_536872636 = (names_3137340450).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872635 < L_536872636)) break Label3;
            name_3137340456 = names_3137340450[chckIndx(i_536872635, 0, (names_3137340450).length - 1)];
            if (contains_3053453891(theme_3137340449.colors, name_3137340456)) {
            result_3137340452 = nimCopy(result_3137340452, HEX5BHEX5D_3053453981(theme_3137340449.colors, name_3137340456), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872635 = addInt(i_536872635, 1);
            if (!(((names_3137340450).length == L_536872636))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3137340452 = nimCopy(result_3137340452, color_2449473569(default_3137340451), NTI2365587459);
    break BeforeRet;
  };

  return result_3137340452;

}

function color_2449473587(c_2449473588) {
  var result_2449473589 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473589.r = (c_2449473588.r / 255.0);
    result_2449473589.g = (c_2449473588.g / 255.0);
    result_2449473589.b = (c_2449473588.b / 255.0);
    result_2449473589.a = (c_2449473588.a / 255.0);

  return result_2449473589;

}

function color_3137340578(theme_3137340580, names_3137340581, default_3137340582) {
  var result_3137340583 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3137340587 = [];
      var i_536872639 = 0;
      var L_536872640 = (names_3137340581).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872639 < L_536872640)) break Label3;
            name_3137340587 = names_3137340581[chckIndx(i_536872639, 0, (names_3137340581).length - 1)];
            if (contains_3053453891(theme_3137340580.colors, name_3137340587)) {
            result_3137340583 = nimCopy(result_3137340583, HEX5BHEX5D_3053453981(theme_3137340580.colors, name_3137340587), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872639 = addInt(i_536872639, 1);
            if (!(((names_3137340581).length == L_536872640))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3137340583 = nimCopy(result_3137340583, color_2449473587(default_3137340582), NTI2365587459);
    break BeforeRet;
  };

  return result_3137340583;

}

function rgba_2365587557(r_2365587558, g_2365587559, b_2365587560, a_2365587561) {
  var result_2365587562 = ({r: 0, g: 0, b: 0, a: 0});

    result_2365587562 = nimCopy(result_2365587562, {r: r_2365587558, g: g_2365587559, b: b_2365587560, a: a_2365587561}, NTI2365587461);

  return result_2365587562;

}

function isSome_3053454170(self_3053454172) {
  var result_3053454173 = false;

    result_3053454173 = self_3053454172.has;

  return result_3053454173;

}

function get_3137340807(self_3137340809, otherwise_3137340810) {
    var Temporary1;

  var result_3137340811 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3053454170(self_3137340809)) {
    Temporary1 = self_3137340809.val;
    }
    else {
    Temporary1 = otherwise_3137340810;
    }
    
    result_3137340811 = nimCopy(result_3137340811, Temporary1, NTI2365587459);

  return result_3137340811;

}

function getCascading_2483028172(table_2483028174, key_2483028175, default_2483028176) {
  var result_2483028177 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2483028220(table_2483028174, key_2483028175)) {
    result_2483028177 = nimCopy(result_2483028177, HEX5BHEX5D_2483028525(table_2483028174, key_2483028175), NTI2483027972);
    break BeforeRet;
    }
    
    var index_2483028604 = nsuRFindStr(key_2483028175, [46], 0, -1);
    if (!((index_2483028604 == -1))) {
    result_2483028177 = nimCopy(result_2483028177, getCascading_2483028172(table_2483028174, HEX5BHEX5D_855639291(key_2483028175, HEX2EHEX2E_805306418(0, subInt(index_2483028604, 1))), default_2483028176), NTI2483027972);
    break BeforeRet;
    }
    
    result_2483028177 = nimCopy(result_2483028177, default_2483028176, NTI2483027972);
    break BeforeRet;
  };

  return result_2483028177;

}

function tokenColor_3137340779(theme_3137340781, name_3137340782, default_3137340783) {
  var result_3137340784 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3137340784 = nimCopy(result_3137340784, get_3137340807(getCascading_2483028172(theme_3137340781.tokenColors, name_3137340782, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2449473569(default_3137340783)), NTI2365587459);
    break BeforeRet;
  };

  return result_3137340784;

}

function updateWidget_3137339474(self_3137339475, app_3137339476, widget_3137339477, frameIndex_3137339478) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary17;
    var Temporary19;
              
function renderLine_3137340103(i_3137340104, down_3137340105) {
                  
function HEX3Aanonymous_3137340249(s_3137340257) {
                    var result_3137340260 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3137340260 = nimCopy(result_3137340260, normalized_2231370094(s_3137340257), NTI2231369739);

                    return result_3137340260;

                  }
                  
function HEX3Aanonymous_3137340269(s_3137340276) {
                    var result_3137340279 = {Field0: 0, Field1: 0};

                      result_3137340279 = nimCopy(result_3137340279, clampToLine_3137339409(s_3137340276, i_3137340104, len_2650801359(styledText_3137340108)), NTI3137339396);

                    return result_3137340279;

                  }
                  
function HEX3Aanonymous_3137340388(s_3137340396) {
                    var result_3137340399 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3137340399 = nimCopy(result_3137340399, normalized_2231370094(s_3137340396), NTI2231369739);

                    return result_3137340399;

                  }
                  
function HEX3Aanonymous_3137340408(s_3137340415) {
                    var result_3137340418 = {Field0: 0, Field1: 0};

                      result_3137340418 = nimCopy(result_3137340418, clampToLine_3137339409(s_3137340415, i_3137340104, len_2650801359(styledText_3137340108)), NTI3137339396);

                    return result_3137340418;

                  }
                          var Temporary4;
                                  var Temporary8;
                          var Temporary9;

                var result_3137340106 = false;

                BeforeRet: {
                  var top_3137340107 = ((subInt(i_3137340104, self_3137339475.previousBaseIndex) * totalLineHeight_3137339480) + self_3137339475.scrollOffset);
                  if ((contentPanel_3137339643.lastBounds.h <= top_3137340107)) {
                  result_3137340106 = !(down_3137340105);
                  break BeforeRet;
                  }
                  
                  if (((top_3137340107 + totalLineHeight_3137339480) <= 0.0)) {
                  result_3137340106 = down_3137340105;
                  break BeforeRet;
                  }
                  
                  var styledText_3137340108 = getStyledText_2650801531(self_3137339475.document, i_3137340104);
                  var selectionsNormalizedOnLine_3137340268 = map_2650800554(getOrDefault_3137340179(selectionsPerLine_3137339762[0], i_3137340104, []), HEX3Aanonymous_3137340249);
                  var selectionsClampedOnLine_3137340311 = map_3137340280(selectionsNormalizedOnLine_3137340268, HEX3Aanonymous_3137340269);
                  var highlightsNormalizedOnLine_3137340407 = map_2650800554(getOrDefault_3137340179(highlightsPerLine_3137340017, i_3137340104, []), HEX3Aanonymous_3137340388);
                  var highlightsClampedOnLine_3137340425 = map_3137340280(highlightsNormalizedOnLine_3137340407, HEX3Aanonymous_3137340408);
                  var lineWidget_3137340426 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), left: 1.0, right: -1.0, top: top_3137340107, bottom: (top_3137340107 + totalLineHeight_3137339480), lastHierarchyChange: frameIndex_3137339478, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  var startOffset_3137340427 = [0.0];
                  var startIndex_3137340428 = 0;
                  Label1: {
                    var partIndex_3137340434 = 0;
                    var part_3137340435 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536872574 = 0;
                    var L_536872575 = (styledText_3137340108.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536872574 < L_536872575)) break Label3;
                          partIndex_3137340434 = i_536872574;
                          part_3137340435 = nimCopy(part_3137340435, styledText_3137340108.parts[chckIndx(i_536872574, 0, (styledText_3137340108.parts).length - 1)], NTI2650800330);
                          var width_3137340436 = ((part_3137340435.text).length * charWidth_3137339481);
                          var selectionColor_3137340442 = color_3137339482(app_3137339476.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(200, 200, 200));
                          renderTextHighlight_3137339453(lineWidget_3137340426, app_3137339476, startOffset_3137340427[0], (startOffset_3137340427[0] + width_3137340436), i_3137340104, startIndex_3137340428, selectionsNormalizedOnLine_3137340268, selectionsClampedOnLine_3137340311, part_3137340435, selectionColor_3137340442);
                          var highlightColor_3137340562 = color_3137340447(app_3137339476.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2365587543(200, 200, 200));
                          renderTextHighlight_3137339453(lineWidget_3137340426, app_3137339476, startOffset_3137340427[0], (startOffset_3137340427[0] + width_3137340436), i_3137340104, startIndex_3137340428, highlightsNormalizedOnLine_3137340407, highlightsClampedOnLine_3137340425, part_3137340435, highlightColor_3137340562);
                          var isWide_3137340572 = getOption_2650808286(app_3137339476, getContextWithMode_2650808280(self_3137339475, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
                          if (isWide_3137340572) {
                          Temporary4 = 1.0;
                          }
                          else {
                          Temporary4 = 0.2;
                          }
                          
                          var cursorWidth_3137340573 = Temporary4;
                          var cursorColor_3137340693 = color_3137340578(app_3137339476.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2365587557(255, 255, 255, 127));
                          Label5: {
                            var selection_3137340773 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536872570 = [];
                            colontmp__536872570 = getOrDefault_3137340179(selectionsPerLine_3137339762[0], i_3137340104, []);
                            var i_536872571 = 0;
                            var L_536872572 = (colontmp__536872570).length;
                            Label6: {
                                Label7: while (true) {
                                if (!(i_536872571 < L_536872572)) break Label7;
                                  selection_3137340773 = colontmp__536872570[chckIndx(i_536872571, 0, (colontmp__536872570).length - 1)];
                                  if ((((selection_3137340773.Field1.Field0 == i_3137340104) && (startIndex_3137340428 <= selection_3137340773.Field1.Field1)) && (selection_3137340773.Field1.Field1 <= addInt(startIndex_3137340428, (part_3137340435.text).length)))) {
                                  if (((part_3137340435.text).length == 0)) {
                                  Temporary8 = 0.0;
                                  }
                                  else {
                                  Temporary8 = ((subInt(selection_3137340773.Field1.Field1, startIndex_3137340428) / (part_3137340435.text).length) * width_3137340436);
                                  }
                                  
                                  var offsetFromPartStart_3137340774 = Temporary8;
                                  lineWidget_3137340426.children.push({anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: (startOffset_3137340427[0] + offsetFromPartStart_3137340774), right: ((startOffset_3137340427[0] + offsetFromPartStart_3137340774) + (cursorWidth_3137340573 * charWidth_3137339481)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3137340693, NTI2365587459), lastHierarchyChange: frameIndex_3137339478, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536872571 = addInt(i_536872571, 1);
                                  if (!(((colontmp__536872570).length == L_536872572))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3137340435.scope).length == 0)) {
                          Temporary9 = textColor_3137339639;
                          }
                          else {
                          Temporary9 = tokenColor_3137340779(app_3137339476.theme, part_3137340435.scope, rgb_2365587543(255, 200, 200));
                          }
                          
                          var color_3137340819 = nimCopy(null, Temporary9, NTI2365587459);
                          var partWidget_3137340820 = {text: nimCopy(null, part_3137340435.text, NTI33554449), anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: startOffset_3137340427[0], right: (startOffset_3137340427[0] + width_3137340436), foregroundColor: nimCopy(null, color_3137340819, NTI2365587459), lastHierarchyChange: frameIndex_3137339478, m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                          styledText_3137340108.parts[chckIndx(partIndex_3137340434, 0, (styledText_3137340108.parts).length - 1)].bounds = nimCopy(styledText_3137340108.parts[chckIndx(partIndex_3137340434, 0, (styledText_3137340108.parts).length - 1)].bounds, rect_2080374802(partWidget_3137340820.left, lineWidget_3137340426.top, (partWidget_3137340820.right - partWidget_3137340820.left), (lineWidget_3137340426.bottom - lineWidget_3137340426.top)), NTI2080374789);
                          HEX2BHEX3D_855640304(startOffset_3137340427, 0, width_3137340436);
                          startIndex_3137340428 = addInt(startIndex_3137340428, (part_3137340435.text).length);
                          lineWidget_3137340426.children.push(partWidget_3137340820);;
                          i_536872574 = addInt(i_536872574, 1);
                          if (!(((styledText_3137340108.parts).length == L_536872575))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  self_3137339475.lastRenderedLines.push(styledText_3137340108);;
                  contentPanel_3137339643.children.push(lineWidget_3137340426);;
                  result_3137340106 = true;
                  break BeforeRet;
                };

                return result_3137340106;

              }

  BeforeRet: {
    var lineHeight_3137339479 = lineHeight_2315255947(app_3137339476.platform);
    var totalLineHeight_3137339480 = totalLineHeight_2315255960(app_3137339476.platform);
    var charWidth_3137339481 = charWidth_2315255952(app_3137339476.platform);
    var textColor_3137339639 = color_3137339482(app_3137339476.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    var headerPanel_3137339640 = null;
    var headerPart1Text_3137339641 = null;
    var headerPart2Text_3137339642 = null;
    var contentPanel_3137339643 = null;
    if (((widget_3137339477.children).length == 0)) {
    headerPanel_3137339640 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), bottom: totalLineHeight_3137339480, lastHierarchyChange: frameIndex_3137339478, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3137339477.children.push(headerPanel_3137339640);;
    headerPart1Text_3137339641 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3137339478, foregroundColor: nimCopy(null, textColor_3137339639, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3137339640.children.push(headerPart1Text_3137339641);;
    headerPart2Text_3137339642 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152992(1.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), pivot: vec2_2097152992(1.0, 0.0), lastHierarchyChange: frameIndex_3137339478, foregroundColor: nimCopy(null, textColor_3137339639, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3137339640.children.push(headerPart2Text_3137339642);;
    contentPanel_3137339643 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), top: totalLineHeight_3137339480, lastHierarchyChange: frameIndex_3137339478, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3137339643.maskContent = true;
    widget_3137339477.children.push(contentPanel_3137339643);;
    layoutWidget_2332033348(headerPanel_3137339640, widget_3137339477.lastBounds, frameIndex_3137339478, app_3137339476.platform.layoutOptions);
    layoutWidget_2332033348(contentPanel_3137339643, widget_3137339477.lastBounds, frameIndex_3137339478, app_3137339476.platform.layoutOptions);
    }
    else {
      headerPanel_3137339640 = widget_3137339477.children[chckIndx(0, 0, (widget_3137339477.children).length - 1)];
      headerPart1Text_3137339641 = headerPanel_3137339640.children[chckIndx(0, 0, (headerPanel_3137339640.children).length - 1)];
      headerPart2Text_3137339642 = headerPanel_3137339640.children[chckIndx(1, 0, (headerPanel_3137339640.children).length - 1)];
      contentPanel_3137339643 = widget_3137339477.children[chckIndx(1, 0, (widget_3137339477.children).length - 1)];
    }
    
    if (self_3137339475.renderHeader) {
    headerPanel_3137339640.bottom = totalLineHeight_3137339480;
    contentPanel_3137339643.top = totalLineHeight_3137339480;
    if (active_2147483761(self_3137339475)) {
    Temporary1 = color_3137339482(app_3137339476.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 60));
    }
    else {
    Temporary1 = color_3137339482(app_3137339476.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 45));
    }
    
    var color_3137339673 = nimCopy(null, Temporary1, NTI2365587459);
    updateBackgroundColor_2332033102(headerPanel_3137339640, color_3137339673, frameIndex_3137339478);
    if (((self_3137339475.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3137339475.currentMode;
    }
    
    var mode_3137339674 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3137339679 = [mnewString(0)];
    fmtRes_3137339679[0].push.apply(fmtRes_3137339679[0], [32]);;
    formatValue_721420459(fmtRes_3137339679, 0, mode_3137339674, []);
    fmtRes_3137339679[0].push.apply(fmtRes_3137339679[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3137339679, 0, self_3137339475.document.filename, []);
    fmtRes_3137339679[0].push.apply(fmtRes_3137339679[0], [32]);;
    headerPart1Text_3137339641.text = nimCopy(null, fmtRes_3137339679[0], NTI33554449);
    var fmtRes_3137339684 = [mnewString(0)];
    fmtRes_3137339684[0].push.apply(fmtRes_3137339684[0], [32]);;
    formatValue_2650800252(fmtRes_3137339684, 0, selection_2650800624(self_3137339475), []);
    fmtRes_3137339684[0].push.apply(fmtRes_3137339684[0], [32,45,32]);;
    formatValue_2332033544(fmtRes_3137339684, 0, self_3137339475.id, []);
    fmtRes_3137339684[0].push.apply(fmtRes_3137339684[0], [32]);;
    headerPart2Text_3137339642.text = nimCopy(null, fmtRes_3137339684[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2332033110(headerPanel_3137339640, frameIndex_3137339478);
    }
    else {
      headerPanel_3137339640.bottom = 0.0;
      contentPanel_3137339643.top = 0.0;
    }
    
    self_3137339475.lastContentBounds = nimCopy(self_3137339475.lastContentBounds, contentPanel_3137339643.lastBounds, NTI2080374789);
    widget_3137339477.lastHierarchyChange = nimMax(widget_3137339477.lastHierarchyChange, headerPanel_3137339640.lastHierarchyChange);
    if (active_2147483761(self_3137339475)) {
    Temporary3 = color_3137339482(app_3137339476.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2382364675(color_3137339482(app_3137339476.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2332033102(contentPanel_3137339643, Temporary3, frameIndex_3137339478);
      if (changed_2332033349(contentPanel_3137339643, frameIndex_3137339478)) Temporary5 = true; else {        Temporary5 = dirty_2147483683(self_3137339475);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3137339476.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2147483756(self_3137339475);
    if (contentPanel_3137339643.children.length < 0) { for (var i = contentPanel_3137339643.children.length ; i < 0 ; ++i) contentPanel_3137339643.children.push(null); }
               else { contentPanel_3137339643.children.length = 0; };
    Label6: {
      self_3137339475.previousBaseIndex = clamp_3137339717(self_3137339475.previousBaseIndex, HEX2EHEX2E_805306418(0, (self_3137339475.document.lines).length));
      Label7: {
          Label8: while (true) {
          if (!((self_3137339475.scrollOffset < 0.0) && (addInt(self_3137339475.previousBaseIndex, 1) < (self_3137339475.document.lines).length))) break Label8;
            if ((contentPanel_3137339643.lastBounds.h <= (self_3137339475.scrollOffset + totalLineHeight_3137339480))) {
            break Label7;
            }
            
            self_3137339475.previousBaseIndex = addInt(self_3137339475.previousBaseIndex, 1);
            HEX2BHEX3D_855640304(self_3137339475, "scrollOffset", totalLineHeight_3137339480);
          }
      };
      Label9: {
          Label10: while (true) {
          if (!((contentPanel_3137339643.lastBounds.h < self_3137339475.scrollOffset) && (0 < self_3137339475.previousBaseIndex))) break Label10;
            if (((self_3137339475.scrollOffset - lineHeight_3137339479) <= 0.0)) {
            break Label9;
            }
            
            self_3137339475.previousBaseIndex = subInt(self_3137339475.previousBaseIndex, 1);
            HEX2DHEX3D_2650816895(self_3137339475, "scrollOffset", totalLineHeight_3137339480);
          }
      };
    };
    var selectionsPerLine_3137339762 = [initTable_3137339751(32)];
    Label11: {
      var s_3137339766 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872563 = [];
      colontmp__536872563 = selections_2650800621(self_3137339475);
      var i_536872564 = 0;
      var L_536872565 = (colontmp__536872563).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872564 < L_536872565)) break Label13;
            s_3137339766 = colontmp__536872563[chckIndx(i_536872564, 0, (colontmp__536872563).length - 1)];
            var sn_3137339767 = normalized_2231370094(s_3137339766);
            Label14: {
              var line_3137339772 = 0;
              var res_536872561 = sn_3137339767.Field0.Field0;
              Label15: {
                  Label16: while (true) {
                  if (!(res_536872561 <= sn_3137339767.Field1.Field0)) break Label16;
                    line_3137339772 = res_536872561;
                    var Temporary18 = nimCopy(null, s_3137339766, NTI2231369739);
                    (Temporary17 = mgetOrPut_3137339803(selectionsPerLine_3137339762[0], line_3137339772, []), Temporary17)[0][Temporary17[1]].push(Temporary18);;
                    res_536872561 = addInt(res_536872561, 1);
                  }
              };
            };
            i_536872564 = addInt(i_536872564, 1);
            if (!(((colontmp__536872563).length == L_536872565))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3137340017 = nimCopy(null, self_3137339475.searchResults, NTI2650800366);
    var lineNumbers_3137340095 = get_3137340081(self_3137339475.lineNumbers, getOption_3137340030(app_3137339476, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3137340095) {
    case 1:
      Temporary19 = addInt(self_3137339475.previousBaseIndex, ((((contentPanel_3137339643.lastBounds.h - self_3137339475.scrollOffset) / totalLineHeight_3137339480)) | 0));
      break;
    case 2:
      Temporary19 = 99;
      break;
    default: 
      Temporary19 = 0;
      break;
    }
    var maxLineNumber_3137340096 = Temporary19;
    var maxLineNumberLen_3137340097 = addInt((HEX24_369098760(maxLineNumber_3137340096)).length, 1);
    var cursorLine_3137340098 = selection_2650800624(self_3137339475).Field1.Field0;
    if (self_3137339475.lastRenderedLines.length < 0) { for (var i = self_3137339475.lastRenderedLines.length ; i < 0 ; ++i) self_3137339475.lastRenderedLines.push(null); }
               else { self_3137339475.lastRenderedLines.length = 0; };
    Label20: {
      var i_3137340866 = 0;
      var colontmp__536872577 = 0;
      colontmp__536872577 = (self_3137339475.document.lines).length - 1;
      var res_536872578 = self_3137339475.previousBaseIndex;
      Label21: {
          Label22: while (true) {
          if (!(res_536872578 <= colontmp__536872577)) break Label22;
            i_3137340866 = res_536872578;
            if (!(renderLine_3137340103(i_3137340866, true))) {
            break Label20;
            }
            
            res_536872578 = addInt(res_536872578, 1);
          }
      };
    };
    Label23: {
      var k_3137340871 = 0;
      var res_536872581 = 1;
      Label24: {
          Label25: while (true) {
          if (!(res_536872581 <= self_3137339475.previousBaseIndex)) break Label25;
            k_3137340871 = res_536872581;
            var i_3137340872 = subInt(self_3137339475.previousBaseIndex, k_3137340871);
            if (!(renderLine_3137340103(i_3137340872, false))) {
            break Label23;
            }
            
            res_536872581 = addInt(res_536872581, 1);
          }
      };
    };
    contentPanel_3137339643.lastHierarchyChange = frameIndex_3137339478;
    widget_3137339477.lastHierarchyChange = nimMax(widget_3137339477.lastHierarchyChange, contentPanel_3137339643.lastHierarchyChange);
    self_3137339475.lastContentBounds = nimCopy(self_3137339475.lastContentBounds, contentPanel_3137339643.lastBounds, NTI2080374789);
  };

  
}

function updateWidget_3120562180(self_3120562181, app_3120562182, widget_3120562183, frameIndex_3120562184) {
  
}

function updateWidget_3120562185(self_3120562181, app_3120562182, widget_3120562183, frameIndex_3120562184) {
    chckNilDisp(self_3120562181);
    if (isObj(self_3120562181.m_type, NTI2650800335)) {
    updateWidget_3137339474(self_3120562181, app_3120562182, widget_3120562183, frameIndex_3120562184);
    }
    else {
    if (isObj(self_3120562181.m_type, NTI2147483652)) {
    updateWidget_3120562180(self_3120562181, app_3120562182, widget_3120562183, frameIndex_3120562184);
    }
    }

  
}
